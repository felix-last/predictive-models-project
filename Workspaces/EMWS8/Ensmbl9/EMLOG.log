*------------------------------------------------------------*
User:                Lukas Fahr
Date:                19. April 2016
Time:                11.18 Uhr
Site:                70107571
Platform:            X64_7PRO
Maintenance Release: 9.03.01M2P081512
EM Version:          12.1
* 
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "19. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "11.17 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Training Log
Date:                19. April 2016
Time:                11.17 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O05S5RVZ
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl9\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O05S5RVZ new;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOG
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl9\EMLOG.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "19. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "11.17 Uhr" );
MPRINT(EM_DIAGRAM):   file _LOG;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                Lukas Fahr";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "Site:                70107571";
MPRINT(EM_DIAGRAM):   put "Platform:            X64_7PRO";
MPRINT(EM_DIAGRAM):   put "Maintenance Release: 9.03.01M2P081512";
MPRINT(EM_DIAGRAM):   put "EM Version:          12.1";
MPRINT(EM_DIAGRAM):   put "* ";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl9\EMTRAIN.log" encoding="UTF-8" NOBOM;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _LOG MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_LOGIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _LOGIN
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl9\EMSCORE.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl9\EMREPORT.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    filename _LOG;
MPRINT(EM_DIAGRAM):    filename _OUT
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl9\EMOUTPUT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "19. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "11.17 Uhr" );
MPRINT(EM_DIAGRAM):   file _OUT;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                Lukas Fahr";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl9\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _OUT MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_OUTIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl9\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl9\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    filename _OUT;
MPRINT(EM_DIAGRAM):    filename _emtool_
'C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl9\EMRUNSTATUS.xml' encoding="UTF-8"
NOBOM;
MPRINT(EM_DIAGRAM):    filename _emtool_
'C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl9\EMRUNSTATUS.xml' encoding="UTF-8"
NOBOM;
(FREQ=(WHERE='ROLE = "FREQ"' DEFAULT='Y' RULE=(RULE1=(DESCRIPTION='USEATMOST1FREQ'
VALUES=(VALUE1='Y' )[172757] MAX=1 EXCEEDMAXVALUE='' )[172761] )[172755]
VALIDCHOICES=(CHOICE1='Y' )[172759] )[172115] INPUTREJECT=(WHERE='ROLE in("INPUT",
"REJECTED")' DEFAULT='D' VALIDCHOICES=(CHOICE1='D' )[172765]
RULE=(RULE1=(DESCRIPTION='USEATLEAST1INPUTREJECT' WHERE='(ROLE = "INPUT" and USE in("Y" "D"))
or (ROLE = "REJECTED" and USE = "Y")' MIN=. )[172769] )[172767] )[172763] TARGET=(WHERE='ROLE
= "TARGET"' DEFAULT='Y' VALIDCHOICES=(CHOICE1='Y' CHOICE2='N' )[172773]
RULE=(RULE1=(DESCRIPTION='METADATA.USE1TARGET' VALUES=(VALUE1='Y' )[172779] MIN=1 MAX=1
EXCEEDMAXVALUE='N' )[172777] )[172775] )[172771] )[172753]
1148429    proc freq data=EMWS8.Ensmbl9_VariableSet noprint;
MPRINT(EM_DIAGRAM):    proc freq data=EMWS8.Ensmbl9_VariableSet noprint;
1148430    table ROLE*LEVEL/out=WORK.Ensmbl9META;
MPRINT(EM_DIAGRAM):   table ROLE*LEVEL/out=WORK.Ensmbl9META;
1148431    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set EMWS8.ENSMBL9_VARIABLESET.
NOTE: The data set WORK.ENSMBL9META has 7 observations and 4 variables.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1148432    proc print data=WORK.Ensmbl9META label noobs;
MPRINT(EM_DIAGRAM):   proc print data=WORK.Ensmbl9META label noobs;
1148433    var ROLE LEVEL COUNT;
MPRINT(EM_DIAGRAM):   var ROLE LEVEL COUNT;
1148434    label ROLE = "%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel, NOQUOTE))" LEVEL =
1148434  ! "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" COUNT =
1148434  ! "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label ROLE = "Role" LEVEL = "Measurement Level" COUNT = "Frequency
Count";
1148435    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
1148436    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_varSummary_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Variable Summary";
MPRINT(EM_DIAGRAM):   run;
1148437    run;
 
NOTE: There were 7 observations read from the data set WORK.ENSMBL9META.
NOTE: The PROCEDURE PRINT printed page 950.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
1148438    title10;
MPRINT(EM_DIAGRAM):   title10;
1148439    %let EMNORLEN = %DMNORLEN;
MPRINT(EM_DIAGRAM):
EMWS8.Reg9_TRAIN EMWS8.Reg9_TRAIN
EMWS8.Reg9_TRAIN EMWS8.Reg9_TRAIN EMWS8 Reg9_TRAIN
EMWS8.Reg9_TRAIN EMWS8.Reg9_TRAIN
EMWS8.Reg9_TRAIN EMWS8.Reg9_TRAIN EMWS8 Reg9_TRAIN
MPRINT(EM_DIAGRAM):    proc dmdb data=EMWS8.Reg9_TRAIN
classout=WORK._DMDBCLASSTARGET(keep=NAME NRAW CRAW LEVEL FREQUENCY NMISSPERCENT);
MPRINT(EM_DIAGRAM):   class DepVar(DESC) ;
MPRINT(EM_DIAGRAM):   run;
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _INIT >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL setMetaData >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL setMetaData >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _term >>
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set WORK._DMDBCLASSTARGET;
MPRINT(EM_DIAGRAM):   where ^(NRAW eq . and CRAW eq '') and NAME="DepVar";
MPRINT(EM_DIAGRAM):   if _N_=1 then call symput('_newevent', strip(LEVEL));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK._DMDBCLASSTARGET out=_TEMPCLASS(keep=LEVEL FREQUENCY
NMISSPERCENT rename=(LEVEL=DepVar));
MPRINT(EM_DIAGRAM):   by LEVEL;
MPRINT(EM_DIAGRAM):   where ^(NRAW eq . and CRAW eq '') and NAME="DepVar";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _TEMPCLASS;
MPRINT(EM_DIAGRAM):   set _TEMPCLASS;
MPRINT(EM_DIAGRAM):   NMISSPERCENT= NMISSPERCENT/100;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS8.Reg9_DepVar_DD out=_sortedDecdata;
MPRINT(EM_DIAGRAM):   by DepVar;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   merge _TEMPCLASS(in=_a) _sortedDecdata(in=_b);
MPRINT(EM_DIAGRAM):   by DepVar;
MPRINT(EM_DIAGRAM):   if (_a and ^_b) or (^_a and _b) then call symput('_emresetDec', '1');
MPRINT(EM_DIAGRAM):   run;
1148468    data WORK.Ensmbl9_EVENT(KEEP=VARIABLE LABEL LEVEL EVENT NUMLEVELS ORDER);
MPRINT(EM_DIAGRAM):    data WORK.Ensmbl9_EVENT(KEEP=VARIABLE LABEL LEVEL EVENT NUMLEVELS
ORDER);
1148469    length ORDER $20;
MPRINT(EM_DIAGRAM):   length ORDER $20;
1148470    label VARIABLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel,  NOQUOTE))"
1148470  ! EVENT = "%sysfunc(sasmsg(sashelp.dmine, assmt_event_vlabel, NOQUOTE))" NUMLEVELS =
1148470  ! "%sysfunc(sasmsg(sashelp.dmine, rpt_numcat_vlabel, NOQUOTE))" LEVEL =
1148471       "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" ORDER =
1148471  ! "%sysfunc(sasmsg(sashelp.dmine, meta_order_vlabel, NOQUOTE))" LABEL =
1148471  ! "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label VARIABLE = "Target" EVENT = "Event" NUMLEVELS = "Number of Levels"
LEVEL = "Measurement Level" ORDER = "Order" LABEL = "Label";
1148472    set EMWS8.REG9_DEPVAR_DM( where=(_TYPE_="TARGET"));
MPRINT(EM_DIAGRAM):   set EMWS8.REG9_DEPVAR_DM( where=(_TYPE_="TARGET"));
1148473    NumLevels=2;
MPRINT(EM_DIAGRAM):   NumLevels=2;
1148474    select(upcase(ORDER));
MPRINT(EM_DIAGRAM):   select(upcase(ORDER));
1148475    when('DESC') ORDER = 'Descending';
MPRINT(EM_DIAGRAM):   when('DESC') ORDER = 'Descending';
1148476    when('ASC') ORDER = 'Ascending';
MPRINT(EM_DIAGRAM):   when('ASC') ORDER = 'Ascending';
1148477    when('FMTDESC') ORDER = 'Formatted Descending';
MPRINT(EM_DIAGRAM):   when('FMTDESC') ORDER = 'Formatted Descending';
1148478    when('FMTASC') ORDER = 'Formatted Ascending';
MPRINT(EM_DIAGRAM):   when('FMTASC') ORDER = 'Formatted Ascending';
1148479    otherwise ORDER = 'Descending';
MPRINT(EM_DIAGRAM):   otherwise ORDER = 'Descending';
1148480    end;
MPRINT(EM_DIAGRAM):   end;
1148481    output;
MPRINT(EM_DIAGRAM):   output;
1148482    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.REG9_DEPVAR_DM.
      WHERE _TYPE_='TARGET';
NOTE: The data set WORK.ENSMBL9_EVENT has 1 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1148483    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
1148484    proc print data=WORK.Ensmbl9_EVENT noobs label;
MPRINT(EM_DIAGRAM):   proc print data=WORK.Ensmbl9_EVENT noobs label;
1148485    var VARIABLE EVENT LEVEL NUMLEVELS ORDER LABEL;
MPRINT(EM_DIAGRAM):   var VARIABLE EVENT LEVEL NUMLEVELS ORDER LABEL;
1148486    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
1148487    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_modelEvent_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Model Events";
MPRINT(EM_DIAGRAM):   run;
1148488    run;
 
NOTE: There were 1 observations read from the data set WORK.ENSMBL9_EVENT.
NOTE: The PROCEDURE PRINT printed page 951.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1148489    title10;
MPRINT(EM_DIAGRAM):   title10;
"No decisions defined for target "DepVar"."
1148490    proc print data = EMWS8.Reg9_DepVar_DM noobs label;
MPRINT(EM_DIAGRAM):    proc print data = EMWS8.Reg9_DepVar_DM noobs label;
1148491    var _type_ variable label;
MPRINT(EM_DIAGRAM):   var _type_ variable label;
1148492    where _type_ ^in('MATRIX', 'DECISION', 'TRAINPRIOR', 'DATAPRIOR', 'DECPRIOR');
MPRINT(EM_DIAGRAM):   where _type_ ^in('MATRIX', 'DECISION', 'TRAINPRIOR', 'DATAPRIOR',
'DECPRIOR');
1148493    label _TYPE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_type_vlabel,     NOQUOTE))"
1148493  ! VARIABLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel, NOQUOTE))" LABEL =
1148493  ! "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _TYPE_ = "Type" VARIABLE = "Variable" LABEL = "Label";
1148494    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
1148495    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_predDecVars_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Predicted and decision variables";
MPRINT(EM_DIAGRAM):   run;
1148496    run;
 
NOTE: There were 7 observations read from the data set EMWS8.REG9_DEPVAR_DM.
      WHERE _type_ not in ('DATAPRIOR', 'DECISION', 'DECPRIOR', 'MATRIX', 'TRAINPRIOR');
NOTE: The PROCEDURE PRINT printed page 952.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1148497    title10;
MPRINT(EM_DIAGRAM):   title10;
1148498    %let groupid =;
1148499    %let endGroupid =;
1148500    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
1148501    set EMWS8.Reg9_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Reg9_EMINFO;
1148502    where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO',
1148502  ! 'INDEXINFO');
MPRINT(EM_DIAGRAM):   where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO',
'TARGETINFO', 'INDEXINFO');
1148503    if key = 'ENDGROUP' then call symput('endGroupId', DATA);
MPRINT(EM_DIAGRAM):   if key = 'ENDGROUP' then call symput('endGroupId', DATA);
1148504    else call symput('groupId', DATA);
MPRINT(EM_DIAGRAM):   else call symput('groupId', DATA);
1148505    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.REG9_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'ENDGROUP', 'GROUPINFO', 'INDEXINFO',
      'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1148506    %let groupid =;
1148507    %let endGroupid =;
1148508    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
1148509    set EMWS8.Tree5_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Tree5_EMINFO;
1148510    where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO',
1148510  ! 'INDEXINFO');
MPRINT(EM_DIAGRAM):   where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO',
'TARGETINFO', 'INDEXINFO');
1148511    if key = 'ENDGROUP' then call symput('endGroupId', DATA);
MPRINT(EM_DIAGRAM):   if key = 'ENDGROUP' then call symput('endGroupId', DATA);
1148512    else call symput('groupId', DATA);
MPRINT(EM_DIAGRAM):   else call symput('groupId', DATA);
1148513    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.TREE5_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'ENDGROUP', 'GROUPINFO', 'INDEXINFO',
      'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1148514    %let groupid =;
1148515    %let endGroupid =;
1148516    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
1148517    set EMWS8.Neural33_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural33_EMINFO;
1148518    where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO',
1148518  ! 'INDEXINFO');
MPRINT(EM_DIAGRAM):   where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO',
'TARGETINFO', 'INDEXINFO');
1148519    if key = 'ENDGROUP' then call symput('endGroupId', DATA);
MPRINT(EM_DIAGRAM):   if key = 'ENDGROUP' then call symput('endGroupId', DATA);
1148520    else call symput('groupId', DATA);
MPRINT(EM_DIAGRAM):   else call symput('groupId', DATA);
1148521    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.NEURAL33_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'ENDGROUP', 'GROUPINFO', 'INDEXINFO',
      'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1148522    %let groupid =;
1148523    %let endGroupid =;
1148524    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
1148525    set EMWS8.Neural6_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural6_EMINFO;
1148526    where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO',
1148526  ! 'INDEXINFO');
MPRINT(EM_DIAGRAM):   where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO',
'TARGETINFO', 'INDEXINFO');
1148527    if key = 'ENDGROUP' then call symput('endGroupId', DATA);
MPRINT(EM_DIAGRAM):   if key = 'ENDGROUP' then call symput('endGroupId', DATA);
1148528    else call symput('groupId', DATA);
MPRINT(EM_DIAGRAM):   else call symput('groupId', DATA);
1148529    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.NEURAL6_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'ENDGROUP', 'GROUPINFO', 'INDEXINFO',
      'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1148530    %let groupid =;
1148531    %let endGroupid =;
1148532    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
1148533    set EMWS8.Neural31_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural31_EMINFO;
1148534    where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO',
1148534  ! 'INDEXINFO');
MPRINT(EM_DIAGRAM):   where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO',
'TARGETINFO', 'INDEXINFO');
1148535    if key = 'ENDGROUP' then call symput('endGroupId', DATA);
MPRINT(EM_DIAGRAM):   if key = 'ENDGROUP' then call symput('endGroupId', DATA);
1148536    else call symput('groupId', DATA);
MPRINT(EM_DIAGRAM):   else call symput('groupId', DATA);
1148537    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.NEURAL31_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'ENDGROUP', 'GROUPINFO', 'INDEXINFO',
      'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1148538    %let groupid =;
1148539    %let endGroupid =;
1148540    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
1148541    set EMWS8.Neural32_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural32_EMINFO;
1148542    where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO',
1148542  ! 'INDEXINFO');
MPRINT(EM_DIAGRAM):   where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO',
'TARGETINFO', 'INDEXINFO');
1148543    if key = 'ENDGROUP' then call symput('endGroupId', DATA);
MPRINT(EM_DIAGRAM):   if key = 'ENDGROUP' then call symput('endGroupId', DATA);
1148544    else call symput('groupId', DATA);
MPRINT(EM_DIAGRAM):   else call symput('groupId', DATA);
1148545    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.NEURAL32_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'ENDGROUP', 'GROUPINFO', 'INDEXINFO',
      'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1148546    %let groupid =;
1148547    %let endGroupid =;
1148548    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
1148549    set EMWS8.Neural34_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural34_EMINFO;
1148550    where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO',
1148550  ! 'INDEXINFO');
MPRINT(EM_DIAGRAM):   where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO',
'TARGETINFO', 'INDEXINFO');
1148551    if key = 'ENDGROUP' then call symput('endGroupId', DATA);
MPRINT(EM_DIAGRAM):   if key = 'ENDGROUP' then call symput('endGroupId', DATA);
1148552    else call symput('groupId', DATA);
MPRINT(EM_DIAGRAM):   else call symput('groupId', DATA);
1148553    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.NEURAL34_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'ENDGROUP', 'GROUPINFO', 'INDEXINFO',
      'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1148554    %let groupid =;
1148555    %let endGroupid =;
1148556    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
1148557    set EMWS8.Neural35_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural35_EMINFO;
1148558    where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO',
1148558  ! 'INDEXINFO');
MPRINT(EM_DIAGRAM):   where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO',
'TARGETINFO', 'INDEXINFO');
1148559    if key = 'ENDGROUP' then call symput('endGroupId', DATA);
MPRINT(EM_DIAGRAM):   if key = 'ENDGROUP' then call symput('endGroupId', DATA);
1148560    else call symput('groupId', DATA);
MPRINT(EM_DIAGRAM):   else call symput('groupId', DATA);
1148561    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.NEURAL35_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'ENDGROUP', 'GROUPINFO', 'INDEXINFO',
      'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1148562    %let groupid =;
1148563    %let endGroupid =;
1148564    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
1148565    set EMWS8.Neural30_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural30_EMINFO;
1148566    where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO',
1148566  ! 'INDEXINFO');
MPRINT(EM_DIAGRAM):   where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO',
'TARGETINFO', 'INDEXINFO');
1148567    if key = 'ENDGROUP' then call symput('endGroupId', DATA);
MPRINT(EM_DIAGRAM):   if key = 'ENDGROUP' then call symput('endGroupId', DATA);
1148568    else call symput('groupId', DATA);
MPRINT(EM_DIAGRAM):   else call symput('groupId', DATA);
1148569    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.NEURAL30_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'ENDGROUP', 'GROUPINFO', 'INDEXINFO',
      'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1148570    %let groupid =;
1148571    %let endGroupid =;
1148572    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
1148573    set EMWS8.Reg10_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Reg10_EMINFO;
1148574    where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO',
1148574  ! 'INDEXINFO');
MPRINT(EM_DIAGRAM):   where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO',
'TARGETINFO', 'INDEXINFO');
1148575    if key = 'ENDGROUP' then call symput('endGroupId', DATA);
MPRINT(EM_DIAGRAM):   if key = 'ENDGROUP' then call symput('endGroupId', DATA);
1148576    else call symput('groupId', DATA);
MPRINT(EM_DIAGRAM):   else call symput('groupId', DATA);
1148577    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.REG10_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'ENDGROUP', 'GROUPINFO', 'INDEXINFO',
      'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1148578    data WORK.Ensmbl9;
MPRINT(EM_DIAGRAM):    data WORK.Ensmbl9;
1148579    length NodeId $32 Model $64;
MPRINT(EM_DIAGRAM):   length NodeId $32 Model $64;
1148580    label Nodeid = "%sysfunc(sasmsg(sashelp.dmine, rpt_nodeId_vlabel,  NOQUOTE))" Model
1148580  ! = "%sysfunc(sasmsg(sashelp.dmine, rpt_modeltype,      NOQUOTE))";
MPRINT(EM_DIAGRAM):   label Nodeid = "Node Id" Model = "rpt_modeltype";
1148581    nodeid="REG9";
MPRINT(EM_DIAGRAM):   nodeid="REG9";
1148582    model="Regression";
MPRINT(EM_DIAGRAM):   model="Regression";
1148583    output;
MPRINT(EM_DIAGRAM):   output;
1148584    nodeid="TREE5";
MPRINT(EM_DIAGRAM):   nodeid="TREE5";
1148585    model="Decision Tree";
MPRINT(EM_DIAGRAM):   model="Decision Tree";
1148586    output;
MPRINT(EM_DIAGRAM):   output;
1148587    nodeid="NEURAL33";
MPRINT(EM_DIAGRAM):   nodeid="NEURAL33";
1148588    model="Neural";
MPRINT(EM_DIAGRAM):   model="Neural";
1148589    output;
MPRINT(EM_DIAGRAM):   output;
1148590    nodeid="NEURAL6";
MPRINT(EM_DIAGRAM):   nodeid="NEURAL6";
1148591    model="Neural";
MPRINT(EM_DIAGRAM):   model="Neural";
1148592    output;
MPRINT(EM_DIAGRAM):   output;
1148593    nodeid="NEURAL31";
MPRINT(EM_DIAGRAM):   nodeid="NEURAL31";
1148594    model="Neural";
MPRINT(EM_DIAGRAM):   model="Neural";
1148595    output;
MPRINT(EM_DIAGRAM):   output;
1148596    nodeid="NEURAL32";
MPRINT(EM_DIAGRAM):   nodeid="NEURAL32";
1148597    model="Neural";
MPRINT(EM_DIAGRAM):   model="Neural";
1148598    output;
MPRINT(EM_DIAGRAM):   output;
1148599    nodeid="NEURAL34";
MPRINT(EM_DIAGRAM):   nodeid="NEURAL34";
1148600    model="Neural";
MPRINT(EM_DIAGRAM):   model="Neural";
1148601    output;
MPRINT(EM_DIAGRAM):   output;
1148602    nodeid="NEURAL35";
MPRINT(EM_DIAGRAM):   nodeid="NEURAL35";
1148603    model="Neural";
MPRINT(EM_DIAGRAM):   model="Neural";
1148604    output;
MPRINT(EM_DIAGRAM):   output;
1148605    nodeid="NEURAL30";
MPRINT(EM_DIAGRAM):   nodeid="NEURAL30";
1148606    model="Neural";
MPRINT(EM_DIAGRAM):   model="Neural";
1148607    output;
MPRINT(EM_DIAGRAM):   output;
1148608    nodeid="REG10";
MPRINT(EM_DIAGRAM):   nodeid="REG10";
1148609    model="Regression";
MPRINT(EM_DIAGRAM):   model="Regression";
1148610    output;
MPRINT(EM_DIAGRAM):   output;
1148611    ;
MPRINT(EM_DIAGRAM):   ;
1148612    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK.ENSMBL9 has 10 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1148613    title;
MPRINT(EM_DIAGRAM):   title;
1148614    proc print data=WORK.Ensmbl9 label noobs;
MPRINT(EM_DIAGRAM):   proc print data=WORK.Ensmbl9 label noobs;
1148615    title9 "%sysfunc(sasmsg(sashelp.dmine, rpt_combinemodels_title,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   title9 "Imported Models to be Combined";
1148616    title10 "Probability Function: Average";
MPRINT(EM_DIAGRAM):   title10 "Probability Function: Average";
MPRINT(EM_DIAGRAM):   run;
1148617    run;
 
NOTE: There were 10 observations read from the data set WORK.ENSMBL9.
NOTE: The PROCEDURE PRINT printed page 953.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1148618    title9;
MPRINT(EM_DIAGRAM):   title9;
1148619    title10;
MPRINT(EM_DIAGRAM):   title10;
1148620    data WORK.M01H6DH2;
MPRINT(EM_DIAGRAM):    data WORK.M01H6DH2;
1148621    set WORK.M01H6DH2;
MPRINT(EM_DIAGRAM):   set WORK.M01H6DH2;
1148622    where NAME = "DepVar";
MPRINT(EM_DIAGRAM):   where NAME = "DepVar";
1148623    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK.M01H6DH2.
      WHERE NAME='DepVar';
NOTE: The data set WORK.M01H6DH2 has 1 observations and 22 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1148624    *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------* ;
1148625    * EM: DMDBClass Macro ;
MPRINT(EM_DIAGRAM):   * EM: DMDBClass Macro ;
1148626    *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
1148627    %macro DMDBClass;
1148628        DepVar(DESC)
1148629    %mend DMDBClass;
1148630    *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
1148631    * EM: DMDBVar Macro ;
MPRINT(EM_DIAGRAM):   * EM: DMDBVar Macro ;
1148632    *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
1148633    %macro DMDBVar;
1148634
1148635    %mend DMDBVar;
1148636    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1148637    * EM: Create DMDB;
MPRINT(EM_DIAGRAM):   * EM: Create DMDB;
1148638    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1148639    proc dmdb batch data=EMWS8.Reg9_TRAIN
1148640    dmdbcat=WORK.EM_DMDB
1148641    maxlevel = 513
1148642    ;
MPRINT(EM_DIAGRAM):   proc dmdb batch data=EMWS8.Reg9_TRAIN dmdbcat=WORK.EM_DMDB maxlevel =
513 ;
MPRINT(EM_DIAGRAM):   class
1148643    class %DMDBClass;
MPRINT(DMDBCLASS):   DepVar(DESC)
MPRINT(EM_DIAGRAM):  ;
1148644    target
1148645    DepVar
1148646    ;
MPRINT(EM_DIAGRAM):   target DepVar ;
1148647    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Records processed = 2374   Memory used = 511K.
NOTE: There were 2374 observations read from the data set EMWS8.PART_TRAIN.
NOTE: View EMWS8.REG9_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
NOTE: There were 2374 observations read from the data set EMWS8.META2_TRAIN.
NOTE: There were 2374 observations read from the data set EMWS8.REG9_TRAIN.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):   *--- end code ---*;
1148648    quit;
1148649    *--- end code ---*;
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "19. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "11.17 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                19. April 2016
Time:                11.17 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O1U3IZ6K
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl9\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O1U3IZ6K new;
MPRINT(EM_DIAGRAM):   run;
1148751    filename emflow
1148751  ! "C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl9\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl9\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl9: Scoring REG9_TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1148752    *------------------------------------------------------------*;
1148753    * Ensmbl9: Scoring REG9_TRAIN data;
1148754    *------------------------------------------------------------*;
1148755    data EMWS8.Ensmbl9_TRAIN
1148756    / view=EMWS8.Ensmbl9_TRAIN
1148757    ;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl9_TRAIN / view=EMWS8.Ensmbl9_TRAIN ;
1148758    set EMWS8.Reg9_TRAIN
1148759    ;
MPRINT(EM_DIAGRAM):   set EMWS8.Reg9_TRAIN ;
1148760    %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file
      C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl9\EMFLOWSCORE.sas.
1148761   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1148762   +* Ensmbl9: Combine model for DepVar;
MPRINT(EM_DIAGRAM):   * Ensmbl9: Combine model for DepVar;
1148763   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1148764   +* Ensmbl9: Scoring Code of model 1 of 10;
MPRINT(EM_DIAGRAM):   * Ensmbl9: Scoring Code of model 1 of 10;
1148765   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1148766   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1148767   +* TOOL: Extension Class;
MPRINT(EM_DIAGRAM):   * TOOL: Extension Class;
1148768   +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
1148769   +* NODE: FIMPORT;
MPRINT(EM_DIAGRAM):   * NODE: FIMPORT;
1148770   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1148771   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1148772   +* TOOL: Statistics Exploration;
MPRINT(EM_DIAGRAM):   * TOOL: Statistics Exploration;
1148773   +* TYPE: EXPLORE;
MPRINT(EM_DIAGRAM):   * TYPE: EXPLORE;
1148774   +* NODE: Stat;
MPRINT(EM_DIAGRAM):   * NODE: Stat;
1148775   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1148776   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1148777   +* TOOL: Filtering;
MPRINT(EM_DIAGRAM):   * TOOL: Filtering;
1148778   +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
1148779   +* NODE: Filter;
MPRINT(EM_DIAGRAM):   * NODE: Filter;
1148780   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1148781   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1148782   +* TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
MPRINT(EM_DIAGRAM):   * TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
1148783   +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
1148784   +* NODE: EMCODE4;
MPRINT(EM_DIAGRAM):   * NODE: EMCODE4;
1148785   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1148786   +
1148787   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1148788   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1148788  !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1148789   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1148790   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1148791   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1148792   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1148793   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
1148794   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1148795   +* TOOL: Transform;
MPRINT(EM_DIAGRAM):   * TOOL: Transform;
1148796   +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
1148797   +* NODE: Trans;
MPRINT(EM_DIAGRAM):   * NODE: Trans;
1148798   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1148799   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1148800   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1148801   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1148802   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1148803   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1148804   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
1148805   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1148806   +* TOOL: Partition Class;
MPRINT(EM_DIAGRAM):   * TOOL: Partition Class;
1148807   +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
1148808   +* NODE: Part;
MPRINT(EM_DIAGRAM):   * NODE: Part;
1148809   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1148810   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1148811   +* TOOL: Metadata Node;
MPRINT(EM_DIAGRAM):   * TOOL: Metadata Node;
1148812   +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
1148813   +* NODE: Meta2;
MPRINT(EM_DIAGRAM):   * NODE: Meta2;
1148814   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1148815   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1148816   +* TOOL: Regression;
MPRINT(EM_DIAGRAM):   * TOOL: Regression;
1148817   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1148818   +* NODE: Reg9;
MPRINT(EM_DIAGRAM):   * NODE: Reg9;
1148819   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1148820   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1148821   +*** begin scoring code for regression;
MPRINT(EM_DIAGRAM):   *** begin scoring code for regression;
1148822   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1148823   +
1148824   +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
1148825   +label _WARN_ = 'Warnings' ;
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings' ;
1148826   +
1148827   +length I_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length I_DepVar $ 12;
1148828   +label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1148829   +*** Target Values;
MPRINT(EM_DIAGRAM):   *** Target Values;
1148830   +array REG9DRF [2] $12 _temporary_ ('1' '0' );
MPRINT(EM_DIAGRAM):   array REG9DRF [2] $12 _temporary_ ('1' '0' );
1148831   +label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1148832   +format U_DepVar BEST.;
MPRINT(EM_DIAGRAM):   format U_DepVar BEST.;
1148833   +*** Unnormalized target values;
MPRINT(EM_DIAGRAM):   *** Unnormalized target values;
1148834   +ARRAY REG9DRU[2]  _TEMPORARY_ (1 0);
MPRINT(EM_DIAGRAM):   ARRAY REG9DRU[2] _TEMPORARY_ (1 0);
1148835   +
1148836   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1148837   +drop _Y ;
MPRINT(EM_DIAGRAM):   drop _Y ;
1148838   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1148839   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1148840   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1148841   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1148842   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1148843   +   _Y = .;
MPRINT(EM_DIAGRAM):   _Y = .;
1148844   +end;
MPRINT(EM_DIAGRAM):   end;
1148845   +else do;
MPRINT(EM_DIAGRAM):   else do;
1148846   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1148847   +      _Y = 1;
MPRINT(EM_DIAGRAM):   _Y = 1;
1148848   +   end;
MPRINT(EM_DIAGRAM):   end;
1148849   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1148850   +      _Y = 0;
MPRINT(EM_DIAGRAM):   _Y = 0;
1148851   +   end;
MPRINT(EM_DIAGRAM):   end;
1148852   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1148853   +      _Y = .;
MPRINT(EM_DIAGRAM):   _Y = .;
1148854   +   end;
MPRINT(EM_DIAGRAM):   end;
1148855   +end;
MPRINT(EM_DIAGRAM):   end;
1148856   +
1148857   +drop _DM_BAD;
MPRINT(EM_DIAGRAM):   drop _DM_BAD;
1148858   +_DM_BAD=0;
MPRINT(EM_DIAGRAM):   _DM_BAD=0;
1148859   +
1148860   +*** Check Income for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Income for missing values ;
1148861   +if missing( Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( Income ) then do;
1148862   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1148863   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1148864   +end;
MPRINT(EM_DIAGRAM):   end;
1148865   +
1148866   +*** Check MntFishProducts for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntFishProducts for missing values ;
1148867   +if missing( MntFishProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntFishProducts ) then do;
1148868   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1148869   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1148870   +end;
MPRINT(EM_DIAGRAM):   end;
1148871   +
1148872   +*** Check MntFruits for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntFruits for missing values ;
1148873   +if missing( MntFruits ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntFruits ) then do;
1148874   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1148875   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1148876   +end;
MPRINT(EM_DIAGRAM):   end;
1148877   +
1148878   +*** Check MntMeatProducts for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntMeatProducts for missing values ;
1148879   +if missing( MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntMeatProducts ) then do;
1148880   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1148881   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1148882   +end;
MPRINT(EM_DIAGRAM):   end;
1148883   +
1148884   +*** Check MntWines for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntWines for missing values ;
1148885   +if missing( MntWines ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntWines ) then do;
1148886   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1148887   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1148888   +end;
MPRINT(EM_DIAGRAM):   end;
1148889   +
1148890   +*** Check NumCatalogPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumCatalogPurchases for missing values ;
1148891   +if missing( NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumCatalogPurchases ) then do;
1148892   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1148893   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1148894   +end;
MPRINT(EM_DIAGRAM):   end;
1148895   +
1148896   +*** Check NumDealsPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumDealsPurchases for missing values ;
1148897   +if missing( NumDealsPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumDealsPurchases ) then do;
1148898   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1148899   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1148900   +end;
MPRINT(EM_DIAGRAM):   end;
1148901   +
1148902   +*** Check NumStorePurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumStorePurchases for missing values ;
1148903   +if missing( NumStorePurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumStorePurchases ) then do;
1148904   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1148905   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1148906   +end;
MPRINT(EM_DIAGRAM):   end;
1148907   +
1148908   +*** Check NumWebPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumWebPurchases for missing values ;
1148909   +if missing( NumWebPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumWebPurchases ) then do;
1148910   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1148911   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1148912   +end;
MPRINT(EM_DIAGRAM):   end;
1148913   +
1148914   +*** Check NumWebVisitsMonth for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumWebVisitsMonth for missing values ;
1148915   +if missing( NumWebVisitsMonth ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumWebVisitsMonth ) then do;
1148916   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1148917   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1148918   +end;
MPRINT(EM_DIAGRAM):   end;
1148919   +
1148920   +*** Check Recency for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Recency for missing values ;
1148921   +if missing( Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( Recency ) then do;
1148922   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1148923   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1148924   +end;
MPRINT(EM_DIAGRAM):   end;
1148925   +
1148926   +*** Check Teenhome for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Teenhome for missing values ;
1148927   +if missing( Teenhome ) then do;
MPRINT(EM_DIAGRAM):   if missing( Teenhome ) then do;
1148928   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1148929   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1148930   +end;
MPRINT(EM_DIAGRAM):   end;
1148931   +
1148932   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1148933   +drop _1_0 ;
MPRINT(EM_DIAGRAM):   drop _1_0 ;
1148934   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1148935   +   _1_0 = .;
MPRINT(EM_DIAGRAM):   _1_0 = .;
1148936   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1148937   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1148938   +end;
MPRINT(EM_DIAGRAM):   end;
1148939   +else do;
MPRINT(EM_DIAGRAM):   else do;
1148940   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1148941   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1148942   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1148943   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1148944   +      _1_0 = 1;
MPRINT(EM_DIAGRAM):   _1_0 = 1;
1148945   +   end;
MPRINT(EM_DIAGRAM):   end;
1148946   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1148947   +      _1_0 = -1;
MPRINT(EM_DIAGRAM):   _1_0 = -1;
1148948   +   end;
MPRINT(EM_DIAGRAM):   end;
1148949   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1148950   +      _1_0 = .;
MPRINT(EM_DIAGRAM):   _1_0 = .;
1148951   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1148952   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1148953   +   end;
MPRINT(EM_DIAGRAM):   end;
1148954   +end;
MPRINT(EM_DIAGRAM):   end;
1148955   +
1148956   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1148957   +drop _2_0 ;
MPRINT(EM_DIAGRAM):   drop _2_0 ;
1148958   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1148959   +   _2_0 = .;
MPRINT(EM_DIAGRAM):   _2_0 = .;
1148960   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1148961   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1148962   +end;
MPRINT(EM_DIAGRAM):   end;
1148963   +else do;
MPRINT(EM_DIAGRAM):   else do;
1148964   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1148965   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1148966   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1148967   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1148968   +      _2_0 = 1;
MPRINT(EM_DIAGRAM):   _2_0 = 1;
1148969   +   end;
MPRINT(EM_DIAGRAM):   end;
1148970   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1148971   +      _2_0 = -1;
MPRINT(EM_DIAGRAM):   _2_0 = -1;
1148972   +   end;
MPRINT(EM_DIAGRAM):   end;
1148973   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1148974   +      _2_0 = .;
MPRINT(EM_DIAGRAM):   _2_0 = .;
1148975   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1148976   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1148977   +   end;
MPRINT(EM_DIAGRAM):   end;
1148978   +end;
MPRINT(EM_DIAGRAM):   end;
1148979   +
1148980   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1148981   +drop _3_0 ;
MPRINT(EM_DIAGRAM):   drop _3_0 ;
1148982   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1148983   +   _3_0 = .;
MPRINT(EM_DIAGRAM):   _3_0 = .;
1148984   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1148985   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1148986   +end;
MPRINT(EM_DIAGRAM):   end;
1148987   +else do;
MPRINT(EM_DIAGRAM):   else do;
1148988   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1148989   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1148990   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1148991   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1148992   +      _3_0 = 1;
MPRINT(EM_DIAGRAM):   _3_0 = 1;
1148993   +   end;
MPRINT(EM_DIAGRAM):   end;
1148994   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1148995   +      _3_0 = -1;
MPRINT(EM_DIAGRAM):   _3_0 = -1;
1148996   +   end;
MPRINT(EM_DIAGRAM):   end;
1148997   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1148998   +      _3_0 = .;
MPRINT(EM_DIAGRAM):   _3_0 = .;
1148999   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1149000   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1149001   +   end;
MPRINT(EM_DIAGRAM):   end;
1149002   +end;
MPRINT(EM_DIAGRAM):   end;
1149003   +
1149004   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1149005   +drop _4_0 ;
MPRINT(EM_DIAGRAM):   drop _4_0 ;
1149006   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1149007   +   _4_0 = .;
MPRINT(EM_DIAGRAM):   _4_0 = .;
1149008   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1149009   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1149010   +end;
MPRINT(EM_DIAGRAM):   end;
1149011   +else do;
MPRINT(EM_DIAGRAM):   else do;
1149012   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1149013   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1149014   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1149015   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1149016   +      _4_0 = 1;
MPRINT(EM_DIAGRAM):   _4_0 = 1;
1149017   +   end;
MPRINT(EM_DIAGRAM):   end;
1149018   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1149019   +      _4_0 = -1;
MPRINT(EM_DIAGRAM):   _4_0 = -1;
1149020   +   end;
MPRINT(EM_DIAGRAM):   end;
1149021   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1149022   +      _4_0 = .;
MPRINT(EM_DIAGRAM):   _4_0 = .;
1149023   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1149024   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1149025   +   end;
MPRINT(EM_DIAGRAM):   end;
1149026   +end;
MPRINT(EM_DIAGRAM):   end;
1149027   +
1149028   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1149029   +drop _5_0 ;
MPRINT(EM_DIAGRAM):   drop _5_0 ;
1149030   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1149031   +   _5_0 = .;
MPRINT(EM_DIAGRAM):   _5_0 = .;
1149032   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1149033   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1149034   +end;
MPRINT(EM_DIAGRAM):   end;
1149035   +else do;
MPRINT(EM_DIAGRAM):   else do;
1149036   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1149037   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1149038   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1149039   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1149040   +      _5_0 = 1;
MPRINT(EM_DIAGRAM):   _5_0 = 1;
1149041   +   end;
MPRINT(EM_DIAGRAM):   end;
1149042   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1149043   +      _5_0 = -1;
MPRINT(EM_DIAGRAM):   _5_0 = -1;
1149044   +   end;
MPRINT(EM_DIAGRAM):   end;
1149045   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1149046   +      _5_0 = .;
MPRINT(EM_DIAGRAM):   _5_0 = .;
1149047   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1149048   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1149049   +   end;
MPRINT(EM_DIAGRAM):   end;
1149050   +end;
MPRINT(EM_DIAGRAM):   end;
1149051   +
1149052   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1149053   +drop _8_0 _8_1 _8_2 _8_3 ;
MPRINT(EM_DIAGRAM):   drop _8_0 _8_1 _8_2 _8_3 ;
1149054   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1149055   +_8_0 = 0;
MPRINT(EM_DIAGRAM):   _8_0 = 0;
1149056   +_8_1 = 0;
MPRINT(EM_DIAGRAM):   _8_1 = 0;
1149057   +_8_2 = 0;
MPRINT(EM_DIAGRAM):   _8_2 = 0;
1149058   +_8_3 = 0;
MPRINT(EM_DIAGRAM):   _8_3 = 0;
1149059   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1149060   +   _8_0 = .;
MPRINT(EM_DIAGRAM):   _8_0 = .;
1149061   +   _8_1 = .;
MPRINT(EM_DIAGRAM):   _8_1 = .;
1149062   +   _8_2 = .;
MPRINT(EM_DIAGRAM):   _8_2 = .;
1149063   +   _8_3 = .;
MPRINT(EM_DIAGRAM):   _8_3 = .;
1149064   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1149065   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1149066   +end;
MPRINT(EM_DIAGRAM):   end;
1149067   +else do;
MPRINT(EM_DIAGRAM):   else do;
1149068   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1149069   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1149070   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1149071   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1149072   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1149073   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1149074   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1149075   +            _8_0 = 1;
MPRINT(EM_DIAGRAM):   _8_0 = 1;
1149076   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1149077   +         end;
MPRINT(EM_DIAGRAM):   end;
1149078   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1149079   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1149080   +               _8_1 = 1;
MPRINT(EM_DIAGRAM):   _8_1 = 1;
1149081   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1149082   +            end;
MPRINT(EM_DIAGRAM):   end;
1149083   +         end;
MPRINT(EM_DIAGRAM):   end;
1149084   +      end;
MPRINT(EM_DIAGRAM):   end;
1149085   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1149086   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1149087   +            _8_2 = 1;
MPRINT(EM_DIAGRAM):   _8_2 = 1;
1149088   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1149089   +         end;
MPRINT(EM_DIAGRAM):   end;
1149090   +      end;
MPRINT(EM_DIAGRAM):   end;
1149091   +   end;
MPRINT(EM_DIAGRAM):   end;
1149092   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1149093   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1149094   +         _8_3 = 1;
MPRINT(EM_DIAGRAM):   _8_3 = 1;
1149095   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1149096   +      end;
MPRINT(EM_DIAGRAM):   end;
1149097   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1149098   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1149099   +            _8_0 = -1;
MPRINT(EM_DIAGRAM):   _8_0 = -1;
1149100   +            _8_1 = -1;
MPRINT(EM_DIAGRAM):   _8_1 = -1;
1149101   +            _8_2 = -1;
MPRINT(EM_DIAGRAM):   _8_2 = -1;
1149102   +            _8_3 = -1;
MPRINT(EM_DIAGRAM):   _8_3 = -1;
1149103   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1149104   +         end;
MPRINT(EM_DIAGRAM):   end;
1149105   +      end;
MPRINT(EM_DIAGRAM):   end;
1149106   +   end;
MPRINT(EM_DIAGRAM):   end;
1149107   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1149108   +      _8_0 = .;
MPRINT(EM_DIAGRAM):   _8_0 = .;
1149109   +      _8_1 = .;
MPRINT(EM_DIAGRAM):   _8_1 = .;
1149110   +      _8_2 = .;
MPRINT(EM_DIAGRAM):   _8_2 = .;
1149111   +      _8_3 = .;
MPRINT(EM_DIAGRAM):   _8_3 = .;
1149112   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1149113   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1149114   +   end;
MPRINT(EM_DIAGRAM):   end;
1149115   +end;
MPRINT(EM_DIAGRAM):   end;
1149116   +
1149117   +*** If missing inputs, use averages;
MPRINT(EM_DIAGRAM):   *** If missing inputs, use averages;
1149118   +if _DM_BAD > 0 then do;
MPRINT(EM_DIAGRAM):   if _DM_BAD > 0 then do;
1149119   +   _P0 = 0.151221567;
MPRINT(EM_DIAGRAM):   _P0 = 0.151221567;
1149120   +   _P1 = 0.848778433;
MPRINT(EM_DIAGRAM):   _P1 = 0.848778433;
1149121   +   goto REG9DR1;
MPRINT(EM_DIAGRAM):   goto REG9DR1;
1149122   +end;
MPRINT(EM_DIAGRAM):   end;
1149123   +
1149124   +*** Compute Linear Predictor;
MPRINT(EM_DIAGRAM):   *** Compute Linear Predictor;
1149125   +drop _TEMP;
MPRINT(EM_DIAGRAM):   drop _TEMP;
1149126   +drop _LP0;
MPRINT(EM_DIAGRAM):   drop _LP0;
1149127   +_LP0 = 0;
MPRINT(EM_DIAGRAM):   _LP0 = 0;
1149128   +
1149129   +***  Effect: AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Effect: AcceptedCmp1 ;
1149130   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1149131   +_LP0 = _LP0 + (   -1.28114872833376) * _TEMP * _1_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.28114872833376) * _TEMP * _1_0;
1149132   +
1149133   +***  Effect: AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Effect: AcceptedCmp2 ;
1149134   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1149135   +_LP0 = _LP0 + (    -1.4871451186069) * _TEMP * _2_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.4871451186069) * _TEMP * _2_0;
1149136   +
1149137   +***  Effect: AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Effect: AcceptedCmp3 ;
1149138   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1149139   +_LP0 = _LP0 + (   -1.58721567367346) * _TEMP * _3_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.58721567367346) * _TEMP * _3_0;
1149140   +
1149141   +***  Effect: AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Effect: AcceptedCmp4 ;
1149142   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1149143   +_LP0 = _LP0 + (    -1.1573037622615) * _TEMP * _4_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.1573037622615) * _TEMP * _4_0;
1149144   +
1149145   +***  Effect: AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Effect: AcceptedCmp5 ;
1149146   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1149147   +_LP0 = _LP0 + (   -1.68835129992038) * _TEMP * _5_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.68835129992038) * _TEMP * _5_0;
1149148   +
1149149   +***  Effect: Income ;
MPRINT(EM_DIAGRAM):   *** Effect: Income ;
1149150   +_TEMP = Income ;
MPRINT(EM_DIAGRAM):   _TEMP = Income ;
1149151   +_LP0 = _LP0 + (    0.00006770818936 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00006770818936 * _TEMP);
1149152   +
1149153   +***  Effect: Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Effect: Marital_Status ;
1149154   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1149155   +_LP0 = _LP0 + (    0.18351716765826) * _TEMP * _8_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.18351716765826) * _TEMP * _8_0;
1149156   +_LP0 = _LP0 + (   -0.88993819943493) * _TEMP * _8_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.88993819943493) * _TEMP * _8_1;
1149157   +_LP0 = _LP0 + (    0.89971120865107) * _TEMP * _8_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.89971120865107) * _TEMP * _8_2;
1149158   +_LP0 = _LP0 + (   -0.96825171718714) * _TEMP * _8_3;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.96825171718714) * _TEMP * _8_3;
1149159   +
1149160   +***  Effect: MntFishProducts ;
MPRINT(EM_DIAGRAM):   *** Effect: MntFishProducts ;
1149161   +_TEMP = MntFishProducts ;
MPRINT(EM_DIAGRAM):   _TEMP = MntFishProducts ;
1149162   +_LP0 = _LP0 + (    -0.0053789406447 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.0053789406447 * _TEMP);
1149163   +
1149164   +***  Effect: MntFruits ;
MPRINT(EM_DIAGRAM):   *** Effect: MntFruits ;
1149165   +_TEMP = MntFruits ;
MPRINT(EM_DIAGRAM):   _TEMP = MntFruits ;
1149166   +_LP0 = _LP0 + (   -0.00810096702081 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.00810096702081 * _TEMP);
1149167   +
1149168   +***  Effect: MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Effect: MntMeatProducts ;
1149169   +_TEMP = MntMeatProducts ;
MPRINT(EM_DIAGRAM):   _TEMP = MntMeatProducts ;
1149170   +_LP0 = _LP0 + (    0.00876618054091 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00876618054091 * _TEMP);
1149171   +
1149172   +***  Effect: MntWines ;
MPRINT(EM_DIAGRAM):   *** Effect: MntWines ;
1149173   +_TEMP = MntWines ;
MPRINT(EM_DIAGRAM):   _TEMP = MntWines ;
1149174   +_LP0 = _LP0 + (   -0.00323708533956 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.00323708533956 * _TEMP);
1149175   +
1149176   +***  Effect: NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumCatalogPurchases ;
1149177   +_TEMP = NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumCatalogPurchases ;
1149178   +_LP0 = _LP0 + (    0.72583602627024 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.72583602627024 * _TEMP);
1149179   +
1149180   +***  Effect: NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumDealsPurchases ;
1149181   +_TEMP = NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumDealsPurchases ;
1149182   +_LP0 = _LP0 + (    0.71587738133808 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.71587738133808 * _TEMP);
1149183   +
1149184   +***  Effect: NumStorePurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumStorePurchases ;
1149185   +_TEMP = NumStorePurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumStorePurchases ;
1149186   +_LP0 = _LP0 + (   -0.38414846639641 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.38414846639641 * _TEMP);
1149187   +
1149188   +***  Effect: NumWebPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumWebPurchases ;
1149189   +_TEMP = NumWebPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumWebPurchases ;
1149190   +_LP0 = _LP0 + (   -0.39960732899531 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.39960732899531 * _TEMP);
1149191   +
1149192   +***  Effect: NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   *** Effect: NumWebVisitsMonth ;
1149193   +_TEMP = NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   _TEMP = NumWebVisitsMonth ;
1149194   +_LP0 = _LP0 + (    1.00690630599849 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.00690630599849 * _TEMP);
1149195   +
1149196   +***  Effect: Recency ;
MPRINT(EM_DIAGRAM):   *** Effect: Recency ;
1149197   +_TEMP = Recency ;
MPRINT(EM_DIAGRAM):   _TEMP = Recency ;
1149198   +_LP0 = _LP0 + (   -0.10368937560371 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.10368937560371 * _TEMP);
1149199   +
1149200   +***  Effect: Teenhome ;
MPRINT(EM_DIAGRAM):   *** Effect: Teenhome ;
1149201   +_TEMP = Teenhome ;
MPRINT(EM_DIAGRAM):   _TEMP = Teenhome ;
1149202   +_LP0 = _LP0 + (   -1.33387551959166 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.33387551959166 * _TEMP);
1149203   +
1149204   +*** Naive Posterior Probabilities;
MPRINT(EM_DIAGRAM):   *** Naive Posterior Probabilities;
1149205   +drop _MAXP _IY _P0 _P1;
MPRINT(EM_DIAGRAM):   drop _MAXP _IY _P0 _P1;
1149206   +_TEMP =    -1.29156803352583 + _LP0;
MPRINT(EM_DIAGRAM):   _TEMP = -1.29156803352583 + _LP0;
1149207   +if (_TEMP < 0) then do;
MPRINT(EM_DIAGRAM):   if (_TEMP < 0) then do;
1149208   +   _TEMP = exp(_TEMP);
MPRINT(EM_DIAGRAM):   _TEMP = exp(_TEMP);
1149209   +   _P0 = _TEMP / (1 + _TEMP);
MPRINT(EM_DIAGRAM):   _P0 = _TEMP / (1 + _TEMP);
1149210   +end;
MPRINT(EM_DIAGRAM):   end;
1149211   +else _P0 = 1 / (1 + exp(-_TEMP));
MPRINT(EM_DIAGRAM):   else _P0 = 1 / (1 + exp(-_TEMP));
1149212   +_P1 = 1.0 - _P0;
MPRINT(EM_DIAGRAM):   _P1 = 1.0 - _P0;
1149213   +
1149214   +REG9DR1:
1149215   +
1149216   +*** Residuals;
MPRINT(EM_DIAGRAM):   REG9DR1: *** Residuals;
1149217   +if (_Y = .) then do;
MPRINT(EM_DIAGRAM):   if (_Y = .) then do;
1149218   +   R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
1149219   +   R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
1149220   +end;
MPRINT(EM_DIAGRAM):   end;
1149221   +else do;
MPRINT(EM_DIAGRAM):   else do;
1149222   +    label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1149223   +    label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1149224   +   R_DepVar1 = - _P0;
MPRINT(EM_DIAGRAM):   R_DepVar1 = - _P0;
1149225   +   R_DepVar0 = - _P1;
MPRINT(EM_DIAGRAM):   R_DepVar0 = - _P1;
1149226   +   select( _Y );
MPRINT(EM_DIAGRAM):   select( _Y );
1149227   +      when (0)  R_DepVar1 = R_DepVar1 + 1;
MPRINT(EM_DIAGRAM):   when (0) R_DepVar1 = R_DepVar1 + 1;
1149228   +      when (1)  R_DepVar0 = R_DepVar0 + 1;
MPRINT(EM_DIAGRAM):   when (1) R_DepVar0 = R_DepVar0 + 1;
1149229   +   end;
MPRINT(EM_DIAGRAM):   end;
1149230   +end;
MPRINT(EM_DIAGRAM):   end;
1149231   +
1149232   +*** Posterior Probabilities and Predicted Level;
MPRINT(EM_DIAGRAM):   *** Posterior Probabilities and Predicted Level;
1149233   +label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1149234   +label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1149235   +P_DepVar1 = _P0;
MPRINT(EM_DIAGRAM):   P_DepVar1 = _P0;
1149236   +_MAXP = _P0;
MPRINT(EM_DIAGRAM):   _MAXP = _P0;
1149237   +_IY = 1;
MPRINT(EM_DIAGRAM):   _IY = 1;
1149238   +P_DepVar0 = _P1;
MPRINT(EM_DIAGRAM):   P_DepVar0 = _P1;
1149239   +if (_P1 >  _MAXP + 1E-8) then do;
MPRINT(EM_DIAGRAM):   if (_P1 > _MAXP + 1E-8) then do;
1149240   +   _MAXP = _P1;
MPRINT(EM_DIAGRAM):   _MAXP = _P1;
1149241   +   _IY = 2;
MPRINT(EM_DIAGRAM):   _IY = 2;
1149242   +end;
MPRINT(EM_DIAGRAM):   end;
1149243   +I_DepVar = REG9DRF[_IY];
MPRINT(EM_DIAGRAM):   I_DepVar = REG9DRF[_IY];
1149244   +U_DepVar = REG9DRU[_IY];
MPRINT(EM_DIAGRAM):   U_DepVar = REG9DRU[_IY];
1149245   +
1149246   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1149247   +***** end scoring code for regression;
MPRINT(EM_DIAGRAM):   ***** end scoring code for regression;
1149248   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1149249   +* Renaming variables for Reg9;
MPRINT(EM_DIAGRAM):   * Renaming variables for Reg9;
1149250   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1149251   +* Renaming Posterior variables for Reg9;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Reg9;
1149252   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1149253   +drop Reg9_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Reg9_P_DepVar1;
1149254   +Reg9_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Reg9_P_DepVar1 = P_DepVar1;
1149255   +drop Reg9_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Reg9_P_DepVar0;
1149256   +Reg9_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Reg9_P_DepVar0 = P_DepVar0;
1149257   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1149258   +* Renaming _WARN_ variable for Reg9;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Reg9;
1149259   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1149260   +length Reg9_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Reg9_WARN_ $4;
1149261   +drop Reg9_WARN_;
MPRINT(EM_DIAGRAM):   drop Reg9_WARN_;
1149262   +Reg9_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Reg9_WARN_ = _WARN_;
1149263   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1149264   +* Ensmbl9: Scoring Code of model 2 of 10;
MPRINT(EM_DIAGRAM):   * Ensmbl9: Scoring Code of model 2 of 10;
1149265   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1149266   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1149267   +* TOOL: Decision Tree;
MPRINT(EM_DIAGRAM):   * TOOL: Decision Tree;
1149268   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1149269   +* NODE: Tree5;
MPRINT(EM_DIAGRAM):   * NODE: Tree5;
1149270   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1149271   +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
1149272   +******             DECISION TREE SCORING CODE             ******;
MPRINT(EM_DIAGRAM):   ****** DECISION TREE SCORING CODE ******;
1149273   +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
1149274   +
1149275   +******         LENGTHS OF NEW CHARACTER VARIABLES         ******;
MPRINT(EM_DIAGRAM):   ****** LENGTHS OF NEW CHARACTER VARIABLES ******;
1149276   +LENGTH F_DepVar  $   12;
MPRINT(EM_DIAGRAM):   LENGTH F_DepVar $ 12;
1149277   +LENGTH I_DepVar  $   12;
MPRINT(EM_DIAGRAM):   LENGTH I_DepVar $ 12;
1149278   +LENGTH _WARN_  $    4;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $ 4;
1149279   +
1149280   +******              LABELS FOR NEW VARIABLES              ******;
MPRINT(EM_DIAGRAM):   ****** LABELS FOR NEW VARIABLES ******;
1149281   +LABEL _NODE_  = 'Node' ;
MPRINT(EM_DIAGRAM):   LABEL _NODE_ = 'Node' ;
1149282   +LABEL _LEAF_  = 'Leaf' ;
MPRINT(EM_DIAGRAM):   LABEL _LEAF_ = 'Leaf' ;
1149283   +LABEL P_DepVar0  = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   LABEL P_DepVar0 = 'Predicted: DepVar=0' ;
1149284   +LABEL P_DepVar1  = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   LABEL P_DepVar1 = 'Predicted: DepVar=1' ;
1149285   +LABEL Q_DepVar0  = 'Unadjusted P: DepVar=0' ;
MPRINT(EM_DIAGRAM):   LABEL Q_DepVar0 = 'Unadjusted P: DepVar=0' ;
1149286   +LABEL Q_DepVar1  = 'Unadjusted P: DepVar=1' ;
MPRINT(EM_DIAGRAM):   LABEL Q_DepVar1 = 'Unadjusted P: DepVar=1' ;
1149287   +LABEL V_DepVar0  = 'Validated: DepVar=0' ;
MPRINT(EM_DIAGRAM):   LABEL V_DepVar0 = 'Validated: DepVar=0' ;
1149288   +LABEL V_DepVar1  = 'Validated: DepVar=1' ;
MPRINT(EM_DIAGRAM):   LABEL V_DepVar1 = 'Validated: DepVar=1' ;
1149289   +LABEL R_DepVar0  = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   LABEL R_DepVar0 = 'Residual: DepVar=0' ;
1149290   +LABEL R_DepVar1  = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   LABEL R_DepVar1 = 'Residual: DepVar=1' ;
1149291   +LABEL F_DepVar  = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   LABEL F_DepVar = 'From: DepVar' ;
1149292   +LABEL I_DepVar  = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   LABEL I_DepVar = 'Into: DepVar' ;
1149293   +LABEL U_DepVar  = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   LABEL U_DepVar = 'Unnormalized Into: DepVar' ;
1149294   +LABEL _WARN_  = 'Warnings' ;
MPRINT(EM_DIAGRAM):   LABEL _WARN_ = 'Warnings' ;
1149295   +
1149296   +
1149297   +******      TEMPORARY VARIABLES FOR FORMATTED VALUES      ******;
MPRINT(EM_DIAGRAM):   ****** TEMPORARY VARIABLES FOR FORMATTED VALUES ******;
1149298   +LENGTH _ARBFMT_12 $     12; DROP _ARBFMT_12;
MPRINT(EM_DIAGRAM):   LENGTH _ARBFMT_12 $ 12;
MPRINT(EM_DIAGRAM):   DROP _ARBFMT_12;
1149299   +_ARBFMT_12 = ' '; /* Initialize to avoid warning. */
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = ' ';
1149300   +LENGTH _ARBFMT_8 $      8; DROP _ARBFMT_8;
MPRINT(EM_DIAGRAM):   LENGTH _ARBFMT_8 $ 8;
MPRINT(EM_DIAGRAM):   DROP _ARBFMT_8;
1149301   +_ARBFMT_8 = ' '; /* Initialize to avoid warning. */
MPRINT(EM_DIAGRAM):   _ARBFMT_8 = ' ';
1149302   +
1149303   +
1149304   +_ARBFMT_12 = PUT( DepVar , BEST.);
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( DepVar , BEST.);
1149305   + %DMNORMCP( _ARBFMT_12, F_DepVar );
MPRINT(DMNORMCP):   F_DepVar=dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1149306   +
1149307   +******             ASSIGN OBSERVATION TO NODE             ******;
MPRINT(EM_DIAGRAM):   ****** ASSIGN OBSERVATION TO NODE ******;
1149308   +IF  NOT MISSING(Recency ) AND
1149309   +  Recency  <                 38.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(Recency ) AND Recency < 38.5 THEN DO;
1149310   +  IF  NOT MISSING(MntMeatProducts ) AND
1149311   +                   431.5 <= MntMeatProducts  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(MntMeatProducts ) AND 431.5 <= MntMeatProducts THEN DO;
1149312   +    IF  NOT MISSING(NumCatalogPurchases ) AND
1149313   +      NumCatalogPurchases  <                  5.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(NumCatalogPurchases ) AND NumCatalogPurchases < 5.5 THEN
DO;
1149314   +      _ARBFMT_8 = PUT( Marital_Status , $8.);
MPRINT(EM_DIAGRAM):   _ARBFMT_8 = PUT( Marital_Status , $8.);
1149315   +       %DMNORMIP( _ARBFMT_8);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
1149316   +      IF _ARBFMT_8 IN ('MARRIED' ,'TOGETHER' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_8 IN ('MARRIED' ,'TOGETHER' ) THEN DO;
1149317   +        _NODE_  =                   21;
MPRINT(EM_DIAGRAM):   _NODE_ = 21;
1149318   +        _LEAF_  =                    5;
MPRINT(EM_DIAGRAM):   _LEAF_ = 5;
1149319   +        P_DepVar0  =     0.71052631578947;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.71052631578947;
1149320   +        P_DepVar1  =     0.28947368421052;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.28947368421052;
1149321   +        Q_DepVar0  =     0.71052631578947;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.71052631578947;
1149322   +        Q_DepVar1  =     0.28947368421052;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.28947368421052;
1149323   +        V_DepVar0  =     0.66666666666666;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.66666666666666;
1149324   +        V_DepVar1  =     0.33333333333333;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.33333333333333;
1149325   +        I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
1149326   +        U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1149327   +        END;
MPRINT(EM_DIAGRAM):   END;
1149328   +      ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1149329   +        _NODE_  =                   20;
MPRINT(EM_DIAGRAM):   _NODE_ = 20;
1149330   +        _LEAF_  =                    4;
MPRINT(EM_DIAGRAM):   _LEAF_ = 4;
1149331   +        P_DepVar0  =     0.17647058823529;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.17647058823529;
1149332   +        P_DepVar1  =      0.8235294117647;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.8235294117647;
1149333   +        Q_DepVar0  =     0.17647058823529;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.17647058823529;
1149334   +        Q_DepVar1  =      0.8235294117647;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.8235294117647;
1149335   +        V_DepVar0  =                 0.25;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.25;
1149336   +        V_DepVar1  =                 0.75;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.75;
1149337   +        I_DepVar  = '1' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '1' ;
1149338   +        U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1149339   +        END;
MPRINT(EM_DIAGRAM):   END;
1149340   +      END;
MPRINT(EM_DIAGRAM):   END;
1149341   +    ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1149342   +      _NODE_  =                   11;
MPRINT(EM_DIAGRAM):   _NODE_ = 11;
1149343   +      _LEAF_  =                    6;
MPRINT(EM_DIAGRAM):   _LEAF_ = 6;
1149344   +      P_DepVar0  =     0.15730337078651;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.15730337078651;
1149345   +      P_DepVar1  =     0.84269662921348;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.84269662921348;
1149346   +      Q_DepVar0  =     0.15730337078651;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.15730337078651;
1149347   +      Q_DepVar1  =     0.84269662921348;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.84269662921348;
1149348   +      V_DepVar0  =     0.29411764705882;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.29411764705882;
1149349   +      V_DepVar1  =     0.70588235294117;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.70588235294117;
1149350   +      I_DepVar  = '1' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '1' ;
1149351   +      U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1149352   +      END;
MPRINT(EM_DIAGRAM):   END;
1149353   +    END;
MPRINT(EM_DIAGRAM):   END;
1149354   +  ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1149355   +    _ARBFMT_12 = PUT( AcceptedCmp3 , BEST.);
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( AcceptedCmp3 , BEST.);
1149356   +     %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
1149357   +    IF _ARBFMT_12 IN ('1' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('1' ) THEN DO;
1149358   +      IF  NOT MISSING(NumWebVisitsMonth ) AND
1149359   +        NumWebVisitsMonth  <                  5.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(NumWebVisitsMonth ) AND NumWebVisitsMonth < 5.5 THEN DO;
1149360   +        _NODE_  =                   16;
MPRINT(EM_DIAGRAM):   _NODE_ = 16;
1149361   +        _LEAF_  =                    1;
MPRINT(EM_DIAGRAM):   _LEAF_ = 1;
1149362   +        P_DepVar0  =     0.64705882352941;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.64705882352941;
1149363   +        P_DepVar1  =     0.35294117647058;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.35294117647058;
1149364   +        Q_DepVar0  =     0.64705882352941;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.64705882352941;
1149365   +        Q_DepVar1  =     0.35294117647058;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.35294117647058;
1149366   +        V_DepVar0  =     0.57142857142857;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.57142857142857;
1149367   +        V_DepVar1  =     0.42857142857142;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.42857142857142;
1149368   +        I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
1149369   +        U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1149370   +        END;
MPRINT(EM_DIAGRAM):   END;
1149371   +      ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1149372   +        _NODE_  =                   17;
MPRINT(EM_DIAGRAM):   _NODE_ = 17;
1149373   +        _LEAF_  =                    2;
MPRINT(EM_DIAGRAM):   _LEAF_ = 2;
1149374   +        P_DepVar0  =     0.17391304347826;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.17391304347826;
1149375   +        P_DepVar1  =     0.82608695652173;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.82608695652173;
1149376   +        Q_DepVar0  =     0.17391304347826;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.17391304347826;
1149377   +        Q_DepVar1  =     0.82608695652173;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.82608695652173;
1149378   +        V_DepVar0  =                 0.15;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.15;
1149379   +        V_DepVar1  =                 0.85;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.85;
1149380   +        I_DepVar  = '1' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '1' ;
1149381   +        U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1149382   +        END;
MPRINT(EM_DIAGRAM):   END;
1149383   +      END;
MPRINT(EM_DIAGRAM):   END;
1149384   +    ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1149385   +      _NODE_  =                    9;
MPRINT(EM_DIAGRAM):   _NODE_ = 9;
1149386   +      _LEAF_  =                    3;
MPRINT(EM_DIAGRAM):   _LEAF_ = 3;
1149387   +      P_DepVar0  =     0.82099596231493;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.82099596231493;
1149388   +      P_DepVar1  =     0.17900403768506;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.17900403768506;
1149389   +      Q_DepVar0  =     0.82099596231493;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.82099596231493;
1149390   +      Q_DepVar1  =     0.17900403768506;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.17900403768506;
1149391   +      V_DepVar0  =     0.80966767371601;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.80966767371601;
1149392   +      V_DepVar1  =     0.19033232628398;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.19033232628398;
1149393   +      I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
1149394   +      U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1149395   +      END;
MPRINT(EM_DIAGRAM):   END;
1149396   +    END;
MPRINT(EM_DIAGRAM):   END;
1149397   +  END;
MPRINT(EM_DIAGRAM):   END;
1149398   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1149399   +  _ARBFMT_12 = PUT( AcceptedCmp5 , BEST.);
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( AcceptedCmp5 , BEST.);
1149400   +   %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
1149401   +  IF _ARBFMT_12 IN ('1' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('1' ) THEN DO;
1149402   +    IF  NOT MISSING(MntWines ) AND
1149403   +      MntWines  <                412.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(MntWines ) AND MntWines < 412.5 THEN DO;
1149404   +      _NODE_  =                   12;
MPRINT(EM_DIAGRAM):   _NODE_ = 12;
1149405   +      _LEAF_  =                    7;
MPRINT(EM_DIAGRAM):   _LEAF_ = 7;
1149406   +      P_DepVar0  =     0.13333333333333;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.13333333333333;
1149407   +      P_DepVar1  =     0.86666666666666;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.86666666666666;
1149408   +      Q_DepVar0  =     0.13333333333333;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.13333333333333;
1149409   +      Q_DepVar1  =     0.86666666666666;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.86666666666666;
1149410   +      V_DepVar0  =     0.16666666666666;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.16666666666666;
1149411   +      V_DepVar1  =     0.83333333333333;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.83333333333333;
1149412   +      I_DepVar  = '1' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '1' ;
1149413   +      U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1149414   +      END;
MPRINT(EM_DIAGRAM):   END;
1149415   +    ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1149416   +      _NODE_  =                   13;
MPRINT(EM_DIAGRAM):   _NODE_ = 13;
1149417   +      _LEAF_  =                    8;
MPRINT(EM_DIAGRAM):   _LEAF_ = 8;
1149418   +      P_DepVar0  =     0.70833333333333;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.70833333333333;
1149419   +      P_DepVar1  =     0.29166666666666;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.29166666666666;
1149420   +      Q_DepVar0  =     0.70833333333333;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.70833333333333;
1149421   +      Q_DepVar1  =     0.29166666666666;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.29166666666666;
1149422   +      V_DepVar0  =     0.63461538461538;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.63461538461538;
1149423   +      V_DepVar1  =     0.36538461538461;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.36538461538461;
1149424   +      I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
1149425   +      U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1149426   +      END;
MPRINT(EM_DIAGRAM):   END;
1149427   +    END;
MPRINT(EM_DIAGRAM):   END;
1149428   +  ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1149429   +    _NODE_  =                    7;
MPRINT(EM_DIAGRAM):   _NODE_ = 7;
1149430   +    _LEAF_  =                    9;
MPRINT(EM_DIAGRAM):   _LEAF_ = 9;
1149431   +    P_DepVar0  =     0.96877380045696;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.96877380045696;
1149432   +    P_DepVar1  =     0.03122619954303;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.03122619954303;
1149433   +    Q_DepVar0  =     0.96877380045696;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.96877380045696;
1149434   +    Q_DepVar1  =     0.03122619954303;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.03122619954303;
1149435   +    V_DepVar0  =     0.96756756756756;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.96756756756756;
1149436   +    V_DepVar1  =     0.03243243243243;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.03243243243243;
1149437   +    I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
1149438   +    U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1149439   +    END;
MPRINT(EM_DIAGRAM):   END;
1149440   +  END;
MPRINT(EM_DIAGRAM):   END;
1149441   +
1149442   +*****  RESIDUALS R_ *************;
MPRINT(EM_DIAGRAM):   ***** RESIDUALS R_ *************;
1149443   +IF  F_DepVar  NE '0'
1149444   +AND F_DepVar  NE '1'  THEN DO;
MPRINT(EM_DIAGRAM):   IF F_DepVar NE '0' AND F_DepVar NE '1' THEN DO;
1149445   +        R_DepVar0  = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
1149446   +        R_DepVar1  = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
1149447   + END;
MPRINT(EM_DIAGRAM):   END;
1149448   + ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1149449   +       R_DepVar0  =  -P_DepVar0 ;
MPRINT(EM_DIAGRAM):   R_DepVar0 = -P_DepVar0 ;
1149450   +       R_DepVar1  =  -P_DepVar1 ;
MPRINT(EM_DIAGRAM):   R_DepVar1 = -P_DepVar1 ;
1149451   +       SELECT( F_DepVar  );
MPRINT(EM_DIAGRAM):   SELECT( F_DepVar );
1149452   +          WHEN( '0'  ) R_DepVar0  = R_DepVar0  +1;
MPRINT(EM_DIAGRAM):   WHEN( '0' ) R_DepVar0 = R_DepVar0 +1;
1149453   +          WHEN( '1'  ) R_DepVar1  = R_DepVar1  +1;
MPRINT(EM_DIAGRAM):   WHEN( '1' ) R_DepVar1 = R_DepVar1 +1;
1149454   +       END;
MPRINT(EM_DIAGRAM):   END;
1149455   + END;
MPRINT(EM_DIAGRAM):   END;
1149456   +
1149457   +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
1149458   +******          END OF DECISION TREE SCORING CODE         ******;
MPRINT(EM_DIAGRAM):   ****** END OF DECISION TREE SCORING CODE ******;
1149459   +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
1149460   +drop _LEAF_;
MPRINT(EM_DIAGRAM):   drop _LEAF_;
1149461   +* Renaming variables for Tree5;
MPRINT(EM_DIAGRAM):   * Renaming variables for Tree5;
1149462   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1149463   +* Renaming Posterior variables for Tree5;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Tree5;
1149464   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1149465   +drop Tree5_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Tree5_P_DepVar1;
1149466   +Tree5_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Tree5_P_DepVar1 = P_DepVar1;
1149467   +drop Tree5_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Tree5_P_DepVar0;
1149468   +Tree5_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Tree5_P_DepVar0 = P_DepVar0;
1149469   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1149470   +* Renaming _WARN_ variable for Tree5;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Tree5;
1149471   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1149472   +length Tree5_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Tree5_WARN_ $4;
1149473   +drop Tree5_WARN_;
MPRINT(EM_DIAGRAM):   drop Tree5_WARN_;
1149474   +Tree5_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Tree5_WARN_ = _WARN_;
1149475   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1149476   +* Ensmbl9: Scoring Code of model 3 of 10;
MPRINT(EM_DIAGRAM):   * Ensmbl9: Scoring Code of model 3 of 10;
1149477   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1149478   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1149479   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
1149480   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1149481   +* NODE: Neural33;
MPRINT(EM_DIAGRAM):   * NODE: Neural33;
1149482   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1149483   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1149484   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1149485   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1149486   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1149487   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1149488   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1149489   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1149490   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1149491   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1149492   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1149493   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1149494   +LENGTH _WARN_ $4
1149495   +      F_DepVar  $ 12
1149496   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1149497   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1149498   +
1149499   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1149500   +
1149501   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1149502   +
1149503   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1149504   +
1149505   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1149506   +
1149507   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1149508   +
1149509   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1149510   +
1149511   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1149512   +
1149513   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1149514   +
1149515   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1149516   +
1149517   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1149518   +
1149519   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1149520   +
1149521   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1149522   +
1149523   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1149524   +
1149525   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1149526   +
1149527   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1149528   +
1149529   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1149530   +
1149531   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1149532   +
1149533   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1149534   +
1149535   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1149536   +
1149537   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1149538   +
1149539   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1149540   +
1149541   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1149542   +
1149543   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1149544   +
1149545   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1149546   +
1149547   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1149548   +
1149549   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1149550   +
1149551   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1149552   +
1149553   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1149554   +
1149555   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1149556   +
1149557   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1149558   +
1149559   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1149560   +
1149561   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1149562   +
1149563   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1149564   +
1149565   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1149566   +
1149567   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1149568   +
1149569   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1149570   +
1149571   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1149572   +
1149573   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1149574   +
1149575   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1149576   +
1149577   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1149578   +
1149579   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1149580   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1149581   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1149582   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1149583   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1149584   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1149585   +end;
MPRINT(EM_DIAGRAM):   end;
1149586   +else do;
MPRINT(EM_DIAGRAM):   else do;
1149587   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1149588   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1149589   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1149590   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1149591   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1149592   +   end;
MPRINT(EM_DIAGRAM):   end;
1149593   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1149594   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1149595   +   end;
MPRINT(EM_DIAGRAM):   end;
1149596   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1149597   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1149598   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1149599   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1149600   +   end;
MPRINT(EM_DIAGRAM):   end;
1149601   +end;
MPRINT(EM_DIAGRAM):   end;
1149602   +
1149603   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1149604   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1149605   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1149606   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1149607   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1149608   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1149609   +end;
MPRINT(EM_DIAGRAM):   end;
1149610   +else do;
MPRINT(EM_DIAGRAM):   else do;
1149611   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1149612   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1149613   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1149614   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1149615   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1149616   +   end;
MPRINT(EM_DIAGRAM):   end;
1149617   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1149618   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1149619   +   end;
MPRINT(EM_DIAGRAM):   end;
1149620   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1149621   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1149622   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1149623   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1149624   +   end;
MPRINT(EM_DIAGRAM):   end;
1149625   +end;
MPRINT(EM_DIAGRAM):   end;
1149626   +
1149627   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1149628   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1149629   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1149630   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1149631   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1149632   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1149633   +end;
MPRINT(EM_DIAGRAM):   end;
1149634   +else do;
MPRINT(EM_DIAGRAM):   else do;
1149635   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1149636   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1149637   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1149638   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1149639   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1149640   +   end;
MPRINT(EM_DIAGRAM):   end;
1149641   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1149642   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1149643   +   end;
MPRINT(EM_DIAGRAM):   end;
1149644   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1149645   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1149646   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1149647   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1149648   +   end;
MPRINT(EM_DIAGRAM):   end;
1149649   +end;
MPRINT(EM_DIAGRAM):   end;
1149650   +
1149651   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1149652   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1149653   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1149654   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1149655   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1149656   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1149657   +end;
MPRINT(EM_DIAGRAM):   end;
1149658   +else do;
MPRINT(EM_DIAGRAM):   else do;
1149659   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1149660   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1149661   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1149662   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1149663   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1149664   +   end;
MPRINT(EM_DIAGRAM):   end;
1149665   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1149666   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1149667   +   end;
MPRINT(EM_DIAGRAM):   end;
1149668   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1149669   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1149670   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1149671   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1149672   +   end;
MPRINT(EM_DIAGRAM):   end;
1149673   +end;
MPRINT(EM_DIAGRAM):   end;
1149674   +
1149675   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1149676   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1149677   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1149678   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1149679   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1149680   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1149681   +end;
MPRINT(EM_DIAGRAM):   end;
1149682   +else do;
MPRINT(EM_DIAGRAM):   else do;
1149683   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1149684   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1149685   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1149686   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1149687   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1149688   +   end;
MPRINT(EM_DIAGRAM):   end;
1149689   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1149690   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1149691   +   end;
MPRINT(EM_DIAGRAM):   end;
1149692   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1149693   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1149694   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1149695   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1149696   +   end;
MPRINT(EM_DIAGRAM):   end;
1149697   +end;
MPRINT(EM_DIAGRAM):   end;
1149698   +
1149699   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1149700   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1149701   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1149702   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1149703   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1149704   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1149705   +end;
MPRINT(EM_DIAGRAM):   end;
1149706   +else do;
MPRINT(EM_DIAGRAM):   else do;
1149707   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1149708   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1149709   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1149710   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1149711   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1149712   +   end;
MPRINT(EM_DIAGRAM):   end;
1149713   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1149714   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1149715   +   end;
MPRINT(EM_DIAGRAM):   end;
1149716   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1149717   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1149718   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1149719   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1149720   +   end;
MPRINT(EM_DIAGRAM):   end;
1149721   +end;
MPRINT(EM_DIAGRAM):   end;
1149722   +
1149723   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1149724   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
1149725   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1149726   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1149727   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1149728   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1149729   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1149730   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1149731   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1149732   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1149733   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1149734   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1149735   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1149736   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1149737   +end;
MPRINT(EM_DIAGRAM):   end;
1149738   +else do;
MPRINT(EM_DIAGRAM):   else do;
1149739   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1149740   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1149741   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1149742   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1149743   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1149744   +   end;
MPRINT(EM_DIAGRAM):   end;
1149745   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1149746   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1149747   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1149748   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1149749   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1149750   +   end;
MPRINT(EM_DIAGRAM):   end;
1149751   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1149752   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1149753   +   end;
MPRINT(EM_DIAGRAM):   end;
1149754   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1149755   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1149756   +   end;
MPRINT(EM_DIAGRAM):   end;
1149757   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1149758   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1149759   +   end;
MPRINT(EM_DIAGRAM):   end;
1149760   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1149761   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1149762   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1149763   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1149764   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1149765   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1149766   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1149767   +   end;
MPRINT(EM_DIAGRAM):   end;
1149768   +end;
MPRINT(EM_DIAGRAM):   end;
1149769   +
1149770   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1149771   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1149772   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
1149773   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1149774   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1149775   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1149776   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1149777   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1149778   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1149779   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1149780   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1149781   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1149782   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1149783   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1149784   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1149785   +end;
MPRINT(EM_DIAGRAM):   end;
1149786   +else do;
MPRINT(EM_DIAGRAM):   else do;
1149787   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1149788   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1149789   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1149790   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1149791   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1149792   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1149793   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1149794   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1149795   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1149796   +         end;
MPRINT(EM_DIAGRAM):   end;
1149797   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1149798   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1149799   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1149800   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1149801   +            end;
MPRINT(EM_DIAGRAM):   end;
1149802   +         end;
MPRINT(EM_DIAGRAM):   end;
1149803   +      end;
MPRINT(EM_DIAGRAM):   end;
1149804   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1149805   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1149806   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1149807   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1149808   +         end;
MPRINT(EM_DIAGRAM):   end;
1149809   +      end;
MPRINT(EM_DIAGRAM):   end;
1149810   +   end;
MPRINT(EM_DIAGRAM):   end;
1149811   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1149812   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1149813   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1149814   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1149815   +      end;
MPRINT(EM_DIAGRAM):   end;
1149816   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1149817   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1149818   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1149819   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1149820   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1149821   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1149822   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1149823   +         end;
MPRINT(EM_DIAGRAM):   end;
1149824   +      end;
MPRINT(EM_DIAGRAM):   end;
1149825   +   end;
MPRINT(EM_DIAGRAM):   end;
1149826   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1149827   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1149828   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1149829   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1149830   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1149831   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1149832   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1149833   +   end;
MPRINT(EM_DIAGRAM):   end;
1149834   +end;
MPRINT(EM_DIAGRAM):   end;
1149835   +
1149836   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1149837   +*** Checking missing input Interval
1149838   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1149839   +
1149840   +IF NMISS(
1149841   +   Income ,
1149842   +   Kidhome ,
1149843   +   MntFishProducts ,
1149844   +   MntFruits ,
1149845   +   MntGoldProds ,
1149846   +   MntMeatProducts ,
1149847   +   MntSweetProducts ,
1149848   +   MntWines ,
1149849   +   NumCatalogPurchases ,
1149850   +   NumDealsPurchases ,
1149851   +   NumStorePurchases ,
1149852   +   NumWebPurchases ,
1149853   +   NumWebVisitsMonth ,
1149854   +   Recency ,
1149855   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Income , Kidhome , MntFishProducts , MntFruits , MntGoldProds
, MntMeatProducts , MntSweetProducts , MntWines , NumCatalogPurchases , NumDealsPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , Recency , Teenhome ) THEN DO;
1149856   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1149857   +
1149858   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1149859   +END;
MPRINT(EM_DIAGRAM):   END;
1149860   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1149861   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1149862   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1149863   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1149864   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1149865   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1149866   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1149867   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1149868   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1149869   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1149870   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1149871   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1149872   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1149873   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1149874   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1149875   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1149876   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1149877   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1149878   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1149879   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1149880   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1149881   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1149882   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1149883   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1149884   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1149885   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1149886   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1149887   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1149888   +END;
MPRINT(EM_DIAGRAM):   END;
1149889   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1149890   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1149891   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1149892   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1149893   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1149894   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1149895   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1149896   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1149897   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1149898   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1149899   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1149900   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1149901   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1149902   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
1149903   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1149904   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1149905   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1149906   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1149907   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1149908   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1149909   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1149910   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1149911   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1149912   +   ELSE S_NumCatalogPurchases
1149913   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1149914   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1149915   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1149916   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1149917   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1149918   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1149919   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1149920   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1149921   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1149922   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1149923   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1149924   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1149925   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1149926   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1149927   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1149928   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1149929   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1149930   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1149931   +END;
MPRINT(EM_DIAGRAM):   END;
1149932   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1149933   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1149934   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1149935   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1149936   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1149937   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1149938   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1149939   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1149940   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1149941   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1149942   +   H11  =     0.32435248899543 * S_Income  +    -0.47929849648429 * S_Kidhome
1149943   +          +     0.13364230231465 * S_MntFishProducts
1149944   +          +     -0.1386717864506 * S_MntFruits  +    -0.02769770185129 *
1149945   +        S_MntGoldProds  +    -0.29009812234724 * S_MntMeatProducts
1149946   +          +    -0.10871064476617 * S_MntSweetProducts
1149947   +          +     0.57858611197719 * S_MntWines  +    -0.26900817180555 *
1149948   +        S_NumCatalogPurchases  +    -0.39598523430317 * S_NumDealsPurchases
1149949   +          +     0.52835897625366 * S_NumStorePurchases
1149950   +          +     0.66297635444958 * S_NumWebPurchases
1149951   +          +    -0.31727971903608 * S_NumWebVisitsMonth
1149952   +          +     0.12789679291219 * S_Recency  +    -0.39270105014448 *
1149953   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.32435248899543 * S_Income + -0.47929849648429 * S_Kidhome +
0.13364230231465 * S_MntFishProducts + -0.1386717864506 * S_MntFruits + -0.02769770185129 *
S_MntGoldProds + -0.29009812234724 * S_MntMeatProducts + -0.10871064476617 *
S_MntSweetProducts + 0.57858611197719 * S_MntWines + -0.26900817180555 * S_NumCatalogPurchases
+ -0.39598523430317 * S_NumDealsPurchases + 0.52835897625366 * S_NumStorePurchases +
0.66297635444958 * S_NumWebPurchases + -0.31727971903608 * S_NumWebVisitsMonth +
0.12789679291219 * S_Recency + -0.39270105014448 * S_Teenhome ;
1149954   +   H12  =     0.37777254641249 * S_Income  +     0.79199857244438 * S_Kidhome
1149955   +          +     0.14748983783528 * S_MntFishProducts
1149956   +          +     0.14994032216514 * S_MntFruits  +     0.19147871752132 *
1149957   +        S_MntGoldProds  +     0.80535213270443 * S_MntMeatProducts
1149958   +          +     0.31095426478608 * S_MntSweetProducts
1149959   +          +     0.00471809437476 * S_MntWines  +     0.93716396534802 *
1149960   +        S_NumCatalogPurchases  +     0.86841248727948 * S_NumDealsPurchases
1149961   +          +     0.14387100066933 * S_NumStorePurchases
1149962   +          +    -0.01648998884133 * S_NumWebPurchases
1149963   +          +     -0.1378597161576 * S_NumWebVisitsMonth
1149964   +          +     0.15850653387379 * S_Recency  +     0.11714339614827 *
1149965   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = 0.37777254641249 * S_Income + 0.79199857244438 * S_Kidhome +
0.14748983783528 * S_MntFishProducts + 0.14994032216514 * S_MntFruits + 0.19147871752132 *
S_MntGoldProds + 0.80535213270443 * S_MntMeatProducts + 0.31095426478608 * S_MntSweetProducts
+ 0.00471809437476 * S_MntWines + 0.93716396534802 * S_NumCatalogPurchases + 0.86841248727948
* S_NumDealsPurchases + 0.14387100066933 * S_NumStorePurchases + -0.01648998884133 *
S_NumWebPurchases + -0.1378597161576 * S_NumWebVisitsMonth + 0.15850653387379 * S_Recency +
0.11714339614827 * S_Teenhome ;
1149966   +   H13  =    -0.31490756773649 * S_Income  +      0.4776214738577 * S_Kidhome
1149967   +          +     0.00774185404534 * S_MntFishProducts
1149968   +          +     0.22292845341942 * S_MntFruits  +     0.11636422687317 *
1149969   +        S_MntGoldProds  +    -0.45522230281212 * S_MntMeatProducts
1149970   +          +     0.28728624268589 * S_MntSweetProducts
1149971   +          +     0.74892928025295 * S_MntWines  +     -0.4834082773325 *
1149972   +        S_NumCatalogPurchases  +    -0.05055717315946 * S_NumDealsPurchases
1149973   +          +     0.56446566213593 * S_NumStorePurchases
1149974   +          +     0.44547549135846 * S_NumWebPurchases
1149975   +          +    -1.17648505936662 * S_NumWebVisitsMonth
1149976   +          +     1.30076355226685 * S_Recency  +     0.56217939635691 *
1149977   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = -0.31490756773649 * S_Income + 0.4776214738577 * S_Kidhome +
0.00774185404534 * S_MntFishProducts + 0.22292845341942 * S_MntFruits + 0.11636422687317 *
S_MntGoldProds + -0.45522230281212 * S_MntMeatProducts + 0.28728624268589 * S_MntSweetProducts
+ 0.74892928025295 * S_MntWines + -0.4834082773325 * S_NumCatalogPurchases + -0.05055717315946
* S_NumDealsPurchases + 0.56446566213593 * S_NumStorePurchases + 0.44547549135846 *
S_NumWebPurchases + -1.17648505936662 * S_NumWebVisitsMonth + 1.30076355226685 * S_Recency +
0.56217939635691 * S_Teenhome ;
1149978   +   H14  =    -0.40179905952719 * S_Income  +     0.16141565212918 * S_Kidhome
1149979   +          +     0.24665716882586 * S_MntFishProducts
1149980   +          +     0.03410629332469 * S_MntFruits  +     -0.1353295645077 *
1149981   +        S_MntGoldProds  +    -0.74661391150362 * S_MntMeatProducts
1149982   +          +    -0.10530818594736 * S_MntSweetProducts
1149983   +          +     0.30618479493194 * S_MntWines  +    -0.63426712804061 *
1149984   +        S_NumCatalogPurchases  +    -0.39486403699564 * S_NumDealsPurchases
1149985   +          +     0.36617016651032 * S_NumStorePurchases
1149986   +          +      0.3580014320946 * S_NumWebPurchases
1149987   +          +    -0.72597289213724 * S_NumWebVisitsMonth
1149988   +          +     0.93272927444012 * S_Recency  +     0.24531402677279 *
1149989   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = -0.40179905952719 * S_Income + 0.16141565212918 * S_Kidhome +
0.24665716882586 * S_MntFishProducts + 0.03410629332469 * S_MntFruits + -0.1353295645077 *
S_MntGoldProds + -0.74661391150362 * S_MntMeatProducts + -0.10530818594736 *
S_MntSweetProducts + 0.30618479493194 * S_MntWines + -0.63426712804061 * S_NumCatalogPurchases
+ -0.39486403699564 * S_NumDealsPurchases + 0.36617016651032 * S_NumStorePurchases +
0.3580014320946 * S_NumWebPurchases + -0.72597289213724 * S_NumWebVisitsMonth +
0.93272927444012 * S_Recency + 0.24531402677279 * S_Teenhome ;
1149990   +   H11  = H11  +     0.10790306691381 * AcceptedCmp10
1149991   +          +     0.36067546675468 * AcceptedCmp20  +     0.56838342781466 *
1149992   +        AcceptedCmp30  +     0.10138997954661 * AcceptedCmp40
1149993   +          +     0.23809874960179 * AcceptedCmp50  +     0.42164522965364 *
1149994   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.10790306691381 * AcceptedCmp10 + 0.36067546675468 *
AcceptedCmp20 + 0.56838342781466 * AcceptedCmp30 + 0.10138997954661 * AcceptedCmp40 +
0.23809874960179 * AcceptedCmp50 + 0.42164522965364 * Complain0 ;
1149995   +   H12  = H12  +    -0.10342435301564 * AcceptedCmp10
1149996   +          +     -0.1021625473908 * AcceptedCmp20  +    -0.17400073301804 *
1149997   +        AcceptedCmp30  +      0.1295257925186 * AcceptedCmp40
1149998   +          +    -0.17149939617806 * AcceptedCmp50  +    -0.11843709761825 *
1149999   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.10342435301564 * AcceptedCmp10 + -0.1021625473908 *
AcceptedCmp20 + -0.17400073301804 * AcceptedCmp30 + 0.1295257925186 * AcceptedCmp40 +
-0.17149939617806 * AcceptedCmp50 + -0.11843709761825 * Complain0 ;
1150000   +   H13  = H13  +      0.3357459370893 * AcceptedCmp10
1150001   +          +      -0.142120215863 * AcceptedCmp20  +     0.74265608697316 *
1150002   +        AcceptedCmp30  +     0.62493796040954 * AcceptedCmp40
1150003   +          +     0.60033091776267 * AcceptedCmp50  +    -0.70537393421868 *
1150004   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.3357459370893 * AcceptedCmp10 + -0.142120215863 *
AcceptedCmp20 + 0.74265608697316 * AcceptedCmp30 + 0.62493796040954 * AcceptedCmp40 +
0.60033091776267 * AcceptedCmp50 + -0.70537393421868 * Complain0 ;
1150005   +   H14  = H14  +     0.52427760948235 * AcceptedCmp10
1150006   +          +     0.50852083885302 * AcceptedCmp20  +     0.30116257238429 *
1150007   +        AcceptedCmp30  +     0.31213749631365 * AcceptedCmp40
1150008   +          +     0.49344261660916 * AcceptedCmp50  +    -0.18226921500969 *
1150009   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.52427760948235 * AcceptedCmp10 + 0.50852083885302 *
AcceptedCmp20 + 0.30116257238429 * AcceptedCmp30 + 0.31213749631365 * AcceptedCmp40 +
0.49344261660916 * AcceptedCmp50 + -0.18226921500969 * Complain0 ;
1150010   +   H11  = H11  +     0.04284090874847 * Education2n_Cycle
1150011   +          +    -0.30425860762413 * EducationBasic  +    -0.44977960705402 *
1150012   +        EducationGraduation  +     -0.0712759822621 * EducationMaster
1150013   +          +     0.05171313818048 * Marital_StatusDivorced
1150014   +          +    -0.79112453157624 * Marital_StatusMarried
1150015   +          +     0.89650138723512 * Marital_StatusSingle
1150016   +          +    -0.22094240412913 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.04284090874847 * Education2n_Cycle + -0.30425860762413 *
EducationBasic + -0.44977960705402 * EducationGraduation + -0.0712759822621 * EducationMaster
+ 0.05171313818048 * Marital_StatusDivorced + -0.79112453157624 * Marital_StatusMarried +
0.89650138723512 * Marital_StatusSingle + -0.22094240412913 * Marital_StatusTogether ;
1150017   +   H12  = H12  +    -0.32431446530898 * Education2n_Cycle
1150018   +          +     0.04651949620543 * EducationBasic  +     0.50250608857106 *
1150019   +        EducationGraduation  +     0.00514401910219 * EducationMaster
1150020   +          +     0.05091092042416 * Marital_StatusDivorced
1150021   +          +     0.86642985712339 * Marital_StatusMarried
1150022   +          +    -0.14148832619997 * Marital_StatusSingle
1150023   +          +     0.54248977280079 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.32431446530898 * Education2n_Cycle + 0.04651949620543 *
EducationBasic + 0.50250608857106 * EducationGraduation + 0.00514401910219 * EducationMaster +
0.05091092042416 * Marital_StatusDivorced + 0.86642985712339 * Marital_StatusMarried +
-0.14148832619997 * Marital_StatusSingle + 0.54248977280079 * Marital_StatusTogether ;
1150024   +   H13  = H13  +      0.0307333873684 * Education2n_Cycle
1150025   +          +     0.54778728297045 * EducationBasic  +    -0.56032296783121 *
1150026   +        EducationGraduation  +     0.26811389967146 * EducationMaster
1150027   +          +    -0.67787102917679 * Marital_StatusDivorced
1150028   +          +     1.38931504762816 * Marital_StatusMarried
1150029   +          +    -0.51164629287485 * Marital_StatusSingle
1150030   +          +     1.18856608313733 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.0307333873684 * Education2n_Cycle + 0.54778728297045 *
EducationBasic + -0.56032296783121 * EducationGraduation + 0.26811389967146 * EducationMaster
+ -0.67787102917679 * Marital_StatusDivorced + 1.38931504762816 * Marital_StatusMarried +
-0.51164629287485 * Marital_StatusSingle + 1.18856608313733 * Marital_StatusTogether ;
1150031   +   H14  = H14  +    -0.07575289231798 * Education2n_Cycle
1150032   +          +     0.20678548929493 * EducationBasic  +     0.15952949579281 *
1150033   +        EducationGraduation  +    -0.08313247341922 * EducationMaster
1150034   +          +     0.12658153975639 * Marital_StatusDivorced
1150035   +          +     0.20111721742791 * Marital_StatusMarried
1150036   +          +     -0.3521524791648 * Marital_StatusSingle
1150037   +          +     0.24908846940254 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.07575289231798 * Education2n_Cycle + 0.20678548929493 *
EducationBasic + 0.15952949579281 * EducationGraduation + -0.08313247341922 * EducationMaster
+ 0.12658153975639 * Marital_StatusDivorced + 0.20111721742791 * Marital_StatusMarried +
-0.3521524791648 * Marital_StatusSingle + 0.24908846940254 * Marital_StatusTogether ;
1150038   +   H11  =      0.8846003542153 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 0.8846003542153 + H11 ;
1150039   +   H12  =      1.7793661863354 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 1.7793661863354 + H12 ;
1150040   +   H13  =    -0.73914187312129 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.73914187312129 + H13 ;
1150041   +   H14  =    -0.28907220457418 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = -0.28907220457418 + H14 ;
1150042   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1150043   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1150044   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1150045   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1150046   +END;
MPRINT(EM_DIAGRAM):   END;
1150047   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1150048   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1150049   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1150050   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1150051   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1150052   +END;
MPRINT(EM_DIAGRAM):   END;
1150053   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1150054   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1150055   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1150056   +
1150057   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1150058   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1150059   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1150060   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1150061   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1150062   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1150063   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1150064   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1150065   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1150066   +end;
MPRINT(EM_DIAGRAM):   end;
1150067   +else do;
MPRINT(EM_DIAGRAM):   else do;
1150068   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1150069   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1150070   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1150071   +   end;
MPRINT(EM_DIAGRAM):   end;
1150072   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1150073   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1150074   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1150075   +   end;
MPRINT(EM_DIAGRAM):   end;
1150076   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1150077   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1150078   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1150079   +   end;
MPRINT(EM_DIAGRAM):   end;
1150080   +end;
MPRINT(EM_DIAGRAM):   end;
1150081   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1150082   +   P_DepVar1  =    -1.84303414221873 * H11  +     1.56062653143645 * H12
1150083   +          +     -3.0630784922123 * H13  +    -4.55573659919551 * H14 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.84303414221873 * H11 + 1.56062653143645 * H12 +
-3.0630784922123 * H13 + -4.55573659919551 * H14 ;
1150084   +   P_DepVar1  =    -1.51714888392638 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.51714888392638 + P_DepVar1 ;
1150085   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1150086   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1150087   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1150088   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1150089   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1150090   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1150091   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1150092   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1150093   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1150094   +END;
MPRINT(EM_DIAGRAM):   END;
1150095   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1150096   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1150097   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1150098   +END;
MPRINT(EM_DIAGRAM):   END;
1150099   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1150100   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1150101   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1150102   +END;
MPRINT(EM_DIAGRAM):   END;
1150103   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1150104   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1150105   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1150106   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1150107   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1150108   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1150109   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1150110   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1150111   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1150112   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1150113   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1150114   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1150115   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1150116   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1150117   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1150118   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1150119   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1150120   +END;
MPRINT(EM_DIAGRAM):   END;
1150121   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1150122   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1150123   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1150124   +drop
1150125   +H11
1150126   +H12
1150127   +H13
1150128   +H14
1150129   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 ;
1150130   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1150131   +* Renaming variables for Neural33;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural33;
1150132   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1150133   +* Renaming Posterior variables for Neural33;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural33;
1150134   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1150135   +drop Neural33_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural33_P_DepVar1;
1150136   +Neural33_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural33_P_DepVar1 = P_DepVar1;
1150137   +drop Neural33_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural33_P_DepVar0;
1150138   +Neural33_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural33_P_DepVar0 = P_DepVar0;
1150139   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1150140   +* Renaming _WARN_ variable for Neural33;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural33;
1150141   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1150142   +length Neural33_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural33_WARN_ $4;
1150143   +drop Neural33_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural33_WARN_;
1150144   +Neural33_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural33_WARN_ = _WARN_;
1150145   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1150146   +* Ensmbl9: Scoring Code of model 4 of 10;
MPRINT(EM_DIAGRAM):   * Ensmbl9: Scoring Code of model 4 of 10;
1150147   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1150148   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1150149   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
1150150   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1150151   +* NODE: Neural6;
MPRINT(EM_DIAGRAM):   * NODE: Neural6;
1150152   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1150153   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1150154   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1150155   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1150156   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1150157   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1150158   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1150159   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1150160   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1150161   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1150162   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1150163   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1150164   +LENGTH _WARN_ $4
1150165   +      F_DepVar  $ 12
1150166   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1150167   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1150168   +
1150169   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1150170   +
1150171   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1150172   +
1150173   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1150174   +
1150175   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1150176   +
1150177   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1150178   +
1150179   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1150180   +
1150181   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1150182   +
1150183   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1150184   +
1150185   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1150186   +
1150187   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1150188   +
1150189   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1150190   +
1150191   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1150192   +
1150193   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1150194   +
1150195   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1150196   +
1150197   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1150198   +
1150199   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1150200   +
1150201   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1150202   +
1150203   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1150204   +
1150205   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1150206   +
1150207   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1150208   +
1150209   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1150210   +
1150211   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1150212   +
1150213   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1150214   +
1150215   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1150216   +
1150217   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1150218   +
1150219   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1150220   +
1150221   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1150222   +
1150223   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1150224   +
1150225   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1150226   +
1150227   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1150228   +
1150229   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1150230   +
1150231   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1150232   +
1150233   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1150234   +
1150235   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1150236   +
1150237   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1150238   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1150239   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1150240   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1150241   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1150242   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1150243   +end;
MPRINT(EM_DIAGRAM):   end;
1150244   +else do;
MPRINT(EM_DIAGRAM):   else do;
1150245   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1150246   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1150247   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1150248   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1150249   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1150250   +   end;
MPRINT(EM_DIAGRAM):   end;
1150251   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1150252   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1150253   +   end;
MPRINT(EM_DIAGRAM):   end;
1150254   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1150255   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1150256   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1150257   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1150258   +   end;
MPRINT(EM_DIAGRAM):   end;
1150259   +end;
MPRINT(EM_DIAGRAM):   end;
1150260   +
1150261   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1150262   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1150263   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1150264   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1150265   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1150266   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1150267   +end;
MPRINT(EM_DIAGRAM):   end;
1150268   +else do;
MPRINT(EM_DIAGRAM):   else do;
1150269   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1150270   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1150271   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1150272   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1150273   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1150274   +   end;
MPRINT(EM_DIAGRAM):   end;
1150275   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1150276   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1150277   +   end;
MPRINT(EM_DIAGRAM):   end;
1150278   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1150279   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1150280   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1150281   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1150282   +   end;
MPRINT(EM_DIAGRAM):   end;
1150283   +end;
MPRINT(EM_DIAGRAM):   end;
1150284   +
1150285   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1150286   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1150287   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1150288   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1150289   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1150290   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1150291   +end;
MPRINT(EM_DIAGRAM):   end;
1150292   +else do;
MPRINT(EM_DIAGRAM):   else do;
1150293   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1150294   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1150295   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1150296   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1150297   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1150298   +   end;
MPRINT(EM_DIAGRAM):   end;
1150299   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1150300   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1150301   +   end;
MPRINT(EM_DIAGRAM):   end;
1150302   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1150303   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1150304   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1150305   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1150306   +   end;
MPRINT(EM_DIAGRAM):   end;
1150307   +end;
MPRINT(EM_DIAGRAM):   end;
1150308   +
1150309   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1150310   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1150311   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1150312   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1150313   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1150314   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1150315   +end;
MPRINT(EM_DIAGRAM):   end;
1150316   +else do;
MPRINT(EM_DIAGRAM):   else do;
1150317   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1150318   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1150319   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1150320   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1150321   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1150322   +   end;
MPRINT(EM_DIAGRAM):   end;
1150323   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1150324   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1150325   +   end;
MPRINT(EM_DIAGRAM):   end;
1150326   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1150327   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1150328   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1150329   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1150330   +   end;
MPRINT(EM_DIAGRAM):   end;
1150331   +end;
MPRINT(EM_DIAGRAM):   end;
1150332   +
1150333   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1150334   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1150335   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1150336   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1150337   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1150338   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1150339   +end;
MPRINT(EM_DIAGRAM):   end;
1150340   +else do;
MPRINT(EM_DIAGRAM):   else do;
1150341   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1150342   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1150343   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1150344   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1150345   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1150346   +   end;
MPRINT(EM_DIAGRAM):   end;
1150347   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1150348   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1150349   +   end;
MPRINT(EM_DIAGRAM):   end;
1150350   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1150351   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1150352   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1150353   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1150354   +   end;
MPRINT(EM_DIAGRAM):   end;
1150355   +end;
MPRINT(EM_DIAGRAM):   end;
1150356   +
1150357   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1150358   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1150359   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1150360   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1150361   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1150362   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1150363   +end;
MPRINT(EM_DIAGRAM):   end;
1150364   +else do;
MPRINT(EM_DIAGRAM):   else do;
1150365   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1150366   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1150367   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1150368   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1150369   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1150370   +   end;
MPRINT(EM_DIAGRAM):   end;
1150371   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1150372   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1150373   +   end;
MPRINT(EM_DIAGRAM):   end;
1150374   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1150375   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1150376   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1150377   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1150378   +   end;
MPRINT(EM_DIAGRAM):   end;
1150379   +end;
MPRINT(EM_DIAGRAM):   end;
1150380   +
1150381   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1150382   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
1150383   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1150384   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1150385   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1150386   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1150387   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1150388   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1150389   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1150390   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1150391   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1150392   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1150393   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1150394   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1150395   +end;
MPRINT(EM_DIAGRAM):   end;
1150396   +else do;
MPRINT(EM_DIAGRAM):   else do;
1150397   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1150398   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1150399   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1150400   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1150401   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1150402   +   end;
MPRINT(EM_DIAGRAM):   end;
1150403   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1150404   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1150405   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1150406   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1150407   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1150408   +   end;
MPRINT(EM_DIAGRAM):   end;
1150409   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1150410   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1150411   +   end;
MPRINT(EM_DIAGRAM):   end;
1150412   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1150413   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1150414   +   end;
MPRINT(EM_DIAGRAM):   end;
1150415   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1150416   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1150417   +   end;
MPRINT(EM_DIAGRAM):   end;
1150418   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1150419   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1150420   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1150421   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1150422   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1150423   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1150424   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1150425   +   end;
MPRINT(EM_DIAGRAM):   end;
1150426   +end;
MPRINT(EM_DIAGRAM):   end;
1150427   +
1150428   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1150429   +*** Checking missing input Interval
1150430   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1150431   +
1150432   +IF NMISS(
1150433   +   Income ,
1150434   +   Kidhome ,
1150435   +   Mnt ,
1150436   +   MntFishProducts ,
1150437   +   MntFruits ,
1150438   +   MntGoldProds ,
1150439   +   MntMeatProducts ,
1150440   +   MntSweetProducts ,
1150441   +   MntWines ,
1150442   +   NumCatalogPurchases ,
1150443   +   NumDealsPurchases ,
1150444   +   NumStorePurchases ,
1150445   +   NumWebPurchases ,
1150446   +   NumWebVisitsMonth ,
1150447   +   Recency ,
1150448   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Income , Kidhome , Mnt , MntFishProducts , MntFruits ,
MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , NumCatalogPurchases ,
NumDealsPurchases , NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , Recency ,
Teenhome ) THEN DO;
1150449   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1150450   +
1150451   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1150452   +END;
MPRINT(EM_DIAGRAM):   END;
1150453   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1150454   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1150455   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1150456   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1150457   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1150458   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1150459   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1150460   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1150461   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1150462   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1150463   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1150464   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1150465   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1150466   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1150467   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1150468   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1150469   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1150470   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1150471   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1150472   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1150473   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1150474   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1150475   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1150476   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1150477   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1150478   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1150479   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1150480   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1150481   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1150482   +END;
MPRINT(EM_DIAGRAM):   END;
1150483   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1150484   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1150485   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1150486   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1150487   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1150488   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1150489   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1150490   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1150491   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1150492   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1150493   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1150494   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1150495   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1150496   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1150497   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1150498   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
1150499   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1150500   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1150501   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1150502   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1150503   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1150504   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1150505   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1150506   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1150507   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1150508   +   ELSE S_NumCatalogPurchases
1150509   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1150510   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1150511   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1150512   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1150513   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1150514   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1150515   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1150516   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1150517   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1150518   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1150519   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1150520   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1150521   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1150522   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1150523   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1150524   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1150525   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1150526   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1150527   +END;
MPRINT(EM_DIAGRAM):   END;
1150528   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1150529   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1150530   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1150531   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1150532   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1150533   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1150534   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1150535   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1150536   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1150537   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1150538   +   H11  =    -0.03281362065647 * S_Income  +     0.00535686931174 * S_Kidhome
1150539   +          +    -0.01250948278467 * S_Mnt  +     0.00699255131323 *
1150540   +        S_MntFishProducts  +      0.0076699264859 * S_MntFruits
1150541   +          +    -0.00197175743075 * S_MntGoldProds  +    -0.03648519433733 *
1150542   +        S_MntMeatProducts  +     0.00505629880474 * S_MntSweetProducts
1150543   +          +     0.03058954226232 * S_MntWines  +     -0.0420799719311 *
1150544   +        S_NumCatalogPurchases  +    -0.02833732377257 * S_NumDealsPurchases
1150545   +          +     0.02790503880998 * S_NumStorePurchases
1150546   +          +     0.02520512526218 * S_NumWebPurchases
1150547   +          +    -0.05282883696993 * S_NumWebVisitsMonth
1150548   +          +     0.06563256173645 * S_Recency  +     0.01797337388273 *
1150549   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = -0.03281362065647 * S_Income + 0.00535686931174 * S_Kidhome +
-0.01250948278467 * S_Mnt + 0.00699255131323 * S_MntFishProducts + 0.0076699264859 *
S_MntFruits + -0.00197175743075 * S_MntGoldProds + -0.03648519433733 * S_MntMeatProducts +
0.00505629880474 * S_MntSweetProducts + 0.03058954226232 * S_MntWines + -0.0420799719311 *
S_NumCatalogPurchases + -0.02833732377257 * S_NumDealsPurchases + 0.02790503880998 *
S_NumStorePurchases + 0.02520512526218 * S_NumWebPurchases + -0.05282883696993 *
S_NumWebVisitsMonth + 0.06563256173645 * S_Recency + 0.01797337388273 * S_Teenhome ;
1150550   +   H11  = H11  +     0.02870149682732 * AcceptedCmp10
1150551   +          +     0.02798378890148 * AcceptedCmp20  +     0.03430631974463 *
1150552   +        AcceptedCmp30  +     0.02526418526905 * AcceptedCmp40
1150553   +          +     0.03693742114225 * AcceptedCmp50  +    -0.01462363843793 *
1150554   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.02870149682732 * AcceptedCmp10 + 0.02798378890148 *
AcceptedCmp20 + 0.03430631974463 * AcceptedCmp30 + 0.02526418526905 * AcceptedCmp40 +
0.03693742114225 * AcceptedCmp50 + -0.01462363843793 * Complain0 ;
1150555   +   H11  = H11  +    -0.00153701661702 * Education2n_Cycle
1150556   +          +      0.0085508617275 * EducationBasic  +    -0.00635980121817 *
1150557   +        EducationGraduation  +     0.00121093589886 * EducationMaster ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.00153701661702 * Education2n_Cycle + 0.0085508617275 *
EducationBasic + -0.00635980121817 * EducationGraduation + 0.00121093589886 * EducationMaster ;
1150558   +   H11  =    -0.10607308229024 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -0.10607308229024 + H11 ;
1150559   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1150560   +END;
MPRINT(EM_DIAGRAM):   END;
1150561   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1150562   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1150563   +END;
MPRINT(EM_DIAGRAM):   END;
1150564   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1150565   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1150566   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1150567   +
1150568   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1150569   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1150570   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1150571   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1150572   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1150573   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1150574   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1150575   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1150576   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1150577   +end;
MPRINT(EM_DIAGRAM):   end;
1150578   +else do;
MPRINT(EM_DIAGRAM):   else do;
1150579   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1150580   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1150581   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1150582   +   end;
MPRINT(EM_DIAGRAM):   end;
1150583   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1150584   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1150585   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1150586   +   end;
MPRINT(EM_DIAGRAM):   end;
1150587   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1150588   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1150589   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1150590   +   end;
MPRINT(EM_DIAGRAM):   end;
1150591   +end;
MPRINT(EM_DIAGRAM):   end;
1150592   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1150593   +   P_DepVar1  =    -42.7395691647266 * H11 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -42.7395691647266 * H11 ;
1150594   +   P_DepVar1  =    -4.33224364987351 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -4.33224364987351 + P_DepVar1 ;
1150595   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1150596   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1150597   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1150598   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1150599   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1150600   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1150601   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1150602   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1150603   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1150604   +END;
MPRINT(EM_DIAGRAM):   END;
1150605   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1150606   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1150607   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1150608   +END;
MPRINT(EM_DIAGRAM):   END;
1150609   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1150610   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1150611   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1150612   +END;
MPRINT(EM_DIAGRAM):   END;
1150613   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1150614   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1150615   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1150616   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1150617   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1150618   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1150619   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1150620   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1150621   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1150622   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1150623   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1150624   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1150625   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1150626   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1150627   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1150628   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1150629   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1150630   +END;
MPRINT(EM_DIAGRAM):   END;
1150631   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1150632   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1150633   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1150634   +drop
1150635   +H11
1150636   +;
MPRINT(EM_DIAGRAM):   drop H11 ;
1150637   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1150638   +* Renaming variables for Neural6;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural6;
1150639   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1150640   +* Renaming Posterior variables for Neural6;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural6;
1150641   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1150642   +drop Neural6_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural6_P_DepVar1;
1150643   +Neural6_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural6_P_DepVar1 = P_DepVar1;
1150644   +drop Neural6_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural6_P_DepVar0;
1150645   +Neural6_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural6_P_DepVar0 = P_DepVar0;
1150646   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1150647   +* Renaming _WARN_ variable for Neural6;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural6;
1150648   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1150649   +length Neural6_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural6_WARN_ $4;
1150650   +drop Neural6_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural6_WARN_;
1150651   +Neural6_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural6_WARN_ = _WARN_;
1150652   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1150653   +* Ensmbl9: Scoring Code of model 5 of 10;
MPRINT(EM_DIAGRAM):   * Ensmbl9: Scoring Code of model 5 of 10;
1150654   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1150655   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1150656   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
1150657   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1150658   +* NODE: Neural31;
MPRINT(EM_DIAGRAM):   * NODE: Neural31;
1150659   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1150660   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1150661   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1150662   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1150663   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1150664   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1150665   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1150666   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1150667   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1150668   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1150669   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1150670   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1150671   +LENGTH _WARN_ $4
1150672   +      F_DepVar  $ 12
1150673   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1150674   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1150675   +
1150676   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1150677   +
1150678   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1150679   +
1150680   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1150681   +
1150682   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1150683   +
1150684   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1150685   +
1150686   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1150687   +
1150688   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1150689   +
1150690   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1150691   +
1150692   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1150693   +
1150694   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1150695   +
1150696   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1150697   +
1150698   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1150699   +
1150700   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1150701   +
1150702   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1150703   +
1150704   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1150705   +
1150706   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1150707   +
1150708   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1150709   +
1150710   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1150711   +
1150712   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1150713   +
1150714   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1150715   +
1150716   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1150717   +
1150718   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1150719   +
1150720   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1150721   +
1150722   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1150723   +
1150724   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1150725   +
1150726   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1150727   +
1150728   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1150729   +
1150730   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1150731   +
1150732   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1150733   +
1150734   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1150735   +
1150736   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1150737   +
1150738   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1150739   +
1150740   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1150741   +
1150742   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1150743   +
1150744   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1150745   +
1150746   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1150747   +
1150748   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1150749   +
1150750   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1150751   +
1150752   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1150753   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1150754   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1150755   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1150756   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1150757   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1150758   +end;
MPRINT(EM_DIAGRAM):   end;
1150759   +else do;
MPRINT(EM_DIAGRAM):   else do;
1150760   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1150761   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1150762   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1150763   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1150764   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1150765   +   end;
MPRINT(EM_DIAGRAM):   end;
1150766   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1150767   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1150768   +   end;
MPRINT(EM_DIAGRAM):   end;
1150769   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1150770   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1150771   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1150772   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1150773   +   end;
MPRINT(EM_DIAGRAM):   end;
1150774   +end;
MPRINT(EM_DIAGRAM):   end;
1150775   +
1150776   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1150777   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1150778   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1150779   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1150780   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1150781   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1150782   +end;
MPRINT(EM_DIAGRAM):   end;
1150783   +else do;
MPRINT(EM_DIAGRAM):   else do;
1150784   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1150785   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1150786   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1150787   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1150788   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1150789   +   end;
MPRINT(EM_DIAGRAM):   end;
1150790   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1150791   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1150792   +   end;
MPRINT(EM_DIAGRAM):   end;
1150793   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1150794   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1150795   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1150796   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1150797   +   end;
MPRINT(EM_DIAGRAM):   end;
1150798   +end;
MPRINT(EM_DIAGRAM):   end;
1150799   +
1150800   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1150801   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1150802   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1150803   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1150804   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1150805   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1150806   +end;
MPRINT(EM_DIAGRAM):   end;
1150807   +else do;
MPRINT(EM_DIAGRAM):   else do;
1150808   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1150809   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1150810   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1150811   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1150812   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1150813   +   end;
MPRINT(EM_DIAGRAM):   end;
1150814   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1150815   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1150816   +   end;
MPRINT(EM_DIAGRAM):   end;
1150817   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1150818   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1150819   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1150820   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1150821   +   end;
MPRINT(EM_DIAGRAM):   end;
1150822   +end;
MPRINT(EM_DIAGRAM):   end;
1150823   +
1150824   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1150825   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1150826   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1150827   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1150828   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1150829   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1150830   +end;
MPRINT(EM_DIAGRAM):   end;
1150831   +else do;
MPRINT(EM_DIAGRAM):   else do;
1150832   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1150833   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1150834   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1150835   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1150836   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1150837   +   end;
MPRINT(EM_DIAGRAM):   end;
1150838   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1150839   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1150840   +   end;
MPRINT(EM_DIAGRAM):   end;
1150841   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1150842   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1150843   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1150844   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1150845   +   end;
MPRINT(EM_DIAGRAM):   end;
1150846   +end;
MPRINT(EM_DIAGRAM):   end;
1150847   +
1150848   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1150849   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1150850   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1150851   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1150852   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1150853   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1150854   +end;
MPRINT(EM_DIAGRAM):   end;
1150855   +else do;
MPRINT(EM_DIAGRAM):   else do;
1150856   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1150857   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1150858   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1150859   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1150860   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1150861   +   end;
MPRINT(EM_DIAGRAM):   end;
1150862   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1150863   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1150864   +   end;
MPRINT(EM_DIAGRAM):   end;
1150865   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1150866   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1150867   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1150868   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1150869   +   end;
MPRINT(EM_DIAGRAM):   end;
1150870   +end;
MPRINT(EM_DIAGRAM):   end;
1150871   +
1150872   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1150873   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1150874   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1150875   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1150876   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1150877   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1150878   +end;
MPRINT(EM_DIAGRAM):   end;
1150879   +else do;
MPRINT(EM_DIAGRAM):   else do;
1150880   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1150881   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1150882   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1150883   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1150884   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1150885   +   end;
MPRINT(EM_DIAGRAM):   end;
1150886   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1150887   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1150888   +   end;
MPRINT(EM_DIAGRAM):   end;
1150889   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1150890   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1150891   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1150892   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1150893   +   end;
MPRINT(EM_DIAGRAM):   end;
1150894   +end;
MPRINT(EM_DIAGRAM):   end;
1150895   +
1150896   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1150897   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
1150898   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1150899   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1150900   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1150901   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1150902   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1150903   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1150904   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1150905   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1150906   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1150907   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1150908   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1150909   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1150910   +end;
MPRINT(EM_DIAGRAM):   end;
1150911   +else do;
MPRINT(EM_DIAGRAM):   else do;
1150912   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1150913   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1150914   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1150915   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1150916   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1150917   +   end;
MPRINT(EM_DIAGRAM):   end;
1150918   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1150919   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1150920   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1150921   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1150922   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1150923   +   end;
MPRINT(EM_DIAGRAM):   end;
1150924   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1150925   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1150926   +   end;
MPRINT(EM_DIAGRAM):   end;
1150927   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1150928   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1150929   +   end;
MPRINT(EM_DIAGRAM):   end;
1150930   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1150931   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1150932   +   end;
MPRINT(EM_DIAGRAM):   end;
1150933   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1150934   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1150935   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1150936   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1150937   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1150938   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1150939   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1150940   +   end;
MPRINT(EM_DIAGRAM):   end;
1150941   +end;
MPRINT(EM_DIAGRAM):   end;
1150942   +
1150943   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1150944   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1150945   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
1150946   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1150947   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1150948   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1150949   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1150950   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1150951   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1150952   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1150953   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1150954   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1150955   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1150956   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1150957   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1150958   +end;
MPRINT(EM_DIAGRAM):   end;
1150959   +else do;
MPRINT(EM_DIAGRAM):   else do;
1150960   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1150961   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1150962   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1150963   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1150964   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1150965   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1150966   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1150967   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1150968   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1150969   +         end;
MPRINT(EM_DIAGRAM):   end;
1150970   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1150971   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1150972   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1150973   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1150974   +            end;
MPRINT(EM_DIAGRAM):   end;
1150975   +         end;
MPRINT(EM_DIAGRAM):   end;
1150976   +      end;
MPRINT(EM_DIAGRAM):   end;
1150977   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1150978   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1150979   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1150980   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1150981   +         end;
MPRINT(EM_DIAGRAM):   end;
1150982   +      end;
MPRINT(EM_DIAGRAM):   end;
1150983   +   end;
MPRINT(EM_DIAGRAM):   end;
1150984   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1150985   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1150986   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1150987   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1150988   +      end;
MPRINT(EM_DIAGRAM):   end;
1150989   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1150990   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1150991   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1150992   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1150993   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1150994   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1150995   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1150996   +         end;
MPRINT(EM_DIAGRAM):   end;
1150997   +      end;
MPRINT(EM_DIAGRAM):   end;
1150998   +   end;
MPRINT(EM_DIAGRAM):   end;
1150999   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1151000   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1151001   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1151002   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1151003   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1151004   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1151005   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1151006   +   end;
MPRINT(EM_DIAGRAM):   end;
1151007   +end;
MPRINT(EM_DIAGRAM):   end;
1151008   +
1151009   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1151010   +*** Checking missing input Interval
1151011   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1151012   +
1151013   +IF NMISS(
1151014   +   Income ,
1151015   +   Kidhome ,
1151016   +   MntFishProducts ,
1151017   +   MntFruits ,
1151018   +   MntGoldProds ,
1151019   +   MntMeatProducts ,
1151020   +   MntSweetProducts ,
1151021   +   MntWines ,
1151022   +   NumCatalogPurchases ,
1151023   +   NumDealsPurchases ,
1151024   +   NumStorePurchases ,
1151025   +   NumWebPurchases ,
1151026   +   NumWebVisitsMonth ,
1151027   +   Recency ,
1151028   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Income , Kidhome , MntFishProducts , MntFruits , MntGoldProds
, MntMeatProducts , MntSweetProducts , MntWines , NumCatalogPurchases , NumDealsPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , Recency , Teenhome ) THEN DO;
1151029   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1151030   +
1151031   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1151032   +END;
MPRINT(EM_DIAGRAM):   END;
1151033   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1151034   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1151035   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1151036   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1151037   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1151038   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1151039   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1151040   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1151041   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1151042   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1151043   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1151044   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1151045   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1151046   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1151047   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1151048   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1151049   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1151050   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1151051   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1151052   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1151053   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1151054   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1151055   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1151056   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1151057   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1151058   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1151059   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1151060   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1151061   +END;
MPRINT(EM_DIAGRAM):   END;
1151062   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1151063   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1151064   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1151065   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1151066   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1151067   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1151068   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1151069   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1151070   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1151071   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1151072   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1151073   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1151074   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1151075   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
1151076   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1151077   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1151078   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1151079   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1151080   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1151081   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1151082   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1151083   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1151084   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1151085   +   ELSE S_NumCatalogPurchases
1151086   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1151087   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1151088   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1151089   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1151090   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1151091   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1151092   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1151093   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1151094   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1151095   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1151096   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1151097   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1151098   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1151099   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1151100   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1151101   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1151102   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1151103   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1151104   +END;
MPRINT(EM_DIAGRAM):   END;
1151105   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1151106   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1151107   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1151108   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1151109   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1151110   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1151111   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1151112   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1151113   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1151114   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1151115   +   H11  =    -1.33502235588914 * S_Income  +     0.86914778071024 * S_Kidhome
1151116   +          +     0.06177226616611 * S_MntFishProducts
1151117   +          +     0.22465531888584 * S_MntFruits  +    -0.01216018017424 *
1151118   +        S_MntGoldProds  +    -0.10435601171346 * S_MntMeatProducts
1151119   +          +     0.19245635559754 * S_MntSweetProducts
1151120   +          +    -0.06473329764962 * S_MntWines  +    -0.40260570275107 *
1151121   +        S_NumCatalogPurchases  +    -0.01043435397255 * S_NumDealsPurchases
1151122   +          +    -0.35392759932805 * S_NumStorePurchases
1151123   +          +     -0.2443007642616 * S_NumWebPurchases
1151124   +          +    -0.72667572173837 * S_NumWebVisitsMonth
1151125   +          +     0.97336679863544 * S_Recency  +     0.72544205905496 *
1151126   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = -1.33502235588914 * S_Income + 0.86914778071024 * S_Kidhome +
0.06177226616611 * S_MntFishProducts + 0.22465531888584 * S_MntFruits + -0.01216018017424 *
S_MntGoldProds + -0.10435601171346 * S_MntMeatProducts + 0.19245635559754 * S_MntSweetProducts
+ -0.06473329764962 * S_MntWines + -0.40260570275107 * S_NumCatalogPurchases +
-0.01043435397255 * S_NumDealsPurchases + -0.35392759932805 * S_NumStorePurchases +
-0.2443007642616 * S_NumWebPurchases + -0.72667572173837 * S_NumWebVisitsMonth +
0.97336679863544 * S_Recency + 0.72544205905496 * S_Teenhome ;
1151127   +   H12  =    -0.09105644521483 * S_Income  +     0.01920168996111 * S_Kidhome
1151128   +          +     0.00012212205827 * S_MntFishProducts
1151129   +          +     0.00032664246198 * S_MntFruits  +    -0.02161363659377 *
1151130   +        S_MntGoldProds  +    -0.40917729724893 * S_MntMeatProducts
1151131   +          +     0.01459978689352 * S_MntSweetProducts
1151132   +          +     0.28732983017398 * S_MntWines  +    -0.26033282919423 *
1151133   +        S_NumCatalogPurchases  +      -0.306688498482 * S_NumDealsPurchases
1151134   +          +      0.4054643699817 * S_NumStorePurchases
1151135   +          +     0.27747327375374 * S_NumWebPurchases
1151136   +          +    -0.31325270852641 * S_NumWebVisitsMonth
1151137   +          +      0.3707065492652 * S_Recency  +     0.05681262835219 *
1151138   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -0.09105644521483 * S_Income + 0.01920168996111 * S_Kidhome +
0.00012212205827 * S_MntFishProducts + 0.00032664246198 * S_MntFruits + -0.02161363659377 *
S_MntGoldProds + -0.40917729724893 * S_MntMeatProducts + 0.01459978689352 * S_MntSweetProducts
+ 0.28732983017398 * S_MntWines + -0.26033282919423 * S_NumCatalogPurchases + -0.306688498482
* S_NumDealsPurchases + 0.4054643699817 * S_NumStorePurchases + 0.27747327375374 *
S_NumWebPurchases + -0.31325270852641 * S_NumWebVisitsMonth + 0.3707065492652 * S_Recency +
0.05681262835219 * S_Teenhome ;
1151139   +   H11  = H11  +     0.23904403737743 * AcceptedCmp10
1151140   +          +     0.12365860406863 * AcceptedCmp20  +     0.28547657706908 *
1151141   +        AcceptedCmp30  +     0.37587337003909 * AcceptedCmp40
1151142   +          +    -0.04113029526683 * AcceptedCmp50  +      0.2596440604013 *
1151143   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.23904403737743 * AcceptedCmp10 + 0.12365860406863 *
AcceptedCmp20 + 0.28547657706908 * AcceptedCmp30 + 0.37587337003909 * AcceptedCmp40 +
-0.04113029526683 * AcceptedCmp50 + 0.2596440604013 * Complain0 ;
1151144   +   H12  = H12  +     0.25336773034662 * AcceptedCmp10
1151145   +          +     0.39499004620022 * AcceptedCmp20  +     0.19852127214148 *
1151146   +        AcceptedCmp30  +     0.19215250383325 * AcceptedCmp40
1151147   +          +     0.27213364707939 * AcceptedCmp50  +    -0.00774901485124 *
1151148   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.25336773034662 * AcceptedCmp10 + 0.39499004620022 *
AcceptedCmp20 + 0.19852127214148 * AcceptedCmp30 + 0.19215250383325 * AcceptedCmp40 +
0.27213364707939 * AcceptedCmp50 + -0.00774901485124 * Complain0 ;
1151149   +   H11  = H11  +    -0.05263155952227 * Education2n_Cycle
1151150   +          +    -1.40124591386453 * EducationBasic  +     0.43501491332678 *
1151151   +        EducationGraduation  +     0.77305262508081 * EducationMaster
1151152   +          +    -0.43667846017683 * Marital_StatusDivorced
1151153   +          +     1.33507828005472 * Marital_StatusMarried
1151154   +          +    -0.75026283842664 * Marital_StatusSingle
1151155   +          +     0.84436594207558 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.05263155952227 * Education2n_Cycle + -1.40124591386453 *
EducationBasic + 0.43501491332678 * EducationGraduation + 0.77305262508081 * EducationMaster +
-0.43667846017683 * Marital_StatusDivorced + 1.33507828005472 * Marital_StatusMarried +
-0.75026283842664 * Marital_StatusSingle + 0.84436594207558 * Marital_StatusTogether ;
1151156   +   H12  = H12  +     0.08398432584098 * Education2n_Cycle
1151157   +          +     0.12375156883157 * EducationBasic  +     -0.0901891766073 *
1151158   +        EducationGraduation  +    -0.07691770257441 * EducationMaster
1151159   +          +    -0.03531690128173 * Marital_StatusDivorced
1151160   +          +    -0.04344171367809 * Marital_StatusMarried
1151161   +          +    -0.05137362653166 * Marital_StatusSingle
1151162   +          +    -0.01265518570667 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.08398432584098 * Education2n_Cycle + 0.12375156883157 *
EducationBasic + -0.0901891766073 * EducationGraduation + -0.07691770257441 * EducationMaster
+ -0.03531690128173 * Marital_StatusDivorced + -0.04344171367809 * Marital_StatusMarried +
-0.05137362653166 * Marital_StatusSingle + -0.01265518570667 * Marital_StatusTogether ;
1151163   +   H11  =     1.86846527977677 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 1.86846527977677 + H11 ;
1151164   +   H12  =    -0.42494263287735 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -0.42494263287735 + H12 ;
1151165   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1151166   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1151167   +END;
MPRINT(EM_DIAGRAM):   END;
1151168   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1151169   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1151170   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1151171   +END;
MPRINT(EM_DIAGRAM):   END;
1151172   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1151173   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1151174   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1151175   +
1151176   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1151177   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1151178   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1151179   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1151180   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1151181   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1151182   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1151183   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1151184   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1151185   +end;
MPRINT(EM_DIAGRAM):   end;
1151186   +else do;
MPRINT(EM_DIAGRAM):   else do;
1151187   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1151188   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1151189   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1151190   +   end;
MPRINT(EM_DIAGRAM):   end;
1151191   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1151192   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1151193   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1151194   +   end;
MPRINT(EM_DIAGRAM):   end;
1151195   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1151196   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1151197   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1151198   +   end;
MPRINT(EM_DIAGRAM):   end;
1151199   +end;
MPRINT(EM_DIAGRAM):   end;
1151200   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1151201   +   P_DepVar1  =    -5.43090515434696 * H11  +    -9.08673127131886 * H12 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -5.43090515434696 * H11 + -9.08673127131886 * H12 ;
1151202   +   P_DepVar1  =      2.7752946076831 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 2.7752946076831 + P_DepVar1 ;
1151203   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1151204   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1151205   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1151206   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1151207   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1151208   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1151209   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1151210   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1151211   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1151212   +END;
MPRINT(EM_DIAGRAM):   END;
1151213   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1151214   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1151215   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1151216   +END;
MPRINT(EM_DIAGRAM):   END;
1151217   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1151218   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1151219   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1151220   +END;
MPRINT(EM_DIAGRAM):   END;
1151221   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1151222   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1151223   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1151224   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1151225   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1151226   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1151227   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1151228   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1151229   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1151230   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1151231   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1151232   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1151233   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1151234   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1151235   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1151236   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1151237   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1151238   +END;
MPRINT(EM_DIAGRAM):   END;
1151239   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1151240   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1151241   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1151242   +drop
1151243   +H11
1151244   +H12
1151245   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 ;
1151246   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1151247   +* Renaming variables for Neural31;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural31;
1151248   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1151249   +* Renaming Posterior variables for Neural31;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural31;
1151250   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1151251   +drop Neural31_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural31_P_DepVar1;
1151252   +Neural31_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural31_P_DepVar1 = P_DepVar1;
1151253   +drop Neural31_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural31_P_DepVar0;
1151254   +Neural31_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural31_P_DepVar0 = P_DepVar0;
1151255   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1151256   +* Renaming _WARN_ variable for Neural31;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural31;
1151257   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1151258   +length Neural31_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural31_WARN_ $4;
1151259   +drop Neural31_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural31_WARN_;
1151260   +Neural31_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural31_WARN_ = _WARN_;
1151261   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1151262   +* Ensmbl9: Scoring Code of model 6 of 10;
MPRINT(EM_DIAGRAM):   * Ensmbl9: Scoring Code of model 6 of 10;
1151263   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1151264   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1151265   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
1151266   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1151267   +* NODE: Neural32;
MPRINT(EM_DIAGRAM):   * NODE: Neural32;
1151268   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1151269   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1151270   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1151271   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1151272   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1151273   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1151274   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1151275   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1151276   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1151277   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1151278   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1151279   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1151280   +LENGTH _WARN_ $4
1151281   +      F_DepVar  $ 12
1151282   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1151283   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1151284   +
1151285   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1151286   +
1151287   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1151288   +
1151289   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1151290   +
1151291   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1151292   +
1151293   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1151294   +
1151295   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1151296   +
1151297   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1151298   +
1151299   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1151300   +
1151301   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1151302   +
1151303   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1151304   +
1151305   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1151306   +
1151307   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1151308   +
1151309   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1151310   +
1151311   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1151312   +
1151313   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1151314   +
1151315   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1151316   +
1151317   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1151318   +
1151319   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1151320   +
1151321   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1151322   +
1151323   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1151324   +
1151325   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1151326   +
1151327   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1151328   +
1151329   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1151330   +
1151331   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1151332   +
1151333   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1151334   +
1151335   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1151336   +
1151337   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1151338   +
1151339   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1151340   +
1151341   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1151342   +
1151343   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1151344   +
1151345   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1151346   +
1151347   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1151348   +
1151349   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1151350   +
1151351   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1151352   +
1151353   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1151354   +
1151355   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1151356   +
1151357   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1151358   +
1151359   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1151360   +
1151361   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1151362   +
1151363   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1151364   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1151365   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1151366   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1151367   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1151368   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1151369   +end;
MPRINT(EM_DIAGRAM):   end;
1151370   +else do;
MPRINT(EM_DIAGRAM):   else do;
1151371   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1151372   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1151373   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1151374   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1151375   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1151376   +   end;
MPRINT(EM_DIAGRAM):   end;
1151377   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1151378   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1151379   +   end;
MPRINT(EM_DIAGRAM):   end;
1151380   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1151381   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1151382   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1151383   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1151384   +   end;
MPRINT(EM_DIAGRAM):   end;
1151385   +end;
MPRINT(EM_DIAGRAM):   end;
1151386   +
1151387   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1151388   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1151389   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1151390   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1151391   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1151392   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1151393   +end;
MPRINT(EM_DIAGRAM):   end;
1151394   +else do;
MPRINT(EM_DIAGRAM):   else do;
1151395   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1151396   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1151397   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1151398   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1151399   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1151400   +   end;
MPRINT(EM_DIAGRAM):   end;
1151401   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1151402   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1151403   +   end;
MPRINT(EM_DIAGRAM):   end;
1151404   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1151405   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1151406   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1151407   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1151408   +   end;
MPRINT(EM_DIAGRAM):   end;
1151409   +end;
MPRINT(EM_DIAGRAM):   end;
1151410   +
1151411   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1151412   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1151413   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1151414   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1151415   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1151416   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1151417   +end;
MPRINT(EM_DIAGRAM):   end;
1151418   +else do;
MPRINT(EM_DIAGRAM):   else do;
1151419   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1151420   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1151421   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1151422   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1151423   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1151424   +   end;
MPRINT(EM_DIAGRAM):   end;
1151425   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1151426   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1151427   +   end;
MPRINT(EM_DIAGRAM):   end;
1151428   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1151429   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1151430   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1151431   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1151432   +   end;
MPRINT(EM_DIAGRAM):   end;
1151433   +end;
MPRINT(EM_DIAGRAM):   end;
1151434   +
1151435   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1151436   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1151437   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1151438   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1151439   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1151440   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1151441   +end;
MPRINT(EM_DIAGRAM):   end;
1151442   +else do;
MPRINT(EM_DIAGRAM):   else do;
1151443   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1151444   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1151445   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1151446   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1151447   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1151448   +   end;
MPRINT(EM_DIAGRAM):   end;
1151449   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1151450   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1151451   +   end;
MPRINT(EM_DIAGRAM):   end;
1151452   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1151453   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1151454   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1151455   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1151456   +   end;
MPRINT(EM_DIAGRAM):   end;
1151457   +end;
MPRINT(EM_DIAGRAM):   end;
1151458   +
1151459   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1151460   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1151461   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1151462   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1151463   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1151464   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1151465   +end;
MPRINT(EM_DIAGRAM):   end;
1151466   +else do;
MPRINT(EM_DIAGRAM):   else do;
1151467   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1151468   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1151469   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1151470   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1151471   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1151472   +   end;
MPRINT(EM_DIAGRAM):   end;
1151473   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1151474   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1151475   +   end;
MPRINT(EM_DIAGRAM):   end;
1151476   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1151477   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1151478   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1151479   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1151480   +   end;
MPRINT(EM_DIAGRAM):   end;
1151481   +end;
MPRINT(EM_DIAGRAM):   end;
1151482   +
1151483   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1151484   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1151485   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1151486   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1151487   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1151488   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1151489   +end;
MPRINT(EM_DIAGRAM):   end;
1151490   +else do;
MPRINT(EM_DIAGRAM):   else do;
1151491   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1151492   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1151493   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1151494   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1151495   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1151496   +   end;
MPRINT(EM_DIAGRAM):   end;
1151497   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1151498   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1151499   +   end;
MPRINT(EM_DIAGRAM):   end;
1151500   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1151501   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1151502   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1151503   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1151504   +   end;
MPRINT(EM_DIAGRAM):   end;
1151505   +end;
MPRINT(EM_DIAGRAM):   end;
1151506   +
1151507   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1151508   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
1151509   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1151510   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1151511   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1151512   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1151513   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1151514   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1151515   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1151516   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1151517   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1151518   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1151519   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1151520   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1151521   +end;
MPRINT(EM_DIAGRAM):   end;
1151522   +else do;
MPRINT(EM_DIAGRAM):   else do;
1151523   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1151524   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1151525   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1151526   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1151527   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1151528   +   end;
MPRINT(EM_DIAGRAM):   end;
1151529   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1151530   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1151531   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1151532   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1151533   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1151534   +   end;
MPRINT(EM_DIAGRAM):   end;
1151535   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1151536   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1151537   +   end;
MPRINT(EM_DIAGRAM):   end;
1151538   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1151539   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1151540   +   end;
MPRINT(EM_DIAGRAM):   end;
1151541   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1151542   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1151543   +   end;
MPRINT(EM_DIAGRAM):   end;
1151544   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1151545   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1151546   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1151547   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1151548   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1151549   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1151550   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1151551   +   end;
MPRINT(EM_DIAGRAM):   end;
1151552   +end;
MPRINT(EM_DIAGRAM):   end;
1151553   +
1151554   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1151555   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1151556   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
1151557   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1151558   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1151559   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1151560   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1151561   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1151562   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1151563   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1151564   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1151565   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1151566   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1151567   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1151568   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1151569   +end;
MPRINT(EM_DIAGRAM):   end;
1151570   +else do;
MPRINT(EM_DIAGRAM):   else do;
1151571   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1151572   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1151573   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1151574   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1151575   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1151576   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1151577   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1151578   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1151579   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1151580   +         end;
MPRINT(EM_DIAGRAM):   end;
1151581   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1151582   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1151583   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1151584   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1151585   +            end;
MPRINT(EM_DIAGRAM):   end;
1151586   +         end;
MPRINT(EM_DIAGRAM):   end;
1151587   +      end;
MPRINT(EM_DIAGRAM):   end;
1151588   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1151589   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1151590   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1151591   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1151592   +         end;
MPRINT(EM_DIAGRAM):   end;
1151593   +      end;
MPRINT(EM_DIAGRAM):   end;
1151594   +   end;
MPRINT(EM_DIAGRAM):   end;
1151595   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1151596   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1151597   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1151598   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1151599   +      end;
MPRINT(EM_DIAGRAM):   end;
1151600   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1151601   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1151602   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1151603   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1151604   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1151605   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1151606   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1151607   +         end;
MPRINT(EM_DIAGRAM):   end;
1151608   +      end;
MPRINT(EM_DIAGRAM):   end;
1151609   +   end;
MPRINT(EM_DIAGRAM):   end;
1151610   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1151611   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1151612   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1151613   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1151614   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1151615   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1151616   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1151617   +   end;
MPRINT(EM_DIAGRAM):   end;
1151618   +end;
MPRINT(EM_DIAGRAM):   end;
1151619   +
1151620   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1151621   +*** Checking missing input Interval
1151622   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1151623   +
1151624   +IF NMISS(
1151625   +   Income ,
1151626   +   Kidhome ,
1151627   +   MntFishProducts ,
1151628   +   MntFruits ,
1151629   +   MntGoldProds ,
1151630   +   MntMeatProducts ,
1151631   +   MntSweetProducts ,
1151632   +   MntWines ,
1151633   +   NumCatalogPurchases ,
1151634   +   NumDealsPurchases ,
1151635   +   NumStorePurchases ,
1151636   +   NumWebPurchases ,
1151637   +   NumWebVisitsMonth ,
1151638   +   Recency ,
1151639   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Income , Kidhome , MntFishProducts , MntFruits , MntGoldProds
, MntMeatProducts , MntSweetProducts , MntWines , NumCatalogPurchases , NumDealsPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , Recency , Teenhome ) THEN DO;
1151640   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1151641   +
1151642   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1151643   +END;
MPRINT(EM_DIAGRAM):   END;
1151644   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1151645   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1151646   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1151647   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1151648   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1151649   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1151650   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1151651   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1151652   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1151653   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1151654   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1151655   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1151656   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1151657   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1151658   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1151659   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1151660   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1151661   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1151662   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1151663   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1151664   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1151665   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1151666   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1151667   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1151668   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1151669   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1151670   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1151671   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1151672   +END;
MPRINT(EM_DIAGRAM):   END;
1151673   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1151674   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1151675   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1151676   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1151677   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1151678   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1151679   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1151680   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1151681   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1151682   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1151683   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1151684   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1151685   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1151686   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
1151687   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1151688   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1151689   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1151690   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1151691   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1151692   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1151693   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1151694   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1151695   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1151696   +   ELSE S_NumCatalogPurchases
1151697   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1151698   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1151699   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1151700   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1151701   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1151702   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1151703   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1151704   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1151705   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1151706   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1151707   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1151708   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1151709   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1151710   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1151711   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1151712   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1151713   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1151714   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1151715   +END;
MPRINT(EM_DIAGRAM):   END;
1151716   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1151717   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1151718   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1151719   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1151720   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1151721   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1151722   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1151723   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1151724   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1151725   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1151726   +   H11  =     1.40261108800308 * S_Income  +     -0.8062097507842 * S_Kidhome
1151727   +          +    -0.12974862644982 * S_MntFishProducts
1151728   +          +     0.08065642800368 * S_MntFruits  +    -0.12102130003972 *
1151729   +        S_MntGoldProds  +     0.19226249622126 * S_MntMeatProducts
1151730   +          +    -0.12290326901613 * S_MntSweetProducts
1151731   +          +     0.07790241176978 * S_MntWines  +     0.36123042724896 *
1151732   +        S_NumCatalogPurchases  +    -0.01034406765754 * S_NumDealsPurchases
1151733   +          +     0.09738032540137 * S_NumStorePurchases
1151734   +          +     0.44459515215205 * S_NumWebPurchases
1151735   +          +      0.8471075994578 * S_NumWebVisitsMonth
1151736   +          +    -1.10667985160899 * S_Recency  +    -0.88509832868515 *
1151737   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 1.40261108800308 * S_Income + -0.8062097507842 * S_Kidhome +
-0.12974862644982 * S_MntFishProducts + 0.08065642800368 * S_MntFruits + -0.12102130003972 *
S_MntGoldProds + 0.19226249622126 * S_MntMeatProducts + -0.12290326901613 * S_MntSweetProducts
+ 0.07790241176978 * S_MntWines + 0.36123042724896 * S_NumCatalogPurchases + -0.01034406765754
* S_NumDealsPurchases + 0.09738032540137 * S_NumStorePurchases + 0.44459515215205 *
S_NumWebPurchases + 0.8471075994578 * S_NumWebVisitsMonth + -1.10667985160899 * S_Recency +
-0.88509832868515 * S_Teenhome ;
1151738   +   H12  =     0.51266936686642 * S_Income  +     0.26909433357851 * S_Kidhome
1151739   +          +     0.02406077596811 * S_MntFishProducts
1151740   +          +    -0.57443793453522 * S_MntFruits  +     0.36824731232149 *
1151741   +        S_MntGoldProds  +     0.40177289143061 * S_MntMeatProducts
1151742   +          +     -0.1147507059349 * S_MntSweetProducts
1151743   +          +    -0.66379351187459 * S_MntWines  +     1.33407347415468 *
1151744   +        S_NumCatalogPurchases  +     1.00633891197299 * S_NumDealsPurchases
1151745   +          +    -0.23920969262322 * S_NumStorePurchases
1151746   +          +     -0.6008837862932 * S_NumWebPurchases
1151747   +          +     0.26759743722885 * S_NumWebVisitsMonth
1151748   +          +    -0.42755419464125 * S_Recency  +    -0.14471776361394 *
1151749   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = 0.51266936686642 * S_Income + 0.26909433357851 * S_Kidhome +
0.02406077596811 * S_MntFishProducts + -0.57443793453522 * S_MntFruits + 0.36824731232149 *
S_MntGoldProds + 0.40177289143061 * S_MntMeatProducts + -0.1147507059349 * S_MntSweetProducts
+ -0.66379351187459 * S_MntWines + 1.33407347415468 * S_NumCatalogPurchases + 1.00633891197299
* S_NumDealsPurchases + -0.23920969262322 * S_NumStorePurchases + -0.6008837862932 *
S_NumWebPurchases + 0.26759743722885 * S_NumWebVisitsMonth + -0.42755419464125 * S_Recency +
-0.14471776361394 * S_Teenhome ;
1151750   +   H13  =    -0.19807308698832 * S_Income  +     0.25934675474849 * S_Kidhome
1151751   +          +     0.04398331533724 * S_MntFishProducts
1151752   +          +    -0.00090357598988 * S_MntFruits  +     0.05139545341773 *
1151753   +        S_MntGoldProds  +    -0.74617114336019 * S_MntMeatProducts
1151754   +          +     0.00552488718744 * S_MntSweetProducts
1151755   +          +     0.47194407197012 * S_MntWines  +    -0.35149551848487 *
1151756   +        S_NumCatalogPurchases  +    -0.30232522133093 * S_NumDealsPurchases
1151757   +          +     0.60058189155105 * S_NumStorePurchases
1151758   +          +     0.51423374855856 * S_NumWebPurchases
1151759   +          +     -0.9075304423321 * S_NumWebVisitsMonth
1151760   +          +     0.83597739226791 * S_Recency  +     0.15783202762709 *
1151761   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = -0.19807308698832 * S_Income + 0.25934675474849 * S_Kidhome +
0.04398331533724 * S_MntFishProducts + -0.00090357598988 * S_MntFruits + 0.05139545341773 *
S_MntGoldProds + -0.74617114336019 * S_MntMeatProducts + 0.00552488718744 * S_MntSweetProducts
+ 0.47194407197012 * S_MntWines + -0.35149551848487 * S_NumCatalogPurchases +
-0.30232522133093 * S_NumDealsPurchases + 0.60058189155105 * S_NumStorePurchases +
0.51423374855856 * S_NumWebPurchases + -0.9075304423321 * S_NumWebVisitsMonth +
0.83597739226791 * S_Recency + 0.15783202762709 * S_Teenhome ;
1151762   +   H11  = H11  +    -0.26274045665457 * AcceptedCmp10
1151763   +          +    -0.86105702939371 * AcceptedCmp20  +    -0.50476270558977 *
1151764   +        AcceptedCmp30  +    -0.84284126473343 * AcceptedCmp40
1151765   +          +     0.19764907691314 * AcceptedCmp50  +    -0.29305577412263 *
1151766   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.26274045665457 * AcceptedCmp10 + -0.86105702939371 *
AcceptedCmp20 + -0.50476270558977 * AcceptedCmp30 + -0.84284126473343 * AcceptedCmp40 +
0.19764907691314 * AcceptedCmp50 + -0.29305577412263 * Complain0 ;
1151767   +   H12  = H12  +    -0.27394139847883 * AcceptedCmp10
1151768   +          +    -0.14688750266104 * AcceptedCmp20  +    -0.27982299242327 *
1151769   +        AcceptedCmp30  +    -0.10465140408787 * AcceptedCmp40
1151770   +          +    -0.81681330244218 * AcceptedCmp50  +    -0.28152730217644 *
1151771   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.27394139847883 * AcceptedCmp10 + -0.14688750266104 *
AcceptedCmp20 + -0.27982299242327 * AcceptedCmp30 + -0.10465140408787 * AcceptedCmp40 +
-0.81681330244218 * AcceptedCmp50 + -0.28152730217644 * Complain0 ;
1151772   +   H13  = H13  +     0.42310780831005 * AcceptedCmp10
1151773   +          +     0.41337614261155 * AcceptedCmp20  +     0.41436520641821 *
1151774   +        AcceptedCmp30  +     0.08914989208239 * AcceptedCmp40
1151775   +          +     0.54013759697695 * AcceptedCmp50  +    -0.19478210268955 *
1151776   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.42310780831005 * AcceptedCmp10 + 0.41337614261155 *
AcceptedCmp20 + 0.41436520641821 * AcceptedCmp30 + 0.08914989208239 * AcceptedCmp40 +
0.54013759697695 * AcceptedCmp50 + -0.19478210268955 * Complain0 ;
1151777   +   H11  = H11  +     0.40331200702699 * Education2n_Cycle
1151778   +          +     0.17202421641945 * EducationBasic  +    -0.29654161092174 *
1151779   +        EducationGraduation  +     -0.4835104183635 * EducationMaster
1151780   +          +     0.52129580188513 * Marital_StatusDivorced
1151781   +          +     -1.5224490339553 * Marital_StatusMarried
1151782   +          +     1.05062906057771 * Marital_StatusSingle
1151783   +          +    -1.16420887937635 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.40331200702699 * Education2n_Cycle + 0.17202421641945 *
EducationBasic + -0.29654161092174 * EducationGraduation + -0.4835104183635 * EducationMaster
+ 0.52129580188513 * Marital_StatusDivorced + -1.5224490339553 * Marital_StatusMarried +
1.05062906057771 * Marital_StatusSingle + -1.16420887937635 * Marital_StatusTogether ;
1151784   +   H12  = H12  +     -0.3488928858263 * Education2n_Cycle
1151785   +          +     0.38279680594423 * EducationBasic  +     0.20376044836519 *
1151786   +        EducationGraduation  +     0.20697694670185 * EducationMaster
1151787   +          +    -0.14428158063317 * Marital_StatusDivorced
1151788   +          +     0.22396926143356 * Marital_StatusMarried
1151789   +          +    -0.12980854818876 * Marital_StatusSingle
1151790   +          +     0.32607015627906 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.3488928858263 * Education2n_Cycle + 0.38279680594423 *
EducationBasic + 0.20376044836519 * EducationGraduation + 0.20697694670185 * EducationMaster +
-0.14428158063317 * Marital_StatusDivorced + 0.22396926143356 * Marital_StatusMarried +
-0.12980854818876 * Marital_StatusSingle + 0.32607015627906 * Marital_StatusTogether ;
1151791   +   H13  = H13  +    -0.18351418824199 * Education2n_Cycle
1151792   +          +     0.53417952447263 * EducationBasic  +    -0.14333929289628 *
1151793   +        EducationGraduation  +     0.04513004774082 * EducationMaster
1151794   +          +    -0.25615797303064 * Marital_StatusDivorced
1151795   +          +     0.18825506199046 * Marital_StatusMarried
1151796   +          +    -0.24607556819871 * Marital_StatusSingle
1151797   +          +     0.29531673844201 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.18351418824199 * Education2n_Cycle + 0.53417952447263 *
EducationBasic + -0.14333929289628 * EducationGraduation + 0.04513004774082 * EducationMaster
+ -0.25615797303064 * Marital_StatusDivorced + 0.18825506199046 * Marital_StatusMarried +
-0.24607556819871 * Marital_StatusSingle + 0.29531673844201 * Marital_StatusTogether ;
1151798   +   H11  =    -1.29289362679377 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -1.29289362679377 + H11 ;
1151799   +   H12  =     0.88724419151235 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.88724419151235 + H12 ;
1151800   +   H13  =    -0.51194544699467 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.51194544699467 + H13 ;
1151801   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1151802   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1151803   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1151804   +END;
MPRINT(EM_DIAGRAM):   END;
1151805   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1151806   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1151807   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1151808   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1151809   +END;
MPRINT(EM_DIAGRAM):   END;
1151810   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1151811   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1151812   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1151813   +
1151814   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1151815   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1151816   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1151817   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1151818   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1151819   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1151820   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1151821   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1151822   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1151823   +end;
MPRINT(EM_DIAGRAM):   end;
1151824   +else do;
MPRINT(EM_DIAGRAM):   else do;
1151825   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1151826   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1151827   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1151828   +   end;
MPRINT(EM_DIAGRAM):   end;
1151829   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1151830   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1151831   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1151832   +   end;
MPRINT(EM_DIAGRAM):   end;
1151833   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1151834   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1151835   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1151836   +   end;
MPRINT(EM_DIAGRAM):   end;
1151837   +end;
MPRINT(EM_DIAGRAM):   end;
1151838   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1151839   +   P_DepVar1  =     4.44251020865882 * H11  +     2.67139161773156 * H12
1151840   +          +    -4.73549395111184 * H13 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 4.44251020865882 * H11 + 2.67139161773156 * H12 +
-4.73549395111184 * H13 ;
1151841   +   P_DepVar1  =     0.45492690116644 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.45492690116644 + P_DepVar1 ;
1151842   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1151843   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1151844   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1151845   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1151846   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1151847   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1151848   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1151849   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1151850   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1151851   +END;
MPRINT(EM_DIAGRAM):   END;
1151852   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1151853   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1151854   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1151855   +END;
MPRINT(EM_DIAGRAM):   END;
1151856   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1151857   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1151858   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1151859   +END;
MPRINT(EM_DIAGRAM):   END;
1151860   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1151861   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1151862   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1151863   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1151864   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1151865   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1151866   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1151867   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1151868   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1151869   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1151870   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1151871   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1151872   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1151873   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1151874   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1151875   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1151876   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1151877   +END;
MPRINT(EM_DIAGRAM):   END;
1151878   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1151879   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1151880   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1151881   +drop
1151882   +H11
1151883   +H12
1151884   +H13
1151885   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 ;
1151886   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1151887   +* Renaming variables for Neural32;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural32;
1151888   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1151889   +* Renaming Posterior variables for Neural32;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural32;
1151890   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1151891   +drop Neural32_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural32_P_DepVar1;
1151892   +Neural32_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural32_P_DepVar1 = P_DepVar1;
1151893   +drop Neural32_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural32_P_DepVar0;
1151894   +Neural32_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural32_P_DepVar0 = P_DepVar0;
1151895   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1151896   +* Renaming _WARN_ variable for Neural32;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural32;
1151897   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1151898   +length Neural32_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural32_WARN_ $4;
1151899   +drop Neural32_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural32_WARN_;
1151900   +Neural32_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural32_WARN_ = _WARN_;
1151901   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1151902   +* Ensmbl9: Scoring Code of model 7 of 10;
MPRINT(EM_DIAGRAM):   * Ensmbl9: Scoring Code of model 7 of 10;
1151903   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1151904   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1151905   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
1151906   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1151907   +* NODE: Neural34;
MPRINT(EM_DIAGRAM):   * NODE: Neural34;
1151908   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1151909   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1151910   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1151911   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1151912   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1151913   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1151914   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1151915   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1151916   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1151917   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1151918   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1151919   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1151920   +LENGTH _WARN_ $4
1151921   +      F_DepVar  $ 12
1151922   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1151923   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1151924   +
1151925   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1151926   +
1151927   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1151928   +
1151929   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1151930   +
1151931   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1151932   +
1151933   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1151934   +
1151935   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1151936   +
1151937   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1151938   +
1151939   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1151940   +
1151941   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1151942   +
1151943   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1151944   +
1151945   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1151946   +
1151947   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1151948   +
1151949   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1151950   +
1151951   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1151952   +
1151953   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1151954   +
1151955   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1151956   +
1151957   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1151958   +
1151959   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1151960   +
1151961   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1151962   +
1151963   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1151964   +
1151965   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1151966   +
1151967   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1151968   +
1151969   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1151970   +
1151971   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1151972   +
1151973   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1151974   +
1151975   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1151976   +
1151977   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1151978   +
1151979   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1151980   +
1151981   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1151982   +
1151983   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1151984   +
1151985   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1151986   +
1151987   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1151988   +
1151989   +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
1151990   +
1151991   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1151992   +
1151993   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1151994   +
1151995   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1151996   +
1151997   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1151998   +
1151999   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1152000   +
1152001   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1152002   +
1152003   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1152004   +
1152005   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1152006   +
1152007   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1152008   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1152009   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1152010   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1152011   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1152012   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1152013   +end;
MPRINT(EM_DIAGRAM):   end;
1152014   +else do;
MPRINT(EM_DIAGRAM):   else do;
1152015   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1152016   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1152017   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1152018   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1152019   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1152020   +   end;
MPRINT(EM_DIAGRAM):   end;
1152021   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1152022   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1152023   +   end;
MPRINT(EM_DIAGRAM):   end;
1152024   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1152025   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1152026   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1152027   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1152028   +   end;
MPRINT(EM_DIAGRAM):   end;
1152029   +end;
MPRINT(EM_DIAGRAM):   end;
1152030   +
1152031   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1152032   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1152033   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1152034   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1152035   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1152036   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1152037   +end;
MPRINT(EM_DIAGRAM):   end;
1152038   +else do;
MPRINT(EM_DIAGRAM):   else do;
1152039   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1152040   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1152041   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1152042   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1152043   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1152044   +   end;
MPRINT(EM_DIAGRAM):   end;
1152045   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1152046   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1152047   +   end;
MPRINT(EM_DIAGRAM):   end;
1152048   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1152049   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1152050   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1152051   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1152052   +   end;
MPRINT(EM_DIAGRAM):   end;
1152053   +end;
MPRINT(EM_DIAGRAM):   end;
1152054   +
1152055   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1152056   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1152057   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1152058   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1152059   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1152060   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1152061   +end;
MPRINT(EM_DIAGRAM):   end;
1152062   +else do;
MPRINT(EM_DIAGRAM):   else do;
1152063   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1152064   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1152065   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1152066   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1152067   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1152068   +   end;
MPRINT(EM_DIAGRAM):   end;
1152069   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1152070   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1152071   +   end;
MPRINT(EM_DIAGRAM):   end;
1152072   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1152073   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1152074   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1152075   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1152076   +   end;
MPRINT(EM_DIAGRAM):   end;
1152077   +end;
MPRINT(EM_DIAGRAM):   end;
1152078   +
1152079   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1152080   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1152081   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1152082   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1152083   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1152084   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1152085   +end;
MPRINT(EM_DIAGRAM):   end;
1152086   +else do;
MPRINT(EM_DIAGRAM):   else do;
1152087   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1152088   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1152089   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1152090   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1152091   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1152092   +   end;
MPRINT(EM_DIAGRAM):   end;
1152093   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1152094   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1152095   +   end;
MPRINT(EM_DIAGRAM):   end;
1152096   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1152097   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1152098   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1152099   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1152100   +   end;
MPRINT(EM_DIAGRAM):   end;
1152101   +end;
MPRINT(EM_DIAGRAM):   end;
1152102   +
1152103   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1152104   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1152105   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1152106   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1152107   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1152108   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1152109   +end;
MPRINT(EM_DIAGRAM):   end;
1152110   +else do;
MPRINT(EM_DIAGRAM):   else do;
1152111   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1152112   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1152113   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1152114   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1152115   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1152116   +   end;
MPRINT(EM_DIAGRAM):   end;
1152117   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1152118   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1152119   +   end;
MPRINT(EM_DIAGRAM):   end;
1152120   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1152121   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1152122   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1152123   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1152124   +   end;
MPRINT(EM_DIAGRAM):   end;
1152125   +end;
MPRINT(EM_DIAGRAM):   end;
1152126   +
1152127   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1152128   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1152129   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1152130   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1152131   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1152132   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1152133   +end;
MPRINT(EM_DIAGRAM):   end;
1152134   +else do;
MPRINT(EM_DIAGRAM):   else do;
1152135   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1152136   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1152137   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1152138   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1152139   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1152140   +   end;
MPRINT(EM_DIAGRAM):   end;
1152141   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1152142   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1152143   +   end;
MPRINT(EM_DIAGRAM):   end;
1152144   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1152145   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1152146   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1152147   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1152148   +   end;
MPRINT(EM_DIAGRAM):   end;
1152149   +end;
MPRINT(EM_DIAGRAM):   end;
1152150   +
1152151   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1152152   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
1152153   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1152154   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1152155   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1152156   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1152157   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1152158   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1152159   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1152160   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1152161   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1152162   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1152163   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1152164   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1152165   +end;
MPRINT(EM_DIAGRAM):   end;
1152166   +else do;
MPRINT(EM_DIAGRAM):   else do;
1152167   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1152168   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1152169   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1152170   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1152171   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1152172   +   end;
MPRINT(EM_DIAGRAM):   end;
1152173   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1152174   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1152175   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1152176   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1152177   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1152178   +   end;
MPRINT(EM_DIAGRAM):   end;
1152179   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1152180   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1152181   +   end;
MPRINT(EM_DIAGRAM):   end;
1152182   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1152183   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1152184   +   end;
MPRINT(EM_DIAGRAM):   end;
1152185   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1152186   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1152187   +   end;
MPRINT(EM_DIAGRAM):   end;
1152188   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1152189   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1152190   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1152191   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1152192   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1152193   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1152194   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1152195   +   end;
MPRINT(EM_DIAGRAM):   end;
1152196   +end;
MPRINT(EM_DIAGRAM):   end;
1152197   +
1152198   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1152199   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1152200   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
1152201   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1152202   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1152203   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1152204   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1152205   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1152206   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1152207   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1152208   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1152209   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1152210   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1152211   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1152212   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1152213   +end;
MPRINT(EM_DIAGRAM):   end;
1152214   +else do;
MPRINT(EM_DIAGRAM):   else do;
1152215   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1152216   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1152217   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1152218   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1152219   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1152220   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1152221   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1152222   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1152223   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1152224   +         end;
MPRINT(EM_DIAGRAM):   end;
1152225   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1152226   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1152227   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1152228   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1152229   +            end;
MPRINT(EM_DIAGRAM):   end;
1152230   +         end;
MPRINT(EM_DIAGRAM):   end;
1152231   +      end;
MPRINT(EM_DIAGRAM):   end;
1152232   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1152233   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1152234   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1152235   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1152236   +         end;
MPRINT(EM_DIAGRAM):   end;
1152237   +      end;
MPRINT(EM_DIAGRAM):   end;
1152238   +   end;
MPRINT(EM_DIAGRAM):   end;
1152239   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1152240   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1152241   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1152242   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1152243   +      end;
MPRINT(EM_DIAGRAM):   end;
1152244   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1152245   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1152246   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1152247   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1152248   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1152249   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1152250   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1152251   +         end;
MPRINT(EM_DIAGRAM):   end;
1152252   +      end;
MPRINT(EM_DIAGRAM):   end;
1152253   +   end;
MPRINT(EM_DIAGRAM):   end;
1152254   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1152255   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1152256   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1152257   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1152258   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1152259   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1152260   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1152261   +   end;
MPRINT(EM_DIAGRAM):   end;
1152262   +end;
MPRINT(EM_DIAGRAM):   end;
1152263   +
1152264   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1152265   +*** Checking missing input Interval
1152266   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1152267   +
1152268   +IF NMISS(
1152269   +   Income ,
1152270   +   Kidhome ,
1152271   +   MntFishProducts ,
1152272   +   MntFruits ,
1152273   +   MntGoldProds ,
1152274   +   MntMeatProducts ,
1152275   +   MntSweetProducts ,
1152276   +   MntWines ,
1152277   +   NumCatalogPurchases ,
1152278   +   NumDealsPurchases ,
1152279   +   NumStorePurchases ,
1152280   +   NumWebPurchases ,
1152281   +   NumWebVisitsMonth ,
1152282   +   Recency ,
1152283   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Income , Kidhome , MntFishProducts , MntFruits , MntGoldProds
, MntMeatProducts , MntSweetProducts , MntWines , NumCatalogPurchases , NumDealsPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , Recency , Teenhome ) THEN DO;
1152284   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1152285   +
1152286   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1152287   +END;
MPRINT(EM_DIAGRAM):   END;
1152288   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1152289   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1152290   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1152291   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1152292   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1152293   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1152294   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1152295   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1152296   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1152297   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1152298   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1152299   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1152300   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1152301   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1152302   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1152303   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1152304   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1152305   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1152306   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1152307   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1152308   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1152309   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1152310   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1152311   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1152312   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1152313   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1152314   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1152315   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1152316   +END;
MPRINT(EM_DIAGRAM):   END;
1152317   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1152318   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1152319   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1152320   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1152321   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1152322   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1152323   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1152324   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1152325   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1152326   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1152327   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1152328   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1152329   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1152330   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
1152331   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1152332   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1152333   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1152334   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1152335   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1152336   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1152337   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1152338   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1152339   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1152340   +   ELSE S_NumCatalogPurchases
1152341   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1152342   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1152343   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1152344   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1152345   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1152346   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1152347   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1152348   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1152349   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1152350   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1152351   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1152352   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1152353   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1152354   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1152355   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1152356   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1152357   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1152358   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1152359   +END;
MPRINT(EM_DIAGRAM):   END;
1152360   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1152361   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1152362   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1152363   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1152364   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1152365   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1152366   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1152367   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1152368   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1152369   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1152370   +   H11  =    -0.81572379016921 * S_Income  +    -0.07670946585348 * S_Kidhome
1152371   +          +     0.24367603598167 * S_MntFishProducts
1152372   +          +     0.19692980127348 * S_MntFruits  +    -0.03926738185333 *
1152373   +        S_MntGoldProds  +    -0.20900804333353 * S_MntMeatProducts
1152374   +          +     0.34054806441484 * S_MntSweetProducts
1152375   +          +     0.65956211369383 * S_MntWines  +    -0.95375334578522 *
1152376   +        S_NumCatalogPurchases  +    -0.73124740368567 * S_NumDealsPurchases
1152377   +          +     0.98942946974575 * S_NumStorePurchases
1152378   +          +     0.89701206630103 * S_NumWebPurchases
1152379   +          +    -1.22878611472154 * S_NumWebVisitsMonth
1152380   +          +     1.44981870978354 * S_Recency  +     0.47533125686411 *
1152381   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = -0.81572379016921 * S_Income + -0.07670946585348 * S_Kidhome +
0.24367603598167 * S_MntFishProducts + 0.19692980127348 * S_MntFruits + -0.03926738185333 *
S_MntGoldProds + -0.20900804333353 * S_MntMeatProducts + 0.34054806441484 * S_MntSweetProducts
+ 0.65956211369383 * S_MntWines + -0.95375334578522 * S_NumCatalogPurchases +
-0.73124740368567 * S_NumDealsPurchases + 0.98942946974575 * S_NumStorePurchases +
0.89701206630103 * S_NumWebPurchases + -1.22878611472154 * S_NumWebVisitsMonth +
1.44981870978354 * S_Recency + 0.47533125686411 * S_Teenhome ;
1152382   +   H12  =    -0.18875145195495 * S_Income  +     0.42230998482453 * S_Kidhome
1152383   +          +     0.16683404689723 * S_MntFishProducts
1152384   +          +     0.32072658929401 * S_MntFruits  +    -0.12341748032201 *
1152385   +        S_MntGoldProds  +    -1.56478754527255 * S_MntMeatProducts
1152386   +          +     0.20389084548968 * S_MntSweetProducts
1152387   +          +     0.95592931625509 * S_MntWines  +    -0.69996817353755 *
1152388   +        S_NumCatalogPurchases  +    -0.92709806328697 * S_NumDealsPurchases
1152389   +          +     1.27164659640366 * S_NumStorePurchases
1152390   +          +     1.02122194207802 * S_NumWebPurchases
1152391   +          +     -1.5111033436803 * S_NumWebVisitsMonth
1152392   +          +     1.63712814901544 * S_Recency  +     0.14205116840572 *
1152393   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -0.18875145195495 * S_Income + 0.42230998482453 * S_Kidhome +
0.16683404689723 * S_MntFishProducts + 0.32072658929401 * S_MntFruits + -0.12341748032201 *
S_MntGoldProds + -1.56478754527255 * S_MntMeatProducts + 0.20389084548968 * S_MntSweetProducts
+ 0.95592931625509 * S_MntWines + -0.69996817353755 * S_NumCatalogPurchases +
-0.92709806328697 * S_NumDealsPurchases + 1.27164659640366 * S_NumStorePurchases +
1.02122194207802 * S_NumWebPurchases + -1.5111033436803 * S_NumWebVisitsMonth +
1.63712814901544 * S_Recency + 0.14205116840572 * S_Teenhome ;
1152394   +   H13  =     1.02798705354163 * S_Income  +    -0.94411708781921 * S_Kidhome
1152395   +          +    -0.03345077166544 * S_MntFishProducts
1152396   +          +     0.00038440809349 * S_MntFruits  +    -0.05068379715712 *
1152397   +        S_MntGoldProds  +     1.00464705307582 * S_MntMeatProducts
1152398   +          +    -0.11948662500951 * S_MntSweetProducts
1152399   +          +    -0.52438819731252 * S_MntWines  +     0.98586904866769 *
1152400   +        S_NumCatalogPurchases  +     0.09015295226839 * S_NumDealsPurchases
1152401   +          +     0.22401914357376 * S_NumStorePurchases
1152402   +          +     0.04219877865976 * S_NumWebPurchases
1152403   +          +     1.21753334166036 * S_NumWebVisitsMonth
1152404   +          +    -1.33712212110081 * S_Recency  +    -0.47582856683655 *
1152405   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = 1.02798705354163 * S_Income + -0.94411708781921 * S_Kidhome +
-0.03345077166544 * S_MntFishProducts + 0.00038440809349 * S_MntFruits + -0.05068379715712 *
S_MntGoldProds + 1.00464705307582 * S_MntMeatProducts + -0.11948662500951 * S_MntSweetProducts
+ -0.52438819731252 * S_MntWines + 0.98586904866769 * S_NumCatalogPurchases + 0.09015295226839
* S_NumDealsPurchases + 0.22401914357376 * S_NumStorePurchases + 0.04219877865976 *
S_NumWebPurchases + 1.21753334166036 * S_NumWebVisitsMonth + -1.33712212110081 * S_Recency +
-0.47582856683655 * S_Teenhome ;
1152406   +   H14  =     0.91431429848834 * S_Income  +    -1.16289676557574 * S_Kidhome
1152407   +          +     0.31175257038578 * S_MntFishProducts
1152408   +          +     0.08080436076271 * S_MntFruits  +     0.15252288175851 *
1152409   +        S_MntGoldProds  +     0.21603546207654 * S_MntMeatProducts
1152410   +          +      0.0927253053382 * S_MntSweetProducts
1152411   +          +     0.05865323888304 * S_MntWines  +    -0.23426953728277 *
1152412   +        S_NumCatalogPurchases  +    -0.46451908614085 * S_NumDealsPurchases
1152413   +          +    -0.12667606349662 * S_NumStorePurchases
1152414   +          +     0.30148374518724 * S_NumWebPurchases
1152415   +          +     0.48934229701658 * S_NumWebVisitsMonth
1152416   +          +    -0.83754390793251 * S_Recency  +     -0.4576645462819 *
1152417   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = 0.91431429848834 * S_Income + -1.16289676557574 * S_Kidhome +
0.31175257038578 * S_MntFishProducts + 0.08080436076271 * S_MntFruits + 0.15252288175851 *
S_MntGoldProds + 0.21603546207654 * S_MntMeatProducts + 0.0927253053382 * S_MntSweetProducts +
0.05865323888304 * S_MntWines + -0.23426953728277 * S_NumCatalogPurchases + -0.46451908614085
* S_NumDealsPurchases + -0.12667606349662 * S_NumStorePurchases + 0.30148374518724 *
S_NumWebPurchases + 0.48934229701658 * S_NumWebVisitsMonth + -0.83754390793251 * S_Recency +
-0.4576645462819 * S_Teenhome ;
1152418   +   H15  =    -0.58161501095664 * S_Income  +     -1.0333658128614 * S_Kidhome
1152419   +          +     0.42646725119177 * S_MntFishProducts
1152420   +          +     -0.3264621401658 * S_MntFruits  +    -0.74616728524532 *
1152421   +        S_MntGoldProds  +    -0.97572068716712 * S_MntMeatProducts
1152422   +          +    -0.01493605582616 * S_MntSweetProducts
1152423   +          +      0.0311636632685 * S_MntWines  +    -1.68599903767191 *
1152424   +        S_NumCatalogPurchases  +    -1.25052648798307 * S_NumDealsPurchases
1152425   +          +     0.54256744091258 * S_NumStorePurchases
1152426   +          +     0.43065931458468 * S_NumWebPurchases
1152427   +          +      0.5935561420466 * S_NumWebVisitsMonth
1152428   +          +    -0.45183418369624 * S_Recency  +     0.19260512629844 *
1152429   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H15 = -0.58161501095664 * S_Income + -1.0333658128614 * S_Kidhome +
0.42646725119177 * S_MntFishProducts + -0.3264621401658 * S_MntFruits + -0.74616728524532 *
S_MntGoldProds + -0.97572068716712 * S_MntMeatProducts + -0.01493605582616 *
S_MntSweetProducts + 0.0311636632685 * S_MntWines + -1.68599903767191 * S_NumCatalogPurchases
+ -1.25052648798307 * S_NumDealsPurchases + 0.54256744091258 * S_NumStorePurchases +
0.43065931458468 * S_NumWebPurchases + 0.5935561420466 * S_NumWebVisitsMonth +
-0.45183418369624 * S_Recency + 0.19260512629844 * S_Teenhome ;
1152430   +   H11  = H11  +     0.61503950219838 * AcceptedCmp10
1152431   +          +     0.02945207091619 * AcceptedCmp20  +     0.99151950769472 *
1152432   +        AcceptedCmp30  +     1.08987060401718 * AcceptedCmp40
1152433   +          +     0.45427753773024 * AcceptedCmp50  +    -1.03533951966815 *
1152434   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.61503950219838 * AcceptedCmp10 + 0.02945207091619 *
AcceptedCmp20 + 0.99151950769472 * AcceptedCmp30 + 1.08987060401718 * AcceptedCmp40 +
0.45427753773024 * AcceptedCmp50 + -1.03533951966815 * Complain0 ;
1152435   +   H12  = H12  +     0.83823476190401 * AcceptedCmp10
1152436   +          +      1.0793719601418 * AcceptedCmp20  +     0.68538854946581 *
1152437   +        AcceptedCmp30  +     1.00297565893339 * AcceptedCmp40
1152438   +          +     0.24586379991786 * AcceptedCmp50  +     0.15471251255301 *
1152439   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.83823476190401 * AcceptedCmp10 + 1.0793719601418 *
AcceptedCmp20 + 0.68538854946581 * AcceptedCmp30 + 1.00297565893339 * AcceptedCmp40 +
0.24586379991786 * AcceptedCmp50 + 0.15471251255301 * Complain0 ;
1152440   +   H13  = H13  +    -0.41486094438907 * AcceptedCmp10
1152441   +          +    -0.76586628449839 * AcceptedCmp20  +    -0.59695459523693 *
1152442   +        AcceptedCmp30  +    -0.30262159911837 * AcceptedCmp40
1152443   +          +    -0.61141171124182 * AcceptedCmp50  +    -0.01086235188835 *
1152444   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.41486094438907 * AcceptedCmp10 + -0.76586628449839 *
AcceptedCmp20 + -0.59695459523693 * AcceptedCmp30 + -0.30262159911837 * AcceptedCmp40 +
-0.61141171124182 * AcceptedCmp50 + -0.01086235188835 * Complain0 ;
1152445   +   H14  = H14  +    -0.09662858884082 * AcceptedCmp10
1152446   +          +    -0.48515652524171 * AcceptedCmp20  +    -0.37421451374399 *
1152447   +        AcceptedCmp30  +    -0.52889523891817 * AcceptedCmp40
1152448   +          +    -0.73518448275357 * AcceptedCmp50  +    -0.36065830718672 *
1152449   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.09662858884082 * AcceptedCmp10 + -0.48515652524171 *
AcceptedCmp20 + -0.37421451374399 * AcceptedCmp30 + -0.52889523891817 * AcceptedCmp40 +
-0.73518448275357 * AcceptedCmp50 + -0.36065830718672 * Complain0 ;
1152450   +   H15  = H15  +      0.2985143092641 * AcceptedCmp10
1152451   +          +    -0.06881934778393 * AcceptedCmp20  +    -0.02609197044604 *
1152452   +        AcceptedCmp30  +    -0.79105657447885 * AcceptedCmp40
1152453   +          +    -0.02286855144948 * AcceptedCmp50  +     0.02884650192784 *
1152454   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.2985143092641 * AcceptedCmp10 + -0.06881934778393 *
AcceptedCmp20 + -0.02609197044604 * AcceptedCmp30 + -0.79105657447885 * AcceptedCmp40 +
-0.02286855144948 * AcceptedCmp50 + 0.02884650192784 * Complain0 ;
1152455   +   H11  = H11  +    -0.41169946146301 * Education2n_Cycle
1152456   +          +      0.8448273504441 * EducationBasic  +    -1.02497956377347 *
1152457   +        EducationGraduation  +     0.43998321745211 * EducationMaster
1152458   +          +    -0.85912688909911 * Marital_StatusDivorced
1152459   +          +     0.81561401465875 * Marital_StatusMarried
1152460   +          +    -0.58324403081542 * Marital_StatusSingle
1152461   +          +      0.9348017085106 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.41169946146301 * Education2n_Cycle + 0.8448273504441 *
EducationBasic + -1.02497956377347 * EducationGraduation + 0.43998321745211 * EducationMaster
+ -0.85912688909911 * Marital_StatusDivorced + 0.81561401465875 * Marital_StatusMarried +
-0.58324403081542 * Marital_StatusSingle + 0.9348017085106 * Marital_StatusTogether ;
1152462   +   H12  = H12  +     0.22828129841893 * Education2n_Cycle
1152463   +          +     0.47579227804033 * EducationBasic  +    -0.18165301263195 *
1152464   +        EducationGraduation  +    -0.16143431016405 * EducationMaster
1152465   +          +    -0.34784695867287 * Marital_StatusDivorced
1152466   +          +    -0.18194022182247 * Marital_StatusMarried
1152467   +          +    -0.10633185904164 * Marital_StatusSingle
1152468   +          +     0.13136125361628 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.22828129841893 * Education2n_Cycle + 0.47579227804033 *
EducationBasic + -0.18165301263195 * EducationGraduation + -0.16143431016405 * EducationMaster
+ -0.34784695867287 * Marital_StatusDivorced + -0.18194022182247 * Marital_StatusMarried +
-0.10633185904164 * Marital_StatusSingle + 0.13136125361628 * Marital_StatusTogether ;
1152469   +   H13  = H13  +     0.38705901043652 * Education2n_Cycle
1152470   +          +     0.19703188370189 * EducationBasic  +    -0.48062640599976 *
1152471   +        EducationGraduation  +     -0.3646621736273 * EducationMaster
1152472   +          +     0.61058752124466 * Marital_StatusDivorced
1152473   +          +    -1.38793808025141 * Marital_StatusMarried
1152474   +          +     1.10060737810944 * Marital_StatusSingle
1152475   +          +    -1.21250219018366 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.38705901043652 * Education2n_Cycle + 0.19703188370189 *
EducationBasic + -0.48062640599976 * EducationGraduation + -0.3646621736273 * EducationMaster
+ 0.61058752124466 * Marital_StatusDivorced + -1.38793808025141 * Marital_StatusMarried +
1.10060737810944 * Marital_StatusSingle + -1.21250219018366 * Marital_StatusTogether ;
1152476   +   H14  = H14  +    -0.20576658115662 * Education2n_Cycle
1152477   +          +    -0.09185472034614 * EducationBasic  +    -0.43674210064447 *
1152478   +        EducationGraduation  +    -0.18154054746298 * EducationMaster
1152479   +          +     0.11973800573581 * Marital_StatusDivorced
1152480   +          +      -0.294635257911 * Marital_StatusMarried
1152481   +          +    -0.05399659601172 * Marital_StatusSingle
1152482   +          +     0.34207780606239 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.20576658115662 * Education2n_Cycle + -0.09185472034614 *
EducationBasic + -0.43674210064447 * EducationGraduation + -0.18154054746298 * EducationMaster
+ 0.11973800573581 * Marital_StatusDivorced + -0.294635257911 * Marital_StatusMarried +
-0.05399659601172 * Marital_StatusSingle + 0.34207780606239 * Marital_StatusTogether ;
1152483   +   H15  = H15  +    -0.05553093684862 * Education2n_Cycle
1152484   +          +    -0.12898006732329 * EducationBasic  +    -0.16064118923518 *
1152485   +        EducationGraduation  +     -0.6431539624694 * EducationMaster
1152486   +          +     0.42838191659864 * Marital_StatusDivorced
1152487   +          +    -0.09150349181363 * Marital_StatusMarried
1152488   +          +    -0.33520164145276 * Marital_StatusSingle
1152489   +          +    -0.15253738713197 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + -0.05553093684862 * Education2n_Cycle + -0.12898006732329 *
EducationBasic + -0.16064118923518 * EducationGraduation + -0.6431539624694 * EducationMaster
+ 0.42838191659864 * Marital_StatusDivorced + -0.09150349181363 * Marital_StatusMarried +
-0.33520164145276 * Marital_StatusSingle + -0.15253738713197 * Marital_StatusTogether ;
1152490   +   H11  =     -1.5079478405973 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -1.5079478405973 + H11 ;
1152491   +   H12  =     0.03014958331993 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.03014958331993 + H12 ;
1152492   +   H13  =    -1.78098671165572 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -1.78098671165572 + H13 ;
1152493   +   H14  =     0.22179429743277 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 0.22179429743277 + H14 ;
1152494   +   H15  =    -2.06602107857898 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = -2.06602107857898 + H15 ;
1152495   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1152496   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1152497   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1152498   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1152499   +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
1152500   +END;
MPRINT(EM_DIAGRAM):   END;
1152501   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1152502   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1152503   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1152504   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1152505   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1152506   +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
1152507   +END;
MPRINT(EM_DIAGRAM):   END;
1152508   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1152509   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1152510   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1152511   +
1152512   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1152513   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1152514   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1152515   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1152516   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1152517   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1152518   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1152519   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1152520   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1152521   +end;
MPRINT(EM_DIAGRAM):   end;
1152522   +else do;
MPRINT(EM_DIAGRAM):   else do;
1152523   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1152524   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1152525   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1152526   +   end;
MPRINT(EM_DIAGRAM):   end;
1152527   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1152528   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1152529   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1152530   +   end;
MPRINT(EM_DIAGRAM):   end;
1152531   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1152532   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1152533   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1152534   +   end;
MPRINT(EM_DIAGRAM):   end;
1152535   +end;
MPRINT(EM_DIAGRAM):   end;
1152536   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1152537   +   P_DepVar1  =    -4.55666337815854 * H11  +    -4.04792544554995 * H12
1152538   +          +     4.56148127429284 * H13  +     2.36841344452371 * H14
1152539   +          +    -3.07371010011749 * H15 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -4.55666337815854 * H11 + -4.04792544554995 * H12 +
4.56148127429284 * H13 + 2.36841344452371 * H14 + -3.07371010011749 * H15 ;
1152540   +   P_DepVar1  =    -0.83283406236136 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.83283406236136 + P_DepVar1 ;
1152541   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1152542   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1152543   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1152544   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1152545   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1152546   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1152547   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1152548   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1152549   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1152550   +END;
MPRINT(EM_DIAGRAM):   END;
1152551   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1152552   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1152553   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1152554   +END;
MPRINT(EM_DIAGRAM):   END;
1152555   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1152556   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1152557   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1152558   +END;
MPRINT(EM_DIAGRAM):   END;
1152559   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1152560   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1152561   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1152562   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1152563   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1152564   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1152565   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1152566   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1152567   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1152568   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1152569   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1152570   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1152571   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1152572   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1152573   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1152574   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1152575   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1152576   +END;
MPRINT(EM_DIAGRAM):   END;
1152577   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1152578   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1152579   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1152580   +drop
1152581   +H11
1152582   +H12
1152583   +H13
1152584   +H14
1152585   +H15
1152586   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 ;
1152587   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1152588   +* Renaming variables for Neural34;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural34;
1152589   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1152590   +* Renaming Posterior variables for Neural34;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural34;
1152591   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1152592   +drop Neural34_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural34_P_DepVar1;
1152593   +Neural34_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural34_P_DepVar1 = P_DepVar1;
1152594   +drop Neural34_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural34_P_DepVar0;
1152595   +Neural34_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural34_P_DepVar0 = P_DepVar0;
1152596   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1152597   +* Renaming _WARN_ variable for Neural34;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural34;
1152598   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1152599   +length Neural34_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural34_WARN_ $4;
1152600   +drop Neural34_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural34_WARN_;
1152601   +Neural34_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural34_WARN_ = _WARN_;
1152602   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1152603   +* Ensmbl9: Scoring Code of model 8 of 10;
MPRINT(EM_DIAGRAM):   * Ensmbl9: Scoring Code of model 8 of 10;
1152604   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1152605   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1152606   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
1152607   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1152608   +* NODE: Neural35;
MPRINT(EM_DIAGRAM):   * NODE: Neural35;
1152609   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1152610   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1152611   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
The SAS System
 
1152612   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1152613   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1152614   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1152615   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1152616   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1152617   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1152618   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1152619   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1152620   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1152621   +LENGTH _WARN_ $4
1152622   +      F_DepVar  $ 12
1152623   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1152624   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1152625   +
1152626   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1152627   +
1152628   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1152629   +
1152630   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1152631   +
1152632   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1152633   +
1152634   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1152635   +
1152636   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1152637   +
1152638   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1152639   +
1152640   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1152641   +
1152642   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1152643   +
1152644   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1152645   +
1152646   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1152647   +
1152648   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1152649   +
1152650   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1152651   +
1152652   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1152653   +
1152654   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1152655   +
1152656   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1152657   +
1152658   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1152659   +
1152660   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1152661   +
1152662   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1152663   +
1152664   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1152665   +
1152666   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1152667   +
1152668   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1152669   +
1152670   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1152671   +
1152672   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1152673   +
1152674   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1152675   +
1152676   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1152677   +
1152678   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1152679   +
1152680   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1152681   +
1152682   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1152683   +
1152684   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1152685   +
1152686   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1152687   +
1152688   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1152689   +
1152690   +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
1152691   +
1152692   +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
1152693   +
1152694   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1152695   +
1152696   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1152697   +
1152698   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1152699   +
1152700   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1152701   +
1152702   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1152703   +
1152704   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1152705   +
1152706   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1152707   +
1152708   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1152709   +
1152710   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1152711   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1152712   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1152713   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1152714   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1152715   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1152716   +end;
MPRINT(EM_DIAGRAM):   end;
1152717   +else do;
MPRINT(EM_DIAGRAM):   else do;
1152718   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1152719   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1152720   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1152721   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1152722   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1152723   +   end;
MPRINT(EM_DIAGRAM):   end;
1152724   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1152725   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1152726   +   end;
MPRINT(EM_DIAGRAM):   end;
1152727   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1152728   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1152729   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1152730   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1152731   +   end;
MPRINT(EM_DIAGRAM):   end;
1152732   +end;
MPRINT(EM_DIAGRAM):   end;
1152733   +
1152734   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1152735   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1152736   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1152737   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1152738   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1152739   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1152740   +end;
MPRINT(EM_DIAGRAM):   end;
1152741   +else do;
MPRINT(EM_DIAGRAM):   else do;
1152742   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1152743   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1152744   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1152745   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1152746   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1152747   +   end;
MPRINT(EM_DIAGRAM):   end;
1152748   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1152749   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1152750   +   end;
MPRINT(EM_DIAGRAM):   end;
1152751   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1152752   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1152753   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1152754   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1152755   +   end;
MPRINT(EM_DIAGRAM):   end;
1152756   +end;
MPRINT(EM_DIAGRAM):   end;
1152757   +
1152758   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1152759   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1152760   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1152761   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1152762   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1152763   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1152764   +end;
MPRINT(EM_DIAGRAM):   end;
1152765   +else do;
MPRINT(EM_DIAGRAM):   else do;
1152766   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1152767   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1152768   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1152769   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1152770   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1152771   +   end;
MPRINT(EM_DIAGRAM):   end;
1152772   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1152773   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1152774   +   end;
MPRINT(EM_DIAGRAM):   end;
1152775   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1152776   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1152777   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1152778   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1152779   +   end;
MPRINT(EM_DIAGRAM):   end;
1152780   +end;
MPRINT(EM_DIAGRAM):   end;
1152781   +
1152782   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1152783   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1152784   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1152785   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1152786   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1152787   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1152788   +end;
MPRINT(EM_DIAGRAM):   end;
1152789   +else do;
MPRINT(EM_DIAGRAM):   else do;
1152790   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1152791   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1152792   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1152793   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1152794   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1152795   +   end;
MPRINT(EM_DIAGRAM):   end;
1152796   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1152797   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1152798   +   end;
MPRINT(EM_DIAGRAM):   end;
1152799   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1152800   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1152801   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1152802   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1152803   +   end;
MPRINT(EM_DIAGRAM):   end;
1152804   +end;
MPRINT(EM_DIAGRAM):   end;
1152805   +
1152806   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1152807   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1152808   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1152809   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1152810   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1152811   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1152812   +end;
MPRINT(EM_DIAGRAM):   end;
1152813   +else do;
MPRINT(EM_DIAGRAM):   else do;
1152814   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1152815   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1152816   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1152817   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1152818   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1152819   +   end;
MPRINT(EM_DIAGRAM):   end;
1152820   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1152821   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1152822   +   end;
MPRINT(EM_DIAGRAM):   end;
1152823   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1152824   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1152825   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1152826   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1152827   +   end;
MPRINT(EM_DIAGRAM):   end;
1152828   +end;
MPRINT(EM_DIAGRAM):   end;
1152829   +
1152830   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1152831   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1152832   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1152833   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1152834   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1152835   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1152836   +end;
MPRINT(EM_DIAGRAM):   end;
1152837   +else do;
MPRINT(EM_DIAGRAM):   else do;
1152838   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1152839   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1152840   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1152841   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1152842   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1152843   +   end;
MPRINT(EM_DIAGRAM):   end;
1152844   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1152845   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1152846   +   end;
MPRINT(EM_DIAGRAM):   end;
1152847   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1152848   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1152849   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1152850   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1152851   +   end;
MPRINT(EM_DIAGRAM):   end;
1152852   +end;
MPRINT(EM_DIAGRAM):   end;
1152853   +
1152854   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1152855   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
1152856   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1152857   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1152858   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1152859   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1152860   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1152861   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1152862   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1152863   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1152864   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1152865   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1152866   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1152867   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1152868   +end;
MPRINT(EM_DIAGRAM):   end;
1152869   +else do;
MPRINT(EM_DIAGRAM):   else do;
1152870   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1152871   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1152872   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1152873   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1152874   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1152875   +   end;
MPRINT(EM_DIAGRAM):   end;
1152876   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1152877   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1152878   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1152879   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1152880   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1152881   +   end;
MPRINT(EM_DIAGRAM):   end;
1152882   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1152883   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1152884   +   end;
MPRINT(EM_DIAGRAM):   end;
1152885   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1152886   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1152887   +   end;
MPRINT(EM_DIAGRAM):   end;
1152888   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1152889   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1152890   +   end;
MPRINT(EM_DIAGRAM):   end;
1152891   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1152892   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1152893   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1152894   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1152895   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1152896   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1152897   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1152898   +   end;
MPRINT(EM_DIAGRAM):   end;
1152899   +end;
MPRINT(EM_DIAGRAM):   end;
1152900   +
1152901   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1152902   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1152903   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
1152904   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1152905   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1152906   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1152907   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1152908   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1152909   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1152910   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1152911   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1152912   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1152913   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1152914   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1152915   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1152916   +end;
MPRINT(EM_DIAGRAM):   end;
1152917   +else do;
MPRINT(EM_DIAGRAM):   else do;
1152918   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1152919   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1152920   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1152921   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1152922   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1152923   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1152924   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1152925   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1152926   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1152927   +         end;
MPRINT(EM_DIAGRAM):   end;
1152928   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1152929   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1152930   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1152931   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1152932   +            end;
MPRINT(EM_DIAGRAM):   end;
1152933   +         end;
MPRINT(EM_DIAGRAM):   end;
1152934   +      end;
MPRINT(EM_DIAGRAM):   end;
1152935   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1152936   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1152937   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1152938   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1152939   +         end;
MPRINT(EM_DIAGRAM):   end;
1152940   +      end;
MPRINT(EM_DIAGRAM):   end;
1152941   +   end;
MPRINT(EM_DIAGRAM):   end;
1152942   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1152943   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1152944   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1152945   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1152946   +      end;
MPRINT(EM_DIAGRAM):   end;
1152947   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1152948   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1152949   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1152950   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1152951   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1152952   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1152953   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1152954   +         end;
MPRINT(EM_DIAGRAM):   end;
1152955   +      end;
MPRINT(EM_DIAGRAM):   end;
1152956   +   end;
MPRINT(EM_DIAGRAM):   end;
1152957   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1152958   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1152959   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1152960   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1152961   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1152962   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1152963   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1152964   +   end;
MPRINT(EM_DIAGRAM):   end;
1152965   +end;
MPRINT(EM_DIAGRAM):   end;
1152966   +
1152967   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1152968   +*** Checking missing input Interval
1152969   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1152970   +
1152971   +IF NMISS(
1152972   +   Income ,
1152973   +   Kidhome ,
1152974   +   MntFishProducts ,
1152975   +   MntFruits ,
1152976   +   MntGoldProds ,
1152977   +   MntMeatProducts ,
1152978   +   MntSweetProducts ,
1152979   +   MntWines ,
1152980   +   NumCatalogPurchases ,
1152981   +   NumDealsPurchases ,
1152982   +   NumStorePurchases ,
1152983   +   NumWebPurchases ,
1152984   +   NumWebVisitsMonth ,
1152985   +   Recency ,
1152986   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Income , Kidhome , MntFishProducts , MntFruits , MntGoldProds
, MntMeatProducts , MntSweetProducts , MntWines , NumCatalogPurchases , NumDealsPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , Recency , Teenhome ) THEN DO;
1152987   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1152988   +
1152989   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1152990   +END;
MPRINT(EM_DIAGRAM):   END;
1152991   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1152992   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1152993   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1152994   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1152995   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1152996   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1152997   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1152998   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1152999   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1153000   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1153001   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1153002   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1153003   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1153004   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1153005   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1153006   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1153007   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1153008   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1153009   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1153010   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1153011   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1153012   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1153013   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1153014   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1153015   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1153016   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1153017   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1153018   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1153019   +END;
MPRINT(EM_DIAGRAM):   END;
1153020   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1153021   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1153022   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1153023   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1153024   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1153025   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1153026   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1153027   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1153028   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1153029   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1153030   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1153031   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1153032   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1153033   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
1153034   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1153035   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1153036   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1153037   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1153038   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1153039   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1153040   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1153041   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1153042   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1153043   +   ELSE S_NumCatalogPurchases
1153044   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1153045   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1153046   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1153047   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1153048   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1153049   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1153050   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1153051   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1153052   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1153053   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1153054   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1153055   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1153056   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1153057   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1153058   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1153059   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1153060   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1153061   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1153062   +END;
MPRINT(EM_DIAGRAM):   END;
1153063   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1153064   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1153065   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1153066   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1153067   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1153068   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1153069   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1153070   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1153071   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1153072   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1153073   +   H11  =     0.87660114046125 * S_Income  +     -0.7994451897827 * S_Kidhome
1153074   +          +    -0.08967295716195 * S_MntFishProducts
1153075   +          +     0.03184635437516 * S_MntFruits  +    -0.13860895575438 *
1153076   +        S_MntGoldProds  +     0.55790460748169 * S_MntMeatProducts
1153077   +          +    -0.02806094557115 * S_MntSweetProducts
1153078   +          +    -0.14537763592724 * S_MntWines  +     0.76891266523847 *
1153079   +        S_NumCatalogPurchases  +     0.16842007461305 * S_NumDealsPurchases
1153080   +          +     0.25137876058262 * S_NumStorePurchases
1153081   +          +    -0.07865442401292 * S_NumWebPurchases
1153082   +          +     1.03197398967259 * S_NumWebVisitsMonth
1153083   +          +    -1.26907156503759 * S_Recency  +    -0.76016893316351 *
1153084   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.87660114046125 * S_Income + -0.7994451897827 * S_Kidhome +
-0.08967295716195 * S_MntFishProducts + 0.03184635437516 * S_MntFruits + -0.13860895575438 *
S_MntGoldProds + 0.55790460748169 * S_MntMeatProducts + -0.02806094557115 * S_MntSweetProducts
+ -0.14537763592724 * S_MntWines + 0.76891266523847 * S_NumCatalogPurchases + 0.16842007461305
* S_NumDealsPurchases + 0.25137876058262 * S_NumStorePurchases + -0.07865442401292 *
S_NumWebPurchases + 1.03197398967259 * S_NumWebVisitsMonth + -1.26907156503759 * S_Recency +
-0.76016893316351 * S_Teenhome ;
1153085   +   H12  =     0.37295000114468 * S_Income  +    -0.12834211496575 * S_Kidhome
1153086   +          +     0.19312392388912 * S_MntFishProducts
1153087   +          +      0.1561688289137 * S_MntFruits  +     0.04004810938796 *
1153088   +        S_MntGoldProds  +     0.32599201739588 * S_MntMeatProducts
1153089   +          +       0.204174263605 * S_MntSweetProducts
1153090   +          +    -0.11560784817014 * S_MntWines  +     0.12255073568725 *
1153091   +        S_NumCatalogPurchases  +    -0.05543734180218 * S_NumDealsPurchases
1153092   +          +     0.07747830335769 * S_NumStorePurchases
1153093   +          +     0.07960837555191 * S_NumWebPurchases
1153094   +          +     0.02351602389122 * S_NumWebVisitsMonth
1153095   +          +     -0.2840853952427 * S_Recency  +    -0.47421627761687 *
1153096   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = 0.37295000114468 * S_Income + -0.12834211496575 * S_Kidhome +
0.19312392388912 * S_MntFishProducts + 0.1561688289137 * S_MntFruits + 0.04004810938796 *
S_MntGoldProds + 0.32599201739588 * S_MntMeatProducts + 0.204174263605 * S_MntSweetProducts +
-0.11560784817014 * S_MntWines + 0.12255073568725 * S_NumCatalogPurchases + -0.05543734180218
* S_NumDealsPurchases + 0.07747830335769 * S_NumStorePurchases + 0.07960837555191 *
S_NumWebPurchases + 0.02351602389122 * S_NumWebVisitsMonth + -0.2840853952427 * S_Recency +
-0.47421627761687 * S_Teenhome ;
1153097   +   H13  =    -0.33428925248315 * S_Income  +    -0.03845622730742 * S_Kidhome
1153098   +          +     0.18733919794636 * S_MntFishProducts
1153099   +          +     0.45907982190052 * S_MntFruits  +    -0.48776616433719 *
1153100   +        S_MntGoldProds  +    -0.41340481007204 * S_MntMeatProducts
1153101   +          +     0.42514606159239 * S_MntSweetProducts
1153102   +          +     0.20038001368787 * S_MntWines  +    -1.21708501803782 *
1153103   +        S_NumCatalogPurchases  +    -1.06820061274533 * S_NumDealsPurchases
1153104   +          +     0.36582106462789 * S_NumStorePurchases
1153105   +          +     0.04244777020435 * S_NumWebPurchases
1153106   +          +    -0.24296342902503 * S_NumWebVisitsMonth
1153107   +          +     0.27451716762947 * S_Recency  +     0.13110477325277 *
1153108   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = -0.33428925248315 * S_Income + -0.03845622730742 * S_Kidhome +
0.18733919794636 * S_MntFishProducts + 0.45907982190052 * S_MntFruits + -0.48776616433719 *
S_MntGoldProds + -0.41340481007204 * S_MntMeatProducts + 0.42514606159239 * S_MntSweetProducts
+ 0.20038001368787 * S_MntWines + -1.21708501803782 * S_NumCatalogPurchases +
-1.06820061274533 * S_NumDealsPurchases + 0.36582106462789 * S_NumStorePurchases +
0.04244777020435 * S_NumWebPurchases + -0.24296342902503 * S_NumWebVisitsMonth +
0.27451716762947 * S_Recency + 0.13110477325277 * S_Teenhome ;
1153109   +   H14  =    -0.70493412542585 * S_Income  +     0.41202796606799 * S_Kidhome
1153110   +          +     0.05986489897572 * S_MntFishProducts
1153111   +          +    -0.05040531715469 * S_MntFruits  +       0.051068387592 *
1153112   +        S_MntGoldProds  +    -0.13581881662481 * S_MntMeatProducts
1153113   +          +    -0.05513370461072 * S_MntSweetProducts
1153114   +          +     0.77472084468819 * S_MntWines  +    -0.03211788969126 *
1153115   +        S_NumCatalogPurchases  +    -0.24097486430988 * S_NumDealsPurchases
1153116   +          +     0.64364674828841 * S_NumStorePurchases
1153117   +          +     0.15084748708424 * S_NumWebPurchases
1153118   +          +    -0.94144998356377 * S_NumWebVisitsMonth
1153119   +          +     1.16778338364599 * S_Recency  +     0.32089861635238 *
1153120   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = -0.70493412542585 * S_Income + 0.41202796606799 * S_Kidhome +
0.05986489897572 * S_MntFishProducts + -0.05040531715469 * S_MntFruits + 0.051068387592 *
S_MntGoldProds + -0.13581881662481 * S_MntMeatProducts + -0.05513370461072 *
S_MntSweetProducts + 0.77472084468819 * S_MntWines + -0.03211788969126 * S_NumCatalogPurchases
+ -0.24097486430988 * S_NumDealsPurchases + 0.64364674828841 * S_NumStorePurchases +
0.15084748708424 * S_NumWebPurchases + -0.94144998356377 * S_NumWebVisitsMonth +
1.16778338364599 * S_Recency + 0.32089861635238 * S_Teenhome ;
1153121   +   H15  =    -0.15703510827879 * S_Income  +    -0.30977841002562 * S_Kidhome
1153122   +          +    -0.14543196273578 * S_MntFishProducts
1153123   +          +     0.32223695896711 * S_MntFruits  +    -0.31846203211698 *
1153124   +        S_MntGoldProds  +     -1.4125160823105 * S_MntMeatProducts
1153125   +          +     0.49374793444169 * S_MntSweetProducts
1153126   +          +     0.39699716010219 * S_MntWines  +    -0.88140331687645 *
1153127   +        S_NumCatalogPurchases  +    -0.87657222813687 * S_NumDealsPurchases
1153128   +          +     1.23754786782746 * S_NumStorePurchases
1153129   +          +     1.11316667348511 * S_NumWebPurchases
1153130   +          +    -1.08592446439781 * S_NumWebVisitsMonth
1153131   +          +     0.66958517589542 * S_Recency  +     0.06799032788481 *
1153132   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H15 = -0.15703510827879 * S_Income + -0.30977841002562 * S_Kidhome +
-0.14543196273578 * S_MntFishProducts + 0.32223695896711 * S_MntFruits + -0.31846203211698 *
S_MntGoldProds + -1.4125160823105 * S_MntMeatProducts + 0.49374793444169 * S_MntSweetProducts
+ 0.39699716010219 * S_MntWines + -0.88140331687645 * S_NumCatalogPurchases +
-0.87657222813687 * S_NumDealsPurchases + 1.23754786782746 * S_NumStorePurchases +
1.11316667348511 * S_NumWebPurchases + -1.08592446439781 * S_NumWebVisitsMonth +
0.66958517589542 * S_Recency + 0.06799032788481 * S_Teenhome ;
1153133   +   H16  =    -0.10360901553583 * S_Income  +     0.39257497240865 * S_Kidhome
1153134   +          +     0.29549884005341 * S_MntFishProducts
1153135   +          +     0.04922491353914 * S_MntFruits  +     -0.1412659458221 *
1153136   +        S_MntGoldProds  +    -0.12361454534126 * S_MntMeatProducts
1153137   +          +    -0.11909215986981 * S_MntSweetProducts
1153138   +          +     0.11430484977092 * S_MntWines  +    -0.66235553839539 *
1153139   +        S_NumCatalogPurchases  +     0.17261763180198 * S_NumDealsPurchases
1153140   +          +     0.30109334594548 * S_NumStorePurchases
1153141   +          +     0.01985762767489 * S_NumWebPurchases
1153142   +          +     0.44965133281333 * S_NumWebVisitsMonth
1153143   +          +     0.32338634259192 * S_Recency  +    -0.04032956941805 *
1153144   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H16 = -0.10360901553583 * S_Income + 0.39257497240865 * S_Kidhome +
0.29549884005341 * S_MntFishProducts + 0.04922491353914 * S_MntFruits + -0.1412659458221 *
S_MntGoldProds + -0.12361454534126 * S_MntMeatProducts + -0.11909215986981 *
S_MntSweetProducts + 0.11430484977092 * S_MntWines + -0.66235553839539 * S_NumCatalogPurchases
+ 0.17261763180198 * S_NumDealsPurchases + 0.30109334594548 * S_NumStorePurchases +
0.01985762767489 * S_NumWebPurchases + 0.44965133281333 * S_NumWebVisitsMonth +
0.32338634259192 * S_Recency + -0.04032956941805 * S_Teenhome ;
1153145   +   H11  = H11  +    -0.23026310289024 * AcceptedCmp10
1153146   +          +    -0.82550012364234 * AcceptedCmp20  +    -0.67764228269441 *
1153147   +        AcceptedCmp30  +    -0.51547666117685 * AcceptedCmp40
1153148   +          +    -0.36424958084824 * AcceptedCmp50  +       0.119862855783 *
1153149   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.23026310289024 * AcceptedCmp10 + -0.82550012364234 *
AcceptedCmp20 + -0.67764228269441 * AcceptedCmp30 + -0.51547666117685 * AcceptedCmp40 +
-0.36424958084824 * AcceptedCmp50 + 0.119862855783 * Complain0 ;
1153150   +   H12  = H12  +     0.02722288857426 * AcceptedCmp10
1153151   +          +      0.1236576068539 * AcceptedCmp20  +    -0.31265425960737 *
1153152   +        AcceptedCmp30  +    -0.25076565034266 * AcceptedCmp40
1153153   +          +    -0.20158659730872 * AcceptedCmp50  +    -0.43687103612629 *
1153154   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.02722288857426 * AcceptedCmp10 + 0.1236576068539 *
AcceptedCmp20 + -0.31265425960737 * AcceptedCmp30 + -0.25076565034266 * AcceptedCmp40 +
-0.20158659730872 * AcceptedCmp50 + -0.43687103612629 * Complain0 ;
1153155   +   H13  = H13  +     0.21852176280571 * AcceptedCmp10
1153156   +          +     0.01727991436107 * AcceptedCmp20  +     0.19303261094625 *
1153157   +        AcceptedCmp30  +    -0.65492191560509 * AcceptedCmp40
1153158   +          +    -0.09636750660684 * AcceptedCmp50  +     0.07579128571046 *
1153159   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.21852176280571 * AcceptedCmp10 + 0.01727991436107 *
AcceptedCmp20 + 0.19303261094625 * AcceptedCmp30 + -0.65492191560509 * AcceptedCmp40 +
-0.09636750660684 * AcceptedCmp50 + 0.07579128571046 * Complain0 ;
1153160   +   H14  = H14  +     0.20819294353855 * AcceptedCmp10
1153161   +          +      0.5159102831901 * AcceptedCmp20  +     0.55295587458643 *
1153162   +        AcceptedCmp30  +     0.80682431419623 * AcceptedCmp40
1153163   +          +     0.74007057798158 * AcceptedCmp50  +     -0.4573052390807 *
1153164   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.20819294353855 * AcceptedCmp10 + 0.5159102831901 *
AcceptedCmp20 + 0.55295587458643 * AcceptedCmp30 + 0.80682431419623 * AcceptedCmp40 +
0.74007057798158 * AcceptedCmp50 + -0.4573052390807 * Complain0 ;
1153165   +   H15  = H15  +     1.26330939420524 * AcceptedCmp10
1153166   +          +     0.29494505935793 * AcceptedCmp20  +     0.25561322032419 *
1153167   +        AcceptedCmp30  +     0.50102236777897 * AcceptedCmp40
1153168   +          +     0.20696267245027 * AcceptedCmp50  +    -0.00849145233901 *
1153169   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 1.26330939420524 * AcceptedCmp10 + 0.29494505935793 *
AcceptedCmp20 + 0.25561322032419 * AcceptedCmp30 + 0.50102236777897 * AcceptedCmp40 +
0.20696267245027 * AcceptedCmp50 + -0.00849145233901 * Complain0 ;
1153170   +   H16  = H16  +     0.03638428330381 * AcceptedCmp10
1153171   +          +     0.27994215452657 * AcceptedCmp20  +    -0.03861840445025 *
1153172   +        AcceptedCmp30  +      0.3398057347433 * AcceptedCmp40
1153173   +          +    -0.00738335957724 * AcceptedCmp50  +      0.0447804375799 *
1153174   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.03638428330381 * AcceptedCmp10 + 0.27994215452657 *
AcceptedCmp20 + -0.03861840445025 * AcceptedCmp30 + 0.3398057347433 * AcceptedCmp40 +
-0.00738335957724 * AcceptedCmp50 + 0.0447804375799 * Complain0 ;
1153175   +   H11  = H11  +     0.27482405283962 * Education2n_Cycle
1153176   +          +     0.11084012456612 * EducationBasic  +    -0.23835071987159 *
1153177   +        EducationGraduation  +    -0.10167082180552 * EducationMaster
1153178   +          +     0.51015833145636 * Marital_StatusDivorced
1153179   +          +     -1.1653662063616 * Marital_StatusMarried
1153180   +          +     1.19396547750441 * Marital_StatusSingle
1153181   +          +    -0.99605751789992 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.27482405283962 * Education2n_Cycle + 0.11084012456612 *
EducationBasic + -0.23835071987159 * EducationGraduation + -0.10167082180552 * EducationMaster
+ 0.51015833145636 * Marital_StatusDivorced + -1.1653662063616 * Marital_StatusMarried +
1.19396547750441 * Marital_StatusSingle + -0.99605751789992 * Marital_StatusTogether ;
1153182   +   H12  = H12  +    -0.05268347704739 * Education2n_Cycle
1153183   +          +     0.19362065968028 * EducationBasic  +    -0.26784257195414 *
1153184   +        EducationGraduation  +     0.16650577465959 * EducationMaster
1153185   +          +     0.09154288513995 * Marital_StatusDivorced
1153186   +          +     0.06725684628382 * Marital_StatusMarried
1153187   +          +     0.11327659191494 * Marital_StatusSingle
1153188   +          +     0.01793778876811 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.05268347704739 * Education2n_Cycle + 0.19362065968028 *
EducationBasic + -0.26784257195414 * EducationGraduation + 0.16650577465959 * EducationMaster
+ 0.09154288513995 * Marital_StatusDivorced + 0.06725684628382 * Marital_StatusMarried +
0.11327659191494 * Marital_StatusSingle + 0.01793778876811 * Marital_StatusTogether ;
1153189   +   H13  = H13  +     -0.1027084329077 * Education2n_Cycle
1153190   +          +    -0.01342449140757 * EducationBasic  +    -0.35627920427273 *
1153191   +        EducationGraduation  +    -0.05554656531793 * EducationMaster
1153192   +          +     0.37591653615852 * Marital_StatusDivorced
1153193   +          +    -0.05024236790132 * Marital_StatusMarried
1153194   +          +    -0.28317154997144 * Marital_StatusSingle
1153195   +          +    -0.19247490223101 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.1027084329077 * Education2n_Cycle + -0.01342449140757 *
EducationBasic + -0.35627920427273 * EducationGraduation + -0.05554656531793 * EducationMaster
+ 0.37591653615852 * Marital_StatusDivorced + -0.05024236790132 * Marital_StatusMarried +
-0.28317154997144 * Marital_StatusSingle + -0.19247490223101 * Marital_StatusTogether ;
1153196   +   H14  = H14  +     -0.4162491480577 * Education2n_Cycle
1153197   +          +     0.38075572764074 * EducationBasic  +    -0.28169469529121 *
1153198   +        EducationGraduation  +       0.638986138084 * EducationMaster
1153199   +          +    -0.44885292450558 * Marital_StatusDivorced
1153200   +          +     0.78958791519299 * Marital_StatusMarried
1153201   +          +    -0.09688714431356 * Marital_StatusSingle
1153202   +          +     0.84239030196202 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.4162491480577 * Education2n_Cycle + 0.38075572764074 *
EducationBasic + -0.28169469529121 * EducationGraduation + 0.638986138084 * EducationMaster +
-0.44885292450558 * Marital_StatusDivorced + 0.78958791519299 * Marital_StatusMarried +
-0.09688714431356 * Marital_StatusSingle + 0.84239030196202 * Marital_StatusTogether ;
1153203   +   H15  = H15  +     0.33126657974568 * Education2n_Cycle
1153204   +          +     0.44539039262703 * EducationBasic  +    -0.09154902903865 *
1153205   +        EducationGraduation  +    -0.26400363440725 * EducationMaster
1153206   +          +    -0.30801073895989 * Marital_StatusDivorced
1153207   +          +     -0.1285150749223 * Marital_StatusMarried
1153208   +          +     0.06775542164414 * Marital_StatusSingle
1153209   +          +    -0.13032366945766 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.33126657974568 * Education2n_Cycle + 0.44539039262703 *
EducationBasic + -0.09154902903865 * EducationGraduation + -0.26400363440725 * EducationMaster
+ -0.30801073895989 * Marital_StatusDivorced + -0.1285150749223 * Marital_StatusMarried +
0.06775542164414 * Marital_StatusSingle + -0.13032366945766 * Marital_StatusTogether ;
1153210   +   H16  = H16  +     0.02030175222681 * Education2n_Cycle
1153211   +          +    -0.19579401096879 * EducationBasic  +      0.2070703930869 *
1153212   +        EducationGraduation  +    -0.40706983167068 * EducationMaster
1153213   +          +     0.22193599090368 * Marital_StatusDivorced
1153214   +          +    -0.54544672042168 * Marital_StatusMarried
1153215   +          +    -0.02237436019864 * Marital_StatusSingle
1153216   +          +    -0.21979468164854 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.02030175222681 * Education2n_Cycle + -0.19579401096879 *
EducationBasic + 0.2070703930869 * EducationGraduation + -0.40706983167068 * EducationMaster +
0.22193599090368 * Marital_StatusDivorced + -0.54544672042168 * Marital_StatusMarried +
-0.02237436019864 * Marital_StatusSingle + -0.21979468164854 * Marital_StatusTogether ;
1153217   +   H11  =    -1.24550293901788 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -1.24550293901788 + H11 ;
1153218   +   H12  =     0.36762263942809 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.36762263942809 + H12 ;
1153219   +   H13  =     0.07010867577103 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = 0.07010867577103 + H13 ;
1153220   +   H14  =    -1.94014549272156 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = -1.94014549272156 + H14 ;
1153221   +   H15  =     0.17666656180153 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = 0.17666656180153 + H15 ;
1153222   +   H16  =    -1.64626406576709 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = -1.64626406576709 + H16 ;
1153223   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1153224   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1153225   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1153226   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1153227   +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
1153228   +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
1153229   +END;
MPRINT(EM_DIAGRAM):   END;
1153230   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1153231   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1153232   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1153233   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1153234   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1153235   +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
1153236   +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
1153237   +END;
MPRINT(EM_DIAGRAM):   END;
1153238   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1153239   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1153240   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1153241   +
1153242   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1153243   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1153244   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1153245   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1153246   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1153247   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1153248   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1153249   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1153250   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1153251   +end;
MPRINT(EM_DIAGRAM):   end;
1153252   +else do;
MPRINT(EM_DIAGRAM):   else do;
1153253   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1153254   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1153255   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1153256   +   end;
MPRINT(EM_DIAGRAM):   end;
1153257   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1153258   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1153259   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1153260   +   end;
MPRINT(EM_DIAGRAM):   end;
1153261   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1153262   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1153263   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1153264   +   end;
MPRINT(EM_DIAGRAM):   end;
1153265   +end;
MPRINT(EM_DIAGRAM):   end;
1153266   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1153267   +   P_DepVar1  =     4.21126046696691 * H11  +      0.6565061288056 * H12
1153268   +          +    -1.92484011508628 * H13  +    -3.74020722142387 * H14
1153269   +          +    -3.27353026762143 * H15  +     -1.2596922869974 * H16 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 4.21126046696691 * H11 + 0.6565061288056 * H12 +
-1.92484011508628 * H13 + -3.74020722142387 * H14 + -3.27353026762143 * H15 + -1.2596922869974
* H16 ;
1153270   +   P_DepVar1  =    -1.36806658950323 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.36806658950323 + P_DepVar1 ;
1153271   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1153272   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1153273   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1153274   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1153275   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1153276   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1153277   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1153278   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1153279   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1153280   +END;
MPRINT(EM_DIAGRAM):   END;
1153281   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1153282   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1153283   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1153284   +END;
MPRINT(EM_DIAGRAM):   END;
1153285   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1153286   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1153287   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1153288   +END;
MPRINT(EM_DIAGRAM):   END;
1153289   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1153290   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1153291   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1153292   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1153293   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1153294   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1153295   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1153296   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1153297   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1153298   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1153299   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1153300   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1153301   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1153302   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1153303   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1153304   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1153305   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1153306   +END;
MPRINT(EM_DIAGRAM):   END;
1153307   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1153308   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1153309   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1153310   +drop
1153311   +H11
1153312   +H12
1153313   +H13
1153314   +H14
1153315   +H15
1153316   +H16
1153317   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 ;
1153318   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1153319   +* Renaming variables for Neural35;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural35;
1153320   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1153321   +* Renaming Posterior variables for Neural35;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural35;
1153322   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1153323   +drop Neural35_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural35_P_DepVar1;
1153324   +Neural35_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural35_P_DepVar1 = P_DepVar1;
1153325   +drop Neural35_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural35_P_DepVar0;
1153326   +Neural35_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural35_P_DepVar0 = P_DepVar0;
1153327   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1153328   +* Renaming _WARN_ variable for Neural35;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural35;
1153329   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1153330   +length Neural35_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural35_WARN_ $4;
1153331   +drop Neural35_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural35_WARN_;
1153332   +Neural35_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural35_WARN_ = _WARN_;
1153333   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1153334   +* Ensmbl9: Scoring Code of model 9 of 10;
MPRINT(EM_DIAGRAM):   * Ensmbl9: Scoring Code of model 9 of 10;
1153335   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1153336   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1153337   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
1153338   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1153339   +* NODE: Neural30;
MPRINT(EM_DIAGRAM):   * NODE: Neural30;
1153340   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1153341   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1153342   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1153343   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1153344   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1153345   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1153346   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1153347   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1153348   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1153349   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1153350   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1153351   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1153352   +LENGTH _WARN_ $4
1153353   +      F_DepVar  $ 12
1153354   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1153355   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1153356   +
1153357   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1153358   +
1153359   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1153360   +
1153361   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1153362   +
1153363   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1153364   +
1153365   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1153366   +
1153367   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1153368   +
1153369   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1153370   +
1153371   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1153372   +
1153373   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1153374   +
1153375   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1153376   +
1153377   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1153378   +
1153379   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1153380   +
1153381   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1153382   +
1153383   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1153384   +
1153385   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1153386   +
1153387   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1153388   +
1153389   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1153390   +
1153391   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1153392   +
1153393   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1153394   +
1153395   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1153396   +
1153397   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1153398   +
1153399   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1153400   +
1153401   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1153402   +
1153403   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1153404   +
1153405   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1153406   +
1153407   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1153408   +
1153409   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1153410   +
1153411   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1153412   +
1153413   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1153414   +
1153415   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1153416   +
1153417   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1153418   +
1153419   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1153420   +
1153421   +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
1153422   +
1153423   +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
1153424   +
1153425   +      label H17 = 'Hidden: H1=7' ;
MPRINT(EM_DIAGRAM):   label H17 = 'Hidden: H1=7' ;
1153426   +
1153427   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1153428   +
1153429   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1153430   +
1153431   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1153432   +
1153433   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1153434   +
1153435   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1153436   +
1153437   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1153438   +
1153439   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1153440   +
1153441   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1153442   +
1153443   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1153444   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1153445   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1153446   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1153447   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1153448   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1153449   +end;
MPRINT(EM_DIAGRAM):   end;
1153450   +else do;
MPRINT(EM_DIAGRAM):   else do;
1153451   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1153452   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1153453   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1153454   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1153455   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1153456   +   end;
MPRINT(EM_DIAGRAM):   end;
1153457   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1153458   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1153459   +   end;
MPRINT(EM_DIAGRAM):   end;
1153460   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1153461   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1153462   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1153463   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1153464   +   end;
MPRINT(EM_DIAGRAM):   end;
1153465   +end;
MPRINT(EM_DIAGRAM):   end;
1153466   +
1153467   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1153468   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1153469   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1153470   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1153471   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1153472   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1153473   +end;
MPRINT(EM_DIAGRAM):   end;
1153474   +else do;
MPRINT(EM_DIAGRAM):   else do;
1153475   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1153476   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1153477   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1153478   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1153479   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1153480   +   end;
MPRINT(EM_DIAGRAM):   end;
1153481   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1153482   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1153483   +   end;
MPRINT(EM_DIAGRAM):   end;
1153484   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1153485   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1153486   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1153487   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1153488   +   end;
MPRINT(EM_DIAGRAM):   end;
1153489   +end;
MPRINT(EM_DIAGRAM):   end;
1153490   +
1153491   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1153492   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1153493   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1153494   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1153495   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1153496   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1153497   +end;
MPRINT(EM_DIAGRAM):   end;
1153498   +else do;
MPRINT(EM_DIAGRAM):   else do;
1153499   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1153500   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1153501   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1153502   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1153503   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1153504   +   end;
MPRINT(EM_DIAGRAM):   end;
1153505   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1153506   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1153507   +   end;
MPRINT(EM_DIAGRAM):   end;
1153508   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1153509   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1153510   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1153511   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1153512   +   end;
MPRINT(EM_DIAGRAM):   end;
1153513   +end;
MPRINT(EM_DIAGRAM):   end;
1153514   +
1153515   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1153516   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1153517   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1153518   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1153519   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1153520   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1153521   +end;
MPRINT(EM_DIAGRAM):   end;
1153522   +else do;
MPRINT(EM_DIAGRAM):   else do;
1153523   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1153524   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1153525   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1153526   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1153527   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1153528   +   end;
MPRINT(EM_DIAGRAM):   end;
1153529   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1153530   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1153531   +   end;
MPRINT(EM_DIAGRAM):   end;
1153532   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1153533   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1153534   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1153535   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1153536   +   end;
MPRINT(EM_DIAGRAM):   end;
1153537   +end;
MPRINT(EM_DIAGRAM):   end;
1153538   +
1153539   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1153540   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1153541   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1153542   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1153543   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1153544   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1153545   +end;
MPRINT(EM_DIAGRAM):   end;
1153546   +else do;
MPRINT(EM_DIAGRAM):   else do;
1153547   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1153548   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1153549   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1153550   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1153551   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1153552   +   end;
MPRINT(EM_DIAGRAM):   end;
1153553   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1153554   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1153555   +   end;
MPRINT(EM_DIAGRAM):   end;
1153556   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1153557   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1153558   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1153559   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1153560   +   end;
MPRINT(EM_DIAGRAM):   end;
1153561   +end;
MPRINT(EM_DIAGRAM):   end;
1153562   +
1153563   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1153564   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1153565   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1153566   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1153567   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1153568   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1153569   +end;
MPRINT(EM_DIAGRAM):   end;
1153570   +else do;
MPRINT(EM_DIAGRAM):   else do;
1153571   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1153572   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1153573   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1153574   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1153575   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1153576   +   end;
MPRINT(EM_DIAGRAM):   end;
1153577   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1153578   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1153579   +   end;
MPRINT(EM_DIAGRAM):   end;
1153580   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1153581   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1153582   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1153583   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1153584   +   end;
MPRINT(EM_DIAGRAM):   end;
1153585   +end;
MPRINT(EM_DIAGRAM):   end;
1153586   +
1153587   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1153588   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
1153589   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1153590   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1153591   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1153592   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1153593   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1153594   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1153595   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1153596   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1153597   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1153598   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1153599   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1153600   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1153601   +end;
MPRINT(EM_DIAGRAM):   end;
1153602   +else do;
MPRINT(EM_DIAGRAM):   else do;
1153603   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1153604   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1153605   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1153606   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1153607   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1153608   +   end;
MPRINT(EM_DIAGRAM):   end;
1153609   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1153610   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1153611   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1153612   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1153613   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1153614   +   end;
MPRINT(EM_DIAGRAM):   end;
1153615   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1153616   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1153617   +   end;
MPRINT(EM_DIAGRAM):   end;
1153618   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1153619   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1153620   +   end;
MPRINT(EM_DIAGRAM):   end;
1153621   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1153622   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1153623   +   end;
MPRINT(EM_DIAGRAM):   end;
1153624   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1153625   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1153626   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1153627   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1153628   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1153629   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1153630   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1153631   +   end;
MPRINT(EM_DIAGRAM):   end;
1153632   +end;
MPRINT(EM_DIAGRAM):   end;
1153633   +
1153634   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1153635   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1153636   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
1153637   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1153638   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1153639   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1153640   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1153641   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1153642   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1153643   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1153644   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1153645   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1153646   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1153647   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1153648   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1153649   +end;
MPRINT(EM_DIAGRAM):   end;
1153650   +else do;
MPRINT(EM_DIAGRAM):   else do;
1153651   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1153652   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1153653   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1153654   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1153655   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1153656   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1153657   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1153658   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1153659   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1153660   +         end;
MPRINT(EM_DIAGRAM):   end;
1153661   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1153662   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1153663   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1153664   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1153665   +            end;
MPRINT(EM_DIAGRAM):   end;
1153666   +         end;
MPRINT(EM_DIAGRAM):   end;
1153667   +      end;
MPRINT(EM_DIAGRAM):   end;
1153668   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1153669   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1153670   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1153671   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1153672   +         end;
MPRINT(EM_DIAGRAM):   end;
1153673   +      end;
MPRINT(EM_DIAGRAM):   end;
1153674   +   end;
MPRINT(EM_DIAGRAM):   end;
1153675   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1153676   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1153677   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1153678   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1153679   +      end;
MPRINT(EM_DIAGRAM):   end;
1153680   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1153681   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1153682   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1153683   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1153684   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1153685   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1153686   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1153687   +         end;
MPRINT(EM_DIAGRAM):   end;
1153688   +      end;
MPRINT(EM_DIAGRAM):   end;
1153689   +   end;
MPRINT(EM_DIAGRAM):   end;
1153690   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1153691   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1153692   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1153693   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1153694   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1153695   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1153696   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1153697   +   end;
MPRINT(EM_DIAGRAM):   end;
1153698   +end;
MPRINT(EM_DIAGRAM):   end;
1153699   +
1153700   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1153701   +*** Checking missing input Interval
1153702   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1153703   +
1153704   +IF NMISS(
1153705   +   Income ,
1153706   +   Kidhome ,
1153707   +   MntFishProducts ,
1153708   +   MntFruits ,
1153709   +   MntGoldProds ,
1153710   +   MntMeatProducts ,
1153711   +   MntSweetProducts ,
1153712   +   MntWines ,
1153713   +   NumCatalogPurchases ,
1153714   +   NumDealsPurchases ,
1153715   +   NumStorePurchases ,
1153716   +   NumWebPurchases ,
1153717   +   NumWebVisitsMonth ,
1153718   +   Recency ,
1153719   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Income , Kidhome , MntFishProducts , MntFruits , MntGoldProds
, MntMeatProducts , MntSweetProducts , MntWines , NumCatalogPurchases , NumDealsPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , Recency , Teenhome ) THEN DO;
1153720   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1153721   +
1153722   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1153723   +END;
MPRINT(EM_DIAGRAM):   END;
1153724   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1153725   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1153726   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1153727   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1153728   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1153729   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1153730   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1153731   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1153732   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1153733   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1153734   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1153735   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1153736   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1153737   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1153738   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1153739   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1153740   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1153741   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1153742   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1153743   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1153744   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1153745   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1153746   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1153747   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1153748   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1153749   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1153750   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1153751   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1153752   +END;
MPRINT(EM_DIAGRAM):   END;
1153753   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1153754   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1153755   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1153756   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1153757   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1153758   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1153759   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1153760   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1153761   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1153762   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1153763   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1153764   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1153765   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1153766   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
1153767   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1153768   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1153769   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1153770   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1153771   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1153772   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1153773   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1153774   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1153775   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1153776   +   ELSE S_NumCatalogPurchases
1153777   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1153778   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1153779   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1153780   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1153781   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1153782   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1153783   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1153784   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1153785   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1153786   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1153787   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1153788   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1153789   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1153790   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1153791   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1153792   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1153793   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1153794   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1153795   +END;
MPRINT(EM_DIAGRAM):   END;
1153796   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1153797   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1153798   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1153799   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1153800   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1153801   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1153802   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1153803   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1153804   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1153805   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1153806   +   H11  =    -0.59781928082243 * S_Income  +     0.49830142312288 * S_Kidhome
1153807   +          +    -0.00045024466632 * S_MntFishProducts
1153808   +          +    -0.22421712710333 * S_MntFruits  +    -0.19010144853469 *
1153809   +        S_MntGoldProds  +    -0.53373773623953 * S_MntMeatProducts
1153810   +          +     0.17506402203495 * S_MntSweetProducts
1153811   +          +    -0.28551398649672 * S_MntWines  +       0.019870944777 *
1153812   +        S_NumCatalogPurchases  +     0.03537776181533 * S_NumDealsPurchases
1153813   +          +     0.05580468715403 * S_NumStorePurchases
1153814   +          +    -0.29131611132704 * S_NumWebPurchases
1153815   +          +    -0.40690084025802 * S_NumWebVisitsMonth
1153816   +          +     0.48640195058901 * S_Recency  +     0.31820890239661 *
1153817   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = -0.59781928082243 * S_Income + 0.49830142312288 * S_Kidhome +
-0.00045024466632 * S_MntFishProducts + -0.22421712710333 * S_MntFruits + -0.19010144853469 *
S_MntGoldProds + -0.53373773623953 * S_MntMeatProducts + 0.17506402203495 * S_MntSweetProducts
+ -0.28551398649672 * S_MntWines + 0.019870944777 * S_NumCatalogPurchases + 0.03537776181533 *
S_NumDealsPurchases + 0.05580468715403 * S_NumStorePurchases + -0.29131611132704 *
S_NumWebPurchases + -0.40690084025802 * S_NumWebVisitsMonth + 0.48640195058901 * S_Recency +
0.31820890239661 * S_Teenhome ;
1153818   +   H12  =    -0.41871753512335 * S_Income  +      0.6025072461821 * S_Kidhome
1153819   +          +    -0.03132724937716 * S_MntFishProducts
1153820   +          +     0.19114182835046 * S_MntFruits  +     0.13483463809539 *
1153821   +        S_MntGoldProds  +    -0.63593603749443 * S_MntMeatProducts
1153822   +          +    -0.07569302401223 * S_MntSweetProducts
1153823   +          +     0.67050112032753 * S_MntWines  +    -0.23159243932208 *
1153824   +        S_NumCatalogPurchases  +    -0.07183698407409 * S_NumDealsPurchases
1153825   +          +     0.54619681114623 * S_NumStorePurchases
1153826   +          +     0.44325129671249 * S_NumWebPurchases
1153827   +          +    -1.25054401670605 * S_NumWebVisitsMonth
1153828   +          +      1.2376290916151 * S_Recency  +     0.43747371517287 *
1153829   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -0.41871753512335 * S_Income + 0.6025072461821 * S_Kidhome +
-0.03132724937716 * S_MntFishProducts + 0.19114182835046 * S_MntFruits + 0.13483463809539 *
S_MntGoldProds + -0.63593603749443 * S_MntMeatProducts + -0.07569302401223 *
S_MntSweetProducts + 0.67050112032753 * S_MntWines + -0.23159243932208 * S_NumCatalogPurchases
+ -0.07183698407409 * S_NumDealsPurchases + 0.54619681114623 * S_NumStorePurchases +
0.44325129671249 * S_NumWebPurchases + -1.25054401670605 * S_NumWebVisitsMonth +
1.2376290916151 * S_Recency + 0.43747371517287 * S_Teenhome ;
1153830   +   H13  =      0.0713579189325 * S_Income  +    -0.05759612462349 * S_Kidhome
1153831   +          +     0.07631777381832 * S_MntFishProducts
1153832   +          +    -0.00387785552441 * S_MntFruits  +    -0.21868916314192 *
1153833   +        S_MntGoldProds  +       0.072623883197 * S_MntMeatProducts
1153834   +          +     0.12637946833766 * S_MntSweetProducts
1153835   +          +    -0.37981663841124 * S_MntWines  +    -0.89958525403162 *
1153836   +        S_NumCatalogPurchases  +    -0.17471885937598 * S_NumDealsPurchases
1153837   +          +     0.15845618359126 * S_NumStorePurchases
1153838   +          +    -0.33296932705082 * S_NumWebPurchases
1153839   +          +      0.0260072296349 * S_NumWebVisitsMonth
1153840   +          +     0.02544749712977 * S_Recency  +    -0.17381561661022 *
1153841   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = 0.0713579189325 * S_Income + -0.05759612462349 * S_Kidhome +
0.07631777381832 * S_MntFishProducts + -0.00387785552441 * S_MntFruits + -0.21868916314192 *
S_MntGoldProds + 0.072623883197 * S_MntMeatProducts + 0.12637946833766 * S_MntSweetProducts +
-0.37981663841124 * S_MntWines + -0.89958525403162 * S_NumCatalogPurchases + -0.17471885937598
* S_NumDealsPurchases + 0.15845618359126 * S_NumStorePurchases + -0.33296932705082 *
S_NumWebPurchases + 0.0260072296349 * S_NumWebVisitsMonth + 0.02544749712977 * S_Recency +
-0.17381561661022 * S_Teenhome ;
1153842   +   H14  =    -0.47498613710851 * S_Income  +     0.09339198401437 * S_Kidhome
1153843   +          +    -0.13642352619174 * S_MntFishProducts
1153844   +          +     0.27167245582117 * S_MntFruits  +    -0.00579747559996 *
1153845   +        S_MntGoldProds  +     0.31591387319577 * S_MntMeatProducts
1153846   +          +     0.14125815807238 * S_MntSweetProducts
1153847   +          +     0.07862916790983 * S_MntWines  +    -0.58905358997534 *
1153848   +        S_NumCatalogPurchases  +     -0.5574069633995 * S_NumDealsPurchases
1153849   +          +     0.19718828261526 * S_NumStorePurchases
1153850   +          +    -0.24156925391919 * S_NumWebPurchases
1153851   +          +    -0.25711078938749 * S_NumWebVisitsMonth
1153852   +          +     0.38883063223812 * S_Recency  +     -0.2396731334184 *
1153853   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = -0.47498613710851 * S_Income + 0.09339198401437 * S_Kidhome +
-0.13642352619174 * S_MntFishProducts + 0.27167245582117 * S_MntFruits + -0.00579747559996 *
S_MntGoldProds + 0.31591387319577 * S_MntMeatProducts + 0.14125815807238 * S_MntSweetProducts
+ 0.07862916790983 * S_MntWines + -0.58905358997534 * S_NumCatalogPurchases + -0.5574069633995
* S_NumDealsPurchases + 0.19718828261526 * S_NumStorePurchases + -0.24156925391919 *
S_NumWebPurchases + -0.25711078938749 * S_NumWebVisitsMonth + 0.38883063223812 * S_Recency +
-0.2396731334184 * S_Teenhome ;
1153854   +   H15  =     0.24624924979609 * S_Income  +    -0.37052106312109 * S_Kidhome
1153855   +          +     0.13579628643404 * S_MntFishProducts
1153856   +          +    -0.05263868911164 * S_MntFruits  +    -0.01504675049991 *
1153857   +        S_MntGoldProds  +     -0.4202277804998 * S_MntMeatProducts
1153858   +          +    -0.01039299374426 * S_MntSweetProducts
1153859   +          +     0.71197420459135 * S_MntWines  +    -0.35973505575029 *
1153860   +        S_NumCatalogPurchases  +     -0.4415445481482 * S_NumDealsPurchases
1153861   +          +     0.58897740652611 * S_NumStorePurchases
1153862   +          +     0.24564485851062 * S_NumWebPurchases
1153863   +          +    -0.13976320243555 * S_NumWebVisitsMonth
1153864   +          +      0.1199367613063 * S_Recency  +    -0.15283161418313 *
1153865   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H15 = 0.24624924979609 * S_Income + -0.37052106312109 * S_Kidhome +
0.13579628643404 * S_MntFishProducts + -0.05263868911164 * S_MntFruits + -0.01504675049991 *
S_MntGoldProds + -0.4202277804998 * S_MntMeatProducts + -0.01039299374426 * S_MntSweetProducts
+ 0.71197420459135 * S_MntWines + -0.35973505575029 * S_NumCatalogPurchases + -0.4415445481482
* S_NumDealsPurchases + 0.58897740652611 * S_NumStorePurchases + 0.24564485851062 *
S_NumWebPurchases + -0.13976320243555 * S_NumWebVisitsMonth + 0.1199367613063 * S_Recency +
-0.15283161418313 * S_Teenhome ;
1153866   +   H16  =     0.23493799758749 * S_Income  +     0.07038278079069 * S_Kidhome
1153867   +          +    -0.45448768538367 * S_MntFishProducts
1153868   +          +     0.02622380709004 * S_MntFruits  +     0.14726698184115 *
1153869   +        S_MntGoldProds  +     0.65760183569767 * S_MntMeatProducts
1153870   +          +    -0.16936256277023 * S_MntSweetProducts
1153871   +          +    -0.40647066866305 * S_MntWines  +     0.99645493491726 *
1153872   +        S_NumCatalogPurchases  +     0.65587239961358 * S_NumDealsPurchases
1153873   +          +    -0.22309716855774 * S_NumStorePurchases
1153874   +          +    -0.61204529910842 * S_NumWebPurchases
1153875   +          +     0.43742228867615 * S_NumWebVisitsMonth
1153876   +          +    -0.56099034256092 * S_Recency  +     -0.2445351671148 *
1153877   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H16 = 0.23493799758749 * S_Income + 0.07038278079069 * S_Kidhome +
-0.45448768538367 * S_MntFishProducts + 0.02622380709004 * S_MntFruits + 0.14726698184115 *
S_MntGoldProds + 0.65760183569767 * S_MntMeatProducts + -0.16936256277023 * S_MntSweetProducts
+ -0.40647066866305 * S_MntWines + 0.99645493491726 * S_NumCatalogPurchases + 0.65587239961358
* S_NumDealsPurchases + -0.22309716855774 * S_NumStorePurchases + -0.61204529910842 *
S_NumWebPurchases + 0.43742228867615 * S_NumWebVisitsMonth + -0.56099034256092 * S_Recency +
-0.2445351671148 * S_Teenhome ;
1153878   +   H17  =    -0.00107702057163 * S_Income  +     0.25116135719972 * S_Kidhome
1153879   +          +    -0.04540308470858 * S_MntFishProducts
1153880   +          +        0.21487241577 * S_MntFruits  +    -0.12914913547414 *
1153881   +        S_MntGoldProds  +    -0.04149021191395 * S_MntMeatProducts
1153882   +          +     0.02853521979141 * S_MntSweetProducts
1153883   +          +     -0.2435805887418 * S_MntWines  +    -0.04509621661407 *
1153884   +        S_NumCatalogPurchases  +    -0.26492036720429 * S_NumDealsPurchases
1153885   +          +     -0.3299561248944 * S_NumStorePurchases
1153886   +          +    -0.09806597448224 * S_NumWebPurchases
1153887   +          +      0.0427056351245 * S_NumWebVisitsMonth
1153888   +          +     0.03953235628202 * S_Recency  +    -0.11317308767713 *
1153889   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H17 = -0.00107702057163 * S_Income + 0.25116135719972 * S_Kidhome +
-0.04540308470858 * S_MntFishProducts + 0.21487241577 * S_MntFruits + -0.12914913547414 *
S_MntGoldProds + -0.04149021191395 * S_MntMeatProducts + 0.02853521979141 * S_MntSweetProducts
+ -0.2435805887418 * S_MntWines + -0.04509621661407 * S_NumCatalogPurchases +
-0.26492036720429 * S_NumDealsPurchases + -0.3299561248944 * S_NumStorePurchases +
-0.09806597448224 * S_NumWebPurchases + 0.0427056351245 * S_NumWebVisitsMonth +
0.03953235628202 * S_Recency + -0.11317308767713 * S_Teenhome ;
1153890   +   H11  = H11  +     0.50033674561531 * AcceptedCmp10
1153891   +          +    -0.02275693117286 * AcceptedCmp20  +     0.31338891533156 *
1153892   +        AcceptedCmp30  +      0.3901248845706 * AcceptedCmp40
1153893   +          +     0.44314358358111 * AcceptedCmp50  +    -0.20444060864498 *
1153894   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.50033674561531 * AcceptedCmp10 + -0.02275693117286 *
AcceptedCmp20 + 0.31338891533156 * AcceptedCmp30 + 0.3901248845706 * AcceptedCmp40 +
0.44314358358111 * AcceptedCmp50 + -0.20444060864498 * Complain0 ;
1153895   +   H12  = H12  +     0.30103938822692 * AcceptedCmp10
1153896   +          +     0.54298746723422 * AcceptedCmp20  +     0.50401040035525 *
1153897   +        AcceptedCmp30  +     0.43447710825306 * AcceptedCmp40
1153898   +          +     0.60794421030027 * AcceptedCmp50  +    -0.28114274461319 *
1153899   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.30103938822692 * AcceptedCmp10 + 0.54298746723422 *
AcceptedCmp20 + 0.50401040035525 * AcceptedCmp30 + 0.43447710825306 * AcceptedCmp40 +
0.60794421030027 * AcceptedCmp50 + -0.28114274461319 * Complain0 ;
1153900   +   H13  = H13  +     -0.1890212967757 * AcceptedCmp10
1153901   +          +    -0.11487406996391 * AcceptedCmp20  +    -0.22740618754863 *
1153902   +        AcceptedCmp30  +      0.2354510231918 * AcceptedCmp40
1153903   +          +    -0.14327434649067 * AcceptedCmp50  +    -0.17839080850556 *
1153904   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.1890212967757 * AcceptedCmp10 + -0.11487406996391 *
AcceptedCmp20 + -0.22740618754863 * AcceptedCmp30 + 0.2354510231918 * AcceptedCmp40 +
-0.14327434649067 * AcceptedCmp50 + -0.17839080850556 * Complain0 ;
1153905   +   H14  = H14  +    -0.28194187416219 * AcceptedCmp10
1153906   +          +     0.11732089254624 * AcceptedCmp20  +     0.34964075536156 *
1153907   +        AcceptedCmp30  +     0.05772396286169 * AcceptedCmp40
1153908   +          +    -0.08671748651826 * AcceptedCmp50  +      0.0629540108407 *
1153909   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.28194187416219 * AcceptedCmp10 + 0.11732089254624 *
AcceptedCmp20 + 0.34964075536156 * AcceptedCmp30 + 0.05772396286169 * AcceptedCmp40 +
-0.08671748651826 * AcceptedCmp50 + 0.0629540108407 * Complain0 ;
1153910   +   H15  = H15  +    -0.01058257322803 * AcceptedCmp10
1153911   +          +     0.26755355732587 * AcceptedCmp20  +     0.40856661734724 *
1153912   +        AcceptedCmp30  +     0.02977117354989 * AcceptedCmp40
1153913   +          +       0.073655049734 * AcceptedCmp50  +     0.25562048226555 *
1153914   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + -0.01058257322803 * AcceptedCmp10 + 0.26755355732587 *
AcceptedCmp20 + 0.40856661734724 * AcceptedCmp30 + 0.02977117354989 * AcceptedCmp40 +
0.073655049734 * AcceptedCmp50 + 0.25562048226555 * Complain0 ;
1153915   +   H16  = H16  +    -0.65590117532084 * AcceptedCmp10
1153916   +          +    -0.31314161223579 * AcceptedCmp20  +    -0.18863165264573 *
1153917   +        AcceptedCmp30  +    -0.18832338914237 * AcceptedCmp40
1153918   +          +    -0.53765749471786 * AcceptedCmp50  +     0.17409401877513 *
1153919   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H16 = H16 + -0.65590117532084 * AcceptedCmp10 + -0.31314161223579 *
AcceptedCmp20 + -0.18863165264573 * AcceptedCmp30 + -0.18832338914237 * AcceptedCmp40 +
-0.53765749471786 * AcceptedCmp50 + 0.17409401877513 * Complain0 ;
1153920   +   H17  = H17  +    -0.42253231673718 * AcceptedCmp10
1153921   +          +    -0.40954345229557 * AcceptedCmp20  +    -0.30577523080786 *
1153922   +        AcceptedCmp30  +    -0.22396670899437 * AcceptedCmp40
1153923   +          +     0.05757251451004 * AcceptedCmp50  +     0.07813950542487 *
1153924   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H17 = H17 + -0.42253231673718 * AcceptedCmp10 + -0.40954345229557 *
AcceptedCmp20 + -0.30577523080786 * AcceptedCmp30 + -0.22396670899437 * AcceptedCmp40 +
0.05757251451004 * AcceptedCmp50 + 0.07813950542487 * Complain0 ;
1153925   +   H11  = H11  +    -0.14483542022901 * Education2n_Cycle
1153926   +          +     0.32176647745332 * EducationBasic  +     0.00900796305072 *
1153927   +        EducationGraduation  +    -0.00243484910123 * EducationMaster
1153928   +          +    -0.22074132229211 * Marital_StatusDivorced
1153929   +          +     0.70282742634901 * Marital_StatusMarried
1153930   +          +     -0.5926244797961 * Marital_StatusSingle
1153931   +          +     0.21342221410999 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.14483542022901 * Education2n_Cycle + 0.32176647745332 *
EducationBasic + 0.00900796305072 * EducationGraduation + -0.00243484910123 * EducationMaster
+ -0.22074132229211 * Marital_StatusDivorced + 0.70282742634901 * Marital_StatusMarried +
-0.5926244797961 * Marital_StatusSingle + 0.21342221410999 * Marital_StatusTogether ;
1153932   +   H12  = H12  +    -0.10242932200247 * Education2n_Cycle
1153933   +          +     0.34937926721317 * EducationBasic  +    -0.20395479511872 *
1153934   +        EducationGraduation  +     0.31210327899339 * EducationMaster
1153935   +          +    -0.46376392175295 * Marital_StatusDivorced
1153936   +          +       0.589453579718 * Marital_StatusMarried
1153937   +          +    -0.45342174978481 * Marital_StatusSingle
1153938   +          +     0.70517120763557 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.10242932200247 * Education2n_Cycle + 0.34937926721317 *
EducationBasic + -0.20395479511872 * EducationGraduation + 0.31210327899339 * EducationMaster
+ -0.46376392175295 * Marital_StatusDivorced + 0.589453579718 * Marital_StatusMarried +
-0.45342174978481 * Marital_StatusSingle + 0.70517120763557 * Marital_StatusTogether ;
1153939   +   H13  = H13  +     0.24858755570324 * Education2n_Cycle
1153940   +          +     0.07360039359386 * EducationBasic  +    -0.42563056620078 *
1153941   +        EducationGraduation  +    -0.25970840250323 * EducationMaster
1153942   +          +     0.26981972015482 * Marital_StatusDivorced
1153943   +          +    -0.01707364864139 * Marital_StatusMarried
1153944   +          +     0.38646060840009 * Marital_StatusSingle
1153945   +          +     0.19694047086013 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.24858755570324 * Education2n_Cycle + 0.07360039359386 *
EducationBasic + -0.42563056620078 * EducationGraduation + -0.25970840250323 * EducationMaster
+ 0.26981972015482 * Marital_StatusDivorced + -0.01707364864139 * Marital_StatusMarried +
0.38646060840009 * Marital_StatusSingle + 0.19694047086013 * Marital_StatusTogether ;
1153946   +   H14  = H14  +     0.22577522124265 * Education2n_Cycle
1153947   +          +     0.04183136697557 * EducationBasic  +    -0.27725331198825 *
1153948   +        EducationGraduation  +     0.15709188532123 * EducationMaster
1153949   +          +    -0.01933675094701 * Marital_StatusDivorced
1153950   +          +     0.52969577969434 * Marital_StatusMarried
1153951   +          +      -0.348697714569 * Marital_StatusSingle
1153952   +          +      0.5020342481888 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.22577522124265 * Education2n_Cycle + 0.04183136697557 *
EducationBasic + -0.27725331198825 * EducationGraduation + 0.15709188532123 * EducationMaster
+ -0.01933675094701 * Marital_StatusDivorced + 0.52969577969434 * Marital_StatusMarried +
-0.348697714569 * Marital_StatusSingle + 0.5020342481888 * Marital_StatusTogether ;
1153953   +   H15  = H15  +     0.04488332711225 * Education2n_Cycle
1153954   +          +     0.01911097443907 * EducationBasic  +    -0.11699443624996 *
1153955   +        EducationGraduation  +    -0.07291393566738 * EducationMaster
1153956   +          +    -0.04665146013984 * Marital_StatusDivorced
1153957   +          +      -0.586219175167 * Marital_StatusMarried
1153958   +          +     0.55713543417712 * Marital_StatusSingle
1153959   +          +    -0.42208959885332 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.04488332711225 * Education2n_Cycle + 0.01911097443907 *
EducationBasic + -0.11699443624996 * EducationGraduation + -0.07291393566738 * EducationMaster
+ -0.04665146013984 * Marital_StatusDivorced + -0.586219175167 * Marital_StatusMarried +
0.55713543417712 * Marital_StatusSingle + -0.42208959885332 * Marital_StatusTogether ;
1153960   +   H16  = H16  +     0.09174117861154 * Education2n_Cycle
1153961   +          +     -0.1378945860659 * EducationBasic  +     -0.0728635369665 *
1153962   +        EducationGraduation  +     0.29860714824438 * EducationMaster
1153963   +          +    -0.05632171154347 * Marital_StatusDivorced
1153964   +          +     0.03215547861665 * Marital_StatusMarried
1153965   +          +     0.16870781172538 * Marital_StatusSingle
1153966   +          +    -0.04883314322676 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.09174117861154 * Education2n_Cycle + -0.1378945860659 *
EducationBasic + -0.0728635369665 * EducationGraduation + 0.29860714824438 * EducationMaster +
-0.05632171154347 * Marital_StatusDivorced + 0.03215547861665 * Marital_StatusMarried +
0.16870781172538 * Marital_StatusSingle + -0.04883314322676 * Marital_StatusTogether ;
1153967   +   H17  = H17  +    -0.00343694558117 * Education2n_Cycle
1153968   +          +     0.32636427598227 * EducationBasic  +     0.16259654486833 *
1153969   +        EducationGraduation  +    -0.00424229454859 * EducationMaster
1153970   +          +    -0.21765415159355 * Marital_StatusDivorced
1153971   +          +     -0.0542857922075 * Marital_StatusMarried
1153972   +          +     0.20679907454933 * Marital_StatusSingle
1153973   +          +     0.14976519710725 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H17 = H17 + -0.00343694558117 * Education2n_Cycle + 0.32636427598227 *
EducationBasic + 0.16259654486833 * EducationGraduation + -0.00424229454859 * EducationMaster
+ -0.21765415159355 * Marital_StatusDivorced + -0.0542857922075 * Marital_StatusMarried +
0.20679907454933 * Marital_StatusSingle + 0.14976519710725 * Marital_StatusTogether ;
1153974   +   H11  =     0.92977078759503 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 0.92977078759503 + H11 ;
1153975   +   H12  =    -0.97970409253156 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -0.97970409253156 + H12 ;
1153976   +   H13  =     -0.5001144792196 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.5001144792196 + H13 ;
1153977   +   H14  =    -0.90715840862541 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = -0.90715840862541 + H14 ;
1153978   +   H15  =     0.87046153389036 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = 0.87046153389036 + H15 ;
1153979   +   H16  =     0.49066122767086 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = 0.49066122767086 + H16 ;
1153980   +   H17  =    -1.05949763460293 + H17 ;
MPRINT(EM_DIAGRAM):   H17 = -1.05949763460293 + H17 ;
1153981   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1153982   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1153983   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1153984   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1153985   +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
1153986   +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
1153987   +   H17  = TANH(H17 );
MPRINT(EM_DIAGRAM):   H17 = TANH(H17 );
1153988   +END;
MPRINT(EM_DIAGRAM):   END;
1153989   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1153990   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1153991   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1153992   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1153993   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1153994   +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
1153995   +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
1153996   +   H17  = .;
MPRINT(EM_DIAGRAM):   H17 = .;
1153997   +END;
MPRINT(EM_DIAGRAM):   END;
1153998   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1153999   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1154000   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1154001   +
1154002   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1154003   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1154004   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1154005   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1154006   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1154007   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1154008   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1154009   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1154010   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1154011   +end;
MPRINT(EM_DIAGRAM):   end;
1154012   +else do;
MPRINT(EM_DIAGRAM):   else do;
1154013   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1154014   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1154015   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1154016   +   end;
MPRINT(EM_DIAGRAM):   end;
1154017   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1154018   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1154019   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1154020   +   end;
MPRINT(EM_DIAGRAM):   end;
1154021   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1154022   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1154023   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1154024   +   end;
MPRINT(EM_DIAGRAM):   end;
1154025   +end;
MPRINT(EM_DIAGRAM):   end;
1154026   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1154027   +   P_DepVar1  =    -2.32998401250848 * H11  +     -3.2074078511991 * H12
1154028   +          +    -0.69549988605443 * H13  +    -1.74950789108762 * H14
1154029   +          +    -1.74013772071344 * H15  +     2.65306089869015 * H16
1154030   +          +     0.03700459000906 * H17 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.32998401250848 * H11 + -3.2074078511991 * H12 +
-0.69549988605443 * H13 + -1.74950789108762 * H14 + -1.74013772071344 * H15 + 2.65306089869015
* H16 + 0.03700459000906 * H17 ;
1154031   +   P_DepVar1  =    -1.51229898726716 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.51229898726716 + P_DepVar1 ;
1154032   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1154033   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1154034   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1154035   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1154036   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1154037   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1154038   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1154039   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1154040   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1154041   +END;
MPRINT(EM_DIAGRAM):   END;
1154042   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1154043   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1154044   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1154045   +END;
MPRINT(EM_DIAGRAM):   END;
1154046   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1154047   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1154048   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1154049   +END;
MPRINT(EM_DIAGRAM):   END;
1154050   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1154051   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1154052   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1154053   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1154054   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1154055   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1154056   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1154057   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1154058   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1154059   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1154060   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1154061   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1154062   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1154063   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1154064   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1154065   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1154066   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1154067   +END;
MPRINT(EM_DIAGRAM):   END;
1154068   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1154069   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1154070   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1154071   +drop
1154072   +H11
1154073   +H12
1154074   +H13
1154075   +H14
1154076   +H15
1154077   +H16
1154078   +H17
1154079   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 H17 ;
1154080   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1154081   +* Renaming variables for Neural30;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural30;
1154082   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1154083   +* Renaming Posterior variables for Neural30;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural30;
1154084   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1154085   +drop Neural30_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural30_P_DepVar1;
1154086   +Neural30_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural30_P_DepVar1 = P_DepVar1;
1154087   +drop Neural30_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural30_P_DepVar0;
1154088   +Neural30_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural30_P_DepVar0 = P_DepVar0;
1154089   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1154090   +* Renaming _WARN_ variable for Neural30;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural30;
1154091   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1154092   +length Neural30_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural30_WARN_ $4;
1154093   +drop Neural30_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural30_WARN_;
1154094   +Neural30_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural30_WARN_ = _WARN_;
1154095   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1154096   +* Ensmbl9: Scoring Code of model 10 of 10;
MPRINT(EM_DIAGRAM):   * Ensmbl9: Scoring Code of model 10 of 10;
1154097   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1154098   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1154099   +* TOOL: Regression;
MPRINT(EM_DIAGRAM):   * TOOL: Regression;
1154100   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1154101   +* NODE: Reg10;
MPRINT(EM_DIAGRAM):   * NODE: Reg10;
1154102   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1154103   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1154104   +*** begin scoring code for regression;
MPRINT(EM_DIAGRAM):   *** begin scoring code for regression;
1154105   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1154106   +
1154107   +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
1154108   +label _WARN_ = 'Warnings' ;
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings' ;
1154109   +
1154110   +length I_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length I_DepVar $ 12;
1154111   +label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1154112   +*** Target Values;
MPRINT(EM_DIAGRAM):   *** Target Values;
1154113   +array REG10DRF [2] $12 _temporary_ ('1' '0' );
MPRINT(EM_DIAGRAM):   array REG10DRF [2] $12 _temporary_ ('1' '0' );
1154114   +label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1154115   +format U_DepVar BEST.;
MPRINT(EM_DIAGRAM):   format U_DepVar BEST.;
1154116   +*** Unnormalized target values;
MPRINT(EM_DIAGRAM):   *** Unnormalized target values;
1154117   +ARRAY REG10DRU[2]  _TEMPORARY_ (1 0);
MPRINT(EM_DIAGRAM):   ARRAY REG10DRU[2] _TEMPORARY_ (1 0);
1154118   +
1154119   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1154120   +drop _Y ;
MPRINT(EM_DIAGRAM):   drop _Y ;
1154121   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1154122   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1154123   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1154124   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1154125   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1154126   +   _Y = .;
MPRINT(EM_DIAGRAM):   _Y = .;
1154127   +end;
MPRINT(EM_DIAGRAM):   end;
1154128   +else do;
MPRINT(EM_DIAGRAM):   else do;
1154129   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1154130   +      _Y = 1;
MPRINT(EM_DIAGRAM):   _Y = 1;
1154131   +   end;
MPRINT(EM_DIAGRAM):   end;
1154132   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1154133   +      _Y = 0;
MPRINT(EM_DIAGRAM):   _Y = 0;
1154134   +   end;
MPRINT(EM_DIAGRAM):   end;
1154135   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1154136   +      _Y = .;
MPRINT(EM_DIAGRAM):   _Y = .;
1154137   +   end;
MPRINT(EM_DIAGRAM):   end;
1154138   +end;
MPRINT(EM_DIAGRAM):   end;
1154139   +
1154140   +drop _DM_BAD;
MPRINT(EM_DIAGRAM):   drop _DM_BAD;
1154141   +_DM_BAD=0;
MPRINT(EM_DIAGRAM):   _DM_BAD=0;
1154142   +
1154143   +*** Check Income for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Income for missing values ;
1154144   +if missing( Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( Income ) then do;
1154145   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1154146   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1154147   +end;
MPRINT(EM_DIAGRAM):   end;
1154148   +
1154149   +*** Check MntFishProducts for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntFishProducts for missing values ;
1154150   +if missing( MntFishProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntFishProducts ) then do;
1154151   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1154152   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1154153   +end;
MPRINT(EM_DIAGRAM):   end;
1154154   +
1154155   +*** Check MntFruits for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntFruits for missing values ;
1154156   +if missing( MntFruits ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntFruits ) then do;
1154157   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1154158   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1154159   +end;
MPRINT(EM_DIAGRAM):   end;
1154160   +
1154161   +*** Check MntMeatProducts for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntMeatProducts for missing values ;
1154162   +if missing( MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntMeatProducts ) then do;
1154163   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1154164   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1154165   +end;
MPRINT(EM_DIAGRAM):   end;
1154166   +
1154167   +*** Check MntWines for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntWines for missing values ;
1154168   +if missing( MntWines ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntWines ) then do;
1154169   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1154170   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1154171   +end;
MPRINT(EM_DIAGRAM):   end;
1154172   +
1154173   +*** Check NumCatalogPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumCatalogPurchases for missing values ;
1154174   +if missing( NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumCatalogPurchases ) then do;
1154175   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1154176   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1154177   +end;
MPRINT(EM_DIAGRAM):   end;
1154178   +
1154179   +*** Check NumDealsPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumDealsPurchases for missing values ;
1154180   +if missing( NumDealsPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumDealsPurchases ) then do;
1154181   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1154182   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1154183   +end;
MPRINT(EM_DIAGRAM):   end;
1154184   +
1154185   +*** Check NumStorePurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumStorePurchases for missing values ;
1154186   +if missing( NumStorePurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumStorePurchases ) then do;
1154187   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1154188   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1154189   +end;
MPRINT(EM_DIAGRAM):   end;
1154190   +
1154191   +*** Check NumWebPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumWebPurchases for missing values ;
1154192   +if missing( NumWebPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumWebPurchases ) then do;
1154193   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1154194   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1154195   +end;
MPRINT(EM_DIAGRAM):   end;
1154196   +
1154197   +*** Check NumWebVisitsMonth for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumWebVisitsMonth for missing values ;
1154198   +if missing( NumWebVisitsMonth ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumWebVisitsMonth ) then do;
1154199   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1154200   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1154201   +end;
MPRINT(EM_DIAGRAM):   end;
1154202   +
1154203   +*** Check Recency for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Recency for missing values ;
1154204   +if missing( Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( Recency ) then do;
1154205   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1154206   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1154207   +end;
MPRINT(EM_DIAGRAM):   end;
1154208   +
1154209   +*** Check Teenhome for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Teenhome for missing values ;
1154210   +if missing( Teenhome ) then do;
MPRINT(EM_DIAGRAM):   if missing( Teenhome ) then do;
1154211   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1154212   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1154213   +end;
MPRINT(EM_DIAGRAM):   end;
1154214   +
1154215   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1154216   +drop _1_0 ;
MPRINT(EM_DIAGRAM):   drop _1_0 ;
1154217   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1154218   +   _1_0 = .;
MPRINT(EM_DIAGRAM):   _1_0 = .;
1154219   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1154220   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1154221   +end;
MPRINT(EM_DIAGRAM):   end;
1154222   +else do;
MPRINT(EM_DIAGRAM):   else do;
1154223   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1154224   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1154225   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1154226   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1154227   +      _1_0 = 1;
MPRINT(EM_DIAGRAM):   _1_0 = 1;
1154228   +   end;
MPRINT(EM_DIAGRAM):   end;
1154229   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1154230   +      _1_0 = -1;
MPRINT(EM_DIAGRAM):   _1_0 = -1;
1154231   +   end;
MPRINT(EM_DIAGRAM):   end;
1154232   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1154233   +      _1_0 = .;
MPRINT(EM_DIAGRAM):   _1_0 = .;
1154234   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1154235   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1154236   +   end;
MPRINT(EM_DIAGRAM):   end;
1154237   +end;
MPRINT(EM_DIAGRAM):   end;
1154238   +
1154239   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1154240   +drop _2_0 ;
MPRINT(EM_DIAGRAM):   drop _2_0 ;
1154241   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1154242   +   _2_0 = .;
MPRINT(EM_DIAGRAM):   _2_0 = .;
1154243   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1154244   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1154245   +end;
MPRINT(EM_DIAGRAM):   end;
1154246   +else do;
MPRINT(EM_DIAGRAM):   else do;
1154247   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1154248   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1154249   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1154250   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1154251   +      _2_0 = 1;
MPRINT(EM_DIAGRAM):   _2_0 = 1;
1154252   +   end;
MPRINT(EM_DIAGRAM):   end;
1154253   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1154254   +      _2_0 = -1;
MPRINT(EM_DIAGRAM):   _2_0 = -1;
1154255   +   end;
MPRINT(EM_DIAGRAM):   end;
1154256   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1154257   +      _2_0 = .;
MPRINT(EM_DIAGRAM):   _2_0 = .;
1154258   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1154259   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1154260   +   end;
MPRINT(EM_DIAGRAM):   end;
1154261   +end;
MPRINT(EM_DIAGRAM):   end;
1154262   +
1154263   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1154264   +drop _3_0 ;
MPRINT(EM_DIAGRAM):   drop _3_0 ;
1154265   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1154266   +   _3_0 = .;
MPRINT(EM_DIAGRAM):   _3_0 = .;
1154267   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1154268   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1154269   +end;
MPRINT(EM_DIAGRAM):   end;
1154270   +else do;
MPRINT(EM_DIAGRAM):   else do;
1154271   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1154272   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1154273   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1154274   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1154275   +      _3_0 = 1;
MPRINT(EM_DIAGRAM):   _3_0 = 1;
1154276   +   end;
MPRINT(EM_DIAGRAM):   end;
1154277   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1154278   +      _3_0 = -1;
MPRINT(EM_DIAGRAM):   _3_0 = -1;
1154279   +   end;
MPRINT(EM_DIAGRAM):   end;
1154280   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1154281   +      _3_0 = .;
MPRINT(EM_DIAGRAM):   _3_0 = .;
1154282   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1154283   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1154284   +   end;
MPRINT(EM_DIAGRAM):   end;
1154285   +end;
MPRINT(EM_DIAGRAM):   end;
1154286   +
1154287   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1154288   +drop _4_0 ;
MPRINT(EM_DIAGRAM):   drop _4_0 ;
1154289   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1154290   +   _4_0 = .;
MPRINT(EM_DIAGRAM):   _4_0 = .;
1154291   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1154292   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1154293   +end;
MPRINT(EM_DIAGRAM):   end;
1154294   +else do;
MPRINT(EM_DIAGRAM):   else do;
1154295   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1154296   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1154297   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1154298   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1154299   +      _4_0 = 1;
MPRINT(EM_DIAGRAM):   _4_0 = 1;
1154300   +   end;
MPRINT(EM_DIAGRAM):   end;
1154301   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1154302   +      _4_0 = -1;
MPRINT(EM_DIAGRAM):   _4_0 = -1;
1154303   +   end;
MPRINT(EM_DIAGRAM):   end;
1154304   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1154305   +      _4_0 = .;
MPRINT(EM_DIAGRAM):   _4_0 = .;
1154306   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1154307   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1154308   +   end;
MPRINT(EM_DIAGRAM):   end;
1154309   +end;
MPRINT(EM_DIAGRAM):   end;
1154310   +
1154311   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1154312   +drop _5_0 ;
MPRINT(EM_DIAGRAM):   drop _5_0 ;
1154313   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1154314   +   _5_0 = .;
MPRINT(EM_DIAGRAM):   _5_0 = .;
1154315   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1154316   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1154317   +end;
MPRINT(EM_DIAGRAM):   end;
1154318   +else do;
MPRINT(EM_DIAGRAM):   else do;
1154319   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1154320   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1154321   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1154322   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1154323   +      _5_0 = 1;
MPRINT(EM_DIAGRAM):   _5_0 = 1;
1154324   +   end;
MPRINT(EM_DIAGRAM):   end;
1154325   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1154326   +      _5_0 = -1;
MPRINT(EM_DIAGRAM):   _5_0 = -1;
1154327   +   end;
MPRINT(EM_DIAGRAM):   end;
1154328   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1154329   +      _5_0 = .;
MPRINT(EM_DIAGRAM):   _5_0 = .;
1154330   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1154331   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1154332   +   end;
MPRINT(EM_DIAGRAM):   end;
1154333   +end;
MPRINT(EM_DIAGRAM):   end;
1154334   +
1154335   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1154336   +drop _8_0 _8_1 _8_2 _8_3 ;
MPRINT(EM_DIAGRAM):   drop _8_0 _8_1 _8_2 _8_3 ;
1154337   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1154338   +_8_0 = 0;
MPRINT(EM_DIAGRAM):   _8_0 = 0;
1154339   +_8_1 = 0;
MPRINT(EM_DIAGRAM):   _8_1 = 0;
1154340   +_8_2 = 0;
MPRINT(EM_DIAGRAM):   _8_2 = 0;
1154341   +_8_3 = 0;
MPRINT(EM_DIAGRAM):   _8_3 = 0;
1154342   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1154343   +   _8_0 = .;
MPRINT(EM_DIAGRAM):   _8_0 = .;
1154344   +   _8_1 = .;
MPRINT(EM_DIAGRAM):   _8_1 = .;
1154345   +   _8_2 = .;
MPRINT(EM_DIAGRAM):   _8_2 = .;
1154346   +   _8_3 = .;
MPRINT(EM_DIAGRAM):   _8_3 = .;
1154347   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1154348   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1154349   +end;
MPRINT(EM_DIAGRAM):   end;
1154350   +else do;
MPRINT(EM_DIAGRAM):   else do;
1154351   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1154352   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1154353   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1154354   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1154355   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1154356   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1154357   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1154358   +            _8_0 = 1;
MPRINT(EM_DIAGRAM):   _8_0 = 1;
1154359   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1154360   +         end;
MPRINT(EM_DIAGRAM):   end;
1154361   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1154362   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1154363   +               _8_1 = 1;
MPRINT(EM_DIAGRAM):   _8_1 = 1;
1154364   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1154365   +            end;
MPRINT(EM_DIAGRAM):   end;
1154366   +         end;
MPRINT(EM_DIAGRAM):   end;
1154367   +      end;
MPRINT(EM_DIAGRAM):   end;
1154368   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1154369   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1154370   +            _8_2 = 1;
MPRINT(EM_DIAGRAM):   _8_2 = 1;
1154371   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1154372   +         end;
MPRINT(EM_DIAGRAM):   end;
1154373   +      end;
MPRINT(EM_DIAGRAM):   end;
1154374   +   end;
MPRINT(EM_DIAGRAM):   end;
1154375   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1154376   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1154377   +         _8_3 = 1;
MPRINT(EM_DIAGRAM):   _8_3 = 1;
1154378   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1154379   +      end;
MPRINT(EM_DIAGRAM):   end;
1154380   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1154381   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1154382   +            _8_0 = -1;
MPRINT(EM_DIAGRAM):   _8_0 = -1;
1154383   +            _8_1 = -1;
MPRINT(EM_DIAGRAM):   _8_1 = -1;
1154384   +            _8_2 = -1;
MPRINT(EM_DIAGRAM):   _8_2 = -1;
1154385   +            _8_3 = -1;
MPRINT(EM_DIAGRAM):   _8_3 = -1;
1154386   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1154387   +         end;
MPRINT(EM_DIAGRAM):   end;
1154388   +      end;
MPRINT(EM_DIAGRAM):   end;
1154389   +   end;
MPRINT(EM_DIAGRAM):   end;
1154390   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1154391   +      _8_0 = .;
MPRINT(EM_DIAGRAM):   _8_0 = .;
1154392   +      _8_1 = .;
MPRINT(EM_DIAGRAM):   _8_1 = .;
1154393   +      _8_2 = .;
MPRINT(EM_DIAGRAM):   _8_2 = .;
1154394   +      _8_3 = .;
MPRINT(EM_DIAGRAM):   _8_3 = .;
1154395   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1154396   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1154397   +   end;
MPRINT(EM_DIAGRAM):   end;
1154398   +end;
MPRINT(EM_DIAGRAM):   end;
1154399   +
1154400   +*** If missing inputs, use averages;
MPRINT(EM_DIAGRAM):   *** If missing inputs, use averages;
1154401   +if _DM_BAD > 0 then do;
MPRINT(EM_DIAGRAM):   if _DM_BAD > 0 then do;
1154402   +   _P0 = 0.151221567;
MPRINT(EM_DIAGRAM):   _P0 = 0.151221567;
1154403   +   _P1 = 0.848778433;
MPRINT(EM_DIAGRAM):   _P1 = 0.848778433;
1154404   +   goto REG10DR1;
MPRINT(EM_DIAGRAM):   goto REG10DR1;
1154405   +end;
MPRINT(EM_DIAGRAM):   end;
1154406   +
1154407   +*** Compute Linear Predictor;
MPRINT(EM_DIAGRAM):   *** Compute Linear Predictor;
1154408   +drop _TEMP;
MPRINT(EM_DIAGRAM):   drop _TEMP;
1154409   +drop _LP0;
MPRINT(EM_DIAGRAM):   drop _LP0;
1154410   +_LP0 = 0;
MPRINT(EM_DIAGRAM):   _LP0 = 0;
1154411   +
1154412   +***  Effect: AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Effect: AcceptedCmp1 ;
1154413   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1154414   +_LP0 = _LP0 + (   -0.71107732112007) * _TEMP * _1_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.71107732112007) * _TEMP * _1_0;
1154415   +
1154416   +***  Effect: AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Effect: AcceptedCmp2 ;
1154417   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1154418   +_LP0 = _LP0 + (   -0.81763295180983) * _TEMP * _2_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.81763295180983) * _TEMP * _2_0;
1154419   +
1154420   +***  Effect: AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Effect: AcceptedCmp3 ;
1154421   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1154422   +_LP0 = _LP0 + (    -0.8618538514738) * _TEMP * _3_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.8618538514738) * _TEMP * _3_0;
1154423   +
1154424   +***  Effect: AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Effect: AcceptedCmp4 ;
1154425   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1154426   +_LP0 = _LP0 + (   -0.64997710050937) * _TEMP * _4_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.64997710050937) * _TEMP * _4_0;
1154427   +
1154428   +***  Effect: AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Effect: AcceptedCmp5 ;
1154429   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1154430   +_LP0 = _LP0 + (   -0.91699409369659) * _TEMP * _5_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.91699409369659) * _TEMP * _5_0;
1154431   +
1154432   +***  Effect: Income ;
MPRINT(EM_DIAGRAM):   *** Effect: Income ;
1154433   +_TEMP = Income ;
MPRINT(EM_DIAGRAM):   _TEMP = Income ;
1154434   +_LP0 = _LP0 + (    0.00003628120307 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00003628120307 * _TEMP);
1154435   +
1154436   +***  Effect: Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Effect: Marital_Status ;
1154437   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1154438   +_LP0 = _LP0 + (    0.09345382071006) * _TEMP * _8_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.09345382071006) * _TEMP * _8_0;
1154439   +_LP0 = _LP0 + (   -0.47894059934485) * _TEMP * _8_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.47894059934485) * _TEMP * _8_1;
1154440   +_LP0 = _LP0 + (    0.46164092141221) * _TEMP * _8_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.46164092141221) * _TEMP * _8_2;
1154441   +_LP0 = _LP0 + (    -0.5078574429985) * _TEMP * _8_3;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.5078574429985) * _TEMP * _8_3;
1154442   +
1154443   +***  Effect: MntFishProducts ;
MPRINT(EM_DIAGRAM):   *** Effect: MntFishProducts ;
1154444   +_TEMP = MntFishProducts ;
MPRINT(EM_DIAGRAM):   _TEMP = MntFishProducts ;
1154445   +_LP0 = _LP0 + (   -0.00285470778488 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.00285470778488 * _TEMP);
1154446   +
1154447   +***  Effect: MntFruits ;
MPRINT(EM_DIAGRAM):   *** Effect: MntFruits ;
1154448   +_TEMP = MntFruits ;
MPRINT(EM_DIAGRAM):   _TEMP = MntFruits ;
1154449   +_LP0 = _LP0 + (   -0.00481548089585 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.00481548089585 * _TEMP);
1154450   +
1154451   +***  Effect: MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Effect: MntMeatProducts ;
1154452   +_TEMP = MntMeatProducts ;
MPRINT(EM_DIAGRAM):   _TEMP = MntMeatProducts ;
1154453   +_LP0 = _LP0 + (    0.00485302069895 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00485302069895 * _TEMP);
1154454   +
1154455   +***  Effect: MntWines ;
MPRINT(EM_DIAGRAM):   *** Effect: MntWines ;
1154456   +_TEMP = MntWines ;
MPRINT(EM_DIAGRAM):   _TEMP = MntWines ;
1154457   +_LP0 = _LP0 + (   -0.00184060065513 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.00184060065513 * _TEMP);
1154458   +
1154459   +***  Effect: NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumCatalogPurchases ;
1154460   +_TEMP = NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumCatalogPurchases ;
1154461   +_LP0 = _LP0 + (    0.40015202354101 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.40015202354101 * _TEMP);
1154462   +
1154463   +***  Effect: NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumDealsPurchases ;
1154464   +_TEMP = NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumDealsPurchases ;
1154465   +_LP0 = _LP0 + (    0.39526484909287 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.39526484909287 * _TEMP);
1154466   +
1154467   +***  Effect: NumStorePurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumStorePurchases ;
1154468   +_TEMP = NumStorePurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumStorePurchases ;
1154469   +_LP0 = _LP0 + (   -0.21400418800044 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.21400418800044 * _TEMP);
1154470   +
1154471   +***  Effect: NumWebPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumWebPurchases ;
1154472   +_TEMP = NumWebPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumWebPurchases ;
1154473   +_LP0 = _LP0 + (    -0.2223953481686 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.2223953481686 * _TEMP);
1154474   +
1154475   +***  Effect: NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   *** Effect: NumWebVisitsMonth ;
1154476   +_TEMP = NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   _TEMP = NumWebVisitsMonth ;
1154477   +_LP0 = _LP0 + (    0.54388363089232 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.54388363089232 * _TEMP);
1154478   +
1154479   +***  Effect: Recency ;
MPRINT(EM_DIAGRAM):   *** Effect: Recency ;
1154480   +_TEMP = Recency ;
MPRINT(EM_DIAGRAM):   _TEMP = Recency ;
1154481   +_LP0 = _LP0 + (   -0.05513564922633 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.05513564922633 * _TEMP);
1154482   +
1154483   +***  Effect: Teenhome ;
MPRINT(EM_DIAGRAM):   *** Effect: Teenhome ;
1154484   +_TEMP = Teenhome ;
MPRINT(EM_DIAGRAM):   _TEMP = Teenhome ;
1154485   +_LP0 = _LP0 + (   -0.70674092258187 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.70674092258187 * _TEMP);
1154486   +
1154487   +*** Naive Posterior Probabilities;
MPRINT(EM_DIAGRAM):   *** Naive Posterior Probabilities;
1154488   +drop _MAXP _IY _P0 _P1;
MPRINT(EM_DIAGRAM):   drop _MAXP _IY _P0 _P1;
1154489   +_P0 = probnorm((   -0.62163391257391) + _LP0);
MPRINT(EM_DIAGRAM):   _P0 = probnorm(( -0.62163391257391) + _LP0);
1154490   +_P1 = 1.0 - _P0;
MPRINT(EM_DIAGRAM):   _P1 = 1.0 - _P0;
1154491   +
1154492   +REG10DR1:
1154493   +
1154494   +*** Residuals;
MPRINT(EM_DIAGRAM):   REG10DR1: *** Residuals;
1154495   +if (_Y = .) then do;
MPRINT(EM_DIAGRAM):   if (_Y = .) then do;
1154496   +   R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
1154497   +   R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
1154498   +end;
MPRINT(EM_DIAGRAM):   end;
1154499   +else do;
MPRINT(EM_DIAGRAM):   else do;
1154500   +    label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1154501   +    label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1154502   +   R_DepVar1 = - _P0;
MPRINT(EM_DIAGRAM):   R_DepVar1 = - _P0;
1154503   +   R_DepVar0 = - _P1;
MPRINT(EM_DIAGRAM):   R_DepVar0 = - _P1;
1154504   +   select( _Y );
MPRINT(EM_DIAGRAM):   select( _Y );
1154505   +      when (0)  R_DepVar1 = R_DepVar1 + 1;
MPRINT(EM_DIAGRAM):   when (0) R_DepVar1 = R_DepVar1 + 1;
1154506   +      when (1)  R_DepVar0 = R_DepVar0 + 1;
MPRINT(EM_DIAGRAM):   when (1) R_DepVar0 = R_DepVar0 + 1;
1154507   +   end;
MPRINT(EM_DIAGRAM):   end;
1154508   +end;
MPRINT(EM_DIAGRAM):   end;
1154509   +
1154510   +*** Posterior Probabilities and Predicted Level;
MPRINT(EM_DIAGRAM):   *** Posterior Probabilities and Predicted Level;
1154511   +label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1154512   +label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1154513   +P_DepVar1 = _P0;
MPRINT(EM_DIAGRAM):   P_DepVar1 = _P0;
1154514   +_MAXP = _P0;
MPRINT(EM_DIAGRAM):   _MAXP = _P0;
1154515   +_IY = 1;
MPRINT(EM_DIAGRAM):   _IY = 1;
1154516   +P_DepVar0 = _P1;
MPRINT(EM_DIAGRAM):   P_DepVar0 = _P1;
1154517   +if (_P1 >  _MAXP + 1E-8) then do;
MPRINT(EM_DIAGRAM):   if (_P1 > _MAXP + 1E-8) then do;
1154518   +   _MAXP = _P1;
MPRINT(EM_DIAGRAM):   _MAXP = _P1;
1154519   +   _IY = 2;
MPRINT(EM_DIAGRAM):   _IY = 2;
1154520   +end;
MPRINT(EM_DIAGRAM):   end;
1154521   +I_DepVar = REG10DRF[_IY];
MPRINT(EM_DIAGRAM):   I_DepVar = REG10DRF[_IY];
1154522   +U_DepVar = REG10DRU[_IY];
MPRINT(EM_DIAGRAM):   U_DepVar = REG10DRU[_IY];
1154523   +
1154524   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1154525   +***** end scoring code for regression;
MPRINT(EM_DIAGRAM):   ***** end scoring code for regression;
1154526   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1154527   +* Renaming variables for Reg10;
MPRINT(EM_DIAGRAM):   * Renaming variables for Reg10;
1154528   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1154529   +* Renaming Posterior variables for Reg10;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Reg10;
1154530   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1154531   +drop Reg10_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Reg10_P_DepVar1;
1154532   +Reg10_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Reg10_P_DepVar1 = P_DepVar1;
1154533   +drop Reg10_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Reg10_P_DepVar0;
1154534   +Reg10_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Reg10_P_DepVar0 = P_DepVar0;
1154535   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1154536   +* Renaming _WARN_ variable for Reg10;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Reg10;
1154537   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1154538   +length Reg10_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Reg10_WARN_ $4;
1154539   +drop Reg10_WARN_;
MPRINT(EM_DIAGRAM):   drop Reg10_WARN_;
1154540   +Reg10_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Reg10_WARN_ = _WARN_;
1154541   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1154542   +* Ensmbl9: Average Posteriors of 10 models;
MPRINT(EM_DIAGRAM):   * Ensmbl9: Average Posteriors of 10 models;
1154543   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1154544   +P_DepVar1 = (
1154545   +Reg9_P_DepVar1 +
1154546   +Tree5_P_DepVar1 +
1154547   +Neural33_P_DepVar1 +
1154548   +Neural6_P_DepVar1 +
1154549   +Neural31_P_DepVar1 +
1154550   +Neural32_P_DepVar1 +
1154551   +Neural34_P_DepVar1 +
1154552   +Neural35_P_DepVar1 +
1154553   +Neural30_P_DepVar1 +
1154554   +Reg10_P_DepVar1
1154555   +)/10;
MPRINT(EM_DIAGRAM):   P_DepVar1 = ( Reg9_P_DepVar1 + Tree5_P_DepVar1 + Neural33_P_DepVar1 +
Neural6_P_DepVar1 + Neural31_P_DepVar1 + Neural32_P_DepVar1 + Neural34_P_DepVar1 +
Neural35_P_DepVar1 + Neural30_P_DepVar1 + Reg10_P_DepVar1 )/10;
1154556   +P_DepVar0 = (
1154557   +Reg9_P_DepVar0 +
1154558   +Tree5_P_DepVar0 +
1154559   +Neural33_P_DepVar0 +
1154560   +Neural6_P_DepVar0 +
1154561   +Neural31_P_DepVar0 +
1154562   +Neural32_P_DepVar0 +
1154563   +Neural34_P_DepVar0 +
1154564   +Neural35_P_DepVar0 +
1154565   +Neural30_P_DepVar0 +
1154566   +Reg10_P_DepVar0
1154567   +)/10;
MPRINT(EM_DIAGRAM):   P_DepVar0 = ( Reg9_P_DepVar0 + Tree5_P_DepVar0 + Neural33_P_DepVar0 +
Neural6_P_DepVar0 + Neural31_P_DepVar0 + Neural32_P_DepVar0 + Neural34_P_DepVar0 +
Neural35_P_DepVar0 + Neural30_P_DepVar0 + Reg10_P_DepVar0 )/10;
1154568   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1154569   +* Ensmbl9: Computing Classification Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl9: Computing Classification Vars;
1154570   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1154571   +length I_DepVar $32;
MPRINT(EM_DIAGRAM):   length I_DepVar $32;
WARNING: Length of character variable I_DepVar has already been set.
         Use the LENGTH statement as the very first statement in the DATA STEP to declare the
         length of a character variable.
1154572   +label I_DepVar = 'Into: DepVar';
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar';
1154573   +length _format $200;
MPRINT(EM_DIAGRAM):   length _format $200;
1154574   +drop _format;
MPRINT(EM_DIAGRAM):   drop _format;
1154575   +_format= ' ';
MPRINT(EM_DIAGRAM):   _format= ' ';
1154576   +_p_= 0;
MPRINT(EM_DIAGRAM):   _p_= 0;
1154577   +drop _p_;
MPRINT(EM_DIAGRAM):   drop _p_;
1154578   +if P_DepVar1 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar1 > _p_ then do;
1154579   +_p_= P_DepVar1;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar1;
1154580   +_format= '1';
MPRINT(EM_DIAGRAM):   _format= '1';
1154581   +end;
MPRINT(EM_DIAGRAM):   end;
1154582   +if P_DepVar0 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar0 > _p_ then do;
1154583   +_p_= P_DepVar0;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar0;
1154584   +_format= '0';
MPRINT(EM_DIAGRAM):   _format= '0';
1154585   +end;
MPRINT(EM_DIAGRAM):   end;
1154586   +%DMNORMCP(_format,I_DepVar);
MPRINT(DMNORMCP):   I_DepVar=dmnorm(_format,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1154587   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1154588   +* Ensmbl9: Producing Unformatted variable;
MPRINT(EM_DIAGRAM):   * Ensmbl9: Producing Unformatted variable;
1154589   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1154590   +label U_DepVar = "Unnormalized Into: DepVar";
MPRINT(EM_DIAGRAM):   label U_DepVar = "Unnormalized Into: DepVar";
1154591   +if I_DepVar = '1' then U_DepVar = 1;
MPRINT(EM_DIAGRAM):   if I_DepVar = '1' then U_DepVar = 1;
1154592   +else
1154593   +if I_DepVar = '0' then U_DepVar = 0;
MPRINT(EM_DIAGRAM):   else if I_DepVar = '0' then U_DepVar = 0;
1154594   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1154595   +* Ensmbl9: Computing _WARN_ Variable;
MPRINT(EM_DIAGRAM):   * Ensmbl9: Computing _WARN_ Variable;
1154596   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1154597   +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
1154598   +label _WARN_ = 'Warnings';
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings';
1154599   +_WARN_ = '';
MPRINT(EM_DIAGRAM):   _WARN_ = '';
1154600   +if index(REG9_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(REG9_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1,
1) ='M';
1154601   +if index(REG9_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(REG9_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2,
1) ='U';
1154602   +if index(REG9_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(REG9_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3,
1) ='P';
1154603   +if index(REG9_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(REG9_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4,
1) ='C';
1154604   +if index(TREE5_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(TREE5_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_,
1, 1) ='M';
1154605   +if index(TREE5_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(TREE5_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_,
2, 1) ='U';
1154606   +if index(TREE5_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(TREE5_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_,
3, 1) ='P';
1154607   +if index(TREE5_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(TREE5_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_,
4, 1) ='C';
1154608   +if index(NEURAL33_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M'
1154608  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL33_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
1154609   +if index(NEURAL33_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U'
1154609  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL33_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
1154610   +if index(NEURAL33_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P'
1154610  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL33_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
1154611   +if index(NEURAL33_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C'
1154611  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL33_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
1154612   +if index(NEURAL6_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(NEURAL6_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_,
1, 1) ='M';
1154613   +if index(NEURAL6_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(NEURAL6_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_,
2, 1) ='U';
1154614   +if index(NEURAL6_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(NEURAL6_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_,
3, 1) ='P';
1154615   +if index(NEURAL6_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(NEURAL6_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_,
4, 1) ='C';
1154616   +if index(NEURAL31_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M'
1154616  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL31_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
1154617   +if index(NEURAL31_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U'
1154617  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL31_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
1154618   +if index(NEURAL31_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P'
1154618  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL31_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
1154619   +if index(NEURAL31_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C'
1154619  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL31_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
1154620   +if index(NEURAL32_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M'
1154620  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL32_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
1154621   +if index(NEURAL32_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U'
1154621  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL32_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
1154622   +if index(NEURAL32_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P'
1154622  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL32_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
1154623   +if index(NEURAL32_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C'
1154623  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL32_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
1154624   +if index(NEURAL34_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M'
1154624  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL34_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
1154625   +if index(NEURAL34_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U'
1154625  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL34_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
1154626   +if index(NEURAL34_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P'
1154626  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL34_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
1154627   +if index(NEURAL34_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C'
1154627  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL34_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
1154628   +if index(NEURAL35_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M'
1154628  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL35_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
1154629   +if index(NEURAL35_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U'
1154629  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL35_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
1154630   +if index(NEURAL35_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P'
1154630  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL35_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
1154631   +if index(NEURAL35_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C'
1154631  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL35_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
1154632   +if index(NEURAL30_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M'
1154632  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL30_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
1154633   +if index(NEURAL30_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U'
1154633  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL30_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
1154634   +if index(NEURAL30_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P'
1154634  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL30_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
1154635   +if index(NEURAL30_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C'
1154635  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL30_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
1154636   +if index(REG10_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(REG10_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_,
1, 1) ='M';
1154637   +if index(REG10_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(REG10_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_,
2, 1) ='U';
1154638   +if index(REG10_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(REG10_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_,
3, 1) ='P';
1154639   +if index(REG10_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(REG10_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_,
4, 1) ='C';
1154640   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1154641   +* Ensmbl9: Computing Residual Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl9: Computing Residual Vars;
1154642   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1154643   +if
1154644   +F_DepVar NE '1'
1154645   +AND F_DepVar NE '0'
1154646   +then do;
MPRINT(EM_DIAGRAM):   if F_DepVar NE '1' AND F_DepVar NE '0' then do;
1154647   +R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
1154648   +R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
1154649   +end;
MPRINT(EM_DIAGRAM):   end;
1154650   +else do;
MPRINT(EM_DIAGRAM):   else do;
1154651   +R_DepVar1 = -P_DepVar1;
MPRINT(EM_DIAGRAM):   R_DepVar1 = -P_DepVar1;
1154652   +R_DepVar0 = -P_DepVar0;
MPRINT(EM_DIAGRAM):   R_DepVar0 = -P_DepVar0;
1154653   +SELECT(F_DepVar);
MPRINT(EM_DIAGRAM):   SELECT(F_DepVar);
1154654   +WHEN('1') R_DepVar1 = R_DepVar1 +1;
MPRINT(EM_DIAGRAM):   WHEN('1') R_DepVar1 = R_DepVar1 +1;
1154655   +WHEN('0') R_DepVar0 = R_DepVar0 +1;
MPRINT(EM_DIAGRAM):   WHEN('0') R_DepVar0 = R_DepVar0 +1;
1154656   +OTHERWISE;
MPRINT(EM_DIAGRAM):   OTHERWISE;
1154657   +END;
MPRINT(EM_DIAGRAM):   END;
1154658   +END;
MPRINT(EM_DIAGRAM):   END;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1154659    run;
 
NOTE: DATA STEP view saved on file EMWS8.ENSMBL9_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.REG9_TRAIN.VIEW used (Total process time):
      real time           0.17 seconds
      cpu time            0.17 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.18 seconds
      cpu time            0.18 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1154660    quit;
1154661    filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
1154662    filename emflow
1154662  ! "C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl9\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl9\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl9: Scoring REG9_VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1154663    *------------------------------------------------------------*;
1154664    * Ensmbl9: Scoring REG9_VALIDATE data;
1154665    *------------------------------------------------------------*;
1154666    data EMWS8.Ensmbl9_VALIDATE
1154667    / view=EMWS8.Ensmbl9_VALIDATE
1154668    ;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl9_VALIDATE / view=EMWS8.Ensmbl9_VALIDATE ;
1154669    set EMWS8.Reg9_VALIDATE
1154670    ;
MPRINT(EM_DIAGRAM):   set EMWS8.Reg9_VALIDATE ;
1154671    %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file
      C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl9\EMFLOWSCORE.sas.
1154672   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1154673   +* Ensmbl9: Combine model for DepVar;
MPRINT(EM_DIAGRAM):   * Ensmbl9: Combine model for DepVar;
1154674   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1154675   +* Ensmbl9: Scoring Code of model 1 of 10;
MPRINT(EM_DIAGRAM):   * Ensmbl9: Scoring Code of model 1 of 10;
1154676   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1154677   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1154678   +* TOOL: Extension Class;
MPRINT(EM_DIAGRAM):   * TOOL: Extension Class;
1154679   +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
1154680   +* NODE: FIMPORT;
MPRINT(EM_DIAGRAM):   * NODE: FIMPORT;
1154681   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1154682   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1154683   +* TOOL: Statistics Exploration;
MPRINT(EM_DIAGRAM):   * TOOL: Statistics Exploration;
1154684   +* TYPE: EXPLORE;
MPRINT(EM_DIAGRAM):   * TYPE: EXPLORE;
1154685   +* NODE: Stat;
MPRINT(EM_DIAGRAM):   * NODE: Stat;
1154686   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1154687   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1154688   +* TOOL: Filtering;
MPRINT(EM_DIAGRAM):   * TOOL: Filtering;
1154689   +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
1154690   +* NODE: Filter;
MPRINT(EM_DIAGRAM):   * NODE: Filter;
1154691   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1154692   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1154693   +* TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
MPRINT(EM_DIAGRAM):   * TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
1154694   +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
1154695   +* NODE: EMCODE4;
MPRINT(EM_DIAGRAM):   * NODE: EMCODE4;
1154696   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1154697   +
1154698   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1154699   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1154699  !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1154700   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1154701   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1154702   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1154703   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1154704   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
1154705   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1154706   +* TOOL: Transform;
MPRINT(EM_DIAGRAM):   * TOOL: Transform;
1154707   +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
1154708   +* NODE: Trans;
MPRINT(EM_DIAGRAM):   * NODE: Trans;
1154709   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1154710   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1154711   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1154712   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1154713   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1154714   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1154715   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
1154716   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1154717   +* TOOL: Partition Class;
MPRINT(EM_DIAGRAM):   * TOOL: Partition Class;
1154718   +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
1154719   +* NODE: Part;
MPRINT(EM_DIAGRAM):   * NODE: Part;
1154720   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1154721   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1154722   +* TOOL: Metadata Node;
MPRINT(EM_DIAGRAM):   * TOOL: Metadata Node;
1154723   +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
1154724   +* NODE: Meta2;
MPRINT(EM_DIAGRAM):   * NODE: Meta2;
1154725   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1154726   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1154727   +* TOOL: Regression;
MPRINT(EM_DIAGRAM):   * TOOL: Regression;
1154728   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1154729   +* NODE: Reg9;
MPRINT(EM_DIAGRAM):   * NODE: Reg9;
1154730   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1154731   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1154732   +*** begin scoring code for regression;
MPRINT(EM_DIAGRAM):   *** begin scoring code for regression;
1154733   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1154734   +
1154735   +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
1154736   +label _WARN_ = 'Warnings' ;
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings' ;
1154737   +
1154738   +length I_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length I_DepVar $ 12;
1154739   +label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1154740   +*** Target Values;
MPRINT(EM_DIAGRAM):   *** Target Values;
1154741   +array REG9DRF [2] $12 _temporary_ ('1' '0' );
MPRINT(EM_DIAGRAM):   array REG9DRF [2] $12 _temporary_ ('1' '0' );
1154742   +label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1154743   +format U_DepVar BEST.;
MPRINT(EM_DIAGRAM):   format U_DepVar BEST.;
1154744   +*** Unnormalized target values;
MPRINT(EM_DIAGRAM):   *** Unnormalized target values;
1154745   +ARRAY REG9DRU[2]  _TEMPORARY_ (1 0);
MPRINT(EM_DIAGRAM):   ARRAY REG9DRU[2] _TEMPORARY_ (1 0);
1154746   +
1154747   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1154748   +drop _Y ;
MPRINT(EM_DIAGRAM):   drop _Y ;
1154749   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1154750   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1154751   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1154752   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1154753   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1154754   +   _Y = .;
MPRINT(EM_DIAGRAM):   _Y = .;
1154755   +end;
MPRINT(EM_DIAGRAM):   end;
1154756   +else do;
MPRINT(EM_DIAGRAM):   else do;
1154757   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1154758   +      _Y = 1;
MPRINT(EM_DIAGRAM):   _Y = 1;
1154759   +   end;
MPRINT(EM_DIAGRAM):   end;
1154760   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1154761   +      _Y = 0;
MPRINT(EM_DIAGRAM):   _Y = 0;
1154762   +   end;
MPRINT(EM_DIAGRAM):   end;
1154763   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1154764   +      _Y = .;
MPRINT(EM_DIAGRAM):   _Y = .;
1154765   +   end;
MPRINT(EM_DIAGRAM):   end;
1154766   +end;
MPRINT(EM_DIAGRAM):   end;
1154767   +
1154768   +drop _DM_BAD;
MPRINT(EM_DIAGRAM):   drop _DM_BAD;
1154769   +_DM_BAD=0;
MPRINT(EM_DIAGRAM):   _DM_BAD=0;
1154770   +
1154771   +*** Check Income for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Income for missing values ;
1154772   +if missing( Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( Income ) then do;
1154773   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1154774   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1154775   +end;
MPRINT(EM_DIAGRAM):   end;
1154776   +
1154777   +*** Check MntFishProducts for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntFishProducts for missing values ;
1154778   +if missing( MntFishProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntFishProducts ) then do;
1154779   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1154780   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1154781   +end;
MPRINT(EM_DIAGRAM):   end;
1154782   +
1154783   +*** Check MntFruits for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntFruits for missing values ;
1154784   +if missing( MntFruits ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntFruits ) then do;
1154785   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1154786   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1154787   +end;
MPRINT(EM_DIAGRAM):   end;
1154788   +
1154789   +*** Check MntMeatProducts for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntMeatProducts for missing values ;
1154790   +if missing( MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntMeatProducts ) then do;
1154791   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1154792   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1154793   +end;
MPRINT(EM_DIAGRAM):   end;
1154794   +
1154795   +*** Check MntWines for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntWines for missing values ;
1154796   +if missing( MntWines ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntWines ) then do;
1154797   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1154798   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1154799   +end;
MPRINT(EM_DIAGRAM):   end;
1154800   +
1154801   +*** Check NumCatalogPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumCatalogPurchases for missing values ;
1154802   +if missing( NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumCatalogPurchases ) then do;
1154803   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1154804   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1154805   +end;
MPRINT(EM_DIAGRAM):   end;
1154806   +
1154807   +*** Check NumDealsPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumDealsPurchases for missing values ;
1154808   +if missing( NumDealsPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumDealsPurchases ) then do;
1154809   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1154810   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1154811   +end;
MPRINT(EM_DIAGRAM):   end;
1154812   +
1154813   +*** Check NumStorePurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumStorePurchases for missing values ;
1154814   +if missing( NumStorePurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumStorePurchases ) then do;
1154815   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1154816   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1154817   +end;
MPRINT(EM_DIAGRAM):   end;
1154818   +
1154819   +*** Check NumWebPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumWebPurchases for missing values ;
1154820   +if missing( NumWebPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumWebPurchases ) then do;
1154821   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1154822   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1154823   +end;
MPRINT(EM_DIAGRAM):   end;
1154824   +
1154825   +*** Check NumWebVisitsMonth for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumWebVisitsMonth for missing values ;
1154826   +if missing( NumWebVisitsMonth ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumWebVisitsMonth ) then do;
1154827   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1154828   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1154829   +end;
MPRINT(EM_DIAGRAM):   end;
1154830   +
1154831   +*** Check Recency for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Recency for missing values ;
1154832   +if missing( Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( Recency ) then do;
1154833   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1154834   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1154835   +end;
MPRINT(EM_DIAGRAM):   end;
1154836   +
1154837   +*** Check Teenhome for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Teenhome for missing values ;
1154838   +if missing( Teenhome ) then do;
MPRINT(EM_DIAGRAM):   if missing( Teenhome ) then do;
1154839   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1154840   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1154841   +end;
MPRINT(EM_DIAGRAM):   end;
1154842   +
1154843   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1154844   +drop _1_0 ;
MPRINT(EM_DIAGRAM):   drop _1_0 ;
1154845   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1154846   +   _1_0 = .;
MPRINT(EM_DIAGRAM):   _1_0 = .;
1154847   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1154848   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1154849   +end;
MPRINT(EM_DIAGRAM):   end;
1154850   +else do;
MPRINT(EM_DIAGRAM):   else do;
1154851   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1154852   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1154853   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1154854   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1154855   +      _1_0 = 1;
MPRINT(EM_DIAGRAM):   _1_0 = 1;
1154856   +   end;
MPRINT(EM_DIAGRAM):   end;
1154857   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1154858   +      _1_0 = -1;
MPRINT(EM_DIAGRAM):   _1_0 = -1;
1154859   +   end;
MPRINT(EM_DIAGRAM):   end;
1154860   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1154861   +      _1_0 = .;
MPRINT(EM_DIAGRAM):   _1_0 = .;
1154862   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1154863   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1154864   +   end;
MPRINT(EM_DIAGRAM):   end;
1154865   +end;
MPRINT(EM_DIAGRAM):   end;
1154866   +
1154867   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1154868   +drop _2_0 ;
MPRINT(EM_DIAGRAM):   drop _2_0 ;
1154869   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1154870   +   _2_0 = .;
MPRINT(EM_DIAGRAM):   _2_0 = .;
1154871   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1154872   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1154873   +end;
MPRINT(EM_DIAGRAM):   end;
1154874   +else do;
MPRINT(EM_DIAGRAM):   else do;
1154875   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1154876   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1154877   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1154878   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1154879   +      _2_0 = 1;
MPRINT(EM_DIAGRAM):   _2_0 = 1;
1154880   +   end;
MPRINT(EM_DIAGRAM):   end;
1154881   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1154882   +      _2_0 = -1;
MPRINT(EM_DIAGRAM):   _2_0 = -1;
1154883   +   end;
MPRINT(EM_DIAGRAM):   end;
1154884   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1154885   +      _2_0 = .;
MPRINT(EM_DIAGRAM):   _2_0 = .;
1154886   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1154887   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1154888   +   end;
MPRINT(EM_DIAGRAM):   end;
1154889   +end;
MPRINT(EM_DIAGRAM):   end;
1154890   +
1154891   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1154892   +drop _3_0 ;
MPRINT(EM_DIAGRAM):   drop _3_0 ;
1154893   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1154894   +   _3_0 = .;
MPRINT(EM_DIAGRAM):   _3_0 = .;
1154895   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1154896   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1154897   +end;
MPRINT(EM_DIAGRAM):   end;
1154898   +else do;
MPRINT(EM_DIAGRAM):   else do;
1154899   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1154900   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1154901   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1154902   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1154903   +      _3_0 = 1;
MPRINT(EM_DIAGRAM):   _3_0 = 1;
1154904   +   end;
MPRINT(EM_DIAGRAM):   end;
1154905   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1154906   +      _3_0 = -1;
MPRINT(EM_DIAGRAM):   _3_0 = -1;
1154907   +   end;
MPRINT(EM_DIAGRAM):   end;
1154908   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1154909   +      _3_0 = .;
MPRINT(EM_DIAGRAM):   _3_0 = .;
1154910   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1154911   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1154912   +   end;
MPRINT(EM_DIAGRAM):   end;
1154913   +end;
MPRINT(EM_DIAGRAM):   end;
1154914   +
1154915   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1154916   +drop _4_0 ;
MPRINT(EM_DIAGRAM):   drop _4_0 ;
1154917   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1154918   +   _4_0 = .;
MPRINT(EM_DIAGRAM):   _4_0 = .;
1154919   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1154920   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1154921   +end;
MPRINT(EM_DIAGRAM):   end;
1154922   +else do;
MPRINT(EM_DIAGRAM):   else do;
1154923   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1154924   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1154925   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1154926   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1154927   +      _4_0 = 1;
MPRINT(EM_DIAGRAM):   _4_0 = 1;
1154928   +   end;
MPRINT(EM_DIAGRAM):   end;
1154929   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1154930   +      _4_0 = -1;
MPRINT(EM_DIAGRAM):   _4_0 = -1;
1154931   +   end;
MPRINT(EM_DIAGRAM):   end;
1154932   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1154933   +      _4_0 = .;
MPRINT(EM_DIAGRAM):   _4_0 = .;
1154934   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1154935   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1154936   +   end;
MPRINT(EM_DIAGRAM):   end;
1154937   +end;
MPRINT(EM_DIAGRAM):   end;
1154938   +
1154939   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1154940   +drop _5_0 ;
MPRINT(EM_DIAGRAM):   drop _5_0 ;
1154941   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1154942   +   _5_0 = .;
MPRINT(EM_DIAGRAM):   _5_0 = .;
1154943   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1154944   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1154945   +end;
MPRINT(EM_DIAGRAM):   end;
1154946   +else do;
MPRINT(EM_DIAGRAM):   else do;
1154947   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1154948   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1154949   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1154950   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1154951   +      _5_0 = 1;
MPRINT(EM_DIAGRAM):   _5_0 = 1;
1154952   +   end;
MPRINT(EM_DIAGRAM):   end;
1154953   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1154954   +      _5_0 = -1;
MPRINT(EM_DIAGRAM):   _5_0 = -1;
1154955   +   end;
MPRINT(EM_DIAGRAM):   end;
1154956   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1154957   +      _5_0 = .;
MPRINT(EM_DIAGRAM):   _5_0 = .;
1154958   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1154959   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1154960   +   end;
MPRINT(EM_DIAGRAM):   end;
1154961   +end;
MPRINT(EM_DIAGRAM):   end;
1154962   +
1154963   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1154964   +drop _8_0 _8_1 _8_2 _8_3 ;
MPRINT(EM_DIAGRAM):   drop _8_0 _8_1 _8_2 _8_3 ;
1154965   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1154966   +_8_0 = 0;
MPRINT(EM_DIAGRAM):   _8_0 = 0;
1154967   +_8_1 = 0;
MPRINT(EM_DIAGRAM):   _8_1 = 0;
1154968   +_8_2 = 0;
MPRINT(EM_DIAGRAM):   _8_2 = 0;
1154969   +_8_3 = 0;
MPRINT(EM_DIAGRAM):   _8_3 = 0;
1154970   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1154971   +   _8_0 = .;
MPRINT(EM_DIAGRAM):   _8_0 = .;
1154972   +   _8_1 = .;
MPRINT(EM_DIAGRAM):   _8_1 = .;
1154973   +   _8_2 = .;
MPRINT(EM_DIAGRAM):   _8_2 = .;
1154974   +   _8_3 = .;
MPRINT(EM_DIAGRAM):   _8_3 = .;
1154975   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1154976   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1154977   +end;
MPRINT(EM_DIAGRAM):   end;
1154978   +else do;
MPRINT(EM_DIAGRAM):   else do;
1154979   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1154980   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1154981   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1154982   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1154983   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1154984   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1154985   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1154986   +            _8_0 = 1;
MPRINT(EM_DIAGRAM):   _8_0 = 1;
1154987   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1154988   +         end;
MPRINT(EM_DIAGRAM):   end;
1154989   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1154990   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1154991   +               _8_1 = 1;
MPRINT(EM_DIAGRAM):   _8_1 = 1;
1154992   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1154993   +            end;
MPRINT(EM_DIAGRAM):   end;
1154994   +         end;
MPRINT(EM_DIAGRAM):   end;
1154995   +      end;
MPRINT(EM_DIAGRAM):   end;
1154996   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1154997   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1154998   +            _8_2 = 1;
MPRINT(EM_DIAGRAM):   _8_2 = 1;
1154999   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1155000   +         end;
MPRINT(EM_DIAGRAM):   end;
1155001   +      end;
MPRINT(EM_DIAGRAM):   end;
1155002   +   end;
MPRINT(EM_DIAGRAM):   end;
1155003   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1155004   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1155005   +         _8_3 = 1;
MPRINT(EM_DIAGRAM):   _8_3 = 1;
1155006   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1155007   +      end;
MPRINT(EM_DIAGRAM):   end;
1155008   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1155009   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1155010   +            _8_0 = -1;
MPRINT(EM_DIAGRAM):   _8_0 = -1;
1155011   +            _8_1 = -1;
MPRINT(EM_DIAGRAM):   _8_1 = -1;
1155012   +            _8_2 = -1;
MPRINT(EM_DIAGRAM):   _8_2 = -1;
1155013   +            _8_3 = -1;
MPRINT(EM_DIAGRAM):   _8_3 = -1;
1155014   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1155015   +         end;
MPRINT(EM_DIAGRAM):   end;
1155016   +      end;
MPRINT(EM_DIAGRAM):   end;
1155017   +   end;
MPRINT(EM_DIAGRAM):   end;
1155018   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1155019   +      _8_0 = .;
MPRINT(EM_DIAGRAM):   _8_0 = .;
1155020   +      _8_1 = .;
MPRINT(EM_DIAGRAM):   _8_1 = .;
1155021   +      _8_2 = .;
MPRINT(EM_DIAGRAM):   _8_2 = .;
1155022   +      _8_3 = .;
MPRINT(EM_DIAGRAM):   _8_3 = .;
1155023   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1155024   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1155025   +   end;
MPRINT(EM_DIAGRAM):   end;
1155026   +end;
MPRINT(EM_DIAGRAM):   end;
1155027   +
1155028   +*** If missing inputs, use averages;
MPRINT(EM_DIAGRAM):   *** If missing inputs, use averages;
1155029   +if _DM_BAD > 0 then do;
MPRINT(EM_DIAGRAM):   if _DM_BAD > 0 then do;
1155030   +   _P0 = 0.151221567;
MPRINT(EM_DIAGRAM):   _P0 = 0.151221567;
1155031   +   _P1 = 0.848778433;
MPRINT(EM_DIAGRAM):   _P1 = 0.848778433;
1155032   +   goto REG9DR1;
MPRINT(EM_DIAGRAM):   goto REG9DR1;
1155033   +end;
MPRINT(EM_DIAGRAM):   end;
1155034   +
1155035   +*** Compute Linear Predictor;
MPRINT(EM_DIAGRAM):   *** Compute Linear Predictor;
1155036   +drop _TEMP;
MPRINT(EM_DIAGRAM):   drop _TEMP;
1155037   +drop _LP0;
MPRINT(EM_DIAGRAM):   drop _LP0;
1155038   +_LP0 = 0;
MPRINT(EM_DIAGRAM):   _LP0 = 0;
1155039   +
1155040   +***  Effect: AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Effect: AcceptedCmp1 ;
1155041   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1155042   +_LP0 = _LP0 + (   -1.28114872833376) * _TEMP * _1_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.28114872833376) * _TEMP * _1_0;
1155043   +
1155044   +***  Effect: AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Effect: AcceptedCmp2 ;
1155045   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1155046   +_LP0 = _LP0 + (    -1.4871451186069) * _TEMP * _2_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.4871451186069) * _TEMP * _2_0;
1155047   +
1155048   +***  Effect: AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Effect: AcceptedCmp3 ;
1155049   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1155050   +_LP0 = _LP0 + (   -1.58721567367346) * _TEMP * _3_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.58721567367346) * _TEMP * _3_0;
1155051   +
1155052   +***  Effect: AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Effect: AcceptedCmp4 ;
1155053   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1155054   +_LP0 = _LP0 + (    -1.1573037622615) * _TEMP * _4_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.1573037622615) * _TEMP * _4_0;
1155055   +
1155056   +***  Effect: AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Effect: AcceptedCmp5 ;
1155057   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1155058   +_LP0 = _LP0 + (   -1.68835129992038) * _TEMP * _5_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.68835129992038) * _TEMP * _5_0;
1155059   +
1155060   +***  Effect: Income ;
MPRINT(EM_DIAGRAM):   *** Effect: Income ;
1155061   +_TEMP = Income ;
MPRINT(EM_DIAGRAM):   _TEMP = Income ;
1155062   +_LP0 = _LP0 + (    0.00006770818936 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00006770818936 * _TEMP);
1155063   +
1155064   +***  Effect: Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Effect: Marital_Status ;
1155065   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1155066   +_LP0 = _LP0 + (    0.18351716765826) * _TEMP * _8_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.18351716765826) * _TEMP * _8_0;
1155067   +_LP0 = _LP0 + (   -0.88993819943493) * _TEMP * _8_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.88993819943493) * _TEMP * _8_1;
1155068   +_LP0 = _LP0 + (    0.89971120865107) * _TEMP * _8_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.89971120865107) * _TEMP * _8_2;
1155069   +_LP0 = _LP0 + (   -0.96825171718714) * _TEMP * _8_3;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.96825171718714) * _TEMP * _8_3;
1155070   +
1155071   +***  Effect: MntFishProducts ;
MPRINT(EM_DIAGRAM):   *** Effect: MntFishProducts ;
1155072   +_TEMP = MntFishProducts ;
MPRINT(EM_DIAGRAM):   _TEMP = MntFishProducts ;
1155073   +_LP0 = _LP0 + (    -0.0053789406447 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.0053789406447 * _TEMP);
1155074   +
1155075   +***  Effect: MntFruits ;
MPRINT(EM_DIAGRAM):   *** Effect: MntFruits ;
1155076   +_TEMP = MntFruits ;
MPRINT(EM_DIAGRAM):   _TEMP = MntFruits ;
1155077   +_LP0 = _LP0 + (   -0.00810096702081 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.00810096702081 * _TEMP);
1155078   +
1155079   +***  Effect: MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Effect: MntMeatProducts ;
1155080   +_TEMP = MntMeatProducts ;
MPRINT(EM_DIAGRAM):   _TEMP = MntMeatProducts ;
1155081   +_LP0 = _LP0 + (    0.00876618054091 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00876618054091 * _TEMP);
1155082   +
1155083   +***  Effect: MntWines ;
MPRINT(EM_DIAGRAM):   *** Effect: MntWines ;
1155084   +_TEMP = MntWines ;
MPRINT(EM_DIAGRAM):   _TEMP = MntWines ;
1155085   +_LP0 = _LP0 + (   -0.00323708533956 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.00323708533956 * _TEMP);
1155086   +
1155087   +***  Effect: NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumCatalogPurchases ;
1155088   +_TEMP = NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumCatalogPurchases ;
1155089   +_LP0 = _LP0 + (    0.72583602627024 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.72583602627024 * _TEMP);
1155090   +
1155091   +***  Effect: NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumDealsPurchases ;
1155092   +_TEMP = NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumDealsPurchases ;
1155093   +_LP0 = _LP0 + (    0.71587738133808 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.71587738133808 * _TEMP);
1155094   +
1155095   +***  Effect: NumStorePurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumStorePurchases ;
1155096   +_TEMP = NumStorePurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumStorePurchases ;
1155097   +_LP0 = _LP0 + (   -0.38414846639641 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.38414846639641 * _TEMP);
1155098   +
1155099   +***  Effect: NumWebPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumWebPurchases ;
1155100   +_TEMP = NumWebPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumWebPurchases ;
1155101   +_LP0 = _LP0 + (   -0.39960732899531 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.39960732899531 * _TEMP);
1155102   +
1155103   +***  Effect: NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   *** Effect: NumWebVisitsMonth ;
1155104   +_TEMP = NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   _TEMP = NumWebVisitsMonth ;
1155105   +_LP0 = _LP0 + (    1.00690630599849 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.00690630599849 * _TEMP);
1155106   +
1155107   +***  Effect: Recency ;
MPRINT(EM_DIAGRAM):   *** Effect: Recency ;
1155108   +_TEMP = Recency ;
MPRINT(EM_DIAGRAM):   _TEMP = Recency ;
1155109   +_LP0 = _LP0 + (   -0.10368937560371 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.10368937560371 * _TEMP);
1155110   +
1155111   +***  Effect: Teenhome ;
MPRINT(EM_DIAGRAM):   *** Effect: Teenhome ;
1155112   +_TEMP = Teenhome ;
MPRINT(EM_DIAGRAM):   _TEMP = Teenhome ;
1155113   +_LP0 = _LP0 + (   -1.33387551959166 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.33387551959166 * _TEMP);
1155114   +
1155115   +*** Naive Posterior Probabilities;
MPRINT(EM_DIAGRAM):   *** Naive Posterior Probabilities;
1155116   +drop _MAXP _IY _P0 _P1;
MPRINT(EM_DIAGRAM):   drop _MAXP _IY _P0 _P1;
1155117   +_TEMP =    -1.29156803352583 + _LP0;
MPRINT(EM_DIAGRAM):   _TEMP = -1.29156803352583 + _LP0;
1155118   +if (_TEMP < 0) then do;
MPRINT(EM_DIAGRAM):   if (_TEMP < 0) then do;
1155119   +   _TEMP = exp(_TEMP);
MPRINT(EM_DIAGRAM):   _TEMP = exp(_TEMP);
1155120   +   _P0 = _TEMP / (1 + _TEMP);
MPRINT(EM_DIAGRAM):   _P0 = _TEMP / (1 + _TEMP);
1155121   +end;
MPRINT(EM_DIAGRAM):   end;
1155122   +else _P0 = 1 / (1 + exp(-_TEMP));
MPRINT(EM_DIAGRAM):   else _P0 = 1 / (1 + exp(-_TEMP));
1155123   +_P1 = 1.0 - _P0;
MPRINT(EM_DIAGRAM):   _P1 = 1.0 - _P0;
1155124   +
1155125   +REG9DR1:
1155126   +
1155127   +*** Residuals;
MPRINT(EM_DIAGRAM):   REG9DR1: *** Residuals;
1155128   +if (_Y = .) then do;
MPRINT(EM_DIAGRAM):   if (_Y = .) then do;
1155129   +   R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
1155130   +   R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
1155131   +end;
MPRINT(EM_DIAGRAM):   end;
1155132   +else do;
MPRINT(EM_DIAGRAM):   else do;
1155133   +    label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1155134   +    label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1155135   +   R_DepVar1 = - _P0;
MPRINT(EM_DIAGRAM):   R_DepVar1 = - _P0;
1155136   +   R_DepVar0 = - _P1;
MPRINT(EM_DIAGRAM):   R_DepVar0 = - _P1;
1155137   +   select( _Y );
MPRINT(EM_DIAGRAM):   select( _Y );
1155138   +      when (0)  R_DepVar1 = R_DepVar1 + 1;
MPRINT(EM_DIAGRAM):   when (0) R_DepVar1 = R_DepVar1 + 1;
1155139   +      when (1)  R_DepVar0 = R_DepVar0 + 1;
MPRINT(EM_DIAGRAM):   when (1) R_DepVar0 = R_DepVar0 + 1;
1155140   +   end;
MPRINT(EM_DIAGRAM):   end;
1155141   +end;
MPRINT(EM_DIAGRAM):   end;
1155142   +
1155143   +*** Posterior Probabilities and Predicted Level;
MPRINT(EM_DIAGRAM):   *** Posterior Probabilities and Predicted Level;
1155144   +label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1155145   +label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1155146   +P_DepVar1 = _P0;
MPRINT(EM_DIAGRAM):   P_DepVar1 = _P0;
1155147   +_MAXP = _P0;
MPRINT(EM_DIAGRAM):   _MAXP = _P0;
1155148   +_IY = 1;
MPRINT(EM_DIAGRAM):   _IY = 1;
1155149   +P_DepVar0 = _P1;
MPRINT(EM_DIAGRAM):   P_DepVar0 = _P1;
1155150   +if (_P1 >  _MAXP + 1E-8) then do;
MPRINT(EM_DIAGRAM):   if (_P1 > _MAXP + 1E-8) then do;
1155151   +   _MAXP = _P1;
MPRINT(EM_DIAGRAM):   _MAXP = _P1;
1155152   +   _IY = 2;
MPRINT(EM_DIAGRAM):   _IY = 2;
1155153   +end;
MPRINT(EM_DIAGRAM):   end;
1155154   +I_DepVar = REG9DRF[_IY];
MPRINT(EM_DIAGRAM):   I_DepVar = REG9DRF[_IY];
1155155   +U_DepVar = REG9DRU[_IY];
MPRINT(EM_DIAGRAM):   U_DepVar = REG9DRU[_IY];
1155156   +
1155157   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1155158   +***** end scoring code for regression;
MPRINT(EM_DIAGRAM):   ***** end scoring code for regression;
1155159   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1155160   +* Renaming variables for Reg9;
MPRINT(EM_DIAGRAM):   * Renaming variables for Reg9;
1155161   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1155162   +* Renaming Posterior variables for Reg9;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Reg9;
1155163   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1155164   +drop Reg9_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Reg9_P_DepVar1;
1155165   +Reg9_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Reg9_P_DepVar1 = P_DepVar1;
1155166   +drop Reg9_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Reg9_P_DepVar0;
1155167   +Reg9_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Reg9_P_DepVar0 = P_DepVar0;
1155168   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1155169   +* Renaming _WARN_ variable for Reg9;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Reg9;
1155170   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1155171   +length Reg9_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Reg9_WARN_ $4;
1155172   +drop Reg9_WARN_;
MPRINT(EM_DIAGRAM):   drop Reg9_WARN_;
1155173   +Reg9_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Reg9_WARN_ = _WARN_;
1155174   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1155175   +* Ensmbl9: Scoring Code of model 2 of 10;
MPRINT(EM_DIAGRAM):   * Ensmbl9: Scoring Code of model 2 of 10;
1155176   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1155177   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1155178   +* TOOL: Decision Tree;
MPRINT(EM_DIAGRAM):   * TOOL: Decision Tree;
1155179   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1155180   +* NODE: Tree5;
MPRINT(EM_DIAGRAM):   * NODE: Tree5;
1155181   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1155182   +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
1155183   +******             DECISION TREE SCORING CODE             ******;
MPRINT(EM_DIAGRAM):   ****** DECISION TREE SCORING CODE ******;
1155184   +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
1155185   +
1155186   +******         LENGTHS OF NEW CHARACTER VARIABLES         ******;
MPRINT(EM_DIAGRAM):   ****** LENGTHS OF NEW CHARACTER VARIABLES ******;
1155187   +LENGTH F_DepVar  $   12;
MPRINT(EM_DIAGRAM):   LENGTH F_DepVar $ 12;
1155188   +LENGTH I_DepVar  $   12;
MPRINT(EM_DIAGRAM):   LENGTH I_DepVar $ 12;
1155189   +LENGTH _WARN_  $    4;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $ 4;
1155190   +
1155191   +******              LABELS FOR NEW VARIABLES              ******;
MPRINT(EM_DIAGRAM):   ****** LABELS FOR NEW VARIABLES ******;
1155192   +LABEL _NODE_  = 'Node' ;
MPRINT(EM_DIAGRAM):   LABEL _NODE_ = 'Node' ;
1155193   +LABEL _LEAF_  = 'Leaf' ;
MPRINT(EM_DIAGRAM):   LABEL _LEAF_ = 'Leaf' ;
1155194   +LABEL P_DepVar0  = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   LABEL P_DepVar0 = 'Predicted: DepVar=0' ;
1155195   +LABEL P_DepVar1  = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   LABEL P_DepVar1 = 'Predicted: DepVar=1' ;
1155196   +LABEL Q_DepVar0  = 'Unadjusted P: DepVar=0' ;
MPRINT(EM_DIAGRAM):   LABEL Q_DepVar0 = 'Unadjusted P: DepVar=0' ;
1155197   +LABEL Q_DepVar1  = 'Unadjusted P: DepVar=1' ;
MPRINT(EM_DIAGRAM):   LABEL Q_DepVar1 = 'Unadjusted P: DepVar=1' ;
1155198   +LABEL V_DepVar0  = 'Validated: DepVar=0' ;
MPRINT(EM_DIAGRAM):   LABEL V_DepVar0 = 'Validated: DepVar=0' ;
1155199   +LABEL V_DepVar1  = 'Validated: DepVar=1' ;
MPRINT(EM_DIAGRAM):   LABEL V_DepVar1 = 'Validated: DepVar=1' ;
1155200   +LABEL R_DepVar0  = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   LABEL R_DepVar0 = 'Residual: DepVar=0' ;
1155201   +LABEL R_DepVar1  = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   LABEL R_DepVar1 = 'Residual: DepVar=1' ;
1155202   +LABEL F_DepVar  = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   LABEL F_DepVar = 'From: DepVar' ;
1155203   +LABEL I_DepVar  = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   LABEL I_DepVar = 'Into: DepVar' ;
1155204   +LABEL U_DepVar  = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   LABEL U_DepVar = 'Unnormalized Into: DepVar' ;
1155205   +LABEL _WARN_  = 'Warnings' ;
MPRINT(EM_DIAGRAM):   LABEL _WARN_ = 'Warnings' ;
1155206   +
1155207   +
1155208   +******      TEMPORARY VARIABLES FOR FORMATTED VALUES      ******;
MPRINT(EM_DIAGRAM):   ****** TEMPORARY VARIABLES FOR FORMATTED VALUES ******;
1155209   +LENGTH _ARBFMT_12 $     12; DROP _ARBFMT_12;
MPRINT(EM_DIAGRAM):   LENGTH _ARBFMT_12 $ 12;
MPRINT(EM_DIAGRAM):   DROP _ARBFMT_12;
1155210   +_ARBFMT_12 = ' '; /* Initialize to avoid warning. */
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = ' ';
1155211   +LENGTH _ARBFMT_8 $      8; DROP _ARBFMT_8;
MPRINT(EM_DIAGRAM):   LENGTH _ARBFMT_8 $ 8;
MPRINT(EM_DIAGRAM):   DROP _ARBFMT_8;
1155212   +_ARBFMT_8 = ' '; /* Initialize to avoid warning. */
MPRINT(EM_DIAGRAM):   _ARBFMT_8 = ' ';
1155213   +
1155214   +
1155215   +_ARBFMT_12 = PUT( DepVar , BEST.);
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( DepVar , BEST.);
1155216   + %DMNORMCP( _ARBFMT_12, F_DepVar );
MPRINT(DMNORMCP):   F_DepVar=dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1155217   +
1155218   +******             ASSIGN OBSERVATION TO NODE             ******;
MPRINT(EM_DIAGRAM):   ****** ASSIGN OBSERVATION TO NODE ******;
1155219   +IF  NOT MISSING(Recency ) AND
1155220   +  Recency  <                 38.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(Recency ) AND Recency < 38.5 THEN DO;
1155221   +  IF  NOT MISSING(MntMeatProducts ) AND
1155222   +                   431.5 <= MntMeatProducts  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(MntMeatProducts ) AND 431.5 <= MntMeatProducts THEN DO;
1155223   +    IF  NOT MISSING(NumCatalogPurchases ) AND
1155224   +      NumCatalogPurchases  <                  5.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(NumCatalogPurchases ) AND NumCatalogPurchases < 5.5 THEN
DO;
1155225   +      _ARBFMT_8 = PUT( Marital_Status , $8.);
MPRINT(EM_DIAGRAM):   _ARBFMT_8 = PUT( Marital_Status , $8.);
1155226   +       %DMNORMIP( _ARBFMT_8);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
1155227   +      IF _ARBFMT_8 IN ('MARRIED' ,'TOGETHER' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_8 IN ('MARRIED' ,'TOGETHER' ) THEN DO;
1155228   +        _NODE_  =                   21;
MPRINT(EM_DIAGRAM):   _NODE_ = 21;
1155229   +        _LEAF_  =                    5;
MPRINT(EM_DIAGRAM):   _LEAF_ = 5;
1155230   +        P_DepVar0  =     0.71052631578947;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.71052631578947;
1155231   +        P_DepVar1  =     0.28947368421052;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.28947368421052;
1155232   +        Q_DepVar0  =     0.71052631578947;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.71052631578947;
1155233   +        Q_DepVar1  =     0.28947368421052;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.28947368421052;
1155234   +        V_DepVar0  =     0.66666666666666;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.66666666666666;
1155235   +        V_DepVar1  =     0.33333333333333;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.33333333333333;
1155236   +        I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
1155237   +        U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1155238   +        END;
MPRINT(EM_DIAGRAM):   END;
1155239   +      ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1155240   +        _NODE_  =                   20;
MPRINT(EM_DIAGRAM):   _NODE_ = 20;
1155241   +        _LEAF_  =                    4;
MPRINT(EM_DIAGRAM):   _LEAF_ = 4;
1155242   +        P_DepVar0  =     0.17647058823529;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.17647058823529;
1155243   +        P_DepVar1  =      0.8235294117647;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.8235294117647;
1155244   +        Q_DepVar0  =     0.17647058823529;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.17647058823529;
1155245   +        Q_DepVar1  =      0.8235294117647;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.8235294117647;
1155246   +        V_DepVar0  =                 0.25;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.25;
1155247   +        V_DepVar1  =                 0.75;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.75;
1155248   +        I_DepVar  = '1' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '1' ;
1155249   +        U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1155250   +        END;
MPRINT(EM_DIAGRAM):   END;
1155251   +      END;
MPRINT(EM_DIAGRAM):   END;
1155252   +    ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1155253   +      _NODE_  =                   11;
MPRINT(EM_DIAGRAM):   _NODE_ = 11;
1155254   +      _LEAF_  =                    6;
MPRINT(EM_DIAGRAM):   _LEAF_ = 6;
1155255   +      P_DepVar0  =     0.15730337078651;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.15730337078651;
1155256   +      P_DepVar1  =     0.84269662921348;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.84269662921348;
1155257   +      Q_DepVar0  =     0.15730337078651;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.15730337078651;
1155258   +      Q_DepVar1  =     0.84269662921348;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.84269662921348;
1155259   +      V_DepVar0  =     0.29411764705882;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.29411764705882;
1155260   +      V_DepVar1  =     0.70588235294117;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.70588235294117;
1155261   +      I_DepVar  = '1' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '1' ;
1155262   +      U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1155263   +      END;
MPRINT(EM_DIAGRAM):   END;
1155264   +    END;
MPRINT(EM_DIAGRAM):   END;
1155265   +  ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1155266   +    _ARBFMT_12 = PUT( AcceptedCmp3 , BEST.);
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( AcceptedCmp3 , BEST.);
1155267   +     %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
1155268   +    IF _ARBFMT_12 IN ('1' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('1' ) THEN DO;
1155269   +      IF  NOT MISSING(NumWebVisitsMonth ) AND
1155270   +        NumWebVisitsMonth  <                  5.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(NumWebVisitsMonth ) AND NumWebVisitsMonth < 5.5 THEN DO;
1155271   +        _NODE_  =                   16;
MPRINT(EM_DIAGRAM):   _NODE_ = 16;
1155272   +        _LEAF_  =                    1;
MPRINT(EM_DIAGRAM):   _LEAF_ = 1;
1155273   +        P_DepVar0  =     0.64705882352941;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.64705882352941;
1155274   +        P_DepVar1  =     0.35294117647058;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.35294117647058;
1155275   +        Q_DepVar0  =     0.64705882352941;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.64705882352941;
1155276   +        Q_DepVar1  =     0.35294117647058;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.35294117647058;
1155277   +        V_DepVar0  =     0.57142857142857;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.57142857142857;
1155278   +        V_DepVar1  =     0.42857142857142;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.42857142857142;
1155279   +        I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
1155280   +        U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1155281   +        END;
MPRINT(EM_DIAGRAM):   END;
1155282   +      ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1155283   +        _NODE_  =                   17;
MPRINT(EM_DIAGRAM):   _NODE_ = 17;
1155284   +        _LEAF_  =                    2;
MPRINT(EM_DIAGRAM):   _LEAF_ = 2;
1155285   +        P_DepVar0  =     0.17391304347826;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.17391304347826;
1155286   +        P_DepVar1  =     0.82608695652173;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.82608695652173;
1155287   +        Q_DepVar0  =     0.17391304347826;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.17391304347826;
1155288   +        Q_DepVar1  =     0.82608695652173;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.82608695652173;
1155289   +        V_DepVar0  =                 0.15;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.15;
1155290   +        V_DepVar1  =                 0.85;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.85;
1155291   +        I_DepVar  = '1' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '1' ;
1155292   +        U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1155293   +        END;
MPRINT(EM_DIAGRAM):   END;
1155294   +      END;
MPRINT(EM_DIAGRAM):   END;
1155295   +    ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1155296   +      _NODE_  =                    9;
MPRINT(EM_DIAGRAM):   _NODE_ = 9;
1155297   +      _LEAF_  =                    3;
MPRINT(EM_DIAGRAM):   _LEAF_ = 3;
1155298   +      P_DepVar0  =     0.82099596231493;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.82099596231493;
1155299   +      P_DepVar1  =     0.17900403768506;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.17900403768506;
1155300   +      Q_DepVar0  =     0.82099596231493;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.82099596231493;
1155301   +      Q_DepVar1  =     0.17900403768506;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.17900403768506;
1155302   +      V_DepVar0  =     0.80966767371601;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.80966767371601;
1155303   +      V_DepVar1  =     0.19033232628398;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.19033232628398;
1155304   +      I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
1155305   +      U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1155306   +      END;
MPRINT(EM_DIAGRAM):   END;
1155307   +    END;
MPRINT(EM_DIAGRAM):   END;
1155308   +  END;
MPRINT(EM_DIAGRAM):   END;
1155309   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1155310   +  _ARBFMT_12 = PUT( AcceptedCmp5 , BEST.);
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( AcceptedCmp5 , BEST.);
1155311   +   %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
1155312   +  IF _ARBFMT_12 IN ('1' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('1' ) THEN DO;
1155313   +    IF  NOT MISSING(MntWines ) AND
1155314   +      MntWines  <                412.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(MntWines ) AND MntWines < 412.5 THEN DO;
1155315   +      _NODE_  =                   12;
MPRINT(EM_DIAGRAM):   _NODE_ = 12;
1155316   +      _LEAF_  =                    7;
MPRINT(EM_DIAGRAM):   _LEAF_ = 7;
1155317   +      P_DepVar0  =     0.13333333333333;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.13333333333333;
1155318   +      P_DepVar1  =     0.86666666666666;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.86666666666666;
1155319   +      Q_DepVar0  =     0.13333333333333;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.13333333333333;
1155320   +      Q_DepVar1  =     0.86666666666666;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.86666666666666;
1155321   +      V_DepVar0  =     0.16666666666666;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.16666666666666;
1155322   +      V_DepVar1  =     0.83333333333333;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.83333333333333;
1155323   +      I_DepVar  = '1' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '1' ;
1155324   +      U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1155325   +      END;
MPRINT(EM_DIAGRAM):   END;
1155326   +    ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1155327   +      _NODE_  =                   13;
MPRINT(EM_DIAGRAM):   _NODE_ = 13;
1155328   +      _LEAF_  =                    8;
MPRINT(EM_DIAGRAM):   _LEAF_ = 8;
1155329   +      P_DepVar0  =     0.70833333333333;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.70833333333333;
1155330   +      P_DepVar1  =     0.29166666666666;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.29166666666666;
1155331   +      Q_DepVar0  =     0.70833333333333;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.70833333333333;
1155332   +      Q_DepVar1  =     0.29166666666666;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.29166666666666;
1155333   +      V_DepVar0  =     0.63461538461538;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.63461538461538;
1155334   +      V_DepVar1  =     0.36538461538461;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.36538461538461;
1155335   +      I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
1155336   +      U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1155337   +      END;
MPRINT(EM_DIAGRAM):   END;
1155338   +    END;
MPRINT(EM_DIAGRAM):   END;
1155339   +  ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1155340   +    _NODE_  =                    7;
MPRINT(EM_DIAGRAM):   _NODE_ = 7;
1155341   +    _LEAF_  =                    9;
MPRINT(EM_DIAGRAM):   _LEAF_ = 9;
1155342   +    P_DepVar0  =     0.96877380045696;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.96877380045696;
1155343   +    P_DepVar1  =     0.03122619954303;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.03122619954303;
1155344   +    Q_DepVar0  =     0.96877380045696;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.96877380045696;
1155345   +    Q_DepVar1  =     0.03122619954303;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.03122619954303;
1155346   +    V_DepVar0  =     0.96756756756756;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.96756756756756;
1155347   +    V_DepVar1  =     0.03243243243243;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.03243243243243;
1155348   +    I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
1155349   +    U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1155350   +    END;
MPRINT(EM_DIAGRAM):   END;
1155351   +  END;
MPRINT(EM_DIAGRAM):   END;
1155352   +
1155353   +*****  RESIDUALS R_ *************;
MPRINT(EM_DIAGRAM):   ***** RESIDUALS R_ *************;
1155354   +IF  F_DepVar  NE '0'
1155355   +AND F_DepVar  NE '1'  THEN DO;
MPRINT(EM_DIAGRAM):   IF F_DepVar NE '0' AND F_DepVar NE '1' THEN DO;
1155356   +        R_DepVar0  = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
1155357   +        R_DepVar1  = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
1155358   + END;
MPRINT(EM_DIAGRAM):   END;
1155359   + ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1155360   +       R_DepVar0  =  -P_DepVar0 ;
MPRINT(EM_DIAGRAM):   R_DepVar0 = -P_DepVar0 ;
1155361   +       R_DepVar1  =  -P_DepVar1 ;
MPRINT(EM_DIAGRAM):   R_DepVar1 = -P_DepVar1 ;
1155362   +       SELECT( F_DepVar  );
MPRINT(EM_DIAGRAM):   SELECT( F_DepVar );
1155363   +          WHEN( '0'  ) R_DepVar0  = R_DepVar0  +1;
MPRINT(EM_DIAGRAM):   WHEN( '0' ) R_DepVar0 = R_DepVar0 +1;
1155364   +          WHEN( '1'  ) R_DepVar1  = R_DepVar1  +1;
MPRINT(EM_DIAGRAM):   WHEN( '1' ) R_DepVar1 = R_DepVar1 +1;
1155365   +       END;
MPRINT(EM_DIAGRAM):   END;
1155366   + END;
MPRINT(EM_DIAGRAM):   END;
1155367   +
1155368   +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
1155369   +******          END OF DECISION TREE SCORING CODE         ******;
MPRINT(EM_DIAGRAM):   ****** END OF DECISION TREE SCORING CODE ******;
1155370   +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
1155371   +drop _LEAF_;
MPRINT(EM_DIAGRAM):   drop _LEAF_;
1155372   +* Renaming variables for Tree5;
MPRINT(EM_DIAGRAM):   * Renaming variables for Tree5;
1155373   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1155374   +* Renaming Posterior variables for Tree5;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Tree5;
1155375   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1155376   +drop Tree5_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Tree5_P_DepVar1;
1155377   +Tree5_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Tree5_P_DepVar1 = P_DepVar1;
1155378   +drop Tree5_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Tree5_P_DepVar0;
1155379   +Tree5_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Tree5_P_DepVar0 = P_DepVar0;
1155380   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1155381   +* Renaming _WARN_ variable for Tree5;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Tree5;
1155382   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1155383   +length Tree5_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Tree5_WARN_ $4;
1155384   +drop Tree5_WARN_;
MPRINT(EM_DIAGRAM):   drop Tree5_WARN_;
1155385   +Tree5_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Tree5_WARN_ = _WARN_;
1155386   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1155387   +* Ensmbl9: Scoring Code of model 3 of 10;
MPRINT(EM_DIAGRAM):   * Ensmbl9: Scoring Code of model 3 of 10;
1155388   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1155389   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1155390   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
1155391   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1155392   +* NODE: Neural33;
MPRINT(EM_DIAGRAM):   * NODE: Neural33;
1155393   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1155394   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1155395   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1155396   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1155397   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1155398   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1155399   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1155400   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1155401   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1155402   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1155403   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1155404   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1155405   +LENGTH _WARN_ $4
1155406   +      F_DepVar  $ 12
1155407   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1155408   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1155409   +
1155410   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1155411   +
1155412   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1155413   +
1155414   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1155415   +
1155416   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1155417   +
1155418   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1155419   +
1155420   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1155421   +
1155422   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1155423   +
1155424   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1155425   +
1155426   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1155427   +
1155428   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1155429   +
1155430   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1155431   +
1155432   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1155433   +
1155434   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1155435   +
1155436   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1155437   +
1155438   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1155439   +
1155440   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1155441   +
1155442   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1155443   +
1155444   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1155445   +
1155446   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1155447   +
1155448   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1155449   +
1155450   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1155451   +
1155452   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1155453   +
1155454   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1155455   +
1155456   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1155457   +
1155458   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1155459   +
1155460   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1155461   +
1155462   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1155463   +
1155464   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1155465   +
1155466   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1155467   +
1155468   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1155469   +
1155470   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1155471   +
1155472   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1155473   +
1155474   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1155475   +
1155476   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1155477   +
1155478   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1155479   +
1155480   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1155481   +
1155482   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1155483   +
1155484   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1155485   +
1155486   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1155487   +
1155488   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1155489   +
1155490   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1155491   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1155492   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1155493   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1155494   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1155495   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1155496   +end;
MPRINT(EM_DIAGRAM):   end;
1155497   +else do;
MPRINT(EM_DIAGRAM):   else do;
1155498   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1155499   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1155500   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1155501   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1155502   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1155503   +   end;
MPRINT(EM_DIAGRAM):   end;
1155504   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1155505   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1155506   +   end;
MPRINT(EM_DIAGRAM):   end;
1155507   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1155508   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1155509   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1155510   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1155511   +   end;
MPRINT(EM_DIAGRAM):   end;
1155512   +end;
MPRINT(EM_DIAGRAM):   end;
1155513   +
1155514   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1155515   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1155516   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1155517   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1155518   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1155519   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1155520   +end;
MPRINT(EM_DIAGRAM):   end;
1155521   +else do;
MPRINT(EM_DIAGRAM):   else do;
1155522   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1155523   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1155524   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1155525   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1155526   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1155527   +   end;
MPRINT(EM_DIAGRAM):   end;
1155528   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1155529   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1155530   +   end;
MPRINT(EM_DIAGRAM):   end;
1155531   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1155532   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1155533   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1155534   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1155535   +   end;
MPRINT(EM_DIAGRAM):   end;
1155536   +end;
MPRINT(EM_DIAGRAM):   end;
1155537   +
1155538   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1155539   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1155540   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1155541   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1155542   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1155543   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1155544   +end;
MPRINT(EM_DIAGRAM):   end;
1155545   +else do;
MPRINT(EM_DIAGRAM):   else do;
1155546   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1155547   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1155548   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1155549   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1155550   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1155551   +   end;
MPRINT(EM_DIAGRAM):   end;
1155552   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1155553   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1155554   +   end;
MPRINT(EM_DIAGRAM):   end;
1155555   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1155556   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1155557   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1155558   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1155559   +   end;
MPRINT(EM_DIAGRAM):   end;
1155560   +end;
MPRINT(EM_DIAGRAM):   end;
1155561   +
1155562   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1155563   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1155564   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1155565   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1155566   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1155567   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1155568   +end;
MPRINT(EM_DIAGRAM):   end;
1155569   +else do;
MPRINT(EM_DIAGRAM):   else do;
1155570   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1155571   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1155572   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1155573   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1155574   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1155575   +   end;
MPRINT(EM_DIAGRAM):   end;
1155576   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1155577   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1155578   +   end;
MPRINT(EM_DIAGRAM):   end;
1155579   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1155580   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1155581   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1155582   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1155583   +   end;
MPRINT(EM_DIAGRAM):   end;
1155584   +end;
MPRINT(EM_DIAGRAM):   end;
1155585   +
1155586   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1155587   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1155588   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1155589   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1155590   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1155591   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1155592   +end;
MPRINT(EM_DIAGRAM):   end;
1155593   +else do;
MPRINT(EM_DIAGRAM):   else do;
1155594   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1155595   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1155596   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1155597   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1155598   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1155599   +   end;
MPRINT(EM_DIAGRAM):   end;
1155600   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1155601   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1155602   +   end;
MPRINT(EM_DIAGRAM):   end;
1155603   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1155604   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1155605   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1155606   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1155607   +   end;
MPRINT(EM_DIAGRAM):   end;
1155608   +end;
MPRINT(EM_DIAGRAM):   end;
1155609   +
1155610   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1155611   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1155612   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1155613   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1155614   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1155615   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1155616   +end;
MPRINT(EM_DIAGRAM):   end;
1155617   +else do;
MPRINT(EM_DIAGRAM):   else do;
1155618   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1155619   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1155620   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1155621   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1155622   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1155623   +   end;
MPRINT(EM_DIAGRAM):   end;
1155624   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1155625   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1155626   +   end;
MPRINT(EM_DIAGRAM):   end;
1155627   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1155628   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1155629   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1155630   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1155631   +   end;
MPRINT(EM_DIAGRAM):   end;
1155632   +end;
MPRINT(EM_DIAGRAM):   end;
1155633   +
1155634   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1155635   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
1155636   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1155637   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1155638   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1155639   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1155640   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1155641   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1155642   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1155643   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1155644   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1155645   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1155646   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1155647   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1155648   +end;
MPRINT(EM_DIAGRAM):   end;
1155649   +else do;
MPRINT(EM_DIAGRAM):   else do;
1155650   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1155651   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1155652   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1155653   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1155654   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1155655   +   end;
MPRINT(EM_DIAGRAM):   end;
1155656   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1155657   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1155658   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1155659   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1155660   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1155661   +   end;
MPRINT(EM_DIAGRAM):   end;
1155662   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1155663   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1155664   +   end;
MPRINT(EM_DIAGRAM):   end;
1155665   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1155666   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1155667   +   end;
MPRINT(EM_DIAGRAM):   end;
1155668   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1155669   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1155670   +   end;
MPRINT(EM_DIAGRAM):   end;
1155671   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1155672   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1155673   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1155674   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1155675   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1155676   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1155677   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1155678   +   end;
MPRINT(EM_DIAGRAM):   end;
1155679   +end;
MPRINT(EM_DIAGRAM):   end;
1155680   +
1155681   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1155682   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1155683   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
1155684   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1155685   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1155686   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1155687   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1155688   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1155689   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1155690   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1155691   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1155692   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1155693   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1155694   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1155695   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1155696   +end;
MPRINT(EM_DIAGRAM):   end;
1155697   +else do;
MPRINT(EM_DIAGRAM):   else do;
1155698   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1155699   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1155700   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1155701   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1155702   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1155703   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1155704   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1155705   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1155706   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1155707   +         end;
MPRINT(EM_DIAGRAM):   end;
1155708   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1155709   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1155710   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1155711   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1155712   +            end;
MPRINT(EM_DIAGRAM):   end;
1155713   +         end;
MPRINT(EM_DIAGRAM):   end;
1155714   +      end;
MPRINT(EM_DIAGRAM):   end;
1155715   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1155716   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1155717   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1155718   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1155719   +         end;
MPRINT(EM_DIAGRAM):   end;
1155720   +      end;
MPRINT(EM_DIAGRAM):   end;
1155721   +   end;
MPRINT(EM_DIAGRAM):   end;
1155722   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1155723   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1155724   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1155725   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1155726   +      end;
MPRINT(EM_DIAGRAM):   end;
1155727   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1155728   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1155729   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1155730   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1155731   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1155732   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1155733   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1155734   +         end;
MPRINT(EM_DIAGRAM):   end;
1155735   +      end;
MPRINT(EM_DIAGRAM):   end;
1155736   +   end;
MPRINT(EM_DIAGRAM):   end;
1155737   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1155738   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1155739   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1155740   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1155741   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1155742   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1155743   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1155744   +   end;
MPRINT(EM_DIAGRAM):   end;
1155745   +end;
MPRINT(EM_DIAGRAM):   end;
1155746   +
1155747   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1155748   +*** Checking missing input Interval
1155749   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1155750   +
1155751   +IF NMISS(
1155752   +   Income ,
1155753   +   Kidhome ,
1155754   +   MntFishProducts ,
1155755   +   MntFruits ,
1155756   +   MntGoldProds ,
1155757   +   MntMeatProducts ,
1155758   +   MntSweetProducts ,
1155759   +   MntWines ,
1155760   +   NumCatalogPurchases ,
1155761   +   NumDealsPurchases ,
1155762   +   NumStorePurchases ,
1155763   +   NumWebPurchases ,
1155764   +   NumWebVisitsMonth ,
1155765   +   Recency ,
1155766   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Income , Kidhome , MntFishProducts , MntFruits , MntGoldProds
, MntMeatProducts , MntSweetProducts , MntWines , NumCatalogPurchases , NumDealsPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , Recency , Teenhome ) THEN DO;
1155767   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1155768   +
1155769   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1155770   +END;
MPRINT(EM_DIAGRAM):   END;
1155771   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1155772   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1155773   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1155774   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1155775   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1155776   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1155777   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1155778   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1155779   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1155780   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1155781   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1155782   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1155783   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1155784   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1155785   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1155786   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1155787   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1155788   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1155789   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1155790   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1155791   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1155792   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1155793   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1155794   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1155795   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1155796   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1155797   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1155798   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1155799   +END;
MPRINT(EM_DIAGRAM):   END;
1155800   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1155801   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1155802   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1155803   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1155804   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1155805   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1155806   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1155807   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1155808   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1155809   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1155810   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1155811   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1155812   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1155813   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
1155814   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1155815   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1155816   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1155817   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1155818   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1155819   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1155820   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1155821   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1155822   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1155823   +   ELSE S_NumCatalogPurchases
1155824   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1155825   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1155826   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1155827   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1155828   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1155829   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1155830   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1155831   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1155832   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1155833   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1155834   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1155835   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1155836   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1155837   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1155838   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1155839   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1155840   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1155841   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1155842   +END;
MPRINT(EM_DIAGRAM):   END;
1155843   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1155844   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1155845   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1155846   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1155847   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1155848   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1155849   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1155850   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1155851   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1155852   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1155853   +   H11  =     0.32435248899543 * S_Income  +    -0.47929849648429 * S_Kidhome
1155854   +          +     0.13364230231465 * S_MntFishProducts
1155855   +          +     -0.1386717864506 * S_MntFruits  +    -0.02769770185129 *
1155856   +        S_MntGoldProds  +    -0.29009812234724 * S_MntMeatProducts
1155857   +          +    -0.10871064476617 * S_MntSweetProducts
1155858   +          +     0.57858611197719 * S_MntWines  +    -0.26900817180555 *
1155859   +        S_NumCatalogPurchases  +    -0.39598523430317 * S_NumDealsPurchases
1155860   +          +     0.52835897625366 * S_NumStorePurchases
1155861   +          +     0.66297635444958 * S_NumWebPurchases
1155862   +          +    -0.31727971903608 * S_NumWebVisitsMonth
1155863   +          +     0.12789679291219 * S_Recency  +    -0.39270105014448 *
1155864   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.32435248899543 * S_Income + -0.47929849648429 * S_Kidhome +
0.13364230231465 * S_MntFishProducts + -0.1386717864506 * S_MntFruits + -0.02769770185129 *
S_MntGoldProds + -0.29009812234724 * S_MntMeatProducts + -0.10871064476617 *
S_MntSweetProducts + 0.57858611197719 * S_MntWines + -0.26900817180555 * S_NumCatalogPurchases
+ -0.39598523430317 * S_NumDealsPurchases + 0.52835897625366 * S_NumStorePurchases +
0.66297635444958 * S_NumWebPurchases + -0.31727971903608 * S_NumWebVisitsMonth +
0.12789679291219 * S_Recency + -0.39270105014448 * S_Teenhome ;
1155865   +   H12  =     0.37777254641249 * S_Income  +     0.79199857244438 * S_Kidhome
1155866   +          +     0.14748983783528 * S_MntFishProducts
1155867   +          +     0.14994032216514 * S_MntFruits  +     0.19147871752132 *
1155868   +        S_MntGoldProds  +     0.80535213270443 * S_MntMeatProducts
1155869   +          +     0.31095426478608 * S_MntSweetProducts
1155870   +          +     0.00471809437476 * S_MntWines  +     0.93716396534802 *
1155871   +        S_NumCatalogPurchases  +     0.86841248727948 * S_NumDealsPurchases
1155872   +          +     0.14387100066933 * S_NumStorePurchases
1155873   +          +    -0.01648998884133 * S_NumWebPurchases
1155874   +          +     -0.1378597161576 * S_NumWebVisitsMonth
1155875   +          +     0.15850653387379 * S_Recency  +     0.11714339614827 *
1155876   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = 0.37777254641249 * S_Income + 0.79199857244438 * S_Kidhome +
0.14748983783528 * S_MntFishProducts + 0.14994032216514 * S_MntFruits + 0.19147871752132 *
S_MntGoldProds + 0.80535213270443 * S_MntMeatProducts + 0.31095426478608 * S_MntSweetProducts
+ 0.00471809437476 * S_MntWines + 0.93716396534802 * S_NumCatalogPurchases + 0.86841248727948
* S_NumDealsPurchases + 0.14387100066933 * S_NumStorePurchases + -0.01648998884133 *
S_NumWebPurchases + -0.1378597161576 * S_NumWebVisitsMonth + 0.15850653387379 * S_Recency +
0.11714339614827 * S_Teenhome ;
1155877   +   H13  =    -0.31490756773649 * S_Income  +      0.4776214738577 * S_Kidhome
1155878   +          +     0.00774185404534 * S_MntFishProducts
1155879   +          +     0.22292845341942 * S_MntFruits  +     0.11636422687317 *
1155880   +        S_MntGoldProds  +    -0.45522230281212 * S_MntMeatProducts
1155881   +          +     0.28728624268589 * S_MntSweetProducts
1155882   +          +     0.74892928025295 * S_MntWines  +     -0.4834082773325 *
1155883   +        S_NumCatalogPurchases  +    -0.05055717315946 * S_NumDealsPurchases
1155884   +          +     0.56446566213593 * S_NumStorePurchases
1155885   +          +     0.44547549135846 * S_NumWebPurchases
1155886   +          +    -1.17648505936662 * S_NumWebVisitsMonth
1155887   +          +     1.30076355226685 * S_Recency  +     0.56217939635691 *
1155888   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = -0.31490756773649 * S_Income + 0.4776214738577 * S_Kidhome +
0.00774185404534 * S_MntFishProducts + 0.22292845341942 * S_MntFruits + 0.11636422687317 *
S_MntGoldProds + -0.45522230281212 * S_MntMeatProducts + 0.28728624268589 * S_MntSweetProducts
+ 0.74892928025295 * S_MntWines + -0.4834082773325 * S_NumCatalogPurchases + -0.05055717315946
* S_NumDealsPurchases + 0.56446566213593 * S_NumStorePurchases + 0.44547549135846 *
S_NumWebPurchases + -1.17648505936662 * S_NumWebVisitsMonth + 1.30076355226685 * S_Recency +
0.56217939635691 * S_Teenhome ;
1155889   +   H14  =    -0.40179905952719 * S_Income  +     0.16141565212918 * S_Kidhome
1155890   +          +     0.24665716882586 * S_MntFishProducts
1155891   +          +     0.03410629332469 * S_MntFruits  +     -0.1353295645077 *
1155892   +        S_MntGoldProds  +    -0.74661391150362 * S_MntMeatProducts
1155893   +          +    -0.10530818594736 * S_MntSweetProducts
1155894   +          +     0.30618479493194 * S_MntWines  +    -0.63426712804061 *
1155895   +        S_NumCatalogPurchases  +    -0.39486403699564 * S_NumDealsPurchases
1155896   +          +     0.36617016651032 * S_NumStorePurchases
1155897   +          +      0.3580014320946 * S_NumWebPurchases
1155898   +          +    -0.72597289213724 * S_NumWebVisitsMonth
1155899   +          +     0.93272927444012 * S_Recency  +     0.24531402677279 *
1155900   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = -0.40179905952719 * S_Income + 0.16141565212918 * S_Kidhome +
0.24665716882586 * S_MntFishProducts + 0.03410629332469 * S_MntFruits + -0.1353295645077 *
S_MntGoldProds + -0.74661391150362 * S_MntMeatProducts + -0.10530818594736 *
S_MntSweetProducts + 0.30618479493194 * S_MntWines + -0.63426712804061 * S_NumCatalogPurchases
+ -0.39486403699564 * S_NumDealsPurchases + 0.36617016651032 * S_NumStorePurchases +
0.3580014320946 * S_NumWebPurchases + -0.72597289213724 * S_NumWebVisitsMonth +
0.93272927444012 * S_Recency + 0.24531402677279 * S_Teenhome ;
1155901   +   H11  = H11  +     0.10790306691381 * AcceptedCmp10
1155902   +          +     0.36067546675468 * AcceptedCmp20  +     0.56838342781466 *
1155903   +        AcceptedCmp30  +     0.10138997954661 * AcceptedCmp40
1155904   +          +     0.23809874960179 * AcceptedCmp50  +     0.42164522965364 *
1155905   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.10790306691381 * AcceptedCmp10 + 0.36067546675468 *
AcceptedCmp20 + 0.56838342781466 * AcceptedCmp30 + 0.10138997954661 * AcceptedCmp40 +
0.23809874960179 * AcceptedCmp50 + 0.42164522965364 * Complain0 ;
1155906   +   H12  = H12  +    -0.10342435301564 * AcceptedCmp10
1155907   +          +     -0.1021625473908 * AcceptedCmp20  +    -0.17400073301804 *
1155908   +        AcceptedCmp30  +      0.1295257925186 * AcceptedCmp40
1155909   +          +    -0.17149939617806 * AcceptedCmp50  +    -0.11843709761825 *
1155910   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.10342435301564 * AcceptedCmp10 + -0.1021625473908 *
AcceptedCmp20 + -0.17400073301804 * AcceptedCmp30 + 0.1295257925186 * AcceptedCmp40 +
-0.17149939617806 * AcceptedCmp50 + -0.11843709761825 * Complain0 ;
1155911   +   H13  = H13  +      0.3357459370893 * AcceptedCmp10
1155912   +          +      -0.142120215863 * AcceptedCmp20  +     0.74265608697316 *
1155913   +        AcceptedCmp30  +     0.62493796040954 * AcceptedCmp40
1155914   +          +     0.60033091776267 * AcceptedCmp50  +    -0.70537393421868 *
1155915   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.3357459370893 * AcceptedCmp10 + -0.142120215863 *
AcceptedCmp20 + 0.74265608697316 * AcceptedCmp30 + 0.62493796040954 * AcceptedCmp40 +
0.60033091776267 * AcceptedCmp50 + -0.70537393421868 * Complain0 ;
1155916   +   H14  = H14  +     0.52427760948235 * AcceptedCmp10
1155917   +          +     0.50852083885302 * AcceptedCmp20  +     0.30116257238429 *
1155918   +        AcceptedCmp30  +     0.31213749631365 * AcceptedCmp40
1155919   +          +     0.49344261660916 * AcceptedCmp50  +    -0.18226921500969 *
1155920   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.52427760948235 * AcceptedCmp10 + 0.50852083885302 *
AcceptedCmp20 + 0.30116257238429 * AcceptedCmp30 + 0.31213749631365 * AcceptedCmp40 +
0.49344261660916 * AcceptedCmp50 + -0.18226921500969 * Complain0 ;
1155921   +   H11  = H11  +     0.04284090874847 * Education2n_Cycle
1155922   +          +    -0.30425860762413 * EducationBasic  +    -0.44977960705402 *
1155923   +        EducationGraduation  +     -0.0712759822621 * EducationMaster
1155924   +          +     0.05171313818048 * Marital_StatusDivorced
1155925   +          +    -0.79112453157624 * Marital_StatusMarried
1155926   +          +     0.89650138723512 * Marital_StatusSingle
1155927   +          +    -0.22094240412913 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.04284090874847 * Education2n_Cycle + -0.30425860762413 *
EducationBasic + -0.44977960705402 * EducationGraduation + -0.0712759822621 * EducationMaster
+ 0.05171313818048 * Marital_StatusDivorced + -0.79112453157624 * Marital_StatusMarried +
0.89650138723512 * Marital_StatusSingle + -0.22094240412913 * Marital_StatusTogether ;
1155928   +   H12  = H12  +    -0.32431446530898 * Education2n_Cycle
1155929   +          +     0.04651949620543 * EducationBasic  +     0.50250608857106 *
1155930   +        EducationGraduation  +     0.00514401910219 * EducationMaster
1155931   +          +     0.05091092042416 * Marital_StatusDivorced
1155932   +          +     0.86642985712339 * Marital_StatusMarried
1155933   +          +    -0.14148832619997 * Marital_StatusSingle
1155934   +          +     0.54248977280079 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.32431446530898 * Education2n_Cycle + 0.04651949620543 *
EducationBasic + 0.50250608857106 * EducationGraduation + 0.00514401910219 * EducationMaster +
0.05091092042416 * Marital_StatusDivorced + 0.86642985712339 * Marital_StatusMarried +
-0.14148832619997 * Marital_StatusSingle + 0.54248977280079 * Marital_StatusTogether ;
1155935   +   H13  = H13  +      0.0307333873684 * Education2n_Cycle
1155936   +          +     0.54778728297045 * EducationBasic  +    -0.56032296783121 *
1155937   +        EducationGraduation  +     0.26811389967146 * EducationMaster
1155938   +          +    -0.67787102917679 * Marital_StatusDivorced
1155939   +          +     1.38931504762816 * Marital_StatusMarried
1155940   +          +    -0.51164629287485 * Marital_StatusSingle
1155941   +          +     1.18856608313733 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.0307333873684 * Education2n_Cycle + 0.54778728297045 *
EducationBasic + -0.56032296783121 * EducationGraduation + 0.26811389967146 * EducationMaster
+ -0.67787102917679 * Marital_StatusDivorced + 1.38931504762816 * Marital_StatusMarried +
-0.51164629287485 * Marital_StatusSingle + 1.18856608313733 * Marital_StatusTogether ;
1155942   +   H14  = H14  +    -0.07575289231798 * Education2n_Cycle
1155943   +          +     0.20678548929493 * EducationBasic  +     0.15952949579281 *
1155944   +        EducationGraduation  +    -0.08313247341922 * EducationMaster
1155945   +          +     0.12658153975639 * Marital_StatusDivorced
1155946   +          +     0.20111721742791 * Marital_StatusMarried
1155947   +          +     -0.3521524791648 * Marital_StatusSingle
1155948   +          +     0.24908846940254 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.07575289231798 * Education2n_Cycle + 0.20678548929493 *
EducationBasic + 0.15952949579281 * EducationGraduation + -0.08313247341922 * EducationMaster
+ 0.12658153975639 * Marital_StatusDivorced + 0.20111721742791 * Marital_StatusMarried +
-0.3521524791648 * Marital_StatusSingle + 0.24908846940254 * Marital_StatusTogether ;
1155949   +   H11  =      0.8846003542153 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 0.8846003542153 + H11 ;
1155950   +   H12  =      1.7793661863354 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 1.7793661863354 + H12 ;
1155951   +   H13  =    -0.73914187312129 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.73914187312129 + H13 ;
1155952   +   H14  =    -0.28907220457418 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = -0.28907220457418 + H14 ;
1155953   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1155954   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1155955   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1155956   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1155957   +END;
MPRINT(EM_DIAGRAM):   END;
1155958   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1155959   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1155960   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1155961   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1155962   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1155963   +END;
MPRINT(EM_DIAGRAM):   END;
1155964   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1155965   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1155966   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1155967   +
1155968   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1155969   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1155970   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1155971   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1155972   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1155973   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1155974   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1155975   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1155976   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1155977   +end;
MPRINT(EM_DIAGRAM):   end;
1155978   +else do;
MPRINT(EM_DIAGRAM):   else do;
1155979   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1155980   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1155981   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1155982   +   end;
MPRINT(EM_DIAGRAM):   end;
1155983   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1155984   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1155985   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1155986   +   end;
MPRINT(EM_DIAGRAM):   end;
1155987   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1155988   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1155989   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1155990   +   end;
MPRINT(EM_DIAGRAM):   end;
1155991   +end;
MPRINT(EM_DIAGRAM):   end;
1155992   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1155993   +   P_DepVar1  =    -1.84303414221873 * H11  +     1.56062653143645 * H12
1155994   +          +     -3.0630784922123 * H13  +    -4.55573659919551 * H14 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.84303414221873 * H11 + 1.56062653143645 * H12 +
-3.0630784922123 * H13 + -4.55573659919551 * H14 ;
1155995   +   P_DepVar1  =    -1.51714888392638 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.51714888392638 + P_DepVar1 ;
1155996   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1155997   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1155998   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1155999   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1156000   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1156001   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1156002   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1156003   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1156004   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1156005   +END;
MPRINT(EM_DIAGRAM):   END;
1156006   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1156007   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1156008   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1156009   +END;
MPRINT(EM_DIAGRAM):   END;
1156010   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1156011   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1156012   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1156013   +END;
MPRINT(EM_DIAGRAM):   END;
1156014   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1156015   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1156016   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1156017   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1156018   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1156019   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1156020   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1156021   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1156022   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1156023   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1156024   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1156025   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1156026   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1156027   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1156028   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1156029   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1156030   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1156031   +END;
MPRINT(EM_DIAGRAM):   END;
1156032   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1156033   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1156034   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1156035   +drop
1156036   +H11
1156037   +H12
1156038   +H13
1156039   +H14
1156040   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 ;
1156041   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1156042   +* Renaming variables for Neural33;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural33;
1156043   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1156044   +* Renaming Posterior variables for Neural33;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural33;
1156045   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1156046   +drop Neural33_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural33_P_DepVar1;
1156047   +Neural33_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural33_P_DepVar1 = P_DepVar1;
1156048   +drop Neural33_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural33_P_DepVar0;
1156049   +Neural33_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural33_P_DepVar0 = P_DepVar0;
1156050   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1156051   +* Renaming _WARN_ variable for Neural33;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural33;
1156052   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1156053   +length Neural33_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural33_WARN_ $4;
1156054   +drop Neural33_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural33_WARN_;
1156055   +Neural33_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural33_WARN_ = _WARN_;
1156056   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1156057   +* Ensmbl9: Scoring Code of model 4 of 10;
MPRINT(EM_DIAGRAM):   * Ensmbl9: Scoring Code of model 4 of 10;
1156058   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1156059   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1156060   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
1156061   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1156062   +* NODE: Neural6;
MPRINT(EM_DIAGRAM):   * NODE: Neural6;
1156063   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1156064   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1156065   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1156066   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1156067   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1156068   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1156069   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1156070   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1156071   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1156072   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1156073   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1156074   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1156075   +LENGTH _WARN_ $4
1156076   +      F_DepVar  $ 12
1156077   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1156078   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1156079   +
1156080   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1156081   +
1156082   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1156083   +
1156084   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1156085   +
1156086   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1156087   +
1156088   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1156089   +
1156090   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1156091   +
1156092   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1156093   +
1156094   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1156095   +
1156096   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1156097   +
1156098   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1156099   +
1156100   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1156101   +
1156102   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1156103   +
1156104   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1156105   +
1156106   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1156107   +
1156108   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1156109   +
1156110   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1156111   +
1156112   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1156113   +
1156114   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1156115   +
1156116   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1156117   +
1156118   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1156119   +
1156120   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1156121   +
1156122   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1156123   +
1156124   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1156125   +
1156126   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1156127   +
1156128   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1156129   +
1156130   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1156131   +
1156132   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1156133   +
1156134   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1156135   +
1156136   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1156137   +
1156138   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1156139   +
1156140   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1156141   +
1156142   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1156143   +
1156144   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1156145   +
1156146   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1156147   +
1156148   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1156149   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1156150   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1156151   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1156152   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1156153   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1156154   +end;
MPRINT(EM_DIAGRAM):   end;
1156155   +else do;
MPRINT(EM_DIAGRAM):   else do;
1156156   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1156157   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1156158   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1156159   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1156160   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1156161   +   end;
MPRINT(EM_DIAGRAM):   end;
1156162   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1156163   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1156164   +   end;
MPRINT(EM_DIAGRAM):   end;
1156165   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1156166   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1156167   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1156168   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1156169   +   end;
MPRINT(EM_DIAGRAM):   end;
1156170   +end;
MPRINT(EM_DIAGRAM):   end;
1156171   +
1156172   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1156173   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1156174   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1156175   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1156176   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1156177   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1156178   +end;
MPRINT(EM_DIAGRAM):   end;
1156179   +else do;
MPRINT(EM_DIAGRAM):   else do;
1156180   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1156181   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1156182   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1156183   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1156184   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1156185   +   end;
MPRINT(EM_DIAGRAM):   end;
1156186   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1156187   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1156188   +   end;
MPRINT(EM_DIAGRAM):   end;
1156189   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1156190   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1156191   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1156192   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1156193   +   end;
MPRINT(EM_DIAGRAM):   end;
1156194   +end;
MPRINT(EM_DIAGRAM):   end;
1156195   +
1156196   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1156197   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1156198   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1156199   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1156200   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1156201   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1156202   +end;
MPRINT(EM_DIAGRAM):   end;
1156203   +else do;
MPRINT(EM_DIAGRAM):   else do;
1156204   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1156205   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1156206   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1156207   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1156208   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1156209   +   end;
MPRINT(EM_DIAGRAM):   end;
1156210   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1156211   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1156212   +   end;
MPRINT(EM_DIAGRAM):   end;
1156213   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1156214   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1156215   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1156216   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1156217   +   end;
MPRINT(EM_DIAGRAM):   end;
1156218   +end;
MPRINT(EM_DIAGRAM):   end;
1156219   +
1156220   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1156221   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1156222   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1156223   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1156224   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1156225   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1156226   +end;
MPRINT(EM_DIAGRAM):   end;
1156227   +else do;
MPRINT(EM_DIAGRAM):   else do;
1156228   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1156229   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1156230   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1156231   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1156232   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1156233   +   end;
MPRINT(EM_DIAGRAM):   end;
1156234   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1156235   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1156236   +   end;
MPRINT(EM_DIAGRAM):   end;
1156237   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1156238   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1156239   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1156240   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1156241   +   end;
MPRINT(EM_DIAGRAM):   end;
1156242   +end;
MPRINT(EM_DIAGRAM):   end;
1156243   +
1156244   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1156245   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1156246   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1156247   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1156248   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1156249   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1156250   +end;
MPRINT(EM_DIAGRAM):   end;
1156251   +else do;
MPRINT(EM_DIAGRAM):   else do;
1156252   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1156253   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1156254   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1156255   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1156256   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1156257   +   end;
MPRINT(EM_DIAGRAM):   end;
1156258   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1156259   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1156260   +   end;
MPRINT(EM_DIAGRAM):   end;
1156261   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1156262   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1156263   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1156264   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1156265   +   end;
MPRINT(EM_DIAGRAM):   end;
1156266   +end;
MPRINT(EM_DIAGRAM):   end;
1156267   +
1156268   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1156269   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1156270   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1156271   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1156272   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1156273   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1156274   +end;
MPRINT(EM_DIAGRAM):   end;
1156275   +else do;
MPRINT(EM_DIAGRAM):   else do;
1156276   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1156277   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1156278   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1156279   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1156280   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1156281   +   end;
MPRINT(EM_DIAGRAM):   end;
1156282   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1156283   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1156284   +   end;
MPRINT(EM_DIAGRAM):   end;
1156285   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1156286   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1156287   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1156288   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1156289   +   end;
MPRINT(EM_DIAGRAM):   end;
1156290   +end;
MPRINT(EM_DIAGRAM):   end;
1156291   +
1156292   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1156293   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
1156294   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1156295   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1156296   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1156297   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1156298   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1156299   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1156300   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1156301   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1156302   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1156303   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1156304   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1156305   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1156306   +end;
MPRINT(EM_DIAGRAM):   end;
1156307   +else do;
MPRINT(EM_DIAGRAM):   else do;
1156308   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1156309   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1156310   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1156311   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1156312   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1156313   +   end;
MPRINT(EM_DIAGRAM):   end;
1156314   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1156315   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1156316   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1156317   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1156318   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1156319   +   end;
MPRINT(EM_DIAGRAM):   end;
1156320   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1156321   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1156322   +   end;
MPRINT(EM_DIAGRAM):   end;
1156323   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1156324   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1156325   +   end;
MPRINT(EM_DIAGRAM):   end;
1156326   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1156327   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1156328   +   end;
MPRINT(EM_DIAGRAM):   end;
1156329   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1156330   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1156331   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1156332   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1156333   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1156334   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1156335   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1156336   +   end;
MPRINT(EM_DIAGRAM):   end;
1156337   +end;
MPRINT(EM_DIAGRAM):   end;
1156338   +
1156339   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1156340   +*** Checking missing input Interval
1156341   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1156342   +
1156343   +IF NMISS(
1156344   +   Income ,
1156345   +   Kidhome ,
1156346   +   Mnt ,
1156347   +   MntFishProducts ,
1156348   +   MntFruits ,
1156349   +   MntGoldProds ,
1156350   +   MntMeatProducts ,
1156351   +   MntSweetProducts ,
1156352   +   MntWines ,
1156353   +   NumCatalogPurchases ,
1156354   +   NumDealsPurchases ,
1156355   +   NumStorePurchases ,
1156356   +   NumWebPurchases ,
1156357   +   NumWebVisitsMonth ,
1156358   +   Recency ,
1156359   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Income , Kidhome , Mnt , MntFishProducts , MntFruits ,
MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , NumCatalogPurchases ,
NumDealsPurchases , NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , Recency ,
Teenhome ) THEN DO;
1156360   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1156361   +
1156362   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1156363   +END;
MPRINT(EM_DIAGRAM):   END;
1156364   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1156365   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1156366   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1156367   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1156368   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1156369   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1156370   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1156371   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1156372   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1156373   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1156374   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1156375   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1156376   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1156377   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1156378   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1156379   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1156380   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1156381   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1156382   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1156383   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1156384   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1156385   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1156386   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1156387   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1156388   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1156389   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1156390   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1156391   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1156392   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1156393   +END;
MPRINT(EM_DIAGRAM):   END;
1156394   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1156395   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1156396   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1156397   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1156398   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1156399   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1156400   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1156401   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1156402   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1156403   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1156404   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1156405   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1156406   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1156407   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1156408   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1156409   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
1156410   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1156411   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1156412   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1156413   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1156414   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1156415   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1156416   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1156417   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1156418   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1156419   +   ELSE S_NumCatalogPurchases
1156420   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1156421   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1156422   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1156423   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1156424   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1156425   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1156426   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1156427   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1156428   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1156429   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1156430   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1156431   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1156432   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1156433   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1156434   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1156435   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1156436   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1156437   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1156438   +END;
MPRINT(EM_DIAGRAM):   END;
1156439   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1156440   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1156441   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1156442   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1156443   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1156444   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1156445   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1156446   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1156447   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1156448   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1156449   +   H11  =    -0.03281362065647 * S_Income  +     0.00535686931174 * S_Kidhome
1156450   +          +    -0.01250948278467 * S_Mnt  +     0.00699255131323 *
1156451   +        S_MntFishProducts  +      0.0076699264859 * S_MntFruits
1156452   +          +    -0.00197175743075 * S_MntGoldProds  +    -0.03648519433733 *
1156453   +        S_MntMeatProducts  +     0.00505629880474 * S_MntSweetProducts
1156454   +          +     0.03058954226232 * S_MntWines  +     -0.0420799719311 *
1156455   +        S_NumCatalogPurchases  +    -0.02833732377257 * S_NumDealsPurchases
1156456   +          +     0.02790503880998 * S_NumStorePurchases
1156457   +          +     0.02520512526218 * S_NumWebPurchases
1156458   +          +    -0.05282883696993 * S_NumWebVisitsMonth
1156459   +          +     0.06563256173645 * S_Recency  +     0.01797337388273 *
1156460   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = -0.03281362065647 * S_Income + 0.00535686931174 * S_Kidhome +
-0.01250948278467 * S_Mnt + 0.00699255131323 * S_MntFishProducts + 0.0076699264859 *
S_MntFruits + -0.00197175743075 * S_MntGoldProds + -0.03648519433733 * S_MntMeatProducts +
0.00505629880474 * S_MntSweetProducts + 0.03058954226232 * S_MntWines + -0.0420799719311 *
S_NumCatalogPurchases + -0.02833732377257 * S_NumDealsPurchases + 0.02790503880998 *
S_NumStorePurchases + 0.02520512526218 * S_NumWebPurchases + -0.05282883696993 *
S_NumWebVisitsMonth + 0.06563256173645 * S_Recency + 0.01797337388273 * S_Teenhome ;
1156461   +   H11  = H11  +     0.02870149682732 * AcceptedCmp10
1156462   +          +     0.02798378890148 * AcceptedCmp20  +     0.03430631974463 *
1156463   +        AcceptedCmp30  +     0.02526418526905 * AcceptedCmp40
1156464   +          +     0.03693742114225 * AcceptedCmp50  +    -0.01462363843793 *
1156465   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.02870149682732 * AcceptedCmp10 + 0.02798378890148 *
AcceptedCmp20 + 0.03430631974463 * AcceptedCmp30 + 0.02526418526905 * AcceptedCmp40 +
0.03693742114225 * AcceptedCmp50 + -0.01462363843793 * Complain0 ;
1156466   +   H11  = H11  +    -0.00153701661702 * Education2n_Cycle
1156467   +          +      0.0085508617275 * EducationBasic  +    -0.00635980121817 *
1156468   +        EducationGraduation  +     0.00121093589886 * EducationMaster ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.00153701661702 * Education2n_Cycle + 0.0085508617275 *
EducationBasic + -0.00635980121817 * EducationGraduation + 0.00121093589886 * EducationMaster ;
1156469   +   H11  =    -0.10607308229024 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -0.10607308229024 + H11 ;
1156470   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1156471   +END;
MPRINT(EM_DIAGRAM):   END;
1156472   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1156473   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1156474   +END;
MPRINT(EM_DIAGRAM):   END;
1156475   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1156476   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1156477   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1156478   +
1156479   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1156480   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1156481   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1156482   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1156483   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1156484   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1156485   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1156486   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1156487   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1156488   +end;
MPRINT(EM_DIAGRAM):   end;
1156489   +else do;
MPRINT(EM_DIAGRAM):   else do;
1156490   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1156491   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1156492   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1156493   +   end;
MPRINT(EM_DIAGRAM):   end;
1156494   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1156495   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1156496   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1156497   +   end;
MPRINT(EM_DIAGRAM):   end;
1156498   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1156499   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1156500   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1156501   +   end;
MPRINT(EM_DIAGRAM):   end;
1156502   +end;
MPRINT(EM_DIAGRAM):   end;
1156503   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1156504   +   P_DepVar1  =    -42.7395691647266 * H11 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -42.7395691647266 * H11 ;
1156505   +   P_DepVar1  =    -4.33224364987351 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -4.33224364987351 + P_DepVar1 ;
1156506   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1156507   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1156508   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1156509   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1156510   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1156511   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1156512   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1156513   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1156514   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1156515   +END;
MPRINT(EM_DIAGRAM):   END;
1156516   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1156517   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1156518   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1156519   +END;
MPRINT(EM_DIAGRAM):   END;
1156520   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1156521   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1156522   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1156523   +END;
MPRINT(EM_DIAGRAM):   END;
1156524   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1156525   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1156526   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1156527   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1156528   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1156529   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1156530   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1156531   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1156532   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1156533   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1156534   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1156535   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1156536   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1156537   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1156538   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1156539   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1156540   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1156541   +END;
MPRINT(EM_DIAGRAM):   END;
1156542   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1156543   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1156544   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1156545   +drop
1156546   +H11
1156547   +;
MPRINT(EM_DIAGRAM):   drop H11 ;
1156548   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1156549   +* Renaming variables for Neural6;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural6;
1156550   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1156551   +* Renaming Posterior variables for Neural6;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural6;
1156552   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1156553   +drop Neural6_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural6_P_DepVar1;
1156554   +Neural6_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural6_P_DepVar1 = P_DepVar1;
1156555   +drop Neural6_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural6_P_DepVar0;
1156556   +Neural6_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural6_P_DepVar0 = P_DepVar0;
1156557   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1156558   +* Renaming _WARN_ variable for Neural6;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural6;
1156559   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1156560   +length Neural6_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural6_WARN_ $4;
1156561   +drop Neural6_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural6_WARN_;
1156562   +Neural6_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural6_WARN_ = _WARN_;
1156563   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1156564   +* Ensmbl9: Scoring Code of model 5 of 10;
MPRINT(EM_DIAGRAM):   * Ensmbl9: Scoring Code of model 5 of 10;
1156565   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1156566   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1156567   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
1156568   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1156569   +* NODE: Neural31;
MPRINT(EM_DIAGRAM):   * NODE: Neural31;
1156570   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1156571   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1156572   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1156573   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1156574   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1156575   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1156576   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1156577   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1156578   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1156579   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1156580   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1156581   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1156582   +LENGTH _WARN_ $4
1156583   +      F_DepVar  $ 12
1156584   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1156585   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1156586   +
1156587   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1156588   +
1156589   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1156590   +
1156591   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1156592   +
1156593   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1156594   +
1156595   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1156596   +
1156597   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1156598   +
1156599   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1156600   +
1156601   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1156602   +
1156603   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1156604   +
1156605   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1156606   +
1156607   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1156608   +
1156609   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1156610   +
1156611   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1156612   +
1156613   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1156614   +
1156615   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1156616   +
1156617   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1156618   +
1156619   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1156620   +
1156621   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1156622   +
1156623   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1156624   +
1156625   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1156626   +
1156627   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1156628   +
1156629   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1156630   +
1156631   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1156632   +
1156633   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1156634   +
1156635   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1156636   +
1156637   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1156638   +
1156639   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1156640   +
1156641   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1156642   +
1156643   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1156644   +
1156645   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1156646   +
1156647   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1156648   +
1156649   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1156650   +
1156651   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1156652   +
1156653   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1156654   +
1156655   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1156656   +
1156657   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1156658   +
1156659   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1156660   +
1156661   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1156662   +
1156663   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1156664   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1156665   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1156666   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1156667   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1156668   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1156669   +end;
MPRINT(EM_DIAGRAM):   end;
1156670   +else do;
MPRINT(EM_DIAGRAM):   else do;
1156671   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1156672   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1156673   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1156674   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1156675   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1156676   +   end;
MPRINT(EM_DIAGRAM):   end;
1156677   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1156678   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1156679   +   end;
MPRINT(EM_DIAGRAM):   end;
1156680   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1156681   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1156682   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1156683   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1156684   +   end;
MPRINT(EM_DIAGRAM):   end;
1156685   +end;
MPRINT(EM_DIAGRAM):   end;
1156686   +
1156687   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1156688   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1156689   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1156690   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1156691   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1156692   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1156693   +end;
MPRINT(EM_DIAGRAM):   end;
1156694   +else do;
MPRINT(EM_DIAGRAM):   else do;
1156695   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1156696   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1156697   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1156698   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1156699   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1156700   +   end;
MPRINT(EM_DIAGRAM):   end;
1156701   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1156702   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1156703   +   end;
MPRINT(EM_DIAGRAM):   end;
1156704   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1156705   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1156706   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1156707   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1156708   +   end;
MPRINT(EM_DIAGRAM):   end;
1156709   +end;
MPRINT(EM_DIAGRAM):   end;
1156710   +
1156711   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1156712   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1156713   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1156714   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1156715   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1156716   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1156717   +end;
MPRINT(EM_DIAGRAM):   end;
1156718   +else do;
MPRINT(EM_DIAGRAM):   else do;
1156719   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1156720   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1156721   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1156722   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1156723   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1156724   +   end;
MPRINT(EM_DIAGRAM):   end;
1156725   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1156726   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1156727   +   end;
MPRINT(EM_DIAGRAM):   end;
1156728   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1156729   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1156730   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1156731   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1156732   +   end;
MPRINT(EM_DIAGRAM):   end;
1156733   +end;
MPRINT(EM_DIAGRAM):   end;
1156734   +
1156735   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1156736   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1156737   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1156738   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1156739   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1156740   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1156741   +end;
MPRINT(EM_DIAGRAM):   end;
1156742   +else do;
MPRINT(EM_DIAGRAM):   else do;
1156743   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1156744   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1156745   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1156746   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1156747   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1156748   +   end;
MPRINT(EM_DIAGRAM):   end;
1156749   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1156750   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1156751   +   end;
MPRINT(EM_DIAGRAM):   end;
1156752   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1156753   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1156754   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1156755   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1156756   +   end;
MPRINT(EM_DIAGRAM):   end;
1156757   +end;
MPRINT(EM_DIAGRAM):   end;
1156758   +
1156759   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1156760   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1156761   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1156762   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1156763   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1156764   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1156765   +end;
MPRINT(EM_DIAGRAM):   end;
1156766   +else do;
MPRINT(EM_DIAGRAM):   else do;
1156767   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1156768   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1156769   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1156770   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1156771   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1156772   +   end;
MPRINT(EM_DIAGRAM):   end;
1156773   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1156774   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1156775   +   end;
MPRINT(EM_DIAGRAM):   end;
1156776   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1156777   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1156778   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1156779   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1156780   +   end;
MPRINT(EM_DIAGRAM):   end;
1156781   +end;
MPRINT(EM_DIAGRAM):   end;
1156782   +
1156783   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1156784   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1156785   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1156786   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1156787   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1156788   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1156789   +end;
MPRINT(EM_DIAGRAM):   end;
1156790   +else do;
MPRINT(EM_DIAGRAM):   else do;
1156791   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1156792   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1156793   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1156794   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1156795   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1156796   +   end;
MPRINT(EM_DIAGRAM):   end;
1156797   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1156798   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1156799   +   end;
MPRINT(EM_DIAGRAM):   end;
1156800   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1156801   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1156802   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1156803   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1156804   +   end;
MPRINT(EM_DIAGRAM):   end;
1156805   +end;
MPRINT(EM_DIAGRAM):   end;
1156806   +
1156807   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1156808   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
1156809   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1156810   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1156811   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1156812   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1156813   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1156814   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1156815   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1156816   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1156817   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1156818   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1156819   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1156820   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1156821   +end;
MPRINT(EM_DIAGRAM):   end;
1156822   +else do;
MPRINT(EM_DIAGRAM):   else do;
1156823   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1156824   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1156825   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1156826   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1156827   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1156828   +   end;
MPRINT(EM_DIAGRAM):   end;
1156829   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1156830   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1156831   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1156832   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1156833   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1156834   +   end;
MPRINT(EM_DIAGRAM):   end;
1156835   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1156836   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1156837   +   end;
MPRINT(EM_DIAGRAM):   end;
1156838   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1156839   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1156840   +   end;
MPRINT(EM_DIAGRAM):   end;
1156841   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1156842   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1156843   +   end;
MPRINT(EM_DIAGRAM):   end;
1156844   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1156845   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1156846   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1156847   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1156848   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1156849   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1156850   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1156851   +   end;
MPRINT(EM_DIAGRAM):   end;
1156852   +end;
MPRINT(EM_DIAGRAM):   end;
1156853   +
1156854   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1156855   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1156856   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
1156857   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1156858   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1156859   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1156860   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1156861   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1156862   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1156863   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1156864   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1156865   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1156866   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1156867   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1156868   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1156869   +end;
MPRINT(EM_DIAGRAM):   end;
1156870   +else do;
MPRINT(EM_DIAGRAM):   else do;
1156871   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1156872   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1156873   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1156874   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1156875   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1156876   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1156877   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1156878   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1156879   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1156880   +         end;
MPRINT(EM_DIAGRAM):   end;
1156881   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1156882   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1156883   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1156884   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1156885   +            end;
MPRINT(EM_DIAGRAM):   end;
1156886   +         end;
MPRINT(EM_DIAGRAM):   end;
1156887   +      end;
MPRINT(EM_DIAGRAM):   end;
1156888   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1156889   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1156890   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1156891   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1156892   +         end;
MPRINT(EM_DIAGRAM):   end;
1156893   +      end;
MPRINT(EM_DIAGRAM):   end;
1156894   +   end;
MPRINT(EM_DIAGRAM):   end;
1156895   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1156896   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1156897   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1156898   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1156899   +      end;
MPRINT(EM_DIAGRAM):   end;
1156900   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1156901   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1156902   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1156903   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1156904   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1156905   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1156906   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1156907   +         end;
MPRINT(EM_DIAGRAM):   end;
1156908   +      end;
MPRINT(EM_DIAGRAM):   end;
1156909   +   end;
MPRINT(EM_DIAGRAM):   end;
1156910   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1156911   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1156912   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1156913   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1156914   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1156915   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1156916   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1156917   +   end;
MPRINT(EM_DIAGRAM):   end;
1156918   +end;
MPRINT(EM_DIAGRAM):   end;
1156919   +
1156920   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1156921   +*** Checking missing input Interval
1156922   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1156923   +
1156924   +IF NMISS(
1156925   +   Income ,
1156926   +   Kidhome ,
1156927   +   MntFishProducts ,
1156928   +   MntFruits ,
1156929   +   MntGoldProds ,
1156930   +   MntMeatProducts ,
1156931   +   MntSweetProducts ,
1156932   +   MntWines ,
1156933   +   NumCatalogPurchases ,
1156934   +   NumDealsPurchases ,
1156935   +   NumStorePurchases ,
1156936   +   NumWebPurchases ,
1156937   +   NumWebVisitsMonth ,
1156938   +   Recency ,
1156939   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Income , Kidhome , MntFishProducts , MntFruits , MntGoldProds
, MntMeatProducts , MntSweetProducts , MntWines , NumCatalogPurchases , NumDealsPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , Recency , Teenhome ) THEN DO;
1156940   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1156941   +
1156942   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1156943   +END;
MPRINT(EM_DIAGRAM):   END;
1156944   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1156945   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1156946   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1156947   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1156948   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1156949   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1156950   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1156951   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1156952   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1156953   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1156954   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1156955   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1156956   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1156957   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1156958   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1156959   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1156960   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1156961   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1156962   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1156963   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1156964   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1156965   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1156966   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1156967   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1156968   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1156969   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1156970   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1156971   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1156972   +END;
MPRINT(EM_DIAGRAM):   END;
1156973   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1156974   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1156975   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1156976   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1156977   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1156978   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1156979   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1156980   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1156981   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1156982   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1156983   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1156984   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1156985   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1156986   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
1156987   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1156988   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1156989   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1156990   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1156991   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1156992   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1156993   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1156994   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1156995   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1156996   +   ELSE S_NumCatalogPurchases
1156997   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1156998   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1156999   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1157000   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1157001   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1157002   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1157003   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1157004   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1157005   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1157006   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1157007   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1157008   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1157009   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1157010   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1157011   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1157012   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1157013   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1157014   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1157015   +END;
MPRINT(EM_DIAGRAM):   END;
1157016   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1157017   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1157018   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1157019   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1157020   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1157021   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1157022   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1157023   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1157024   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1157025   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1157026   +   H11  =    -1.33502235588914 * S_Income  +     0.86914778071024 * S_Kidhome
1157027   +          +     0.06177226616611 * S_MntFishProducts
1157028   +          +     0.22465531888584 * S_MntFruits  +    -0.01216018017424 *
1157029   +        S_MntGoldProds  +    -0.10435601171346 * S_MntMeatProducts
1157030   +          +     0.19245635559754 * S_MntSweetProducts
1157031   +          +    -0.06473329764962 * S_MntWines  +    -0.40260570275107 *
1157032   +        S_NumCatalogPurchases  +    -0.01043435397255 * S_NumDealsPurchases
1157033   +          +    -0.35392759932805 * S_NumStorePurchases
1157034   +          +     -0.2443007642616 * S_NumWebPurchases
1157035   +          +    -0.72667572173837 * S_NumWebVisitsMonth
1157036   +          +     0.97336679863544 * S_Recency  +     0.72544205905496 *
1157037   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = -1.33502235588914 * S_Income + 0.86914778071024 * S_Kidhome +
0.06177226616611 * S_MntFishProducts + 0.22465531888584 * S_MntFruits + -0.01216018017424 *
S_MntGoldProds + -0.10435601171346 * S_MntMeatProducts + 0.19245635559754 * S_MntSweetProducts
+ -0.06473329764962 * S_MntWines + -0.40260570275107 * S_NumCatalogPurchases +
-0.01043435397255 * S_NumDealsPurchases + -0.35392759932805 * S_NumStorePurchases +
-0.2443007642616 * S_NumWebPurchases + -0.72667572173837 * S_NumWebVisitsMonth +
0.97336679863544 * S_Recency + 0.72544205905496 * S_Teenhome ;
1157038   +   H12  =    -0.09105644521483 * S_Income  +     0.01920168996111 * S_Kidhome
1157039   +          +     0.00012212205827 * S_MntFishProducts
1157040   +          +     0.00032664246198 * S_MntFruits  +    -0.02161363659377 *
1157041   +        S_MntGoldProds  +    -0.40917729724893 * S_MntMeatProducts
1157042   +          +     0.01459978689352 * S_MntSweetProducts
1157043   +          +     0.28732983017398 * S_MntWines  +    -0.26033282919423 *
1157044   +        S_NumCatalogPurchases  +      -0.306688498482 * S_NumDealsPurchases
1157045   +          +      0.4054643699817 * S_NumStorePurchases
1157046   +          +     0.27747327375374 * S_NumWebPurchases
1157047   +          +    -0.31325270852641 * S_NumWebVisitsMonth
1157048   +          +      0.3707065492652 * S_Recency  +     0.05681262835219 *
1157049   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -0.09105644521483 * S_Income + 0.01920168996111 * S_Kidhome +
0.00012212205827 * S_MntFishProducts + 0.00032664246198 * S_MntFruits + -0.02161363659377 *
S_MntGoldProds + -0.40917729724893 * S_MntMeatProducts + 0.01459978689352 * S_MntSweetProducts
+ 0.28732983017398 * S_MntWines + -0.26033282919423 * S_NumCatalogPurchases + -0.306688498482
* S_NumDealsPurchases + 0.4054643699817 * S_NumStorePurchases + 0.27747327375374 *
S_NumWebPurchases + -0.31325270852641 * S_NumWebVisitsMonth + 0.3707065492652 * S_Recency +
0.05681262835219 * S_Teenhome ;
1157050   +   H11  = H11  +     0.23904403737743 * AcceptedCmp10
1157051   +          +     0.12365860406863 * AcceptedCmp20  +     0.28547657706908 *
1157052   +        AcceptedCmp30  +     0.37587337003909 * AcceptedCmp40
1157053   +          +    -0.04113029526683 * AcceptedCmp50  +      0.2596440604013 *
1157054   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.23904403737743 * AcceptedCmp10 + 0.12365860406863 *
AcceptedCmp20 + 0.28547657706908 * AcceptedCmp30 + 0.37587337003909 * AcceptedCmp40 +
-0.04113029526683 * AcceptedCmp50 + 0.2596440604013 * Complain0 ;
1157055   +   H12  = H12  +     0.25336773034662 * AcceptedCmp10
1157056   +          +     0.39499004620022 * AcceptedCmp20  +     0.19852127214148 *
1157057   +        AcceptedCmp30  +     0.19215250383325 * AcceptedCmp40
1157058   +          +     0.27213364707939 * AcceptedCmp50  +    -0.00774901485124 *
1157059   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.25336773034662 * AcceptedCmp10 + 0.39499004620022 *
AcceptedCmp20 + 0.19852127214148 * AcceptedCmp30 + 0.19215250383325 * AcceptedCmp40 +
0.27213364707939 * AcceptedCmp50 + -0.00774901485124 * Complain0 ;
1157060   +   H11  = H11  +    -0.05263155952227 * Education2n_Cycle
1157061   +          +    -1.40124591386453 * EducationBasic  +     0.43501491332678 *
1157062   +        EducationGraduation  +     0.77305262508081 * EducationMaster
1157063   +          +    -0.43667846017683 * Marital_StatusDivorced
1157064   +          +     1.33507828005472 * Marital_StatusMarried
1157065   +          +    -0.75026283842664 * Marital_StatusSingle
1157066   +          +     0.84436594207558 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.05263155952227 * Education2n_Cycle + -1.40124591386453 *
EducationBasic + 0.43501491332678 * EducationGraduation + 0.77305262508081 * EducationMaster +
-0.43667846017683 * Marital_StatusDivorced + 1.33507828005472 * Marital_StatusMarried +
-0.75026283842664 * Marital_StatusSingle + 0.84436594207558 * Marital_StatusTogether ;
1157067   +   H12  = H12  +     0.08398432584098 * Education2n_Cycle
1157068   +          +     0.12375156883157 * EducationBasic  +     -0.0901891766073 *
1157069   +        EducationGraduation  +    -0.07691770257441 * EducationMaster
1157070   +          +    -0.03531690128173 * Marital_StatusDivorced
1157071   +          +    -0.04344171367809 * Marital_StatusMarried
1157072   +          +    -0.05137362653166 * Marital_StatusSingle
1157073   +          +    -0.01265518570667 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.08398432584098 * Education2n_Cycle + 0.12375156883157 *
EducationBasic + -0.0901891766073 * EducationGraduation + -0.07691770257441 * EducationMaster
+ -0.03531690128173 * Marital_StatusDivorced + -0.04344171367809 * Marital_StatusMarried +
-0.05137362653166 * Marital_StatusSingle + -0.01265518570667 * Marital_StatusTogether ;
1157074   +   H11  =     1.86846527977677 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 1.86846527977677 + H11 ;
1157075   +   H12  =    -0.42494263287735 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -0.42494263287735 + H12 ;
1157076   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1157077   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1157078   +END;
MPRINT(EM_DIAGRAM):   END;
1157079   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1157080   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1157081   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1157082   +END;
MPRINT(EM_DIAGRAM):   END;
1157083   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1157084   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1157085   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1157086   +
1157087   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1157088   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1157089   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1157090   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1157091   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1157092   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1157093   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1157094   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1157095   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1157096   +end;
MPRINT(EM_DIAGRAM):   end;
1157097   +else do;
MPRINT(EM_DIAGRAM):   else do;
1157098   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1157099   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1157100   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1157101   +   end;
MPRINT(EM_DIAGRAM):   end;
1157102   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1157103   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1157104   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1157105   +   end;
MPRINT(EM_DIAGRAM):   end;
1157106   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1157107   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1157108   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1157109   +   end;
MPRINT(EM_DIAGRAM):   end;
1157110   +end;
MPRINT(EM_DIAGRAM):   end;
1157111   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1157112   +   P_DepVar1  =    -5.43090515434696 * H11  +    -9.08673127131886 * H12 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -5.43090515434696 * H11 + -9.08673127131886 * H12 ;
1157113   +   P_DepVar1  =      2.7752946076831 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 2.7752946076831 + P_DepVar1 ;
1157114   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1157115   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1157116   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1157117   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1157118   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1157119   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1157120   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1157121   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1157122   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1157123   +END;
MPRINT(EM_DIAGRAM):   END;
1157124   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1157125   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1157126   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1157127   +END;
MPRINT(EM_DIAGRAM):   END;
1157128   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1157129   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1157130   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1157131   +END;
MPRINT(EM_DIAGRAM):   END;
1157132   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1157133   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1157134   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1157135   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1157136   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1157137   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1157138   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1157139   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1157140   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1157141   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1157142   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1157143   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1157144   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1157145   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1157146   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1157147   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1157148   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1157149   +END;
MPRINT(EM_DIAGRAM):   END;
1157150   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1157151   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1157152   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1157153   +drop
1157154   +H11
1157155   +H12
1157156   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 ;
1157157   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1157158   +* Renaming variables for Neural31;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural31;
1157159   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1157160   +* Renaming Posterior variables for Neural31;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural31;
1157161   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1157162   +drop Neural31_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural31_P_DepVar1;
1157163   +Neural31_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural31_P_DepVar1 = P_DepVar1;
1157164   +drop Neural31_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural31_P_DepVar0;
1157165   +Neural31_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural31_P_DepVar0 = P_DepVar0;
1157166   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1157167   +* Renaming _WARN_ variable for Neural31;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural31;
1157168   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1157169   +length Neural31_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural31_WARN_ $4;
1157170   +drop Neural31_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural31_WARN_;
1157171   +Neural31_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural31_WARN_ = _WARN_;
1157172   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1157173   +* Ensmbl9: Scoring Code of model 6 of 10;
MPRINT(EM_DIAGRAM):   * Ensmbl9: Scoring Code of model 6 of 10;
1157174   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1157175   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1157176   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
1157177   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1157178   +* NODE: Neural32;
MPRINT(EM_DIAGRAM):   * NODE: Neural32;
1157179   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1157180   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1157181   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1157182   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1157183   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1157184   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1157185   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1157186   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1157187   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1157188   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1157189   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1157190   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1157191   +LENGTH _WARN_ $4
1157192   +      F_DepVar  $ 12
1157193   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1157194   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1157195   +
1157196   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1157197   +
1157198   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1157199   +
1157200   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1157201   +
1157202   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1157203   +
1157204   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1157205   +
1157206   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1157207   +
1157208   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1157209   +
1157210   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1157211   +
1157212   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1157213   +
1157214   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1157215   +
1157216   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1157217   +
1157218   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1157219   +
1157220   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1157221   +
1157222   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1157223   +
1157224   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1157225   +
1157226   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1157227   +
1157228   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1157229   +
1157230   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1157231   +
1157232   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1157233   +
1157234   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1157235   +
1157236   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1157237   +
1157238   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1157239   +
1157240   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1157241   +
1157242   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1157243   +
1157244   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1157245   +
1157246   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1157247   +
1157248   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1157249   +
1157250   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1157251   +
1157252   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1157253   +
1157254   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1157255   +
1157256   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1157257   +
1157258   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1157259   +
1157260   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1157261   +
1157262   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1157263   +
1157264   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1157265   +
1157266   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1157267   +
1157268   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1157269   +
1157270   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1157271   +
1157272   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1157273   +
1157274   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1157275   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1157276   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1157277   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1157278   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1157279   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1157280   +end;
MPRINT(EM_DIAGRAM):   end;
1157281   +else do;
MPRINT(EM_DIAGRAM):   else do;
1157282   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1157283   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1157284   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1157285   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1157286   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1157287   +   end;
MPRINT(EM_DIAGRAM):   end;
1157288   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1157289   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1157290   +   end;
MPRINT(EM_DIAGRAM):   end;
1157291   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1157292   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1157293   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1157294   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1157295   +   end;
MPRINT(EM_DIAGRAM):   end;
1157296   +end;
MPRINT(EM_DIAGRAM):   end;
1157297   +
1157298   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1157299   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1157300   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1157301   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1157302   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1157303   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1157304   +end;
MPRINT(EM_DIAGRAM):   end;
1157305   +else do;
MPRINT(EM_DIAGRAM):   else do;
1157306   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1157307   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1157308   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1157309   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1157310   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1157311   +   end;
MPRINT(EM_DIAGRAM):   end;
1157312   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1157313   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1157314   +   end;
MPRINT(EM_DIAGRAM):   end;
1157315   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1157316   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1157317   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1157318   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1157319   +   end;
MPRINT(EM_DIAGRAM):   end;
1157320   +end;
MPRINT(EM_DIAGRAM):   end;
1157321   +
1157322   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1157323   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1157324   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1157325   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1157326   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1157327   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1157328   +end;
MPRINT(EM_DIAGRAM):   end;
1157329   +else do;
MPRINT(EM_DIAGRAM):   else do;
1157330   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1157331   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1157332   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1157333   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1157334   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1157335   +   end;
MPRINT(EM_DIAGRAM):   end;
1157336   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1157337   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1157338   +   end;
MPRINT(EM_DIAGRAM):   end;
1157339   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1157340   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1157341   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1157342   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1157343   +   end;
MPRINT(EM_DIAGRAM):   end;
1157344   +end;
MPRINT(EM_DIAGRAM):   end;
1157345   +
1157346   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1157347   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1157348   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1157349   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1157350   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1157351   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1157352   +end;
MPRINT(EM_DIAGRAM):   end;
1157353   +else do;
MPRINT(EM_DIAGRAM):   else do;
1157354   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1157355   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1157356   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1157357   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1157358   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1157359   +   end;
MPRINT(EM_DIAGRAM):   end;
1157360   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1157361   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1157362   +   end;
MPRINT(EM_DIAGRAM):   end;
1157363   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1157364   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1157365   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1157366   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1157367   +   end;
MPRINT(EM_DIAGRAM):   end;
1157368   +end;
MPRINT(EM_DIAGRAM):   end;
1157369   +
1157370   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1157371   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1157372   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1157373   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1157374   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1157375   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1157376   +end;
MPRINT(EM_DIAGRAM):   end;
1157377   +else do;
MPRINT(EM_DIAGRAM):   else do;
1157378   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1157379   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1157380   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1157381   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1157382   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1157383   +   end;
MPRINT(EM_DIAGRAM):   end;
1157384   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1157385   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1157386   +   end;
MPRINT(EM_DIAGRAM):   end;
1157387   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1157388   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1157389   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1157390   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1157391   +   end;
MPRINT(EM_DIAGRAM):   end;
1157392   +end;
MPRINT(EM_DIAGRAM):   end;
1157393   +
1157394   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1157395   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1157396   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1157397   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1157398   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1157399   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1157400   +end;
MPRINT(EM_DIAGRAM):   end;
1157401   +else do;
MPRINT(EM_DIAGRAM):   else do;
1157402   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1157403   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1157404   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1157405   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1157406   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1157407   +   end;
MPRINT(EM_DIAGRAM):   end;
1157408   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1157409   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1157410   +   end;
MPRINT(EM_DIAGRAM):   end;
1157411   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1157412   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1157413   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1157414   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1157415   +   end;
MPRINT(EM_DIAGRAM):   end;
1157416   +end;
MPRINT(EM_DIAGRAM):   end;
1157417   +
1157418   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1157419   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
1157420   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1157421   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1157422   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1157423   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1157424   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1157425   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1157426   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1157427   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1157428   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1157429   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1157430   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1157431   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1157432   +end;
MPRINT(EM_DIAGRAM):   end;
1157433   +else do;
MPRINT(EM_DIAGRAM):   else do;
1157434   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1157435   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1157436   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1157437   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1157438   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1157439   +   end;
MPRINT(EM_DIAGRAM):   end;
1157440   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1157441   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1157442   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1157443   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1157444   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1157445   +   end;
MPRINT(EM_DIAGRAM):   end;
1157446   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1157447   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1157448   +   end;
MPRINT(EM_DIAGRAM):   end;
1157449   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1157450   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1157451   +   end;
MPRINT(EM_DIAGRAM):   end;
1157452   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1157453   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1157454   +   end;
MPRINT(EM_DIAGRAM):   end;
1157455   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1157456   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1157457   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1157458   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1157459   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1157460   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1157461   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1157462   +   end;
MPRINT(EM_DIAGRAM):   end;
1157463   +end;
MPRINT(EM_DIAGRAM):   end;
1157464   +
1157465   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1157466   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1157467   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
1157468   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1157469   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1157470   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1157471   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1157472   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1157473   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1157474   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1157475   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1157476   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1157477   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1157478   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1157479   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1157480   +end;
MPRINT(EM_DIAGRAM):   end;
1157481   +else do;
MPRINT(EM_DIAGRAM):   else do;
1157482   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1157483   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1157484   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1157485   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1157486   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1157487   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1157488   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1157489   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1157490   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1157491   +         end;
MPRINT(EM_DIAGRAM):   end;
1157492   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1157493   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1157494   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1157495   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1157496   +            end;
MPRINT(EM_DIAGRAM):   end;
1157497   +         end;
MPRINT(EM_DIAGRAM):   end;
1157498   +      end;
MPRINT(EM_DIAGRAM):   end;
1157499   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1157500   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1157501   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1157502   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1157503   +         end;
MPRINT(EM_DIAGRAM):   end;
1157504   +      end;
MPRINT(EM_DIAGRAM):   end;
1157505   +   end;
MPRINT(EM_DIAGRAM):   end;
1157506   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1157507   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1157508   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1157509   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1157510   +      end;
MPRINT(EM_DIAGRAM):   end;
1157511   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1157512   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1157513   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1157514   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1157515   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1157516   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1157517   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1157518   +         end;
MPRINT(EM_DIAGRAM):   end;
1157519   +      end;
MPRINT(EM_DIAGRAM):   end;
1157520   +   end;
MPRINT(EM_DIAGRAM):   end;
1157521   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1157522   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1157523   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1157524   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1157525   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1157526   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1157527   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1157528   +   end;
MPRINT(EM_DIAGRAM):   end;
1157529   +end;
MPRINT(EM_DIAGRAM):   end;
1157530   +
1157531   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1157532   +*** Checking missing input Interval
1157533   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1157534   +
1157535   +IF NMISS(
1157536   +   Income ,
1157537   +   Kidhome ,
1157538   +   MntFishProducts ,
1157539   +   MntFruits ,
1157540   +   MntGoldProds ,
1157541   +   MntMeatProducts ,
1157542   +   MntSweetProducts ,
1157543   +   MntWines ,
1157544   +   NumCatalogPurchases ,
1157545   +   NumDealsPurchases ,
1157546   +   NumStorePurchases ,
1157547   +   NumWebPurchases ,
1157548   +   NumWebVisitsMonth ,
1157549   +   Recency ,
1157550   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Income , Kidhome , MntFishProducts , MntFruits , MntGoldProds
, MntMeatProducts , MntSweetProducts , MntWines , NumCatalogPurchases , NumDealsPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , Recency , Teenhome ) THEN DO;
1157551   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1157552   +
1157553   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1157554   +END;
MPRINT(EM_DIAGRAM):   END;
1157555   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1157556   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1157557   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1157558   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1157559   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1157560   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1157561   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1157562   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1157563   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1157564   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1157565   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1157566   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1157567   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1157568   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1157569   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1157570   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1157571   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1157572   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1157573   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1157574   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1157575   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1157576   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1157577   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1157578   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1157579   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1157580   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1157581   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1157582   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1157583   +END;
MPRINT(EM_DIAGRAM):   END;
1157584   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1157585   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1157586   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1157587   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1157588   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1157589   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1157590   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1157591   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1157592   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1157593   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1157594   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1157595   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1157596   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1157597   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
1157598   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1157599   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1157600   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1157601   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1157602   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1157603   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1157604   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1157605   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1157606   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1157607   +   ELSE S_NumCatalogPurchases
1157608   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1157609   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1157610   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1157611   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1157612   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1157613   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1157614   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1157615   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1157616   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1157617   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1157618   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1157619   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1157620   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1157621   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1157622   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1157623   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1157624   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1157625   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1157626   +END;
MPRINT(EM_DIAGRAM):   END;
1157627   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1157628   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1157629   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1157630   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1157631   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1157632   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1157633   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1157634   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1157635   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1157636   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1157637   +   H11  =     1.40261108800308 * S_Income  +     -0.8062097507842 * S_Kidhome
1157638   +          +    -0.12974862644982 * S_MntFishProducts
1157639   +          +     0.08065642800368 * S_MntFruits  +    -0.12102130003972 *
1157640   +        S_MntGoldProds  +     0.19226249622126 * S_MntMeatProducts
1157641   +          +    -0.12290326901613 * S_MntSweetProducts
1157642   +          +     0.07790241176978 * S_MntWines  +     0.36123042724896 *
1157643   +        S_NumCatalogPurchases  +    -0.01034406765754 * S_NumDealsPurchases
1157644   +          +     0.09738032540137 * S_NumStorePurchases
1157645   +          +     0.44459515215205 * S_NumWebPurchases
1157646   +          +      0.8471075994578 * S_NumWebVisitsMonth
1157647   +          +    -1.10667985160899 * S_Recency  +    -0.88509832868515 *
1157648   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 1.40261108800308 * S_Income + -0.8062097507842 * S_Kidhome +
-0.12974862644982 * S_MntFishProducts + 0.08065642800368 * S_MntFruits + -0.12102130003972 *
S_MntGoldProds + 0.19226249622126 * S_MntMeatProducts + -0.12290326901613 * S_MntSweetProducts
+ 0.07790241176978 * S_MntWines + 0.36123042724896 * S_NumCatalogPurchases + -0.01034406765754
* S_NumDealsPurchases + 0.09738032540137 * S_NumStorePurchases + 0.44459515215205 *
S_NumWebPurchases + 0.8471075994578 * S_NumWebVisitsMonth + -1.10667985160899 * S_Recency +
-0.88509832868515 * S_Teenhome ;
1157649   +   H12  =     0.51266936686642 * S_Income  +     0.26909433357851 * S_Kidhome
1157650   +          +     0.02406077596811 * S_MntFishProducts
1157651   +          +    -0.57443793453522 * S_MntFruits  +     0.36824731232149 *
1157652   +        S_MntGoldProds  +     0.40177289143061 * S_MntMeatProducts
1157653   +          +     -0.1147507059349 * S_MntSweetProducts
1157654   +          +    -0.66379351187459 * S_MntWines  +     1.33407347415468 *
1157655   +        S_NumCatalogPurchases  +     1.00633891197299 * S_NumDealsPurchases
1157656   +          +    -0.23920969262322 * S_NumStorePurchases
1157657   +          +     -0.6008837862932 * S_NumWebPurchases
1157658   +          +     0.26759743722885 * S_NumWebVisitsMonth
1157659   +          +    -0.42755419464125 * S_Recency  +    -0.14471776361394 *
1157660   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = 0.51266936686642 * S_Income + 0.26909433357851 * S_Kidhome +
0.02406077596811 * S_MntFishProducts + -0.57443793453522 * S_MntFruits + 0.36824731232149 *
S_MntGoldProds + 0.40177289143061 * S_MntMeatProducts + -0.1147507059349 * S_MntSweetProducts
+ -0.66379351187459 * S_MntWines + 1.33407347415468 * S_NumCatalogPurchases + 1.00633891197299
* S_NumDealsPurchases + -0.23920969262322 * S_NumStorePurchases + -0.6008837862932 *
S_NumWebPurchases + 0.26759743722885 * S_NumWebVisitsMonth + -0.42755419464125 * S_Recency +
-0.14471776361394 * S_Teenhome ;
1157661   +   H13  =    -0.19807308698832 * S_Income  +     0.25934675474849 * S_Kidhome
1157662   +          +     0.04398331533724 * S_MntFishProducts
1157663   +          +    -0.00090357598988 * S_MntFruits  +     0.05139545341773 *
1157664   +        S_MntGoldProds  +    -0.74617114336019 * S_MntMeatProducts
1157665   +          +     0.00552488718744 * S_MntSweetProducts
1157666   +          +     0.47194407197012 * S_MntWines  +    -0.35149551848487 *
1157667   +        S_NumCatalogPurchases  +    -0.30232522133093 * S_NumDealsPurchases
1157668   +          +     0.60058189155105 * S_NumStorePurchases
1157669   +          +     0.51423374855856 * S_NumWebPurchases
1157670   +          +     -0.9075304423321 * S_NumWebVisitsMonth
1157671   +          +     0.83597739226791 * S_Recency  +     0.15783202762709 *
1157672   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = -0.19807308698832 * S_Income + 0.25934675474849 * S_Kidhome +
0.04398331533724 * S_MntFishProducts + -0.00090357598988 * S_MntFruits + 0.05139545341773 *
S_MntGoldProds + -0.74617114336019 * S_MntMeatProducts + 0.00552488718744 * S_MntSweetProducts
+ 0.47194407197012 * S_MntWines + -0.35149551848487 * S_NumCatalogPurchases +
-0.30232522133093 * S_NumDealsPurchases + 0.60058189155105 * S_NumStorePurchases +
0.51423374855856 * S_NumWebPurchases + -0.9075304423321 * S_NumWebVisitsMonth +
0.83597739226791 * S_Recency + 0.15783202762709 * S_Teenhome ;
1157673   +   H11  = H11  +    -0.26274045665457 * AcceptedCmp10
1157674   +          +    -0.86105702939371 * AcceptedCmp20  +    -0.50476270558977 *
1157675   +        AcceptedCmp30  +    -0.84284126473343 * AcceptedCmp40
1157676   +          +     0.19764907691314 * AcceptedCmp50  +    -0.29305577412263 *
1157677   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.26274045665457 * AcceptedCmp10 + -0.86105702939371 *
AcceptedCmp20 + -0.50476270558977 * AcceptedCmp30 + -0.84284126473343 * AcceptedCmp40 +
0.19764907691314 * AcceptedCmp50 + -0.29305577412263 * Complain0 ;
1157678   +   H12  = H12  +    -0.27394139847883 * AcceptedCmp10
1157679   +          +    -0.14688750266104 * AcceptedCmp20  +    -0.27982299242327 *
1157680   +        AcceptedCmp30  +    -0.10465140408787 * AcceptedCmp40
1157681   +          +    -0.81681330244218 * AcceptedCmp50  +    -0.28152730217644 *
1157682   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.27394139847883 * AcceptedCmp10 + -0.14688750266104 *
AcceptedCmp20 + -0.27982299242327 * AcceptedCmp30 + -0.10465140408787 * AcceptedCmp40 +
-0.81681330244218 * AcceptedCmp50 + -0.28152730217644 * Complain0 ;
1157683   +   H13  = H13  +     0.42310780831005 * AcceptedCmp10
1157684   +          +     0.41337614261155 * AcceptedCmp20  +     0.41436520641821 *
1157685   +        AcceptedCmp30  +     0.08914989208239 * AcceptedCmp40
1157686   +          +     0.54013759697695 * AcceptedCmp50  +    -0.19478210268955 *
1157687   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.42310780831005 * AcceptedCmp10 + 0.41337614261155 *
AcceptedCmp20 + 0.41436520641821 * AcceptedCmp30 + 0.08914989208239 * AcceptedCmp40 +
0.54013759697695 * AcceptedCmp50 + -0.19478210268955 * Complain0 ;
1157688   +   H11  = H11  +     0.40331200702699 * Education2n_Cycle
1157689   +          +     0.17202421641945 * EducationBasic  +    -0.29654161092174 *
1157690   +        EducationGraduation  +     -0.4835104183635 * EducationMaster
1157691   +          +     0.52129580188513 * Marital_StatusDivorced
1157692   +          +     -1.5224490339553 * Marital_StatusMarried
1157693   +          +     1.05062906057771 * Marital_StatusSingle
1157694   +          +    -1.16420887937635 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.40331200702699 * Education2n_Cycle + 0.17202421641945 *
EducationBasic + -0.29654161092174 * EducationGraduation + -0.4835104183635 * EducationMaster
+ 0.52129580188513 * Marital_StatusDivorced + -1.5224490339553 * Marital_StatusMarried +
1.05062906057771 * Marital_StatusSingle + -1.16420887937635 * Marital_StatusTogether ;
1157695   +   H12  = H12  +     -0.3488928858263 * Education2n_Cycle
1157696   +          +     0.38279680594423 * EducationBasic  +     0.20376044836519 *
1157697   +        EducationGraduation  +     0.20697694670185 * EducationMaster
1157698   +          +    -0.14428158063317 * Marital_StatusDivorced
1157699   +          +     0.22396926143356 * Marital_StatusMarried
1157700   +          +    -0.12980854818876 * Marital_StatusSingle
1157701   +          +     0.32607015627906 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.3488928858263 * Education2n_Cycle + 0.38279680594423 *
EducationBasic + 0.20376044836519 * EducationGraduation + 0.20697694670185 * EducationMaster +
-0.14428158063317 * Marital_StatusDivorced + 0.22396926143356 * Marital_StatusMarried +
-0.12980854818876 * Marital_StatusSingle + 0.32607015627906 * Marital_StatusTogether ;
1157702   +   H13  = H13  +    -0.18351418824199 * Education2n_Cycle
1157703   +          +     0.53417952447263 * EducationBasic  +    -0.14333929289628 *
1157704   +        EducationGraduation  +     0.04513004774082 * EducationMaster
1157705   +          +    -0.25615797303064 * Marital_StatusDivorced
1157706   +          +     0.18825506199046 * Marital_StatusMarried
1157707   +          +    -0.24607556819871 * Marital_StatusSingle
1157708   +          +     0.29531673844201 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.18351418824199 * Education2n_Cycle + 0.53417952447263 *
EducationBasic + -0.14333929289628 * EducationGraduation + 0.04513004774082 * EducationMaster
+ -0.25615797303064 * Marital_StatusDivorced + 0.18825506199046 * Marital_StatusMarried +
-0.24607556819871 * Marital_StatusSingle + 0.29531673844201 * Marital_StatusTogether ;
1157709   +   H11  =    -1.29289362679377 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -1.29289362679377 + H11 ;
1157710   +   H12  =     0.88724419151235 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.88724419151235 + H12 ;
1157711   +   H13  =    -0.51194544699467 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.51194544699467 + H13 ;
1157712   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1157713   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1157714   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1157715   +END;
MPRINT(EM_DIAGRAM):   END;
1157716   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1157717   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1157718   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1157719   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1157720   +END;
MPRINT(EM_DIAGRAM):   END;
1157721   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1157722   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1157723   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1157724   +
1157725   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1157726   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1157727   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1157728   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1157729   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1157730   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1157731   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1157732   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1157733   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1157734   +end;
MPRINT(EM_DIAGRAM):   end;
1157735   +else do;
MPRINT(EM_DIAGRAM):   else do;
1157736   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1157737   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1157738   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1157739   +   end;
MPRINT(EM_DIAGRAM):   end;
1157740   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1157741   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1157742   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1157743   +   end;
MPRINT(EM_DIAGRAM):   end;
1157744   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1157745   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1157746   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1157747   +   end;
MPRINT(EM_DIAGRAM):   end;
1157748   +end;
MPRINT(EM_DIAGRAM):   end;
1157749   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1157750   +   P_DepVar1  =     4.44251020865882 * H11  +     2.67139161773156 * H12
1157751   +          +    -4.73549395111184 * H13 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 4.44251020865882 * H11 + 2.67139161773156 * H12 +
-4.73549395111184 * H13 ;
1157752   +   P_DepVar1  =     0.45492690116644 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.45492690116644 + P_DepVar1 ;
1157753   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1157754   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1157755   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1157756   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1157757   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1157758   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1157759   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1157760   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1157761   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1157762   +END;
MPRINT(EM_DIAGRAM):   END;
1157763   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1157764   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1157765   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1157766   +END;
MPRINT(EM_DIAGRAM):   END;
1157767   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1157768   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1157769   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1157770   +END;
MPRINT(EM_DIAGRAM):   END;
1157771   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1157772   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1157773   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1157774   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1157775   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1157776   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1157777   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1157778   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1157779   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1157780   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1157781   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1157782   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1157783   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1157784   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1157785   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1157786   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1157787   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1157788   +END;
MPRINT(EM_DIAGRAM):   END;
1157789   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1157790   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1157791   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1157792   +drop
1157793   +H11
1157794   +H12
1157795   +H13
1157796   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 ;
1157797   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1157798   +* Renaming variables for Neural32;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural32;
1157799   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1157800   +* Renaming Posterior variables for Neural32;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural32;
1157801   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1157802   +drop Neural32_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural32_P_DepVar1;
1157803   +Neural32_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural32_P_DepVar1 = P_DepVar1;
1157804   +drop Neural32_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural32_P_DepVar0;
1157805   +Neural32_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural32_P_DepVar0 = P_DepVar0;
1157806   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1157807   +* Renaming _WARN_ variable for Neural32;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural32;
1157808   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1157809   +length Neural32_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural32_WARN_ $4;
1157810   +drop Neural32_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural32_WARN_;
1157811   +Neural32_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural32_WARN_ = _WARN_;
1157812   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1157813   +* Ensmbl9: Scoring Code of model 7 of 10;
MPRINT(EM_DIAGRAM):   * Ensmbl9: Scoring Code of model 7 of 10;
1157814   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1157815   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1157816   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
1157817   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1157818   +* NODE: Neural34;
MPRINT(EM_DIAGRAM):   * NODE: Neural34;
1157819   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1157820   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1157821   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1157822   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1157823   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1157824   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1157825   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1157826   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1157827   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1157828   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1157829   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1157830   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1157831   +LENGTH _WARN_ $4
1157832   +      F_DepVar  $ 12
1157833   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1157834   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1157835   +
1157836   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1157837   +
1157838   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1157839   +
1157840   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1157841   +
1157842   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1157843   +
1157844   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1157845   +
1157846   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1157847   +
1157848   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1157849   +
1157850   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1157851   +
1157852   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1157853   +
1157854   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1157855   +
1157856   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1157857   +
1157858   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1157859   +
1157860   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1157861   +
1157862   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1157863   +
1157864   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1157865   +
1157866   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1157867   +
1157868   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1157869   +
1157870   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1157871   +
1157872   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1157873   +
1157874   +      label Complain0 = 'Dummy: Complain=0' ;
The SAS System
 
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1157875   +
1157876   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1157877   +
1157878   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1157879   +
1157880   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1157881   +
1157882   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1157883   +
1157884   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1157885   +
1157886   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1157887   +
1157888   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1157889   +
1157890   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1157891   +
1157892   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1157893   +
1157894   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1157895   +
1157896   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1157897   +
1157898   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1157899   +
1157900   +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
1157901   +
1157902   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1157903   +
1157904   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1157905   +
1157906   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1157907   +
1157908   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1157909   +
1157910   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1157911   +
1157912   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1157913   +
1157914   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1157915   +
1157916   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1157917   +
1157918   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1157919   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1157920   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1157921   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1157922   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1157923   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1157924   +end;
MPRINT(EM_DIAGRAM):   end;
1157925   +else do;
MPRINT(EM_DIAGRAM):   else do;
1157926   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1157927   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1157928   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1157929   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1157930   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1157931   +   end;
MPRINT(EM_DIAGRAM):   end;
1157932   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1157933   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1157934   +   end;
MPRINT(EM_DIAGRAM):   end;
1157935   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1157936   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1157937   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1157938   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1157939   +   end;
MPRINT(EM_DIAGRAM):   end;
1157940   +end;
MPRINT(EM_DIAGRAM):   end;
1157941   +
1157942   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1157943   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1157944   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1157945   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1157946   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1157947   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1157948   +end;
MPRINT(EM_DIAGRAM):   end;
1157949   +else do;
MPRINT(EM_DIAGRAM):   else do;
1157950   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1157951   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1157952   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1157953   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1157954   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1157955   +   end;
MPRINT(EM_DIAGRAM):   end;
1157956   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1157957   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1157958   +   end;
MPRINT(EM_DIAGRAM):   end;
1157959   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1157960   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1157961   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1157962   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1157963   +   end;
MPRINT(EM_DIAGRAM):   end;
1157964   +end;
MPRINT(EM_DIAGRAM):   end;
1157965   +
1157966   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1157967   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1157968   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1157969   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1157970   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1157971   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1157972   +end;
MPRINT(EM_DIAGRAM):   end;
1157973   +else do;
MPRINT(EM_DIAGRAM):   else do;
1157974   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1157975   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1157976   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1157977   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1157978   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1157979   +   end;
MPRINT(EM_DIAGRAM):   end;
1157980   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1157981   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1157982   +   end;
MPRINT(EM_DIAGRAM):   end;
1157983   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1157984   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1157985   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1157986   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1157987   +   end;
MPRINT(EM_DIAGRAM):   end;
1157988   +end;
MPRINT(EM_DIAGRAM):   end;
1157989   +
1157990   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1157991   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1157992   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1157993   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1157994   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1157995   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1157996   +end;
MPRINT(EM_DIAGRAM):   end;
1157997   +else do;
MPRINT(EM_DIAGRAM):   else do;
1157998   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1157999   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1158000   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1158001   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1158002   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1158003   +   end;
MPRINT(EM_DIAGRAM):   end;
1158004   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1158005   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1158006   +   end;
MPRINT(EM_DIAGRAM):   end;
1158007   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1158008   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1158009   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1158010   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1158011   +   end;
MPRINT(EM_DIAGRAM):   end;
1158012   +end;
MPRINT(EM_DIAGRAM):   end;
1158013   +
1158014   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1158015   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1158016   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1158017   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1158018   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1158019   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1158020   +end;
MPRINT(EM_DIAGRAM):   end;
1158021   +else do;
MPRINT(EM_DIAGRAM):   else do;
1158022   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1158023   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1158024   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1158025   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1158026   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1158027   +   end;
MPRINT(EM_DIAGRAM):   end;
1158028   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1158029   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1158030   +   end;
MPRINT(EM_DIAGRAM):   end;
1158031   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1158032   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1158033   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1158034   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1158035   +   end;
MPRINT(EM_DIAGRAM):   end;
1158036   +end;
MPRINT(EM_DIAGRAM):   end;
1158037   +
1158038   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1158039   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1158040   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1158041   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1158042   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1158043   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1158044   +end;
MPRINT(EM_DIAGRAM):   end;
1158045   +else do;
MPRINT(EM_DIAGRAM):   else do;
1158046   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1158047   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1158048   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1158049   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1158050   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1158051   +   end;
MPRINT(EM_DIAGRAM):   end;
1158052   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1158053   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1158054   +   end;
MPRINT(EM_DIAGRAM):   end;
1158055   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1158056   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1158057   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1158058   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1158059   +   end;
MPRINT(EM_DIAGRAM):   end;
1158060   +end;
MPRINT(EM_DIAGRAM):   end;
1158061   +
1158062   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1158063   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
1158064   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1158065   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1158066   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1158067   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1158068   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1158069   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1158070   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1158071   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1158072   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1158073   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1158074   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1158075   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1158076   +end;
MPRINT(EM_DIAGRAM):   end;
1158077   +else do;
MPRINT(EM_DIAGRAM):   else do;
1158078   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1158079   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1158080   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1158081   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1158082   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1158083   +   end;
MPRINT(EM_DIAGRAM):   end;
1158084   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1158085   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1158086   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1158087   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1158088   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1158089   +   end;
MPRINT(EM_DIAGRAM):   end;
1158090   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1158091   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1158092   +   end;
MPRINT(EM_DIAGRAM):   end;
1158093   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1158094   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1158095   +   end;
MPRINT(EM_DIAGRAM):   end;
1158096   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1158097   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1158098   +   end;
MPRINT(EM_DIAGRAM):   end;
1158099   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1158100   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1158101   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1158102   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1158103   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1158104   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1158105   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1158106   +   end;
MPRINT(EM_DIAGRAM):   end;
1158107   +end;
MPRINT(EM_DIAGRAM):   end;
1158108   +
1158109   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1158110   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1158111   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
1158112   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1158113   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1158114   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1158115   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1158116   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1158117   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1158118   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1158119   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1158120   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1158121   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1158122   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1158123   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1158124   +end;
MPRINT(EM_DIAGRAM):   end;
1158125   +else do;
MPRINT(EM_DIAGRAM):   else do;
1158126   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1158127   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1158128   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1158129   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1158130   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1158131   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1158132   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1158133   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1158134   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1158135   +         end;
MPRINT(EM_DIAGRAM):   end;
1158136   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1158137   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1158138   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1158139   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1158140   +            end;
MPRINT(EM_DIAGRAM):   end;
1158141   +         end;
MPRINT(EM_DIAGRAM):   end;
1158142   +      end;
MPRINT(EM_DIAGRAM):   end;
1158143   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1158144   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1158145   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1158146   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1158147   +         end;
MPRINT(EM_DIAGRAM):   end;
1158148   +      end;
MPRINT(EM_DIAGRAM):   end;
1158149   +   end;
MPRINT(EM_DIAGRAM):   end;
1158150   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1158151   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1158152   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1158153   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1158154   +      end;
MPRINT(EM_DIAGRAM):   end;
1158155   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1158156   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1158157   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1158158   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1158159   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1158160   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1158161   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1158162   +         end;
MPRINT(EM_DIAGRAM):   end;
1158163   +      end;
MPRINT(EM_DIAGRAM):   end;
1158164   +   end;
MPRINT(EM_DIAGRAM):   end;
1158165   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1158166   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1158167   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1158168   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1158169   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1158170   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1158171   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1158172   +   end;
MPRINT(EM_DIAGRAM):   end;
1158173   +end;
MPRINT(EM_DIAGRAM):   end;
1158174   +
1158175   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1158176   +*** Checking missing input Interval
1158177   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1158178   +
1158179   +IF NMISS(
1158180   +   Income ,
1158181   +   Kidhome ,
1158182   +   MntFishProducts ,
1158183   +   MntFruits ,
1158184   +   MntGoldProds ,
1158185   +   MntMeatProducts ,
1158186   +   MntSweetProducts ,
1158187   +   MntWines ,
1158188   +   NumCatalogPurchases ,
1158189   +   NumDealsPurchases ,
1158190   +   NumStorePurchases ,
1158191   +   NumWebPurchases ,
1158192   +   NumWebVisitsMonth ,
1158193   +   Recency ,
1158194   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Income , Kidhome , MntFishProducts , MntFruits , MntGoldProds
, MntMeatProducts , MntSweetProducts , MntWines , NumCatalogPurchases , NumDealsPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , Recency , Teenhome ) THEN DO;
1158195   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1158196   +
1158197   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1158198   +END;
MPRINT(EM_DIAGRAM):   END;
1158199   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1158200   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1158201   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1158202   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1158203   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1158204   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1158205   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1158206   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1158207   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1158208   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1158209   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1158210   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1158211   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1158212   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1158213   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1158214   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1158215   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1158216   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1158217   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1158218   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1158219   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1158220   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1158221   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1158222   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1158223   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1158224   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1158225   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1158226   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1158227   +END;
MPRINT(EM_DIAGRAM):   END;
1158228   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1158229   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1158230   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1158231   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1158232   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1158233   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1158234   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1158235   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1158236   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1158237   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1158238   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1158239   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1158240   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1158241   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
1158242   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1158243   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1158244   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1158245   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1158246   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1158247   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1158248   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1158249   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1158250   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1158251   +   ELSE S_NumCatalogPurchases
1158252   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1158253   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1158254   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1158255   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1158256   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1158257   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1158258   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1158259   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1158260   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1158261   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1158262   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1158263   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1158264   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1158265   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1158266   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1158267   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1158268   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1158269   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1158270   +END;
MPRINT(EM_DIAGRAM):   END;
1158271   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1158272   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1158273   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1158274   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1158275   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1158276   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1158277   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1158278   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1158279   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1158280   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1158281   +   H11  =    -0.81572379016921 * S_Income  +    -0.07670946585348 * S_Kidhome
1158282   +          +     0.24367603598167 * S_MntFishProducts
1158283   +          +     0.19692980127348 * S_MntFruits  +    -0.03926738185333 *
1158284   +        S_MntGoldProds  +    -0.20900804333353 * S_MntMeatProducts
1158285   +          +     0.34054806441484 * S_MntSweetProducts
1158286   +          +     0.65956211369383 * S_MntWines  +    -0.95375334578522 *
1158287   +        S_NumCatalogPurchases  +    -0.73124740368567 * S_NumDealsPurchases
1158288   +          +     0.98942946974575 * S_NumStorePurchases
1158289   +          +     0.89701206630103 * S_NumWebPurchases
1158290   +          +    -1.22878611472154 * S_NumWebVisitsMonth
1158291   +          +     1.44981870978354 * S_Recency  +     0.47533125686411 *
1158292   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = -0.81572379016921 * S_Income + -0.07670946585348 * S_Kidhome +
0.24367603598167 * S_MntFishProducts + 0.19692980127348 * S_MntFruits + -0.03926738185333 *
S_MntGoldProds + -0.20900804333353 * S_MntMeatProducts + 0.34054806441484 * S_MntSweetProducts
+ 0.65956211369383 * S_MntWines + -0.95375334578522 * S_NumCatalogPurchases +
-0.73124740368567 * S_NumDealsPurchases + 0.98942946974575 * S_NumStorePurchases +
0.89701206630103 * S_NumWebPurchases + -1.22878611472154 * S_NumWebVisitsMonth +
1.44981870978354 * S_Recency + 0.47533125686411 * S_Teenhome ;
1158293   +   H12  =    -0.18875145195495 * S_Income  +     0.42230998482453 * S_Kidhome
1158294   +          +     0.16683404689723 * S_MntFishProducts
1158295   +          +     0.32072658929401 * S_MntFruits  +    -0.12341748032201 *
1158296   +        S_MntGoldProds  +    -1.56478754527255 * S_MntMeatProducts
1158297   +          +     0.20389084548968 * S_MntSweetProducts
1158298   +          +     0.95592931625509 * S_MntWines  +    -0.69996817353755 *
1158299   +        S_NumCatalogPurchases  +    -0.92709806328697 * S_NumDealsPurchases
1158300   +          +     1.27164659640366 * S_NumStorePurchases
1158301   +          +     1.02122194207802 * S_NumWebPurchases
1158302   +          +     -1.5111033436803 * S_NumWebVisitsMonth
1158303   +          +     1.63712814901544 * S_Recency  +     0.14205116840572 *
1158304   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -0.18875145195495 * S_Income + 0.42230998482453 * S_Kidhome +
0.16683404689723 * S_MntFishProducts + 0.32072658929401 * S_MntFruits + -0.12341748032201 *
S_MntGoldProds + -1.56478754527255 * S_MntMeatProducts + 0.20389084548968 * S_MntSweetProducts
+ 0.95592931625509 * S_MntWines + -0.69996817353755 * S_NumCatalogPurchases +
-0.92709806328697 * S_NumDealsPurchases + 1.27164659640366 * S_NumStorePurchases +
1.02122194207802 * S_NumWebPurchases + -1.5111033436803 * S_NumWebVisitsMonth +
1.63712814901544 * S_Recency + 0.14205116840572 * S_Teenhome ;
1158305   +   H13  =     1.02798705354163 * S_Income  +    -0.94411708781921 * S_Kidhome
1158306   +          +    -0.03345077166544 * S_MntFishProducts
1158307   +          +     0.00038440809349 * S_MntFruits  +    -0.05068379715712 *
1158308   +        S_MntGoldProds  +     1.00464705307582 * S_MntMeatProducts
1158309   +          +    -0.11948662500951 * S_MntSweetProducts
1158310   +          +    -0.52438819731252 * S_MntWines  +     0.98586904866769 *
1158311   +        S_NumCatalogPurchases  +     0.09015295226839 * S_NumDealsPurchases
1158312   +          +     0.22401914357376 * S_NumStorePurchases
1158313   +          +     0.04219877865976 * S_NumWebPurchases
1158314   +          +     1.21753334166036 * S_NumWebVisitsMonth
1158315   +          +    -1.33712212110081 * S_Recency  +    -0.47582856683655 *
1158316   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = 1.02798705354163 * S_Income + -0.94411708781921 * S_Kidhome +
-0.03345077166544 * S_MntFishProducts + 0.00038440809349 * S_MntFruits + -0.05068379715712 *
S_MntGoldProds + 1.00464705307582 * S_MntMeatProducts + -0.11948662500951 * S_MntSweetProducts
+ -0.52438819731252 * S_MntWines + 0.98586904866769 * S_NumCatalogPurchases + 0.09015295226839
* S_NumDealsPurchases + 0.22401914357376 * S_NumStorePurchases + 0.04219877865976 *
S_NumWebPurchases + 1.21753334166036 * S_NumWebVisitsMonth + -1.33712212110081 * S_Recency +
-0.47582856683655 * S_Teenhome ;
1158317   +   H14  =     0.91431429848834 * S_Income  +    -1.16289676557574 * S_Kidhome
1158318   +          +     0.31175257038578 * S_MntFishProducts
1158319   +          +     0.08080436076271 * S_MntFruits  +     0.15252288175851 *
1158320   +        S_MntGoldProds  +     0.21603546207654 * S_MntMeatProducts
1158321   +          +      0.0927253053382 * S_MntSweetProducts
1158322   +          +     0.05865323888304 * S_MntWines  +    -0.23426953728277 *
1158323   +        S_NumCatalogPurchases  +    -0.46451908614085 * S_NumDealsPurchases
1158324   +          +    -0.12667606349662 * S_NumStorePurchases
1158325   +          +     0.30148374518724 * S_NumWebPurchases
1158326   +          +     0.48934229701658 * S_NumWebVisitsMonth
1158327   +          +    -0.83754390793251 * S_Recency  +     -0.4576645462819 *
1158328   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = 0.91431429848834 * S_Income + -1.16289676557574 * S_Kidhome +
0.31175257038578 * S_MntFishProducts + 0.08080436076271 * S_MntFruits + 0.15252288175851 *
S_MntGoldProds + 0.21603546207654 * S_MntMeatProducts + 0.0927253053382 * S_MntSweetProducts +
0.05865323888304 * S_MntWines + -0.23426953728277 * S_NumCatalogPurchases + -0.46451908614085
* S_NumDealsPurchases + -0.12667606349662 * S_NumStorePurchases + 0.30148374518724 *
S_NumWebPurchases + 0.48934229701658 * S_NumWebVisitsMonth + -0.83754390793251 * S_Recency +
-0.4576645462819 * S_Teenhome ;
1158329   +   H15  =    -0.58161501095664 * S_Income  +     -1.0333658128614 * S_Kidhome
1158330   +          +     0.42646725119177 * S_MntFishProducts
1158331   +          +     -0.3264621401658 * S_MntFruits  +    -0.74616728524532 *
1158332   +        S_MntGoldProds  +    -0.97572068716712 * S_MntMeatProducts
1158333   +          +    -0.01493605582616 * S_MntSweetProducts
1158334   +          +      0.0311636632685 * S_MntWines  +    -1.68599903767191 *
1158335   +        S_NumCatalogPurchases  +    -1.25052648798307 * S_NumDealsPurchases
1158336   +          +     0.54256744091258 * S_NumStorePurchases
1158337   +          +     0.43065931458468 * S_NumWebPurchases
1158338   +          +      0.5935561420466 * S_NumWebVisitsMonth
1158339   +          +    -0.45183418369624 * S_Recency  +     0.19260512629844 *
1158340   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H15 = -0.58161501095664 * S_Income + -1.0333658128614 * S_Kidhome +
0.42646725119177 * S_MntFishProducts + -0.3264621401658 * S_MntFruits + -0.74616728524532 *
S_MntGoldProds + -0.97572068716712 * S_MntMeatProducts + -0.01493605582616 *
S_MntSweetProducts + 0.0311636632685 * S_MntWines + -1.68599903767191 * S_NumCatalogPurchases
+ -1.25052648798307 * S_NumDealsPurchases + 0.54256744091258 * S_NumStorePurchases +
0.43065931458468 * S_NumWebPurchases + 0.5935561420466 * S_NumWebVisitsMonth +
-0.45183418369624 * S_Recency + 0.19260512629844 * S_Teenhome ;
1158341   +   H11  = H11  +     0.61503950219838 * AcceptedCmp10
1158342   +          +     0.02945207091619 * AcceptedCmp20  +     0.99151950769472 *
1158343   +        AcceptedCmp30  +     1.08987060401718 * AcceptedCmp40
1158344   +          +     0.45427753773024 * AcceptedCmp50  +    -1.03533951966815 *
1158345   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.61503950219838 * AcceptedCmp10 + 0.02945207091619 *
AcceptedCmp20 + 0.99151950769472 * AcceptedCmp30 + 1.08987060401718 * AcceptedCmp40 +
0.45427753773024 * AcceptedCmp50 + -1.03533951966815 * Complain0 ;
1158346   +   H12  = H12  +     0.83823476190401 * AcceptedCmp10
1158347   +          +      1.0793719601418 * AcceptedCmp20  +     0.68538854946581 *
1158348   +        AcceptedCmp30  +     1.00297565893339 * AcceptedCmp40
1158349   +          +     0.24586379991786 * AcceptedCmp50  +     0.15471251255301 *
1158350   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.83823476190401 * AcceptedCmp10 + 1.0793719601418 *
AcceptedCmp20 + 0.68538854946581 * AcceptedCmp30 + 1.00297565893339 * AcceptedCmp40 +
0.24586379991786 * AcceptedCmp50 + 0.15471251255301 * Complain0 ;
1158351   +   H13  = H13  +    -0.41486094438907 * AcceptedCmp10
1158352   +          +    -0.76586628449839 * AcceptedCmp20  +    -0.59695459523693 *
1158353   +        AcceptedCmp30  +    -0.30262159911837 * AcceptedCmp40
1158354   +          +    -0.61141171124182 * AcceptedCmp50  +    -0.01086235188835 *
1158355   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.41486094438907 * AcceptedCmp10 + -0.76586628449839 *
AcceptedCmp20 + -0.59695459523693 * AcceptedCmp30 + -0.30262159911837 * AcceptedCmp40 +
-0.61141171124182 * AcceptedCmp50 + -0.01086235188835 * Complain0 ;
1158356   +   H14  = H14  +    -0.09662858884082 * AcceptedCmp10
1158357   +          +    -0.48515652524171 * AcceptedCmp20  +    -0.37421451374399 *
1158358   +        AcceptedCmp30  +    -0.52889523891817 * AcceptedCmp40
1158359   +          +    -0.73518448275357 * AcceptedCmp50  +    -0.36065830718672 *
1158360   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.09662858884082 * AcceptedCmp10 + -0.48515652524171 *
AcceptedCmp20 + -0.37421451374399 * AcceptedCmp30 + -0.52889523891817 * AcceptedCmp40 +
-0.73518448275357 * AcceptedCmp50 + -0.36065830718672 * Complain0 ;
1158361   +   H15  = H15  +      0.2985143092641 * AcceptedCmp10
1158362   +          +    -0.06881934778393 * AcceptedCmp20  +    -0.02609197044604 *
1158363   +        AcceptedCmp30  +    -0.79105657447885 * AcceptedCmp40
1158364   +          +    -0.02286855144948 * AcceptedCmp50  +     0.02884650192784 *
1158365   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.2985143092641 * AcceptedCmp10 + -0.06881934778393 *
AcceptedCmp20 + -0.02609197044604 * AcceptedCmp30 + -0.79105657447885 * AcceptedCmp40 +
-0.02286855144948 * AcceptedCmp50 + 0.02884650192784 * Complain0 ;
1158366   +   H11  = H11  +    -0.41169946146301 * Education2n_Cycle
1158367   +          +      0.8448273504441 * EducationBasic  +    -1.02497956377347 *
1158368   +        EducationGraduation  +     0.43998321745211 * EducationMaster
1158369   +          +    -0.85912688909911 * Marital_StatusDivorced
1158370   +          +     0.81561401465875 * Marital_StatusMarried
1158371   +          +    -0.58324403081542 * Marital_StatusSingle
1158372   +          +      0.9348017085106 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.41169946146301 * Education2n_Cycle + 0.8448273504441 *
EducationBasic + -1.02497956377347 * EducationGraduation + 0.43998321745211 * EducationMaster
+ -0.85912688909911 * Marital_StatusDivorced + 0.81561401465875 * Marital_StatusMarried +
-0.58324403081542 * Marital_StatusSingle + 0.9348017085106 * Marital_StatusTogether ;
1158373   +   H12  = H12  +     0.22828129841893 * Education2n_Cycle
1158374   +          +     0.47579227804033 * EducationBasic  +    -0.18165301263195 *
1158375   +        EducationGraduation  +    -0.16143431016405 * EducationMaster
1158376   +          +    -0.34784695867287 * Marital_StatusDivorced
1158377   +          +    -0.18194022182247 * Marital_StatusMarried
1158378   +          +    -0.10633185904164 * Marital_StatusSingle
1158379   +          +     0.13136125361628 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.22828129841893 * Education2n_Cycle + 0.47579227804033 *
EducationBasic + -0.18165301263195 * EducationGraduation + -0.16143431016405 * EducationMaster
+ -0.34784695867287 * Marital_StatusDivorced + -0.18194022182247 * Marital_StatusMarried +
-0.10633185904164 * Marital_StatusSingle + 0.13136125361628 * Marital_StatusTogether ;
1158380   +   H13  = H13  +     0.38705901043652 * Education2n_Cycle
1158381   +          +     0.19703188370189 * EducationBasic  +    -0.48062640599976 *
1158382   +        EducationGraduation  +     -0.3646621736273 * EducationMaster
1158383   +          +     0.61058752124466 * Marital_StatusDivorced
1158384   +          +    -1.38793808025141 * Marital_StatusMarried
1158385   +          +     1.10060737810944 * Marital_StatusSingle
1158386   +          +    -1.21250219018366 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.38705901043652 * Education2n_Cycle + 0.19703188370189 *
EducationBasic + -0.48062640599976 * EducationGraduation + -0.3646621736273 * EducationMaster
+ 0.61058752124466 * Marital_StatusDivorced + -1.38793808025141 * Marital_StatusMarried +
1.10060737810944 * Marital_StatusSingle + -1.21250219018366 * Marital_StatusTogether ;
1158387   +   H14  = H14  +    -0.20576658115662 * Education2n_Cycle
1158388   +          +    -0.09185472034614 * EducationBasic  +    -0.43674210064447 *
1158389   +        EducationGraduation  +    -0.18154054746298 * EducationMaster
1158390   +          +     0.11973800573581 * Marital_StatusDivorced
1158391   +          +      -0.294635257911 * Marital_StatusMarried
1158392   +          +    -0.05399659601172 * Marital_StatusSingle
1158393   +          +     0.34207780606239 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.20576658115662 * Education2n_Cycle + -0.09185472034614 *
EducationBasic + -0.43674210064447 * EducationGraduation + -0.18154054746298 * EducationMaster
+ 0.11973800573581 * Marital_StatusDivorced + -0.294635257911 * Marital_StatusMarried +
-0.05399659601172 * Marital_StatusSingle + 0.34207780606239 * Marital_StatusTogether ;
1158394   +   H15  = H15  +    -0.05553093684862 * Education2n_Cycle
1158395   +          +    -0.12898006732329 * EducationBasic  +    -0.16064118923518 *
1158396   +        EducationGraduation  +     -0.6431539624694 * EducationMaster
1158397   +          +     0.42838191659864 * Marital_StatusDivorced
1158398   +          +    -0.09150349181363 * Marital_StatusMarried
1158399   +          +    -0.33520164145276 * Marital_StatusSingle
1158400   +          +    -0.15253738713197 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + -0.05553093684862 * Education2n_Cycle + -0.12898006732329 *
EducationBasic + -0.16064118923518 * EducationGraduation + -0.6431539624694 * EducationMaster
+ 0.42838191659864 * Marital_StatusDivorced + -0.09150349181363 * Marital_StatusMarried +
-0.33520164145276 * Marital_StatusSingle + -0.15253738713197 * Marital_StatusTogether ;
1158401   +   H11  =     -1.5079478405973 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -1.5079478405973 + H11 ;
1158402   +   H12  =     0.03014958331993 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.03014958331993 + H12 ;
1158403   +   H13  =    -1.78098671165572 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -1.78098671165572 + H13 ;
1158404   +   H14  =     0.22179429743277 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 0.22179429743277 + H14 ;
1158405   +   H15  =    -2.06602107857898 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = -2.06602107857898 + H15 ;
1158406   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1158407   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1158408   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1158409   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1158410   +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
1158411   +END;
MPRINT(EM_DIAGRAM):   END;
1158412   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1158413   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1158414   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1158415   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1158416   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1158417   +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
1158418   +END;
MPRINT(EM_DIAGRAM):   END;
1158419   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1158420   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1158421   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1158422   +
1158423   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1158424   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1158425   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1158426   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1158427   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1158428   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1158429   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1158430   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1158431   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1158432   +end;
MPRINT(EM_DIAGRAM):   end;
1158433   +else do;
MPRINT(EM_DIAGRAM):   else do;
1158434   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1158435   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1158436   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1158437   +   end;
MPRINT(EM_DIAGRAM):   end;
1158438   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1158439   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1158440   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1158441   +   end;
MPRINT(EM_DIAGRAM):   end;
1158442   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1158443   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1158444   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1158445   +   end;
MPRINT(EM_DIAGRAM):   end;
1158446   +end;
MPRINT(EM_DIAGRAM):   end;
1158447   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1158448   +   P_DepVar1  =    -4.55666337815854 * H11  +    -4.04792544554995 * H12
1158449   +          +     4.56148127429284 * H13  +     2.36841344452371 * H14
1158450   +          +    -3.07371010011749 * H15 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -4.55666337815854 * H11 + -4.04792544554995 * H12 +
4.56148127429284 * H13 + 2.36841344452371 * H14 + -3.07371010011749 * H15 ;
1158451   +   P_DepVar1  =    -0.83283406236136 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.83283406236136 + P_DepVar1 ;
1158452   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1158453   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1158454   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1158455   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1158456   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1158457   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1158458   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1158459   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1158460   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1158461   +END;
MPRINT(EM_DIAGRAM):   END;
1158462   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1158463   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1158464   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1158465   +END;
MPRINT(EM_DIAGRAM):   END;
1158466   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1158467   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1158468   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1158469   +END;
MPRINT(EM_DIAGRAM):   END;
1158470   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1158471   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1158472   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1158473   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1158474   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1158475   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1158476   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1158477   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1158478   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1158479   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1158480   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1158481   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1158482   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1158483   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1158484   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1158485   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1158486   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1158487   +END;
MPRINT(EM_DIAGRAM):   END;
1158488   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1158489   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1158490   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1158491   +drop
1158492   +H11
1158493   +H12
1158494   +H13
1158495   +H14
1158496   +H15
1158497   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 ;
1158498   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1158499   +* Renaming variables for Neural34;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural34;
1158500   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1158501   +* Renaming Posterior variables for Neural34;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural34;
1158502   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1158503   +drop Neural34_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural34_P_DepVar1;
1158504   +Neural34_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural34_P_DepVar1 = P_DepVar1;
1158505   +drop Neural34_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural34_P_DepVar0;
1158506   +Neural34_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural34_P_DepVar0 = P_DepVar0;
1158507   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1158508   +* Renaming _WARN_ variable for Neural34;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural34;
1158509   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1158510   +length Neural34_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural34_WARN_ $4;
1158511   +drop Neural34_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural34_WARN_;
1158512   +Neural34_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural34_WARN_ = _WARN_;
1158513   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1158514   +* Ensmbl9: Scoring Code of model 8 of 10;
MPRINT(EM_DIAGRAM):   * Ensmbl9: Scoring Code of model 8 of 10;
1158515   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1158516   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1158517   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
1158518   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1158519   +* NODE: Neural35;
MPRINT(EM_DIAGRAM):   * NODE: Neural35;
1158520   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1158521   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1158522   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1158523   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1158524   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1158525   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1158526   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1158527   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1158528   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1158529   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1158530   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1158531   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1158532   +LENGTH _WARN_ $4
1158533   +      F_DepVar  $ 12
1158534   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1158535   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1158536   +
1158537   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1158538   +
1158539   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1158540   +
1158541   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1158542   +
1158543   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1158544   +
1158545   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1158546   +
1158547   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1158548   +
1158549   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1158550   +
1158551   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1158552   +
1158553   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1158554   +
1158555   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1158556   +
1158557   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1158558   +
1158559   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1158560   +
1158561   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1158562   +
1158563   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1158564   +
1158565   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1158566   +
1158567   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1158568   +
1158569   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1158570   +
1158571   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1158572   +
1158573   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1158574   +
1158575   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1158576   +
1158577   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1158578   +
1158579   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1158580   +
1158581   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1158582   +
1158583   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1158584   +
1158585   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1158586   +
1158587   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1158588   +
1158589   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1158590   +
1158591   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1158592   +
1158593   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1158594   +
1158595   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1158596   +
1158597   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1158598   +
1158599   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1158600   +
1158601   +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
1158602   +
1158603   +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
1158604   +
1158605   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1158606   +
1158607   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1158608   +
1158609   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1158610   +
1158611   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1158612   +
1158613   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1158614   +
1158615   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1158616   +
1158617   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1158618   +
1158619   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1158620   +
1158621   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1158622   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1158623   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1158624   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1158625   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1158626   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1158627   +end;
MPRINT(EM_DIAGRAM):   end;
1158628   +else do;
MPRINT(EM_DIAGRAM):   else do;
1158629   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1158630   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1158631   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1158632   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1158633   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1158634   +   end;
MPRINT(EM_DIAGRAM):   end;
1158635   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1158636   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1158637   +   end;
MPRINT(EM_DIAGRAM):   end;
1158638   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1158639   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1158640   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1158641   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1158642   +   end;
MPRINT(EM_DIAGRAM):   end;
1158643   +end;
MPRINT(EM_DIAGRAM):   end;
1158644   +
1158645   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1158646   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1158647   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1158648   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1158649   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1158650   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1158651   +end;
MPRINT(EM_DIAGRAM):   end;
1158652   +else do;
MPRINT(EM_DIAGRAM):   else do;
1158653   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1158654   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1158655   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1158656   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1158657   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1158658   +   end;
MPRINT(EM_DIAGRAM):   end;
1158659   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1158660   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1158661   +   end;
MPRINT(EM_DIAGRAM):   end;
1158662   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1158663   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1158664   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1158665   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1158666   +   end;
MPRINT(EM_DIAGRAM):   end;
1158667   +end;
MPRINT(EM_DIAGRAM):   end;
1158668   +
1158669   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1158670   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1158671   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1158672   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1158673   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1158674   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1158675   +end;
MPRINT(EM_DIAGRAM):   end;
1158676   +else do;
MPRINT(EM_DIAGRAM):   else do;
1158677   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1158678   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1158679   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1158680   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1158681   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1158682   +   end;
MPRINT(EM_DIAGRAM):   end;
1158683   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1158684   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1158685   +   end;
MPRINT(EM_DIAGRAM):   end;
1158686   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1158687   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1158688   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1158689   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1158690   +   end;
MPRINT(EM_DIAGRAM):   end;
1158691   +end;
MPRINT(EM_DIAGRAM):   end;
1158692   +
1158693   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1158694   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1158695   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1158696   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1158697   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1158698   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1158699   +end;
MPRINT(EM_DIAGRAM):   end;
1158700   +else do;
MPRINT(EM_DIAGRAM):   else do;
1158701   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1158702   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1158703   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1158704   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1158705   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1158706   +   end;
MPRINT(EM_DIAGRAM):   end;
1158707   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1158708   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1158709   +   end;
MPRINT(EM_DIAGRAM):   end;
1158710   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1158711   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1158712   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1158713   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1158714   +   end;
MPRINT(EM_DIAGRAM):   end;
1158715   +end;
MPRINT(EM_DIAGRAM):   end;
1158716   +
1158717   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1158718   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1158719   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1158720   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1158721   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1158722   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1158723   +end;
MPRINT(EM_DIAGRAM):   end;
1158724   +else do;
MPRINT(EM_DIAGRAM):   else do;
1158725   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1158726   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1158727   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1158728   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1158729   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1158730   +   end;
MPRINT(EM_DIAGRAM):   end;
1158731   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1158732   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1158733   +   end;
MPRINT(EM_DIAGRAM):   end;
1158734   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1158735   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1158736   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1158737   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1158738   +   end;
MPRINT(EM_DIAGRAM):   end;
1158739   +end;
MPRINT(EM_DIAGRAM):   end;
1158740   +
1158741   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1158742   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1158743   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1158744   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1158745   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1158746   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1158747   +end;
MPRINT(EM_DIAGRAM):   end;
1158748   +else do;
MPRINT(EM_DIAGRAM):   else do;
1158749   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1158750   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1158751   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1158752   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1158753   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1158754   +   end;
MPRINT(EM_DIAGRAM):   end;
1158755   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1158756   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1158757   +   end;
MPRINT(EM_DIAGRAM):   end;
1158758   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1158759   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1158760   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1158761   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1158762   +   end;
MPRINT(EM_DIAGRAM):   end;
1158763   +end;
MPRINT(EM_DIAGRAM):   end;
1158764   +
1158765   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1158766   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
1158767   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1158768   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1158769   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1158770   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1158771   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1158772   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1158773   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1158774   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1158775   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1158776   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1158777   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1158778   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1158779   +end;
MPRINT(EM_DIAGRAM):   end;
1158780   +else do;
MPRINT(EM_DIAGRAM):   else do;
1158781   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1158782   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1158783   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1158784   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1158785   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1158786   +   end;
MPRINT(EM_DIAGRAM):   end;
1158787   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1158788   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1158789   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1158790   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1158791   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1158792   +   end;
MPRINT(EM_DIAGRAM):   end;
1158793   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1158794   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1158795   +   end;
MPRINT(EM_DIAGRAM):   end;
1158796   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1158797   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1158798   +   end;
MPRINT(EM_DIAGRAM):   end;
1158799   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1158800   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1158801   +   end;
MPRINT(EM_DIAGRAM):   end;
1158802   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1158803   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1158804   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1158805   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1158806   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1158807   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1158808   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1158809   +   end;
MPRINT(EM_DIAGRAM):   end;
1158810   +end;
MPRINT(EM_DIAGRAM):   end;
1158811   +
1158812   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1158813   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1158814   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
1158815   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1158816   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1158817   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1158818   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1158819   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1158820   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1158821   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1158822   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1158823   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1158824   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1158825   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1158826   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1158827   +end;
MPRINT(EM_DIAGRAM):   end;
1158828   +else do;
MPRINT(EM_DIAGRAM):   else do;
1158829   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1158830   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1158831   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1158832   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1158833   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1158834   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1158835   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1158836   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1158837   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1158838   +         end;
MPRINT(EM_DIAGRAM):   end;
1158839   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1158840   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1158841   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1158842   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1158843   +            end;
MPRINT(EM_DIAGRAM):   end;
1158844   +         end;
MPRINT(EM_DIAGRAM):   end;
1158845   +      end;
MPRINT(EM_DIAGRAM):   end;
1158846   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1158847   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1158848   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1158849   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1158850   +         end;
MPRINT(EM_DIAGRAM):   end;
1158851   +      end;
MPRINT(EM_DIAGRAM):   end;
1158852   +   end;
MPRINT(EM_DIAGRAM):   end;
1158853   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1158854   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1158855   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1158856   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1158857   +      end;
MPRINT(EM_DIAGRAM):   end;
1158858   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1158859   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1158860   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1158861   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1158862   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1158863   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1158864   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1158865   +         end;
MPRINT(EM_DIAGRAM):   end;
1158866   +      end;
MPRINT(EM_DIAGRAM):   end;
1158867   +   end;
MPRINT(EM_DIAGRAM):   end;
1158868   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1158869   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1158870   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1158871   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1158872   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1158873   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1158874   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1158875   +   end;
MPRINT(EM_DIAGRAM):   end;
1158876   +end;
MPRINT(EM_DIAGRAM):   end;
1158877   +
1158878   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1158879   +*** Checking missing input Interval
1158880   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1158881   +
1158882   +IF NMISS(
1158883   +   Income ,
1158884   +   Kidhome ,
1158885   +   MntFishProducts ,
1158886   +   MntFruits ,
1158887   +   MntGoldProds ,
1158888   +   MntMeatProducts ,
1158889   +   MntSweetProducts ,
1158890   +   MntWines ,
1158891   +   NumCatalogPurchases ,
1158892   +   NumDealsPurchases ,
1158893   +   NumStorePurchases ,
1158894   +   NumWebPurchases ,
1158895   +   NumWebVisitsMonth ,
1158896   +   Recency ,
1158897   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Income , Kidhome , MntFishProducts , MntFruits , MntGoldProds
, MntMeatProducts , MntSweetProducts , MntWines , NumCatalogPurchases , NumDealsPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , Recency , Teenhome ) THEN DO;
1158898   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1158899   +
1158900   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1158901   +END;
MPRINT(EM_DIAGRAM):   END;
1158902   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1158903   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1158904   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1158905   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1158906   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1158907   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1158908   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1158909   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1158910   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1158911   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1158912   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1158913   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1158914   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1158915   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1158916   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1158917   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1158918   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1158919   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1158920   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1158921   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1158922   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1158923   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1158924   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1158925   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1158926   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1158927   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1158928   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1158929   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1158930   +END;
MPRINT(EM_DIAGRAM):   END;
1158931   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1158932   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1158933   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1158934   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1158935   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1158936   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1158937   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1158938   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1158939   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1158940   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1158941   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1158942   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1158943   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1158944   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
1158945   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1158946   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1158947   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1158948   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1158949   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1158950   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1158951   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1158952   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1158953   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1158954   +   ELSE S_NumCatalogPurchases
1158955   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1158956   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1158957   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1158958   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1158959   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1158960   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1158961   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1158962   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1158963   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1158964   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1158965   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1158966   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1158967   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1158968   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1158969   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1158970   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1158971   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1158972   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1158973   +END;
MPRINT(EM_DIAGRAM):   END;
1158974   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1158975   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1158976   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1158977   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1158978   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1158979   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1158980   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1158981   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1158982   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1158983   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1158984   +   H11  =     0.87660114046125 * S_Income  +     -0.7994451897827 * S_Kidhome
1158985   +          +    -0.08967295716195 * S_MntFishProducts
1158986   +          +     0.03184635437516 * S_MntFruits  +    -0.13860895575438 *
1158987   +        S_MntGoldProds  +     0.55790460748169 * S_MntMeatProducts
1158988   +          +    -0.02806094557115 * S_MntSweetProducts
1158989   +          +    -0.14537763592724 * S_MntWines  +     0.76891266523847 *
1158990   +        S_NumCatalogPurchases  +     0.16842007461305 * S_NumDealsPurchases
1158991   +          +     0.25137876058262 * S_NumStorePurchases
1158992   +          +    -0.07865442401292 * S_NumWebPurchases
1158993   +          +     1.03197398967259 * S_NumWebVisitsMonth
1158994   +          +    -1.26907156503759 * S_Recency  +    -0.76016893316351 *
1158995   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.87660114046125 * S_Income + -0.7994451897827 * S_Kidhome +
-0.08967295716195 * S_MntFishProducts + 0.03184635437516 * S_MntFruits + -0.13860895575438 *
S_MntGoldProds + 0.55790460748169 * S_MntMeatProducts + -0.02806094557115 * S_MntSweetProducts
+ -0.14537763592724 * S_MntWines + 0.76891266523847 * S_NumCatalogPurchases + 0.16842007461305
* S_NumDealsPurchases + 0.25137876058262 * S_NumStorePurchases + -0.07865442401292 *
S_NumWebPurchases + 1.03197398967259 * S_NumWebVisitsMonth + -1.26907156503759 * S_Recency +
-0.76016893316351 * S_Teenhome ;
1158996   +   H12  =     0.37295000114468 * S_Income  +    -0.12834211496575 * S_Kidhome
1158997   +          +     0.19312392388912 * S_MntFishProducts
1158998   +          +      0.1561688289137 * S_MntFruits  +     0.04004810938796 *
1158999   +        S_MntGoldProds  +     0.32599201739588 * S_MntMeatProducts
1159000   +          +       0.204174263605 * S_MntSweetProducts
1159001   +          +    -0.11560784817014 * S_MntWines  +     0.12255073568725 *
1159002   +        S_NumCatalogPurchases  +    -0.05543734180218 * S_NumDealsPurchases
1159003   +          +     0.07747830335769 * S_NumStorePurchases
1159004   +          +     0.07960837555191 * S_NumWebPurchases
1159005   +          +     0.02351602389122 * S_NumWebVisitsMonth
1159006   +          +     -0.2840853952427 * S_Recency  +    -0.47421627761687 *
1159007   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = 0.37295000114468 * S_Income + -0.12834211496575 * S_Kidhome +
0.19312392388912 * S_MntFishProducts + 0.1561688289137 * S_MntFruits + 0.04004810938796 *
S_MntGoldProds + 0.32599201739588 * S_MntMeatProducts + 0.204174263605 * S_MntSweetProducts +
-0.11560784817014 * S_MntWines + 0.12255073568725 * S_NumCatalogPurchases + -0.05543734180218
* S_NumDealsPurchases + 0.07747830335769 * S_NumStorePurchases + 0.07960837555191 *
S_NumWebPurchases + 0.02351602389122 * S_NumWebVisitsMonth + -0.2840853952427 * S_Recency +
-0.47421627761687 * S_Teenhome ;
1159008   +   H13  =    -0.33428925248315 * S_Income  +    -0.03845622730742 * S_Kidhome
1159009   +          +     0.18733919794636 * S_MntFishProducts
1159010   +          +     0.45907982190052 * S_MntFruits  +    -0.48776616433719 *
1159011   +        S_MntGoldProds  +    -0.41340481007204 * S_MntMeatProducts
1159012   +          +     0.42514606159239 * S_MntSweetProducts
1159013   +          +     0.20038001368787 * S_MntWines  +    -1.21708501803782 *
1159014   +        S_NumCatalogPurchases  +    -1.06820061274533 * S_NumDealsPurchases
1159015   +          +     0.36582106462789 * S_NumStorePurchases
1159016   +          +     0.04244777020435 * S_NumWebPurchases
1159017   +          +    -0.24296342902503 * S_NumWebVisitsMonth
1159018   +          +     0.27451716762947 * S_Recency  +     0.13110477325277 *
1159019   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = -0.33428925248315 * S_Income + -0.03845622730742 * S_Kidhome +
0.18733919794636 * S_MntFishProducts + 0.45907982190052 * S_MntFruits + -0.48776616433719 *
S_MntGoldProds + -0.41340481007204 * S_MntMeatProducts + 0.42514606159239 * S_MntSweetProducts
+ 0.20038001368787 * S_MntWines + -1.21708501803782 * S_NumCatalogPurchases +
-1.06820061274533 * S_NumDealsPurchases + 0.36582106462789 * S_NumStorePurchases +
0.04244777020435 * S_NumWebPurchases + -0.24296342902503 * S_NumWebVisitsMonth +
0.27451716762947 * S_Recency + 0.13110477325277 * S_Teenhome ;
1159020   +   H14  =    -0.70493412542585 * S_Income  +     0.41202796606799 * S_Kidhome
1159021   +          +     0.05986489897572 * S_MntFishProducts
1159022   +          +    -0.05040531715469 * S_MntFruits  +       0.051068387592 *
1159023   +        S_MntGoldProds  +    -0.13581881662481 * S_MntMeatProducts
1159024   +          +    -0.05513370461072 * S_MntSweetProducts
1159025   +          +     0.77472084468819 * S_MntWines  +    -0.03211788969126 *
1159026   +        S_NumCatalogPurchases  +    -0.24097486430988 * S_NumDealsPurchases
1159027   +          +     0.64364674828841 * S_NumStorePurchases
1159028   +          +     0.15084748708424 * S_NumWebPurchases
1159029   +          +    -0.94144998356377 * S_NumWebVisitsMonth
1159030   +          +     1.16778338364599 * S_Recency  +     0.32089861635238 *
1159031   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = -0.70493412542585 * S_Income + 0.41202796606799 * S_Kidhome +
0.05986489897572 * S_MntFishProducts + -0.05040531715469 * S_MntFruits + 0.051068387592 *
S_MntGoldProds + -0.13581881662481 * S_MntMeatProducts + -0.05513370461072 *
S_MntSweetProducts + 0.77472084468819 * S_MntWines + -0.03211788969126 * S_NumCatalogPurchases
+ -0.24097486430988 * S_NumDealsPurchases + 0.64364674828841 * S_NumStorePurchases +
0.15084748708424 * S_NumWebPurchases + -0.94144998356377 * S_NumWebVisitsMonth +
1.16778338364599 * S_Recency + 0.32089861635238 * S_Teenhome ;
1159032   +   H15  =    -0.15703510827879 * S_Income  +    -0.30977841002562 * S_Kidhome
1159033   +          +    -0.14543196273578 * S_MntFishProducts
1159034   +          +     0.32223695896711 * S_MntFruits  +    -0.31846203211698 *
1159035   +        S_MntGoldProds  +     -1.4125160823105 * S_MntMeatProducts
1159036   +          +     0.49374793444169 * S_MntSweetProducts
1159037   +          +     0.39699716010219 * S_MntWines  +    -0.88140331687645 *
1159038   +        S_NumCatalogPurchases  +    -0.87657222813687 * S_NumDealsPurchases
1159039   +          +     1.23754786782746 * S_NumStorePurchases
1159040   +          +     1.11316667348511 * S_NumWebPurchases
1159041   +          +    -1.08592446439781 * S_NumWebVisitsMonth
1159042   +          +     0.66958517589542 * S_Recency  +     0.06799032788481 *
1159043   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H15 = -0.15703510827879 * S_Income + -0.30977841002562 * S_Kidhome +
-0.14543196273578 * S_MntFishProducts + 0.32223695896711 * S_MntFruits + -0.31846203211698 *
S_MntGoldProds + -1.4125160823105 * S_MntMeatProducts + 0.49374793444169 * S_MntSweetProducts
+ 0.39699716010219 * S_MntWines + -0.88140331687645 * S_NumCatalogPurchases +
-0.87657222813687 * S_NumDealsPurchases + 1.23754786782746 * S_NumStorePurchases +
1.11316667348511 * S_NumWebPurchases + -1.08592446439781 * S_NumWebVisitsMonth +
0.66958517589542 * S_Recency + 0.06799032788481 * S_Teenhome ;
1159044   +   H16  =    -0.10360901553583 * S_Income  +     0.39257497240865 * S_Kidhome
1159045   +          +     0.29549884005341 * S_MntFishProducts
1159046   +          +     0.04922491353914 * S_MntFruits  +     -0.1412659458221 *
1159047   +        S_MntGoldProds  +    -0.12361454534126 * S_MntMeatProducts
1159048   +          +    -0.11909215986981 * S_MntSweetProducts
1159049   +          +     0.11430484977092 * S_MntWines  +    -0.66235553839539 *
1159050   +        S_NumCatalogPurchases  +     0.17261763180198 * S_NumDealsPurchases
1159051   +          +     0.30109334594548 * S_NumStorePurchases
1159052   +          +     0.01985762767489 * S_NumWebPurchases
1159053   +          +     0.44965133281333 * S_NumWebVisitsMonth
1159054   +          +     0.32338634259192 * S_Recency  +    -0.04032956941805 *
1159055   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H16 = -0.10360901553583 * S_Income + 0.39257497240865 * S_Kidhome +
0.29549884005341 * S_MntFishProducts + 0.04922491353914 * S_MntFruits + -0.1412659458221 *
S_MntGoldProds + -0.12361454534126 * S_MntMeatProducts + -0.11909215986981 *
S_MntSweetProducts + 0.11430484977092 * S_MntWines + -0.66235553839539 * S_NumCatalogPurchases
+ 0.17261763180198 * S_NumDealsPurchases + 0.30109334594548 * S_NumStorePurchases +
0.01985762767489 * S_NumWebPurchases + 0.44965133281333 * S_NumWebVisitsMonth +
0.32338634259192 * S_Recency + -0.04032956941805 * S_Teenhome ;
1159056   +   H11  = H11  +    -0.23026310289024 * AcceptedCmp10
1159057   +          +    -0.82550012364234 * AcceptedCmp20  +    -0.67764228269441 *
1159058   +        AcceptedCmp30  +    -0.51547666117685 * AcceptedCmp40
1159059   +          +    -0.36424958084824 * AcceptedCmp50  +       0.119862855783 *
1159060   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.23026310289024 * AcceptedCmp10 + -0.82550012364234 *
AcceptedCmp20 + -0.67764228269441 * AcceptedCmp30 + -0.51547666117685 * AcceptedCmp40 +
-0.36424958084824 * AcceptedCmp50 + 0.119862855783 * Complain0 ;
1159061   +   H12  = H12  +     0.02722288857426 * AcceptedCmp10
1159062   +          +      0.1236576068539 * AcceptedCmp20  +    -0.31265425960737 *
1159063   +        AcceptedCmp30  +    -0.25076565034266 * AcceptedCmp40
1159064   +          +    -0.20158659730872 * AcceptedCmp50  +    -0.43687103612629 *
1159065   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.02722288857426 * AcceptedCmp10 + 0.1236576068539 *
AcceptedCmp20 + -0.31265425960737 * AcceptedCmp30 + -0.25076565034266 * AcceptedCmp40 +
-0.20158659730872 * AcceptedCmp50 + -0.43687103612629 * Complain0 ;
1159066   +   H13  = H13  +     0.21852176280571 * AcceptedCmp10
1159067   +          +     0.01727991436107 * AcceptedCmp20  +     0.19303261094625 *
1159068   +        AcceptedCmp30  +    -0.65492191560509 * AcceptedCmp40
1159069   +          +    -0.09636750660684 * AcceptedCmp50  +     0.07579128571046 *
1159070   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.21852176280571 * AcceptedCmp10 + 0.01727991436107 *
AcceptedCmp20 + 0.19303261094625 * AcceptedCmp30 + -0.65492191560509 * AcceptedCmp40 +
-0.09636750660684 * AcceptedCmp50 + 0.07579128571046 * Complain0 ;
1159071   +   H14  = H14  +     0.20819294353855 * AcceptedCmp10
1159072   +          +      0.5159102831901 * AcceptedCmp20  +     0.55295587458643 *
1159073   +        AcceptedCmp30  +     0.80682431419623 * AcceptedCmp40
1159074   +          +     0.74007057798158 * AcceptedCmp50  +     -0.4573052390807 *
1159075   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.20819294353855 * AcceptedCmp10 + 0.5159102831901 *
AcceptedCmp20 + 0.55295587458643 * AcceptedCmp30 + 0.80682431419623 * AcceptedCmp40 +
0.74007057798158 * AcceptedCmp50 + -0.4573052390807 * Complain0 ;
1159076   +   H15  = H15  +     1.26330939420524 * AcceptedCmp10
1159077   +          +     0.29494505935793 * AcceptedCmp20  +     0.25561322032419 *
1159078   +        AcceptedCmp30  +     0.50102236777897 * AcceptedCmp40
1159079   +          +     0.20696267245027 * AcceptedCmp50  +    -0.00849145233901 *
1159080   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 1.26330939420524 * AcceptedCmp10 + 0.29494505935793 *
AcceptedCmp20 + 0.25561322032419 * AcceptedCmp30 + 0.50102236777897 * AcceptedCmp40 +
0.20696267245027 * AcceptedCmp50 + -0.00849145233901 * Complain0 ;
1159081   +   H16  = H16  +     0.03638428330381 * AcceptedCmp10
1159082   +          +     0.27994215452657 * AcceptedCmp20  +    -0.03861840445025 *
1159083   +        AcceptedCmp30  +      0.3398057347433 * AcceptedCmp40
1159084   +          +    -0.00738335957724 * AcceptedCmp50  +      0.0447804375799 *
1159085   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.03638428330381 * AcceptedCmp10 + 0.27994215452657 *
AcceptedCmp20 + -0.03861840445025 * AcceptedCmp30 + 0.3398057347433 * AcceptedCmp40 +
-0.00738335957724 * AcceptedCmp50 + 0.0447804375799 * Complain0 ;
1159086   +   H11  = H11  +     0.27482405283962 * Education2n_Cycle
1159087   +          +     0.11084012456612 * EducationBasic  +    -0.23835071987159 *
1159088   +        EducationGraduation  +    -0.10167082180552 * EducationMaster
1159089   +          +     0.51015833145636 * Marital_StatusDivorced
1159090   +          +     -1.1653662063616 * Marital_StatusMarried
1159091   +          +     1.19396547750441 * Marital_StatusSingle
1159092   +          +    -0.99605751789992 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.27482405283962 * Education2n_Cycle + 0.11084012456612 *
EducationBasic + -0.23835071987159 * EducationGraduation + -0.10167082180552 * EducationMaster
+ 0.51015833145636 * Marital_StatusDivorced + -1.1653662063616 * Marital_StatusMarried +
1.19396547750441 * Marital_StatusSingle + -0.99605751789992 * Marital_StatusTogether ;
1159093   +   H12  = H12  +    -0.05268347704739 * Education2n_Cycle
1159094   +          +     0.19362065968028 * EducationBasic  +    -0.26784257195414 *
1159095   +        EducationGraduation  +     0.16650577465959 * EducationMaster
1159096   +          +     0.09154288513995 * Marital_StatusDivorced
1159097   +          +     0.06725684628382 * Marital_StatusMarried
1159098   +          +     0.11327659191494 * Marital_StatusSingle
1159099   +          +     0.01793778876811 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.05268347704739 * Education2n_Cycle + 0.19362065968028 *
EducationBasic + -0.26784257195414 * EducationGraduation + 0.16650577465959 * EducationMaster
+ 0.09154288513995 * Marital_StatusDivorced + 0.06725684628382 * Marital_StatusMarried +
0.11327659191494 * Marital_StatusSingle + 0.01793778876811 * Marital_StatusTogether ;
1159100   +   H13  = H13  +     -0.1027084329077 * Education2n_Cycle
1159101   +          +    -0.01342449140757 * EducationBasic  +    -0.35627920427273 *
1159102   +        EducationGraduation  +    -0.05554656531793 * EducationMaster
1159103   +          +     0.37591653615852 * Marital_StatusDivorced
1159104   +          +    -0.05024236790132 * Marital_StatusMarried
1159105   +          +    -0.28317154997144 * Marital_StatusSingle
1159106   +          +    -0.19247490223101 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.1027084329077 * Education2n_Cycle + -0.01342449140757 *
EducationBasic + -0.35627920427273 * EducationGraduation + -0.05554656531793 * EducationMaster
+ 0.37591653615852 * Marital_StatusDivorced + -0.05024236790132 * Marital_StatusMarried +
-0.28317154997144 * Marital_StatusSingle + -0.19247490223101 * Marital_StatusTogether ;
1159107   +   H14  = H14  +     -0.4162491480577 * Education2n_Cycle
1159108   +          +     0.38075572764074 * EducationBasic  +    -0.28169469529121 *
1159109   +        EducationGraduation  +       0.638986138084 * EducationMaster
1159110   +          +    -0.44885292450558 * Marital_StatusDivorced
1159111   +          +     0.78958791519299 * Marital_StatusMarried
1159112   +          +    -0.09688714431356 * Marital_StatusSingle
1159113   +          +     0.84239030196202 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.4162491480577 * Education2n_Cycle + 0.38075572764074 *
EducationBasic + -0.28169469529121 * EducationGraduation + 0.638986138084 * EducationMaster +
-0.44885292450558 * Marital_StatusDivorced + 0.78958791519299 * Marital_StatusMarried +
-0.09688714431356 * Marital_StatusSingle + 0.84239030196202 * Marital_StatusTogether ;
1159114   +   H15  = H15  +     0.33126657974568 * Education2n_Cycle
1159115   +          +     0.44539039262703 * EducationBasic  +    -0.09154902903865 *
1159116   +        EducationGraduation  +    -0.26400363440725 * EducationMaster
1159117   +          +    -0.30801073895989 * Marital_StatusDivorced
1159118   +          +     -0.1285150749223 * Marital_StatusMarried
1159119   +          +     0.06775542164414 * Marital_StatusSingle
1159120   +          +    -0.13032366945766 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.33126657974568 * Education2n_Cycle + 0.44539039262703 *
EducationBasic + -0.09154902903865 * EducationGraduation + -0.26400363440725 * EducationMaster
+ -0.30801073895989 * Marital_StatusDivorced + -0.1285150749223 * Marital_StatusMarried +
0.06775542164414 * Marital_StatusSingle + -0.13032366945766 * Marital_StatusTogether ;
1159121   +   H16  = H16  +     0.02030175222681 * Education2n_Cycle
1159122   +          +    -0.19579401096879 * EducationBasic  +      0.2070703930869 *
1159123   +        EducationGraduation  +    -0.40706983167068 * EducationMaster
1159124   +          +     0.22193599090368 * Marital_StatusDivorced
1159125   +          +    -0.54544672042168 * Marital_StatusMarried
1159126   +          +    -0.02237436019864 * Marital_StatusSingle
1159127   +          +    -0.21979468164854 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.02030175222681 * Education2n_Cycle + -0.19579401096879 *
EducationBasic + 0.2070703930869 * EducationGraduation + -0.40706983167068 * EducationMaster +
0.22193599090368 * Marital_StatusDivorced + -0.54544672042168 * Marital_StatusMarried +
-0.02237436019864 * Marital_StatusSingle + -0.21979468164854 * Marital_StatusTogether ;
1159128   +   H11  =    -1.24550293901788 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -1.24550293901788 + H11 ;
1159129   +   H12  =     0.36762263942809 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.36762263942809 + H12 ;
1159130   +   H13  =     0.07010867577103 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = 0.07010867577103 + H13 ;
1159131   +   H14  =    -1.94014549272156 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = -1.94014549272156 + H14 ;
1159132   +   H15  =     0.17666656180153 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = 0.17666656180153 + H15 ;
1159133   +   H16  =    -1.64626406576709 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = -1.64626406576709 + H16 ;
1159134   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1159135   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1159136   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1159137   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1159138   +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
1159139   +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
1159140   +END;
MPRINT(EM_DIAGRAM):   END;
1159141   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1159142   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1159143   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1159144   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1159145   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1159146   +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
1159147   +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
1159148   +END;
MPRINT(EM_DIAGRAM):   END;
1159149   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1159150   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1159151   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1159152   +
1159153   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1159154   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1159155   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1159156   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1159157   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1159158   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1159159   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1159160   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1159161   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1159162   +end;
MPRINT(EM_DIAGRAM):   end;
1159163   +else do;
MPRINT(EM_DIAGRAM):   else do;
1159164   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1159165   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1159166   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1159167   +   end;
MPRINT(EM_DIAGRAM):   end;
1159168   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1159169   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1159170   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1159171   +   end;
MPRINT(EM_DIAGRAM):   end;
1159172   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1159173   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1159174   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1159175   +   end;
MPRINT(EM_DIAGRAM):   end;
1159176   +end;
MPRINT(EM_DIAGRAM):   end;
1159177   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1159178   +   P_DepVar1  =     4.21126046696691 * H11  +      0.6565061288056 * H12
1159179   +          +    -1.92484011508628 * H13  +    -3.74020722142387 * H14
1159180   +          +    -3.27353026762143 * H15  +     -1.2596922869974 * H16 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 4.21126046696691 * H11 + 0.6565061288056 * H12 +
-1.92484011508628 * H13 + -3.74020722142387 * H14 + -3.27353026762143 * H15 + -1.2596922869974
* H16 ;
1159181   +   P_DepVar1  =    -1.36806658950323 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.36806658950323 + P_DepVar1 ;
1159182   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1159183   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1159184   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1159185   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1159186   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1159187   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1159188   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1159189   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1159190   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1159191   +END;
MPRINT(EM_DIAGRAM):   END;
1159192   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1159193   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1159194   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1159195   +END;
MPRINT(EM_DIAGRAM):   END;
1159196   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1159197   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1159198   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1159199   +END;
MPRINT(EM_DIAGRAM):   END;
1159200   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1159201   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1159202   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1159203   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1159204   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1159205   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1159206   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1159207   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1159208   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1159209   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1159210   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1159211   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1159212   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1159213   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1159214   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1159215   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1159216   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1159217   +END;
MPRINT(EM_DIAGRAM):   END;
1159218   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1159219   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1159220   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1159221   +drop
1159222   +H11
1159223   +H12
1159224   +H13
1159225   +H14
1159226   +H15
1159227   +H16
1159228   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 ;
1159229   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1159230   +* Renaming variables for Neural35;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural35;
1159231   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1159232   +* Renaming Posterior variables for Neural35;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural35;
1159233   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1159234   +drop Neural35_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural35_P_DepVar1;
1159235   +Neural35_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural35_P_DepVar1 = P_DepVar1;
1159236   +drop Neural35_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural35_P_DepVar0;
1159237   +Neural35_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural35_P_DepVar0 = P_DepVar0;
1159238   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1159239   +* Renaming _WARN_ variable for Neural35;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural35;
1159240   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1159241   +length Neural35_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural35_WARN_ $4;
1159242   +drop Neural35_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural35_WARN_;
1159243   +Neural35_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural35_WARN_ = _WARN_;
1159244   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1159245   +* Ensmbl9: Scoring Code of model 9 of 10;
MPRINT(EM_DIAGRAM):   * Ensmbl9: Scoring Code of model 9 of 10;
1159246   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1159247   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1159248   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
1159249   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1159250   +* NODE: Neural30;
MPRINT(EM_DIAGRAM):   * NODE: Neural30;
1159251   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1159252   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1159253   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1159254   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1159255   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1159256   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1159257   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1159258   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1159259   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1159260   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1159261   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1159262   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1159263   +LENGTH _WARN_ $4
1159264   +      F_DepVar  $ 12
1159265   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1159266   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1159267   +
1159268   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1159269   +
1159270   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1159271   +
1159272   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1159273   +
1159274   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1159275   +
1159276   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1159277   +
1159278   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1159279   +
1159280   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1159281   +
1159282   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1159283   +
1159284   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1159285   +
1159286   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1159287   +
1159288   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1159289   +
1159290   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1159291   +
1159292   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1159293   +
1159294   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1159295   +
1159296   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1159297   +
1159298   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1159299   +
1159300   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1159301   +
1159302   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1159303   +
1159304   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1159305   +
1159306   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1159307   +
1159308   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1159309   +
1159310   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1159311   +
1159312   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1159313   +
1159314   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1159315   +
1159316   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1159317   +
1159318   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1159319   +
1159320   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1159321   +
1159322   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1159323   +
1159324   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1159325   +
1159326   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1159327   +
1159328   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1159329   +
1159330   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1159331   +
1159332   +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
1159333   +
1159334   +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
1159335   +
1159336   +      label H17 = 'Hidden: H1=7' ;
MPRINT(EM_DIAGRAM):   label H17 = 'Hidden: H1=7' ;
1159337   +
1159338   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1159339   +
1159340   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1159341   +
1159342   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1159343   +
1159344   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1159345   +
1159346   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1159347   +
1159348   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1159349   +
1159350   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1159351   +
1159352   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1159353   +
1159354   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1159355   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1159356   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1159357   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1159358   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1159359   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1159360   +end;
MPRINT(EM_DIAGRAM):   end;
1159361   +else do;
MPRINT(EM_DIAGRAM):   else do;
1159362   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1159363   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1159364   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1159365   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1159366   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1159367   +   end;
MPRINT(EM_DIAGRAM):   end;
1159368   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1159369   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1159370   +   end;
MPRINT(EM_DIAGRAM):   end;
1159371   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1159372   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1159373   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1159374   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1159375   +   end;
MPRINT(EM_DIAGRAM):   end;
1159376   +end;
MPRINT(EM_DIAGRAM):   end;
1159377   +
1159378   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1159379   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1159380   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1159381   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1159382   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1159383   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1159384   +end;
MPRINT(EM_DIAGRAM):   end;
1159385   +else do;
MPRINT(EM_DIAGRAM):   else do;
1159386   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1159387   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1159388   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1159389   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1159390   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1159391   +   end;
MPRINT(EM_DIAGRAM):   end;
1159392   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1159393   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1159394   +   end;
MPRINT(EM_DIAGRAM):   end;
1159395   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1159396   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1159397   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1159398   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1159399   +   end;
MPRINT(EM_DIAGRAM):   end;
1159400   +end;
MPRINT(EM_DIAGRAM):   end;
1159401   +
1159402   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1159403   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1159404   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1159405   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1159406   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1159407   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1159408   +end;
MPRINT(EM_DIAGRAM):   end;
1159409   +else do;
MPRINT(EM_DIAGRAM):   else do;
1159410   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1159411   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1159412   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1159413   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1159414   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1159415   +   end;
MPRINT(EM_DIAGRAM):   end;
1159416   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1159417   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1159418   +   end;
MPRINT(EM_DIAGRAM):   end;
1159419   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1159420   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1159421   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1159422   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1159423   +   end;
MPRINT(EM_DIAGRAM):   end;
1159424   +end;
MPRINT(EM_DIAGRAM):   end;
1159425   +
1159426   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1159427   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1159428   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1159429   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1159430   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1159431   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1159432   +end;
MPRINT(EM_DIAGRAM):   end;
1159433   +else do;
MPRINT(EM_DIAGRAM):   else do;
1159434   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1159435   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1159436   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1159437   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1159438   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1159439   +   end;
MPRINT(EM_DIAGRAM):   end;
1159440   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1159441   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1159442   +   end;
MPRINT(EM_DIAGRAM):   end;
1159443   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1159444   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1159445   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1159446   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1159447   +   end;
MPRINT(EM_DIAGRAM):   end;
1159448   +end;
MPRINT(EM_DIAGRAM):   end;
1159449   +
1159450   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1159451   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1159452   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1159453   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1159454   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1159455   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1159456   +end;
MPRINT(EM_DIAGRAM):   end;
1159457   +else do;
MPRINT(EM_DIAGRAM):   else do;
1159458   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1159459   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1159460   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1159461   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1159462   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1159463   +   end;
MPRINT(EM_DIAGRAM):   end;
1159464   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1159465   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1159466   +   end;
MPRINT(EM_DIAGRAM):   end;
1159467   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1159468   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1159469   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1159470   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1159471   +   end;
MPRINT(EM_DIAGRAM):   end;
1159472   +end;
MPRINT(EM_DIAGRAM):   end;
1159473   +
1159474   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1159475   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1159476   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1159477   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1159478   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1159479   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1159480   +end;
MPRINT(EM_DIAGRAM):   end;
1159481   +else do;
MPRINT(EM_DIAGRAM):   else do;
1159482   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1159483   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1159484   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1159485   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1159486   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1159487   +   end;
MPRINT(EM_DIAGRAM):   end;
1159488   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1159489   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1159490   +   end;
MPRINT(EM_DIAGRAM):   end;
1159491   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1159492   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1159493   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1159494   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1159495   +   end;
MPRINT(EM_DIAGRAM):   end;
1159496   +end;
MPRINT(EM_DIAGRAM):   end;
1159497   +
1159498   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1159499   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
1159500   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1159501   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1159502   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1159503   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1159504   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1159505   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1159506   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1159507   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1159508   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1159509   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1159510   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1159511   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1159512   +end;
MPRINT(EM_DIAGRAM):   end;
1159513   +else do;
MPRINT(EM_DIAGRAM):   else do;
1159514   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1159515   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1159516   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1159517   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1159518   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1159519   +   end;
MPRINT(EM_DIAGRAM):   end;
1159520   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1159521   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1159522   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1159523   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1159524   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1159525   +   end;
MPRINT(EM_DIAGRAM):   end;
1159526   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1159527   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1159528   +   end;
MPRINT(EM_DIAGRAM):   end;
1159529   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1159530   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1159531   +   end;
MPRINT(EM_DIAGRAM):   end;
1159532   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1159533   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1159534   +   end;
MPRINT(EM_DIAGRAM):   end;
1159535   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1159536   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1159537   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1159538   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1159539   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1159540   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1159541   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1159542   +   end;
MPRINT(EM_DIAGRAM):   end;
1159543   +end;
MPRINT(EM_DIAGRAM):   end;
1159544   +
1159545   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1159546   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1159547   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
1159548   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1159549   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1159550   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1159551   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1159552   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1159553   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1159554   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1159555   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1159556   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1159557   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1159558   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1159559   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1159560   +end;
MPRINT(EM_DIAGRAM):   end;
1159561   +else do;
MPRINT(EM_DIAGRAM):   else do;
1159562   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1159563   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1159564   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1159565   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1159566   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1159567   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1159568   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1159569   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1159570   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1159571   +         end;
MPRINT(EM_DIAGRAM):   end;
1159572   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1159573   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1159574   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1159575   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1159576   +            end;
MPRINT(EM_DIAGRAM):   end;
1159577   +         end;
MPRINT(EM_DIAGRAM):   end;
1159578   +      end;
MPRINT(EM_DIAGRAM):   end;
1159579   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1159580   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1159581   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1159582   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1159583   +         end;
MPRINT(EM_DIAGRAM):   end;
1159584   +      end;
MPRINT(EM_DIAGRAM):   end;
1159585   +   end;
MPRINT(EM_DIAGRAM):   end;
1159586   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1159587   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1159588   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1159589   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1159590   +      end;
MPRINT(EM_DIAGRAM):   end;
1159591   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1159592   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1159593   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1159594   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1159595   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1159596   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1159597   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1159598   +         end;
MPRINT(EM_DIAGRAM):   end;
1159599   +      end;
MPRINT(EM_DIAGRAM):   end;
1159600   +   end;
MPRINT(EM_DIAGRAM):   end;
1159601   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1159602   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1159603   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1159604   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1159605   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1159606   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1159607   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1159608   +   end;
MPRINT(EM_DIAGRAM):   end;
1159609   +end;
MPRINT(EM_DIAGRAM):   end;
1159610   +
1159611   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1159612   +*** Checking missing input Interval
1159613   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1159614   +
1159615   +IF NMISS(
1159616   +   Income ,
1159617   +   Kidhome ,
1159618   +   MntFishProducts ,
1159619   +   MntFruits ,
1159620   +   MntGoldProds ,
1159621   +   MntMeatProducts ,
1159622   +   MntSweetProducts ,
1159623   +   MntWines ,
1159624   +   NumCatalogPurchases ,
1159625   +   NumDealsPurchases ,
1159626   +   NumStorePurchases ,
1159627   +   NumWebPurchases ,
1159628   +   NumWebVisitsMonth ,
1159629   +   Recency ,
1159630   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Income , Kidhome , MntFishProducts , MntFruits , MntGoldProds
, MntMeatProducts , MntSweetProducts , MntWines , NumCatalogPurchases , NumDealsPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , Recency , Teenhome ) THEN DO;
1159631   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1159632   +
1159633   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1159634   +END;
MPRINT(EM_DIAGRAM):   END;
1159635   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1159636   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1159637   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1159638   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1159639   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1159640   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1159641   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1159642   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1159643   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1159644   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1159645   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1159646   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1159647   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1159648   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1159649   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1159650   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1159651   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1159652   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1159653   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1159654   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1159655   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1159656   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1159657   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1159658   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1159659   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1159660   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1159661   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1159662   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1159663   +END;
MPRINT(EM_DIAGRAM):   END;
1159664   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1159665   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1159666   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1159667   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1159668   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1159669   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1159670   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1159671   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1159672   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1159673   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1159674   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1159675   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1159676   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1159677   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
1159678   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1159679   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1159680   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1159681   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1159682   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1159683   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1159684   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1159685   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1159686   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1159687   +   ELSE S_NumCatalogPurchases
1159688   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1159689   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1159690   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1159691   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1159692   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1159693   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1159694   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1159695   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1159696   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1159697   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1159698   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1159699   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1159700   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1159701   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1159702   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1159703   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1159704   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1159705   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1159706   +END;
MPRINT(EM_DIAGRAM):   END;
1159707   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1159708   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1159709   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1159710   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1159711   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1159712   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1159713   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1159714   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1159715   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1159716   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1159717   +   H11  =    -0.59781928082243 * S_Income  +     0.49830142312288 * S_Kidhome
1159718   +          +    -0.00045024466632 * S_MntFishProducts
1159719   +          +    -0.22421712710333 * S_MntFruits  +    -0.19010144853469 *
1159720   +        S_MntGoldProds  +    -0.53373773623953 * S_MntMeatProducts
1159721   +          +     0.17506402203495 * S_MntSweetProducts
1159722   +          +    -0.28551398649672 * S_MntWines  +       0.019870944777 *
1159723   +        S_NumCatalogPurchases  +     0.03537776181533 * S_NumDealsPurchases
1159724   +          +     0.05580468715403 * S_NumStorePurchases
1159725   +          +    -0.29131611132704 * S_NumWebPurchases
1159726   +          +    -0.40690084025802 * S_NumWebVisitsMonth
1159727   +          +     0.48640195058901 * S_Recency  +     0.31820890239661 *
1159728   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = -0.59781928082243 * S_Income + 0.49830142312288 * S_Kidhome +
-0.00045024466632 * S_MntFishProducts + -0.22421712710333 * S_MntFruits + -0.19010144853469 *
S_MntGoldProds + -0.53373773623953 * S_MntMeatProducts + 0.17506402203495 * S_MntSweetProducts
+ -0.28551398649672 * S_MntWines + 0.019870944777 * S_NumCatalogPurchases + 0.03537776181533 *
S_NumDealsPurchases + 0.05580468715403 * S_NumStorePurchases + -0.29131611132704 *
S_NumWebPurchases + -0.40690084025802 * S_NumWebVisitsMonth + 0.48640195058901 * S_Recency +
0.31820890239661 * S_Teenhome ;
1159729   +   H12  =    -0.41871753512335 * S_Income  +      0.6025072461821 * S_Kidhome
1159730   +          +    -0.03132724937716 * S_MntFishProducts
1159731   +          +     0.19114182835046 * S_MntFruits  +     0.13483463809539 *
1159732   +        S_MntGoldProds  +    -0.63593603749443 * S_MntMeatProducts
1159733   +          +    -0.07569302401223 * S_MntSweetProducts
1159734   +          +     0.67050112032753 * S_MntWines  +    -0.23159243932208 *
1159735   +        S_NumCatalogPurchases  +    -0.07183698407409 * S_NumDealsPurchases
1159736   +          +     0.54619681114623 * S_NumStorePurchases
1159737   +          +     0.44325129671249 * S_NumWebPurchases
1159738   +          +    -1.25054401670605 * S_NumWebVisitsMonth
1159739   +          +      1.2376290916151 * S_Recency  +     0.43747371517287 *
1159740   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -0.41871753512335 * S_Income + 0.6025072461821 * S_Kidhome +
-0.03132724937716 * S_MntFishProducts + 0.19114182835046 * S_MntFruits + 0.13483463809539 *
S_MntGoldProds + -0.63593603749443 * S_MntMeatProducts + -0.07569302401223 *
S_MntSweetProducts + 0.67050112032753 * S_MntWines + -0.23159243932208 * S_NumCatalogPurchases
+ -0.07183698407409 * S_NumDealsPurchases + 0.54619681114623 * S_NumStorePurchases +
0.44325129671249 * S_NumWebPurchases + -1.25054401670605 * S_NumWebVisitsMonth +
1.2376290916151 * S_Recency + 0.43747371517287 * S_Teenhome ;
1159741   +   H13  =      0.0713579189325 * S_Income  +    -0.05759612462349 * S_Kidhome
1159742   +          +     0.07631777381832 * S_MntFishProducts
1159743   +          +    -0.00387785552441 * S_MntFruits  +    -0.21868916314192 *
1159744   +        S_MntGoldProds  +       0.072623883197 * S_MntMeatProducts
1159745   +          +     0.12637946833766 * S_MntSweetProducts
1159746   +          +    -0.37981663841124 * S_MntWines  +    -0.89958525403162 *
1159747   +        S_NumCatalogPurchases  +    -0.17471885937598 * S_NumDealsPurchases
1159748   +          +     0.15845618359126 * S_NumStorePurchases
1159749   +          +    -0.33296932705082 * S_NumWebPurchases
1159750   +          +      0.0260072296349 * S_NumWebVisitsMonth
1159751   +          +     0.02544749712977 * S_Recency  +    -0.17381561661022 *
1159752   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = 0.0713579189325 * S_Income + -0.05759612462349 * S_Kidhome +
0.07631777381832 * S_MntFishProducts + -0.00387785552441 * S_MntFruits + -0.21868916314192 *
S_MntGoldProds + 0.072623883197 * S_MntMeatProducts + 0.12637946833766 * S_MntSweetProducts +
-0.37981663841124 * S_MntWines + -0.89958525403162 * S_NumCatalogPurchases + -0.17471885937598
* S_NumDealsPurchases + 0.15845618359126 * S_NumStorePurchases + -0.33296932705082 *
S_NumWebPurchases + 0.0260072296349 * S_NumWebVisitsMonth + 0.02544749712977 * S_Recency +
-0.17381561661022 * S_Teenhome ;
1159753   +   H14  =    -0.47498613710851 * S_Income  +     0.09339198401437 * S_Kidhome
1159754   +          +    -0.13642352619174 * S_MntFishProducts
1159755   +          +     0.27167245582117 * S_MntFruits  +    -0.00579747559996 *
1159756   +        S_MntGoldProds  +     0.31591387319577 * S_MntMeatProducts
1159757   +          +     0.14125815807238 * S_MntSweetProducts
1159758   +          +     0.07862916790983 * S_MntWines  +    -0.58905358997534 *
1159759   +        S_NumCatalogPurchases  +     -0.5574069633995 * S_NumDealsPurchases
1159760   +          +     0.19718828261526 * S_NumStorePurchases
1159761   +          +    -0.24156925391919 * S_NumWebPurchases
1159762   +          +    -0.25711078938749 * S_NumWebVisitsMonth
1159763   +          +     0.38883063223812 * S_Recency  +     -0.2396731334184 *
1159764   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = -0.47498613710851 * S_Income + 0.09339198401437 * S_Kidhome +
-0.13642352619174 * S_MntFishProducts + 0.27167245582117 * S_MntFruits + -0.00579747559996 *
S_MntGoldProds + 0.31591387319577 * S_MntMeatProducts + 0.14125815807238 * S_MntSweetProducts
+ 0.07862916790983 * S_MntWines + -0.58905358997534 * S_NumCatalogPurchases + -0.5574069633995
* S_NumDealsPurchases + 0.19718828261526 * S_NumStorePurchases + -0.24156925391919 *
S_NumWebPurchases + -0.25711078938749 * S_NumWebVisitsMonth + 0.38883063223812 * S_Recency +
-0.2396731334184 * S_Teenhome ;
1159765   +   H15  =     0.24624924979609 * S_Income  +    -0.37052106312109 * S_Kidhome
1159766   +          +     0.13579628643404 * S_MntFishProducts
1159767   +          +    -0.05263868911164 * S_MntFruits  +    -0.01504675049991 *
1159768   +        S_MntGoldProds  +     -0.4202277804998 * S_MntMeatProducts
1159769   +          +    -0.01039299374426 * S_MntSweetProducts
1159770   +          +     0.71197420459135 * S_MntWines  +    -0.35973505575029 *
1159771   +        S_NumCatalogPurchases  +     -0.4415445481482 * S_NumDealsPurchases
1159772   +          +     0.58897740652611 * S_NumStorePurchases
1159773   +          +     0.24564485851062 * S_NumWebPurchases
1159774   +          +    -0.13976320243555 * S_NumWebVisitsMonth
1159775   +          +      0.1199367613063 * S_Recency  +    -0.15283161418313 *
1159776   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H15 = 0.24624924979609 * S_Income + -0.37052106312109 * S_Kidhome +
0.13579628643404 * S_MntFishProducts + -0.05263868911164 * S_MntFruits + -0.01504675049991 *
S_MntGoldProds + -0.4202277804998 * S_MntMeatProducts + -0.01039299374426 * S_MntSweetProducts
+ 0.71197420459135 * S_MntWines + -0.35973505575029 * S_NumCatalogPurchases + -0.4415445481482
* S_NumDealsPurchases + 0.58897740652611 * S_NumStorePurchases + 0.24564485851062 *
S_NumWebPurchases + -0.13976320243555 * S_NumWebVisitsMonth + 0.1199367613063 * S_Recency +
-0.15283161418313 * S_Teenhome ;
1159777   +   H16  =     0.23493799758749 * S_Income  +     0.07038278079069 * S_Kidhome
1159778   +          +    -0.45448768538367 * S_MntFishProducts
1159779   +          +     0.02622380709004 * S_MntFruits  +     0.14726698184115 *
1159780   +        S_MntGoldProds  +     0.65760183569767 * S_MntMeatProducts
1159781   +          +    -0.16936256277023 * S_MntSweetProducts
1159782   +          +    -0.40647066866305 * S_MntWines  +     0.99645493491726 *
1159783   +        S_NumCatalogPurchases  +     0.65587239961358 * S_NumDealsPurchases
1159784   +          +    -0.22309716855774 * S_NumStorePurchases
1159785   +          +    -0.61204529910842 * S_NumWebPurchases
1159786   +          +     0.43742228867615 * S_NumWebVisitsMonth
1159787   +          +    -0.56099034256092 * S_Recency  +     -0.2445351671148 *
1159788   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H16 = 0.23493799758749 * S_Income + 0.07038278079069 * S_Kidhome +
-0.45448768538367 * S_MntFishProducts + 0.02622380709004 * S_MntFruits + 0.14726698184115 *
S_MntGoldProds + 0.65760183569767 * S_MntMeatProducts + -0.16936256277023 * S_MntSweetProducts
+ -0.40647066866305 * S_MntWines + 0.99645493491726 * S_NumCatalogPurchases + 0.65587239961358
* S_NumDealsPurchases + -0.22309716855774 * S_NumStorePurchases + -0.61204529910842 *
S_NumWebPurchases + 0.43742228867615 * S_NumWebVisitsMonth + -0.56099034256092 * S_Recency +
-0.2445351671148 * S_Teenhome ;
1159789   +   H17  =    -0.00107702057163 * S_Income  +     0.25116135719972 * S_Kidhome
1159790   +          +    -0.04540308470858 * S_MntFishProducts
1159791   +          +        0.21487241577 * S_MntFruits  +    -0.12914913547414 *
1159792   +        S_MntGoldProds  +    -0.04149021191395 * S_MntMeatProducts
1159793   +          +     0.02853521979141 * S_MntSweetProducts
1159794   +          +     -0.2435805887418 * S_MntWines  +    -0.04509621661407 *
1159795   +        S_NumCatalogPurchases  +    -0.26492036720429 * S_NumDealsPurchases
1159796   +          +     -0.3299561248944 * S_NumStorePurchases
1159797   +          +    -0.09806597448224 * S_NumWebPurchases
1159798   +          +      0.0427056351245 * S_NumWebVisitsMonth
1159799   +          +     0.03953235628202 * S_Recency  +    -0.11317308767713 *
1159800   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H17 = -0.00107702057163 * S_Income + 0.25116135719972 * S_Kidhome +
-0.04540308470858 * S_MntFishProducts + 0.21487241577 * S_MntFruits + -0.12914913547414 *
S_MntGoldProds + -0.04149021191395 * S_MntMeatProducts + 0.02853521979141 * S_MntSweetProducts
+ -0.2435805887418 * S_MntWines + -0.04509621661407 * S_NumCatalogPurchases +
-0.26492036720429 * S_NumDealsPurchases + -0.3299561248944 * S_NumStorePurchases +
-0.09806597448224 * S_NumWebPurchases + 0.0427056351245 * S_NumWebVisitsMonth +
0.03953235628202 * S_Recency + -0.11317308767713 * S_Teenhome ;
1159801   +   H11  = H11  +     0.50033674561531 * AcceptedCmp10
1159802   +          +    -0.02275693117286 * AcceptedCmp20  +     0.31338891533156 *
1159803   +        AcceptedCmp30  +      0.3901248845706 * AcceptedCmp40
1159804   +          +     0.44314358358111 * AcceptedCmp50  +    -0.20444060864498 *
1159805   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.50033674561531 * AcceptedCmp10 + -0.02275693117286 *
AcceptedCmp20 + 0.31338891533156 * AcceptedCmp30 + 0.3901248845706 * AcceptedCmp40 +
0.44314358358111 * AcceptedCmp50 + -0.20444060864498 * Complain0 ;
1159806   +   H12  = H12  +     0.30103938822692 * AcceptedCmp10
1159807   +          +     0.54298746723422 * AcceptedCmp20  +     0.50401040035525 *
1159808   +        AcceptedCmp30  +     0.43447710825306 * AcceptedCmp40
1159809   +          +     0.60794421030027 * AcceptedCmp50  +    -0.28114274461319 *
1159810   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.30103938822692 * AcceptedCmp10 + 0.54298746723422 *
AcceptedCmp20 + 0.50401040035525 * AcceptedCmp30 + 0.43447710825306 * AcceptedCmp40 +
0.60794421030027 * AcceptedCmp50 + -0.28114274461319 * Complain0 ;
1159811   +   H13  = H13  +     -0.1890212967757 * AcceptedCmp10
1159812   +          +    -0.11487406996391 * AcceptedCmp20  +    -0.22740618754863 *
1159813   +        AcceptedCmp30  +      0.2354510231918 * AcceptedCmp40
1159814   +          +    -0.14327434649067 * AcceptedCmp50  +    -0.17839080850556 *
1159815   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.1890212967757 * AcceptedCmp10 + -0.11487406996391 *
AcceptedCmp20 + -0.22740618754863 * AcceptedCmp30 + 0.2354510231918 * AcceptedCmp40 +
-0.14327434649067 * AcceptedCmp50 + -0.17839080850556 * Complain0 ;
1159816   +   H14  = H14  +    -0.28194187416219 * AcceptedCmp10
1159817   +          +     0.11732089254624 * AcceptedCmp20  +     0.34964075536156 *
1159818   +        AcceptedCmp30  +     0.05772396286169 * AcceptedCmp40
1159819   +          +    -0.08671748651826 * AcceptedCmp50  +      0.0629540108407 *
1159820   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.28194187416219 * AcceptedCmp10 + 0.11732089254624 *
AcceptedCmp20 + 0.34964075536156 * AcceptedCmp30 + 0.05772396286169 * AcceptedCmp40 +
-0.08671748651826 * AcceptedCmp50 + 0.0629540108407 * Complain0 ;
1159821   +   H15  = H15  +    -0.01058257322803 * AcceptedCmp10
1159822   +          +     0.26755355732587 * AcceptedCmp20  +     0.40856661734724 *
1159823   +        AcceptedCmp30  +     0.02977117354989 * AcceptedCmp40
1159824   +          +       0.073655049734 * AcceptedCmp50  +     0.25562048226555 *
1159825   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + -0.01058257322803 * AcceptedCmp10 + 0.26755355732587 *
AcceptedCmp20 + 0.40856661734724 * AcceptedCmp30 + 0.02977117354989 * AcceptedCmp40 +
0.073655049734 * AcceptedCmp50 + 0.25562048226555 * Complain0 ;
1159826   +   H16  = H16  +    -0.65590117532084 * AcceptedCmp10
1159827   +          +    -0.31314161223579 * AcceptedCmp20  +    -0.18863165264573 *
1159828   +        AcceptedCmp30  +    -0.18832338914237 * AcceptedCmp40
1159829   +          +    -0.53765749471786 * AcceptedCmp50  +     0.17409401877513 *
1159830   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H16 = H16 + -0.65590117532084 * AcceptedCmp10 + -0.31314161223579 *
AcceptedCmp20 + -0.18863165264573 * AcceptedCmp30 + -0.18832338914237 * AcceptedCmp40 +
-0.53765749471786 * AcceptedCmp50 + 0.17409401877513 * Complain0 ;
1159831   +   H17  = H17  +    -0.42253231673718 * AcceptedCmp10
1159832   +          +    -0.40954345229557 * AcceptedCmp20  +    -0.30577523080786 *
1159833   +        AcceptedCmp30  +    -0.22396670899437 * AcceptedCmp40
1159834   +          +     0.05757251451004 * AcceptedCmp50  +     0.07813950542487 *
1159835   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H17 = H17 + -0.42253231673718 * AcceptedCmp10 + -0.40954345229557 *
AcceptedCmp20 + -0.30577523080786 * AcceptedCmp30 + -0.22396670899437 * AcceptedCmp40 +
0.05757251451004 * AcceptedCmp50 + 0.07813950542487 * Complain0 ;
1159836   +   H11  = H11  +    -0.14483542022901 * Education2n_Cycle
1159837   +          +     0.32176647745332 * EducationBasic  +     0.00900796305072 *
1159838   +        EducationGraduation  +    -0.00243484910123 * EducationMaster
1159839   +          +    -0.22074132229211 * Marital_StatusDivorced
1159840   +          +     0.70282742634901 * Marital_StatusMarried
1159841   +          +     -0.5926244797961 * Marital_StatusSingle
1159842   +          +     0.21342221410999 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.14483542022901 * Education2n_Cycle + 0.32176647745332 *
EducationBasic + 0.00900796305072 * EducationGraduation + -0.00243484910123 * EducationMaster
+ -0.22074132229211 * Marital_StatusDivorced + 0.70282742634901 * Marital_StatusMarried +
-0.5926244797961 * Marital_StatusSingle + 0.21342221410999 * Marital_StatusTogether ;
1159843   +   H12  = H12  +    -0.10242932200247 * Education2n_Cycle
1159844   +          +     0.34937926721317 * EducationBasic  +    -0.20395479511872 *
1159845   +        EducationGraduation  +     0.31210327899339 * EducationMaster
1159846   +          +    -0.46376392175295 * Marital_StatusDivorced
1159847   +          +       0.589453579718 * Marital_StatusMarried
1159848   +          +    -0.45342174978481 * Marital_StatusSingle
1159849   +          +     0.70517120763557 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.10242932200247 * Education2n_Cycle + 0.34937926721317 *
EducationBasic + -0.20395479511872 * EducationGraduation + 0.31210327899339 * EducationMaster
+ -0.46376392175295 * Marital_StatusDivorced + 0.589453579718 * Marital_StatusMarried +
-0.45342174978481 * Marital_StatusSingle + 0.70517120763557 * Marital_StatusTogether ;
1159850   +   H13  = H13  +     0.24858755570324 * Education2n_Cycle
1159851   +          +     0.07360039359386 * EducationBasic  +    -0.42563056620078 *
1159852   +        EducationGraduation  +    -0.25970840250323 * EducationMaster
1159853   +          +     0.26981972015482 * Marital_StatusDivorced
1159854   +          +    -0.01707364864139 * Marital_StatusMarried
1159855   +          +     0.38646060840009 * Marital_StatusSingle
1159856   +          +     0.19694047086013 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.24858755570324 * Education2n_Cycle + 0.07360039359386 *
EducationBasic + -0.42563056620078 * EducationGraduation + -0.25970840250323 * EducationMaster
+ 0.26981972015482 * Marital_StatusDivorced + -0.01707364864139 * Marital_StatusMarried +
0.38646060840009 * Marital_StatusSingle + 0.19694047086013 * Marital_StatusTogether ;
1159857   +   H14  = H14  +     0.22577522124265 * Education2n_Cycle
1159858   +          +     0.04183136697557 * EducationBasic  +    -0.27725331198825 *
1159859   +        EducationGraduation  +     0.15709188532123 * EducationMaster
1159860   +          +    -0.01933675094701 * Marital_StatusDivorced
1159861   +          +     0.52969577969434 * Marital_StatusMarried
1159862   +          +      -0.348697714569 * Marital_StatusSingle
1159863   +          +      0.5020342481888 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.22577522124265 * Education2n_Cycle + 0.04183136697557 *
EducationBasic + -0.27725331198825 * EducationGraduation + 0.15709188532123 * EducationMaster
+ -0.01933675094701 * Marital_StatusDivorced + 0.52969577969434 * Marital_StatusMarried +
-0.348697714569 * Marital_StatusSingle + 0.5020342481888 * Marital_StatusTogether ;
1159864   +   H15  = H15  +     0.04488332711225 * Education2n_Cycle
1159865   +          +     0.01911097443907 * EducationBasic  +    -0.11699443624996 *
1159866   +        EducationGraduation  +    -0.07291393566738 * EducationMaster
1159867   +          +    -0.04665146013984 * Marital_StatusDivorced
1159868   +          +      -0.586219175167 * Marital_StatusMarried
1159869   +          +     0.55713543417712 * Marital_StatusSingle
1159870   +          +    -0.42208959885332 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.04488332711225 * Education2n_Cycle + 0.01911097443907 *
EducationBasic + -0.11699443624996 * EducationGraduation + -0.07291393566738 * EducationMaster
+ -0.04665146013984 * Marital_StatusDivorced + -0.586219175167 * Marital_StatusMarried +
0.55713543417712 * Marital_StatusSingle + -0.42208959885332 * Marital_StatusTogether ;
1159871   +   H16  = H16  +     0.09174117861154 * Education2n_Cycle
1159872   +          +     -0.1378945860659 * EducationBasic  +     -0.0728635369665 *
1159873   +        EducationGraduation  +     0.29860714824438 * EducationMaster
1159874   +          +    -0.05632171154347 * Marital_StatusDivorced
1159875   +          +     0.03215547861665 * Marital_StatusMarried
1159876   +          +     0.16870781172538 * Marital_StatusSingle
1159877   +          +    -0.04883314322676 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.09174117861154 * Education2n_Cycle + -0.1378945860659 *
EducationBasic + -0.0728635369665 * EducationGraduation + 0.29860714824438 * EducationMaster +
-0.05632171154347 * Marital_StatusDivorced + 0.03215547861665 * Marital_StatusMarried +
0.16870781172538 * Marital_StatusSingle + -0.04883314322676 * Marital_StatusTogether ;
1159878   +   H17  = H17  +    -0.00343694558117 * Education2n_Cycle
1159879   +          +     0.32636427598227 * EducationBasic  +     0.16259654486833 *
1159880   +        EducationGraduation  +    -0.00424229454859 * EducationMaster
1159881   +          +    -0.21765415159355 * Marital_StatusDivorced
1159882   +          +     -0.0542857922075 * Marital_StatusMarried
1159883   +          +     0.20679907454933 * Marital_StatusSingle
1159884   +          +     0.14976519710725 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H17 = H17 + -0.00343694558117 * Education2n_Cycle + 0.32636427598227 *
EducationBasic + 0.16259654486833 * EducationGraduation + -0.00424229454859 * EducationMaster
+ -0.21765415159355 * Marital_StatusDivorced + -0.0542857922075 * Marital_StatusMarried +
0.20679907454933 * Marital_StatusSingle + 0.14976519710725 * Marital_StatusTogether ;
1159885   +   H11  =     0.92977078759503 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 0.92977078759503 + H11 ;
1159886   +   H12  =    -0.97970409253156 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -0.97970409253156 + H12 ;
1159887   +   H13  =     -0.5001144792196 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.5001144792196 + H13 ;
1159888   +   H14  =    -0.90715840862541 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = -0.90715840862541 + H14 ;
1159889   +   H15  =     0.87046153389036 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = 0.87046153389036 + H15 ;
1159890   +   H16  =     0.49066122767086 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = 0.49066122767086 + H16 ;
1159891   +   H17  =    -1.05949763460293 + H17 ;
MPRINT(EM_DIAGRAM):   H17 = -1.05949763460293 + H17 ;
1159892   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1159893   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1159894   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1159895   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1159896   +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
1159897   +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
1159898   +   H17  = TANH(H17 );
MPRINT(EM_DIAGRAM):   H17 = TANH(H17 );
1159899   +END;
MPRINT(EM_DIAGRAM):   END;
1159900   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1159901   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1159902   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1159903   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1159904   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1159905   +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
1159906   +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
1159907   +   H17  = .;
MPRINT(EM_DIAGRAM):   H17 = .;
1159908   +END;
MPRINT(EM_DIAGRAM):   END;
1159909   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1159910   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1159911   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1159912   +
1159913   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1159914   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1159915   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1159916   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1159917   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1159918   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1159919   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1159920   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1159921   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1159922   +end;
MPRINT(EM_DIAGRAM):   end;
1159923   +else do;
MPRINT(EM_DIAGRAM):   else do;
1159924   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1159925   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1159926   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1159927   +   end;
MPRINT(EM_DIAGRAM):   end;
1159928   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1159929   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1159930   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1159931   +   end;
MPRINT(EM_DIAGRAM):   end;
1159932   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1159933   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1159934   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1159935   +   end;
MPRINT(EM_DIAGRAM):   end;
1159936   +end;
MPRINT(EM_DIAGRAM):   end;
1159937   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1159938   +   P_DepVar1  =    -2.32998401250848 * H11  +     -3.2074078511991 * H12
1159939   +          +    -0.69549988605443 * H13  +    -1.74950789108762 * H14
1159940   +          +    -1.74013772071344 * H15  +     2.65306089869015 * H16
1159941   +          +     0.03700459000906 * H17 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.32998401250848 * H11 + -3.2074078511991 * H12 +
-0.69549988605443 * H13 + -1.74950789108762 * H14 + -1.74013772071344 * H15 + 2.65306089869015
* H16 + 0.03700459000906 * H17 ;
1159942   +   P_DepVar1  =    -1.51229898726716 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.51229898726716 + P_DepVar1 ;
1159943   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1159944   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1159945   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1159946   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1159947   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1159948   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1159949   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1159950   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1159951   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1159952   +END;
MPRINT(EM_DIAGRAM):   END;
1159953   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1159954   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1159955   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1159956   +END;
MPRINT(EM_DIAGRAM):   END;
1159957   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1159958   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1159959   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1159960   +END;
MPRINT(EM_DIAGRAM):   END;
1159961   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1159962   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1159963   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1159964   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1159965   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1159966   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1159967   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1159968   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1159969   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1159970   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1159971   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1159972   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1159973   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1159974   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1159975   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1159976   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1159977   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1159978   +END;
MPRINT(EM_DIAGRAM):   END;
1159979   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1159980   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1159981   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1159982   +drop
1159983   +H11
1159984   +H12
1159985   +H13
1159986   +H14
1159987   +H15
1159988   +H16
1159989   +H17
1159990   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 H17 ;
1159991   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1159992   +* Renaming variables for Neural30;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural30;
1159993   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1159994   +* Renaming Posterior variables for Neural30;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural30;
1159995   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1159996   +drop Neural30_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural30_P_DepVar1;
1159997   +Neural30_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural30_P_DepVar1 = P_DepVar1;
1159998   +drop Neural30_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural30_P_DepVar0;
1159999   +Neural30_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural30_P_DepVar0 = P_DepVar0;
1160000   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1160001   +* Renaming _WARN_ variable for Neural30;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural30;
1160002   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1160003   +length Neural30_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural30_WARN_ $4;
1160004   +drop Neural30_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural30_WARN_;
1160005   +Neural30_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural30_WARN_ = _WARN_;
1160006   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1160007   +* Ensmbl9: Scoring Code of model 10 of 10;
MPRINT(EM_DIAGRAM):   * Ensmbl9: Scoring Code of model 10 of 10;
1160008   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1160009   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1160010   +* TOOL: Regression;
MPRINT(EM_DIAGRAM):   * TOOL: Regression;
1160011   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1160012   +* NODE: Reg10;
MPRINT(EM_DIAGRAM):   * NODE: Reg10;
1160013   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1160014   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1160015   +*** begin scoring code for regression;
MPRINT(EM_DIAGRAM):   *** begin scoring code for regression;
1160016   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1160017   +
1160018   +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
1160019   +label _WARN_ = 'Warnings' ;
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings' ;
1160020   +
1160021   +length I_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length I_DepVar $ 12;
1160022   +label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1160023   +*** Target Values;
MPRINT(EM_DIAGRAM):   *** Target Values;
1160024   +array REG10DRF [2] $12 _temporary_ ('1' '0' );
MPRINT(EM_DIAGRAM):   array REG10DRF [2] $12 _temporary_ ('1' '0' );
1160025   +label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1160026   +format U_DepVar BEST.;
MPRINT(EM_DIAGRAM):   format U_DepVar BEST.;
1160027   +*** Unnormalized target values;
MPRINT(EM_DIAGRAM):   *** Unnormalized target values;
1160028   +ARRAY REG10DRU[2]  _TEMPORARY_ (1 0);
MPRINT(EM_DIAGRAM):   ARRAY REG10DRU[2] _TEMPORARY_ (1 0);
1160029   +
1160030   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1160031   +drop _Y ;
MPRINT(EM_DIAGRAM):   drop _Y ;
1160032   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1160033   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1160034   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1160035   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1160036   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1160037   +   _Y = .;
MPRINT(EM_DIAGRAM):   _Y = .;
1160038   +end;
MPRINT(EM_DIAGRAM):   end;
1160039   +else do;
MPRINT(EM_DIAGRAM):   else do;
1160040   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1160041   +      _Y = 1;
MPRINT(EM_DIAGRAM):   _Y = 1;
1160042   +   end;
MPRINT(EM_DIAGRAM):   end;
1160043   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1160044   +      _Y = 0;
MPRINT(EM_DIAGRAM):   _Y = 0;
1160045   +   end;
MPRINT(EM_DIAGRAM):   end;
1160046   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1160047   +      _Y = .;
MPRINT(EM_DIAGRAM):   _Y = .;
1160048   +   end;
MPRINT(EM_DIAGRAM):   end;
1160049   +end;
MPRINT(EM_DIAGRAM):   end;
1160050   +
1160051   +drop _DM_BAD;
MPRINT(EM_DIAGRAM):   drop _DM_BAD;
1160052   +_DM_BAD=0;
MPRINT(EM_DIAGRAM):   _DM_BAD=0;
1160053   +
1160054   +*** Check Income for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Income for missing values ;
1160055   +if missing( Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( Income ) then do;
1160056   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1160057   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1160058   +end;
MPRINT(EM_DIAGRAM):   end;
1160059   +
1160060   +*** Check MntFishProducts for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntFishProducts for missing values ;
1160061   +if missing( MntFishProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntFishProducts ) then do;
1160062   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1160063   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1160064   +end;
MPRINT(EM_DIAGRAM):   end;
1160065   +
1160066   +*** Check MntFruits for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntFruits for missing values ;
1160067   +if missing( MntFruits ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntFruits ) then do;
1160068   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1160069   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1160070   +end;
MPRINT(EM_DIAGRAM):   end;
1160071   +
1160072   +*** Check MntMeatProducts for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntMeatProducts for missing values ;
1160073   +if missing( MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntMeatProducts ) then do;
1160074   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1160075   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1160076   +end;
MPRINT(EM_DIAGRAM):   end;
1160077   +
1160078   +*** Check MntWines for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntWines for missing values ;
1160079   +if missing( MntWines ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntWines ) then do;
1160080   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1160081   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1160082   +end;
MPRINT(EM_DIAGRAM):   end;
1160083   +
1160084   +*** Check NumCatalogPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumCatalogPurchases for missing values ;
1160085   +if missing( NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumCatalogPurchases ) then do;
1160086   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1160087   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1160088   +end;
MPRINT(EM_DIAGRAM):   end;
1160089   +
1160090   +*** Check NumDealsPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumDealsPurchases for missing values ;
1160091   +if missing( NumDealsPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumDealsPurchases ) then do;
1160092   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1160093   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1160094   +end;
MPRINT(EM_DIAGRAM):   end;
1160095   +
1160096   +*** Check NumStorePurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumStorePurchases for missing values ;
1160097   +if missing( NumStorePurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumStorePurchases ) then do;
1160098   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1160099   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1160100   +end;
MPRINT(EM_DIAGRAM):   end;
1160101   +
1160102   +*** Check NumWebPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumWebPurchases for missing values ;
1160103   +if missing( NumWebPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumWebPurchases ) then do;
1160104   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1160105   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1160106   +end;
MPRINT(EM_DIAGRAM):   end;
1160107   +
1160108   +*** Check NumWebVisitsMonth for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumWebVisitsMonth for missing values ;
1160109   +if missing( NumWebVisitsMonth ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumWebVisitsMonth ) then do;
1160110   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1160111   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1160112   +end;
MPRINT(EM_DIAGRAM):   end;
1160113   +
1160114   +*** Check Recency for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Recency for missing values ;
1160115   +if missing( Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( Recency ) then do;
1160116   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1160117   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1160118   +end;
MPRINT(EM_DIAGRAM):   end;
1160119   +
1160120   +*** Check Teenhome for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Teenhome for missing values ;
1160121   +if missing( Teenhome ) then do;
MPRINT(EM_DIAGRAM):   if missing( Teenhome ) then do;
1160122   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1160123   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1160124   +end;
MPRINT(EM_DIAGRAM):   end;
1160125   +
1160126   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1160127   +drop _1_0 ;
MPRINT(EM_DIAGRAM):   drop _1_0 ;
1160128   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1160129   +   _1_0 = .;
MPRINT(EM_DIAGRAM):   _1_0 = .;
1160130   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1160131   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1160132   +end;
MPRINT(EM_DIAGRAM):   end;
1160133   +else do;
MPRINT(EM_DIAGRAM):   else do;
1160134   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1160135   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1160136   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1160137   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1160138   +      _1_0 = 1;
MPRINT(EM_DIAGRAM):   _1_0 = 1;
1160139   +   end;
MPRINT(EM_DIAGRAM):   end;
1160140   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1160141   +      _1_0 = -1;
MPRINT(EM_DIAGRAM):   _1_0 = -1;
1160142   +   end;
MPRINT(EM_DIAGRAM):   end;
1160143   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1160144   +      _1_0 = .;
MPRINT(EM_DIAGRAM):   _1_0 = .;
1160145   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1160146   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1160147   +   end;
MPRINT(EM_DIAGRAM):   end;
1160148   +end;
MPRINT(EM_DIAGRAM):   end;
1160149   +
1160150   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1160151   +drop _2_0 ;
MPRINT(EM_DIAGRAM):   drop _2_0 ;
1160152   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1160153   +   _2_0 = .;
MPRINT(EM_DIAGRAM):   _2_0 = .;
1160154   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1160155   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1160156   +end;
MPRINT(EM_DIAGRAM):   end;
1160157   +else do;
MPRINT(EM_DIAGRAM):   else do;
1160158   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1160159   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1160160   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1160161   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1160162   +      _2_0 = 1;
MPRINT(EM_DIAGRAM):   _2_0 = 1;
1160163   +   end;
MPRINT(EM_DIAGRAM):   end;
1160164   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1160165   +      _2_0 = -1;
MPRINT(EM_DIAGRAM):   _2_0 = -1;
1160166   +   end;
MPRINT(EM_DIAGRAM):   end;
1160167   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1160168   +      _2_0 = .;
MPRINT(EM_DIAGRAM):   _2_0 = .;
1160169   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1160170   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1160171   +   end;
MPRINT(EM_DIAGRAM):   end;
1160172   +end;
MPRINT(EM_DIAGRAM):   end;
1160173   +
1160174   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1160175   +drop _3_0 ;
MPRINT(EM_DIAGRAM):   drop _3_0 ;
1160176   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1160177   +   _3_0 = .;
MPRINT(EM_DIAGRAM):   _3_0 = .;
1160178   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1160179   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1160180   +end;
MPRINT(EM_DIAGRAM):   end;
1160181   +else do;
MPRINT(EM_DIAGRAM):   else do;
1160182   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1160183   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1160184   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1160185   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1160186   +      _3_0 = 1;
MPRINT(EM_DIAGRAM):   _3_0 = 1;
1160187   +   end;
MPRINT(EM_DIAGRAM):   end;
1160188   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1160189   +      _3_0 = -1;
MPRINT(EM_DIAGRAM):   _3_0 = -1;
1160190   +   end;
MPRINT(EM_DIAGRAM):   end;
1160191   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1160192   +      _3_0 = .;
MPRINT(EM_DIAGRAM):   _3_0 = .;
1160193   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1160194   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1160195   +   end;
MPRINT(EM_DIAGRAM):   end;
1160196   +end;
MPRINT(EM_DIAGRAM):   end;
1160197   +
1160198   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1160199   +drop _4_0 ;
MPRINT(EM_DIAGRAM):   drop _4_0 ;
1160200   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1160201   +   _4_0 = .;
MPRINT(EM_DIAGRAM):   _4_0 = .;
1160202   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1160203   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1160204   +end;
MPRINT(EM_DIAGRAM):   end;
1160205   +else do;
MPRINT(EM_DIAGRAM):   else do;
1160206   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1160207   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1160208   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1160209   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1160210   +      _4_0 = 1;
MPRINT(EM_DIAGRAM):   _4_0 = 1;
1160211   +   end;
MPRINT(EM_DIAGRAM):   end;
1160212   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1160213   +      _4_0 = -1;
MPRINT(EM_DIAGRAM):   _4_0 = -1;
1160214   +   end;
MPRINT(EM_DIAGRAM):   end;
1160215   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1160216   +      _4_0 = .;
MPRINT(EM_DIAGRAM):   _4_0 = .;
1160217   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1160218   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1160219   +   end;
MPRINT(EM_DIAGRAM):   end;
1160220   +end;
MPRINT(EM_DIAGRAM):   end;
1160221   +
1160222   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1160223   +drop _5_0 ;
MPRINT(EM_DIAGRAM):   drop _5_0 ;
1160224   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1160225   +   _5_0 = .;
MPRINT(EM_DIAGRAM):   _5_0 = .;
1160226   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1160227   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1160228   +end;
MPRINT(EM_DIAGRAM):   end;
1160229   +else do;
MPRINT(EM_DIAGRAM):   else do;
1160230   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1160231   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1160232   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1160233   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1160234   +      _5_0 = 1;
MPRINT(EM_DIAGRAM):   _5_0 = 1;
1160235   +   end;
MPRINT(EM_DIAGRAM):   end;
1160236   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1160237   +      _5_0 = -1;
MPRINT(EM_DIAGRAM):   _5_0 = -1;
1160238   +   end;
MPRINT(EM_DIAGRAM):   end;
1160239   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1160240   +      _5_0 = .;
MPRINT(EM_DIAGRAM):   _5_0 = .;
1160241   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1160242   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1160243   +   end;
MPRINT(EM_DIAGRAM):   end;
1160244   +end;
MPRINT(EM_DIAGRAM):   end;
1160245   +
1160246   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1160247   +drop _8_0 _8_1 _8_2 _8_3 ;
MPRINT(EM_DIAGRAM):   drop _8_0 _8_1 _8_2 _8_3 ;
1160248   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1160249   +_8_0 = 0;
MPRINT(EM_DIAGRAM):   _8_0 = 0;
1160250   +_8_1 = 0;
MPRINT(EM_DIAGRAM):   _8_1 = 0;
1160251   +_8_2 = 0;
MPRINT(EM_DIAGRAM):   _8_2 = 0;
1160252   +_8_3 = 0;
MPRINT(EM_DIAGRAM):   _8_3 = 0;
1160253   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1160254   +   _8_0 = .;
MPRINT(EM_DIAGRAM):   _8_0 = .;
1160255   +   _8_1 = .;
MPRINT(EM_DIAGRAM):   _8_1 = .;
1160256   +   _8_2 = .;
MPRINT(EM_DIAGRAM):   _8_2 = .;
1160257   +   _8_3 = .;
MPRINT(EM_DIAGRAM):   _8_3 = .;
1160258   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1160259   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1160260   +end;
MPRINT(EM_DIAGRAM):   end;
1160261   +else do;
MPRINT(EM_DIAGRAM):   else do;
1160262   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1160263   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1160264   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1160265   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1160266   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1160267   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1160268   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1160269   +            _8_0 = 1;
MPRINT(EM_DIAGRAM):   _8_0 = 1;
1160270   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1160271   +         end;
MPRINT(EM_DIAGRAM):   end;
1160272   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1160273   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1160274   +               _8_1 = 1;
MPRINT(EM_DIAGRAM):   _8_1 = 1;
1160275   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1160276   +            end;
MPRINT(EM_DIAGRAM):   end;
1160277   +         end;
MPRINT(EM_DIAGRAM):   end;
1160278   +      end;
MPRINT(EM_DIAGRAM):   end;
1160279   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1160280   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1160281   +            _8_2 = 1;
MPRINT(EM_DIAGRAM):   _8_2 = 1;
1160282   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1160283   +         end;
MPRINT(EM_DIAGRAM):   end;
1160284   +      end;
MPRINT(EM_DIAGRAM):   end;
1160285   +   end;
MPRINT(EM_DIAGRAM):   end;
1160286   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1160287   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1160288   +         _8_3 = 1;
MPRINT(EM_DIAGRAM):   _8_3 = 1;
1160289   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1160290   +      end;
MPRINT(EM_DIAGRAM):   end;
1160291   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1160292   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1160293   +            _8_0 = -1;
MPRINT(EM_DIAGRAM):   _8_0 = -1;
1160294   +            _8_1 = -1;
MPRINT(EM_DIAGRAM):   _8_1 = -1;
1160295   +            _8_2 = -1;
MPRINT(EM_DIAGRAM):   _8_2 = -1;
1160296   +            _8_3 = -1;
MPRINT(EM_DIAGRAM):   _8_3 = -1;
1160297   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1160298   +         end;
MPRINT(EM_DIAGRAM):   end;
1160299   +      end;
MPRINT(EM_DIAGRAM):   end;
1160300   +   end;
MPRINT(EM_DIAGRAM):   end;
1160301   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1160302   +      _8_0 = .;
MPRINT(EM_DIAGRAM):   _8_0 = .;
1160303   +      _8_1 = .;
MPRINT(EM_DIAGRAM):   _8_1 = .;
1160304   +      _8_2 = .;
MPRINT(EM_DIAGRAM):   _8_2 = .;
1160305   +      _8_3 = .;
MPRINT(EM_DIAGRAM):   _8_3 = .;
1160306   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1160307   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1160308   +   end;
MPRINT(EM_DIAGRAM):   end;
1160309   +end;
MPRINT(EM_DIAGRAM):   end;
1160310   +
1160311   +*** If missing inputs, use averages;
MPRINT(EM_DIAGRAM):   *** If missing inputs, use averages;
1160312   +if _DM_BAD > 0 then do;
MPRINT(EM_DIAGRAM):   if _DM_BAD > 0 then do;
1160313   +   _P0 = 0.151221567;
MPRINT(EM_DIAGRAM):   _P0 = 0.151221567;
1160314   +   _P1 = 0.848778433;
MPRINT(EM_DIAGRAM):   _P1 = 0.848778433;
1160315   +   goto REG10DR1;
MPRINT(EM_DIAGRAM):   goto REG10DR1;
1160316   +end;
MPRINT(EM_DIAGRAM):   end;
1160317   +
1160318   +*** Compute Linear Predictor;
MPRINT(EM_DIAGRAM):   *** Compute Linear Predictor;
1160319   +drop _TEMP;
MPRINT(EM_DIAGRAM):   drop _TEMP;
1160320   +drop _LP0;
MPRINT(EM_DIAGRAM):   drop _LP0;
1160321   +_LP0 = 0;
MPRINT(EM_DIAGRAM):   _LP0 = 0;
1160322   +
1160323   +***  Effect: AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Effect: AcceptedCmp1 ;
1160324   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1160325   +_LP0 = _LP0 + (   -0.71107732112007) * _TEMP * _1_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.71107732112007) * _TEMP * _1_0;
1160326   +
1160327   +***  Effect: AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Effect: AcceptedCmp2 ;
1160328   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1160329   +_LP0 = _LP0 + (   -0.81763295180983) * _TEMP * _2_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.81763295180983) * _TEMP * _2_0;
1160330   +
1160331   +***  Effect: AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Effect: AcceptedCmp3 ;
1160332   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1160333   +_LP0 = _LP0 + (    -0.8618538514738) * _TEMP * _3_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.8618538514738) * _TEMP * _3_0;
1160334   +
1160335   +***  Effect: AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Effect: AcceptedCmp4 ;
1160336   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1160337   +_LP0 = _LP0 + (   -0.64997710050937) * _TEMP * _4_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.64997710050937) * _TEMP * _4_0;
1160338   +
1160339   +***  Effect: AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Effect: AcceptedCmp5 ;
1160340   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1160341   +_LP0 = _LP0 + (   -0.91699409369659) * _TEMP * _5_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.91699409369659) * _TEMP * _5_0;
1160342   +
1160343   +***  Effect: Income ;
MPRINT(EM_DIAGRAM):   *** Effect: Income ;
1160344   +_TEMP = Income ;
MPRINT(EM_DIAGRAM):   _TEMP = Income ;
1160345   +_LP0 = _LP0 + (    0.00003628120307 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00003628120307 * _TEMP);
1160346   +
1160347   +***  Effect: Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Effect: Marital_Status ;
1160348   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1160349   +_LP0 = _LP0 + (    0.09345382071006) * _TEMP * _8_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.09345382071006) * _TEMP * _8_0;
1160350   +_LP0 = _LP0 + (   -0.47894059934485) * _TEMP * _8_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.47894059934485) * _TEMP * _8_1;
1160351   +_LP0 = _LP0 + (    0.46164092141221) * _TEMP * _8_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.46164092141221) * _TEMP * _8_2;
1160352   +_LP0 = _LP0 + (    -0.5078574429985) * _TEMP * _8_3;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.5078574429985) * _TEMP * _8_3;
1160353   +
1160354   +***  Effect: MntFishProducts ;
MPRINT(EM_DIAGRAM):   *** Effect: MntFishProducts ;
1160355   +_TEMP = MntFishProducts ;
MPRINT(EM_DIAGRAM):   _TEMP = MntFishProducts ;
1160356   +_LP0 = _LP0 + (   -0.00285470778488 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.00285470778488 * _TEMP);
1160357   +
1160358   +***  Effect: MntFruits ;
MPRINT(EM_DIAGRAM):   *** Effect: MntFruits ;
1160359   +_TEMP = MntFruits ;
MPRINT(EM_DIAGRAM):   _TEMP = MntFruits ;
1160360   +_LP0 = _LP0 + (   -0.00481548089585 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.00481548089585 * _TEMP);
1160361   +
1160362   +***  Effect: MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Effect: MntMeatProducts ;
1160363   +_TEMP = MntMeatProducts ;
MPRINT(EM_DIAGRAM):   _TEMP = MntMeatProducts ;
1160364   +_LP0 = _LP0 + (    0.00485302069895 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00485302069895 * _TEMP);
1160365   +
1160366   +***  Effect: MntWines ;
MPRINT(EM_DIAGRAM):   *** Effect: MntWines ;
1160367   +_TEMP = MntWines ;
MPRINT(EM_DIAGRAM):   _TEMP = MntWines ;
1160368   +_LP0 = _LP0 + (   -0.00184060065513 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.00184060065513 * _TEMP);
1160369   +
1160370   +***  Effect: NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumCatalogPurchases ;
1160371   +_TEMP = NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumCatalogPurchases ;
1160372   +_LP0 = _LP0 + (    0.40015202354101 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.40015202354101 * _TEMP);
1160373   +
1160374   +***  Effect: NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumDealsPurchases ;
1160375   +_TEMP = NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumDealsPurchases ;
1160376   +_LP0 = _LP0 + (    0.39526484909287 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.39526484909287 * _TEMP);
1160377   +
1160378   +***  Effect: NumStorePurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumStorePurchases ;
1160379   +_TEMP = NumStorePurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumStorePurchases ;
1160380   +_LP0 = _LP0 + (   -0.21400418800044 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.21400418800044 * _TEMP);
1160381   +
1160382   +***  Effect: NumWebPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumWebPurchases ;
1160383   +_TEMP = NumWebPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumWebPurchases ;
1160384   +_LP0 = _LP0 + (    -0.2223953481686 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.2223953481686 * _TEMP);
1160385   +
1160386   +***  Effect: NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   *** Effect: NumWebVisitsMonth ;
1160387   +_TEMP = NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   _TEMP = NumWebVisitsMonth ;
1160388   +_LP0 = _LP0 + (    0.54388363089232 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.54388363089232 * _TEMP);
1160389   +
1160390   +***  Effect: Recency ;
MPRINT(EM_DIAGRAM):   *** Effect: Recency ;
1160391   +_TEMP = Recency ;
MPRINT(EM_DIAGRAM):   _TEMP = Recency ;
1160392   +_LP0 = _LP0 + (   -0.05513564922633 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.05513564922633 * _TEMP);
1160393   +
1160394   +***  Effect: Teenhome ;
MPRINT(EM_DIAGRAM):   *** Effect: Teenhome ;
1160395   +_TEMP = Teenhome ;
MPRINT(EM_DIAGRAM):   _TEMP = Teenhome ;
1160396   +_LP0 = _LP0 + (   -0.70674092258187 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.70674092258187 * _TEMP);
1160397   +
1160398   +*** Naive Posterior Probabilities;
MPRINT(EM_DIAGRAM):   *** Naive Posterior Probabilities;
1160399   +drop _MAXP _IY _P0 _P1;
MPRINT(EM_DIAGRAM):   drop _MAXP _IY _P0 _P1;
1160400   +_P0 = probnorm((   -0.62163391257391) + _LP0);
MPRINT(EM_DIAGRAM):   _P0 = probnorm(( -0.62163391257391) + _LP0);
1160401   +_P1 = 1.0 - _P0;
MPRINT(EM_DIAGRAM):   _P1 = 1.0 - _P0;
1160402   +
1160403   +REG10DR1:
1160404   +
1160405   +*** Residuals;
MPRINT(EM_DIAGRAM):   REG10DR1: *** Residuals;
1160406   +if (_Y = .) then do;
MPRINT(EM_DIAGRAM):   if (_Y = .) then do;
1160407   +   R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
1160408   +   R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
1160409   +end;
MPRINT(EM_DIAGRAM):   end;
1160410   +else do;
MPRINT(EM_DIAGRAM):   else do;
1160411   +    label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1160412   +    label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1160413   +   R_DepVar1 = - _P0;
MPRINT(EM_DIAGRAM):   R_DepVar1 = - _P0;
1160414   +   R_DepVar0 = - _P1;
MPRINT(EM_DIAGRAM):   R_DepVar0 = - _P1;
1160415   +   select( _Y );
MPRINT(EM_DIAGRAM):   select( _Y );
1160416   +      when (0)  R_DepVar1 = R_DepVar1 + 1;
MPRINT(EM_DIAGRAM):   when (0) R_DepVar1 = R_DepVar1 + 1;
1160417   +      when (1)  R_DepVar0 = R_DepVar0 + 1;
MPRINT(EM_DIAGRAM):   when (1) R_DepVar0 = R_DepVar0 + 1;
1160418   +   end;
MPRINT(EM_DIAGRAM):   end;
1160419   +end;
MPRINT(EM_DIAGRAM):   end;
1160420   +
1160421   +*** Posterior Probabilities and Predicted Level;
MPRINT(EM_DIAGRAM):   *** Posterior Probabilities and Predicted Level;
1160422   +label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1160423   +label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1160424   +P_DepVar1 = _P0;
MPRINT(EM_DIAGRAM):   P_DepVar1 = _P0;
1160425   +_MAXP = _P0;
MPRINT(EM_DIAGRAM):   _MAXP = _P0;
1160426   +_IY = 1;
MPRINT(EM_DIAGRAM):   _IY = 1;
1160427   +P_DepVar0 = _P1;
MPRINT(EM_DIAGRAM):   P_DepVar0 = _P1;
1160428   +if (_P1 >  _MAXP + 1E-8) then do;
MPRINT(EM_DIAGRAM):   if (_P1 > _MAXP + 1E-8) then do;
1160429   +   _MAXP = _P1;
MPRINT(EM_DIAGRAM):   _MAXP = _P1;
1160430   +   _IY = 2;
MPRINT(EM_DIAGRAM):   _IY = 2;
1160431   +end;
MPRINT(EM_DIAGRAM):   end;
1160432   +I_DepVar = REG10DRF[_IY];
MPRINT(EM_DIAGRAM):   I_DepVar = REG10DRF[_IY];
1160433   +U_DepVar = REG10DRU[_IY];
MPRINT(EM_DIAGRAM):   U_DepVar = REG10DRU[_IY];
1160434   +
1160435   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1160436   +***** end scoring code for regression;
MPRINT(EM_DIAGRAM):   ***** end scoring code for regression;
1160437   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1160438   +* Renaming variables for Reg10;
MPRINT(EM_DIAGRAM):   * Renaming variables for Reg10;
1160439   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1160440   +* Renaming Posterior variables for Reg10;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Reg10;
1160441   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1160442   +drop Reg10_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Reg10_P_DepVar1;
1160443   +Reg10_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Reg10_P_DepVar1 = P_DepVar1;
1160444   +drop Reg10_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Reg10_P_DepVar0;
1160445   +Reg10_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Reg10_P_DepVar0 = P_DepVar0;
1160446   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1160447   +* Renaming _WARN_ variable for Reg10;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Reg10;
1160448   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1160449   +length Reg10_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Reg10_WARN_ $4;
1160450   +drop Reg10_WARN_;
MPRINT(EM_DIAGRAM):   drop Reg10_WARN_;
1160451   +Reg10_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Reg10_WARN_ = _WARN_;
1160452   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1160453   +* Ensmbl9: Average Posteriors of 10 models;
MPRINT(EM_DIAGRAM):   * Ensmbl9: Average Posteriors of 10 models;
1160454   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1160455   +P_DepVar1 = (
1160456   +Reg9_P_DepVar1 +
1160457   +Tree5_P_DepVar1 +
1160458   +Neural33_P_DepVar1 +
1160459   +Neural6_P_DepVar1 +
1160460   +Neural31_P_DepVar1 +
1160461   +Neural32_P_DepVar1 +
1160462   +Neural34_P_DepVar1 +
1160463   +Neural35_P_DepVar1 +
1160464   +Neural30_P_DepVar1 +
1160465   +Reg10_P_DepVar1
1160466   +)/10;
MPRINT(EM_DIAGRAM):   P_DepVar1 = ( Reg9_P_DepVar1 + Tree5_P_DepVar1 + Neural33_P_DepVar1 +
Neural6_P_DepVar1 + Neural31_P_DepVar1 + Neural32_P_DepVar1 + Neural34_P_DepVar1 +
Neural35_P_DepVar1 + Neural30_P_DepVar1 + Reg10_P_DepVar1 )/10;
1160467   +P_DepVar0 = (
1160468   +Reg9_P_DepVar0 +
1160469   +Tree5_P_DepVar0 +
1160470   +Neural33_P_DepVar0 +
1160471   +Neural6_P_DepVar0 +
1160472   +Neural31_P_DepVar0 +
1160473   +Neural32_P_DepVar0 +
1160474   +Neural34_P_DepVar0 +
1160475   +Neural35_P_DepVar0 +
1160476   +Neural30_P_DepVar0 +
1160477   +Reg10_P_DepVar0
1160478   +)/10;
MPRINT(EM_DIAGRAM):   P_DepVar0 = ( Reg9_P_DepVar0 + Tree5_P_DepVar0 + Neural33_P_DepVar0 +
Neural6_P_DepVar0 + Neural31_P_DepVar0 + Neural32_P_DepVar0 + Neural34_P_DepVar0 +
Neural35_P_DepVar0 + Neural30_P_DepVar0 + Reg10_P_DepVar0 )/10;
1160479   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1160480   +* Ensmbl9: Computing Classification Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl9: Computing Classification Vars;
1160481   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1160482   +length I_DepVar $32;
MPRINT(EM_DIAGRAM):   length I_DepVar $32;
WARNING: Length of character variable I_DepVar has already been set.
         Use the LENGTH statement as the very first statement in the DATA STEP to declare the
         length of a character variable.
1160483   +label I_DepVar = 'Into: DepVar';
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar';
1160484   +length _format $200;
MPRINT(EM_DIAGRAM):   length _format $200;
1160485   +drop _format;
MPRINT(EM_DIAGRAM):   drop _format;
1160486   +_format= ' ';
MPRINT(EM_DIAGRAM):   _format= ' ';
1160487   +_p_= 0;
MPRINT(EM_DIAGRAM):   _p_= 0;
1160488   +drop _p_;
MPRINT(EM_DIAGRAM):   drop _p_;
1160489   +if P_DepVar1 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar1 > _p_ then do;
1160490   +_p_= P_DepVar1;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar1;
1160491   +_format= '1';
MPRINT(EM_DIAGRAM):   _format= '1';
1160492   +end;
MPRINT(EM_DIAGRAM):   end;
1160493   +if P_DepVar0 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar0 > _p_ then do;
1160494   +_p_= P_DepVar0;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar0;
1160495   +_format= '0';
MPRINT(EM_DIAGRAM):   _format= '0';
1160496   +end;
MPRINT(EM_DIAGRAM):   end;
1160497   +%DMNORMCP(_format,I_DepVar);
MPRINT(DMNORMCP):   I_DepVar=dmnorm(_format,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1160498   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1160499   +* Ensmbl9: Producing Unformatted variable;
MPRINT(EM_DIAGRAM):   * Ensmbl9: Producing Unformatted variable;
1160500   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1160501   +label U_DepVar = "Unnormalized Into: DepVar";
MPRINT(EM_DIAGRAM):   label U_DepVar = "Unnormalized Into: DepVar";
1160502   +if I_DepVar = '1' then U_DepVar = 1;
MPRINT(EM_DIAGRAM):   if I_DepVar = '1' then U_DepVar = 1;
1160503   +else
1160504   +if I_DepVar = '0' then U_DepVar = 0;
MPRINT(EM_DIAGRAM):   else if I_DepVar = '0' then U_DepVar = 0;
1160505   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1160506   +* Ensmbl9: Computing _WARN_ Variable;
MPRINT(EM_DIAGRAM):   * Ensmbl9: Computing _WARN_ Variable;
1160507   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1160508   +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
1160509   +label _WARN_ = 'Warnings';
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings';
1160510   +_WARN_ = '';
MPRINT(EM_DIAGRAM):   _WARN_ = '';
1160511   +if index(REG9_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(REG9_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1,
1) ='M';
1160512   +if index(REG9_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(REG9_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2,
1) ='U';
1160513   +if index(REG9_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(REG9_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3,
1) ='P';
1160514   +if index(REG9_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(REG9_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4,
1) ='C';
1160515   +if index(TREE5_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(TREE5_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_,
1, 1) ='M';
1160516   +if index(TREE5_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(TREE5_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_,
2, 1) ='U';
1160517   +if index(TREE5_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(TREE5_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_,
3, 1) ='P';
1160518   +if index(TREE5_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(TREE5_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_,
4, 1) ='C';
1160519   +if index(NEURAL33_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M'
1160519  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL33_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
1160520   +if index(NEURAL33_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U'
1160520  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL33_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
1160521   +if index(NEURAL33_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P'
1160521  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL33_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
1160522   +if index(NEURAL33_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C'
1160522  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL33_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
1160523   +if index(NEURAL6_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(NEURAL6_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_,
1, 1) ='M';
1160524   +if index(NEURAL6_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(NEURAL6_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_,
2, 1) ='U';
1160525   +if index(NEURAL6_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(NEURAL6_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_,
3, 1) ='P';
1160526   +if index(NEURAL6_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(NEURAL6_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_,
4, 1) ='C';
1160527   +if index(NEURAL31_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M'
1160527  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL31_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
1160528   +if index(NEURAL31_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U'
1160528  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL31_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
1160529   +if index(NEURAL31_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P'
1160529  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL31_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
1160530   +if index(NEURAL31_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C'
1160530  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL31_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
1160531   +if index(NEURAL32_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M'
1160531  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL32_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
1160532   +if index(NEURAL32_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U'
1160532  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL32_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
1160533   +if index(NEURAL32_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P'
1160533  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL32_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
1160534   +if index(NEURAL32_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C'
1160534  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL32_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
1160535   +if index(NEURAL34_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M'
1160535  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL34_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
1160536   +if index(NEURAL34_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U'
1160536  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL34_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
1160537   +if index(NEURAL34_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P'
1160537  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL34_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
1160538   +if index(NEURAL34_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C'
1160538  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL34_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
1160539   +if index(NEURAL35_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M'
1160539  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL35_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
1160540   +if index(NEURAL35_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U'
1160540  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL35_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
1160541   +if index(NEURAL35_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P'
1160541  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL35_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
1160542   +if index(NEURAL35_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C'
1160542  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL35_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
1160543   +if index(NEURAL30_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M'
1160543  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL30_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
1160544   +if index(NEURAL30_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U'
1160544  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL30_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
1160545   +if index(NEURAL30_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P'
1160545  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL30_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
1160546   +if index(NEURAL30_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C'
1160546  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL30_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
1160547   +if index(REG10_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(REG10_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_,
1, 1) ='M';
1160548   +if index(REG10_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(REG10_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_,
2, 1) ='U';
1160549   +if index(REG10_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(REG10_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_,
3, 1) ='P';
1160550   +if index(REG10_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(REG10_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_,
4, 1) ='C';
1160551   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1160552   +* Ensmbl9: Computing Residual Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl9: Computing Residual Vars;
1160553   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1160554   +if
1160555   +F_DepVar NE '1'
1160556   +AND F_DepVar NE '0'
1160557   +then do;
MPRINT(EM_DIAGRAM):   if F_DepVar NE '1' AND F_DepVar NE '0' then do;
1160558   +R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
1160559   +R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
1160560   +end;
MPRINT(EM_DIAGRAM):   end;
1160561   +else do;
MPRINT(EM_DIAGRAM):   else do;
1160562   +R_DepVar1 = -P_DepVar1;
MPRINT(EM_DIAGRAM):   R_DepVar1 = -P_DepVar1;
1160563   +R_DepVar0 = -P_DepVar0;
MPRINT(EM_DIAGRAM):   R_DepVar0 = -P_DepVar0;
1160564   +SELECT(F_DepVar);
MPRINT(EM_DIAGRAM):   SELECT(F_DepVar);
1160565   +WHEN('1') R_DepVar1 = R_DepVar1 +1;
MPRINT(EM_DIAGRAM):   WHEN('1') R_DepVar1 = R_DepVar1 +1;
1160566   +WHEN('0') R_DepVar0 = R_DepVar0 +1;
MPRINT(EM_DIAGRAM):   WHEN('0') R_DepVar0 = R_DepVar0 +1;
1160567   +OTHERWISE;
MPRINT(EM_DIAGRAM):   OTHERWISE;
1160568   +END;
MPRINT(EM_DIAGRAM):   END;
1160569   +END;
MPRINT(EM_DIAGRAM):   END;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1160570    run;
 
NOTE: DATA STEP view saved on file EMWS8.ENSMBL9_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.REG9_VALIDATE.VIEW used (Total process time):
      real time           0.18 seconds
      cpu time            0.18 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.20 seconds
      cpu time            0.20 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1160571    quit;
1160572    filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
MPRINT(EM_DIAGRAM):
MPRINT(CALFITSTATSNOMINAL):   data _tmpTrainFitTable(keep=_TARGET_ _ASE_ _DIV_ _MAX_ _NOBS_
_RASE_ _SSE_ _DISF_ _MISC_ _WRONG_ rename=(_TARGET_=TARGET));
MPRINT(CALFITSTATSNOMINAL):   set EMWS8.Ensmbl9_TRAIN end=eof;
MPRINT(CALFITSTATSNOMINAL):   length _TARGET_ $32;
MPRINT(CALFITSTATSNOMINAL):   length _ASE_ _DIV_ _MAX_ _NOBS_ _RASE_ _SSE_ _DISF_ _MISC_
_WRONG_ 8;
MPRINT(CALFITSTATSNOMINAL):   label _TARGET_ = "Train: Target Variable" _NOBS_= "Train: Sum of
Frequencies" _SSE_= "Train: Sum of Squared Errors" _MAX_= "Train: Maximum Absolute Error"
_DIV_ = "Train: Divisor for ASE" _WRONG_= "Train: Number of Wrong Classifications" _DISF_=
"Train: Frequency of Classified Cases" _MISC_= "Train: Misclassification Rate" _ASE_ = "Train:
Average Squared Error" _RASE_ = "Train: Root Average Squared Error";
MPRINT(CALFITSTATSNOMINAL):   retain _TARGET_ _WRONG_ _DIV_ _MAX_ _SSE_ _DISF_ _MISC_ _ASE_
_RASE_ ;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar1 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar1)*(R_DepVar1);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar1));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar0 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar0)*(R_DepVar0);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar0));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if F_DepVar ne "" then do;
MPRINT(CALFITSTATSNOMINAL):   _DISF_+ 1;
MPRINT(CALFITSTATSNOMINAL):   _WRONG_+(F_DepVar ne I_DepVar);
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if eof then do;
MPRINT(CALFITSTATSNOMINAL):   _TARGET_ = "DepVar";
MPRINT(CALFITSTATSNOMINAL):   _MAX = 0;
MPRINT(CALFITSTATSNOMINAL):   if _DISF_ ne 0 then do;
MPRINT(CALFITSTATSNOMINAL):   _MISC_=_WRONG_/_DISF_;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   _NOBS_ = _DIV_/2;
MPRINT(CALFITSTATSNOMINAL):   _ASE_=_SSE_/_DIV_;
MPRINT(CALFITSTATSNOMINAL):   _RASE_=sqrt(_ASE_);
MPRINT(CALFITSTATSNOMINAL):   output;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl9_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set _tmpTrainFitTable;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):
MPRINT(CALFITSTATSNOMINAL):   data _tmpValidFitTable(keep=_TARGET_ _ASE_ _DIV_ _MAX_ _NOBS_
_RASE_ _SSE_ _DISF_ _MISC_ _WRONG_ rename=(_TARGET_=TARGET));
MPRINT(CALFITSTATSNOMINAL):   set EMWS8.Ensmbl9_VALIDATE end=eof;
MPRINT(CALFITSTATSNOMINAL):   length _TARGET_ $32;
MPRINT(CALFITSTATSNOMINAL):   length _ASE_ _DIV_ _MAX_ _NOBS_ _RASE_ _SSE_ _DISF_ _MISC_
_WRONG_ 8;
MPRINT(CALFITSTATSNOMINAL):   label _TARGET_ = "Valid: Target Variable" _NOBS_= "Valid: Sum of
Frequencies" _SSE_= "Valid: Sum of Squared Errors" _MAX_= "Valid: Maximum Absolute Error"
_DIV_ = "Valid: Divisor for ASE" _WRONG_= "Valid: Number of Wrong Classifications" _DISF_=
"Valid: Frequency of Classified Cases" _MISC_= "Valid: Misclassification Rate" _ASE_ = "Valid:
Average Squared Error" _RASE_ = "Valid: Root Average Squared Error";
MPRINT(CALFITSTATSNOMINAL):   retain _TARGET_ _WRONG_ _DIV_ _MAX_ _SSE_ _DISF_ _MISC_ _ASE_
_RASE_ ;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar1 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar1)*(R_DepVar1);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar1));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar0 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar0)*(R_DepVar0);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar0));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if F_DepVar ne "" then do;
MPRINT(CALFITSTATSNOMINAL):   _DISF_+ 1;
MPRINT(CALFITSTATSNOMINAL):   _WRONG_+(F_DepVar ne I_DepVar);
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if eof then do;
MPRINT(CALFITSTATSNOMINAL):   _TARGET_ = "DepVar";
MPRINT(CALFITSTATSNOMINAL):   _MAX = 0;
MPRINT(CALFITSTATSNOMINAL):   if _DISF_ ne 0 then do;
MPRINT(CALFITSTATSNOMINAL):   _MISC_=_WRONG_/_DISF_;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   _NOBS_ = _DIV_/2;
MPRINT(CALFITSTATSNOMINAL):   _ASE_=_SSE_/_DIV_;
MPRINT(CALFITSTATSNOMINAL):   _RASE_=sqrt(_ASE_);
MPRINT(CALFITSTATSNOMINAL):   output;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data _tmpdata_(DROP= TARGET);
MPRINT(EM_DIAGRAM):   set _tmpValidFitTable;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _tmpdata_;
MPRINT(EM_DIAGRAM):   set _tmpdata_;
MPRINT(EM_DIAGRAM):   rename _ASE_=_VASE_;
MPRINT(EM_DIAGRAM):   rename _DIV_=_VDIV_;
MPRINT(EM_DIAGRAM):   rename _MAX_=_VMAX_;
MPRINT(EM_DIAGRAM):   rename _NOBS_=_VNOBS_;
MPRINT(EM_DIAGRAM):   rename _RASE_=_VRASE_;
MPRINT(EM_DIAGRAM):   rename _SSE_=_VSSE_;
MPRINT(EM_DIAGRAM):   rename _DISF_=_VDISF_;
MPRINT(EM_DIAGRAM):   rename _MISC_=_VMISC_;
MPRINT(EM_DIAGRAM):   rename _WRONG_=_VWRONG_;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl9_EMOUTFIT;
MPRINT(EM_DIAGRAM):   merge EMWS8.Ensmbl9_EMOUTFIT _tmpdata_;
MPRINT(EM_DIAGRAM):   run;
1160632    filename _pref
1160632  ! "C:\\predictive-models-project\Workspaces\EMWS8\Reg9\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Reg9\EMPUBLISHSCORE.sas";
1160633    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1160634    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Reg9\EMPUBLISHSCORE.sas.
1160635   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1160636   +*** begin scoring code for regression;
MPRINT(EM_DIAGRAM):   *** begin scoring code for regression;
1160637   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1160638   +
1160639   +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
1160640   +label _WARN_ = 'Warnings' ;
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings' ;
1160641   +
1160642   +length I_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length I_DepVar $ 12;
1160643   +label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1160644   +*** Target Values;
MPRINT(EM_DIAGRAM):   *** Target Values;
1160645   +array REG9DRF [2] $12 _temporary_ ('1' '0' );
MPRINT(EM_DIAGRAM):   array REG9DRF [2] $12 _temporary_ ('1' '0' );
1160646   +label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1160647   +format U_DepVar BEST.;
MPRINT(EM_DIAGRAM):   format U_DepVar BEST.;
1160648   +*** Unnormalized target values;
MPRINT(EM_DIAGRAM):   *** Unnormalized target values;
1160649   +ARRAY REG9DRU[2]  _TEMPORARY_ (1 0);
MPRINT(EM_DIAGRAM):   ARRAY REG9DRU[2] _TEMPORARY_ (1 0);
1160650   +
1160651   +drop _DM_BAD;
MPRINT(EM_DIAGRAM):   drop _DM_BAD;
1160652   +_DM_BAD=0;
MPRINT(EM_DIAGRAM):   _DM_BAD=0;
1160653   +
1160654   +*** Check Income for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Income for missing values ;
1160655   +if missing( Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( Income ) then do;
1160656   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1160657   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1160658   +end;
MPRINT(EM_DIAGRAM):   end;
1160659   +
1160660   +*** Check MntFishProducts for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntFishProducts for missing values ;
1160661   +if missing( MntFishProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntFishProducts ) then do;
1160662   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1160663   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1160664   +end;
MPRINT(EM_DIAGRAM):   end;
1160665   +
1160666   +*** Check MntFruits for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntFruits for missing values ;
1160667   +if missing( MntFruits ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntFruits ) then do;
1160668   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1160669   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1160670   +end;
MPRINT(EM_DIAGRAM):   end;
1160671   +
1160672   +*** Check MntMeatProducts for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntMeatProducts for missing values ;
1160673   +if missing( MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntMeatProducts ) then do;
1160674   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1160675   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1160676   +end;
MPRINT(EM_DIAGRAM):   end;
1160677   +
1160678   +*** Check MntWines for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntWines for missing values ;
1160679   +if missing( MntWines ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntWines ) then do;
1160680   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1160681   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1160682   +end;
MPRINT(EM_DIAGRAM):   end;
1160683   +
1160684   +*** Check NumCatalogPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumCatalogPurchases for missing values ;
1160685   +if missing( NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumCatalogPurchases ) then do;
1160686   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1160687   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1160688   +end;
MPRINT(EM_DIAGRAM):   end;
1160689   +
1160690   +*** Check NumDealsPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumDealsPurchases for missing values ;
1160691   +if missing( NumDealsPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumDealsPurchases ) then do;
1160692   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1160693   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1160694   +end;
MPRINT(EM_DIAGRAM):   end;
1160695   +
1160696   +*** Check NumStorePurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumStorePurchases for missing values ;
1160697   +if missing( NumStorePurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumStorePurchases ) then do;
1160698   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1160699   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1160700   +end;
MPRINT(EM_DIAGRAM):   end;
1160701   +
1160702   +*** Check NumWebPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumWebPurchases for missing values ;
1160703   +if missing( NumWebPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumWebPurchases ) then do;
1160704   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1160705   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1160706   +end;
MPRINT(EM_DIAGRAM):   end;
1160707   +
1160708   +*** Check NumWebVisitsMonth for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumWebVisitsMonth for missing values ;
1160709   +if missing( NumWebVisitsMonth ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumWebVisitsMonth ) then do;
1160710   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1160711   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1160712   +end;
MPRINT(EM_DIAGRAM):   end;
1160713   +
1160714   +*** Check Recency for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Recency for missing values ;
1160715   +if missing( Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( Recency ) then do;
1160716   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1160717   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1160718   +end;
MPRINT(EM_DIAGRAM):   end;
1160719   +
1160720   +*** Check Teenhome for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Teenhome for missing values ;
1160721   +if missing( Teenhome ) then do;
MPRINT(EM_DIAGRAM):   if missing( Teenhome ) then do;
1160722   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1160723   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1160724   +end;
MPRINT(EM_DIAGRAM):   end;
1160725   +
1160726   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1160727   +drop _1_0 ;
MPRINT(EM_DIAGRAM):   drop _1_0 ;
1160728   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1160729   +   _1_0 = .;
MPRINT(EM_DIAGRAM):   _1_0 = .;
1160730   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1160731   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1160732   +end;
MPRINT(EM_DIAGRAM):   end;
1160733   +else do;
MPRINT(EM_DIAGRAM):   else do;
1160734   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1160735   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1160736   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1160737   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1160738   +      _1_0 = 1;
MPRINT(EM_DIAGRAM):   _1_0 = 1;
1160739   +   end;
MPRINT(EM_DIAGRAM):   end;
1160740   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1160741   +      _1_0 = -1;
MPRINT(EM_DIAGRAM):   _1_0 = -1;
1160742   +   end;
MPRINT(EM_DIAGRAM):   end;
1160743   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1160744   +      _1_0 = .;
MPRINT(EM_DIAGRAM):   _1_0 = .;
1160745   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1160746   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1160747   +   end;
MPRINT(EM_DIAGRAM):   end;
1160748   +end;
MPRINT(EM_DIAGRAM):   end;
1160749   +
1160750   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1160751   +drop _2_0 ;
MPRINT(EM_DIAGRAM):   drop _2_0 ;
1160752   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1160753   +   _2_0 = .;
MPRINT(EM_DIAGRAM):   _2_0 = .;
1160754   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1160755   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1160756   +end;
MPRINT(EM_DIAGRAM):   end;
1160757   +else do;
MPRINT(EM_DIAGRAM):   else do;
1160758   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1160759   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1160760   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1160761   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1160762   +      _2_0 = 1;
MPRINT(EM_DIAGRAM):   _2_0 = 1;
1160763   +   end;
MPRINT(EM_DIAGRAM):   end;
1160764   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1160765   +      _2_0 = -1;
MPRINT(EM_DIAGRAM):   _2_0 = -1;
1160766   +   end;
MPRINT(EM_DIAGRAM):   end;
1160767   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1160768   +      _2_0 = .;
MPRINT(EM_DIAGRAM):   _2_0 = .;
1160769   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1160770   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1160771   +   end;
MPRINT(EM_DIAGRAM):   end;
1160772   +end;
MPRINT(EM_DIAGRAM):   end;
1160773   +
1160774   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1160775   +drop _3_0 ;
MPRINT(EM_DIAGRAM):   drop _3_0 ;
1160776   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1160777   +   _3_0 = .;
MPRINT(EM_DIAGRAM):   _3_0 = .;
1160778   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1160779   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1160780   +end;
MPRINT(EM_DIAGRAM):   end;
1160781   +else do;
MPRINT(EM_DIAGRAM):   else do;
1160782   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1160783   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1160784   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1160785   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1160786   +      _3_0 = 1;
MPRINT(EM_DIAGRAM):   _3_0 = 1;
1160787   +   end;
MPRINT(EM_DIAGRAM):   end;
1160788   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1160789   +      _3_0 = -1;
MPRINT(EM_DIAGRAM):   _3_0 = -1;
1160790   +   end;
MPRINT(EM_DIAGRAM):   end;
1160791   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1160792   +      _3_0 = .;
MPRINT(EM_DIAGRAM):   _3_0 = .;
1160793   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1160794   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1160795   +   end;
MPRINT(EM_DIAGRAM):   end;
1160796   +end;
MPRINT(EM_DIAGRAM):   end;
1160797   +
1160798   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1160799   +drop _4_0 ;
MPRINT(EM_DIAGRAM):   drop _4_0 ;
1160800   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1160801   +   _4_0 = .;
MPRINT(EM_DIAGRAM):   _4_0 = .;
1160802   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1160803   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1160804   +end;
MPRINT(EM_DIAGRAM):   end;
1160805   +else do;
MPRINT(EM_DIAGRAM):   else do;
1160806   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1160807   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1160808   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1160809   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1160810   +      _4_0 = 1;
MPRINT(EM_DIAGRAM):   _4_0 = 1;
1160811   +   end;
MPRINT(EM_DIAGRAM):   end;
1160812   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1160813   +      _4_0 = -1;
MPRINT(EM_DIAGRAM):   _4_0 = -1;
1160814   +   end;
MPRINT(EM_DIAGRAM):   end;
1160815   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1160816   +      _4_0 = .;
MPRINT(EM_DIAGRAM):   _4_0 = .;
1160817   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1160818   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1160819   +   end;
MPRINT(EM_DIAGRAM):   end;
1160820   +end;
MPRINT(EM_DIAGRAM):   end;
1160821   +
1160822   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1160823   +drop _5_0 ;
MPRINT(EM_DIAGRAM):   drop _5_0 ;
1160824   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1160825   +   _5_0 = .;
MPRINT(EM_DIAGRAM):   _5_0 = .;
1160826   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1160827   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1160828   +end;
MPRINT(EM_DIAGRAM):   end;
1160829   +else do;
MPRINT(EM_DIAGRAM):   else do;
1160830   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1160831   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1160832   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1160833   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1160834   +      _5_0 = 1;
MPRINT(EM_DIAGRAM):   _5_0 = 1;
1160835   +   end;
MPRINT(EM_DIAGRAM):   end;
1160836   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1160837   +      _5_0 = -1;
MPRINT(EM_DIAGRAM):   _5_0 = -1;
1160838   +   end;
MPRINT(EM_DIAGRAM):   end;
1160839   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1160840   +      _5_0 = .;
MPRINT(EM_DIAGRAM):   _5_0 = .;
1160841   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1160842   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1160843   +   end;
MPRINT(EM_DIAGRAM):   end;
1160844   +end;
MPRINT(EM_DIAGRAM):   end;
1160845   +
1160846   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1160847   +drop _8_0 _8_1 _8_2 _8_3 ;
MPRINT(EM_DIAGRAM):   drop _8_0 _8_1 _8_2 _8_3 ;
1160848   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1160849   +_8_0 = 0;
MPRINT(EM_DIAGRAM):   _8_0 = 0;
1160850   +_8_1 = 0;
MPRINT(EM_DIAGRAM):   _8_1 = 0;
1160851   +_8_2 = 0;
MPRINT(EM_DIAGRAM):   _8_2 = 0;
1160852   +_8_3 = 0;
MPRINT(EM_DIAGRAM):   _8_3 = 0;
1160853   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1160854   +   _8_0 = .;
MPRINT(EM_DIAGRAM):   _8_0 = .;
1160855   +   _8_1 = .;
MPRINT(EM_DIAGRAM):   _8_1 = .;
1160856   +   _8_2 = .;
MPRINT(EM_DIAGRAM):   _8_2 = .;
1160857   +   _8_3 = .;
MPRINT(EM_DIAGRAM):   _8_3 = .;
1160858   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1160859   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1160860   +end;
MPRINT(EM_DIAGRAM):   end;
1160861   +else do;
MPRINT(EM_DIAGRAM):   else do;
1160862   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1160863   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1160864   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1160865   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1160866   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1160867   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1160868   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1160869   +            _8_0 = 1;
MPRINT(EM_DIAGRAM):   _8_0 = 1;
1160870   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1160871   +         end;
MPRINT(EM_DIAGRAM):   end;
1160872   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1160873   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1160874   +               _8_1 = 1;
MPRINT(EM_DIAGRAM):   _8_1 = 1;
1160875   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1160876   +            end;
MPRINT(EM_DIAGRAM):   end;
1160877   +         end;
MPRINT(EM_DIAGRAM):   end;
1160878   +      end;
MPRINT(EM_DIAGRAM):   end;
1160879   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1160880   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1160881   +            _8_2 = 1;
MPRINT(EM_DIAGRAM):   _8_2 = 1;
1160882   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1160883   +         end;
MPRINT(EM_DIAGRAM):   end;
1160884   +      end;
MPRINT(EM_DIAGRAM):   end;
1160885   +   end;
MPRINT(EM_DIAGRAM):   end;
1160886   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1160887   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1160888   +         _8_3 = 1;
MPRINT(EM_DIAGRAM):   _8_3 = 1;
1160889   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1160890   +      end;
MPRINT(EM_DIAGRAM):   end;
1160891   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1160892   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1160893   +            _8_0 = -1;
MPRINT(EM_DIAGRAM):   _8_0 = -1;
1160894   +            _8_1 = -1;
MPRINT(EM_DIAGRAM):   _8_1 = -1;
1160895   +            _8_2 = -1;
MPRINT(EM_DIAGRAM):   _8_2 = -1;
1160896   +            _8_3 = -1;
MPRINT(EM_DIAGRAM):   _8_3 = -1;
1160897   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1160898   +         end;
MPRINT(EM_DIAGRAM):   end;
1160899   +      end;
MPRINT(EM_DIAGRAM):   end;
1160900   +   end;
MPRINT(EM_DIAGRAM):   end;
1160901   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1160902   +      _8_0 = .;
MPRINT(EM_DIAGRAM):   _8_0 = .;
1160903   +      _8_1 = .;
MPRINT(EM_DIAGRAM):   _8_1 = .;
1160904   +      _8_2 = .;
MPRINT(EM_DIAGRAM):   _8_2 = .;
1160905   +      _8_3 = .;
MPRINT(EM_DIAGRAM):   _8_3 = .;
1160906   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1160907   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1160908   +   end;
MPRINT(EM_DIAGRAM):   end;
1160909   +end;
MPRINT(EM_DIAGRAM):   end;
1160910   +
1160911   +*** If missing inputs, use averages;
MPRINT(EM_DIAGRAM):   *** If missing inputs, use averages;
1160912   +if _DM_BAD > 0 then do;
MPRINT(EM_DIAGRAM):   if _DM_BAD > 0 then do;
1160913   +   _P0 = 0.151221567;
MPRINT(EM_DIAGRAM):   _P0 = 0.151221567;
1160914   +   _P1 = 0.848778433;
MPRINT(EM_DIAGRAM):   _P1 = 0.848778433;
1160915   +   goto REG9DR1;
MPRINT(EM_DIAGRAM):   goto REG9DR1;
1160916   +end;
MPRINT(EM_DIAGRAM):   end;
1160917   +
1160918   +*** Compute Linear Predictor;
MPRINT(EM_DIAGRAM):   *** Compute Linear Predictor;
1160919   +drop _TEMP;
MPRINT(EM_DIAGRAM):   drop _TEMP;
1160920   +drop _LP0;
MPRINT(EM_DIAGRAM):   drop _LP0;
1160921   +_LP0 = 0;
MPRINT(EM_DIAGRAM):   _LP0 = 0;
1160922   +
1160923   +***  Effect: AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Effect: AcceptedCmp1 ;
1160924   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1160925   +_LP0 = _LP0 + (   -1.28114872833376) * _TEMP * _1_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.28114872833376) * _TEMP * _1_0;
1160926   +
1160927   +***  Effect: AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Effect: AcceptedCmp2 ;
1160928   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1160929   +_LP0 = _LP0 + (    -1.4871451186069) * _TEMP * _2_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.4871451186069) * _TEMP * _2_0;
1160930   +
1160931   +***  Effect: AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Effect: AcceptedCmp3 ;
1160932   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1160933   +_LP0 = _LP0 + (   -1.58721567367346) * _TEMP * _3_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.58721567367346) * _TEMP * _3_0;
1160934   +
1160935   +***  Effect: AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Effect: AcceptedCmp4 ;
1160936   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1160937   +_LP0 = _LP0 + (    -1.1573037622615) * _TEMP * _4_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.1573037622615) * _TEMP * _4_0;
1160938   +
1160939   +***  Effect: AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Effect: AcceptedCmp5 ;
1160940   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1160941   +_LP0 = _LP0 + (   -1.68835129992038) * _TEMP * _5_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.68835129992038) * _TEMP * _5_0;
1160942   +
1160943   +***  Effect: Income ;
MPRINT(EM_DIAGRAM):   *** Effect: Income ;
1160944   +_TEMP = Income ;
MPRINT(EM_DIAGRAM):   _TEMP = Income ;
1160945   +_LP0 = _LP0 + (    0.00006770818936 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00006770818936 * _TEMP);
1160946   +
1160947   +***  Effect: Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Effect: Marital_Status ;
1160948   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1160949   +_LP0 = _LP0 + (    0.18351716765826) * _TEMP * _8_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.18351716765826) * _TEMP * _8_0;
1160950   +_LP0 = _LP0 + (   -0.88993819943493) * _TEMP * _8_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.88993819943493) * _TEMP * _8_1;
1160951   +_LP0 = _LP0 + (    0.89971120865107) * _TEMP * _8_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.89971120865107) * _TEMP * _8_2;
1160952   +_LP0 = _LP0 + (   -0.96825171718714) * _TEMP * _8_3;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.96825171718714) * _TEMP * _8_3;
1160953   +
1160954   +***  Effect: MntFishProducts ;
MPRINT(EM_DIAGRAM):   *** Effect: MntFishProducts ;
1160955   +_TEMP = MntFishProducts ;
MPRINT(EM_DIAGRAM):   _TEMP = MntFishProducts ;
1160956   +_LP0 = _LP0 + (    -0.0053789406447 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.0053789406447 * _TEMP);
1160957   +
1160958   +***  Effect: MntFruits ;
MPRINT(EM_DIAGRAM):   *** Effect: MntFruits ;
1160959   +_TEMP = MntFruits ;
MPRINT(EM_DIAGRAM):   _TEMP = MntFruits ;
1160960   +_LP0 = _LP0 + (   -0.00810096702081 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.00810096702081 * _TEMP);
1160961   +
1160962   +***  Effect: MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Effect: MntMeatProducts ;
1160963   +_TEMP = MntMeatProducts ;
MPRINT(EM_DIAGRAM):   _TEMP = MntMeatProducts ;
1160964   +_LP0 = _LP0 + (    0.00876618054091 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00876618054091 * _TEMP);
1160965   +
1160966   +***  Effect: MntWines ;
MPRINT(EM_DIAGRAM):   *** Effect: MntWines ;
1160967   +_TEMP = MntWines ;
MPRINT(EM_DIAGRAM):   _TEMP = MntWines ;
1160968   +_LP0 = _LP0 + (   -0.00323708533956 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.00323708533956 * _TEMP);
1160969   +
1160970   +***  Effect: NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumCatalogPurchases ;
1160971   +_TEMP = NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumCatalogPurchases ;
1160972   +_LP0 = _LP0 + (    0.72583602627024 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.72583602627024 * _TEMP);
1160973   +
1160974   +***  Effect: NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumDealsPurchases ;
1160975   +_TEMP = NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumDealsPurchases ;
1160976   +_LP0 = _LP0 + (    0.71587738133808 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.71587738133808 * _TEMP);
1160977   +
1160978   +***  Effect: NumStorePurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumStorePurchases ;
1160979   +_TEMP = NumStorePurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumStorePurchases ;
1160980   +_LP0 = _LP0 + (   -0.38414846639641 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.38414846639641 * _TEMP);
1160981   +
1160982   +***  Effect: NumWebPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumWebPurchases ;
1160983   +_TEMP = NumWebPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumWebPurchases ;
1160984   +_LP0 = _LP0 + (   -0.39960732899531 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.39960732899531 * _TEMP);
1160985   +
1160986   +***  Effect: NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   *** Effect: NumWebVisitsMonth ;
1160987   +_TEMP = NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   _TEMP = NumWebVisitsMonth ;
1160988   +_LP0 = _LP0 + (    1.00690630599849 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.00690630599849 * _TEMP);
1160989   +
1160990   +***  Effect: Recency ;
MPRINT(EM_DIAGRAM):   *** Effect: Recency ;
1160991   +_TEMP = Recency ;
MPRINT(EM_DIAGRAM):   _TEMP = Recency ;
1160992   +_LP0 = _LP0 + (   -0.10368937560371 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.10368937560371 * _TEMP);
1160993   +
1160994   +***  Effect: Teenhome ;
MPRINT(EM_DIAGRAM):   *** Effect: Teenhome ;
1160995   +_TEMP = Teenhome ;
MPRINT(EM_DIAGRAM):   _TEMP = Teenhome ;
1160996   +_LP0 = _LP0 + (   -1.33387551959166 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.33387551959166 * _TEMP);
1160997   +
1160998   +*** Naive Posterior Probabilities;
MPRINT(EM_DIAGRAM):   *** Naive Posterior Probabilities;
1160999   +drop _MAXP _IY _P0 _P1;
MPRINT(EM_DIAGRAM):   drop _MAXP _IY _P0 _P1;
1161000   +_TEMP =    -1.29156803352583 + _LP0;
MPRINT(EM_DIAGRAM):   _TEMP = -1.29156803352583 + _LP0;
1161001   +if (_TEMP < 0) then do;
MPRINT(EM_DIAGRAM):   if (_TEMP < 0) then do;
1161002   +   _TEMP = exp(_TEMP);
MPRINT(EM_DIAGRAM):   _TEMP = exp(_TEMP);
1161003   +   _P0 = _TEMP / (1 + _TEMP);
MPRINT(EM_DIAGRAM):   _P0 = _TEMP / (1 + _TEMP);
1161004   +end;
MPRINT(EM_DIAGRAM):   end;
1161005   +else _P0 = 1 / (1 + exp(-_TEMP));
MPRINT(EM_DIAGRAM):   else _P0 = 1 / (1 + exp(-_TEMP));
1161006   +_P1 = 1.0 - _P0;
MPRINT(EM_DIAGRAM):   _P1 = 1.0 - _P0;
1161007   +
1161008   +REG9DR1:
1161009   +
1161010   +
1161011   +*** Posterior Probabilities and Predicted Level;
MPRINT(EM_DIAGRAM):   REG9DR1: *** Posterior Probabilities and Predicted Level;
1161012   +label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1161013   +label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1161014   +P_DepVar1 = _P0;
MPRINT(EM_DIAGRAM):   P_DepVar1 = _P0;
1161015   +_MAXP = _P0;
MPRINT(EM_DIAGRAM):   _MAXP = _P0;
1161016   +_IY = 1;
MPRINT(EM_DIAGRAM):   _IY = 1;
1161017   +P_DepVar0 = _P1;
MPRINT(EM_DIAGRAM):   P_DepVar0 = _P1;
1161018   +if (_P1 >  _MAXP + 1E-8) then do;
MPRINT(EM_DIAGRAM):   if (_P1 > _MAXP + 1E-8) then do;
1161019   +   _MAXP = _P1;
MPRINT(EM_DIAGRAM):   _MAXP = _P1;
1161020   +   _IY = 2;
MPRINT(EM_DIAGRAM):   _IY = 2;
1161021   +end;
MPRINT(EM_DIAGRAM):   end;
1161022   +I_DepVar = REG9DRF[_IY];
MPRINT(EM_DIAGRAM):   I_DepVar = REG9DRF[_IY];
1161023   +U_DepVar = REG9DRU[_IY];
MPRINT(EM_DIAGRAM):   U_DepVar = REG9DRU[_IY];
1161024   +
1161025   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1161026   +***** end scoring code for regression;
MPRINT(EM_DIAGRAM):   ***** end scoring code for regression;
1161027   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1161028    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1161029    quit;
1161030    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1161031    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1161032    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1161033    retain ID 2 Node "Reg9";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Reg9";
1161034    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1161035    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 527 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 527 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1161036    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1161037    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1161038    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 527 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 527 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1161039    proc sort data=EMWS8.Reg9_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Reg9_variableset out=_temp2(keep=NAME CREATOR);
1161040    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1161041    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set EMWS8.REG9_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1161042    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1161043    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1161044    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1161045    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1161046    proc contents data=EMWS8.Reg9_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Reg9_train out=_meta(keep=NAME) noprint;
1161047    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
1161048    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1161049    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1161050    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1161051    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1161052    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1161053    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1161054    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 53 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1161055    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1161056    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1161056  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 288 rows and 5 columns.
 
1161057    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1161058    proc append base=EMWS8.Ensmbl9_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl9_FCMP data=_tempx;
1161059    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL9_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 288 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL9_FCMP has 288 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1161060    filename _pref
1161060  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
1161061    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1161062    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
1161063   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1161064   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1161065   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1161066   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1161067   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1161068   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1161069    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1161070    quit;
1161071    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1161072    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1161073    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1161074    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
1161075    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1161076    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1161077    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1161078    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1161079    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1161080    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
1161081    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1161082    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1161083    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1161084    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1161085    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1161086    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1161087    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
1161088    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1161089    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1161090    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1161091    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1161092    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1161093    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1161094    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1161095    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1161096    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1161097    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1161097  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.
 
1161098    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
1161099    proc append base=EMWS8.Ensmbl9_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl9_FCMP data=_tempx;
1161100    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL9_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL9_FCMP has 292 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1161101    filename _pref
1161101  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
1161102    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1161103    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
1161104   +
1161105   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1161106   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1161106  !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1161107   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1161108   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1161109   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1161110   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1161111   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1161112    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1161113    quit;
1161114    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1161115    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1161116    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1161117    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
1161118    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1161119    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1161120    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1161121    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1161122    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1161123    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
1161124    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1161125    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1161126    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1161127    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1161128    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1161129    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1161130    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
1161131    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1161132    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1161133    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1161134    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1161135    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1161136    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1161137    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1161138    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1161139    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1161140    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1161140  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.
 
1161141    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1161142    proc append base=EMWS8.Ensmbl9_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl9_FCMP data=_tempx;
1161143    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL9_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL9_FCMP has 331 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1161144    filename _pref
1161144  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
1161145    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1161146    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
1161147   +
1161148   +
1161149   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
1161150   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
1161151   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
1161152   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
1161153   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
1161154   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1161155   +
1161156   +
1161157   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
1161158   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
1161159   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
1161160   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
1161161   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
1161162   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1161163   +
1161164   +
1161165   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
1161166   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
1161167   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
1161168   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
1161169   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
1161170   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1161171   +
1161172   +
1161173   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
1161174   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
1161175   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
1161176   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
1161177   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
1161178   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1161179   +
1161180   +
1161181   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
1161182   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
1161183   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
1161184   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
1161185   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
1161186   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1161187   +
1161188   +
1161189   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
1161190   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
1161191   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
1161192   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
1161193   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
1161194   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1161195   +
1161196   +
1161197   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
1161198   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
1161199   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
1161200   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
1161201   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
1161202   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1161203   +
1161204   +
1161205   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
1161206   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
1161207   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
1161208   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
1161209   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
1161210   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1161211   +if
1161212   +_FILTERNORM1 not in ( '.')
1161213   + and
1161214   +_FILTERNORM2 not in ( '.')
1161215   + and
1161216   +_FILTERNORM3 not in ( '.')
1161217   + and
1161218   +_FILTERNORM4 not in ( '.')
1161219   + and
1161220   +_FILTERNORM5 not in ( '.')
1161221   + and
1161222   +_FILTERNORM6 not in ( '.')
1161223   + and
1161224   +_FILTERNORM7 not in ( ' ')
1161225   + and
1161226   +_FILTERNORM8 not in ( ' ')
1161227   +and
1161228   +( Dt_Customer ne .)
1161229   +and ( Income ne . and (Income<=107000))
1161230   +and ( Kidhome ne .)
1161231   +and ( MntFishProducts ne .)
1161232   +and ( MntFruits ne .)
1161233   +and ( MntGoldProds ne .)
1161234   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
1161235   +and ( MntSweetProducts ne .)
1161236   +and ( MntWines ne .)
1161237   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
1161238   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
1161239   +and ( NumStorePurchases ne .)
1161240   +and ( NumWebPurchases ne .)
1161241   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
1161242   +and ( Recency ne .)
1161243   +and ( Teenhome ne .)
1161244   +and ( Year_Birth ne .)
1161245   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and (
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and (
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and (
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and (
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne
.) and ( Year_Birth ne .) then do;
1161246   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
1161247   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
1161248   +end;
MPRINT(EM_DIAGRAM):   end;
1161249   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
1161250   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1161251    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1161252    quit;
1161253    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1161254    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1161255    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1161256    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
1161257    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1161258    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1161259    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1161260    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1161261    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1161262    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
1161263    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1161264    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1161265    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1161266    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1161267    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1161268    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1161269    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
1161270    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1161271    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1161272    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1161273    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1161274    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1161275    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1161276    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1161277    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1161278    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1161279    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1161279  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.
 
1161280    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1161281    proc append base=EMWS8.Ensmbl9_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl9_FCMP data=_tempx;
1161282    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL9_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL9_FCMP has 397 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1161283    %macro varDept(fcmpdata=,id=);
1161284    %global nobs&id scoreFlag&id;
1161285    %let scoreFlag&id = 0;
1161286    %if &id=1 or ^&fcmpStart %then %do;
1161287    proc sort data=&fcmpdata out=_temp&id nodupkey;
1161288    by NAME;
1161289    where id=&id and LHS in( %let j=1;
1161290    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
1161291    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
1161292    "&var" %let j = %eval(&j+1);
1161293    %end;
1161294    );
1161295    run;
1161296    %let dsid = %sysfunc(open(_temp&id));
1161297    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1161298    %let dsid = %sysfunc(close(&dsid));
1161299    %if &&nobs&id %then %do;
1161300    %let scoreFlag&id = 1;
1161301    %let fcmpStart = 1;
1161302    %end;
1161303    %else %let fcmpStart = 0;
1161304    %end;
1161305    %else %do;
1161306    proc sort data=&fcmpdata out=_tempid;
1161307    where id=&id;
1161308    by LHS;
1161309    run;
1161310    %let dsid = %sysfunc(open(_tempid));
1161311    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1161312    %let dsid = %sysfunc(close(&dsid));
1161313    %if ^&&nobs&id %then %do;
1161314    proc datasets lib=work nolist;
1161315    delete _tempid;
1161316    run;
1161317    quit;
1161318    %end;
1161319    %else %do;
1161320    data _tempAll;
1161321    set %let j=%eval(&id-1);
1161322    %do x=1 %to &j;
1161323    %if &&nobs&x %then %do;
1161324    _temp&x %end;
1161325    %end;
1161326    ;
1161327    run;
1161328    proc sql;
1161329    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
1161329  ! work._tempid p2 where p.name=p2.lhs;
1161330    quit;
1161331    data _temp&id;
1161332    set _temp&id;
1161333    where LHS ne '' and NAME ne '' and Node ne '';
1161334    run;
1161335    proc datasets lib=work nolist;
1161336    delete _tempAll;
1161337    run;
1161338    %let dsid = %sysfunc(open(_temp&id));
1161339    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1161340    %let dsid = %sysfunc(close(&dsid));
1161341    %if ^&&nobs&id %then %do;
1161342    proc datasets lib=work nolist;
1161343    delete _temp&id;
1161344    run;
1161345    quit;
1161346    %end;
1161347    %else %do;
1161348    %let scoreFlag&id = 1;
1161349    data _temp&id;
1161350    set _temp&id;
1161351    where LHS ne NAME and node ne '';
1161352    run;
1161353    %let dsid = %sysfunc(open(_temp&id));
1161354    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1161355    %let dsid = %sysfunc(close(&dsid));
1161356    %if ^&&nobs&id %then %do;
1161357    proc datasets lib=work nolist;
1161358    delete _temp&id;
1161359    run;
1161360    quit;
1161361    %end;
1161362    %else %do;
1161363    proc sort data=_temp&id nodupkey;
1161364    by LHS NAME;
1161365    run;
1161366    %end;
1161367    %end;
1161368    %end;
1161369    %end;
1161370    %mend varDept;
1161371    %macro optCode(outdata=fcmpdata);
1161372    %global fcmpStart;
1161373    %let fcmpStart = 0;
1161374    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
1161375    %let NumNodes=9;
1161376    %do k=1 %to &NumNodes;
1161377    %vardept(fcmpdata=&outdata, id=&k);
1161378    %end;
1161379    %mend optCode;
1161380    %optcode(outData=EMWS8.Ensmbl9_FCMP);
MPRINT(EM_DIAGRAM):
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl9_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL9_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl9_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: There were 72 observations read from the data set EMWS8.ENSMBL9_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 54 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 18 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl9_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL9_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl9_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL9_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl9_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set EMWS8.ENSMBL9_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 18 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 18 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp5;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP5 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl9_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set EMWS8.ENSMBL9_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 18 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 18 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp6;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP6 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl9_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 66 observations read from the data set EMWS8.ENSMBL9_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 18 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 18 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl9_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL9_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl9_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL9_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;
 
1161381    filename _pref
1161381  ! "C:\\predictive-models-project\Workspaces\EMWS8\Tree5\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Tree5\EMPUBLISHSCORE.sas";
1161382    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1161383    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Tree5\EMPUBLISHSCORE.sas.
1161384   +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
1161385   +******             DECISION TREE SCORING CODE             ******;
MPRINT(EM_DIAGRAM):   ****** DECISION TREE SCORING CODE ******;
1161386   +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
1161387   +
1161388   +******         LENGTHS OF NEW CHARACTER VARIABLES         ******;
MPRINT(EM_DIAGRAM):   ****** LENGTHS OF NEW CHARACTER VARIABLES ******;
1161389   +LENGTH I_DepVar  $   12;
MPRINT(EM_DIAGRAM):   LENGTH I_DepVar $ 12;
1161390   +LENGTH _WARN_  $    4;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $ 4;
1161391   +
1161392   +******              LABELS FOR NEW VARIABLES              ******;
MPRINT(EM_DIAGRAM):   ****** LABELS FOR NEW VARIABLES ******;
1161393   +LABEL _NODE_  = 'Node' ;
MPRINT(EM_DIAGRAM):   LABEL _NODE_ = 'Node' ;
1161394   +LABEL _LEAF_  = 'Leaf' ;
MPRINT(EM_DIAGRAM):   LABEL _LEAF_ = 'Leaf' ;
1161395   +LABEL P_DepVar0  = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   LABEL P_DepVar0 = 'Predicted: DepVar=0' ;
1161396   +LABEL P_DepVar1  = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   LABEL P_DepVar1 = 'Predicted: DepVar=1' ;
1161397   +LABEL Q_DepVar0  = 'Unadjusted P: DepVar=0' ;
MPRINT(EM_DIAGRAM):   LABEL Q_DepVar0 = 'Unadjusted P: DepVar=0' ;
1161398   +LABEL Q_DepVar1  = 'Unadjusted P: DepVar=1' ;
MPRINT(EM_DIAGRAM):   LABEL Q_DepVar1 = 'Unadjusted P: DepVar=1' ;
1161399   +LABEL V_DepVar0  = 'Validated: DepVar=0' ;
MPRINT(EM_DIAGRAM):   LABEL V_DepVar0 = 'Validated: DepVar=0' ;
1161400   +LABEL V_DepVar1  = 'Validated: DepVar=1' ;
MPRINT(EM_DIAGRAM):   LABEL V_DepVar1 = 'Validated: DepVar=1' ;
1161401   +LABEL I_DepVar  = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   LABEL I_DepVar = 'Into: DepVar' ;
1161402   +LABEL U_DepVar  = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   LABEL U_DepVar = 'Unnormalized Into: DepVar' ;
1161403   +LABEL _WARN_  = 'Warnings' ;
MPRINT(EM_DIAGRAM):   LABEL _WARN_ = 'Warnings' ;
1161404   +
1161405   +
1161406   +******      TEMPORARY VARIABLES FOR FORMATTED VALUES      ******;
MPRINT(EM_DIAGRAM):   ****** TEMPORARY VARIABLES FOR FORMATTED VALUES ******;
1161407   +LENGTH _ARBFMT_12 $     12; DROP _ARBFMT_12;
MPRINT(EM_DIAGRAM):   LENGTH _ARBFMT_12 $ 12;
MPRINT(EM_DIAGRAM):   DROP _ARBFMT_12;
1161408   +_ARBFMT_12 = ' '; /* Initialize to avoid warning. */
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = ' ';
1161409   +LENGTH _ARBFMT_8 $      8; DROP _ARBFMT_8;
MPRINT(EM_DIAGRAM):   /* Initialize to avoid warning. */ LENGTH _ARBFMT_8 $ 8;
MPRINT(EM_DIAGRAM):   DROP _ARBFMT_8;
1161410   +_ARBFMT_8 = ' '; /* Initialize to avoid warning. */
MPRINT(EM_DIAGRAM):   _ARBFMT_8 = ' ';
1161411   +
1161412   +
1161413   +******             ASSIGN OBSERVATION TO NODE             ******;
MPRINT(EM_DIAGRAM):   /* Initialize to avoid warning. */ ****** ASSIGN OBSERVATION TO NODE
******;
1161414   +IF  NOT MISSING(Recency ) AND
1161415   +  Recency  <                 38.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(Recency ) AND Recency < 38.5 THEN DO;
1161416   +  IF  NOT MISSING(MntMeatProducts ) AND
1161417   +                   431.5 <= MntMeatProducts  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(MntMeatProducts ) AND 431.5 <= MntMeatProducts THEN DO;
1161418   +    IF  NOT MISSING(NumCatalogPurchases ) AND
1161419   +      NumCatalogPurchases  <                  5.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(NumCatalogPurchases ) AND NumCatalogPurchases < 5.5 THEN
DO;
1161420   +      _ARBFMT_8 = PUT( Marital_Status , $8.);
MPRINT(EM_DIAGRAM):   _ARBFMT_8 = PUT( Marital_Status , $8.);
1161421   +       %DMNORMIP( _ARBFMT_8);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
1161422   +      IF _ARBFMT_8 IN ('MARRIED' ,'TOGETHER' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_8 IN ('MARRIED' ,'TOGETHER' ) THEN DO;
1161423   +        _NODE_  =                   21;
MPRINT(EM_DIAGRAM):   _NODE_ = 21;
1161424   +        _LEAF_  =                    5;
MPRINT(EM_DIAGRAM):   _LEAF_ = 5;
1161425   +        P_DepVar0  =     0.71052631578947;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.71052631578947;
1161426   +        P_DepVar1  =     0.28947368421052;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.28947368421052;
1161427   +        Q_DepVar0  =     0.71052631578947;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.71052631578947;
1161428   +        Q_DepVar1  =     0.28947368421052;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.28947368421052;
1161429   +        V_DepVar0  =     0.66666666666666;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.66666666666666;
1161430   +        V_DepVar1  =     0.33333333333333;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.33333333333333;
1161431   +        I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
1161432   +        U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1161433   +        END;
MPRINT(EM_DIAGRAM):   END;
1161434   +      ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1161435   +        _NODE_  =                   20;
MPRINT(EM_DIAGRAM):   _NODE_ = 20;
1161436   +        _LEAF_  =                    4;
MPRINT(EM_DIAGRAM):   _LEAF_ = 4;
1161437   +        P_DepVar0  =     0.17647058823529;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.17647058823529;
1161438   +        P_DepVar1  =      0.8235294117647;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.8235294117647;
1161439   +        Q_DepVar0  =     0.17647058823529;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.17647058823529;
1161440   +        Q_DepVar1  =      0.8235294117647;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.8235294117647;
1161441   +        V_DepVar0  =                 0.25;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.25;
1161442   +        V_DepVar1  =                 0.75;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.75;
1161443   +        I_DepVar  = '1' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '1' ;
1161444   +        U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1161445   +        END;
MPRINT(EM_DIAGRAM):   END;
1161446   +      END;
MPRINT(EM_DIAGRAM):   END;
1161447   +    ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1161448   +      _NODE_  =                   11;
MPRINT(EM_DIAGRAM):   _NODE_ = 11;
1161449   +      _LEAF_  =                    6;
MPRINT(EM_DIAGRAM):   _LEAF_ = 6;
1161450   +      P_DepVar0  =     0.15730337078651;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.15730337078651;
1161451   +      P_DepVar1  =     0.84269662921348;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.84269662921348;
1161452   +      Q_DepVar0  =     0.15730337078651;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.15730337078651;
1161453   +      Q_DepVar1  =     0.84269662921348;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.84269662921348;
1161454   +      V_DepVar0  =     0.29411764705882;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.29411764705882;
1161455   +      V_DepVar1  =     0.70588235294117;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.70588235294117;
1161456   +      I_DepVar  = '1' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '1' ;
1161457   +      U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1161458   +      END;
MPRINT(EM_DIAGRAM):   END;
1161459   +    END;
MPRINT(EM_DIAGRAM):   END;
1161460   +  ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1161461   +    _ARBFMT_12 = PUT( AcceptedCmp3 , BEST.);
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( AcceptedCmp3 , BEST.);
1161462   +     %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
1161463   +    IF _ARBFMT_12 IN ('1' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('1' ) THEN DO;
1161464   +      IF  NOT MISSING(NumWebVisitsMonth ) AND
1161465   +        NumWebVisitsMonth  <                  5.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(NumWebVisitsMonth ) AND NumWebVisitsMonth < 5.5 THEN DO;
1161466   +        _NODE_  =                   16;
MPRINT(EM_DIAGRAM):   _NODE_ = 16;
1161467   +        _LEAF_  =                    1;
MPRINT(EM_DIAGRAM):   _LEAF_ = 1;
1161468   +        P_DepVar0  =     0.64705882352941;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.64705882352941;
1161469   +        P_DepVar1  =     0.35294117647058;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.35294117647058;
1161470   +        Q_DepVar0  =     0.64705882352941;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.64705882352941;
1161471   +        Q_DepVar1  =     0.35294117647058;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.35294117647058;
1161472   +        V_DepVar0  =     0.57142857142857;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.57142857142857;
1161473   +        V_DepVar1  =     0.42857142857142;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.42857142857142;
1161474   +        I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
1161475   +        U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1161476   +        END;
MPRINT(EM_DIAGRAM):   END;
1161477   +      ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1161478   +        _NODE_  =                   17;
MPRINT(EM_DIAGRAM):   _NODE_ = 17;
1161479   +        _LEAF_  =                    2;
MPRINT(EM_DIAGRAM):   _LEAF_ = 2;
1161480   +        P_DepVar0  =     0.17391304347826;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.17391304347826;
1161481   +        P_DepVar1  =     0.82608695652173;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.82608695652173;
1161482   +        Q_DepVar0  =     0.17391304347826;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.17391304347826;
1161483   +        Q_DepVar1  =     0.82608695652173;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.82608695652173;
1161484   +        V_DepVar0  =                 0.15;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.15;
1161485   +        V_DepVar1  =                 0.85;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.85;
1161486   +        I_DepVar  = '1' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '1' ;
1161487   +        U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1161488   +        END;
MPRINT(EM_DIAGRAM):   END;
1161489   +      END;
MPRINT(EM_DIAGRAM):   END;
1161490   +    ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1161491   +      _NODE_  =                    9;
MPRINT(EM_DIAGRAM):   _NODE_ = 9;
1161492   +      _LEAF_  =                    3;
MPRINT(EM_DIAGRAM):   _LEAF_ = 3;
1161493   +      P_DepVar0  =     0.82099596231493;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.82099596231493;
1161494   +      P_DepVar1  =     0.17900403768506;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.17900403768506;
1161495   +      Q_DepVar0  =     0.82099596231493;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.82099596231493;
1161496   +      Q_DepVar1  =     0.17900403768506;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.17900403768506;
1161497   +      V_DepVar0  =     0.80966767371601;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.80966767371601;
1161498   +      V_DepVar1  =     0.19033232628398;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.19033232628398;
1161499   +      I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
1161500   +      U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1161501   +      END;
MPRINT(EM_DIAGRAM):   END;
1161502   +    END;
MPRINT(EM_DIAGRAM):   END;
1161503   +  END;
MPRINT(EM_DIAGRAM):   END;
1161504   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1161505   +  _ARBFMT_12 = PUT( AcceptedCmp5 , BEST.);
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( AcceptedCmp5 , BEST.);
1161506   +   %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
1161507   +  IF _ARBFMT_12 IN ('1' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('1' ) THEN DO;
1161508   +    IF  NOT MISSING(MntWines ) AND
1161509   +      MntWines  <                412.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(MntWines ) AND MntWines < 412.5 THEN DO;
1161510   +      _NODE_  =                   12;
MPRINT(EM_DIAGRAM):   _NODE_ = 12;
1161511   +      _LEAF_  =                    7;
MPRINT(EM_DIAGRAM):   _LEAF_ = 7;
1161512   +      P_DepVar0  =     0.13333333333333;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.13333333333333;
1161513   +      P_DepVar1  =     0.86666666666666;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.86666666666666;
1161514   +      Q_DepVar0  =     0.13333333333333;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.13333333333333;
1161515   +      Q_DepVar1  =     0.86666666666666;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.86666666666666;
1161516   +      V_DepVar0  =     0.16666666666666;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.16666666666666;
1161517   +      V_DepVar1  =     0.83333333333333;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.83333333333333;
1161518   +      I_DepVar  = '1' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '1' ;
1161519   +      U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1161520   +      END;
MPRINT(EM_DIAGRAM):   END;
1161521   +    ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1161522   +      _NODE_  =                   13;
MPRINT(EM_DIAGRAM):   _NODE_ = 13;
1161523   +      _LEAF_  =                    8;
MPRINT(EM_DIAGRAM):   _LEAF_ = 8;
1161524   +      P_DepVar0  =     0.70833333333333;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.70833333333333;
1161525   +      P_DepVar1  =     0.29166666666666;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.29166666666666;
1161526   +      Q_DepVar0  =     0.70833333333333;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.70833333333333;
1161527   +      Q_DepVar1  =     0.29166666666666;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.29166666666666;
1161528   +      V_DepVar0  =     0.63461538461538;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.63461538461538;
1161529   +      V_DepVar1  =     0.36538461538461;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.36538461538461;
1161530   +      I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
1161531   +      U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1161532   +      END;
MPRINT(EM_DIAGRAM):   END;
1161533   +    END;
MPRINT(EM_DIAGRAM):   END;
1161534   +  ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1161535   +    _NODE_  =                    7;
MPRINT(EM_DIAGRAM):   _NODE_ = 7;
1161536   +    _LEAF_  =                    9;
MPRINT(EM_DIAGRAM):   _LEAF_ = 9;
1161537   +    P_DepVar0  =     0.96877380045696;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.96877380045696;
1161538   +    P_DepVar1  =     0.03122619954303;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.03122619954303;
1161539   +    Q_DepVar0  =     0.96877380045696;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.96877380045696;
1161540   +    Q_DepVar1  =     0.03122619954303;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.03122619954303;
1161541   +    V_DepVar0  =     0.96756756756756;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.96756756756756;
1161542   +    V_DepVar1  =     0.03243243243243;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.03243243243243;
1161543   +    I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
1161544   +    U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1161545   +    END;
MPRINT(EM_DIAGRAM):   END;
1161546   +  END;
MPRINT(EM_DIAGRAM):   END;
1161547   +
1161548   +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
1161549   +******          END OF DECISION TREE SCORING CODE         ******;
MPRINT(EM_DIAGRAM):   ****** END OF DECISION TREE SCORING CODE ******;
1161550   +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
1161551   +drop _LEAF_;
MPRINT(EM_DIAGRAM):   drop _LEAF_;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1161552    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1161553    quit;
1161554    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1161555    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1161556    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1161557    retain ID 2 Node "Tree5";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Tree5";
1161558    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1161559    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 108 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 108 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1161560    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1161561    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1161562    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 108 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 108 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1161563    proc sort data=EMWS8.Tree5_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Tree5_variableset out=_temp2(keep=NAME CREATOR);
1161564    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1161565    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set EMWS8.TREE5_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1161566    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1161567    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1161568    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1161569    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1161570    proc contents data=EMWS8.Tree5_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Tree5_train out=_meta(keep=NAME) noprint;
1161571    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 58 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1161572    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1161573    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1161574    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 58 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 58 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1161575    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1161576    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1161577    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1161578    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 58 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 58 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1161579    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1161580    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1161580  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 88 rows and 5 columns.
 
1161581    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1161582    proc append base=EMWS8.Ensmbl9_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl9_FCMP data=_tempx;
1161583    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL9_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 88 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL9_FCMP has 88 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1161584    filename _pref
1161584  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
1161585    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1161586    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
1161587   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1161588   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1161589   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1161590   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1161591   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1161592   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1161593    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1161594    quit;
1161595    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1161596    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1161597    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1161598    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
1161599    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1161600    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1161601    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1161602    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1161603    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1161604    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
1161605    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1161606    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1161607    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1161608    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1161609    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1161610    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1161611    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
1161612    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
 
 
1161613    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1161614    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1161615    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1161616    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1161617    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1161618    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1161619    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1161620    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1161621    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1161621  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.
 
1161622    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1161623    proc append base=EMWS8.Ensmbl9_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl9_FCMP data=_tempx;
1161624    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL9_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL9_FCMP has 92 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1161625    filename _pref
1161625  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
1161626    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1161627    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
1161628   +
1161629   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1161630   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1161630  !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1161631   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1161632   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1161633   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1161634   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1161635   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1161636    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1161637    quit;
1161638    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1161639    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1161640    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1161641    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
1161642    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1161643    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1161644    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1161645    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1161646    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1161647    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
1161648    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1161649    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1161650    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1161651    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1161652    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1161653    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1161654    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
1161655    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1161656    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1161657    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1161658    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1161659    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1161660    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1161661    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1161662    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1161663    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1161664    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1161664  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.
 
1161665    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1161666    proc append base=EMWS8.Ensmbl9_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl9_FCMP data=_tempx;
1161667    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL9_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL9_FCMP has 131 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1161668    filename _pref
1161668  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
1161669    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1161670    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
1161671   +
1161672   +
1161673   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
1161674   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
1161675   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
1161676   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
1161677   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
1161678   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1161679   +
1161680   +
1161681   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
1161682   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
1161683   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
1161684   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
1161685   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
1161686   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1161687   +
1161688   +
1161689   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
1161690   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
1161691   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
1161692   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
1161693   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
1161694   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1161695   +
1161696   +
1161697   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
1161698   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
1161699   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
1161700   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
1161701   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
1161702   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1161703   +
1161704   +
1161705   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
1161706   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
1161707   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
1161708   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
1161709   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
1161710   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1161711   +
1161712   +
1161713   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
1161714   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
1161715   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
1161716   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
1161717   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
1161718   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1161719   +
1161720   +
1161721   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
1161722   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
1161723   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
1161724   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
1161725   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
1161726   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1161727   +
1161728   +
1161729   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
1161730   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
1161731   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
1161732   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
1161733   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
1161734   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1161735   +if
1161736   +_FILTERNORM1 not in ( '.')
1161737   + and
1161738   +_FILTERNORM2 not in ( '.')
1161739   + and
1161740   +_FILTERNORM3 not in ( '.')
1161741   + and
1161742   +_FILTERNORM4 not in ( '.')
1161743   + and
1161744   +_FILTERNORM5 not in ( '.')
1161745   + and
1161746   +_FILTERNORM6 not in ( '.')
1161747   + and
1161748   +_FILTERNORM7 not in ( ' ')
1161749   + and
1161750   +_FILTERNORM8 not in ( ' ')
1161751   +and
1161752   +( Dt_Customer ne .)
1161753   +and ( Income ne . and (Income<=107000))
1161754   +and ( Kidhome ne .)
1161755   +and ( MntFishProducts ne .)
1161756   +and ( MntFruits ne .)
1161757   +and ( MntGoldProds ne .)
1161758   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
1161759   +and ( MntSweetProducts ne .)
1161760   +and ( MntWines ne .)
1161761   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
1161762   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
1161763   +and ( NumStorePurchases ne .)
1161764   +and ( NumWebPurchases ne .)
1161765   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
1161766   +and ( Recency ne .)
1161767   +and ( Teenhome ne .)
1161768   +and ( Year_Birth ne .)
1161769   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and (
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and (
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and (
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and (
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne
.) and ( Year_Birth ne .) then do;
1161770   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
1161771   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
1161772   +end;
MPRINT(EM_DIAGRAM):   end;
1161773   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
1161774   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1161775    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1161776    quit;
1161777    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1161778    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1161779    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1161780    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
1161781    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1161782    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1161783    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1161784    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1161785    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1161786    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
1161787    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1161788    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1161789    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1161790    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1161791    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1161792    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1161793    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
1161794    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
1161795    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1161796    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1161797    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1161798    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1161799    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1161800    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1161801    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1161802    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1161803    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1161803  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.
 
1161804    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.03 seconds
 
 
1161805    proc append base=EMWS8.Ensmbl9_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl9_FCMP data=_tempx;
1161806    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL9_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL9_FCMP has 197 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1161807    %macro varDept(fcmpdata=,id=);
1161808    %global nobs&id scoreFlag&id;
1161809    %let scoreFlag&id = 0;
1161810    %if &id=1 or ^&fcmpStart %then %do;
1161811    proc sort data=&fcmpdata out=_temp&id nodupkey;
1161812    by NAME;
1161813    where id=&id and LHS in( %let j=1;
1161814    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
1161815    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
1161816    "&var" %let j = %eval(&j+1);
1161817    %end;
1161818    );
1161819    run;
1161820    %let dsid = %sysfunc(open(_temp&id));
1161821    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1161822    %let dsid = %sysfunc(close(&dsid));
1161823    %if &&nobs&id %then %do;
1161824    %let scoreFlag&id = 1;
1161825    %let fcmpStart = 1;
1161826    %end;
1161827    %else %let fcmpStart = 0;
1161828    %end;
1161829    %else %do;
1161830    proc sort data=&fcmpdata out=_tempid;
1161831    where id=&id;
1161832    by LHS;
1161833    run;
1161834    %let dsid = %sysfunc(open(_tempid));
1161835    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1161836    %let dsid = %sysfunc(close(&dsid));
1161837    %if ^&&nobs&id %then %do;
1161838    proc datasets lib=work nolist;
1161839    delete _tempid;
1161840    run;
1161841    quit;
1161842    %end;
1161843    %else %do;
1161844    data _tempAll;
1161845    set %let j=%eval(&id-1);
1161846    %do x=1 %to &j;
1161847    %if &&nobs&x %then %do;
1161848    _temp&x %end;
1161849    %end;
1161850    ;
1161851    run;
1161852    proc sql;
1161853    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
1161853  ! work._tempid p2 where p.name=p2.lhs;
1161854    quit;
1161855    data _temp&id;
1161856    set _temp&id;
1161857    where LHS ne '' and NAME ne '' and Node ne '';
1161858    run;
1161859    proc datasets lib=work nolist;
1161860    delete _tempAll;
1161861    run;
1161862    %let dsid = %sysfunc(open(_temp&id));
1161863    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1161864    %let dsid = %sysfunc(close(&dsid));
1161865    %if ^&&nobs&id %then %do;
1161866    proc datasets lib=work nolist;
1161867    delete _temp&id;
1161868    run;
1161869    quit;
1161870    %end;
1161871    %else %do;
1161872    %let scoreFlag&id = 1;
1161873    data _temp&id;
1161874    set _temp&id;
1161875    where LHS ne NAME and node ne '';
1161876    run;
1161877    %let dsid = %sysfunc(open(_temp&id));
1161878    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1161879    %let dsid = %sysfunc(close(&dsid));
1161880    %if ^&&nobs&id %then %do;
1161881    proc datasets lib=work nolist;
1161882    delete _temp&id;
1161883    run;
1161884    quit;
1161885    %end;
1161886    %else %do;
1161887    proc sort data=_temp&id nodupkey;
1161888    by LHS NAME;
1161889    run;
1161890    %end;
1161891    %end;
1161892    %end;
1161893    %end;
1161894    %mend varDept;
1161895    %macro optCode(outdata=fcmpdata);
1161896    %global fcmpStart;
1161897    %let fcmpStart = 0;
1161898    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
1161899    %let NumNodes=9;
1161900    %do k=1 %to &NumNodes;
1161901    %vardept(fcmpdata=&outdata, id=&k);
1161902    %end;
1161903    %mend optCode;
1161904    %optcode(outData=EMWS8.Ensmbl9_FCMP);
MPRINT(EM_DIAGRAM):
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl9_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL9_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl9_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: There were 24 observations read from the data set EMWS8.ENSMBL9_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 16 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 8 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl9_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL9_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl9_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL9_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl9_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set EMWS8.ENSMBL9_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 8 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 8 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp5;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP5 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl9_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set EMWS8.ENSMBL9_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 8 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 8 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp6;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP6 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl9_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 66 observations read from the data set EMWS8.ENSMBL9_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 8 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 8 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl9_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL9_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl9_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL9_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;
 
1161905    filename _pref
1161905  ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural33\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Neural33\EMPUBLISHSCORE.sas";
1161906    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1161907    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Neural33\EMPUBLISHSCORE.sas.
1161908   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1161909   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1161910   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1161911   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1161912   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1161913   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1161914   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1161915   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1161916   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1161917   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1161918   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1161919   +LENGTH _WARN_ $4
1161920   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
1161921   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1161922   +
1161923   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1161924   +
1161925   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1161926   +
1161927   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1161928   +
1161929   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1161930   +
1161931   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1161932   +
1161933   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1161934   +
1161935   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1161936   +
1161937   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1161938   +
1161939   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1161940   +
1161941   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1161942   +
1161943   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1161944   +
1161945   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1161946   +
1161947   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1161948   +
1161949   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1161950   +
1161951   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1161952   +
1161953   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1161954   +
1161955   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1161956   +
1161957   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1161958   +
1161959   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1161960   +
1161961   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1161962   +
1161963   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1161964   +
1161965   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1161966   +
1161967   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1161968   +
1161969   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1161970   +
1161971   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1161972   +
1161973   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1161974   +
1161975   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1161976   +
1161977   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1161978   +
1161979   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1161980   +
1161981   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1161982   +
1161983   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1161984   +
1161985   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1161986   +
1161987   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1161988   +
1161989   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1161990   +
1161991   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1161992   +
1161993   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1161994   +
1161995   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1161996   +
1161997   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1161998   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1161999   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1162000   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1162001   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1162002   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1162003   +end;
MPRINT(EM_DIAGRAM):   end;
1162004   +else do;
MPRINT(EM_DIAGRAM):   else do;
1162005   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1162006   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1162007   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1162008   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1162009   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1162010   +   end;
MPRINT(EM_DIAGRAM):   end;
1162011   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1162012   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1162013   +   end;
MPRINT(EM_DIAGRAM):   end;
1162014   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1162015   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1162016   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1162017   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1162018   +   end;
MPRINT(EM_DIAGRAM):   end;
1162019   +end;
MPRINT(EM_DIAGRAM):   end;
1162020   +
1162021   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1162022   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1162023   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1162024   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1162025   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1162026   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1162027   +end;
MPRINT(EM_DIAGRAM):   end;
1162028   +else do;
MPRINT(EM_DIAGRAM):   else do;
1162029   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1162030   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1162031   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1162032   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1162033   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1162034   +   end;
MPRINT(EM_DIAGRAM):   end;
1162035   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1162036   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1162037   +   end;
MPRINT(EM_DIAGRAM):   end;
1162038   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1162039   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1162040   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1162041   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1162042   +   end;
MPRINT(EM_DIAGRAM):   end;
1162043   +end;
MPRINT(EM_DIAGRAM):   end;
1162044   +
1162045   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1162046   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1162047   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1162048   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1162049   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1162050   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1162051   +end;
MPRINT(EM_DIAGRAM):   end;
1162052   +else do;
MPRINT(EM_DIAGRAM):   else do;
1162053   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1162054   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1162055   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1162056   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1162057   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1162058   +   end;
MPRINT(EM_DIAGRAM):   end;
1162059   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1162060   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1162061   +   end;
MPRINT(EM_DIAGRAM):   end;
1162062   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1162063   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1162064   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1162065   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1162066   +   end;
MPRINT(EM_DIAGRAM):   end;
1162067   +end;
MPRINT(EM_DIAGRAM):   end;
1162068   +
1162069   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1162070   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1162071   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1162072   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1162073   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1162074   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1162075   +end;
MPRINT(EM_DIAGRAM):   end;
1162076   +else do;
MPRINT(EM_DIAGRAM):   else do;
1162077   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1162078   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1162079   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1162080   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1162081   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1162082   +   end;
MPRINT(EM_DIAGRAM):   end;
1162083   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1162084   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1162085   +   end;
MPRINT(EM_DIAGRAM):   end;
1162086   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1162087   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1162088   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1162089   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1162090   +   end;
MPRINT(EM_DIAGRAM):   end;
1162091   +end;
MPRINT(EM_DIAGRAM):   end;
1162092   +
1162093   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1162094   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1162095   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1162096   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1162097   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1162098   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1162099   +end;
MPRINT(EM_DIAGRAM):   end;
1162100   +else do;
MPRINT(EM_DIAGRAM):   else do;
1162101   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1162102   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1162103   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1162104   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1162105   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1162106   +   end;
MPRINT(EM_DIAGRAM):   end;
1162107   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1162108   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1162109   +   end;
MPRINT(EM_DIAGRAM):   end;
1162110   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1162111   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1162112   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1162113   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1162114   +   end;
MPRINT(EM_DIAGRAM):   end;
1162115   +end;
MPRINT(EM_DIAGRAM):   end;
1162116   +
1162117   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1162118   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1162119   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1162120   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1162121   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1162122   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1162123   +end;
MPRINT(EM_DIAGRAM):   end;
1162124   +else do;
MPRINT(EM_DIAGRAM):   else do;
1162125   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1162126   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1162127   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1162128   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1162129   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1162130   +   end;
MPRINT(EM_DIAGRAM):   end;
1162131   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1162132   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1162133   +   end;
MPRINT(EM_DIAGRAM):   end;
1162134   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1162135   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1162136   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1162137   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1162138   +   end;
MPRINT(EM_DIAGRAM):   end;
1162139   +end;
MPRINT(EM_DIAGRAM):   end;
1162140   +
1162141   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1162142   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
1162143   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1162144   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1162145   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1162146   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1162147   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1162148   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1162149   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1162150   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1162151   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1162152   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1162153   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1162154   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1162155   +end;
MPRINT(EM_DIAGRAM):   end;
1162156   +else do;
MPRINT(EM_DIAGRAM):   else do;
1162157   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1162158   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1162159   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1162160   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1162161   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1162162   +   end;
MPRINT(EM_DIAGRAM):   end;
1162163   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1162164   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1162165   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1162166   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1162167   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1162168   +   end;
MPRINT(EM_DIAGRAM):   end;
1162169   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1162170   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1162171   +   end;
MPRINT(EM_DIAGRAM):   end;
1162172   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1162173   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1162174   +   end;
MPRINT(EM_DIAGRAM):   end;
1162175   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1162176   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1162177   +   end;
MPRINT(EM_DIAGRAM):   end;
1162178   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1162179   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1162180   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1162181   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1162182   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1162183   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1162184   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1162185   +   end;
MPRINT(EM_DIAGRAM):   end;
1162186   +end;
MPRINT(EM_DIAGRAM):   end;
1162187   +
1162188   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1162189   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1162190   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
1162191   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1162192   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1162193   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1162194   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1162195   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1162196   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1162197   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1162198   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1162199   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1162200   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1162201   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1162202   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1162203   +end;
MPRINT(EM_DIAGRAM):   end;
1162204   +else do;
MPRINT(EM_DIAGRAM):   else do;
1162205   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1162206   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1162207   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1162208   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1162209   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1162210   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1162211   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1162212   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1162213   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1162214   +         end;
MPRINT(EM_DIAGRAM):   end;
1162215   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1162216   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1162217   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1162218   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1162219   +            end;
MPRINT(EM_DIAGRAM):   end;
1162220   +         end;
MPRINT(EM_DIAGRAM):   end;
1162221   +      end;
MPRINT(EM_DIAGRAM):   end;
1162222   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1162223   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1162224   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1162225   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1162226   +         end;
MPRINT(EM_DIAGRAM):   end;
1162227   +      end;
MPRINT(EM_DIAGRAM):   end;
1162228   +   end;
MPRINT(EM_DIAGRAM):   end;
1162229   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1162230   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1162231   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1162232   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1162233   +      end;
MPRINT(EM_DIAGRAM):   end;
1162234   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1162235   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1162236   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1162237   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1162238   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1162239   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1162240   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1162241   +         end;
MPRINT(EM_DIAGRAM):   end;
1162242   +      end;
MPRINT(EM_DIAGRAM):   end;
1162243   +   end;
MPRINT(EM_DIAGRAM):   end;
1162244   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1162245   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1162246   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1162247   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1162248   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1162249   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1162250   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1162251   +   end;
MPRINT(EM_DIAGRAM):   end;
1162252   +end;
MPRINT(EM_DIAGRAM):   end;
1162253   +
1162254   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1162255   +*** Checking missing input Interval
1162256   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1162257   +
1162258   +IF NMISS(
1162259   +   Income ,
1162260   +   Kidhome ,
1162261   +   MntFishProducts ,
1162262   +   MntFruits ,
1162263   +   MntGoldProds ,
1162264   +   MntMeatProducts ,
1162265   +   MntSweetProducts ,
1162266   +   MntWines ,
1162267   +   NumCatalogPurchases ,
1162268   +   NumDealsPurchases ,
1162269   +   NumStorePurchases ,
1162270   +   NumWebPurchases ,
1162271   +   NumWebVisitsMonth ,
1162272   +   Recency ,
1162273   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Income , Kidhome , MntFishProducts , MntFruits , MntGoldProds
, MntMeatProducts , MntSweetProducts , MntWines , NumCatalogPurchases , NumDealsPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , Recency , Teenhome ) THEN DO;
1162274   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1162275   +
1162276   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1162277   +END;
MPRINT(EM_DIAGRAM):   END;
1162278   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1162279   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1162280   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1162281   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1162282   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1162283   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1162284   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1162285   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1162286   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1162287   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1162288   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1162289   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1162290   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1162291   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1162292   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1162293   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1162294   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1162295   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1162296   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1162297   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1162298   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1162299   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1162300   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1162301   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1162302   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1162303   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1162304   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1162305   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1162306   +END;
MPRINT(EM_DIAGRAM):   END;
1162307   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1162308   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1162309   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1162310   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1162311   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1162312   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1162313   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1162314   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1162315   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1162316   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1162317   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1162318   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1162319   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1162320   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
1162321   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1162322   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1162323   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1162324   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1162325   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1162326   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1162327   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1162328   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1162329   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1162330   +   ELSE S_NumCatalogPurchases
1162331   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1162332   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1162333   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1162334   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1162335   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1162336   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1162337   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1162338   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1162339   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1162340   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1162341   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1162342   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1162343   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1162344   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1162345   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1162346   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1162347   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1162348   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1162349   +END;
MPRINT(EM_DIAGRAM):   END;
1162350   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1162351   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1162352   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1162353   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1162354   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1162355   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1162356   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1162357   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1162358   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1162359   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1162360   +   H11  =     0.32435248899543 * S_Income  +    -0.47929849648429 * S_Kidhome
1162361   +          +     0.13364230231465 * S_MntFishProducts
1162362   +          +     -0.1386717864506 * S_MntFruits  +    -0.02769770185129 *
1162363   +        S_MntGoldProds  +    -0.29009812234724 * S_MntMeatProducts
1162364   +          +    -0.10871064476617 * S_MntSweetProducts
1162365   +          +     0.57858611197719 * S_MntWines  +    -0.26900817180555 *
1162366   +        S_NumCatalogPurchases  +    -0.39598523430317 * S_NumDealsPurchases
1162367   +          +     0.52835897625366 * S_NumStorePurchases
1162368   +          +     0.66297635444958 * S_NumWebPurchases
1162369   +          +    -0.31727971903608 * S_NumWebVisitsMonth
1162370   +          +     0.12789679291219 * S_Recency  +    -0.39270105014448 *
1162371   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.32435248899543 * S_Income + -0.47929849648429 * S_Kidhome +
0.13364230231465 * S_MntFishProducts + -0.1386717864506 * S_MntFruits + -0.02769770185129 *
S_MntGoldProds + -0.29009812234724 * S_MntMeatProducts + -0.10871064476617 *
S_MntSweetProducts + 0.57858611197719 * S_MntWines + -0.26900817180555 * S_NumCatalogPurchases
+ -0.39598523430317 * S_NumDealsPurchases + 0.52835897625366 * S_NumStorePurchases +
0.66297635444958 * S_NumWebPurchases + -0.31727971903608 * S_NumWebVisitsMonth +
0.12789679291219 * S_Recency + -0.39270105014448 * S_Teenhome ;
1162372   +   H12  =     0.37777254641249 * S_Income  +     0.79199857244438 * S_Kidhome
1162373   +          +     0.14748983783528 * S_MntFishProducts
1162374   +          +     0.14994032216514 * S_MntFruits  +     0.19147871752132 *
1162375   +        S_MntGoldProds  +     0.80535213270443 * S_MntMeatProducts
1162376   +          +     0.31095426478608 * S_MntSweetProducts
1162377   +          +     0.00471809437476 * S_MntWines  +     0.93716396534802 *
1162378   +        S_NumCatalogPurchases  +     0.86841248727948 * S_NumDealsPurchases
1162379   +          +     0.14387100066933 * S_NumStorePurchases
1162380   +          +    -0.01648998884133 * S_NumWebPurchases
1162381   +          +     -0.1378597161576 * S_NumWebVisitsMonth
1162382   +          +     0.15850653387379 * S_Recency  +     0.11714339614827 *
1162383   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = 0.37777254641249 * S_Income + 0.79199857244438 * S_Kidhome +
0.14748983783528 * S_MntFishProducts + 0.14994032216514 * S_MntFruits + 0.19147871752132 *
S_MntGoldProds + 0.80535213270443 * S_MntMeatProducts + 0.31095426478608 * S_MntSweetProducts
+ 0.00471809437476 * S_MntWines + 0.93716396534802 * S_NumCatalogPurchases + 0.86841248727948
* S_NumDealsPurchases + 0.14387100066933 * S_NumStorePurchases + -0.01648998884133 *
S_NumWebPurchases + -0.1378597161576 * S_NumWebVisitsMonth + 0.15850653387379 * S_Recency +
0.11714339614827 * S_Teenhome ;
1162384   +   H13  =    -0.31490756773649 * S_Income  +      0.4776214738577 * S_Kidhome
1162385   +          +     0.00774185404534 * S_MntFishProducts
1162386   +          +     0.22292845341942 * S_MntFruits  +     0.11636422687317 *
1162387   +        S_MntGoldProds  +    -0.45522230281212 * S_MntMeatProducts
1162388   +          +     0.28728624268589 * S_MntSweetProducts
1162389   +          +     0.74892928025295 * S_MntWines  +     -0.4834082773325 *
1162390   +        S_NumCatalogPurchases  +    -0.05055717315946 * S_NumDealsPurchases
1162391   +          +     0.56446566213593 * S_NumStorePurchases
1162392   +          +     0.44547549135846 * S_NumWebPurchases
1162393   +          +    -1.17648505936662 * S_NumWebVisitsMonth
1162394   +          +     1.30076355226685 * S_Recency  +     0.56217939635691 *
1162395   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = -0.31490756773649 * S_Income + 0.4776214738577 * S_Kidhome +
0.00774185404534 * S_MntFishProducts + 0.22292845341942 * S_MntFruits + 0.11636422687317 *
S_MntGoldProds + -0.45522230281212 * S_MntMeatProducts + 0.28728624268589 * S_MntSweetProducts
+ 0.74892928025295 * S_MntWines + -0.4834082773325 * S_NumCatalogPurchases + -0.05055717315946
* S_NumDealsPurchases + 0.56446566213593 * S_NumStorePurchases + 0.44547549135846 *
S_NumWebPurchases + -1.17648505936662 * S_NumWebVisitsMonth + 1.30076355226685 * S_Recency +
0.56217939635691 * S_Teenhome ;
1162396   +   H14  =    -0.40179905952719 * S_Income  +     0.16141565212918 * S_Kidhome
1162397   +          +     0.24665716882586 * S_MntFishProducts
1162398   +          +     0.03410629332469 * S_MntFruits  +     -0.1353295645077 *
1162399   +        S_MntGoldProds  +    -0.74661391150362 * S_MntMeatProducts
1162400   +          +    -0.10530818594736 * S_MntSweetProducts
1162401   +          +     0.30618479493194 * S_MntWines  +    -0.63426712804061 *
1162402   +        S_NumCatalogPurchases  +    -0.39486403699564 * S_NumDealsPurchases
1162403   +          +     0.36617016651032 * S_NumStorePurchases
1162404   +          +      0.3580014320946 * S_NumWebPurchases
1162405   +          +    -0.72597289213724 * S_NumWebVisitsMonth
1162406   +          +     0.93272927444012 * S_Recency  +     0.24531402677279 *
1162407   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = -0.40179905952719 * S_Income + 0.16141565212918 * S_Kidhome +
0.24665716882586 * S_MntFishProducts + 0.03410629332469 * S_MntFruits + -0.1353295645077 *
S_MntGoldProds + -0.74661391150362 * S_MntMeatProducts + -0.10530818594736 *
S_MntSweetProducts + 0.30618479493194 * S_MntWines + -0.63426712804061 * S_NumCatalogPurchases
+ -0.39486403699564 * S_NumDealsPurchases + 0.36617016651032 * S_NumStorePurchases +
0.3580014320946 * S_NumWebPurchases + -0.72597289213724 * S_NumWebVisitsMonth +
0.93272927444012 * S_Recency + 0.24531402677279 * S_Teenhome ;
1162408   +   H11  = H11  +     0.10790306691381 * AcceptedCmp10
1162409   +          +     0.36067546675468 * AcceptedCmp20  +     0.56838342781466 *
1162410   +        AcceptedCmp30  +     0.10138997954661 * AcceptedCmp40
1162411   +          +     0.23809874960179 * AcceptedCmp50  +     0.42164522965364 *
1162412   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.10790306691381 * AcceptedCmp10 + 0.36067546675468 *
AcceptedCmp20 + 0.56838342781466 * AcceptedCmp30 + 0.10138997954661 * AcceptedCmp40 +
0.23809874960179 * AcceptedCmp50 + 0.42164522965364 * Complain0 ;
1162413   +   H12  = H12  +    -0.10342435301564 * AcceptedCmp10
1162414   +          +     -0.1021625473908 * AcceptedCmp20  +    -0.17400073301804 *
1162415   +        AcceptedCmp30  +      0.1295257925186 * AcceptedCmp40
1162416   +          +    -0.17149939617806 * AcceptedCmp50  +    -0.11843709761825 *
1162417   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.10342435301564 * AcceptedCmp10 + -0.1021625473908 *
AcceptedCmp20 + -0.17400073301804 * AcceptedCmp30 + 0.1295257925186 * AcceptedCmp40 +
-0.17149939617806 * AcceptedCmp50 + -0.11843709761825 * Complain0 ;
1162418   +   H13  = H13  +      0.3357459370893 * AcceptedCmp10
1162419   +          +      -0.142120215863 * AcceptedCmp20  +     0.74265608697316 *
1162420   +        AcceptedCmp30  +     0.62493796040954 * AcceptedCmp40
1162421   +          +     0.60033091776267 * AcceptedCmp50  +    -0.70537393421868 *
1162422   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.3357459370893 * AcceptedCmp10 + -0.142120215863 *
AcceptedCmp20 + 0.74265608697316 * AcceptedCmp30 + 0.62493796040954 * AcceptedCmp40 +
0.60033091776267 * AcceptedCmp50 + -0.70537393421868 * Complain0 ;
1162423   +   H14  = H14  +     0.52427760948235 * AcceptedCmp10
1162424   +          +     0.50852083885302 * AcceptedCmp20  +     0.30116257238429 *
1162425   +        AcceptedCmp30  +     0.31213749631365 * AcceptedCmp40
1162426   +          +     0.49344261660916 * AcceptedCmp50  +    -0.18226921500969 *
1162427   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.52427760948235 * AcceptedCmp10 + 0.50852083885302 *
AcceptedCmp20 + 0.30116257238429 * AcceptedCmp30 + 0.31213749631365 * AcceptedCmp40 +
0.49344261660916 * AcceptedCmp50 + -0.18226921500969 * Complain0 ;
1162428   +   H11  = H11  +     0.04284090874847 * Education2n_Cycle
1162429   +          +    -0.30425860762413 * EducationBasic  +    -0.44977960705402 *
1162430   +        EducationGraduation  +     -0.0712759822621 * EducationMaster
1162431   +          +     0.05171313818048 * Marital_StatusDivorced
1162432   +          +    -0.79112453157624 * Marital_StatusMarried
1162433   +          +     0.89650138723512 * Marital_StatusSingle
1162434   +          +    -0.22094240412913 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.04284090874847 * Education2n_Cycle + -0.30425860762413 *
EducationBasic + -0.44977960705402 * EducationGraduation + -0.0712759822621 * EducationMaster
+ 0.05171313818048 * Marital_StatusDivorced + -0.79112453157624 * Marital_StatusMarried +
0.89650138723512 * Marital_StatusSingle + -0.22094240412913 * Marital_StatusTogether ;
1162435   +   H12  = H12  +    -0.32431446530898 * Education2n_Cycle
1162436   +          +     0.04651949620543 * EducationBasic  +     0.50250608857106 *
1162437   +        EducationGraduation  +     0.00514401910219 * EducationMaster
1162438   +          +     0.05091092042416 * Marital_StatusDivorced
1162439   +          +     0.86642985712339 * Marital_StatusMarried
1162440   +          +    -0.14148832619997 * Marital_StatusSingle
1162441   +          +     0.54248977280079 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.32431446530898 * Education2n_Cycle + 0.04651949620543 *
EducationBasic + 0.50250608857106 * EducationGraduation + 0.00514401910219 * EducationMaster +
0.05091092042416 * Marital_StatusDivorced + 0.86642985712339 * Marital_StatusMarried +
-0.14148832619997 * Marital_StatusSingle + 0.54248977280079 * Marital_StatusTogether ;
1162442   +   H13  = H13  +      0.0307333873684 * Education2n_Cycle
1162443   +          +     0.54778728297045 * EducationBasic  +    -0.56032296783121 *
1162444   +        EducationGraduation  +     0.26811389967146 * EducationMaster
1162445   +          +    -0.67787102917679 * Marital_StatusDivorced
1162446   +          +     1.38931504762816 * Marital_StatusMarried
1162447   +          +    -0.51164629287485 * Marital_StatusSingle
1162448   +          +     1.18856608313733 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.0307333873684 * Education2n_Cycle + 0.54778728297045 *
EducationBasic + -0.56032296783121 * EducationGraduation + 0.26811389967146 * EducationMaster
+ -0.67787102917679 * Marital_StatusDivorced + 1.38931504762816 * Marital_StatusMarried +
-0.51164629287485 * Marital_StatusSingle + 1.18856608313733 * Marital_StatusTogether ;
1162449   +   H14  = H14  +    -0.07575289231798 * Education2n_Cycle
1162450   +          +     0.20678548929493 * EducationBasic  +     0.15952949579281 *
1162451   +        EducationGraduation  +    -0.08313247341922 * EducationMaster
1162452   +          +     0.12658153975639 * Marital_StatusDivorced
1162453   +          +     0.20111721742791 * Marital_StatusMarried
1162454   +          +     -0.3521524791648 * Marital_StatusSingle
1162455   +          +     0.24908846940254 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.07575289231798 * Education2n_Cycle + 0.20678548929493 *
EducationBasic + 0.15952949579281 * EducationGraduation + -0.08313247341922 * EducationMaster
+ 0.12658153975639 * Marital_StatusDivorced + 0.20111721742791 * Marital_StatusMarried +
-0.3521524791648 * Marital_StatusSingle + 0.24908846940254 * Marital_StatusTogether ;
1162456   +   H11  =      0.8846003542153 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 0.8846003542153 + H11 ;
1162457   +   H12  =      1.7793661863354 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 1.7793661863354 + H12 ;
1162458   +   H13  =    -0.73914187312129 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.73914187312129 + H13 ;
1162459   +   H14  =    -0.28907220457418 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = -0.28907220457418 + H14 ;
1162460   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1162461   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1162462   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1162463   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1162464   +END;
MPRINT(EM_DIAGRAM):   END;
1162465   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1162466   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1162467   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1162468   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1162469   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1162470   +END;
MPRINT(EM_DIAGRAM):   END;
1162471   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
The SAS System
 
1162472   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1162473   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1162474   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1162475   +   P_DepVar1  =    -1.84303414221873 * H11  +     1.56062653143645 * H12
1162476   +          +     -3.0630784922123 * H13  +    -4.55573659919551 * H14 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.84303414221873 * H11 + 1.56062653143645 * H12 +
-3.0630784922123 * H13 + -4.55573659919551 * H14 ;
1162477   +   P_DepVar1  =    -1.51714888392638 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.51714888392638 + P_DepVar1 ;
1162478   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1162479   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1162480   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1162481   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1162482   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1162483   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1162484   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1162485   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1162486   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1162487   +END;
MPRINT(EM_DIAGRAM):   END;
1162488   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1162489   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1162490   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1162491   +END;
MPRINT(EM_DIAGRAM):   END;
1162492   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1162493   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1162494   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1162495   +END;
MPRINT(EM_DIAGRAM):   END;
1162496   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1162497   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1162498   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1162499   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1162500   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1162501   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1162502   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1162503   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1162504   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1162505   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1162506   +END;
MPRINT(EM_DIAGRAM):   END;
1162507   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1162508   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1162509   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1162510   +drop
1162511   +H11
1162512   +H12
1162513   +H13
1162514   +H14
1162515   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 ;
1162516   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1162517    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1162518    quit;
1162519    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1162520    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1162521    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1162522    retain ID 2 Node "Neural33";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Neural33";
1162523    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1162524    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1740 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 1740 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1162525    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1162526    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1162527    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1740 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 1740 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1162528    proc sort data=EMWS8.Neural33_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Neural33_variableset out=_temp2(keep=NAME CREATOR);
1162529    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1162530    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set EMWS8.NEURAL33_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1162531    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1162532    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1162533    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1162534    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1162535    proc contents data=EMWS8.Neural33_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Neural33_train out=_meta(keep=NAME) noprint;
1162536    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
1162537    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1162538    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1162539    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1162540    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1162541    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1162542    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1162543    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 53 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1162544    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1162545    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1162545  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 878 rows and 5 columns.
 
1162546    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1162547    proc append base=EMWS8.Ensmbl9_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl9_FCMP data=_tempx;
1162548    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL9_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 878 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL9_FCMP has 878 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1162549    filename _pref
1162549  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
1162550    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1162551    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
1162552   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1162553   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1162554   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1162555   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1162556   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1162557   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1162558    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1162559    quit;
1162560    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1162561    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1162562    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1162563    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
1162564    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1162565    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1162566    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1162567    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1162568    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1162569    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
1162570    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1162571    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1162572    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1162573    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1162574    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1162575    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1162576    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
1162577    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
1162578    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1162579    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1162580    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1162581    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1162582    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1162583    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1162584    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1162585    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1162586    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1162586  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.
 
1162587    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1162588    proc append base=EMWS8.Ensmbl9_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl9_FCMP data=_tempx;
1162589    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL9_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL9_FCMP has 882 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1162590    filename _pref
1162590  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
1162591    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1162592    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
1162593   +
1162594   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1162595   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1162595  !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1162596   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1162597   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1162598   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1162599   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1162600   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1162601    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1162602    quit;
1162603    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1162604    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1162605    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1162606    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
1162607    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1162608    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1162609    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1162610    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1162611    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1162612    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
1162613    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1162614    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1162615    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1162616    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1162617    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1162618    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1162619    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
1162620    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1162621    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1162622    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1162623    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1162624    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1162625    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1162626    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1162627    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1162628    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1162629    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1162629  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.
 
1162630    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1162631    proc append base=EMWS8.Ensmbl9_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl9_FCMP data=_tempx;
1162632    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL9_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL9_FCMP has 921 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1162633    filename _pref
1162633  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
1162634    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1162635    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
1162636   +
1162637   +
1162638   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
1162639   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
1162640   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
1162641   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
1162642   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
1162643   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1162644   +
1162645   +
1162646   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
1162647   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
1162648   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
1162649   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
1162650   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
1162651   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1162652   +
1162653   +
1162654   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
1162655   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
1162656   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
1162657   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
1162658   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
1162659   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1162660   +
1162661   +
1162662   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
1162663   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
1162664   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
1162665   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
1162666   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
1162667   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1162668   +
1162669   +
1162670   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
1162671   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
1162672   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
1162673   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
1162674   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
1162675   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1162676   +
1162677   +
1162678   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
1162679   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
1162680   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
1162681   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
1162682   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
1162683   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1162684   +
1162685   +
1162686   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
1162687   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
1162688   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
1162689   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
1162690   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
1162691   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1162692   +
1162693   +
1162694   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
1162695   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
1162696   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
1162697   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
1162698   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
1162699   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1162700   +if
1162701   +_FILTERNORM1 not in ( '.')
1162702   + and
1162703   +_FILTERNORM2 not in ( '.')
1162704   + and
1162705   +_FILTERNORM3 not in ( '.')
1162706   + and
1162707   +_FILTERNORM4 not in ( '.')
1162708   + and
1162709   +_FILTERNORM5 not in ( '.')
1162710   + and
1162711   +_FILTERNORM6 not in ( '.')
1162712   + and
1162713   +_FILTERNORM7 not in ( ' ')
1162714   + and
1162715   +_FILTERNORM8 not in ( ' ')
1162716   +and
1162717   +( Dt_Customer ne .)
1162718   +and ( Income ne . and (Income<=107000))
1162719   +and ( Kidhome ne .)
1162720   +and ( MntFishProducts ne .)
1162721   +and ( MntFruits ne .)
1162722   +and ( MntGoldProds ne .)
1162723   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
1162724   +and ( MntSweetProducts ne .)
1162725   +and ( MntWines ne .)
1162726   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
1162727   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
1162728   +and ( NumStorePurchases ne .)
1162729   +and ( NumWebPurchases ne .)
1162730   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
1162731   +and ( Recency ne .)
1162732   +and ( Teenhome ne .)
1162733   +and ( Year_Birth ne .)
1162734   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and (
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and (
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and (
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and (
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne
.) and ( Year_Birth ne .) then do;
1162735   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
1162736   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
1162737   +end;
MPRINT(EM_DIAGRAM):   end;
1162738   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
1162739   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1162740    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1162741    quit;
1162742    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1162743    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1162744    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1162745    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
1162746    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1162747    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1162748    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1162749    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1162750    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1162751    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
1162752    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1162753    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1162754    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1162755    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1162756    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1162757    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1162758    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
1162759    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
1162760    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1162761    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1162762    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1162763    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1162764    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1162765    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1162766    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1162767    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1162768    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1162768  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.
 
1162769    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1162770    proc append base=EMWS8.Ensmbl9_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl9_FCMP data=_tempx;
1162771    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL9_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL9_FCMP has 987 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1162772    %macro varDept(fcmpdata=,id=);
1162773    %global nobs&id scoreFlag&id;
1162774    %let scoreFlag&id = 0;
1162775    %if &id=1 or ^&fcmpStart %then %do;
1162776    proc sort data=&fcmpdata out=_temp&id nodupkey;
1162777    by NAME;
1162778    where id=&id and LHS in( %let j=1;
1162779    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
1162780    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
1162781    "&var" %let j = %eval(&j+1);
1162782    %end;
1162783    );
1162784    run;
1162785    %let dsid = %sysfunc(open(_temp&id));
1162786    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1162787    %let dsid = %sysfunc(close(&dsid));
1162788    %if &&nobs&id %then %do;
1162789    %let scoreFlag&id = 1;
1162790    %let fcmpStart = 1;
1162791    %end;
1162792    %else %let fcmpStart = 0;
1162793    %end;
1162794    %else %do;
1162795    proc sort data=&fcmpdata out=_tempid;
1162796    where id=&id;
1162797    by LHS;
1162798    run;
1162799    %let dsid = %sysfunc(open(_tempid));
1162800    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1162801    %let dsid = %sysfunc(close(&dsid));
1162802    %if ^&&nobs&id %then %do;
1162803    proc datasets lib=work nolist;
1162804    delete _tempid;
1162805    run;
1162806    quit;
1162807    %end;
1162808    %else %do;
1162809    data _tempAll;
1162810    set %let j=%eval(&id-1);
1162811    %do x=1 %to &j;
1162812    %if &&nobs&x %then %do;
1162813    _temp&x %end;
1162814    %end;
1162815    ;
1162816    run;
1162817    proc sql;
1162818    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
1162818  ! work._tempid p2 where p.name=p2.lhs;
1162819    quit;
1162820    data _temp&id;
1162821    set _temp&id;
1162822    where LHS ne '' and NAME ne '' and Node ne '';
1162823    run;
1162824    proc datasets lib=work nolist;
1162825    delete _tempAll;
1162826    run;
1162827    %let dsid = %sysfunc(open(_temp&id));
1162828    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1162829    %let dsid = %sysfunc(close(&dsid));
1162830    %if ^&&nobs&id %then %do;
1162831    proc datasets lib=work nolist;
1162832    delete _temp&id;
1162833    run;
1162834    quit;
1162835    %end;
1162836    %else %do;
1162837    %let scoreFlag&id = 1;
1162838    data _temp&id;
1162839    set _temp&id;
1162840    where LHS ne NAME and node ne '';
1162841    run;
1162842    %let dsid = %sysfunc(open(_temp&id));
1162843    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1162844    %let dsid = %sysfunc(close(&dsid));
1162845    %if ^&&nobs&id %then %do;
1162846    proc datasets lib=work nolist;
1162847    delete _temp&id;
1162848    run;
1162849    quit;
1162850    %end;
1162851    %else %do;
1162852    proc sort data=_temp&id nodupkey;
1162853    by LHS NAME;
1162854    run;
1162855    %end;
1162856    %end;
1162857    %end;
1162858    %end;
1162859    %mend varDept;
1162860    %macro optCode(outdata=fcmpdata);
1162861    %global fcmpStart;
1162862    %let fcmpStart = 0;
1162863    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
1162864    %let NumNodes=9;
1162865    %do k=1 %to &NumNodes;
1162866    %vardept(fcmpdata=&outdata, id=&k);
1162867    %end;
1162868    %mend optCode;
1162869    %optcode(outData=EMWS8.Ensmbl9_FCMP);
MPRINT(EM_DIAGRAM):
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl9_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL9_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl9_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: There were 98 observations read from the data set EMWS8.ENSMBL9_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 73 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 25 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl9_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL9_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl9_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL9_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl9_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set EMWS8.ENSMBL9_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 25 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 25 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp5;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP5 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl9_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set EMWS8.ENSMBL9_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 25 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 25 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp6;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP6 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl9_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 66 observations read from the data set EMWS8.ENSMBL9_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 25 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 25 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl9_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL9_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl9_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL9_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;
 
1162870    filename _pref
1162870  ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural6\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Neural6\EMPUBLISHSCORE.sas";
1162871    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1162872    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Neural6\EMPUBLISHSCORE.sas.
1162873   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1162874   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1162875   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1162876   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1162877   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1162878   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1162879   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1162880   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1162881   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1162882   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1162883   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1162884   +LENGTH _WARN_ $4
1162885   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
1162886   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1162887   +
1162888   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1162889   +
1162890   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1162891   +
1162892   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1162893   +
1162894   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1162895   +
1162896   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1162897   +
1162898   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1162899   +
1162900   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1162901   +
1162902   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1162903   +
1162904   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1162905   +
1162906   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1162907   +
1162908   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1162909   +
1162910   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1162911   +
1162912   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1162913   +
1162914   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1162915   +
1162916   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1162917   +
1162918   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1162919   +
1162920   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1162921   +
1162922   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1162923   +
1162924   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1162925   +
1162926   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1162927   +
1162928   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1162929   +
1162930   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1162931   +
1162932   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1162933   +
1162934   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1162935   +
1162936   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1162937   +
1162938   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1162939   +
1162940   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1162941   +
1162942   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1162943   +
1162944   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1162945   +
1162946   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1162947   +
1162948   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1162949   +
1162950   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1162951   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1162952   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1162953   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1162954   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1162955   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1162956   +end;
MPRINT(EM_DIAGRAM):   end;
1162957   +else do;
MPRINT(EM_DIAGRAM):   else do;
1162958   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1162959   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1162960   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1162961   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1162962   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1162963   +   end;
MPRINT(EM_DIAGRAM):   end;
1162964   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1162965   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1162966   +   end;
MPRINT(EM_DIAGRAM):   end;
1162967   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1162968   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1162969   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1162970   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1162971   +   end;
MPRINT(EM_DIAGRAM):   end;
1162972   +end;
MPRINT(EM_DIAGRAM):   end;
1162973   +
1162974   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1162975   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1162976   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1162977   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1162978   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1162979   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1162980   +end;
MPRINT(EM_DIAGRAM):   end;
1162981   +else do;
MPRINT(EM_DIAGRAM):   else do;
1162982   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1162983   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1162984   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1162985   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1162986   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1162987   +   end;
MPRINT(EM_DIAGRAM):   end;
1162988   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1162989   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1162990   +   end;
MPRINT(EM_DIAGRAM):   end;
1162991   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1162992   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1162993   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1162994   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1162995   +   end;
MPRINT(EM_DIAGRAM):   end;
1162996   +end;
MPRINT(EM_DIAGRAM):   end;
1162997   +
1162998   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1162999   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1163000   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1163001   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1163002   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1163003   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1163004   +end;
MPRINT(EM_DIAGRAM):   end;
1163005   +else do;
MPRINT(EM_DIAGRAM):   else do;
1163006   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1163007   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1163008   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1163009   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1163010   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1163011   +   end;
MPRINT(EM_DIAGRAM):   end;
1163012   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1163013   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1163014   +   end;
MPRINT(EM_DIAGRAM):   end;
1163015   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1163016   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1163017   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1163018   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1163019   +   end;
MPRINT(EM_DIAGRAM):   end;
1163020   +end;
MPRINT(EM_DIAGRAM):   end;
1163021   +
1163022   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1163023   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1163024   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1163025   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1163026   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1163027   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1163028   +end;
MPRINT(EM_DIAGRAM):   end;
1163029   +else do;
MPRINT(EM_DIAGRAM):   else do;
1163030   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1163031   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1163032   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1163033   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1163034   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1163035   +   end;
MPRINT(EM_DIAGRAM):   end;
1163036   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1163037   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1163038   +   end;
MPRINT(EM_DIAGRAM):   end;
1163039   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1163040   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1163041   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1163042   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1163043   +   end;
MPRINT(EM_DIAGRAM):   end;
1163044   +end;
MPRINT(EM_DIAGRAM):   end;
1163045   +
1163046   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1163047   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1163048   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1163049   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1163050   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1163051   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1163052   +end;
MPRINT(EM_DIAGRAM):   end;
1163053   +else do;
MPRINT(EM_DIAGRAM):   else do;
1163054   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1163055   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1163056   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1163057   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1163058   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1163059   +   end;
MPRINT(EM_DIAGRAM):   end;
1163060   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1163061   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1163062   +   end;
MPRINT(EM_DIAGRAM):   end;
1163063   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1163064   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1163065   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1163066   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1163067   +   end;
MPRINT(EM_DIAGRAM):   end;
1163068   +end;
MPRINT(EM_DIAGRAM):   end;
1163069   +
1163070   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1163071   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1163072   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1163073   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1163074   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1163075   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1163076   +end;
MPRINT(EM_DIAGRAM):   end;
1163077   +else do;
MPRINT(EM_DIAGRAM):   else do;
1163078   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1163079   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1163080   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1163081   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1163082   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1163083   +   end;
MPRINT(EM_DIAGRAM):   end;
1163084   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1163085   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1163086   +   end;
MPRINT(EM_DIAGRAM):   end;
1163087   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1163088   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1163089   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1163090   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1163091   +   end;
MPRINT(EM_DIAGRAM):   end;
1163092   +end;
MPRINT(EM_DIAGRAM):   end;
1163093   +
1163094   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1163095   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
1163096   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1163097   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1163098   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1163099   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1163100   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1163101   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1163102   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1163103   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1163104   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1163105   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1163106   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1163107   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1163108   +end;
MPRINT(EM_DIAGRAM):   end;
1163109   +else do;
MPRINT(EM_DIAGRAM):   else do;
1163110   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1163111   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1163112   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1163113   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1163114   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1163115   +   end;
MPRINT(EM_DIAGRAM):   end;
1163116   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1163117   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1163118   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1163119   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1163120   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1163121   +   end;
MPRINT(EM_DIAGRAM):   end;
1163122   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1163123   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1163124   +   end;
MPRINT(EM_DIAGRAM):   end;
1163125   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1163126   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1163127   +   end;
MPRINT(EM_DIAGRAM):   end;
1163128   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1163129   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1163130   +   end;
MPRINT(EM_DIAGRAM):   end;
1163131   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1163132   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1163133   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1163134   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1163135   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1163136   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1163137   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1163138   +   end;
MPRINT(EM_DIAGRAM):   end;
1163139   +end;
MPRINT(EM_DIAGRAM):   end;
1163140   +
1163141   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1163142   +*** Checking missing input Interval
1163143   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1163144   +
1163145   +IF NMISS(
1163146   +   Income ,
1163147   +   Kidhome ,
1163148   +   Mnt ,
1163149   +   MntFishProducts ,
1163150   +   MntFruits ,
1163151   +   MntGoldProds ,
1163152   +   MntMeatProducts ,
1163153   +   MntSweetProducts ,
1163154   +   MntWines ,
1163155   +   NumCatalogPurchases ,
1163156   +   NumDealsPurchases ,
1163157   +   NumStorePurchases ,
1163158   +   NumWebPurchases ,
1163159   +   NumWebVisitsMonth ,
1163160   +   Recency ,
1163161   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Income , Kidhome , Mnt , MntFishProducts , MntFruits ,
MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , NumCatalogPurchases ,
NumDealsPurchases , NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , Recency ,
Teenhome ) THEN DO;
1163162   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1163163   +
1163164   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1163165   +END;
MPRINT(EM_DIAGRAM):   END;
1163166   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1163167   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1163168   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1163169   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1163170   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1163171   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1163172   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1163173   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1163174   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1163175   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1163176   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1163177   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1163178   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1163179   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1163180   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1163181   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1163182   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1163183   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1163184   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1163185   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1163186   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1163187   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1163188   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1163189   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1163190   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1163191   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1163192   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1163193   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1163194   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1163195   +END;
MPRINT(EM_DIAGRAM):   END;
1163196   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1163197   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1163198   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1163199   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1163200   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1163201   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1163202   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1163203   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1163204   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1163205   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1163206   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1163207   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1163208   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1163209   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1163210   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1163211   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
1163212   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1163213   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1163214   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1163215   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1163216   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1163217   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1163218   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1163219   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1163220   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1163221   +   ELSE S_NumCatalogPurchases
1163222   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1163223   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1163224   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1163225   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1163226   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1163227   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1163228   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1163229   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1163230   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1163231   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1163232   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1163233   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1163234   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1163235   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1163236   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1163237   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1163238   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1163239   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1163240   +END;
MPRINT(EM_DIAGRAM):   END;
1163241   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1163242   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1163243   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1163244   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1163245   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1163246   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1163247   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1163248   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1163249   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1163250   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1163251   +   H11  =    -0.03281362065647 * S_Income  +     0.00535686931174 * S_Kidhome
1163252   +          +    -0.01250948278467 * S_Mnt  +     0.00699255131323 *
1163253   +        S_MntFishProducts  +      0.0076699264859 * S_MntFruits
1163254   +          +    -0.00197175743075 * S_MntGoldProds  +    -0.03648519433733 *
1163255   +        S_MntMeatProducts  +     0.00505629880474 * S_MntSweetProducts
1163256   +          +     0.03058954226232 * S_MntWines  +     -0.0420799719311 *
1163257   +        S_NumCatalogPurchases  +    -0.02833732377257 * S_NumDealsPurchases
1163258   +          +     0.02790503880998 * S_NumStorePurchases
1163259   +          +     0.02520512526218 * S_NumWebPurchases
1163260   +          +    -0.05282883696993 * S_NumWebVisitsMonth
1163261   +          +     0.06563256173645 * S_Recency  +     0.01797337388273 *
1163262   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = -0.03281362065647 * S_Income + 0.00535686931174 * S_Kidhome +
-0.01250948278467 * S_Mnt + 0.00699255131323 * S_MntFishProducts + 0.0076699264859 *
S_MntFruits + -0.00197175743075 * S_MntGoldProds + -0.03648519433733 * S_MntMeatProducts +
0.00505629880474 * S_MntSweetProducts + 0.03058954226232 * S_MntWines + -0.0420799719311 *
S_NumCatalogPurchases + -0.02833732377257 * S_NumDealsPurchases + 0.02790503880998 *
S_NumStorePurchases + 0.02520512526218 * S_NumWebPurchases + -0.05282883696993 *
S_NumWebVisitsMonth + 0.06563256173645 * S_Recency + 0.01797337388273 * S_Teenhome ;
1163263   +   H11  = H11  +     0.02870149682732 * AcceptedCmp10
1163264   +          +     0.02798378890148 * AcceptedCmp20  +     0.03430631974463 *
1163265   +        AcceptedCmp30  +     0.02526418526905 * AcceptedCmp40
1163266   +          +     0.03693742114225 * AcceptedCmp50  +    -0.01462363843793 *
1163267   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.02870149682732 * AcceptedCmp10 + 0.02798378890148 *
AcceptedCmp20 + 0.03430631974463 * AcceptedCmp30 + 0.02526418526905 * AcceptedCmp40 +
0.03693742114225 * AcceptedCmp50 + -0.01462363843793 * Complain0 ;
1163268   +   H11  = H11  +    -0.00153701661702 * Education2n_Cycle
1163269   +          +      0.0085508617275 * EducationBasic  +    -0.00635980121817 *
1163270   +        EducationGraduation  +     0.00121093589886 * EducationMaster ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.00153701661702 * Education2n_Cycle + 0.0085508617275 *
EducationBasic + -0.00635980121817 * EducationGraduation + 0.00121093589886 * EducationMaster ;
1163271   +   H11  =    -0.10607308229024 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -0.10607308229024 + H11 ;
1163272   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1163273   +END;
MPRINT(EM_DIAGRAM):   END;
1163274   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1163275   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1163276   +END;
MPRINT(EM_DIAGRAM):   END;
1163277   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1163278   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1163279   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1163280   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1163281   +   P_DepVar1  =    -42.7395691647266 * H11 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -42.7395691647266 * H11 ;
1163282   +   P_DepVar1  =    -4.33224364987351 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -4.33224364987351 + P_DepVar1 ;
1163283   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1163284   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1163285   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1163286   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1163287   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1163288   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1163289   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1163290   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1163291   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1163292   +END;
MPRINT(EM_DIAGRAM):   END;
1163293   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1163294   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1163295   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1163296   +END;
MPRINT(EM_DIAGRAM):   END;
1163297   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1163298   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1163299   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1163300   +END;
MPRINT(EM_DIAGRAM):   END;
1163301   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1163302   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1163303   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1163304   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1163305   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1163306   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1163307   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1163308   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1163309   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1163310   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1163311   +END;
MPRINT(EM_DIAGRAM):   END;
1163312   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1163313   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1163314   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1163315   +drop
1163316   +H11
1163317   +;
MPRINT(EM_DIAGRAM):   drop H11 ;
1163318   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1163319    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1163320    quit;
1163321    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1163322    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1163323    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1163324    retain ID 2 Node "Neural6";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Neural6";
1163325    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1163326    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1243 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 1243 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1163327    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1163328    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1163329    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1243 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 1243 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1163330    proc sort data=EMWS8.Neural6_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Neural6_variableset out=_temp2(keep=NAME CREATOR);
1163331    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1163332    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set EMWS8.NEURAL6_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1163333    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1163334    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1163335    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1163336    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1163337    proc contents data=EMWS8.Neural6_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Neural6_train out=_meta(keep=NAME) noprint;
1163338    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
1163339    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1163340    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1163341    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1163342    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1163343    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1163344    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1163345    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 53 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1163346    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1163347    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1163347  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 757 rows and 5 columns.
 
1163348    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1163349    proc append base=EMWS8.Ensmbl9_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl9_FCMP data=_tempx;
1163350    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL9_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 757 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL9_FCMP has 757 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1163351    filename _pref
1163351  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
1163352    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1163353    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
1163354   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1163355   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1163356   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1163357   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1163358   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1163359   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1163360    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1163361    quit;
1163362    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1163363    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1163364    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1163365    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
1163366    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1163367    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1163368    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1163369    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1163370    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1163371    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
1163372    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1163373    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1163374    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1163375    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1163376    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1163377    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1163378    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
1163379    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
1163380    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1163381    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1163382    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1163383    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1163384    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1163385    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1163386    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1163387    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1163388    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1163388  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.
 
1163389    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1163390    proc append base=EMWS8.Ensmbl9_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl9_FCMP data=_tempx;
1163391    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL9_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL9_FCMP has 761 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1163392    filename _pref
1163392  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
1163393    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1163394    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
1163395   +
1163396   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1163397   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1163397  !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1163398   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1163399   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1163400   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1163401   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1163402   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1163403    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1163404    quit;
1163405    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1163406    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1163407    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1163408    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
1163409    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1163410    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1163411    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1163412    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1163413    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1163414    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
1163415    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1163416    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1163417    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1163418    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1163419    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1163420    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1163421    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
1163422    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1163423    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1163424    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1163425    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1163426    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1163427    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1163428    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1163429    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1163430    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1163431    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1163431  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.
 
1163432    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1163433    proc append base=EMWS8.Ensmbl9_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl9_FCMP data=_tempx;
1163434    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL9_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL9_FCMP has 800 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1163435    filename _pref
1163435  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
1163436    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1163437    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
1163438   +
1163439   +
1163440   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
1163441   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
1163442   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
1163443   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
1163444   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
1163445   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1163446   +
1163447   +
1163448   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
1163449   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
1163450   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
1163451   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
1163452   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
1163453   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1163454   +
1163455   +
1163456   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
1163457   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
1163458   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
1163459   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
1163460   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
1163461   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1163462   +
1163463   +
1163464   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
1163465   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
1163466   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
1163467   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
1163468   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
1163469   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1163470   +
1163471   +
1163472   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
1163473   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
1163474   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
1163475   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
1163476   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
1163477   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1163478   +
1163479   +
1163480   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
1163481   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
1163482   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
1163483   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
1163484   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
1163485   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1163486   +
1163487   +
1163488   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
1163489   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
1163490   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
1163491   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
1163492   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
1163493   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1163494   +
1163495   +
1163496   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
1163497   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
1163498   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
1163499   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
1163500   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
1163501   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1163502   +if
1163503   +_FILTERNORM1 not in ( '.')
1163504   + and
1163505   +_FILTERNORM2 not in ( '.')
1163506   + and
1163507   +_FILTERNORM3 not in ( '.')
1163508   + and
1163509   +_FILTERNORM4 not in ( '.')
1163510   + and
1163511   +_FILTERNORM5 not in ( '.')
1163512   + and
1163513   +_FILTERNORM6 not in ( '.')
1163514   + and
1163515   +_FILTERNORM7 not in ( ' ')
1163516   + and
1163517   +_FILTERNORM8 not in ( ' ')
1163518   +and
1163519   +( Dt_Customer ne .)
1163520   +and ( Income ne . and (Income<=107000))
1163521   +and ( Kidhome ne .)
1163522   +and ( MntFishProducts ne .)
1163523   +and ( MntFruits ne .)
1163524   +and ( MntGoldProds ne .)
1163525   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
1163526   +and ( MntSweetProducts ne .)
1163527   +and ( MntWines ne .)
1163528   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
1163529   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
1163530   +and ( NumStorePurchases ne .)
1163531   +and ( NumWebPurchases ne .)
1163532   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
1163533   +and ( Recency ne .)
1163534   +and ( Teenhome ne .)
1163535   +and ( Year_Birth ne .)
1163536   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and (
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and (
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and (
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and (
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne
.) and ( Year_Birth ne .) then do;
1163537   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
1163538   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
1163539   +end;
MPRINT(EM_DIAGRAM):   end;
1163540   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
1163541   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1163542    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1163543    quit;
1163544    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1163545    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1163546    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1163547    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
1163548    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1163549    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1163550    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1163551    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1163552    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1163553    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
1163554    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1163555    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1163556    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1163557    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1163558    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1163559    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1163560    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
1163561    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
1163562    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1163563    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1163564    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1163565    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1163566    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1163567    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1163568    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1163569    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1163570    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1163570  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.
 
1163571    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1163572    proc append base=EMWS8.Ensmbl9_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl9_FCMP data=_tempx;
1163573    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL9_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL9_FCMP has 866 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1163574    %macro varDept(fcmpdata=,id=);
1163575    %global nobs&id scoreFlag&id;
1163576    %let scoreFlag&id = 0;
1163577    %if &id=1 or ^&fcmpStart %then %do;
1163578    proc sort data=&fcmpdata out=_temp&id nodupkey;
1163579    by NAME;
1163580    where id=&id and LHS in( %let j=1;
1163581    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
1163582    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
1163583    "&var" %let j = %eval(&j+1);
1163584    %end;
1163585    );
1163586    run;
1163587    %let dsid = %sysfunc(open(_temp&id));
1163588    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1163589    %let dsid = %sysfunc(close(&dsid));
1163590    %if &&nobs&id %then %do;
1163591    %let scoreFlag&id = 1;
1163592    %let fcmpStart = 1;
1163593    %end;
1163594    %else %let fcmpStart = 0;
1163595    %end;
1163596    %else %do;
1163597    proc sort data=&fcmpdata out=_tempid;
1163598    where id=&id;
1163599    by LHS;
1163600    run;
1163601    %let dsid = %sysfunc(open(_tempid));
1163602    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1163603    %let dsid = %sysfunc(close(&dsid));
1163604    %if ^&&nobs&id %then %do;
1163605    proc datasets lib=work nolist;
1163606    delete _tempid;
1163607    run;
1163608    quit;
1163609    %end;
1163610    %else %do;
1163611    data _tempAll;
1163612    set %let j=%eval(&id-1);
1163613    %do x=1 %to &j;
1163614    %if &&nobs&x %then %do;
1163615    _temp&x %end;
1163616    %end;
1163617    ;
1163618    run;
1163619    proc sql;
1163620    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
1163620  ! work._tempid p2 where p.name=p2.lhs;
1163621    quit;
1163622    data _temp&id;
1163623    set _temp&id;
1163624    where LHS ne '' and NAME ne '' and Node ne '';
1163625    run;
1163626    proc datasets lib=work nolist;
1163627    delete _tempAll;
1163628    run;
1163629    %let dsid = %sysfunc(open(_temp&id));
1163630    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1163631    %let dsid = %sysfunc(close(&dsid));
1163632    %if ^&&nobs&id %then %do;
1163633    proc datasets lib=work nolist;
1163634    delete _temp&id;
1163635    run;
1163636    quit;
1163637    %end;
1163638    %else %do;
1163639    %let scoreFlag&id = 1;
1163640    data _temp&id;
1163641    set _temp&id;
1163642    where LHS ne NAME and node ne '';
1163643    run;
1163644    %let dsid = %sysfunc(open(_temp&id));
1163645    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1163646    %let dsid = %sysfunc(close(&dsid));
1163647    %if ^&&nobs&id %then %do;
1163648    proc datasets lib=work nolist;
1163649    delete _temp&id;
1163650    run;
1163651    quit;
1163652    %end;
1163653    %else %do;
1163654    proc sort data=_temp&id nodupkey;
1163655    by LHS NAME;
1163656    run;
1163657    %end;
1163658    %end;
1163659    %end;
1163660    %end;
1163661    %mend varDept;
1163662    %macro optCode(outdata=fcmpdata);
1163663    %global fcmpStart;
1163664    %let fcmpStart = 0;
1163665    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
1163666    %let NumNodes=9;
1163667    %do k=1 %to &NumNodes;
1163668    %vardept(fcmpdata=&outdata, id=&k);
1163669    %end;
1163670    %mend optCode;
1163671    %optcode(outData=EMWS8.Ensmbl9_FCMP);
MPRINT(EM_DIAGRAM):
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl9_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL9_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl9_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: There were 98 observations read from the data set EMWS8.ENSMBL9_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 73 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 25 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl9_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL9_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl9_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL9_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl9_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set EMWS8.ENSMBL9_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 25 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 25 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp5;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP5 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl9_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set EMWS8.ENSMBL9_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 25 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 25 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 6 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 6 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 6 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.03 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 6 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 6 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 6 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 6 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl9_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 66 observations read from the data set EMWS8.ENSMBL9_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp6 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 25 observations read from the data set WORK._TEMP2.
NOTE: There were 6 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 31 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl9_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL9_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl9_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL9_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;
 
1163672    filename _pref
1163672  ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural31\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Neural31\EMPUBLISHSCORE.sas";
1163673    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1163674    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Neural31\EMPUBLISHSCORE.sas.
1163675   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1163676   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1163677   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1163678   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1163679   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1163680   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1163681   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1163682   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1163683   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1163684   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1163685   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1163686   +LENGTH _WARN_ $4
1163687   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
1163688   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1163689   +
1163690   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1163691   +
1163692   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1163693   +
1163694   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1163695   +
1163696   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1163697   +
1163698   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1163699   +
1163700   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1163701   +
1163702   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1163703   +
1163704   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1163705   +
1163706   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1163707   +
1163708   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1163709   +
1163710   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1163711   +
1163712   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1163713   +
1163714   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1163715   +
1163716   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1163717   +
1163718   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1163719   +
1163720   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1163721   +
1163722   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1163723   +
1163724   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1163725   +
1163726   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1163727   +
1163728   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1163729   +
1163730   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1163731   +
1163732   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1163733   +
1163734   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1163735   +
1163736   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1163737   +
1163738   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1163739   +
1163740   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1163741   +
1163742   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1163743   +
1163744   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1163745   +
1163746   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1163747   +
1163748   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1163749   +
1163750   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1163751   +
1163752   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1163753   +
1163754   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1163755   +
1163756   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1163757   +
1163758   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1163759   +
1163760   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1163761   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1163762   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1163763   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1163764   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1163765   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1163766   +end;
MPRINT(EM_DIAGRAM):   end;
1163767   +else do;
MPRINT(EM_DIAGRAM):   else do;
1163768   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1163769   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1163770   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1163771   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1163772   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1163773   +   end;
MPRINT(EM_DIAGRAM):   end;
1163774   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1163775   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1163776   +   end;
MPRINT(EM_DIAGRAM):   end;
1163777   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1163778   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1163779   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1163780   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1163781   +   end;
MPRINT(EM_DIAGRAM):   end;
1163782   +end;
MPRINT(EM_DIAGRAM):   end;
1163783   +
1163784   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1163785   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1163786   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1163787   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1163788   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1163789   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1163790   +end;
MPRINT(EM_DIAGRAM):   end;
1163791   +else do;
MPRINT(EM_DIAGRAM):   else do;
1163792   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1163793   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1163794   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1163795   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1163796   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1163797   +   end;
MPRINT(EM_DIAGRAM):   end;
1163798   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1163799   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1163800   +   end;
MPRINT(EM_DIAGRAM):   end;
1163801   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1163802   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1163803   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1163804   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1163805   +   end;
MPRINT(EM_DIAGRAM):   end;
1163806   +end;
MPRINT(EM_DIAGRAM):   end;
1163807   +
1163808   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1163809   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1163810   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1163811   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1163812   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1163813   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1163814   +end;
MPRINT(EM_DIAGRAM):   end;
1163815   +else do;
MPRINT(EM_DIAGRAM):   else do;
1163816   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1163817   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1163818   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1163819   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1163820   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1163821   +   end;
MPRINT(EM_DIAGRAM):   end;
1163822   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1163823   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1163824   +   end;
MPRINT(EM_DIAGRAM):   end;
1163825   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1163826   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1163827   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1163828   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1163829   +   end;
MPRINT(EM_DIAGRAM):   end;
1163830   +end;
MPRINT(EM_DIAGRAM):   end;
1163831   +
1163832   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1163833   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1163834   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1163835   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1163836   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1163837   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1163838   +end;
MPRINT(EM_DIAGRAM):   end;
1163839   +else do;
MPRINT(EM_DIAGRAM):   else do;
1163840   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1163841   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1163842   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1163843   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1163844   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1163845   +   end;
MPRINT(EM_DIAGRAM):   end;
1163846   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1163847   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1163848   +   end;
MPRINT(EM_DIAGRAM):   end;
1163849   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1163850   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1163851   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1163852   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1163853   +   end;
MPRINT(EM_DIAGRAM):   end;
1163854   +end;
MPRINT(EM_DIAGRAM):   end;
1163855   +
1163856   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1163857   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1163858   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1163859   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1163860   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1163861   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1163862   +end;
MPRINT(EM_DIAGRAM):   end;
1163863   +else do;
MPRINT(EM_DIAGRAM):   else do;
1163864   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1163865   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1163866   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1163867   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1163868   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1163869   +   end;
MPRINT(EM_DIAGRAM):   end;
1163870   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1163871   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1163872   +   end;
MPRINT(EM_DIAGRAM):   end;
1163873   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1163874   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1163875   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1163876   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1163877   +   end;
MPRINT(EM_DIAGRAM):   end;
1163878   +end;
MPRINT(EM_DIAGRAM):   end;
1163879   +
1163880   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1163881   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1163882   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1163883   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1163884   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1163885   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1163886   +end;
MPRINT(EM_DIAGRAM):   end;
1163887   +else do;
MPRINT(EM_DIAGRAM):   else do;
1163888   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1163889   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1163890   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1163891   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1163892   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1163893   +   end;
MPRINT(EM_DIAGRAM):   end;
1163894   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1163895   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1163896   +   end;
MPRINT(EM_DIAGRAM):   end;
1163897   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1163898   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1163899   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1163900   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1163901   +   end;
MPRINT(EM_DIAGRAM):   end;
1163902   +end;
MPRINT(EM_DIAGRAM):   end;
1163903   +
1163904   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1163905   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
1163906   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1163907   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1163908   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1163909   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1163910   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1163911   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1163912   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1163913   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1163914   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1163915   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1163916   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1163917   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1163918   +end;
MPRINT(EM_DIAGRAM):   end;
1163919   +else do;
MPRINT(EM_DIAGRAM):   else do;
1163920   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1163921   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1163922   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1163923   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1163924   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1163925   +   end;
MPRINT(EM_DIAGRAM):   end;
1163926   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1163927   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1163928   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1163929   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1163930   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1163931   +   end;
MPRINT(EM_DIAGRAM):   end;
1163932   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1163933   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1163934   +   end;
MPRINT(EM_DIAGRAM):   end;
1163935   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1163936   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1163937   +   end;
MPRINT(EM_DIAGRAM):   end;
1163938   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1163939   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1163940   +   end;
MPRINT(EM_DIAGRAM):   end;
1163941   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1163942   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1163943   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1163944   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1163945   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1163946   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1163947   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1163948   +   end;
MPRINT(EM_DIAGRAM):   end;
1163949   +end;
MPRINT(EM_DIAGRAM):   end;
1163950   +
1163951   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1163952   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1163953   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
1163954   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1163955   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1163956   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1163957   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1163958   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1163959   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1163960   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1163961   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1163962   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1163963   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1163964   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1163965   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1163966   +end;
MPRINT(EM_DIAGRAM):   end;
1163967   +else do;
MPRINT(EM_DIAGRAM):   else do;
1163968   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1163969   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1163970   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1163971   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1163972   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1163973   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1163974   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1163975   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1163976   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1163977   +         end;
MPRINT(EM_DIAGRAM):   end;
1163978   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1163979   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1163980   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1163981   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1163982   +            end;
MPRINT(EM_DIAGRAM):   end;
1163983   +         end;
MPRINT(EM_DIAGRAM):   end;
1163984   +      end;
MPRINT(EM_DIAGRAM):   end;
1163985   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1163986   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1163987   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1163988   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1163989   +         end;
MPRINT(EM_DIAGRAM):   end;
1163990   +      end;
MPRINT(EM_DIAGRAM):   end;
1163991   +   end;
MPRINT(EM_DIAGRAM):   end;
1163992   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1163993   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1163994   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1163995   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1163996   +      end;
MPRINT(EM_DIAGRAM):   end;
1163997   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1163998   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1163999   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1164000   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1164001   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1164002   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1164003   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1164004   +         end;
MPRINT(EM_DIAGRAM):   end;
1164005   +      end;
MPRINT(EM_DIAGRAM):   end;
1164006   +   end;
MPRINT(EM_DIAGRAM):   end;
1164007   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1164008   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1164009   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1164010   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1164011   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1164012   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1164013   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1164014   +   end;
MPRINT(EM_DIAGRAM):   end;
1164015   +end;
MPRINT(EM_DIAGRAM):   end;
1164016   +
1164017   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1164018   +*** Checking missing input Interval
1164019   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1164020   +
1164021   +IF NMISS(
1164022   +   Income ,
1164023   +   Kidhome ,
1164024   +   MntFishProducts ,
1164025   +   MntFruits ,
1164026   +   MntGoldProds ,
1164027   +   MntMeatProducts ,
1164028   +   MntSweetProducts ,
1164029   +   MntWines ,
1164030   +   NumCatalogPurchases ,
1164031   +   NumDealsPurchases ,
1164032   +   NumStorePurchases ,
1164033   +   NumWebPurchases ,
1164034   +   NumWebVisitsMonth ,
1164035   +   Recency ,
1164036   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Income , Kidhome , MntFishProducts , MntFruits , MntGoldProds
, MntMeatProducts , MntSweetProducts , MntWines , NumCatalogPurchases , NumDealsPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , Recency , Teenhome ) THEN DO;
1164037   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1164038   +
1164039   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1164040   +END;
MPRINT(EM_DIAGRAM):   END;
1164041   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1164042   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1164043   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1164044   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1164045   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1164046   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1164047   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1164048   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1164049   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1164050   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1164051   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1164052   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1164053   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1164054   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1164055   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1164056   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1164057   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1164058   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1164059   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1164060   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1164061   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1164062   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1164063   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1164064   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1164065   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1164066   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1164067   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1164068   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1164069   +END;
MPRINT(EM_DIAGRAM):   END;
1164070   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1164071   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1164072   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1164073   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1164074   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1164075   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1164076   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1164077   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1164078   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1164079   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1164080   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1164081   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1164082   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1164083   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
1164084   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1164085   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1164086   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1164087   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1164088   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1164089   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1164090   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1164091   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1164092   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1164093   +   ELSE S_NumCatalogPurchases
1164094   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1164095   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1164096   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1164097   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1164098   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1164099   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1164100   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1164101   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1164102   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1164103   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1164104   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1164105   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1164106   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1164107   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1164108   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1164109   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1164110   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1164111   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1164112   +END;
MPRINT(EM_DIAGRAM):   END;
1164113   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1164114   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1164115   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1164116   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1164117   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1164118   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1164119   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1164120   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1164121   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1164122   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1164123   +   H11  =    -1.33502235588914 * S_Income  +     0.86914778071024 * S_Kidhome
1164124   +          +     0.06177226616611 * S_MntFishProducts
1164125   +          +     0.22465531888584 * S_MntFruits  +    -0.01216018017424 *
1164126   +        S_MntGoldProds  +    -0.10435601171346 * S_MntMeatProducts
1164127   +          +     0.19245635559754 * S_MntSweetProducts
1164128   +          +    -0.06473329764962 * S_MntWines  +    -0.40260570275107 *
1164129   +        S_NumCatalogPurchases  +    -0.01043435397255 * S_NumDealsPurchases
1164130   +          +    -0.35392759932805 * S_NumStorePurchases
1164131   +          +     -0.2443007642616 * S_NumWebPurchases
1164132   +          +    -0.72667572173837 * S_NumWebVisitsMonth
1164133   +          +     0.97336679863544 * S_Recency  +     0.72544205905496 *
1164134   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = -1.33502235588914 * S_Income + 0.86914778071024 * S_Kidhome +
0.06177226616611 * S_MntFishProducts + 0.22465531888584 * S_MntFruits + -0.01216018017424 *
S_MntGoldProds + -0.10435601171346 * S_MntMeatProducts + 0.19245635559754 * S_MntSweetProducts
+ -0.06473329764962 * S_MntWines + -0.40260570275107 * S_NumCatalogPurchases +
-0.01043435397255 * S_NumDealsPurchases + -0.35392759932805 * S_NumStorePurchases +
-0.2443007642616 * S_NumWebPurchases + -0.72667572173837 * S_NumWebVisitsMonth +
0.97336679863544 * S_Recency + 0.72544205905496 * S_Teenhome ;
1164135   +   H12  =    -0.09105644521483 * S_Income  +     0.01920168996111 * S_Kidhome
1164136   +          +     0.00012212205827 * S_MntFishProducts
1164137   +          +     0.00032664246198 * S_MntFruits  +    -0.02161363659377 *
1164138   +        S_MntGoldProds  +    -0.40917729724893 * S_MntMeatProducts
1164139   +          +     0.01459978689352 * S_MntSweetProducts
1164140   +          +     0.28732983017398 * S_MntWines  +    -0.26033282919423 *
1164141   +        S_NumCatalogPurchases  +      -0.306688498482 * S_NumDealsPurchases
1164142   +          +      0.4054643699817 * S_NumStorePurchases
1164143   +          +     0.27747327375374 * S_NumWebPurchases
1164144   +          +    -0.31325270852641 * S_NumWebVisitsMonth
1164145   +          +      0.3707065492652 * S_Recency  +     0.05681262835219 *
1164146   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -0.09105644521483 * S_Income + 0.01920168996111 * S_Kidhome +
0.00012212205827 * S_MntFishProducts + 0.00032664246198 * S_MntFruits + -0.02161363659377 *
S_MntGoldProds + -0.40917729724893 * S_MntMeatProducts + 0.01459978689352 * S_MntSweetProducts
+ 0.28732983017398 * S_MntWines + -0.26033282919423 * S_NumCatalogPurchases + -0.306688498482
* S_NumDealsPurchases + 0.4054643699817 * S_NumStorePurchases + 0.27747327375374 *
S_NumWebPurchases + -0.31325270852641 * S_NumWebVisitsMonth + 0.3707065492652 * S_Recency +
0.05681262835219 * S_Teenhome ;
1164147   +   H11  = H11  +     0.23904403737743 * AcceptedCmp10
1164148   +          +     0.12365860406863 * AcceptedCmp20  +     0.28547657706908 *
1164149   +        AcceptedCmp30  +     0.37587337003909 * AcceptedCmp40
1164150   +          +    -0.04113029526683 * AcceptedCmp50  +      0.2596440604013 *
1164151   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.23904403737743 * AcceptedCmp10 + 0.12365860406863 *
AcceptedCmp20 + 0.28547657706908 * AcceptedCmp30 + 0.37587337003909 * AcceptedCmp40 +
-0.04113029526683 * AcceptedCmp50 + 0.2596440604013 * Complain0 ;
1164152   +   H12  = H12  +     0.25336773034662 * AcceptedCmp10
1164153   +          +     0.39499004620022 * AcceptedCmp20  +     0.19852127214148 *
1164154   +        AcceptedCmp30  +     0.19215250383325 * AcceptedCmp40
1164155   +          +     0.27213364707939 * AcceptedCmp50  +    -0.00774901485124 *
1164156   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.25336773034662 * AcceptedCmp10 + 0.39499004620022 *
AcceptedCmp20 + 0.19852127214148 * AcceptedCmp30 + 0.19215250383325 * AcceptedCmp40 +
0.27213364707939 * AcceptedCmp50 + -0.00774901485124 * Complain0 ;
1164157   +   H11  = H11  +    -0.05263155952227 * Education2n_Cycle
1164158   +          +    -1.40124591386453 * EducationBasic  +     0.43501491332678 *
1164159   +        EducationGraduation  +     0.77305262508081 * EducationMaster
1164160   +          +    -0.43667846017683 * Marital_StatusDivorced
1164161   +          +     1.33507828005472 * Marital_StatusMarried
1164162   +          +    -0.75026283842664 * Marital_StatusSingle
1164163   +          +     0.84436594207558 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.05263155952227 * Education2n_Cycle + -1.40124591386453 *
EducationBasic + 0.43501491332678 * EducationGraduation + 0.77305262508081 * EducationMaster +
-0.43667846017683 * Marital_StatusDivorced + 1.33507828005472 * Marital_StatusMarried +
-0.75026283842664 * Marital_StatusSingle + 0.84436594207558 * Marital_StatusTogether ;
1164164   +   H12  = H12  +     0.08398432584098 * Education2n_Cycle
1164165   +          +     0.12375156883157 * EducationBasic  +     -0.0901891766073 *
1164166   +        EducationGraduation  +    -0.07691770257441 * EducationMaster
1164167   +          +    -0.03531690128173 * Marital_StatusDivorced
1164168   +          +    -0.04344171367809 * Marital_StatusMarried
1164169   +          +    -0.05137362653166 * Marital_StatusSingle
1164170   +          +    -0.01265518570667 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.08398432584098 * Education2n_Cycle + 0.12375156883157 *
EducationBasic + -0.0901891766073 * EducationGraduation + -0.07691770257441 * EducationMaster
+ -0.03531690128173 * Marital_StatusDivorced + -0.04344171367809 * Marital_StatusMarried +
-0.05137362653166 * Marital_StatusSingle + -0.01265518570667 * Marital_StatusTogether ;
1164171   +   H11  =     1.86846527977677 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 1.86846527977677 + H11 ;
1164172   +   H12  =    -0.42494263287735 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -0.42494263287735 + H12 ;
1164173   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1164174   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1164175   +END;
MPRINT(EM_DIAGRAM):   END;
1164176   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1164177   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1164178   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1164179   +END;
MPRINT(EM_DIAGRAM):   END;
1164180   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1164181   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1164182   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1164183   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1164184   +   P_DepVar1  =    -5.43090515434696 * H11  +    -9.08673127131886 * H12 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -5.43090515434696 * H11 + -9.08673127131886 * H12 ;
1164185   +   P_DepVar1  =      2.7752946076831 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 2.7752946076831 + P_DepVar1 ;
1164186   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1164187   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1164188   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1164189   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1164190   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1164191   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1164192   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1164193   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1164194   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1164195   +END;
MPRINT(EM_DIAGRAM):   END;
1164196   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1164197   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1164198   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1164199   +END;
MPRINT(EM_DIAGRAM):   END;
1164200   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1164201   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1164202   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1164203   +END;
MPRINT(EM_DIAGRAM):   END;
1164204   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1164205   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1164206   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1164207   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1164208   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1164209   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1164210   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1164211   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1164212   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1164213   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1164214   +END;
MPRINT(EM_DIAGRAM):   END;
1164215   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1164216   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1164217   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1164218   +drop
1164219   +H11
1164220   +H12
1164221   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 ;
1164222   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1164223    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1164224    quit;
1164225    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1164226    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1164227    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1164228    retain ID 2 Node "Neural31";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Neural31";
1164229    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1164230    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1464 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 1464 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1164231    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1164232    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1164233    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1464 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 1464 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1164234    proc sort data=EMWS8.Neural31_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Neural31_variableset out=_temp2(keep=NAME CREATOR);
1164235    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1164236    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set EMWS8.NEURAL31_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1164237    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1164238    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1164239    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1164240    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1164241    proc contents data=EMWS8.Neural31_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Neural31_train out=_meta(keep=NAME) noprint;
1164242    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
1164243    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1164244    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1164245    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1164246    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1164247    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1164248    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1164249    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 53 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1164250    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1164251    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1164251  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 786 rows and 5 columns.
 
1164252    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1164253    proc append base=EMWS8.Ensmbl9_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl9_FCMP data=_tempx;
1164254    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL9_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 786 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL9_FCMP has 786 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1164255    filename _pref
1164255  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
1164256    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1164257    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
1164258   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1164259   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1164260   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1164261   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1164262   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1164263   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1164264    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1164265    quit;
1164266    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1164267    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1164268    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1164269    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
1164270    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1164271    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1164272    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1164273    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1164274    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1164275    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
1164276    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1164277    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1164278    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1164279    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1164280    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1164281    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1164282    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
1164283    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
1164284    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1164285    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1164286    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1164287    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1164288    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1164289    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1164290    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1164291    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1164292    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1164292  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.
 
1164293    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1164294    proc append base=EMWS8.Ensmbl9_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl9_FCMP data=_tempx;
1164295    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL9_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL9_FCMP has 790 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1164296    filename _pref
1164296  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
1164297    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1164298    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
1164299   +
1164300   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1164301   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1164301  !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1164302   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1164303   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1164304   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1164305   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1164306   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1164307    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1164308    quit;
1164309    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1164310    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1164311    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1164312    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
1164313    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1164314    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1164315    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1164316    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1164317    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1164318    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
1164319    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1164320    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1164321    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1164322    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1164323    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1164324    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1164325    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
1164326    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1164327    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1164328    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1164329    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1164330    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1164331    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1164332    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1164333    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1164334    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1164335    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1164335  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.
 
1164336    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1164337    proc append base=EMWS8.Ensmbl9_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl9_FCMP data=_tempx;
1164338    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL9_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL9_FCMP has 829 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1164339    filename _pref
1164339  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
1164340    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1164341    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
1164342   +
1164343   +
1164344   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
1164345   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
1164346   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
1164347   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
1164348   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
1164349   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1164350   +
1164351   +
1164352   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
1164353   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
1164354   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
1164355   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
1164356   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
1164357   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1164358   +
1164359   +
1164360   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
1164361   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
1164362   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
1164363   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
1164364   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
1164365   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1164366   +
1164367   +
1164368   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
1164369   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
1164370   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
1164371   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
1164372   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
1164373   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1164374   +
1164375   +
1164376   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
1164377   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
1164378   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
1164379   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
1164380   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
1164381   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1164382   +
1164383   +
1164384   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
1164385   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
1164386   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
1164387   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
1164388   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
1164389   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1164390   +
1164391   +
1164392   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
1164393   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
1164394   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
1164395   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
1164396   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
1164397   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1164398   +
1164399   +
1164400   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
1164401   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
1164402   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
1164403   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
1164404   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
1164405   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1164406   +if
1164407   +_FILTERNORM1 not in ( '.')
1164408   + and
1164409   +_FILTERNORM2 not in ( '.')
1164410   + and
1164411   +_FILTERNORM3 not in ( '.')
1164412   + and
1164413   +_FILTERNORM4 not in ( '.')
1164414   + and
1164415   +_FILTERNORM5 not in ( '.')
1164416   + and
1164417   +_FILTERNORM6 not in ( '.')
1164418   + and
1164419   +_FILTERNORM7 not in ( ' ')
1164420   + and
1164421   +_FILTERNORM8 not in ( ' ')
1164422   +and
1164423   +( Dt_Customer ne .)
1164424   +and ( Income ne . and (Income<=107000))
1164425   +and ( Kidhome ne .)
1164426   +and ( MntFishProducts ne .)
1164427   +and ( MntFruits ne .)
1164428   +and ( MntGoldProds ne .)
1164429   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
1164430   +and ( MntSweetProducts ne .)
1164431   +and ( MntWines ne .)
1164432   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
1164433   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
1164434   +and ( NumStorePurchases ne .)
1164435   +and ( NumWebPurchases ne .)
1164436   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
1164437   +and ( Recency ne .)
1164438   +and ( Teenhome ne .)
1164439   +and ( Year_Birth ne .)
1164440   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and (
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and (
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and (
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and (
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne
.) and ( Year_Birth ne .) then do;
1164441   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
1164442   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
1164443   +end;
MPRINT(EM_DIAGRAM):   end;
1164444   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
1164445   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1164446    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1164447    quit;
1164448    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1164449    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1164450    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1164451    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
1164452    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1164453    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1164454    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1164455    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1164456    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1164457    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
1164458    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1164459    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1164460    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1164461    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1164462    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1164463    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1164464    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
1164465    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
1164466    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1164467    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1164468    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1164469    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1164470    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1164471    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1164472    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1164473    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1164474    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1164474  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.
 
1164475    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1164476    proc append base=EMWS8.Ensmbl9_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl9_FCMP data=_tempx;
1164477    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL9_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL9_FCMP has 895 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1164478    %macro varDept(fcmpdata=,id=);
1164479    %global nobs&id scoreFlag&id;
1164480    %let scoreFlag&id = 0;
1164481    %if &id=1 or ^&fcmpStart %then %do;
1164482    proc sort data=&fcmpdata out=_temp&id nodupkey;
1164483    by NAME;
1164484    where id=&id and LHS in( %let j=1;
1164485    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
1164486    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
1164487    "&var" %let j = %eval(&j+1);
1164488    %end;
1164489    );
1164490    run;
1164491    %let dsid = %sysfunc(open(_temp&id));
1164492    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1164493    %let dsid = %sysfunc(close(&dsid));
1164494    %if &&nobs&id %then %do;
1164495    %let scoreFlag&id = 1;
1164496    %let fcmpStart = 1;
1164497    %end;
1164498    %else %let fcmpStart = 0;
1164499    %end;
1164500    %else %do;
1164501    proc sort data=&fcmpdata out=_tempid;
1164502    where id=&id;
1164503    by LHS;
1164504    run;
1164505    %let dsid = %sysfunc(open(_tempid));
1164506    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1164507    %let dsid = %sysfunc(close(&dsid));
1164508    %if ^&&nobs&id %then %do;
1164509    proc datasets lib=work nolist;
1164510    delete _tempid;
1164511    run;
1164512    quit;
1164513    %end;
1164514    %else %do;
1164515    data _tempAll;
1164516    set %let j=%eval(&id-1);
1164517    %do x=1 %to &j;
1164518    %if &&nobs&x %then %do;
1164519    _temp&x %end;
1164520    %end;
1164521    ;
1164522    run;
1164523    proc sql;
1164524    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
1164524  ! work._tempid p2 where p.name=p2.lhs;
1164525    quit;
1164526    data _temp&id;
1164527    set _temp&id;
1164528    where LHS ne '' and NAME ne '' and Node ne '';
1164529    run;
1164530    proc datasets lib=work nolist;
1164531    delete _tempAll;
1164532    run;
1164533    %let dsid = %sysfunc(open(_temp&id));
1164534    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1164535    %let dsid = %sysfunc(close(&dsid));
1164536    %if ^&&nobs&id %then %do;
1164537    proc datasets lib=work nolist;
1164538    delete _temp&id;
1164539    run;
1164540    quit;
1164541    %end;
1164542    %else %do;
1164543    %let scoreFlag&id = 1;
1164544    data _temp&id;
1164545    set _temp&id;
1164546    where LHS ne NAME and node ne '';
1164547    run;
1164548    %let dsid = %sysfunc(open(_temp&id));
1164549    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1164550    %let dsid = %sysfunc(close(&dsid));
1164551    %if ^&&nobs&id %then %do;
1164552    proc datasets lib=work nolist;
1164553    delete _temp&id;
1164554    run;
1164555    quit;
1164556    %end;
1164557    %else %do;
1164558    proc sort data=_temp&id nodupkey;
1164559    by LHS NAME;
1164560    run;
1164561    %end;
1164562    %end;
1164563    %end;
1164564    %end;
1164565    %mend varDept;
1164566    %macro optCode(outdata=fcmpdata);
1164567    %global fcmpStart;
1164568    %let fcmpStart = 0;
1164569    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
1164570    %let NumNodes=9;
1164571    %do k=1 %to &NumNodes;
1164572    %vardept(fcmpdata=&outdata, id=&k);
1164573    %end;
1164574    %mend optCode;
1164575    %optcode(outData=EMWS8.Ensmbl9_FCMP);
MPRINT(EM_DIAGRAM):
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl9_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL9_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl9_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: There were 98 observations read from the data set EMWS8.ENSMBL9_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 73 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 25 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl9_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL9_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl9_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL9_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl9_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set EMWS8.ENSMBL9_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 25 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 25 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp5;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP5 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl9_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set EMWS8.ENSMBL9_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 25 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 25 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp6;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP6 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl9_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 66 observations read from the data set EMWS8.ENSMBL9_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 25 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 25 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl9_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL9_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl9_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL9_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;
 
1164576    filename _pref
1164576  ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural32\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Neural32\EMPUBLISHSCORE.sas";
1164577    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1164578    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Neural32\EMPUBLISHSCORE.sas.
1164579   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1164580   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1164581   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1164582   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1164583   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1164584   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1164585   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1164586   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1164587   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1164588   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1164589   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1164590   +LENGTH _WARN_ $4
1164591   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
1164592   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1164593   +
1164594   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1164595   +
1164596   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1164597   +
1164598   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1164599   +
1164600   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1164601   +
1164602   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1164603   +
1164604   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1164605   +
1164606   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1164607   +
1164608   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1164609   +
1164610   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1164611   +
1164612   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1164613   +
1164614   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1164615   +
1164616   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1164617   +
1164618   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1164619   +
1164620   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1164621   +
1164622   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1164623   +
1164624   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1164625   +
1164626   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1164627   +
1164628   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1164629   +
1164630   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1164631   +
1164632   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1164633   +
1164634   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1164635   +
1164636   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1164637   +
1164638   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1164639   +
1164640   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1164641   +
1164642   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1164643   +
1164644   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1164645   +
1164646   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1164647   +
1164648   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1164649   +
1164650   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1164651   +
1164652   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1164653   +
1164654   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1164655   +
1164656   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1164657   +
1164658   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1164659   +
1164660   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1164661   +
1164662   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1164663   +
1164664   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1164665   +
1164666   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1164667   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1164668   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1164669   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1164670   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1164671   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1164672   +end;
MPRINT(EM_DIAGRAM):   end;
1164673   +else do;
MPRINT(EM_DIAGRAM):   else do;
1164674   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1164675   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1164676   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1164677   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1164678   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1164679   +   end;
MPRINT(EM_DIAGRAM):   end;
1164680   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1164681   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1164682   +   end;
MPRINT(EM_DIAGRAM):   end;
1164683   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1164684   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1164685   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1164686   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1164687   +   end;
MPRINT(EM_DIAGRAM):   end;
1164688   +end;
MPRINT(EM_DIAGRAM):   end;
1164689   +
1164690   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1164691   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1164692   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1164693   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1164694   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1164695   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1164696   +end;
MPRINT(EM_DIAGRAM):   end;
1164697   +else do;
MPRINT(EM_DIAGRAM):   else do;
1164698   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1164699   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1164700   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1164701   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1164702   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1164703   +   end;
MPRINT(EM_DIAGRAM):   end;
1164704   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1164705   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1164706   +   end;
MPRINT(EM_DIAGRAM):   end;
1164707   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1164708   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1164709   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1164710   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1164711   +   end;
MPRINT(EM_DIAGRAM):   end;
1164712   +end;
MPRINT(EM_DIAGRAM):   end;
1164713   +
1164714   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1164715   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1164716   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1164717   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1164718   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1164719   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1164720   +end;
MPRINT(EM_DIAGRAM):   end;
1164721   +else do;
MPRINT(EM_DIAGRAM):   else do;
1164722   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1164723   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1164724   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1164725   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1164726   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1164727   +   end;
MPRINT(EM_DIAGRAM):   end;
1164728   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1164729   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1164730   +   end;
MPRINT(EM_DIAGRAM):   end;
1164731   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1164732   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1164733   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1164734   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1164735   +   end;
MPRINT(EM_DIAGRAM):   end;
1164736   +end;
MPRINT(EM_DIAGRAM):   end;
1164737   +
1164738   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1164739   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1164740   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1164741   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1164742   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1164743   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1164744   +end;
MPRINT(EM_DIAGRAM):   end;
1164745   +else do;
MPRINT(EM_DIAGRAM):   else do;
1164746   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1164747   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1164748   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1164749   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1164750   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1164751   +   end;
MPRINT(EM_DIAGRAM):   end;
1164752   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1164753   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1164754   +   end;
MPRINT(EM_DIAGRAM):   end;
1164755   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1164756   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1164757   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1164758   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1164759   +   end;
MPRINT(EM_DIAGRAM):   end;
1164760   +end;
MPRINT(EM_DIAGRAM):   end;
1164761   +
1164762   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1164763   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1164764   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1164765   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1164766   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1164767   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1164768   +end;
MPRINT(EM_DIAGRAM):   end;
1164769   +else do;
MPRINT(EM_DIAGRAM):   else do;
1164770   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1164771   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1164772   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1164773   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1164774   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1164775   +   end;
MPRINT(EM_DIAGRAM):   end;
1164776   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1164777   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1164778   +   end;
MPRINT(EM_DIAGRAM):   end;
1164779   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1164780   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1164781   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1164782   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1164783   +   end;
MPRINT(EM_DIAGRAM):   end;
1164784   +end;
MPRINT(EM_DIAGRAM):   end;
1164785   +
1164786   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1164787   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1164788   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1164789   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1164790   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1164791   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1164792   +end;
MPRINT(EM_DIAGRAM):   end;
1164793   +else do;
MPRINT(EM_DIAGRAM):   else do;
1164794   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1164795   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1164796   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1164797   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1164798   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1164799   +   end;
MPRINT(EM_DIAGRAM):   end;
1164800   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1164801   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1164802   +   end;
MPRINT(EM_DIAGRAM):   end;
1164803   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1164804   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1164805   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1164806   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1164807   +   end;
MPRINT(EM_DIAGRAM):   end;
1164808   +end;
MPRINT(EM_DIAGRAM):   end;
1164809   +
1164810   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1164811   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
1164812   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1164813   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1164814   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1164815   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1164816   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1164817   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1164818   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1164819   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1164820   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1164821   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1164822   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1164823   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1164824   +end;
MPRINT(EM_DIAGRAM):   end;
1164825   +else do;
MPRINT(EM_DIAGRAM):   else do;
1164826   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1164827   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1164828   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1164829   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1164830   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1164831   +   end;
MPRINT(EM_DIAGRAM):   end;
1164832   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1164833   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1164834   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1164835   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1164836   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1164837   +   end;
MPRINT(EM_DIAGRAM):   end;
1164838   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1164839   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1164840   +   end;
MPRINT(EM_DIAGRAM):   end;
1164841   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1164842   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1164843   +   end;
MPRINT(EM_DIAGRAM):   end;
1164844   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1164845   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1164846   +   end;
MPRINT(EM_DIAGRAM):   end;
1164847   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1164848   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1164849   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1164850   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1164851   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1164852   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1164853   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1164854   +   end;
MPRINT(EM_DIAGRAM):   end;
1164855   +end;
MPRINT(EM_DIAGRAM):   end;
1164856   +
1164857   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1164858   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1164859   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
1164860   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1164861   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1164862   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1164863   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1164864   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1164865   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1164866   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1164867   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1164868   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1164869   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1164870   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1164871   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1164872   +end;
MPRINT(EM_DIAGRAM):   end;
1164873   +else do;
MPRINT(EM_DIAGRAM):   else do;
1164874   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1164875   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1164876   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1164877   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1164878   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1164879   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1164880   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1164881   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1164882   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1164883   +         end;
MPRINT(EM_DIAGRAM):   end;
1164884   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1164885   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1164886   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1164887   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1164888   +            end;
MPRINT(EM_DIAGRAM):   end;
1164889   +         end;
MPRINT(EM_DIAGRAM):   end;
1164890   +      end;
MPRINT(EM_DIAGRAM):   end;
1164891   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1164892   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1164893   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1164894   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1164895   +         end;
MPRINT(EM_DIAGRAM):   end;
1164896   +      end;
MPRINT(EM_DIAGRAM):   end;
1164897   +   end;
MPRINT(EM_DIAGRAM):   end;
1164898   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1164899   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1164900   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1164901   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1164902   +      end;
MPRINT(EM_DIAGRAM):   end;
1164903   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1164904   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1164905   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1164906   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1164907   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1164908   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1164909   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1164910   +         end;
MPRINT(EM_DIAGRAM):   end;
1164911   +      end;
MPRINT(EM_DIAGRAM):   end;
1164912   +   end;
MPRINT(EM_DIAGRAM):   end;
1164913   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1164914   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1164915   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1164916   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1164917   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1164918   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1164919   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1164920   +   end;
MPRINT(EM_DIAGRAM):   end;
1164921   +end;
MPRINT(EM_DIAGRAM):   end;
1164922   +
1164923   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1164924   +*** Checking missing input Interval
1164925   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1164926   +
1164927   +IF NMISS(
1164928   +   Income ,
1164929   +   Kidhome ,
1164930   +   MntFishProducts ,
1164931   +   MntFruits ,
1164932   +   MntGoldProds ,
1164933   +   MntMeatProducts ,
1164934   +   MntSweetProducts ,
1164935   +   MntWines ,
1164936   +   NumCatalogPurchases ,
1164937   +   NumDealsPurchases ,
1164938   +   NumStorePurchases ,
1164939   +   NumWebPurchases ,
1164940   +   NumWebVisitsMonth ,
1164941   +   Recency ,
1164942   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Income , Kidhome , MntFishProducts , MntFruits , MntGoldProds
, MntMeatProducts , MntSweetProducts , MntWines , NumCatalogPurchases , NumDealsPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , Recency , Teenhome ) THEN DO;
1164943   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1164944   +
1164945   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1164946   +END;
MPRINT(EM_DIAGRAM):   END;
1164947   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1164948   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1164949   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1164950   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1164951   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1164952   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1164953   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1164954   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1164955   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1164956   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1164957   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1164958   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1164959   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1164960   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1164961   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1164962   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1164963   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1164964   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1164965   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1164966   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1164967   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1164968   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1164969   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1164970   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1164971   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1164972   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1164973   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1164974   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1164975   +END;
MPRINT(EM_DIAGRAM):   END;
1164976   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1164977   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1164978   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1164979   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1164980   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1164981   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1164982   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1164983   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1164984   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1164985   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1164986   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1164987   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1164988   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1164989   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
1164990   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1164991   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1164992   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1164993   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1164994   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1164995   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1164996   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1164997   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1164998   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1164999   +   ELSE S_NumCatalogPurchases
1165000   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1165001   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1165002   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1165003   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1165004   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1165005   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1165006   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1165007   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1165008   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1165009   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1165010   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1165011   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1165012   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1165013   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1165014   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1165015   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1165016   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1165017   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1165018   +END;
MPRINT(EM_DIAGRAM):   END;
1165019   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1165020   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1165021   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1165022   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1165023   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1165024   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1165025   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1165026   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1165027   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1165028   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1165029   +   H11  =     1.40261108800308 * S_Income  +     -0.8062097507842 * S_Kidhome
1165030   +          +    -0.12974862644982 * S_MntFishProducts
1165031   +          +     0.08065642800368 * S_MntFruits  +    -0.12102130003972 *
1165032   +        S_MntGoldProds  +     0.19226249622126 * S_MntMeatProducts
1165033   +          +    -0.12290326901613 * S_MntSweetProducts
1165034   +          +     0.07790241176978 * S_MntWines  +     0.36123042724896 *
1165035   +        S_NumCatalogPurchases  +    -0.01034406765754 * S_NumDealsPurchases
1165036   +          +     0.09738032540137 * S_NumStorePurchases
1165037   +          +     0.44459515215205 * S_NumWebPurchases
1165038   +          +      0.8471075994578 * S_NumWebVisitsMonth
1165039   +          +    -1.10667985160899 * S_Recency  +    -0.88509832868515 *
1165040   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 1.40261108800308 * S_Income + -0.8062097507842 * S_Kidhome +
-0.12974862644982 * S_MntFishProducts + 0.08065642800368 * S_MntFruits + -0.12102130003972 *
S_MntGoldProds + 0.19226249622126 * S_MntMeatProducts + -0.12290326901613 * S_MntSweetProducts
+ 0.07790241176978 * S_MntWines + 0.36123042724896 * S_NumCatalogPurchases + -0.01034406765754
* S_NumDealsPurchases + 0.09738032540137 * S_NumStorePurchases + 0.44459515215205 *
S_NumWebPurchases + 0.8471075994578 * S_NumWebVisitsMonth + -1.10667985160899 * S_Recency +
-0.88509832868515 * S_Teenhome ;
1165041   +   H12  =     0.51266936686642 * S_Income  +     0.26909433357851 * S_Kidhome
1165042   +          +     0.02406077596811 * S_MntFishProducts
1165043   +          +    -0.57443793453522 * S_MntFruits  +     0.36824731232149 *
1165044   +        S_MntGoldProds  +     0.40177289143061 * S_MntMeatProducts
1165045   +          +     -0.1147507059349 * S_MntSweetProducts
1165046   +          +    -0.66379351187459 * S_MntWines  +     1.33407347415468 *
1165047   +        S_NumCatalogPurchases  +     1.00633891197299 * S_NumDealsPurchases
1165048   +          +    -0.23920969262322 * S_NumStorePurchases
1165049   +          +     -0.6008837862932 * S_NumWebPurchases
1165050   +          +     0.26759743722885 * S_NumWebVisitsMonth
1165051   +          +    -0.42755419464125 * S_Recency  +    -0.14471776361394 *
1165052   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = 0.51266936686642 * S_Income + 0.26909433357851 * S_Kidhome +
0.02406077596811 * S_MntFishProducts + -0.57443793453522 * S_MntFruits + 0.36824731232149 *
S_MntGoldProds + 0.40177289143061 * S_MntMeatProducts + -0.1147507059349 * S_MntSweetProducts
+ -0.66379351187459 * S_MntWines + 1.33407347415468 * S_NumCatalogPurchases + 1.00633891197299
* S_NumDealsPurchases + -0.23920969262322 * S_NumStorePurchases + -0.6008837862932 *
S_NumWebPurchases + 0.26759743722885 * S_NumWebVisitsMonth + -0.42755419464125 * S_Recency +
-0.14471776361394 * S_Teenhome ;
1165053   +   H13  =    -0.19807308698832 * S_Income  +     0.25934675474849 * S_Kidhome
1165054   +          +     0.04398331533724 * S_MntFishProducts
1165055   +          +    -0.00090357598988 * S_MntFruits  +     0.05139545341773 *
1165056   +        S_MntGoldProds  +    -0.74617114336019 * S_MntMeatProducts
1165057   +          +     0.00552488718744 * S_MntSweetProducts
1165058   +          +     0.47194407197012 * S_MntWines  +    -0.35149551848487 *
1165059   +        S_NumCatalogPurchases  +    -0.30232522133093 * S_NumDealsPurchases
1165060   +          +     0.60058189155105 * S_NumStorePurchases
1165061   +          +     0.51423374855856 * S_NumWebPurchases
1165062   +          +     -0.9075304423321 * S_NumWebVisitsMonth
1165063   +          +     0.83597739226791 * S_Recency  +     0.15783202762709 *
1165064   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = -0.19807308698832 * S_Income + 0.25934675474849 * S_Kidhome +
0.04398331533724 * S_MntFishProducts + -0.00090357598988 * S_MntFruits + 0.05139545341773 *
S_MntGoldProds + -0.74617114336019 * S_MntMeatProducts + 0.00552488718744 * S_MntSweetProducts
+ 0.47194407197012 * S_MntWines + -0.35149551848487 * S_NumCatalogPurchases +
-0.30232522133093 * S_NumDealsPurchases + 0.60058189155105 * S_NumStorePurchases +
0.51423374855856 * S_NumWebPurchases + -0.9075304423321 * S_NumWebVisitsMonth +
0.83597739226791 * S_Recency + 0.15783202762709 * S_Teenhome ;
1165065   +   H11  = H11  +    -0.26274045665457 * AcceptedCmp10
1165066   +          +    -0.86105702939371 * AcceptedCmp20  +    -0.50476270558977 *
1165067   +        AcceptedCmp30  +    -0.84284126473343 * AcceptedCmp40
1165068   +          +     0.19764907691314 * AcceptedCmp50  +    -0.29305577412263 *
1165069   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.26274045665457 * AcceptedCmp10 + -0.86105702939371 *
AcceptedCmp20 + -0.50476270558977 * AcceptedCmp30 + -0.84284126473343 * AcceptedCmp40 +
0.19764907691314 * AcceptedCmp50 + -0.29305577412263 * Complain0 ;
1165070   +   H12  = H12  +    -0.27394139847883 * AcceptedCmp10
1165071   +          +    -0.14688750266104 * AcceptedCmp20  +    -0.27982299242327 *
1165072   +        AcceptedCmp30  +    -0.10465140408787 * AcceptedCmp40
1165073   +          +    -0.81681330244218 * AcceptedCmp50  +    -0.28152730217644 *
1165074   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.27394139847883 * AcceptedCmp10 + -0.14688750266104 *
AcceptedCmp20 + -0.27982299242327 * AcceptedCmp30 + -0.10465140408787 * AcceptedCmp40 +
-0.81681330244218 * AcceptedCmp50 + -0.28152730217644 * Complain0 ;
1165075   +   H13  = H13  +     0.42310780831005 * AcceptedCmp10
1165076   +          +     0.41337614261155 * AcceptedCmp20  +     0.41436520641821 *
1165077   +        AcceptedCmp30  +     0.08914989208239 * AcceptedCmp40
1165078   +          +     0.54013759697695 * AcceptedCmp50  +    -0.19478210268955 *
1165079   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.42310780831005 * AcceptedCmp10 + 0.41337614261155 *
AcceptedCmp20 + 0.41436520641821 * AcceptedCmp30 + 0.08914989208239 * AcceptedCmp40 +
0.54013759697695 * AcceptedCmp50 + -0.19478210268955 * Complain0 ;
1165080   +   H11  = H11  +     0.40331200702699 * Education2n_Cycle
1165081   +          +     0.17202421641945 * EducationBasic  +    -0.29654161092174 *
1165082   +        EducationGraduation  +     -0.4835104183635 * EducationMaster
1165083   +          +     0.52129580188513 * Marital_StatusDivorced
1165084   +          +     -1.5224490339553 * Marital_StatusMarried
1165085   +          +     1.05062906057771 * Marital_StatusSingle
1165086   +          +    -1.16420887937635 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.40331200702699 * Education2n_Cycle + 0.17202421641945 *
EducationBasic + -0.29654161092174 * EducationGraduation + -0.4835104183635 * EducationMaster
+ 0.52129580188513 * Marital_StatusDivorced + -1.5224490339553 * Marital_StatusMarried +
1.05062906057771 * Marital_StatusSingle + -1.16420887937635 * Marital_StatusTogether ;
1165087   +   H12  = H12  +     -0.3488928858263 * Education2n_Cycle
1165088   +          +     0.38279680594423 * EducationBasic  +     0.20376044836519 *
1165089   +        EducationGraduation  +     0.20697694670185 * EducationMaster
1165090   +          +    -0.14428158063317 * Marital_StatusDivorced
1165091   +          +     0.22396926143356 * Marital_StatusMarried
1165092   +          +    -0.12980854818876 * Marital_StatusSingle
1165093   +          +     0.32607015627906 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.3488928858263 * Education2n_Cycle + 0.38279680594423 *
EducationBasic + 0.20376044836519 * EducationGraduation + 0.20697694670185 * EducationMaster +
-0.14428158063317 * Marital_StatusDivorced + 0.22396926143356 * Marital_StatusMarried +
-0.12980854818876 * Marital_StatusSingle + 0.32607015627906 * Marital_StatusTogether ;
1165094   +   H13  = H13  +    -0.18351418824199 * Education2n_Cycle
1165095   +          +     0.53417952447263 * EducationBasic  +    -0.14333929289628 *
1165096   +        EducationGraduation  +     0.04513004774082 * EducationMaster
1165097   +          +    -0.25615797303064 * Marital_StatusDivorced
1165098   +          +     0.18825506199046 * Marital_StatusMarried
1165099   +          +    -0.24607556819871 * Marital_StatusSingle
1165100   +          +     0.29531673844201 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.18351418824199 * Education2n_Cycle + 0.53417952447263 *
EducationBasic + -0.14333929289628 * EducationGraduation + 0.04513004774082 * EducationMaster
+ -0.25615797303064 * Marital_StatusDivorced + 0.18825506199046 * Marital_StatusMarried +
-0.24607556819871 * Marital_StatusSingle + 0.29531673844201 * Marital_StatusTogether ;
1165101   +   H11  =    -1.29289362679377 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -1.29289362679377 + H11 ;
1165102   +   H12  =     0.88724419151235 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.88724419151235 + H12 ;
1165103   +   H13  =    -0.51194544699467 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.51194544699467 + H13 ;
1165104   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1165105   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1165106   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1165107   +END;
MPRINT(EM_DIAGRAM):   END;
1165108   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1165109   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1165110   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1165111   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1165112   +END;
MPRINT(EM_DIAGRAM):   END;
1165113   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1165114   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1165115   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1165116   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1165117   +   P_DepVar1  =     4.44251020865882 * H11  +     2.67139161773156 * H12
1165118   +          +    -4.73549395111184 * H13 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 4.44251020865882 * H11 + 2.67139161773156 * H12 +
-4.73549395111184 * H13 ;
1165119   +   P_DepVar1  =     0.45492690116644 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.45492690116644 + P_DepVar1 ;
1165120   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1165121   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1165122   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1165123   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1165124   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1165125   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1165126   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1165127   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1165128   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1165129   +END;
MPRINT(EM_DIAGRAM):   END;
1165130   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1165131   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1165132   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1165133   +END;
MPRINT(EM_DIAGRAM):   END;
1165134   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1165135   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1165136   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1165137   +END;
MPRINT(EM_DIAGRAM):   END;
1165138   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1165139   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1165140   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1165141   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1165142   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1165143   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1165144   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1165145   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1165146   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1165147   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1165148   +END;
MPRINT(EM_DIAGRAM):   END;
1165149   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1165150   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1165151   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1165152   +drop
1165153   +H11
1165154   +H12
1165155   +H13
1165156   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 ;
1165157   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1165158    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1165159    quit;
1165160    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1165161    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1165162    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1165163    retain ID 2 Node "Neural32";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Neural32";
1165164    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1165165    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1602 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 1602 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1165166    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1165167    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1165168    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1602 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 1602 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1165169    proc sort data=EMWS8.Neural32_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Neural32_variableset out=_temp2(keep=NAME CREATOR);
1165170    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1165171    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set EMWS8.NEURAL32_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1165172    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1165173    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1165174    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1165175    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1165176    proc contents data=EMWS8.Neural32_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Neural32_train out=_meta(keep=NAME) noprint;
1165177    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
1165178    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1165179    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1165180    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1165181    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1165182    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1165183    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1165184    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 53 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1165185    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1165186    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1165186  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 832 rows and 5 columns.
 
1165187    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1165188    proc append base=EMWS8.Ensmbl9_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl9_FCMP data=_tempx;
1165189    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL9_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 832 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL9_FCMP has 832 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1165190    filename _pref
1165190  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
1165191    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1165192    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
1165193   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1165194   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1165195   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1165196   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1165197   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1165198   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1165199    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1165200    quit;
1165201    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1165202    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1165203    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1165204    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
1165205    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1165206    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1165207    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1165208    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1165209    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1165210    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
1165211    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1165212    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1165213    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1165214    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1165215    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1165216    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1165217    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
1165218    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
1165219    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1165220    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1165221    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1165222    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1165223    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1165224    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1165225    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1165226    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1165227    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1165227  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.
 
1165228    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1165229    proc append base=EMWS8.Ensmbl9_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl9_FCMP data=_tempx;
1165230    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL9_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL9_FCMP has 836 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1165231    filename _pref
1165231  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
1165232    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1165233    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
1165234   +
1165235   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1165236   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1165236  !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1165237   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1165238   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1165239   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1165240   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1165241   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1165242    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1165243    quit;
1165244    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1165245    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1165246    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1165247    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
1165248    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1165249    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1165250    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1165251    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1165252    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1165253    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
1165254    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1165255    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1165256    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1165257    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1165258    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1165259    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1165260    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
1165261    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1165262    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1165263    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1165264    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1165265    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1165266    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1165267    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1165268    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1165269    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1165270    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1165270  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.
 
1165271    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1165272    proc append base=EMWS8.Ensmbl9_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl9_FCMP data=_tempx;
1165273    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL9_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL9_FCMP has 875 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1165274    filename _pref
1165274  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
1165275    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1165276    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
1165277   +
1165278   +
1165279   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
1165280   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
1165281   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
1165282   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
1165283   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
1165284   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1165285   +
1165286   +
1165287   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
1165288   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
1165289   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
1165290   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
1165291   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
1165292   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1165293   +
1165294   +
1165295   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
1165296   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
1165297   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
1165298   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
1165299   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
1165300   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1165301   +
1165302   +
1165303   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
1165304   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
1165305   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
1165306   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
1165307   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
1165308   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1165309   +
1165310   +
1165311   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
1165312   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
1165313   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
1165314   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
1165315   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
1165316   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1165317   +
1165318   +
1165319   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
1165320   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
1165321   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
1165322   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
1165323   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
1165324   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1165325   +
1165326   +
1165327   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
1165328   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
1165329   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
1165330   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
1165331   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
1165332   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1165333   +
1165334   +
1165335   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
1165336   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
1165337   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
1165338   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
1165339   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
1165340   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1165341   +if
1165342   +_FILTERNORM1 not in ( '.')
1165343   + and
1165344   +_FILTERNORM2 not in ( '.')
1165345   + and
1165346   +_FILTERNORM3 not in ( '.')
1165347   + and
1165348   +_FILTERNORM4 not in ( '.')
1165349   + and
1165350   +_FILTERNORM5 not in ( '.')
1165351   + and
1165352   +_FILTERNORM6 not in ( '.')
1165353   + and
1165354   +_FILTERNORM7 not in ( ' ')
1165355   + and
1165356   +_FILTERNORM8 not in ( ' ')
1165357   +and
1165358   +( Dt_Customer ne .)
1165359   +and ( Income ne . and (Income<=107000))
1165360   +and ( Kidhome ne .)
1165361   +and ( MntFishProducts ne .)
1165362   +and ( MntFruits ne .)
1165363   +and ( MntGoldProds ne .)
1165364   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
1165365   +and ( MntSweetProducts ne .)
1165366   +and ( MntWines ne .)
1165367   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
1165368   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
1165369   +and ( NumStorePurchases ne .)
1165370   +and ( NumWebPurchases ne .)
1165371   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
1165372   +and ( Recency ne .)
1165373   +and ( Teenhome ne .)
1165374   +and ( Year_Birth ne .)
1165375   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and (
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and (
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and (
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and (
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne
.) and ( Year_Birth ne .) then do;
1165376   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
1165377   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
1165378   +end;
MPRINT(EM_DIAGRAM):   end;
1165379   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
1165380   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1165381    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1165382    quit;
1165383    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1165384    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1165385    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1165386    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
1165387    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1165388    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1165389    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1165390    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1165391    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1165392    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
1165393    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1165394    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1165395    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1165396    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1165397    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1165398    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1165399    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
1165400    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
1165401    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1165402    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1165403    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1165404    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1165405    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1165406    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1165407    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1165408    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1165409    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1165409  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.
 
1165410    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1165411    proc append base=EMWS8.Ensmbl9_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl9_FCMP data=_tempx;
1165412    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL9_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL9_FCMP has 941 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1165413    %macro varDept(fcmpdata=,id=);
1165414    %global nobs&id scoreFlag&id;
1165415    %let scoreFlag&id = 0;
1165416    %if &id=1 or ^&fcmpStart %then %do;
1165417    proc sort data=&fcmpdata out=_temp&id nodupkey;
1165418    by NAME;
1165419    where id=&id and LHS in( %let j=1;
1165420    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
1165421    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
1165422    "&var" %let j = %eval(&j+1);
1165423    %end;
1165424    );
1165425    run;
1165426    %let dsid = %sysfunc(open(_temp&id));
1165427    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1165428    %let dsid = %sysfunc(close(&dsid));
1165429    %if &&nobs&id %then %do;
1165430    %let scoreFlag&id = 1;
1165431    %let fcmpStart = 1;
1165432    %end;
1165433    %else %let fcmpStart = 0;
1165434    %end;
1165435    %else %do;
1165436    proc sort data=&fcmpdata out=_tempid;
1165437    where id=&id;
1165438    by LHS;
1165439    run;
1165440    %let dsid = %sysfunc(open(_tempid));
1165441    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1165442    %let dsid = %sysfunc(close(&dsid));
1165443    %if ^&&nobs&id %then %do;
1165444    proc datasets lib=work nolist;
1165445    delete _tempid;
1165446    run;
1165447    quit;
1165448    %end;
1165449    %else %do;
1165450    data _tempAll;
1165451    set %let j=%eval(&id-1);
1165452    %do x=1 %to &j;
1165453    %if &&nobs&x %then %do;
1165454    _temp&x %end;
1165455    %end;
1165456    ;
1165457    run;
1165458    proc sql;
1165459    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
1165459  ! work._tempid p2 where p.name=p2.lhs;
1165460    quit;
1165461    data _temp&id;
1165462    set _temp&id;
1165463    where LHS ne '' and NAME ne '' and Node ne '';
1165464    run;
1165465    proc datasets lib=work nolist;
1165466    delete _tempAll;
1165467    run;
1165468    %let dsid = %sysfunc(open(_temp&id));
1165469    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1165470    %let dsid = %sysfunc(close(&dsid));
1165471    %if ^&&nobs&id %then %do;
1165472    proc datasets lib=work nolist;
1165473    delete _temp&id;
1165474    run;
1165475    quit;
1165476    %end;
1165477    %else %do;
1165478    %let scoreFlag&id = 1;
1165479    data _temp&id;
1165480    set _temp&id;
1165481    where LHS ne NAME and node ne '';
1165482    run;
1165483    %let dsid = %sysfunc(open(_temp&id));
1165484    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1165485    %let dsid = %sysfunc(close(&dsid));
1165486    %if ^&&nobs&id %then %do;
1165487    proc datasets lib=work nolist;
1165488    delete _temp&id;
1165489    run;
1165490    quit;
1165491    %end;
1165492    %else %do;
1165493    proc sort data=_temp&id nodupkey;
1165494    by LHS NAME;
1165495    run;
1165496    %end;
1165497    %end;
1165498    %end;
1165499    %end;
1165500    %mend varDept;
1165501    %macro optCode(outdata=fcmpdata);
1165502    %global fcmpStart;
1165503    %let fcmpStart = 0;
1165504    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
1165505    %let NumNodes=9;
1165506    %do k=1 %to &NumNodes;
1165507    %vardept(fcmpdata=&outdata, id=&k);
1165508    %end;
1165509    %mend optCode;
1165510    %optcode(outData=EMWS8.Ensmbl9_FCMP);
MPRINT(EM_DIAGRAM):
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl9_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL9_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl9_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: There were 98 observations read from the data set EMWS8.ENSMBL9_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 73 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 25 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl9_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL9_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl9_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL9_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl9_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set EMWS8.ENSMBL9_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 25 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 25 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp5;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP5 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl9_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set EMWS8.ENSMBL9_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 25 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 25 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp6;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP6 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl9_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 66 observations read from the data set EMWS8.ENSMBL9_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 25 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 25 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl9_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL9_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl9_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL9_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;
 
1165511    filename _pref
1165511  ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural34\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Neural34\EMPUBLISHSCORE.sas";
1165512    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1165513    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Neural34\EMPUBLISHSCORE.sas.
1165514   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1165515   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1165516   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1165517   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1165518   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1165519   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1165520   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1165521   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1165522   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1165523   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1165524   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1165525   +LENGTH _WARN_ $4
1165526   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
1165527   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1165528   +
1165529   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1165530   +
1165531   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1165532   +
1165533   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1165534   +
1165535   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1165536   +
1165537   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1165538   +
1165539   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1165540   +
1165541   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1165542   +
1165543   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1165544   +
1165545   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1165546   +
1165547   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1165548   +
1165549   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1165550   +
1165551   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1165552   +
1165553   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1165554   +
1165555   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1165556   +
1165557   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1165558   +
1165559   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1165560   +
1165561   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1165562   +
1165563   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1165564   +
1165565   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1165566   +
1165567   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1165568   +
1165569   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1165570   +
1165571   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1165572   +
1165573   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1165574   +
1165575   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1165576   +
1165577   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1165578   +
1165579   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1165580   +
1165581   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1165582   +
1165583   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1165584   +
1165585   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1165586   +
1165587   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1165588   +
1165589   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1165590   +
1165591   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1165592   +
1165593   +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
1165594   +
1165595   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1165596   +
1165597   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1165598   +
1165599   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1165600   +
1165601   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1165602   +
1165603   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1165604   +
1165605   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1165606   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1165607   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1165608   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1165609   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1165610   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1165611   +end;
MPRINT(EM_DIAGRAM):   end;
1165612   +else do;
MPRINT(EM_DIAGRAM):   else do;
1165613   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1165614   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1165615   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1165616   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1165617   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1165618   +   end;
MPRINT(EM_DIAGRAM):   end;
1165619   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1165620   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1165621   +   end;
MPRINT(EM_DIAGRAM):   end;
1165622   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1165623   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1165624   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1165625   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1165626   +   end;
MPRINT(EM_DIAGRAM):   end;
1165627   +end;
MPRINT(EM_DIAGRAM):   end;
1165628   +
1165629   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1165630   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1165631   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1165632   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1165633   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1165634   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1165635   +end;
MPRINT(EM_DIAGRAM):   end;
1165636   +else do;
MPRINT(EM_DIAGRAM):   else do;
1165637   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1165638   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1165639   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1165640   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1165641   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1165642   +   end;
MPRINT(EM_DIAGRAM):   end;
1165643   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1165644   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1165645   +   end;
MPRINT(EM_DIAGRAM):   end;
1165646   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1165647   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1165648   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1165649   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1165650   +   end;
MPRINT(EM_DIAGRAM):   end;
1165651   +end;
MPRINT(EM_DIAGRAM):   end;
1165652   +
1165653   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1165654   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1165655   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1165656   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1165657   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1165658   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1165659   +end;
MPRINT(EM_DIAGRAM):   end;
1165660   +else do;
MPRINT(EM_DIAGRAM):   else do;
1165661   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1165662   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1165663   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1165664   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1165665   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1165666   +   end;
MPRINT(EM_DIAGRAM):   end;
1165667   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1165668   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1165669   +   end;
MPRINT(EM_DIAGRAM):   end;
1165670   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1165671   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1165672   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1165673   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1165674   +   end;
MPRINT(EM_DIAGRAM):   end;
1165675   +end;
MPRINT(EM_DIAGRAM):   end;
1165676   +
1165677   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1165678   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1165679   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1165680   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1165681   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1165682   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1165683   +end;
MPRINT(EM_DIAGRAM):   end;
1165684   +else do;
MPRINT(EM_DIAGRAM):   else do;
1165685   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1165686   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1165687   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1165688   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1165689   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1165690   +   end;
MPRINT(EM_DIAGRAM):   end;
1165691   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1165692   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1165693   +   end;
MPRINT(EM_DIAGRAM):   end;
1165694   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1165695   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1165696   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1165697   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1165698   +   end;
MPRINT(EM_DIAGRAM):   end;
1165699   +end;
MPRINT(EM_DIAGRAM):   end;
1165700   +
1165701   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1165702   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1165703   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1165704   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1165705   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1165706   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1165707   +end;
MPRINT(EM_DIAGRAM):   end;
1165708   +else do;
MPRINT(EM_DIAGRAM):   else do;
1165709   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1165710   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1165711   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1165712   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1165713   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1165714   +   end;
MPRINT(EM_DIAGRAM):   end;
1165715   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1165716   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1165717   +   end;
MPRINT(EM_DIAGRAM):   end;
1165718   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1165719   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1165720   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1165721   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1165722   +   end;
MPRINT(EM_DIAGRAM):   end;
1165723   +end;
MPRINT(EM_DIAGRAM):   end;
1165724   +
1165725   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1165726   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1165727   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1165728   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1165729   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1165730   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1165731   +end;
MPRINT(EM_DIAGRAM):   end;
1165732   +else do;
MPRINT(EM_DIAGRAM):   else do;
1165733   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1165734   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1165735   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1165736   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1165737   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1165738   +   end;
MPRINT(EM_DIAGRAM):   end;
1165739   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1165740   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1165741   +   end;
MPRINT(EM_DIAGRAM):   end;
1165742   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1165743   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1165744   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1165745   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1165746   +   end;
MPRINT(EM_DIAGRAM):   end;
1165747   +end;
MPRINT(EM_DIAGRAM):   end;
1165748   +
1165749   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1165750   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
1165751   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1165752   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1165753   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1165754   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1165755   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1165756   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1165757   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1165758   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1165759   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1165760   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1165761   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1165762   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1165763   +end;
MPRINT(EM_DIAGRAM):   end;
1165764   +else do;
MPRINT(EM_DIAGRAM):   else do;
1165765   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1165766   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1165767   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1165768   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1165769   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1165770   +   end;
MPRINT(EM_DIAGRAM):   end;
1165771   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1165772   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1165773   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1165774   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1165775   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1165776   +   end;
MPRINT(EM_DIAGRAM):   end;
1165777   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1165778   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1165779   +   end;
MPRINT(EM_DIAGRAM):   end;
1165780   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1165781   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1165782   +   end;
MPRINT(EM_DIAGRAM):   end;
1165783   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1165784   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1165785   +   end;
MPRINT(EM_DIAGRAM):   end;
1165786   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1165787   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1165788   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1165789   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1165790   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1165791   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1165792   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1165793   +   end;
MPRINT(EM_DIAGRAM):   end;
1165794   +end;
MPRINT(EM_DIAGRAM):   end;
1165795   +
1165796   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1165797   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1165798   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
1165799   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1165800   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1165801   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1165802   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1165803   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1165804   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1165805   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1165806   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1165807   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1165808   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1165809   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1165810   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1165811   +end;
MPRINT(EM_DIAGRAM):   end;
1165812   +else do;
MPRINT(EM_DIAGRAM):   else do;
1165813   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1165814   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1165815   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1165816   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1165817   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1165818   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1165819   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1165820   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1165821   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1165822   +         end;
MPRINT(EM_DIAGRAM):   end;
1165823   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1165824   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1165825   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1165826   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1165827   +            end;
MPRINT(EM_DIAGRAM):   end;
1165828   +         end;
MPRINT(EM_DIAGRAM):   end;
1165829   +      end;
MPRINT(EM_DIAGRAM):   end;
1165830   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1165831   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1165832   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1165833   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1165834   +         end;
MPRINT(EM_DIAGRAM):   end;
1165835   +      end;
MPRINT(EM_DIAGRAM):   end;
1165836   +   end;
MPRINT(EM_DIAGRAM):   end;
1165837   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1165838   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1165839   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1165840   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1165841   +      end;
MPRINT(EM_DIAGRAM):   end;
1165842   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1165843   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1165844   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1165845   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1165846   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1165847   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1165848   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1165849   +         end;
MPRINT(EM_DIAGRAM):   end;
1165850   +      end;
MPRINT(EM_DIAGRAM):   end;
1165851   +   end;
MPRINT(EM_DIAGRAM):   end;
1165852   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1165853   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1165854   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1165855   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1165856   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1165857   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1165858   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1165859   +   end;
MPRINT(EM_DIAGRAM):   end;
1165860   +end;
MPRINT(EM_DIAGRAM):   end;
1165861   +
1165862   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1165863   +*** Checking missing input Interval
1165864   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1165865   +
1165866   +IF NMISS(
1165867   +   Income ,
1165868   +   Kidhome ,
1165869   +   MntFishProducts ,
1165870   +   MntFruits ,
1165871   +   MntGoldProds ,
1165872   +   MntMeatProducts ,
1165873   +   MntSweetProducts ,
1165874   +   MntWines ,
1165875   +   NumCatalogPurchases ,
1165876   +   NumDealsPurchases ,
1165877   +   NumStorePurchases ,
1165878   +   NumWebPurchases ,
1165879   +   NumWebVisitsMonth ,
1165880   +   Recency ,
1165881   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Income , Kidhome , MntFishProducts , MntFruits , MntGoldProds
, MntMeatProducts , MntSweetProducts , MntWines , NumCatalogPurchases , NumDealsPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , Recency , Teenhome ) THEN DO;
1165882   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1165883   +
1165884   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1165885   +END;
MPRINT(EM_DIAGRAM):   END;
1165886   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1165887   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1165888   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1165889   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1165890   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1165891   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1165892   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1165893   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1165894   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1165895   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1165896   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1165897   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1165898   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1165899   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1165900   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1165901   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1165902   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1165903   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1165904   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1165905   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1165906   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1165907   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1165908   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1165909   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1165910   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1165911   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1165912   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1165913   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1165914   +END;
MPRINT(EM_DIAGRAM):   END;
1165915   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1165916   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1165917   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1165918   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1165919   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1165920   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1165921   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1165922   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1165923   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1165924   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1165925   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1165926   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1165927   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1165928   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
1165929   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1165930   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1165931   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1165932   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1165933   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1165934   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1165935   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1165936   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1165937   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1165938   +   ELSE S_NumCatalogPurchases
1165939   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1165940   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1165941   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1165942   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1165943   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1165944   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1165945   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1165946   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1165947   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1165948   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1165949   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1165950   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1165951   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1165952   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1165953   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1165954   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1165955   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1165956   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1165957   +END;
MPRINT(EM_DIAGRAM):   END;
1165958   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1165959   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1165960   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1165961   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1165962   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1165963   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1165964   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1165965   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1165966   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1165967   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1165968   +   H11  =    -0.81572379016921 * S_Income  +    -0.07670946585348 * S_Kidhome
1165969   +          +     0.24367603598167 * S_MntFishProducts
1165970   +          +     0.19692980127348 * S_MntFruits  +    -0.03926738185333 *
1165971   +        S_MntGoldProds  +    -0.20900804333353 * S_MntMeatProducts
1165972   +          +     0.34054806441484 * S_MntSweetProducts
1165973   +          +     0.65956211369383 * S_MntWines  +    -0.95375334578522 *
1165974   +        S_NumCatalogPurchases  +    -0.73124740368567 * S_NumDealsPurchases
1165975   +          +     0.98942946974575 * S_NumStorePurchases
1165976   +          +     0.89701206630103 * S_NumWebPurchases
1165977   +          +    -1.22878611472154 * S_NumWebVisitsMonth
1165978   +          +     1.44981870978354 * S_Recency  +     0.47533125686411 *
1165979   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = -0.81572379016921 * S_Income + -0.07670946585348 * S_Kidhome +
0.24367603598167 * S_MntFishProducts + 0.19692980127348 * S_MntFruits + -0.03926738185333 *
S_MntGoldProds + -0.20900804333353 * S_MntMeatProducts + 0.34054806441484 * S_MntSweetProducts
+ 0.65956211369383 * S_MntWines + -0.95375334578522 * S_NumCatalogPurchases +
-0.73124740368567 * S_NumDealsPurchases + 0.98942946974575 * S_NumStorePurchases +
0.89701206630103 * S_NumWebPurchases + -1.22878611472154 * S_NumWebVisitsMonth +
1.44981870978354 * S_Recency + 0.47533125686411 * S_Teenhome ;
1165980   +   H12  =    -0.18875145195495 * S_Income  +     0.42230998482453 * S_Kidhome
1165981   +          +     0.16683404689723 * S_MntFishProducts
1165982   +          +     0.32072658929401 * S_MntFruits  +    -0.12341748032201 *
1165983   +        S_MntGoldProds  +    -1.56478754527255 * S_MntMeatProducts
1165984   +          +     0.20389084548968 * S_MntSweetProducts
1165985   +          +     0.95592931625509 * S_MntWines  +    -0.69996817353755 *
1165986   +        S_NumCatalogPurchases  +    -0.92709806328697 * S_NumDealsPurchases
1165987   +          +     1.27164659640366 * S_NumStorePurchases
1165988   +          +     1.02122194207802 * S_NumWebPurchases
1165989   +          +     -1.5111033436803 * S_NumWebVisitsMonth
1165990   +          +     1.63712814901544 * S_Recency  +     0.14205116840572 *
1165991   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -0.18875145195495 * S_Income + 0.42230998482453 * S_Kidhome +
0.16683404689723 * S_MntFishProducts + 0.32072658929401 * S_MntFruits + -0.12341748032201 *
S_MntGoldProds + -1.56478754527255 * S_MntMeatProducts + 0.20389084548968 * S_MntSweetProducts
+ 0.95592931625509 * S_MntWines + -0.69996817353755 * S_NumCatalogPurchases +
-0.92709806328697 * S_NumDealsPurchases + 1.27164659640366 * S_NumStorePurchases +
1.02122194207802 * S_NumWebPurchases + -1.5111033436803 * S_NumWebVisitsMonth +
1.63712814901544 * S_Recency + 0.14205116840572 * S_Teenhome ;
1165992   +   H13  =     1.02798705354163 * S_Income  +    -0.94411708781921 * S_Kidhome
1165993   +          +    -0.03345077166544 * S_MntFishProducts
1165994   +          +     0.00038440809349 * S_MntFruits  +    -0.05068379715712 *
1165995   +        S_MntGoldProds  +     1.00464705307582 * S_MntMeatProducts
1165996   +          +    -0.11948662500951 * S_MntSweetProducts
1165997   +          +    -0.52438819731252 * S_MntWines  +     0.98586904866769 *
1165998   +        S_NumCatalogPurchases  +     0.09015295226839 * S_NumDealsPurchases
1165999   +          +     0.22401914357376 * S_NumStorePurchases
1166000   +          +     0.04219877865976 * S_NumWebPurchases
1166001   +          +     1.21753334166036 * S_NumWebVisitsMonth
1166002   +          +    -1.33712212110081 * S_Recency  +    -0.47582856683655 *
1166003   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = 1.02798705354163 * S_Income + -0.94411708781921 * S_Kidhome +
-0.03345077166544 * S_MntFishProducts + 0.00038440809349 * S_MntFruits + -0.05068379715712 *
S_MntGoldProds + 1.00464705307582 * S_MntMeatProducts + -0.11948662500951 * S_MntSweetProducts
+ -0.52438819731252 * S_MntWines + 0.98586904866769 * S_NumCatalogPurchases + 0.09015295226839
* S_NumDealsPurchases + 0.22401914357376 * S_NumStorePurchases + 0.04219877865976 *
S_NumWebPurchases + 1.21753334166036 * S_NumWebVisitsMonth + -1.33712212110081 * S_Recency +
-0.47582856683655 * S_Teenhome ;
1166004   +   H14  =     0.91431429848834 * S_Income  +    -1.16289676557574 * S_Kidhome
1166005   +          +     0.31175257038578 * S_MntFishProducts
1166006   +          +     0.08080436076271 * S_MntFruits  +     0.15252288175851 *
1166007   +        S_MntGoldProds  +     0.21603546207654 * S_MntMeatProducts
1166008   +          +      0.0927253053382 * S_MntSweetProducts
1166009   +          +     0.05865323888304 * S_MntWines  +    -0.23426953728277 *
1166010   +        S_NumCatalogPurchases  +    -0.46451908614085 * S_NumDealsPurchases
1166011   +          +    -0.12667606349662 * S_NumStorePurchases
1166012   +          +     0.30148374518724 * S_NumWebPurchases
1166013   +          +     0.48934229701658 * S_NumWebVisitsMonth
1166014   +          +    -0.83754390793251 * S_Recency  +     -0.4576645462819 *
1166015   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = 0.91431429848834 * S_Income + -1.16289676557574 * S_Kidhome +
0.31175257038578 * S_MntFishProducts + 0.08080436076271 * S_MntFruits + 0.15252288175851 *
S_MntGoldProds + 0.21603546207654 * S_MntMeatProducts + 0.0927253053382 * S_MntSweetProducts +
0.05865323888304 * S_MntWines + -0.23426953728277 * S_NumCatalogPurchases + -0.46451908614085
* S_NumDealsPurchases + -0.12667606349662 * S_NumStorePurchases + 0.30148374518724 *
S_NumWebPurchases + 0.48934229701658 * S_NumWebVisitsMonth + -0.83754390793251 * S_Recency +
-0.4576645462819 * S_Teenhome ;
1166016   +   H15  =    -0.58161501095664 * S_Income  +     -1.0333658128614 * S_Kidhome
1166017   +          +     0.42646725119177 * S_MntFishProducts
1166018   +          +     -0.3264621401658 * S_MntFruits  +    -0.74616728524532 *
1166019   +        S_MntGoldProds  +    -0.97572068716712 * S_MntMeatProducts
1166020   +          +    -0.01493605582616 * S_MntSweetProducts
1166021   +          +      0.0311636632685 * S_MntWines  +    -1.68599903767191 *
1166022   +        S_NumCatalogPurchases  +    -1.25052648798307 * S_NumDealsPurchases
1166023   +          +     0.54256744091258 * S_NumStorePurchases
1166024   +          +     0.43065931458468 * S_NumWebPurchases
1166025   +          +      0.5935561420466 * S_NumWebVisitsMonth
1166026   +          +    -0.45183418369624 * S_Recency  +     0.19260512629844 *
1166027   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H15 = -0.58161501095664 * S_Income + -1.0333658128614 * S_Kidhome +
0.42646725119177 * S_MntFishProducts + -0.3264621401658 * S_MntFruits + -0.74616728524532 *
S_MntGoldProds + -0.97572068716712 * S_MntMeatProducts + -0.01493605582616 *
S_MntSweetProducts + 0.0311636632685 * S_MntWines + -1.68599903767191 * S_NumCatalogPurchases
+ -1.25052648798307 * S_NumDealsPurchases + 0.54256744091258 * S_NumStorePurchases +
0.43065931458468 * S_NumWebPurchases + 0.5935561420466 * S_NumWebVisitsMonth +
-0.45183418369624 * S_Recency + 0.19260512629844 * S_Teenhome ;
1166028   +   H11  = H11  +     0.61503950219838 * AcceptedCmp10
1166029   +          +     0.02945207091619 * AcceptedCmp20  +     0.99151950769472 *
1166030   +        AcceptedCmp30  +     1.08987060401718 * AcceptedCmp40
1166031   +          +     0.45427753773024 * AcceptedCmp50  +    -1.03533951966815 *
1166032   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.61503950219838 * AcceptedCmp10 + 0.02945207091619 *
AcceptedCmp20 + 0.99151950769472 * AcceptedCmp30 + 1.08987060401718 * AcceptedCmp40 +
0.45427753773024 * AcceptedCmp50 + -1.03533951966815 * Complain0 ;
1166033   +   H12  = H12  +     0.83823476190401 * AcceptedCmp10
1166034   +          +      1.0793719601418 * AcceptedCmp20  +     0.68538854946581 *
1166035   +        AcceptedCmp30  +     1.00297565893339 * AcceptedCmp40
1166036   +          +     0.24586379991786 * AcceptedCmp50  +     0.15471251255301 *
1166037   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.83823476190401 * AcceptedCmp10 + 1.0793719601418 *
AcceptedCmp20 + 0.68538854946581 * AcceptedCmp30 + 1.00297565893339 * AcceptedCmp40 +
0.24586379991786 * AcceptedCmp50 + 0.15471251255301 * Complain0 ;
1166038   +   H13  = H13  +    -0.41486094438907 * AcceptedCmp10
1166039   +          +    -0.76586628449839 * AcceptedCmp20  +    -0.59695459523693 *
1166040   +        AcceptedCmp30  +    -0.30262159911837 * AcceptedCmp40
1166041   +          +    -0.61141171124182 * AcceptedCmp50  +    -0.01086235188835 *
1166042   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.41486094438907 * AcceptedCmp10 + -0.76586628449839 *
AcceptedCmp20 + -0.59695459523693 * AcceptedCmp30 + -0.30262159911837 * AcceptedCmp40 +
-0.61141171124182 * AcceptedCmp50 + -0.01086235188835 * Complain0 ;
1166043   +   H14  = H14  +    -0.09662858884082 * AcceptedCmp10
1166044   +          +    -0.48515652524171 * AcceptedCmp20  +    -0.37421451374399 *
1166045   +        AcceptedCmp30  +    -0.52889523891817 * AcceptedCmp40
1166046   +          +    -0.73518448275357 * AcceptedCmp50  +    -0.36065830718672 *
1166047   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.09662858884082 * AcceptedCmp10 + -0.48515652524171 *
AcceptedCmp20 + -0.37421451374399 * AcceptedCmp30 + -0.52889523891817 * AcceptedCmp40 +
-0.73518448275357 * AcceptedCmp50 + -0.36065830718672 * Complain0 ;
1166048   +   H15  = H15  +      0.2985143092641 * AcceptedCmp10
1166049   +          +    -0.06881934778393 * AcceptedCmp20  +    -0.02609197044604 *
1166050   +        AcceptedCmp30  +    -0.79105657447885 * AcceptedCmp40
1166051   +          +    -0.02286855144948 * AcceptedCmp50  +     0.02884650192784 *
1166052   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.2985143092641 * AcceptedCmp10 + -0.06881934778393 *
AcceptedCmp20 + -0.02609197044604 * AcceptedCmp30 + -0.79105657447885 * AcceptedCmp40 +
-0.02286855144948 * AcceptedCmp50 + 0.02884650192784 * Complain0 ;
1166053   +   H11  = H11  +    -0.41169946146301 * Education2n_Cycle
1166054   +          +      0.8448273504441 * EducationBasic  +    -1.02497956377347 *
1166055   +        EducationGraduation  +     0.43998321745211 * EducationMaster
1166056   +          +    -0.85912688909911 * Marital_StatusDivorced
1166057   +          +     0.81561401465875 * Marital_StatusMarried
1166058   +          +    -0.58324403081542 * Marital_StatusSingle
1166059   +          +      0.9348017085106 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.41169946146301 * Education2n_Cycle + 0.8448273504441 *
EducationBasic + -1.02497956377347 * EducationGraduation + 0.43998321745211 * EducationMaster
+ -0.85912688909911 * Marital_StatusDivorced + 0.81561401465875 * Marital_StatusMarried +
-0.58324403081542 * Marital_StatusSingle + 0.9348017085106 * Marital_StatusTogether ;
1166060   +   H12  = H12  +     0.22828129841893 * Education2n_Cycle
1166061   +          +     0.47579227804033 * EducationBasic  +    -0.18165301263195 *
1166062   +        EducationGraduation  +    -0.16143431016405 * EducationMaster
1166063   +          +    -0.34784695867287 * Marital_StatusDivorced
1166064   +          +    -0.18194022182247 * Marital_StatusMarried
1166065   +          +    -0.10633185904164 * Marital_StatusSingle
1166066   +          +     0.13136125361628 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.22828129841893 * Education2n_Cycle + 0.47579227804033 *
EducationBasic + -0.18165301263195 * EducationGraduation + -0.16143431016405 * EducationMaster
+ -0.34784695867287 * Marital_StatusDivorced + -0.18194022182247 * Marital_StatusMarried +
-0.10633185904164 * Marital_StatusSingle + 0.13136125361628 * Marital_StatusTogether ;
1166067   +   H13  = H13  +     0.38705901043652 * Education2n_Cycle
1166068   +          +     0.19703188370189 * EducationBasic  +    -0.48062640599976 *
1166069   +        EducationGraduation  +     -0.3646621736273 * EducationMaster
1166070   +          +     0.61058752124466 * Marital_StatusDivorced
1166071   +          +    -1.38793808025141 * Marital_StatusMarried
1166072   +          +     1.10060737810944 * Marital_StatusSingle
1166073   +          +    -1.21250219018366 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.38705901043652 * Education2n_Cycle + 0.19703188370189 *
EducationBasic + -0.48062640599976 * EducationGraduation + -0.3646621736273 * EducationMaster
+ 0.61058752124466 * Marital_StatusDivorced + -1.38793808025141 * Marital_StatusMarried +
1.10060737810944 * Marital_StatusSingle + -1.21250219018366 * Marital_StatusTogether ;
1166074   +   H14  = H14  +    -0.20576658115662 * Education2n_Cycle
1166075   +          +    -0.09185472034614 * EducationBasic  +    -0.43674210064447 *
1166076   +        EducationGraduation  +    -0.18154054746298 * EducationMaster
1166077   +          +     0.11973800573581 * Marital_StatusDivorced
1166078   +          +      -0.294635257911 * Marital_StatusMarried
1166079   +          +    -0.05399659601172 * Marital_StatusSingle
1166080   +          +     0.34207780606239 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.20576658115662 * Education2n_Cycle + -0.09185472034614 *
EducationBasic + -0.43674210064447 * EducationGraduation + -0.18154054746298 * EducationMaster
+ 0.11973800573581 * Marital_StatusDivorced + -0.294635257911 * Marital_StatusMarried +
-0.05399659601172 * Marital_StatusSingle + 0.34207780606239 * Marital_StatusTogether ;
1166081   +   H15  = H15  +    -0.05553093684862 * Education2n_Cycle
1166082   +          +    -0.12898006732329 * EducationBasic  +    -0.16064118923518 *
1166083   +        EducationGraduation  +     -0.6431539624694 * EducationMaster
1166084   +          +     0.42838191659864 * Marital_StatusDivorced
1166085   +          +    -0.09150349181363 * Marital_StatusMarried
1166086   +          +    -0.33520164145276 * Marital_StatusSingle
1166087   +          +    -0.15253738713197 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + -0.05553093684862 * Education2n_Cycle + -0.12898006732329 *
EducationBasic + -0.16064118923518 * EducationGraduation + -0.6431539624694 * EducationMaster
+ 0.42838191659864 * Marital_StatusDivorced + -0.09150349181363 * Marital_StatusMarried +
-0.33520164145276 * Marital_StatusSingle + -0.15253738713197 * Marital_StatusTogether ;
1166088   +   H11  =     -1.5079478405973 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -1.5079478405973 + H11 ;
1166089   +   H12  =     0.03014958331993 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.03014958331993 + H12 ;
1166090   +   H13  =    -1.78098671165572 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -1.78098671165572 + H13 ;
1166091   +   H14  =     0.22179429743277 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 0.22179429743277 + H14 ;
1166092   +   H15  =    -2.06602107857898 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = -2.06602107857898 + H15 ;
1166093   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1166094   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1166095   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1166096   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1166097   +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
1166098   +END;
MPRINT(EM_DIAGRAM):   END;
1166099   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1166100   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1166101   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1166102   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1166103   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1166104   +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
1166105   +END;
MPRINT(EM_DIAGRAM):   END;
1166106   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1166107   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1166108   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1166109   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1166110   +   P_DepVar1  =    -4.55666337815854 * H11  +    -4.04792544554995 * H12
1166111   +          +     4.56148127429284 * H13  +     2.36841344452371 * H14
1166112   +          +    -3.07371010011749 * H15 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -4.55666337815854 * H11 + -4.04792544554995 * H12 +
4.56148127429284 * H13 + 2.36841344452371 * H14 + -3.07371010011749 * H15 ;
1166113   +   P_DepVar1  =    -0.83283406236136 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.83283406236136 + P_DepVar1 ;
1166114   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1166115   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1166116   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1166117   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1166118   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1166119   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1166120   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1166121   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1166122   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1166123   +END;
MPRINT(EM_DIAGRAM):   END;
1166124   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1166125   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1166126   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1166127   +END;
MPRINT(EM_DIAGRAM):   END;
1166128   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1166129   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1166130   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1166131   +END;
MPRINT(EM_DIAGRAM):   END;
1166132   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1166133   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1166134   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1166135   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1166136   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1166137   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1166138   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1166139   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1166140   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1166141   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1166142   +END;
MPRINT(EM_DIAGRAM):   END;
1166143   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1166144   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1166145   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1166146   +drop
1166147   +H11
1166148   +H12
1166149   +H13
1166150   +H14
1166151   +H15
1166152   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 ;
1166153   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1166154    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1166155    quit;
1166156    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1166157    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1166158    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1166159    retain ID 2 Node "Neural34";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Neural34";
1166160    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1166161    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1878 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 1878 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1166162    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1166163    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1166164    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1878 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 1878 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1166165    proc sort data=EMWS8.Neural34_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Neural34_variableset out=_temp2(keep=NAME CREATOR);
1166166    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1166167    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set EMWS8.NEURAL34_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1166168    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1166169    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1166170    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1166171    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1166172    proc contents data=EMWS8.Neural34_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Neural34_train out=_meta(keep=NAME) noprint;
1166173    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
1166174    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1166175    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1166176    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1166177    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1166178    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1166179    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1166180    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 53 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1166181    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1166182    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1166182  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 924 rows and 5 columns.
 
1166183    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1166184    proc append base=EMWS8.Ensmbl9_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl9_FCMP data=_tempx;
1166185    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL9_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 924 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL9_FCMP has 924 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1166186    filename _pref
1166186  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
1166187    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1166188    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
1166189   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1166190   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1166191   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1166192   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1166193   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1166194   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1166195    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1166196    quit;
1166197    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1166198    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1166199    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1166200    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
1166201    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1166202    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1166203    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1166204    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1166205    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1166206    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
1166207    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1166208    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1166209    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1166210    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1166211    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1166212    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1166213    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
1166214    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
1166215    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1166216    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1166217    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1166218    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1166219    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1166220    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1166221    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1166222    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1166223    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1166223  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.
 
1166224    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1166225    proc append base=EMWS8.Ensmbl9_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl9_FCMP data=_tempx;
1166226    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL9_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL9_FCMP has 928 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1166227    filename _pref
1166227  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
1166228    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1166229    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
1166230   +
1166231   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1166232   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1166232  !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1166233   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1166234   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1166235   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1166236   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1166237   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1166238    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1166239    quit;
1166240    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1166241    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1166242    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1166243    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
1166244    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1166245    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1166246    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1166247    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1166248    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1166249    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
1166250    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1166251    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1166252    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1166253    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1166254    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1166255    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1166256    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
1166257    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1166258    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1166259    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1166260    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1166261    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1166262    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1166263    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1166264    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1166265    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1166266    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1166266  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.
 
1166267    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1166268    proc append base=EMWS8.Ensmbl9_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl9_FCMP data=_tempx;
1166269    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL9_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL9_FCMP has 967 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
The SAS System
 
 
 
1166270    filename _pref
1166270  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
1166271    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1166272    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
1166273   +
1166274   +
1166275   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
1166276   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
1166277   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
1166278   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
1166279   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
1166280   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1166281   +
1166282   +
1166283   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
1166284   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
1166285   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
1166286   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
1166287   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
1166288   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1166289   +
1166290   +
1166291   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
1166292   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
1166293   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
1166294   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
1166295   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
1166296   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1166297   +
1166298   +
1166299   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
1166300   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
1166301   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
1166302   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
1166303   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
1166304   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1166305   +
1166306   +
1166307   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
1166308   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
1166309   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
1166310   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
1166311   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
1166312   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1166313   +
1166314   +
1166315   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
1166316   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
1166317   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
1166318   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
1166319   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
1166320   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1166321   +
1166322   +
1166323   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
1166324   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
1166325   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
1166326   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
1166327   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
1166328   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1166329   +
1166330   +
1166331   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
1166332   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
1166333   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
1166334   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
1166335   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
1166336   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1166337   +if
1166338   +_FILTERNORM1 not in ( '.')
1166339   + and
1166340   +_FILTERNORM2 not in ( '.')
1166341   + and
1166342   +_FILTERNORM3 not in ( '.')
1166343   + and
1166344   +_FILTERNORM4 not in ( '.')
1166345   + and
1166346   +_FILTERNORM5 not in ( '.')
1166347   + and
1166348   +_FILTERNORM6 not in ( '.')
1166349   + and
1166350   +_FILTERNORM7 not in ( ' ')
1166351   + and
1166352   +_FILTERNORM8 not in ( ' ')
1166353   +and
1166354   +( Dt_Customer ne .)
1166355   +and ( Income ne . and (Income<=107000))
1166356   +and ( Kidhome ne .)
1166357   +and ( MntFishProducts ne .)
1166358   +and ( MntFruits ne .)
1166359   +and ( MntGoldProds ne .)
1166360   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
1166361   +and ( MntSweetProducts ne .)
1166362   +and ( MntWines ne .)
1166363   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
1166364   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
1166365   +and ( NumStorePurchases ne .)
1166366   +and ( NumWebPurchases ne .)
1166367   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
1166368   +and ( Recency ne .)
1166369   +and ( Teenhome ne .)
1166370   +and ( Year_Birth ne .)
1166371   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and (
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and (
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and (
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and (
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne
.) and ( Year_Birth ne .) then do;
1166372   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
1166373   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
1166374   +end;
MPRINT(EM_DIAGRAM):   end;
1166375   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
1166376   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1166377    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1166378    quit;
1166379    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1166380    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1166381    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1166382    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
1166383    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1166384    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1166385    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1166386    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1166387    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1166388    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
1166389    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1166390    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1166391    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1166392    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1166393    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1166394    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1166395    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
1166396    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
1166397    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1166398    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1166399    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1166400    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1166401    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1166402    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1166403    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1166404    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1166405    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1166405  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.
 
1166406    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1166407    proc append base=EMWS8.Ensmbl9_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl9_FCMP data=_tempx;
1166408    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL9_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL9_FCMP has 1033 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1166409    %macro varDept(fcmpdata=,id=);
1166410    %global nobs&id scoreFlag&id;
1166411    %let scoreFlag&id = 0;
1166412    %if &id=1 or ^&fcmpStart %then %do;
1166413    proc sort data=&fcmpdata out=_temp&id nodupkey;
1166414    by NAME;
1166415    where id=&id and LHS in( %let j=1;
1166416    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
1166417    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
1166418    "&var" %let j = %eval(&j+1);
1166419    %end;
1166420    );
1166421    run;
1166422    %let dsid = %sysfunc(open(_temp&id));
1166423    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1166424    %let dsid = %sysfunc(close(&dsid));
1166425    %if &&nobs&id %then %do;
1166426    %let scoreFlag&id = 1;
1166427    %let fcmpStart = 1;
1166428    %end;
1166429    %else %let fcmpStart = 0;
1166430    %end;
1166431    %else %do;
1166432    proc sort data=&fcmpdata out=_tempid;
1166433    where id=&id;
1166434    by LHS;
1166435    run;
1166436    %let dsid = %sysfunc(open(_tempid));
1166437    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1166438    %let dsid = %sysfunc(close(&dsid));
1166439    %if ^&&nobs&id %then %do;
1166440    proc datasets lib=work nolist;
1166441    delete _tempid;
1166442    run;
1166443    quit;
1166444    %end;
1166445    %else %do;
1166446    data _tempAll;
1166447    set %let j=%eval(&id-1);
1166448    %do x=1 %to &j;
1166449    %if &&nobs&x %then %do;
1166450    _temp&x %end;
1166451    %end;
1166452    ;
1166453    run;
1166454    proc sql;
1166455    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
1166455  ! work._tempid p2 where p.name=p2.lhs;
1166456    quit;
1166457    data _temp&id;
1166458    set _temp&id;
1166459    where LHS ne '' and NAME ne '' and Node ne '';
1166460    run;
1166461    proc datasets lib=work nolist;
1166462    delete _tempAll;
1166463    run;
1166464    %let dsid = %sysfunc(open(_temp&id));
1166465    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1166466    %let dsid = %sysfunc(close(&dsid));
1166467    %if ^&&nobs&id %then %do;
1166468    proc datasets lib=work nolist;
1166469    delete _temp&id;
1166470    run;
1166471    quit;
1166472    %end;
1166473    %else %do;
1166474    %let scoreFlag&id = 1;
1166475    data _temp&id;
1166476    set _temp&id;
1166477    where LHS ne NAME and node ne '';
1166478    run;
1166479    %let dsid = %sysfunc(open(_temp&id));
1166480    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1166481    %let dsid = %sysfunc(close(&dsid));
1166482    %if ^&&nobs&id %then %do;
1166483    proc datasets lib=work nolist;
1166484    delete _temp&id;
1166485    run;
1166486    quit;
1166487    %end;
1166488    %else %do;
1166489    proc sort data=_temp&id nodupkey;
1166490    by LHS NAME;
1166491    run;
1166492    %end;
1166493    %end;
1166494    %end;
1166495    %end;
1166496    %mend varDept;
1166497    %macro optCode(outdata=fcmpdata);
1166498    %global fcmpStart;
1166499    %let fcmpStart = 0;
1166500    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
1166501    %let NumNodes=9;
1166502    %do k=1 %to &NumNodes;
1166503    %vardept(fcmpdata=&outdata, id=&k);
1166504    %end;
1166505    %mend optCode;
1166506    %optcode(outData=EMWS8.Ensmbl9_FCMP);
MPRINT(EM_DIAGRAM):
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl9_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL9_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl9_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: There were 98 observations read from the data set EMWS8.ENSMBL9_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 73 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 25 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl9_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL9_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl9_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL9_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl9_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set EMWS8.ENSMBL9_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 25 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 25 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp5;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP5 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl9_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set EMWS8.ENSMBL9_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 25 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 25 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp6;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP6 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl9_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 66 observations read from the data set EMWS8.ENSMBL9_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 25 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 25 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl9_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL9_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl9_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL9_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;
 
1166507    filename _pref
1166507  ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural35\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Neural35\EMPUBLISHSCORE.sas";
1166508    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1166509    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Neural35\EMPUBLISHSCORE.sas.
1166510   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1166511   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1166512   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1166513   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1166514   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1166515   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1166516   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1166517   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1166518   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1166519   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1166520   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1166521   +LENGTH _WARN_ $4
1166522   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
1166523   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1166524   +
1166525   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1166526   +
1166527   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1166528   +
1166529   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1166530   +
1166531   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1166532   +
1166533   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1166534   +
1166535   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1166536   +
1166537   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1166538   +
1166539   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1166540   +
1166541   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1166542   +
1166543   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1166544   +
1166545   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1166546   +
1166547   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1166548   +
1166549   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1166550   +
1166551   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1166552   +
1166553   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1166554   +
1166555   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1166556   +
1166557   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1166558   +
1166559   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1166560   +
1166561   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1166562   +
1166563   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1166564   +
1166565   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1166566   +
1166567   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1166568   +
1166569   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1166570   +
1166571   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1166572   +
1166573   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1166574   +
1166575   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1166576   +
1166577   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1166578   +
1166579   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1166580   +
1166581   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1166582   +
1166583   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1166584   +
1166585   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1166586   +
1166587   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1166588   +
1166589   +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
1166590   +
1166591   +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
1166592   +
1166593   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1166594   +
1166595   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1166596   +
1166597   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1166598   +
1166599   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1166600   +
1166601   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1166602   +
1166603   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1166604   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1166605   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1166606   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1166607   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1166608   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1166609   +end;
MPRINT(EM_DIAGRAM):   end;
1166610   +else do;
MPRINT(EM_DIAGRAM):   else do;
1166611   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1166612   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1166613   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1166614   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1166615   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1166616   +   end;
MPRINT(EM_DIAGRAM):   end;
1166617   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1166618   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1166619   +   end;
MPRINT(EM_DIAGRAM):   end;
1166620   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1166621   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1166622   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1166623   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1166624   +   end;
MPRINT(EM_DIAGRAM):   end;
1166625   +end;
MPRINT(EM_DIAGRAM):   end;
1166626   +
1166627   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1166628   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1166629   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1166630   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1166631   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1166632   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1166633   +end;
MPRINT(EM_DIAGRAM):   end;
1166634   +else do;
MPRINT(EM_DIAGRAM):   else do;
1166635   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1166636   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1166637   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1166638   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1166639   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1166640   +   end;
MPRINT(EM_DIAGRAM):   end;
1166641   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1166642   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1166643   +   end;
MPRINT(EM_DIAGRAM):   end;
1166644   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1166645   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1166646   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1166647   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1166648   +   end;
MPRINT(EM_DIAGRAM):   end;
1166649   +end;
MPRINT(EM_DIAGRAM):   end;
1166650   +
1166651   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1166652   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1166653   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1166654   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1166655   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1166656   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1166657   +end;
MPRINT(EM_DIAGRAM):   end;
1166658   +else do;
MPRINT(EM_DIAGRAM):   else do;
1166659   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1166660   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1166661   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1166662   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1166663   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1166664   +   end;
MPRINT(EM_DIAGRAM):   end;
1166665   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1166666   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1166667   +   end;
MPRINT(EM_DIAGRAM):   end;
1166668   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1166669   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1166670   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1166671   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1166672   +   end;
MPRINT(EM_DIAGRAM):   end;
1166673   +end;
MPRINT(EM_DIAGRAM):   end;
1166674   +
1166675   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1166676   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1166677   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1166678   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1166679   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1166680   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1166681   +end;
MPRINT(EM_DIAGRAM):   end;
1166682   +else do;
MPRINT(EM_DIAGRAM):   else do;
1166683   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1166684   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1166685   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1166686   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1166687   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1166688   +   end;
MPRINT(EM_DIAGRAM):   end;
1166689   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1166690   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1166691   +   end;
MPRINT(EM_DIAGRAM):   end;
1166692   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1166693   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1166694   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1166695   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1166696   +   end;
MPRINT(EM_DIAGRAM):   end;
1166697   +end;
MPRINT(EM_DIAGRAM):   end;
1166698   +
1166699   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1166700   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1166701   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1166702   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1166703   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1166704   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1166705   +end;
MPRINT(EM_DIAGRAM):   end;
1166706   +else do;
MPRINT(EM_DIAGRAM):   else do;
1166707   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1166708   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1166709   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1166710   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1166711   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1166712   +   end;
MPRINT(EM_DIAGRAM):   end;
1166713   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1166714   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1166715   +   end;
MPRINT(EM_DIAGRAM):   end;
1166716   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1166717   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1166718   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1166719   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1166720   +   end;
MPRINT(EM_DIAGRAM):   end;
1166721   +end;
MPRINT(EM_DIAGRAM):   end;
1166722   +
1166723   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1166724   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1166725   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1166726   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1166727   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1166728   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1166729   +end;
MPRINT(EM_DIAGRAM):   end;
1166730   +else do;
MPRINT(EM_DIAGRAM):   else do;
1166731   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1166732   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1166733   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1166734   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1166735   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1166736   +   end;
MPRINT(EM_DIAGRAM):   end;
1166737   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1166738   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1166739   +   end;
MPRINT(EM_DIAGRAM):   end;
1166740   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1166741   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1166742   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1166743   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1166744   +   end;
MPRINT(EM_DIAGRAM):   end;
1166745   +end;
MPRINT(EM_DIAGRAM):   end;
1166746   +
1166747   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1166748   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
1166749   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1166750   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1166751   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1166752   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1166753   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1166754   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1166755   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1166756   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1166757   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1166758   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1166759   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1166760   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1166761   +end;
MPRINT(EM_DIAGRAM):   end;
1166762   +else do;
MPRINT(EM_DIAGRAM):   else do;
1166763   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1166764   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1166765   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1166766   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1166767   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1166768   +   end;
MPRINT(EM_DIAGRAM):   end;
1166769   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1166770   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1166771   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1166772   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1166773   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1166774   +   end;
MPRINT(EM_DIAGRAM):   end;
1166775   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1166776   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1166777   +   end;
MPRINT(EM_DIAGRAM):   end;
1166778   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1166779   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1166780   +   end;
MPRINT(EM_DIAGRAM):   end;
1166781   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1166782   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1166783   +   end;
MPRINT(EM_DIAGRAM):   end;
1166784   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1166785   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1166786   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1166787   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1166788   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1166789   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1166790   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1166791   +   end;
MPRINT(EM_DIAGRAM):   end;
1166792   +end;
MPRINT(EM_DIAGRAM):   end;
1166793   +
1166794   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1166795   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1166796   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
1166797   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1166798   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1166799   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1166800   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1166801   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1166802   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1166803   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1166804   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1166805   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1166806   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1166807   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1166808   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1166809   +end;
MPRINT(EM_DIAGRAM):   end;
1166810   +else do;
MPRINT(EM_DIAGRAM):   else do;
1166811   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1166812   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1166813   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1166814   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1166815   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1166816   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1166817   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1166818   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1166819   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1166820   +         end;
MPRINT(EM_DIAGRAM):   end;
1166821   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1166822   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1166823   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1166824   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1166825   +            end;
MPRINT(EM_DIAGRAM):   end;
1166826   +         end;
MPRINT(EM_DIAGRAM):   end;
1166827   +      end;
MPRINT(EM_DIAGRAM):   end;
1166828   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1166829   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1166830   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1166831   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1166832   +         end;
MPRINT(EM_DIAGRAM):   end;
1166833   +      end;
MPRINT(EM_DIAGRAM):   end;
1166834   +   end;
MPRINT(EM_DIAGRAM):   end;
1166835   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1166836   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1166837   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1166838   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1166839   +      end;
MPRINT(EM_DIAGRAM):   end;
1166840   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1166841   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1166842   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1166843   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1166844   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1166845   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1166846   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1166847   +         end;
MPRINT(EM_DIAGRAM):   end;
1166848   +      end;
MPRINT(EM_DIAGRAM):   end;
1166849   +   end;
MPRINT(EM_DIAGRAM):   end;
1166850   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1166851   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1166852   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1166853   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1166854   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1166855   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1166856   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1166857   +   end;
MPRINT(EM_DIAGRAM):   end;
1166858   +end;
MPRINT(EM_DIAGRAM):   end;
1166859   +
1166860   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1166861   +*** Checking missing input Interval
1166862   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1166863   +
1166864   +IF NMISS(
1166865   +   Income ,
1166866   +   Kidhome ,
1166867   +   MntFishProducts ,
1166868   +   MntFruits ,
1166869   +   MntGoldProds ,
1166870   +   MntMeatProducts ,
1166871   +   MntSweetProducts ,
1166872   +   MntWines ,
1166873   +   NumCatalogPurchases ,
1166874   +   NumDealsPurchases ,
1166875   +   NumStorePurchases ,
1166876   +   NumWebPurchases ,
1166877   +   NumWebVisitsMonth ,
1166878   +   Recency ,
1166879   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Income , Kidhome , MntFishProducts , MntFruits , MntGoldProds
, MntMeatProducts , MntSweetProducts , MntWines , NumCatalogPurchases , NumDealsPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , Recency , Teenhome ) THEN DO;
1166880   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1166881   +
1166882   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1166883   +END;
MPRINT(EM_DIAGRAM):   END;
1166884   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1166885   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1166886   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1166887   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1166888   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1166889   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1166890   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1166891   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1166892   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1166893   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1166894   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1166895   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1166896   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1166897   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1166898   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1166899   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1166900   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1166901   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1166902   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1166903   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1166904   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1166905   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1166906   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1166907   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1166908   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1166909   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1166910   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1166911   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1166912   +END;
MPRINT(EM_DIAGRAM):   END;
1166913   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1166914   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1166915   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1166916   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1166917   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1166918   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1166919   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1166920   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1166921   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1166922   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1166923   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1166924   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1166925   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1166926   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
1166927   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1166928   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1166929   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1166930   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1166931   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1166932   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1166933   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1166934   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1166935   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1166936   +   ELSE S_NumCatalogPurchases
1166937   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1166938   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1166939   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1166940   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1166941   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1166942   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1166943   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1166944   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1166945   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1166946   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1166947   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1166948   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1166949   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1166950   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1166951   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1166952   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1166953   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1166954   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1166955   +END;
MPRINT(EM_DIAGRAM):   END;
1166956   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1166957   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1166958   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1166959   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1166960   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1166961   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1166962   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1166963   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1166964   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1166965   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1166966   +   H11  =     0.87660114046125 * S_Income  +     -0.7994451897827 * S_Kidhome
1166967   +          +    -0.08967295716195 * S_MntFishProducts
1166968   +          +     0.03184635437516 * S_MntFruits  +    -0.13860895575438 *
1166969   +        S_MntGoldProds  +     0.55790460748169 * S_MntMeatProducts
1166970   +          +    -0.02806094557115 * S_MntSweetProducts
1166971   +          +    -0.14537763592724 * S_MntWines  +     0.76891266523847 *
1166972   +        S_NumCatalogPurchases  +     0.16842007461305 * S_NumDealsPurchases
1166973   +          +     0.25137876058262 * S_NumStorePurchases
1166974   +          +    -0.07865442401292 * S_NumWebPurchases
1166975   +          +     1.03197398967259 * S_NumWebVisitsMonth
1166976   +          +    -1.26907156503759 * S_Recency  +    -0.76016893316351 *
1166977   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.87660114046125 * S_Income + -0.7994451897827 * S_Kidhome +
-0.08967295716195 * S_MntFishProducts + 0.03184635437516 * S_MntFruits + -0.13860895575438 *
S_MntGoldProds + 0.55790460748169 * S_MntMeatProducts + -0.02806094557115 * S_MntSweetProducts
+ -0.14537763592724 * S_MntWines + 0.76891266523847 * S_NumCatalogPurchases + 0.16842007461305
* S_NumDealsPurchases + 0.25137876058262 * S_NumStorePurchases + -0.07865442401292 *
S_NumWebPurchases + 1.03197398967259 * S_NumWebVisitsMonth + -1.26907156503759 * S_Recency +
-0.76016893316351 * S_Teenhome ;
1166978   +   H12  =     0.37295000114468 * S_Income  +    -0.12834211496575 * S_Kidhome
1166979   +          +     0.19312392388912 * S_MntFishProducts
1166980   +          +      0.1561688289137 * S_MntFruits  +     0.04004810938796 *
1166981   +        S_MntGoldProds  +     0.32599201739588 * S_MntMeatProducts
1166982   +          +       0.204174263605 * S_MntSweetProducts
1166983   +          +    -0.11560784817014 * S_MntWines  +     0.12255073568725 *
1166984   +        S_NumCatalogPurchases  +    -0.05543734180218 * S_NumDealsPurchases
1166985   +          +     0.07747830335769 * S_NumStorePurchases
1166986   +          +     0.07960837555191 * S_NumWebPurchases
1166987   +          +     0.02351602389122 * S_NumWebVisitsMonth
1166988   +          +     -0.2840853952427 * S_Recency  +    -0.47421627761687 *
1166989   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = 0.37295000114468 * S_Income + -0.12834211496575 * S_Kidhome +
0.19312392388912 * S_MntFishProducts + 0.1561688289137 * S_MntFruits + 0.04004810938796 *
S_MntGoldProds + 0.32599201739588 * S_MntMeatProducts + 0.204174263605 * S_MntSweetProducts +
-0.11560784817014 * S_MntWines + 0.12255073568725 * S_NumCatalogPurchases + -0.05543734180218
* S_NumDealsPurchases + 0.07747830335769 * S_NumStorePurchases + 0.07960837555191 *
S_NumWebPurchases + 0.02351602389122 * S_NumWebVisitsMonth + -0.2840853952427 * S_Recency +
-0.47421627761687 * S_Teenhome ;
1166990   +   H13  =    -0.33428925248315 * S_Income  +    -0.03845622730742 * S_Kidhome
1166991   +          +     0.18733919794636 * S_MntFishProducts
1166992   +          +     0.45907982190052 * S_MntFruits  +    -0.48776616433719 *
1166993   +        S_MntGoldProds  +    -0.41340481007204 * S_MntMeatProducts
1166994   +          +     0.42514606159239 * S_MntSweetProducts
1166995   +          +     0.20038001368787 * S_MntWines  +    -1.21708501803782 *
1166996   +        S_NumCatalogPurchases  +    -1.06820061274533 * S_NumDealsPurchases
1166997   +          +     0.36582106462789 * S_NumStorePurchases
1166998   +          +     0.04244777020435 * S_NumWebPurchases
1166999   +          +    -0.24296342902503 * S_NumWebVisitsMonth
1167000   +          +     0.27451716762947 * S_Recency  +     0.13110477325277 *
1167001   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = -0.33428925248315 * S_Income + -0.03845622730742 * S_Kidhome +
0.18733919794636 * S_MntFishProducts + 0.45907982190052 * S_MntFruits + -0.48776616433719 *
S_MntGoldProds + -0.41340481007204 * S_MntMeatProducts + 0.42514606159239 * S_MntSweetProducts
+ 0.20038001368787 * S_MntWines + -1.21708501803782 * S_NumCatalogPurchases +
-1.06820061274533 * S_NumDealsPurchases + 0.36582106462789 * S_NumStorePurchases +
0.04244777020435 * S_NumWebPurchases + -0.24296342902503 * S_NumWebVisitsMonth +
0.27451716762947 * S_Recency + 0.13110477325277 * S_Teenhome ;
1167002   +   H14  =    -0.70493412542585 * S_Income  +     0.41202796606799 * S_Kidhome
1167003   +          +     0.05986489897572 * S_MntFishProducts
1167004   +          +    -0.05040531715469 * S_MntFruits  +       0.051068387592 *
1167005   +        S_MntGoldProds  +    -0.13581881662481 * S_MntMeatProducts
1167006   +          +    -0.05513370461072 * S_MntSweetProducts
1167007   +          +     0.77472084468819 * S_MntWines  +    -0.03211788969126 *
1167008   +        S_NumCatalogPurchases  +    -0.24097486430988 * S_NumDealsPurchases
1167009   +          +     0.64364674828841 * S_NumStorePurchases
1167010   +          +     0.15084748708424 * S_NumWebPurchases
1167011   +          +    -0.94144998356377 * S_NumWebVisitsMonth
1167012   +          +     1.16778338364599 * S_Recency  +     0.32089861635238 *
1167013   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = -0.70493412542585 * S_Income + 0.41202796606799 * S_Kidhome +
0.05986489897572 * S_MntFishProducts + -0.05040531715469 * S_MntFruits + 0.051068387592 *
S_MntGoldProds + -0.13581881662481 * S_MntMeatProducts + -0.05513370461072 *
S_MntSweetProducts + 0.77472084468819 * S_MntWines + -0.03211788969126 * S_NumCatalogPurchases
+ -0.24097486430988 * S_NumDealsPurchases + 0.64364674828841 * S_NumStorePurchases +
0.15084748708424 * S_NumWebPurchases + -0.94144998356377 * S_NumWebVisitsMonth +
1.16778338364599 * S_Recency + 0.32089861635238 * S_Teenhome ;
1167014   +   H15  =    -0.15703510827879 * S_Income  +    -0.30977841002562 * S_Kidhome
1167015   +          +    -0.14543196273578 * S_MntFishProducts
1167016   +          +     0.32223695896711 * S_MntFruits  +    -0.31846203211698 *
1167017   +        S_MntGoldProds  +     -1.4125160823105 * S_MntMeatProducts
1167018   +          +     0.49374793444169 * S_MntSweetProducts
1167019   +          +     0.39699716010219 * S_MntWines  +    -0.88140331687645 *
1167020   +        S_NumCatalogPurchases  +    -0.87657222813687 * S_NumDealsPurchases
1167021   +          +     1.23754786782746 * S_NumStorePurchases
1167022   +          +     1.11316667348511 * S_NumWebPurchases
1167023   +          +    -1.08592446439781 * S_NumWebVisitsMonth
1167024   +          +     0.66958517589542 * S_Recency  +     0.06799032788481 *
1167025   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H15 = -0.15703510827879 * S_Income + -0.30977841002562 * S_Kidhome +
-0.14543196273578 * S_MntFishProducts + 0.32223695896711 * S_MntFruits + -0.31846203211698 *
S_MntGoldProds + -1.4125160823105 * S_MntMeatProducts + 0.49374793444169 * S_MntSweetProducts
+ 0.39699716010219 * S_MntWines + -0.88140331687645 * S_NumCatalogPurchases +
-0.87657222813687 * S_NumDealsPurchases + 1.23754786782746 * S_NumStorePurchases +
1.11316667348511 * S_NumWebPurchases + -1.08592446439781 * S_NumWebVisitsMonth +
0.66958517589542 * S_Recency + 0.06799032788481 * S_Teenhome ;
1167026   +   H16  =    -0.10360901553583 * S_Income  +     0.39257497240865 * S_Kidhome
1167027   +          +     0.29549884005341 * S_MntFishProducts
1167028   +          +     0.04922491353914 * S_MntFruits  +     -0.1412659458221 *
1167029   +        S_MntGoldProds  +    -0.12361454534126 * S_MntMeatProducts
1167030   +          +    -0.11909215986981 * S_MntSweetProducts
1167031   +          +     0.11430484977092 * S_MntWines  +    -0.66235553839539 *
1167032   +        S_NumCatalogPurchases  +     0.17261763180198 * S_NumDealsPurchases
1167033   +          +     0.30109334594548 * S_NumStorePurchases
1167034   +          +     0.01985762767489 * S_NumWebPurchases
1167035   +          +     0.44965133281333 * S_NumWebVisitsMonth
1167036   +          +     0.32338634259192 * S_Recency  +    -0.04032956941805 *
1167037   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H16 = -0.10360901553583 * S_Income + 0.39257497240865 * S_Kidhome +
0.29549884005341 * S_MntFishProducts + 0.04922491353914 * S_MntFruits + -0.1412659458221 *
S_MntGoldProds + -0.12361454534126 * S_MntMeatProducts + -0.11909215986981 *
S_MntSweetProducts + 0.11430484977092 * S_MntWines + -0.66235553839539 * S_NumCatalogPurchases
+ 0.17261763180198 * S_NumDealsPurchases + 0.30109334594548 * S_NumStorePurchases +
0.01985762767489 * S_NumWebPurchases + 0.44965133281333 * S_NumWebVisitsMonth +
0.32338634259192 * S_Recency + -0.04032956941805 * S_Teenhome ;
1167038   +   H11  = H11  +    -0.23026310289024 * AcceptedCmp10
1167039   +          +    -0.82550012364234 * AcceptedCmp20  +    -0.67764228269441 *
1167040   +        AcceptedCmp30  +    -0.51547666117685 * AcceptedCmp40
1167041   +          +    -0.36424958084824 * AcceptedCmp50  +       0.119862855783 *
1167042   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.23026310289024 * AcceptedCmp10 + -0.82550012364234 *
AcceptedCmp20 + -0.67764228269441 * AcceptedCmp30 + -0.51547666117685 * AcceptedCmp40 +
-0.36424958084824 * AcceptedCmp50 + 0.119862855783 * Complain0 ;
1167043   +   H12  = H12  +     0.02722288857426 * AcceptedCmp10
1167044   +          +      0.1236576068539 * AcceptedCmp20  +    -0.31265425960737 *
1167045   +        AcceptedCmp30  +    -0.25076565034266 * AcceptedCmp40
1167046   +          +    -0.20158659730872 * AcceptedCmp50  +    -0.43687103612629 *
1167047   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.02722288857426 * AcceptedCmp10 + 0.1236576068539 *
AcceptedCmp20 + -0.31265425960737 * AcceptedCmp30 + -0.25076565034266 * AcceptedCmp40 +
-0.20158659730872 * AcceptedCmp50 + -0.43687103612629 * Complain0 ;
1167048   +   H13  = H13  +     0.21852176280571 * AcceptedCmp10
1167049   +          +     0.01727991436107 * AcceptedCmp20  +     0.19303261094625 *
1167050   +        AcceptedCmp30  +    -0.65492191560509 * AcceptedCmp40
1167051   +          +    -0.09636750660684 * AcceptedCmp50  +     0.07579128571046 *
1167052   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.21852176280571 * AcceptedCmp10 + 0.01727991436107 *
AcceptedCmp20 + 0.19303261094625 * AcceptedCmp30 + -0.65492191560509 * AcceptedCmp40 +
-0.09636750660684 * AcceptedCmp50 + 0.07579128571046 * Complain0 ;
1167053   +   H14  = H14  +     0.20819294353855 * AcceptedCmp10
1167054   +          +      0.5159102831901 * AcceptedCmp20  +     0.55295587458643 *
1167055   +        AcceptedCmp30  +     0.80682431419623 * AcceptedCmp40
1167056   +          +     0.74007057798158 * AcceptedCmp50  +     -0.4573052390807 *
1167057   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.20819294353855 * AcceptedCmp10 + 0.5159102831901 *
AcceptedCmp20 + 0.55295587458643 * AcceptedCmp30 + 0.80682431419623 * AcceptedCmp40 +
0.74007057798158 * AcceptedCmp50 + -0.4573052390807 * Complain0 ;
1167058   +   H15  = H15  +     1.26330939420524 * AcceptedCmp10
1167059   +          +     0.29494505935793 * AcceptedCmp20  +     0.25561322032419 *
1167060   +        AcceptedCmp30  +     0.50102236777897 * AcceptedCmp40
1167061   +          +     0.20696267245027 * AcceptedCmp50  +    -0.00849145233901 *
1167062   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 1.26330939420524 * AcceptedCmp10 + 0.29494505935793 *
AcceptedCmp20 + 0.25561322032419 * AcceptedCmp30 + 0.50102236777897 * AcceptedCmp40 +
0.20696267245027 * AcceptedCmp50 + -0.00849145233901 * Complain0 ;
1167063   +   H16  = H16  +     0.03638428330381 * AcceptedCmp10
1167064   +          +     0.27994215452657 * AcceptedCmp20  +    -0.03861840445025 *
1167065   +        AcceptedCmp30  +      0.3398057347433 * AcceptedCmp40
1167066   +          +    -0.00738335957724 * AcceptedCmp50  +      0.0447804375799 *
1167067   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.03638428330381 * AcceptedCmp10 + 0.27994215452657 *
AcceptedCmp20 + -0.03861840445025 * AcceptedCmp30 + 0.3398057347433 * AcceptedCmp40 +
-0.00738335957724 * AcceptedCmp50 + 0.0447804375799 * Complain0 ;
1167068   +   H11  = H11  +     0.27482405283962 * Education2n_Cycle
1167069   +          +     0.11084012456612 * EducationBasic  +    -0.23835071987159 *
1167070   +        EducationGraduation  +    -0.10167082180552 * EducationMaster
1167071   +          +     0.51015833145636 * Marital_StatusDivorced
1167072   +          +     -1.1653662063616 * Marital_StatusMarried
1167073   +          +     1.19396547750441 * Marital_StatusSingle
1167074   +          +    -0.99605751789992 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.27482405283962 * Education2n_Cycle + 0.11084012456612 *
EducationBasic + -0.23835071987159 * EducationGraduation + -0.10167082180552 * EducationMaster
+ 0.51015833145636 * Marital_StatusDivorced + -1.1653662063616 * Marital_StatusMarried +
1.19396547750441 * Marital_StatusSingle + -0.99605751789992 * Marital_StatusTogether ;
1167075   +   H12  = H12  +    -0.05268347704739 * Education2n_Cycle
1167076   +          +     0.19362065968028 * EducationBasic  +    -0.26784257195414 *
1167077   +        EducationGraduation  +     0.16650577465959 * EducationMaster
1167078   +          +     0.09154288513995 * Marital_StatusDivorced
1167079   +          +     0.06725684628382 * Marital_StatusMarried
1167080   +          +     0.11327659191494 * Marital_StatusSingle
1167081   +          +     0.01793778876811 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.05268347704739 * Education2n_Cycle + 0.19362065968028 *
EducationBasic + -0.26784257195414 * EducationGraduation + 0.16650577465959 * EducationMaster
+ 0.09154288513995 * Marital_StatusDivorced + 0.06725684628382 * Marital_StatusMarried +
0.11327659191494 * Marital_StatusSingle + 0.01793778876811 * Marital_StatusTogether ;
1167082   +   H13  = H13  +     -0.1027084329077 * Education2n_Cycle
1167083   +          +    -0.01342449140757 * EducationBasic  +    -0.35627920427273 *
1167084   +        EducationGraduation  +    -0.05554656531793 * EducationMaster
1167085   +          +     0.37591653615852 * Marital_StatusDivorced
1167086   +          +    -0.05024236790132 * Marital_StatusMarried
1167087   +          +    -0.28317154997144 * Marital_StatusSingle
1167088   +          +    -0.19247490223101 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.1027084329077 * Education2n_Cycle + -0.01342449140757 *
EducationBasic + -0.35627920427273 * EducationGraduation + -0.05554656531793 * EducationMaster
+ 0.37591653615852 * Marital_StatusDivorced + -0.05024236790132 * Marital_StatusMarried +
-0.28317154997144 * Marital_StatusSingle + -0.19247490223101 * Marital_StatusTogether ;
1167089   +   H14  = H14  +     -0.4162491480577 * Education2n_Cycle
1167090   +          +     0.38075572764074 * EducationBasic  +    -0.28169469529121 *
1167091   +        EducationGraduation  +       0.638986138084 * EducationMaster
1167092   +          +    -0.44885292450558 * Marital_StatusDivorced
1167093   +          +     0.78958791519299 * Marital_StatusMarried
1167094   +          +    -0.09688714431356 * Marital_StatusSingle
1167095   +          +     0.84239030196202 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.4162491480577 * Education2n_Cycle + 0.38075572764074 *
EducationBasic + -0.28169469529121 * EducationGraduation + 0.638986138084 * EducationMaster +
-0.44885292450558 * Marital_StatusDivorced + 0.78958791519299 * Marital_StatusMarried +
-0.09688714431356 * Marital_StatusSingle + 0.84239030196202 * Marital_StatusTogether ;
1167096   +   H15  = H15  +     0.33126657974568 * Education2n_Cycle
1167097   +          +     0.44539039262703 * EducationBasic  +    -0.09154902903865 *
1167098   +        EducationGraduation  +    -0.26400363440725 * EducationMaster
1167099   +          +    -0.30801073895989 * Marital_StatusDivorced
1167100   +          +     -0.1285150749223 * Marital_StatusMarried
1167101   +          +     0.06775542164414 * Marital_StatusSingle
1167102   +          +    -0.13032366945766 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.33126657974568 * Education2n_Cycle + 0.44539039262703 *
EducationBasic + -0.09154902903865 * EducationGraduation + -0.26400363440725 * EducationMaster
+ -0.30801073895989 * Marital_StatusDivorced + -0.1285150749223 * Marital_StatusMarried +
0.06775542164414 * Marital_StatusSingle + -0.13032366945766 * Marital_StatusTogether ;
1167103   +   H16  = H16  +     0.02030175222681 * Education2n_Cycle
1167104   +          +    -0.19579401096879 * EducationBasic  +      0.2070703930869 *
1167105   +        EducationGraduation  +    -0.40706983167068 * EducationMaster
1167106   +          +     0.22193599090368 * Marital_StatusDivorced
1167107   +          +    -0.54544672042168 * Marital_StatusMarried
1167108   +          +    -0.02237436019864 * Marital_StatusSingle
1167109   +          +    -0.21979468164854 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.02030175222681 * Education2n_Cycle + -0.19579401096879 *
EducationBasic + 0.2070703930869 * EducationGraduation + -0.40706983167068 * EducationMaster +
0.22193599090368 * Marital_StatusDivorced + -0.54544672042168 * Marital_StatusMarried +
-0.02237436019864 * Marital_StatusSingle + -0.21979468164854 * Marital_StatusTogether ;
1167110   +   H11  =    -1.24550293901788 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -1.24550293901788 + H11 ;
1167111   +   H12  =     0.36762263942809 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.36762263942809 + H12 ;
1167112   +   H13  =     0.07010867577103 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = 0.07010867577103 + H13 ;
1167113   +   H14  =    -1.94014549272156 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = -1.94014549272156 + H14 ;
1167114   +   H15  =     0.17666656180153 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = 0.17666656180153 + H15 ;
1167115   +   H16  =    -1.64626406576709 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = -1.64626406576709 + H16 ;
1167116   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1167117   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1167118   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1167119   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1167120   +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
1167121   +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
1167122   +END;
MPRINT(EM_DIAGRAM):   END;
1167123   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1167124   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1167125   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1167126   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1167127   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1167128   +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
1167129   +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
1167130   +END;
MPRINT(EM_DIAGRAM):   END;
1167131   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1167132   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1167133   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1167134   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1167135   +   P_DepVar1  =     4.21126046696691 * H11  +      0.6565061288056 * H12
1167136   +          +    -1.92484011508628 * H13  +    -3.74020722142387 * H14
1167137   +          +    -3.27353026762143 * H15  +     -1.2596922869974 * H16 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 4.21126046696691 * H11 + 0.6565061288056 * H12 +
-1.92484011508628 * H13 + -3.74020722142387 * H14 + -3.27353026762143 * H15 + -1.2596922869974
* H16 ;
1167138   +   P_DepVar1  =    -1.36806658950323 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.36806658950323 + P_DepVar1 ;
1167139   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1167140   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1167141   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1167142   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1167143   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1167144   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1167145   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1167146   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1167147   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1167148   +END;
MPRINT(EM_DIAGRAM):   END;
1167149   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1167150   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1167151   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1167152   +END;
MPRINT(EM_DIAGRAM):   END;
1167153   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1167154   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1167155   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1167156   +END;
MPRINT(EM_DIAGRAM):   END;
1167157   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1167158   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1167159   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1167160   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1167161   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1167162   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1167163   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1167164   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1167165   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1167166   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1167167   +END;
MPRINT(EM_DIAGRAM):   END;
1167168   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1167169   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1167170   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1167171   +drop
1167172   +H11
1167173   +H12
1167174   +H13
1167175   +H14
1167176   +H15
1167177   +H16
1167178   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 ;
1167179   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1167180    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1167181    quit;
1167182    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1167183    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1167184    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1167185    retain ID 2 Node "Neural35";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Neural35";
1167186    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1167187    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2016 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2016 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1167188    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1167189    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1167190    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2016 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2016 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1167191    proc sort data=EMWS8.Neural35_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Neural35_variableset out=_temp2(keep=NAME CREATOR);
1167192    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1167193    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set EMWS8.NEURAL35_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1167194    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1167195    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1167196    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1167197    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1167198    proc contents data=EMWS8.Neural35_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Neural35_train out=_meta(keep=NAME) noprint;
1167199    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
1167200    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1167201    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1167202    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1167203    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1167204    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1167205    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1167206    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 53 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1167207    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1167208    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1167208  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 970 rows and 5 columns.
 
1167209    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1167210    proc append base=EMWS8.Ensmbl9_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl9_FCMP data=_tempx;
1167211    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL9_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 970 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL9_FCMP has 970 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1167212    filename _pref
1167212  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
1167213    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1167214    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
1167215   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1167216   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1167217   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1167218   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1167219   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1167220   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1167221    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1167222    quit;
1167223    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1167224    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1167225    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1167226    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
1167227    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1167228    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1167229    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1167230    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1167231    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1167232    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
1167233    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1167234    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1167235    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1167236    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1167237    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1167238    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1167239    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
1167240    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
1167241    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1167242    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1167243    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1167244    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1167245    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1167246    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1167247    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1167248    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1167249    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1167249  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.
 
1167250    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1167251    proc append base=EMWS8.Ensmbl9_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl9_FCMP data=_tempx;
1167252    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL9_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL9_FCMP has 974 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1167253    filename _pref
1167253  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
1167254    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1167255    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
1167256   +
1167257   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1167258   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1167258  !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1167259   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1167260   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1167261   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1167262   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1167263   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1167264    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1167265    quit;
1167266    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1167267    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1167268    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1167269    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
1167270    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1167271    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1167272    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1167273    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1167274    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1167275    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
1167276    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1167277    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1167278    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1167279    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1167280    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1167281    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1167282    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
1167283    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1167284    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1167285    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1167286    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1167287    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1167288    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1167289    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1167290    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1167291    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1167292    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1167292  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.
 
1167293    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1167294    proc append base=EMWS8.Ensmbl9_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl9_FCMP data=_tempx;
1167295    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL9_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL9_FCMP has 1013 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1167296    filename _pref
1167296  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
1167297    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1167298    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
1167299   +
1167300   +
1167301   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
1167302   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
1167303   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
1167304   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
1167305   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
1167306   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1167307   +
1167308   +
1167309   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
1167310   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
1167311   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
1167312   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
1167313   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
1167314   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1167315   +
1167316   +
1167317   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
1167318   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
1167319   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
1167320   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
1167321   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
1167322   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1167323   +
1167324   +
1167325   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
1167326   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
1167327   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
1167328   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
1167329   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
1167330   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1167331   +
1167332   +
1167333   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
1167334   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
1167335   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
1167336   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
1167337   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
1167338   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1167339   +
1167340   +
1167341   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
1167342   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
1167343   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
1167344   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
1167345   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
1167346   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1167347   +
1167348   +
1167349   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
1167350   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
1167351   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
1167352   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
1167353   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
1167354   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1167355   +
1167356   +
1167357   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
1167358   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
1167359   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
1167360   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
1167361   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
1167362   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1167363   +if
1167364   +_FILTERNORM1 not in ( '.')
1167365   + and
1167366   +_FILTERNORM2 not in ( '.')
1167367   + and
1167368   +_FILTERNORM3 not in ( '.')
1167369   + and
1167370   +_FILTERNORM4 not in ( '.')
1167371   + and
1167372   +_FILTERNORM5 not in ( '.')
1167373   + and
1167374   +_FILTERNORM6 not in ( '.')
1167375   + and
1167376   +_FILTERNORM7 not in ( ' ')
1167377   + and
1167378   +_FILTERNORM8 not in ( ' ')
1167379   +and
1167380   +( Dt_Customer ne .)
1167381   +and ( Income ne . and (Income<=107000))
1167382   +and ( Kidhome ne .)
1167383   +and ( MntFishProducts ne .)
1167384   +and ( MntFruits ne .)
1167385   +and ( MntGoldProds ne .)
1167386   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
1167387   +and ( MntSweetProducts ne .)
1167388   +and ( MntWines ne .)
1167389   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
1167390   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
1167391   +and ( NumStorePurchases ne .)
1167392   +and ( NumWebPurchases ne .)
1167393   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
1167394   +and ( Recency ne .)
1167395   +and ( Teenhome ne .)
1167396   +and ( Year_Birth ne .)
1167397   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and (
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and (
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and (
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and (
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne
.) and ( Year_Birth ne .) then do;
1167398   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
1167399   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
1167400   +end;
MPRINT(EM_DIAGRAM):   end;
1167401   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
1167402   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1167403    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1167404    quit;
1167405    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1167406    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1167407    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1167408    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
1167409    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1167410    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1167411    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1167412    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1167413    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1167414    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
1167415    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1167416    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1167417    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1167418    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1167419    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1167420    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1167421    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
1167422    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
1167423    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1167424    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1167425    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1167426    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1167427    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1167428    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1167429    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1167430    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1167431    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1167431  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.
 
1167432    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1167433    proc append base=EMWS8.Ensmbl9_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl9_FCMP data=_tempx;
1167434    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL9_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL9_FCMP has 1079 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1167435    %macro varDept(fcmpdata=,id=);
1167436    %global nobs&id scoreFlag&id;
1167437    %let scoreFlag&id = 0;
1167438    %if &id=1 or ^&fcmpStart %then %do;
1167439    proc sort data=&fcmpdata out=_temp&id nodupkey;
1167440    by NAME;
1167441    where id=&id and LHS in( %let j=1;
1167442    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
1167443    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
1167444    "&var" %let j = %eval(&j+1);
1167445    %end;
1167446    );
1167447    run;
1167448    %let dsid = %sysfunc(open(_temp&id));
1167449    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1167450    %let dsid = %sysfunc(close(&dsid));
1167451    %if &&nobs&id %then %do;
1167452    %let scoreFlag&id = 1;
1167453    %let fcmpStart = 1;
1167454    %end;
1167455    %else %let fcmpStart = 0;
1167456    %end;
1167457    %else %do;
1167458    proc sort data=&fcmpdata out=_tempid;
1167459    where id=&id;
1167460    by LHS;
1167461    run;
1167462    %let dsid = %sysfunc(open(_tempid));
1167463    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1167464    %let dsid = %sysfunc(close(&dsid));
1167465    %if ^&&nobs&id %then %do;
1167466    proc datasets lib=work nolist;
1167467    delete _tempid;
1167468    run;
1167469    quit;
1167470    %end;
1167471    %else %do;
1167472    data _tempAll;
1167473    set %let j=%eval(&id-1);
1167474    %do x=1 %to &j;
1167475    %if &&nobs&x %then %do;
1167476    _temp&x %end;
1167477    %end;
1167478    ;
1167479    run;
1167480    proc sql;
1167481    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
1167481  ! work._tempid p2 where p.name=p2.lhs;
1167482    quit;
1167483    data _temp&id;
1167484    set _temp&id;
1167485    where LHS ne '' and NAME ne '' and Node ne '';
1167486    run;
1167487    proc datasets lib=work nolist;
1167488    delete _tempAll;
1167489    run;
1167490    %let dsid = %sysfunc(open(_temp&id));
1167491    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1167492    %let dsid = %sysfunc(close(&dsid));
1167493    %if ^&&nobs&id %then %do;
1167494    proc datasets lib=work nolist;
1167495    delete _temp&id;
1167496    run;
1167497    quit;
1167498    %end;
1167499    %else %do;
1167500    %let scoreFlag&id = 1;
1167501    data _temp&id;
1167502    set _temp&id;
1167503    where LHS ne NAME and node ne '';
1167504    run;
1167505    %let dsid = %sysfunc(open(_temp&id));
1167506    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1167507    %let dsid = %sysfunc(close(&dsid));
1167508    %if ^&&nobs&id %then %do;
1167509    proc datasets lib=work nolist;
1167510    delete _temp&id;
1167511    run;
1167512    quit;
1167513    %end;
1167514    %else %do;
1167515    proc sort data=_temp&id nodupkey;
1167516    by LHS NAME;
1167517    run;
1167518    %end;
1167519    %end;
1167520    %end;
1167521    %end;
1167522    %mend varDept;
1167523    %macro optCode(outdata=fcmpdata);
1167524    %global fcmpStart;
1167525    %let fcmpStart = 0;
1167526    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
1167527    %let NumNodes=9;
1167528    %do k=1 %to &NumNodes;
1167529    %vardept(fcmpdata=&outdata, id=&k);
1167530    %end;
1167531    %mend optCode;
1167532    %optcode(outData=EMWS8.Ensmbl9_FCMP);
MPRINT(EM_DIAGRAM):
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl9_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL9_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl9_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: There were 98 observations read from the data set EMWS8.ENSMBL9_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 73 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 25 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl9_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL9_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl9_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL9_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl9_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set EMWS8.ENSMBL9_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 25 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 25 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp5;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP5 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl9_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set EMWS8.ENSMBL9_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 25 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 25 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp6;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP6 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl9_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 66 observations read from the data set EMWS8.ENSMBL9_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 25 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 25 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl9_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL9_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl9_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL9_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;
 
1167533    filename _pref
1167533  ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural30\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Neural30\EMPUBLISHSCORE.sas";
1167534    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1167535    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Neural30\EMPUBLISHSCORE.sas.
1167536   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1167537   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1167538   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1167539   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1167540   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1167541   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1167542   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1167543   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1167544   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1167545   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1167546   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1167547   +LENGTH _WARN_ $4
1167548   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
1167549   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1167550   +
1167551   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1167552   +
1167553   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1167554   +
1167555   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1167556   +
1167557   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1167558   +
1167559   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1167560   +
1167561   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1167562   +
1167563   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1167564   +
1167565   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1167566   +
1167567   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1167568   +
1167569   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1167570   +
1167571   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1167572   +
1167573   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1167574   +
1167575   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1167576   +
1167577   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1167578   +
1167579   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1167580   +
1167581   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1167582   +
1167583   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1167584   +
1167585   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1167586   +
1167587   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1167588   +
1167589   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1167590   +
1167591   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1167592   +
1167593   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1167594   +
1167595   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1167596   +
1167597   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1167598   +
1167599   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1167600   +
1167601   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1167602   +
1167603   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1167604   +
1167605   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1167606   +
1167607   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1167608   +
1167609   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1167610   +
1167611   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1167612   +
1167613   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1167614   +
1167615   +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
1167616   +
1167617   +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
1167618   +
1167619   +      label H17 = 'Hidden: H1=7' ;
MPRINT(EM_DIAGRAM):   label H17 = 'Hidden: H1=7' ;
1167620   +
1167621   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1167622   +
1167623   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1167624   +
1167625   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1167626   +
1167627   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1167628   +
1167629   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1167630   +
1167631   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1167632   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1167633   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1167634   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1167635   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1167636   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1167637   +end;
MPRINT(EM_DIAGRAM):   end;
1167638   +else do;
MPRINT(EM_DIAGRAM):   else do;
1167639   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1167640   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1167641   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1167642   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1167643   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1167644   +   end;
MPRINT(EM_DIAGRAM):   end;
1167645   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1167646   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1167647   +   end;
MPRINT(EM_DIAGRAM):   end;
1167648   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1167649   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1167650   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1167651   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1167652   +   end;
MPRINT(EM_DIAGRAM):   end;
1167653   +end;
MPRINT(EM_DIAGRAM):   end;
1167654   +
1167655   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1167656   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1167657   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1167658   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1167659   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1167660   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1167661   +end;
MPRINT(EM_DIAGRAM):   end;
1167662   +else do;
MPRINT(EM_DIAGRAM):   else do;
1167663   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1167664   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1167665   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1167666   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1167667   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1167668   +   end;
MPRINT(EM_DIAGRAM):   end;
1167669   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1167670   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1167671   +   end;
MPRINT(EM_DIAGRAM):   end;
1167672   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1167673   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1167674   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1167675   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1167676   +   end;
MPRINT(EM_DIAGRAM):   end;
1167677   +end;
MPRINT(EM_DIAGRAM):   end;
1167678   +
1167679   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1167680   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1167681   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1167682   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1167683   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1167684   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1167685   +end;
MPRINT(EM_DIAGRAM):   end;
1167686   +else do;
MPRINT(EM_DIAGRAM):   else do;
1167687   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1167688   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1167689   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1167690   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1167691   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1167692   +   end;
MPRINT(EM_DIAGRAM):   end;
1167693   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1167694   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1167695   +   end;
MPRINT(EM_DIAGRAM):   end;
1167696   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1167697   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1167698   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1167699   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1167700   +   end;
MPRINT(EM_DIAGRAM):   end;
1167701   +end;
MPRINT(EM_DIAGRAM):   end;
1167702   +
1167703   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1167704   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1167705   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1167706   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1167707   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1167708   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1167709   +end;
MPRINT(EM_DIAGRAM):   end;
1167710   +else do;
MPRINT(EM_DIAGRAM):   else do;
1167711   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1167712   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1167713   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1167714   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1167715   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1167716   +   end;
MPRINT(EM_DIAGRAM):   end;
1167717   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1167718   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1167719   +   end;
MPRINT(EM_DIAGRAM):   end;
1167720   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1167721   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1167722   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1167723   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1167724   +   end;
MPRINT(EM_DIAGRAM):   end;
1167725   +end;
MPRINT(EM_DIAGRAM):   end;
1167726   +
1167727   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1167728   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1167729   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1167730   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1167731   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1167732   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1167733   +end;
MPRINT(EM_DIAGRAM):   end;
1167734   +else do;
MPRINT(EM_DIAGRAM):   else do;
1167735   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1167736   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1167737   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1167738   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1167739   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1167740   +   end;
MPRINT(EM_DIAGRAM):   end;
1167741   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1167742   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1167743   +   end;
MPRINT(EM_DIAGRAM):   end;
1167744   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1167745   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1167746   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1167747   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1167748   +   end;
MPRINT(EM_DIAGRAM):   end;
1167749   +end;
MPRINT(EM_DIAGRAM):   end;
1167750   +
1167751   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1167752   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1167753   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1167754   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1167755   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1167756   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1167757   +end;
MPRINT(EM_DIAGRAM):   end;
1167758   +else do;
MPRINT(EM_DIAGRAM):   else do;
1167759   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1167760   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1167761   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1167762   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1167763   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1167764   +   end;
MPRINT(EM_DIAGRAM):   end;
1167765   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1167766   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1167767   +   end;
MPRINT(EM_DIAGRAM):   end;
1167768   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1167769   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1167770   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1167771   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1167772   +   end;
MPRINT(EM_DIAGRAM):   end;
1167773   +end;
MPRINT(EM_DIAGRAM):   end;
1167774   +
1167775   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1167776   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
1167777   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1167778   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1167779   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1167780   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1167781   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1167782   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1167783   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1167784   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1167785   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1167786   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1167787   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1167788   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1167789   +end;
MPRINT(EM_DIAGRAM):   end;
1167790   +else do;
MPRINT(EM_DIAGRAM):   else do;
1167791   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1167792   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1167793   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1167794   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1167795   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1167796   +   end;
MPRINT(EM_DIAGRAM):   end;
1167797   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1167798   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1167799   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1167800   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1167801   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1167802   +   end;
MPRINT(EM_DIAGRAM):   end;
1167803   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1167804   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1167805   +   end;
MPRINT(EM_DIAGRAM):   end;
1167806   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1167807   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1167808   +   end;
MPRINT(EM_DIAGRAM):   end;
1167809   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1167810   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1167811   +   end;
MPRINT(EM_DIAGRAM):   end;
1167812   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1167813   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1167814   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1167815   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1167816   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1167817   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1167818   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1167819   +   end;
MPRINT(EM_DIAGRAM):   end;
1167820   +end;
MPRINT(EM_DIAGRAM):   end;
1167821   +
1167822   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1167823   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1167824   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
1167825   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1167826   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1167827   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1167828   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1167829   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1167830   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1167831   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1167832   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1167833   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1167834   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1167835   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1167836   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1167837   +end;
MPRINT(EM_DIAGRAM):   end;
1167838   +else do;
MPRINT(EM_DIAGRAM):   else do;
1167839   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1167840   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1167841   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1167842   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1167843   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1167844   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1167845   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1167846   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1167847   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1167848   +         end;
MPRINT(EM_DIAGRAM):   end;
1167849   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1167850   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1167851   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1167852   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1167853   +            end;
MPRINT(EM_DIAGRAM):   end;
1167854   +         end;
MPRINT(EM_DIAGRAM):   end;
1167855   +      end;
MPRINT(EM_DIAGRAM):   end;
1167856   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1167857   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1167858   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1167859   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1167860   +         end;
MPRINT(EM_DIAGRAM):   end;
1167861   +      end;
MPRINT(EM_DIAGRAM):   end;
1167862   +   end;
MPRINT(EM_DIAGRAM):   end;
1167863   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1167864   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1167865   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1167866   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1167867   +      end;
MPRINT(EM_DIAGRAM):   end;
1167868   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1167869   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1167870   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1167871   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1167872   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1167873   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1167874   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1167875   +         end;
MPRINT(EM_DIAGRAM):   end;
1167876   +      end;
MPRINT(EM_DIAGRAM):   end;
1167877   +   end;
MPRINT(EM_DIAGRAM):   end;
1167878   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1167879   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1167880   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1167881   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1167882   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1167883   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1167884   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1167885   +   end;
MPRINT(EM_DIAGRAM):   end;
1167886   +end;
MPRINT(EM_DIAGRAM):   end;
1167887   +
1167888   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1167889   +*** Checking missing input Interval
1167890   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1167891   +
1167892   +IF NMISS(
1167893   +   Income ,
1167894   +   Kidhome ,
1167895   +   MntFishProducts ,
1167896   +   MntFruits ,
1167897   +   MntGoldProds ,
1167898   +   MntMeatProducts ,
1167899   +   MntSweetProducts ,
1167900   +   MntWines ,
1167901   +   NumCatalogPurchases ,
1167902   +   NumDealsPurchases ,
1167903   +   NumStorePurchases ,
1167904   +   NumWebPurchases ,
1167905   +   NumWebVisitsMonth ,
1167906   +   Recency ,
1167907   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Income , Kidhome , MntFishProducts , MntFruits , MntGoldProds
, MntMeatProducts , MntSweetProducts , MntWines , NumCatalogPurchases , NumDealsPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , Recency , Teenhome ) THEN DO;
1167908   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1167909   +
1167910   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1167911   +END;
MPRINT(EM_DIAGRAM):   END;
1167912   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1167913   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1167914   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1167915   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1167916   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1167917   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1167918   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1167919   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1167920   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1167921   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1167922   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1167923   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1167924   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1167925   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1167926   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1167927   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1167928   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1167929   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1167930   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1167931   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1167932   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1167933   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1167934   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1167935   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1167936   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1167937   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1167938   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1167939   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1167940   +END;
MPRINT(EM_DIAGRAM):   END;
1167941   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1167942   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1167943   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1167944   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1167945   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1167946   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1167947   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1167948   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1167949   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1167950   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1167951   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1167952   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1167953   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1167954   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
1167955   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1167956   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1167957   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1167958   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1167959   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1167960   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1167961   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1167962   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1167963   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1167964   +   ELSE S_NumCatalogPurchases
1167965   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1167966   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1167967   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1167968   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1167969   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1167970   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1167971   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1167972   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1167973   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1167974   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1167975   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1167976   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1167977   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1167978   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1167979   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1167980   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1167981   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1167982   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1167983   +END;
MPRINT(EM_DIAGRAM):   END;
1167984   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1167985   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1167986   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1167987   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1167988   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1167989   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1167990   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1167991   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1167992   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1167993   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1167994   +   H11  =    -0.59781928082243 * S_Income  +     0.49830142312288 * S_Kidhome
1167995   +          +    -0.00045024466632 * S_MntFishProducts
1167996   +          +    -0.22421712710333 * S_MntFruits  +    -0.19010144853469 *
1167997   +        S_MntGoldProds  +    -0.53373773623953 * S_MntMeatProducts
1167998   +          +     0.17506402203495 * S_MntSweetProducts
1167999   +          +    -0.28551398649672 * S_MntWines  +       0.019870944777 *
1168000   +        S_NumCatalogPurchases  +     0.03537776181533 * S_NumDealsPurchases
1168001   +          +     0.05580468715403 * S_NumStorePurchases
1168002   +          +    -0.29131611132704 * S_NumWebPurchases
1168003   +          +    -0.40690084025802 * S_NumWebVisitsMonth
1168004   +          +     0.48640195058901 * S_Recency  +     0.31820890239661 *
1168005   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = -0.59781928082243 * S_Income + 0.49830142312288 * S_Kidhome +
-0.00045024466632 * S_MntFishProducts + -0.22421712710333 * S_MntFruits + -0.19010144853469 *
S_MntGoldProds + -0.53373773623953 * S_MntMeatProducts + 0.17506402203495 * S_MntSweetProducts
+ -0.28551398649672 * S_MntWines + 0.019870944777 * S_NumCatalogPurchases + 0.03537776181533 *
S_NumDealsPurchases + 0.05580468715403 * S_NumStorePurchases + -0.29131611132704 *
S_NumWebPurchases + -0.40690084025802 * S_NumWebVisitsMonth + 0.48640195058901 * S_Recency +
0.31820890239661 * S_Teenhome ;
1168006   +   H12  =    -0.41871753512335 * S_Income  +      0.6025072461821 * S_Kidhome
1168007   +          +    -0.03132724937716 * S_MntFishProducts
1168008   +          +     0.19114182835046 * S_MntFruits  +     0.13483463809539 *
1168009   +        S_MntGoldProds  +    -0.63593603749443 * S_MntMeatProducts
1168010   +          +    -0.07569302401223 * S_MntSweetProducts
1168011   +          +     0.67050112032753 * S_MntWines  +    -0.23159243932208 *
1168012   +        S_NumCatalogPurchases  +    -0.07183698407409 * S_NumDealsPurchases
1168013   +          +     0.54619681114623 * S_NumStorePurchases
1168014   +          +     0.44325129671249 * S_NumWebPurchases
1168015   +          +    -1.25054401670605 * S_NumWebVisitsMonth
1168016   +          +      1.2376290916151 * S_Recency  +     0.43747371517287 *
1168017   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -0.41871753512335 * S_Income + 0.6025072461821 * S_Kidhome +
-0.03132724937716 * S_MntFishProducts + 0.19114182835046 * S_MntFruits + 0.13483463809539 *
S_MntGoldProds + -0.63593603749443 * S_MntMeatProducts + -0.07569302401223 *
S_MntSweetProducts + 0.67050112032753 * S_MntWines + -0.23159243932208 * S_NumCatalogPurchases
+ -0.07183698407409 * S_NumDealsPurchases + 0.54619681114623 * S_NumStorePurchases +
0.44325129671249 * S_NumWebPurchases + -1.25054401670605 * S_NumWebVisitsMonth +
1.2376290916151 * S_Recency + 0.43747371517287 * S_Teenhome ;
1168018   +   H13  =      0.0713579189325 * S_Income  +    -0.05759612462349 * S_Kidhome
1168019   +          +     0.07631777381832 * S_MntFishProducts
1168020   +          +    -0.00387785552441 * S_MntFruits  +    -0.21868916314192 *
1168021   +        S_MntGoldProds  +       0.072623883197 * S_MntMeatProducts
1168022   +          +     0.12637946833766 * S_MntSweetProducts
1168023   +          +    -0.37981663841124 * S_MntWines  +    -0.89958525403162 *
1168024   +        S_NumCatalogPurchases  +    -0.17471885937598 * S_NumDealsPurchases
1168025   +          +     0.15845618359126 * S_NumStorePurchases
1168026   +          +    -0.33296932705082 * S_NumWebPurchases
1168027   +          +      0.0260072296349 * S_NumWebVisitsMonth
1168028   +          +     0.02544749712977 * S_Recency  +    -0.17381561661022 *
1168029   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = 0.0713579189325 * S_Income + -0.05759612462349 * S_Kidhome +
0.07631777381832 * S_MntFishProducts + -0.00387785552441 * S_MntFruits + -0.21868916314192 *
S_MntGoldProds + 0.072623883197 * S_MntMeatProducts + 0.12637946833766 * S_MntSweetProducts +
-0.37981663841124 * S_MntWines + -0.89958525403162 * S_NumCatalogPurchases + -0.17471885937598
* S_NumDealsPurchases + 0.15845618359126 * S_NumStorePurchases + -0.33296932705082 *
S_NumWebPurchases + 0.0260072296349 * S_NumWebVisitsMonth + 0.02544749712977 * S_Recency +
-0.17381561661022 * S_Teenhome ;
1168030   +   H14  =    -0.47498613710851 * S_Income  +     0.09339198401437 * S_Kidhome
1168031   +          +    -0.13642352619174 * S_MntFishProducts
1168032   +          +     0.27167245582117 * S_MntFruits  +    -0.00579747559996 *
1168033   +        S_MntGoldProds  +     0.31591387319577 * S_MntMeatProducts
1168034   +          +     0.14125815807238 * S_MntSweetProducts
1168035   +          +     0.07862916790983 * S_MntWines  +    -0.58905358997534 *
1168036   +        S_NumCatalogPurchases  +     -0.5574069633995 * S_NumDealsPurchases
1168037   +          +     0.19718828261526 * S_NumStorePurchases
1168038   +          +    -0.24156925391919 * S_NumWebPurchases
1168039   +          +    -0.25711078938749 * S_NumWebVisitsMonth
1168040   +          +     0.38883063223812 * S_Recency  +     -0.2396731334184 *
1168041   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = -0.47498613710851 * S_Income + 0.09339198401437 * S_Kidhome +
-0.13642352619174 * S_MntFishProducts + 0.27167245582117 * S_MntFruits + -0.00579747559996 *
S_MntGoldProds + 0.31591387319577 * S_MntMeatProducts + 0.14125815807238 * S_MntSweetProducts
+ 0.07862916790983 * S_MntWines + -0.58905358997534 * S_NumCatalogPurchases + -0.5574069633995
* S_NumDealsPurchases + 0.19718828261526 * S_NumStorePurchases + -0.24156925391919 *
S_NumWebPurchases + -0.25711078938749 * S_NumWebVisitsMonth + 0.38883063223812 * S_Recency +
-0.2396731334184 * S_Teenhome ;
1168042   +   H15  =     0.24624924979609 * S_Income  +    -0.37052106312109 * S_Kidhome
1168043   +          +     0.13579628643404 * S_MntFishProducts
1168044   +          +    -0.05263868911164 * S_MntFruits  +    -0.01504675049991 *
1168045   +        S_MntGoldProds  +     -0.4202277804998 * S_MntMeatProducts
1168046   +          +    -0.01039299374426 * S_MntSweetProducts
1168047   +          +     0.71197420459135 * S_MntWines  +    -0.35973505575029 *
1168048   +        S_NumCatalogPurchases  +     -0.4415445481482 * S_NumDealsPurchases
1168049   +          +     0.58897740652611 * S_NumStorePurchases
1168050   +          +     0.24564485851062 * S_NumWebPurchases
1168051   +          +    -0.13976320243555 * S_NumWebVisitsMonth
1168052   +          +      0.1199367613063 * S_Recency  +    -0.15283161418313 *
1168053   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H15 = 0.24624924979609 * S_Income + -0.37052106312109 * S_Kidhome +
0.13579628643404 * S_MntFishProducts + -0.05263868911164 * S_MntFruits + -0.01504675049991 *
S_MntGoldProds + -0.4202277804998 * S_MntMeatProducts + -0.01039299374426 * S_MntSweetProducts
+ 0.71197420459135 * S_MntWines + -0.35973505575029 * S_NumCatalogPurchases + -0.4415445481482
* S_NumDealsPurchases + 0.58897740652611 * S_NumStorePurchases + 0.24564485851062 *
S_NumWebPurchases + -0.13976320243555 * S_NumWebVisitsMonth + 0.1199367613063 * S_Recency +
-0.15283161418313 * S_Teenhome ;
1168054   +   H16  =     0.23493799758749 * S_Income  +     0.07038278079069 * S_Kidhome
1168055   +          +    -0.45448768538367 * S_MntFishProducts
1168056   +          +     0.02622380709004 * S_MntFruits  +     0.14726698184115 *
1168057   +        S_MntGoldProds  +     0.65760183569767 * S_MntMeatProducts
1168058   +          +    -0.16936256277023 * S_MntSweetProducts
1168059   +          +    -0.40647066866305 * S_MntWines  +     0.99645493491726 *
1168060   +        S_NumCatalogPurchases  +     0.65587239961358 * S_NumDealsPurchases
1168061   +          +    -0.22309716855774 * S_NumStorePurchases
1168062   +          +    -0.61204529910842 * S_NumWebPurchases
1168063   +          +     0.43742228867615 * S_NumWebVisitsMonth
1168064   +          +    -0.56099034256092 * S_Recency  +     -0.2445351671148 *
1168065   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H16 = 0.23493799758749 * S_Income + 0.07038278079069 * S_Kidhome +
-0.45448768538367 * S_MntFishProducts + 0.02622380709004 * S_MntFruits + 0.14726698184115 *
S_MntGoldProds + 0.65760183569767 * S_MntMeatProducts + -0.16936256277023 * S_MntSweetProducts
+ -0.40647066866305 * S_MntWines + 0.99645493491726 * S_NumCatalogPurchases + 0.65587239961358
* S_NumDealsPurchases + -0.22309716855774 * S_NumStorePurchases + -0.61204529910842 *
S_NumWebPurchases + 0.43742228867615 * S_NumWebVisitsMonth + -0.56099034256092 * S_Recency +
-0.2445351671148 * S_Teenhome ;
1168066   +   H17  =    -0.00107702057163 * S_Income  +     0.25116135719972 * S_Kidhome
1168067   +          +    -0.04540308470858 * S_MntFishProducts
1168068   +          +        0.21487241577 * S_MntFruits  +    -0.12914913547414 *
1168069   +        S_MntGoldProds  +    -0.04149021191395 * S_MntMeatProducts
1168070   +          +     0.02853521979141 * S_MntSweetProducts
1168071   +          +     -0.2435805887418 * S_MntWines  +    -0.04509621661407 *
1168072   +        S_NumCatalogPurchases  +    -0.26492036720429 * S_NumDealsPurchases
1168073   +          +     -0.3299561248944 * S_NumStorePurchases
1168074   +          +    -0.09806597448224 * S_NumWebPurchases
1168075   +          +      0.0427056351245 * S_NumWebVisitsMonth
1168076   +          +     0.03953235628202 * S_Recency  +    -0.11317308767713 *
1168077   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H17 = -0.00107702057163 * S_Income + 0.25116135719972 * S_Kidhome +
-0.04540308470858 * S_MntFishProducts + 0.21487241577 * S_MntFruits + -0.12914913547414 *
S_MntGoldProds + -0.04149021191395 * S_MntMeatProducts + 0.02853521979141 * S_MntSweetProducts
+ -0.2435805887418 * S_MntWines + -0.04509621661407 * S_NumCatalogPurchases +
-0.26492036720429 * S_NumDealsPurchases + -0.3299561248944 * S_NumStorePurchases +
-0.09806597448224 * S_NumWebPurchases + 0.0427056351245 * S_NumWebVisitsMonth +
0.03953235628202 * S_Recency + -0.11317308767713 * S_Teenhome ;
1168078   +   H11  = H11  +     0.50033674561531 * AcceptedCmp10
1168079   +          +    -0.02275693117286 * AcceptedCmp20  +     0.31338891533156 *
1168080   +        AcceptedCmp30  +      0.3901248845706 * AcceptedCmp40
1168081   +          +     0.44314358358111 * AcceptedCmp50  +    -0.20444060864498 *
1168082   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.50033674561531 * AcceptedCmp10 + -0.02275693117286 *
AcceptedCmp20 + 0.31338891533156 * AcceptedCmp30 + 0.3901248845706 * AcceptedCmp40 +
0.44314358358111 * AcceptedCmp50 + -0.20444060864498 * Complain0 ;
1168083   +   H12  = H12  +     0.30103938822692 * AcceptedCmp10
1168084   +          +     0.54298746723422 * AcceptedCmp20  +     0.50401040035525 *
1168085   +        AcceptedCmp30  +     0.43447710825306 * AcceptedCmp40
1168086   +          +     0.60794421030027 * AcceptedCmp50  +    -0.28114274461319 *
1168087   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.30103938822692 * AcceptedCmp10 + 0.54298746723422 *
AcceptedCmp20 + 0.50401040035525 * AcceptedCmp30 + 0.43447710825306 * AcceptedCmp40 +
0.60794421030027 * AcceptedCmp50 + -0.28114274461319 * Complain0 ;
1168088   +   H13  = H13  +     -0.1890212967757 * AcceptedCmp10
1168089   +          +    -0.11487406996391 * AcceptedCmp20  +    -0.22740618754863 *
1168090   +        AcceptedCmp30  +      0.2354510231918 * AcceptedCmp40
1168091   +          +    -0.14327434649067 * AcceptedCmp50  +    -0.17839080850556 *
1168092   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.1890212967757 * AcceptedCmp10 + -0.11487406996391 *
AcceptedCmp20 + -0.22740618754863 * AcceptedCmp30 + 0.2354510231918 * AcceptedCmp40 +
-0.14327434649067 * AcceptedCmp50 + -0.17839080850556 * Complain0 ;
1168093   +   H14  = H14  +    -0.28194187416219 * AcceptedCmp10
1168094   +          +     0.11732089254624 * AcceptedCmp20  +     0.34964075536156 *
1168095   +        AcceptedCmp30  +     0.05772396286169 * AcceptedCmp40
1168096   +          +    -0.08671748651826 * AcceptedCmp50  +      0.0629540108407 *
1168097   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.28194187416219 * AcceptedCmp10 + 0.11732089254624 *
AcceptedCmp20 + 0.34964075536156 * AcceptedCmp30 + 0.05772396286169 * AcceptedCmp40 +
-0.08671748651826 * AcceptedCmp50 + 0.0629540108407 * Complain0 ;
1168098   +   H15  = H15  +    -0.01058257322803 * AcceptedCmp10
1168099   +          +     0.26755355732587 * AcceptedCmp20  +     0.40856661734724 *
1168100   +        AcceptedCmp30  +     0.02977117354989 * AcceptedCmp40
1168101   +          +       0.073655049734 * AcceptedCmp50  +     0.25562048226555 *
1168102   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + -0.01058257322803 * AcceptedCmp10 + 0.26755355732587 *
AcceptedCmp20 + 0.40856661734724 * AcceptedCmp30 + 0.02977117354989 * AcceptedCmp40 +
0.073655049734 * AcceptedCmp50 + 0.25562048226555 * Complain0 ;
1168103   +   H16  = H16  +    -0.65590117532084 * AcceptedCmp10
1168104   +          +    -0.31314161223579 * AcceptedCmp20  +    -0.18863165264573 *
1168105   +        AcceptedCmp30  +    -0.18832338914237 * AcceptedCmp40
1168106   +          +    -0.53765749471786 * AcceptedCmp50  +     0.17409401877513 *
1168107   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H16 = H16 + -0.65590117532084 * AcceptedCmp10 + -0.31314161223579 *
AcceptedCmp20 + -0.18863165264573 * AcceptedCmp30 + -0.18832338914237 * AcceptedCmp40 +
-0.53765749471786 * AcceptedCmp50 + 0.17409401877513 * Complain0 ;
1168108   +   H17  = H17  +    -0.42253231673718 * AcceptedCmp10
1168109   +          +    -0.40954345229557 * AcceptedCmp20  +    -0.30577523080786 *
1168110   +        AcceptedCmp30  +    -0.22396670899437 * AcceptedCmp40
1168111   +          +     0.05757251451004 * AcceptedCmp50  +     0.07813950542487 *
1168112   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H17 = H17 + -0.42253231673718 * AcceptedCmp10 + -0.40954345229557 *
AcceptedCmp20 + -0.30577523080786 * AcceptedCmp30 + -0.22396670899437 * AcceptedCmp40 +
0.05757251451004 * AcceptedCmp50 + 0.07813950542487 * Complain0 ;
1168113   +   H11  = H11  +    -0.14483542022901 * Education2n_Cycle
1168114   +          +     0.32176647745332 * EducationBasic  +     0.00900796305072 *
1168115   +        EducationGraduation  +    -0.00243484910123 * EducationMaster
1168116   +          +    -0.22074132229211 * Marital_StatusDivorced
1168117   +          +     0.70282742634901 * Marital_StatusMarried
1168118   +          +     -0.5926244797961 * Marital_StatusSingle
1168119   +          +     0.21342221410999 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.14483542022901 * Education2n_Cycle + 0.32176647745332 *
EducationBasic + 0.00900796305072 * EducationGraduation + -0.00243484910123 * EducationMaster
+ -0.22074132229211 * Marital_StatusDivorced + 0.70282742634901 * Marital_StatusMarried +
-0.5926244797961 * Marital_StatusSingle + 0.21342221410999 * Marital_StatusTogether ;
1168120   +   H12  = H12  +    -0.10242932200247 * Education2n_Cycle
1168121   +          +     0.34937926721317 * EducationBasic  +    -0.20395479511872 *
1168122   +        EducationGraduation  +     0.31210327899339 * EducationMaster
1168123   +          +    -0.46376392175295 * Marital_StatusDivorced
1168124   +          +       0.589453579718 * Marital_StatusMarried
1168125   +          +    -0.45342174978481 * Marital_StatusSingle
1168126   +          +     0.70517120763557 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.10242932200247 * Education2n_Cycle + 0.34937926721317 *
EducationBasic + -0.20395479511872 * EducationGraduation + 0.31210327899339 * EducationMaster
+ -0.46376392175295 * Marital_StatusDivorced + 0.589453579718 * Marital_StatusMarried +
-0.45342174978481 * Marital_StatusSingle + 0.70517120763557 * Marital_StatusTogether ;
1168127   +   H13  = H13  +     0.24858755570324 * Education2n_Cycle
1168128   +          +     0.07360039359386 * EducationBasic  +    -0.42563056620078 *
1168129   +        EducationGraduation  +    -0.25970840250323 * EducationMaster
1168130   +          +     0.26981972015482 * Marital_StatusDivorced
1168131   +          +    -0.01707364864139 * Marital_StatusMarried
1168132   +          +     0.38646060840009 * Marital_StatusSingle
1168133   +          +     0.19694047086013 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.24858755570324 * Education2n_Cycle + 0.07360039359386 *
EducationBasic + -0.42563056620078 * EducationGraduation + -0.25970840250323 * EducationMaster
+ 0.26981972015482 * Marital_StatusDivorced + -0.01707364864139 * Marital_StatusMarried +
0.38646060840009 * Marital_StatusSingle + 0.19694047086013 * Marital_StatusTogether ;
1168134   +   H14  = H14  +     0.22577522124265 * Education2n_Cycle
1168135   +          +     0.04183136697557 * EducationBasic  +    -0.27725331198825 *
1168136   +        EducationGraduation  +     0.15709188532123 * EducationMaster
1168137   +          +    -0.01933675094701 * Marital_StatusDivorced
1168138   +          +     0.52969577969434 * Marital_StatusMarried
1168139   +          +      -0.348697714569 * Marital_StatusSingle
1168140   +          +      0.5020342481888 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.22577522124265 * Education2n_Cycle + 0.04183136697557 *
EducationBasic + -0.27725331198825 * EducationGraduation + 0.15709188532123 * EducationMaster
+ -0.01933675094701 * Marital_StatusDivorced + 0.52969577969434 * Marital_StatusMarried +
-0.348697714569 * Marital_StatusSingle + 0.5020342481888 * Marital_StatusTogether ;
1168141   +   H15  = H15  +     0.04488332711225 * Education2n_Cycle
1168142   +          +     0.01911097443907 * EducationBasic  +    -0.11699443624996 *
1168143   +        EducationGraduation  +    -0.07291393566738 * EducationMaster
1168144   +          +    -0.04665146013984 * Marital_StatusDivorced
1168145   +          +      -0.586219175167 * Marital_StatusMarried
1168146   +          +     0.55713543417712 * Marital_StatusSingle
1168147   +          +    -0.42208959885332 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.04488332711225 * Education2n_Cycle + 0.01911097443907 *
EducationBasic + -0.11699443624996 * EducationGraduation + -0.07291393566738 * EducationMaster
+ -0.04665146013984 * Marital_StatusDivorced + -0.586219175167 * Marital_StatusMarried +
0.55713543417712 * Marital_StatusSingle + -0.42208959885332 * Marital_StatusTogether ;
1168148   +   H16  = H16  +     0.09174117861154 * Education2n_Cycle
1168149   +          +     -0.1378945860659 * EducationBasic  +     -0.0728635369665 *
1168150   +        EducationGraduation  +     0.29860714824438 * EducationMaster
1168151   +          +    -0.05632171154347 * Marital_StatusDivorced
1168152   +          +     0.03215547861665 * Marital_StatusMarried
1168153   +          +     0.16870781172538 * Marital_StatusSingle
1168154   +          +    -0.04883314322676 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.09174117861154 * Education2n_Cycle + -0.1378945860659 *
EducationBasic + -0.0728635369665 * EducationGraduation + 0.29860714824438 * EducationMaster +
-0.05632171154347 * Marital_StatusDivorced + 0.03215547861665 * Marital_StatusMarried +
0.16870781172538 * Marital_StatusSingle + -0.04883314322676 * Marital_StatusTogether ;
1168155   +   H17  = H17  +    -0.00343694558117 * Education2n_Cycle
1168156   +          +     0.32636427598227 * EducationBasic  +     0.16259654486833 *
1168157   +        EducationGraduation  +    -0.00424229454859 * EducationMaster
1168158   +          +    -0.21765415159355 * Marital_StatusDivorced
1168159   +          +     -0.0542857922075 * Marital_StatusMarried
1168160   +          +     0.20679907454933 * Marital_StatusSingle
1168161   +          +     0.14976519710725 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H17 = H17 + -0.00343694558117 * Education2n_Cycle + 0.32636427598227 *
EducationBasic + 0.16259654486833 * EducationGraduation + -0.00424229454859 * EducationMaster
+ -0.21765415159355 * Marital_StatusDivorced + -0.0542857922075 * Marital_StatusMarried +
0.20679907454933 * Marital_StatusSingle + 0.14976519710725 * Marital_StatusTogether ;
1168162   +   H11  =     0.92977078759503 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 0.92977078759503 + H11 ;
1168163   +   H12  =    -0.97970409253156 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -0.97970409253156 + H12 ;
1168164   +   H13  =     -0.5001144792196 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.5001144792196 + H13 ;
1168165   +   H14  =    -0.90715840862541 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = -0.90715840862541 + H14 ;
1168166   +   H15  =     0.87046153389036 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = 0.87046153389036 + H15 ;
1168167   +   H16  =     0.49066122767086 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = 0.49066122767086 + H16 ;
1168168   +   H17  =    -1.05949763460293 + H17 ;
MPRINT(EM_DIAGRAM):   H17 = -1.05949763460293 + H17 ;
1168169   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1168170   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1168171   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1168172   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1168173   +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
1168174   +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
1168175   +   H17  = TANH(H17 );
MPRINT(EM_DIAGRAM):   H17 = TANH(H17 );
1168176   +END;
MPRINT(EM_DIAGRAM):   END;
1168177   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1168178   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1168179   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1168180   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1168181   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1168182   +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
1168183   +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
1168184   +   H17  = .;
MPRINT(EM_DIAGRAM):   H17 = .;
1168185   +END;
MPRINT(EM_DIAGRAM):   END;
1168186   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1168187   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1168188   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1168189   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1168190   +   P_DepVar1  =    -2.32998401250848 * H11  +     -3.2074078511991 * H12
1168191   +          +    -0.69549988605443 * H13  +    -1.74950789108762 * H14
1168192   +          +    -1.74013772071344 * H15  +     2.65306089869015 * H16
1168193   +          +     0.03700459000906 * H17 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.32998401250848 * H11 + -3.2074078511991 * H12 +
-0.69549988605443 * H13 + -1.74950789108762 * H14 + -1.74013772071344 * H15 + 2.65306089869015
* H16 + 0.03700459000906 * H17 ;
1168194   +   P_DepVar1  =    -1.51229898726716 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.51229898726716 + P_DepVar1 ;
1168195   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1168196   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1168197   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1168198   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1168199   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1168200   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1168201   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1168202   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1168203   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1168204   +END;
MPRINT(EM_DIAGRAM):   END;
1168205   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1168206   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1168207   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1168208   +END;
MPRINT(EM_DIAGRAM):   END;
1168209   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1168210   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1168211   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1168212   +END;
MPRINT(EM_DIAGRAM):   END;
1168213   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1168214   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1168215   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1168216   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1168217   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1168218   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1168219   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1168220   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1168221   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1168222   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1168223   +END;
MPRINT(EM_DIAGRAM):   END;
1168224   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1168225   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1168226   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1168227   +drop
1168228   +H11
1168229   +H12
1168230   +H13
1168231   +H14
1168232   +H15
1168233   +H16
1168234   +H17
1168235   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 H17 ;
1168236   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1168237    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1168238    quit;
1168239    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1168240    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1168241    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1168242    retain ID 2 Node "Neural30";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Neural30";
1168243    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1168244    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2154 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2154 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1168245    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1168246    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1168247    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2154 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2154 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1168248    proc sort data=EMWS8.Neural30_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Neural30_variableset out=_temp2(keep=NAME CREATOR);
1168249    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1168250    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set EMWS8.NEURAL30_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1168251    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1168252    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1168253    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1168254    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1168255    proc contents data=EMWS8.Neural30_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Neural30_train out=_meta(keep=NAME) noprint;
1168256    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
1168257    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1168258    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1168259    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1168260    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1168261    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1168262    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1168263    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 53 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1168264    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1168265    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1168265  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 1016 rows and 5 columns.
 
1168266    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1168267    proc append base=EMWS8.Ensmbl9_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl9_FCMP data=_tempx;
1168268    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL9_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 1016 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL9_FCMP has 1016 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1168269    filename _pref
1168269  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
1168270    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1168271    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
1168272   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1168273   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1168274   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1168275   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1168276   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1168277   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1168278    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1168279    quit;
1168280    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1168281    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1168282    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1168283    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
1168284    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1168285    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1168286    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1168287    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1168288    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1168289    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
1168290    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1168291    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1168292    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1168293    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1168294    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1168295    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1168296    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
1168297    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
 
 
1168298    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1168299    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1168300    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1168301    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1168302    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1168303    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1168304    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1168305    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1168306    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1168306  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.
 
1168307    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1168308    proc append base=EMWS8.Ensmbl9_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl9_FCMP data=_tempx;
1168309    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL9_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL9_FCMP has 1020 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1168310    filename _pref
1168310  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
1168311    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1168312    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
1168313   +
1168314   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1168315   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1168315  !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1168316   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1168317   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1168318   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1168319   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1168320   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1168321    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1168322    quit;
1168323    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1168324    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1168325    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1168326    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
1168327    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1168328    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1168329    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1168330    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1168331    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1168332    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
1168333    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1168334    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1168335    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1168336    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1168337    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1168338    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1168339    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
1168340    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1168341    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1168342    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1168343    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1168344    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1168345    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1168346    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1168347    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1168348    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1168349    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1168349  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.
 
1168350    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1168351    proc append base=EMWS8.Ensmbl9_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl9_FCMP data=_tempx;
1168352    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL9_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL9_FCMP has 1059 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1168353    filename _pref
1168353  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
1168354    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1168355    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
1168356   +
1168357   +
1168358   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
1168359   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
1168360   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
1168361   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
1168362   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
1168363   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1168364   +
1168365   +
1168366   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
1168367   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
1168368   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
1168369   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
1168370   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
1168371   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1168372   +
1168373   +
1168374   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
1168375   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
1168376   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
1168377   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
1168378   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
1168379   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1168380   +
1168381   +
1168382   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
1168383   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
1168384   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
1168385   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
1168386   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
1168387   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1168388   +
1168389   +
1168390   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
1168391   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
1168392   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
1168393   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
1168394   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
1168395   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1168396   +
1168397   +
1168398   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
1168399   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
1168400   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
1168401   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
1168402   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
1168403   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1168404   +
1168405   +
1168406   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
1168407   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
1168408   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
1168409   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
1168410   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
1168411   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1168412   +
1168413   +
1168414   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
1168415   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
1168416   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
1168417   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
1168418   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
1168419   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1168420   +if
1168421   +_FILTERNORM1 not in ( '.')
1168422   + and
1168423   +_FILTERNORM2 not in ( '.')
1168424   + and
1168425   +_FILTERNORM3 not in ( '.')
1168426   + and
1168427   +_FILTERNORM4 not in ( '.')
1168428   + and
1168429   +_FILTERNORM5 not in ( '.')
1168430   + and
1168431   +_FILTERNORM6 not in ( '.')
1168432   + and
1168433   +_FILTERNORM7 not in ( ' ')
1168434   + and
1168435   +_FILTERNORM8 not in ( ' ')
1168436   +and
1168437   +( Dt_Customer ne .)
1168438   +and ( Income ne . and (Income<=107000))
1168439   +and ( Kidhome ne .)
1168440   +and ( MntFishProducts ne .)
1168441   +and ( MntFruits ne .)
1168442   +and ( MntGoldProds ne .)
1168443   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
1168444   +and ( MntSweetProducts ne .)
1168445   +and ( MntWines ne .)
1168446   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
1168447   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
1168448   +and ( NumStorePurchases ne .)
1168449   +and ( NumWebPurchases ne .)
1168450   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
1168451   +and ( Recency ne .)
1168452   +and ( Teenhome ne .)
1168453   +and ( Year_Birth ne .)
1168454   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and (
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and (
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and (
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and (
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne
.) and ( Year_Birth ne .) then do;
1168455   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
1168456   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
1168457   +end;
MPRINT(EM_DIAGRAM):   end;
1168458   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
1168459   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1168460    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1168461    quit;
1168462    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1168463    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1168464    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1168465    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
1168466    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1168467    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1168468    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1168469    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1168470    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1168471    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
1168472    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1168473    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1168474    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1168475    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1168476    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1168477    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1168478    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
1168479    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
1168480    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1168481    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1168482    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1168483    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1168484    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1168485    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1168486    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1168487    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1168488    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1168488  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.
 
1168489    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1168490    proc append base=EMWS8.Ensmbl9_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl9_FCMP data=_tempx;
1168491    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL9_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL9_FCMP has 1125 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1168492    %macro varDept(fcmpdata=,id=);
1168493    %global nobs&id scoreFlag&id;
1168494    %let scoreFlag&id = 0;
1168495    %if &id=1 or ^&fcmpStart %then %do;
1168496    proc sort data=&fcmpdata out=_temp&id nodupkey;
1168497    by NAME;
1168498    where id=&id and LHS in( %let j=1;
1168499    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
1168500    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
1168501    "&var" %let j = %eval(&j+1);
1168502    %end;
1168503    );
1168504    run;
1168505    %let dsid = %sysfunc(open(_temp&id));
1168506    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1168507    %let dsid = %sysfunc(close(&dsid));
1168508    %if &&nobs&id %then %do;
1168509    %let scoreFlag&id = 1;
1168510    %let fcmpStart = 1;
1168511    %end;
1168512    %else %let fcmpStart = 0;
1168513    %end;
1168514    %else %do;
1168515    proc sort data=&fcmpdata out=_tempid;
1168516    where id=&id;
1168517    by LHS;
1168518    run;
1168519    %let dsid = %sysfunc(open(_tempid));
1168520    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1168521    %let dsid = %sysfunc(close(&dsid));
1168522    %if ^&&nobs&id %then %do;
1168523    proc datasets lib=work nolist;
1168524    delete _tempid;
1168525    run;
1168526    quit;
1168527    %end;
1168528    %else %do;
1168529    data _tempAll;
1168530    set %let j=%eval(&id-1);
1168531    %do x=1 %to &j;
1168532    %if &&nobs&x %then %do;
1168533    _temp&x %end;
1168534    %end;
1168535    ;
1168536    run;
1168537    proc sql;
1168538    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
1168538  ! work._tempid p2 where p.name=p2.lhs;
1168539    quit;
1168540    data _temp&id;
1168541    set _temp&id;
1168542    where LHS ne '' and NAME ne '' and Node ne '';
1168543    run;
1168544    proc datasets lib=work nolist;
1168545    delete _tempAll;
1168546    run;
1168547    %let dsid = %sysfunc(open(_temp&id));
1168548    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1168549    %let dsid = %sysfunc(close(&dsid));
1168550    %if ^&&nobs&id %then %do;
1168551    proc datasets lib=work nolist;
1168552    delete _temp&id;
1168553    run;
1168554    quit;
1168555    %end;
1168556    %else %do;
1168557    %let scoreFlag&id = 1;
1168558    data _temp&id;
1168559    set _temp&id;
1168560    where LHS ne NAME and node ne '';
1168561    run;
1168562    %let dsid = %sysfunc(open(_temp&id));
1168563    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1168564    %let dsid = %sysfunc(close(&dsid));
1168565    %if ^&&nobs&id %then %do;
1168566    proc datasets lib=work nolist;
1168567    delete _temp&id;
1168568    run;
1168569    quit;
1168570    %end;
1168571    %else %do;
1168572    proc sort data=_temp&id nodupkey;
1168573    by LHS NAME;
1168574    run;
1168575    %end;
1168576    %end;
1168577    %end;
1168578    %end;
1168579    %mend varDept;
1168580    %macro optCode(outdata=fcmpdata);
1168581    %global fcmpStart;
1168582    %let fcmpStart = 0;
1168583    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
1168584    %let NumNodes=9;
1168585    %do k=1 %to &NumNodes;
1168586    %vardept(fcmpdata=&outdata, id=&k);
1168587    %end;
1168588    %mend optCode;
1168589    %optcode(outData=EMWS8.Ensmbl9_FCMP);
MPRINT(EM_DIAGRAM):
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl9_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL9_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl9_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: There were 98 observations read from the data set EMWS8.ENSMBL9_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 73 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 25 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl9_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL9_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl9_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL9_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl9_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set EMWS8.ENSMBL9_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 25 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 25 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp5;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP5 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl9_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set EMWS8.ENSMBL9_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 25 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 25 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp6;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP6 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl9_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 66 observations read from the data set EMWS8.ENSMBL9_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 25 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 25 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl9_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL9_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl9_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL9_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;
 
1168590    filename _pref
1168590  ! "C:\\predictive-models-project\Workspaces\EMWS8\Reg10\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Reg10\EMPUBLISHSCORE.sas";
1168591    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1168592    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Reg10\EMPUBLISHSCORE.sas.
1168593   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1168594   +*** begin scoring code for regression;
MPRINT(EM_DIAGRAM):   *** begin scoring code for regression;
1168595   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1168596   +
1168597   +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
1168598   +label _WARN_ = 'Warnings' ;
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings' ;
1168599   +
1168600   +length I_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length I_DepVar $ 12;
1168601   +label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1168602   +*** Target Values;
MPRINT(EM_DIAGRAM):   *** Target Values;
1168603   +array REG10DRF [2] $12 _temporary_ ('1' '0' );
MPRINT(EM_DIAGRAM):   array REG10DRF [2] $12 _temporary_ ('1' '0' );
1168604   +label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1168605   +format U_DepVar BEST.;
MPRINT(EM_DIAGRAM):   format U_DepVar BEST.;
1168606   +*** Unnormalized target values;
MPRINT(EM_DIAGRAM):   *** Unnormalized target values;
1168607   +ARRAY REG10DRU[2]  _TEMPORARY_ (1 0);
MPRINT(EM_DIAGRAM):   ARRAY REG10DRU[2] _TEMPORARY_ (1 0);
1168608   +
1168609   +drop _DM_BAD;
MPRINT(EM_DIAGRAM):   drop _DM_BAD;
1168610   +_DM_BAD=0;
MPRINT(EM_DIAGRAM):   _DM_BAD=0;
1168611   +
1168612   +*** Check Income for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Income for missing values ;
1168613   +if missing( Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( Income ) then do;
1168614   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1168615   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1168616   +end;
MPRINT(EM_DIAGRAM):   end;
1168617   +
1168618   +*** Check MntFishProducts for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntFishProducts for missing values ;
1168619   +if missing( MntFishProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntFishProducts ) then do;
1168620   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1168621   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1168622   +end;
MPRINT(EM_DIAGRAM):   end;
1168623   +
1168624   +*** Check MntFruits for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntFruits for missing values ;
1168625   +if missing( MntFruits ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntFruits ) then do;
1168626   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1168627   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1168628   +end;
MPRINT(EM_DIAGRAM):   end;
1168629   +
1168630   +*** Check MntMeatProducts for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntMeatProducts for missing values ;
1168631   +if missing( MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntMeatProducts ) then do;
1168632   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1168633   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1168634   +end;
MPRINT(EM_DIAGRAM):   end;
1168635   +
1168636   +*** Check MntWines for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntWines for missing values ;
1168637   +if missing( MntWines ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntWines ) then do;
1168638   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1168639   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1168640   +end;
MPRINT(EM_DIAGRAM):   end;
1168641   +
1168642   +*** Check NumCatalogPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumCatalogPurchases for missing values ;
1168643   +if missing( NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumCatalogPurchases ) then do;
1168644   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1168645   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1168646   +end;
MPRINT(EM_DIAGRAM):   end;
1168647   +
1168648   +*** Check NumDealsPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumDealsPurchases for missing values ;
1168649   +if missing( NumDealsPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumDealsPurchases ) then do;
1168650   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1168651   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1168652   +end;
MPRINT(EM_DIAGRAM):   end;
1168653   +
1168654   +*** Check NumStorePurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumStorePurchases for missing values ;
1168655   +if missing( NumStorePurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumStorePurchases ) then do;
1168656   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1168657   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1168658   +end;
MPRINT(EM_DIAGRAM):   end;
1168659   +
1168660   +*** Check NumWebPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumWebPurchases for missing values ;
1168661   +if missing( NumWebPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumWebPurchases ) then do;
1168662   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1168663   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1168664   +end;
MPRINT(EM_DIAGRAM):   end;
1168665   +
1168666   +*** Check NumWebVisitsMonth for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumWebVisitsMonth for missing values ;
1168667   +if missing( NumWebVisitsMonth ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumWebVisitsMonth ) then do;
1168668   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1168669   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1168670   +end;
MPRINT(EM_DIAGRAM):   end;
1168671   +
1168672   +*** Check Recency for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Recency for missing values ;
1168673   +if missing( Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( Recency ) then do;
1168674   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1168675   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1168676   +end;
MPRINT(EM_DIAGRAM):   end;
1168677   +
1168678   +*** Check Teenhome for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Teenhome for missing values ;
1168679   +if missing( Teenhome ) then do;
MPRINT(EM_DIAGRAM):   if missing( Teenhome ) then do;
1168680   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1168681   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1168682   +end;
MPRINT(EM_DIAGRAM):   end;
1168683   +
1168684   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1168685   +drop _1_0 ;
MPRINT(EM_DIAGRAM):   drop _1_0 ;
1168686   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1168687   +   _1_0 = .;
MPRINT(EM_DIAGRAM):   _1_0 = .;
1168688   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1168689   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1168690   +end;
MPRINT(EM_DIAGRAM):   end;
1168691   +else do;
MPRINT(EM_DIAGRAM):   else do;
1168692   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1168693   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1168694   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1168695   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1168696   +      _1_0 = 1;
MPRINT(EM_DIAGRAM):   _1_0 = 1;
1168697   +   end;
MPRINT(EM_DIAGRAM):   end;
1168698   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1168699   +      _1_0 = -1;
MPRINT(EM_DIAGRAM):   _1_0 = -1;
1168700   +   end;
MPRINT(EM_DIAGRAM):   end;
1168701   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1168702   +      _1_0 = .;
MPRINT(EM_DIAGRAM):   _1_0 = .;
1168703   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1168704   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1168705   +   end;
MPRINT(EM_DIAGRAM):   end;
1168706   +end;
MPRINT(EM_DIAGRAM):   end;
1168707   +
1168708   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1168709   +drop _2_0 ;
MPRINT(EM_DIAGRAM):   drop _2_0 ;
1168710   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1168711   +   _2_0 = .;
MPRINT(EM_DIAGRAM):   _2_0 = .;
1168712   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1168713   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1168714   +end;
MPRINT(EM_DIAGRAM):   end;
1168715   +else do;
MPRINT(EM_DIAGRAM):   else do;
1168716   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1168717   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1168718   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1168719   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1168720   +      _2_0 = 1;
MPRINT(EM_DIAGRAM):   _2_0 = 1;
1168721   +   end;
MPRINT(EM_DIAGRAM):   end;
1168722   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1168723   +      _2_0 = -1;
MPRINT(EM_DIAGRAM):   _2_0 = -1;
1168724   +   end;
MPRINT(EM_DIAGRAM):   end;
1168725   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1168726   +      _2_0 = .;
MPRINT(EM_DIAGRAM):   _2_0 = .;
1168727   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1168728   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1168729   +   end;
MPRINT(EM_DIAGRAM):   end;
1168730   +end;
MPRINT(EM_DIAGRAM):   end;
1168731   +
1168732   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1168733   +drop _3_0 ;
MPRINT(EM_DIAGRAM):   drop _3_0 ;
1168734   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1168735   +   _3_0 = .;
MPRINT(EM_DIAGRAM):   _3_0 = .;
1168736   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1168737   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1168738   +end;
MPRINT(EM_DIAGRAM):   end;
1168739   +else do;
MPRINT(EM_DIAGRAM):   else do;
1168740   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1168741   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1168742   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1168743   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1168744   +      _3_0 = 1;
MPRINT(EM_DIAGRAM):   _3_0 = 1;
1168745   +   end;
MPRINT(EM_DIAGRAM):   end;
1168746   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1168747   +      _3_0 = -1;
MPRINT(EM_DIAGRAM):   _3_0 = -1;
1168748   +   end;
MPRINT(EM_DIAGRAM):   end;
1168749   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1168750   +      _3_0 = .;
MPRINT(EM_DIAGRAM):   _3_0 = .;
1168751   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1168752   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1168753   +   end;
MPRINT(EM_DIAGRAM):   end;
1168754   +end;
MPRINT(EM_DIAGRAM):   end;
1168755   +
1168756   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1168757   +drop _4_0 ;
MPRINT(EM_DIAGRAM):   drop _4_0 ;
1168758   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1168759   +   _4_0 = .;
MPRINT(EM_DIAGRAM):   _4_0 = .;
1168760   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1168761   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1168762   +end;
MPRINT(EM_DIAGRAM):   end;
1168763   +else do;
MPRINT(EM_DIAGRAM):   else do;
1168764   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1168765   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1168766   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1168767   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1168768   +      _4_0 = 1;
MPRINT(EM_DIAGRAM):   _4_0 = 1;
1168769   +   end;
MPRINT(EM_DIAGRAM):   end;
1168770   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1168771   +      _4_0 = -1;
MPRINT(EM_DIAGRAM):   _4_0 = -1;
1168772   +   end;
MPRINT(EM_DIAGRAM):   end;
1168773   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1168774   +      _4_0 = .;
MPRINT(EM_DIAGRAM):   _4_0 = .;
1168775   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1168776   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1168777   +   end;
MPRINT(EM_DIAGRAM):   end;
1168778   +end;
MPRINT(EM_DIAGRAM):   end;
1168779   +
1168780   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1168781   +drop _5_0 ;
MPRINT(EM_DIAGRAM):   drop _5_0 ;
1168782   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1168783   +   _5_0 = .;
MPRINT(EM_DIAGRAM):   _5_0 = .;
1168784   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1168785   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1168786   +end;
MPRINT(EM_DIAGRAM):   end;
1168787   +else do;
MPRINT(EM_DIAGRAM):   else do;
1168788   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1168789   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1168790   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1168791   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1168792   +      _5_0 = 1;
MPRINT(EM_DIAGRAM):   _5_0 = 1;
1168793   +   end;
MPRINT(EM_DIAGRAM):   end;
1168794   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1168795   +      _5_0 = -1;
MPRINT(EM_DIAGRAM):   _5_0 = -1;
1168796   +   end;
MPRINT(EM_DIAGRAM):   end;
1168797   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1168798   +      _5_0 = .;
MPRINT(EM_DIAGRAM):   _5_0 = .;
1168799   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1168800   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1168801   +   end;
MPRINT(EM_DIAGRAM):   end;
1168802   +end;
MPRINT(EM_DIAGRAM):   end;
1168803   +
1168804   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1168805   +drop _8_0 _8_1 _8_2 _8_3 ;
MPRINT(EM_DIAGRAM):   drop _8_0 _8_1 _8_2 _8_3 ;
1168806   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1168807   +_8_0 = 0;
MPRINT(EM_DIAGRAM):   _8_0 = 0;
1168808   +_8_1 = 0;
MPRINT(EM_DIAGRAM):   _8_1 = 0;
1168809   +_8_2 = 0;
MPRINT(EM_DIAGRAM):   _8_2 = 0;
1168810   +_8_3 = 0;
MPRINT(EM_DIAGRAM):   _8_3 = 0;
1168811   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1168812   +   _8_0 = .;
MPRINT(EM_DIAGRAM):   _8_0 = .;
1168813   +   _8_1 = .;
MPRINT(EM_DIAGRAM):   _8_1 = .;
1168814   +   _8_2 = .;
MPRINT(EM_DIAGRAM):   _8_2 = .;
1168815   +   _8_3 = .;
MPRINT(EM_DIAGRAM):   _8_3 = .;
1168816   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1168817   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1168818   +end;
MPRINT(EM_DIAGRAM):   end;
1168819   +else do;
MPRINT(EM_DIAGRAM):   else do;
1168820   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1168821   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1168822   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1168823   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1168824   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1168825   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1168826   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1168827   +            _8_0 = 1;
MPRINT(EM_DIAGRAM):   _8_0 = 1;
1168828   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1168829   +         end;
MPRINT(EM_DIAGRAM):   end;
1168830   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1168831   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1168832   +               _8_1 = 1;
MPRINT(EM_DIAGRAM):   _8_1 = 1;
1168833   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1168834   +            end;
MPRINT(EM_DIAGRAM):   end;
1168835   +         end;
MPRINT(EM_DIAGRAM):   end;
1168836   +      end;
MPRINT(EM_DIAGRAM):   end;
1168837   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1168838   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1168839   +            _8_2 = 1;
MPRINT(EM_DIAGRAM):   _8_2 = 1;
1168840   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1168841   +         end;
MPRINT(EM_DIAGRAM):   end;
1168842   +      end;
MPRINT(EM_DIAGRAM):   end;
1168843   +   end;
MPRINT(EM_DIAGRAM):   end;
1168844   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1168845   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1168846   +         _8_3 = 1;
MPRINT(EM_DIAGRAM):   _8_3 = 1;
1168847   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1168848   +      end;
MPRINT(EM_DIAGRAM):   end;
1168849   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1168850   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1168851   +            _8_0 = -1;
MPRINT(EM_DIAGRAM):   _8_0 = -1;
1168852   +            _8_1 = -1;
MPRINT(EM_DIAGRAM):   _8_1 = -1;
1168853   +            _8_2 = -1;
MPRINT(EM_DIAGRAM):   _8_2 = -1;
1168854   +            _8_3 = -1;
MPRINT(EM_DIAGRAM):   _8_3 = -1;
1168855   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1168856   +         end;
MPRINT(EM_DIAGRAM):   end;
1168857   +      end;
MPRINT(EM_DIAGRAM):   end;
1168858   +   end;
MPRINT(EM_DIAGRAM):   end;
1168859   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1168860   +      _8_0 = .;
MPRINT(EM_DIAGRAM):   _8_0 = .;
1168861   +      _8_1 = .;
MPRINT(EM_DIAGRAM):   _8_1 = .;
1168862   +      _8_2 = .;
MPRINT(EM_DIAGRAM):   _8_2 = .;
1168863   +      _8_3 = .;
MPRINT(EM_DIAGRAM):   _8_3 = .;
1168864   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1168865   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1168866   +   end;
MPRINT(EM_DIAGRAM):   end;
1168867   +end;
MPRINT(EM_DIAGRAM):   end;
1168868   +
1168869   +*** If missing inputs, use averages;
MPRINT(EM_DIAGRAM):   *** If missing inputs, use averages;
1168870   +if _DM_BAD > 0 then do;
MPRINT(EM_DIAGRAM):   if _DM_BAD > 0 then do;
1168871   +   _P0 = 0.151221567;
MPRINT(EM_DIAGRAM):   _P0 = 0.151221567;
1168872   +   _P1 = 0.848778433;
MPRINT(EM_DIAGRAM):   _P1 = 0.848778433;
1168873   +   goto REG10DR1;
MPRINT(EM_DIAGRAM):   goto REG10DR1;
1168874   +end;
MPRINT(EM_DIAGRAM):   end;
1168875   +
1168876   +*** Compute Linear Predictor;
MPRINT(EM_DIAGRAM):   *** Compute Linear Predictor;
1168877   +drop _TEMP;
MPRINT(EM_DIAGRAM):   drop _TEMP;
1168878   +drop _LP0;
MPRINT(EM_DIAGRAM):   drop _LP0;
1168879   +_LP0 = 0;
MPRINT(EM_DIAGRAM):   _LP0 = 0;
1168880   +
1168881   +***  Effect: AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Effect: AcceptedCmp1 ;
1168882   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1168883   +_LP0 = _LP0 + (   -0.71107732112007) * _TEMP * _1_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.71107732112007) * _TEMP * _1_0;
1168884   +
1168885   +***  Effect: AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Effect: AcceptedCmp2 ;
1168886   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1168887   +_LP0 = _LP0 + (   -0.81763295180983) * _TEMP * _2_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.81763295180983) * _TEMP * _2_0;
1168888   +
1168889   +***  Effect: AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Effect: AcceptedCmp3 ;
1168890   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1168891   +_LP0 = _LP0 + (    -0.8618538514738) * _TEMP * _3_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.8618538514738) * _TEMP * _3_0;
1168892   +
1168893   +***  Effect: AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Effect: AcceptedCmp4 ;
1168894   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1168895   +_LP0 = _LP0 + (   -0.64997710050937) * _TEMP * _4_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.64997710050937) * _TEMP * _4_0;
1168896   +
1168897   +***  Effect: AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Effect: AcceptedCmp5 ;
1168898   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1168899   +_LP0 = _LP0 + (   -0.91699409369659) * _TEMP * _5_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.91699409369659) * _TEMP * _5_0;
1168900   +
1168901   +***  Effect: Income ;
MPRINT(EM_DIAGRAM):   *** Effect: Income ;
1168902   +_TEMP = Income ;
MPRINT(EM_DIAGRAM):   _TEMP = Income ;
1168903   +_LP0 = _LP0 + (    0.00003628120307 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00003628120307 * _TEMP);
1168904   +
1168905   +***  Effect: Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Effect: Marital_Status ;
1168906   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1168907   +_LP0 = _LP0 + (    0.09345382071006) * _TEMP * _8_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.09345382071006) * _TEMP * _8_0;
1168908   +_LP0 = _LP0 + (   -0.47894059934485) * _TEMP * _8_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.47894059934485) * _TEMP * _8_1;
1168909   +_LP0 = _LP0 + (    0.46164092141221) * _TEMP * _8_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.46164092141221) * _TEMP * _8_2;
1168910   +_LP0 = _LP0 + (    -0.5078574429985) * _TEMP * _8_3;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.5078574429985) * _TEMP * _8_3;
1168911   +
1168912   +***  Effect: MntFishProducts ;
MPRINT(EM_DIAGRAM):   *** Effect: MntFishProducts ;
1168913   +_TEMP = MntFishProducts ;
MPRINT(EM_DIAGRAM):   _TEMP = MntFishProducts ;
1168914   +_LP0 = _LP0 + (   -0.00285470778488 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.00285470778488 * _TEMP);
1168915   +
1168916   +***  Effect: MntFruits ;
MPRINT(EM_DIAGRAM):   *** Effect: MntFruits ;
1168917   +_TEMP = MntFruits ;
MPRINT(EM_DIAGRAM):   _TEMP = MntFruits ;
1168918   +_LP0 = _LP0 + (   -0.00481548089585 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.00481548089585 * _TEMP);
1168919   +
1168920   +***  Effect: MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Effect: MntMeatProducts ;
1168921   +_TEMP = MntMeatProducts ;
MPRINT(EM_DIAGRAM):   _TEMP = MntMeatProducts ;
1168922   +_LP0 = _LP0 + (    0.00485302069895 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00485302069895 * _TEMP);
1168923   +
1168924   +***  Effect: MntWines ;
MPRINT(EM_DIAGRAM):   *** Effect: MntWines ;
1168925   +_TEMP = MntWines ;
MPRINT(EM_DIAGRAM):   _TEMP = MntWines ;
1168926   +_LP0 = _LP0 + (   -0.00184060065513 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.00184060065513 * _TEMP);
1168927   +
1168928   +***  Effect: NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumCatalogPurchases ;
1168929   +_TEMP = NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumCatalogPurchases ;
1168930   +_LP0 = _LP0 + (    0.40015202354101 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.40015202354101 * _TEMP);
1168931   +
1168932   +***  Effect: NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumDealsPurchases ;
1168933   +_TEMP = NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumDealsPurchases ;
1168934   +_LP0 = _LP0 + (    0.39526484909287 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.39526484909287 * _TEMP);
1168935   +
1168936   +***  Effect: NumStorePurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumStorePurchases ;
1168937   +_TEMP = NumStorePurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumStorePurchases ;
1168938   +_LP0 = _LP0 + (   -0.21400418800044 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.21400418800044 * _TEMP);
1168939   +
1168940   +***  Effect: NumWebPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumWebPurchases ;
1168941   +_TEMP = NumWebPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumWebPurchases ;
1168942   +_LP0 = _LP0 + (    -0.2223953481686 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.2223953481686 * _TEMP);
1168943   +
1168944   +***  Effect: NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   *** Effect: NumWebVisitsMonth ;
1168945   +_TEMP = NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   _TEMP = NumWebVisitsMonth ;
1168946   +_LP0 = _LP0 + (    0.54388363089232 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.54388363089232 * _TEMP);
1168947   +
1168948   +***  Effect: Recency ;
MPRINT(EM_DIAGRAM):   *** Effect: Recency ;
1168949   +_TEMP = Recency ;
MPRINT(EM_DIAGRAM):   _TEMP = Recency ;
1168950   +_LP0 = _LP0 + (   -0.05513564922633 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.05513564922633 * _TEMP);
1168951   +
1168952   +***  Effect: Teenhome ;
MPRINT(EM_DIAGRAM):   *** Effect: Teenhome ;
1168953   +_TEMP = Teenhome ;
MPRINT(EM_DIAGRAM):   _TEMP = Teenhome ;
1168954   +_LP0 = _LP0 + (   -0.70674092258187 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.70674092258187 * _TEMP);
1168955   +
1168956   +*** Naive Posterior Probabilities;
MPRINT(EM_DIAGRAM):   *** Naive Posterior Probabilities;
1168957   +drop _MAXP _IY _P0 _P1;
MPRINT(EM_DIAGRAM):   drop _MAXP _IY _P0 _P1;
1168958   +_P0 = probnorm((   -0.62163391257391) + _LP0);
MPRINT(EM_DIAGRAM):   _P0 = probnorm(( -0.62163391257391) + _LP0);
1168959   +_P1 = 1.0 - _P0;
MPRINT(EM_DIAGRAM):   _P1 = 1.0 - _P0;
1168960   +
1168961   +REG10DR1:
1168962   +
1168963   +
1168964   +*** Posterior Probabilities and Predicted Level;
MPRINT(EM_DIAGRAM):   REG10DR1: *** Posterior Probabilities and Predicted Level;
1168965   +label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1168966   +label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1168967   +P_DepVar1 = _P0;
MPRINT(EM_DIAGRAM):   P_DepVar1 = _P0;
1168968   +_MAXP = _P0;
MPRINT(EM_DIAGRAM):   _MAXP = _P0;
1168969   +_IY = 1;
MPRINT(EM_DIAGRAM):   _IY = 1;
1168970   +P_DepVar0 = _P1;
MPRINT(EM_DIAGRAM):   P_DepVar0 = _P1;
1168971   +if (_P1 >  _MAXP + 1E-8) then do;
MPRINT(EM_DIAGRAM):   if (_P1 > _MAXP + 1E-8) then do;
1168972   +   _MAXP = _P1;
MPRINT(EM_DIAGRAM):   _MAXP = _P1;
1168973   +   _IY = 2;
MPRINT(EM_DIAGRAM):   _IY = 2;
1168974   +end;
MPRINT(EM_DIAGRAM):   end;
1168975   +I_DepVar = REG10DRF[_IY];
MPRINT(EM_DIAGRAM):   I_DepVar = REG10DRF[_IY];
1168976   +U_DepVar = REG10DRU[_IY];
MPRINT(EM_DIAGRAM):   U_DepVar = REG10DRU[_IY];
1168977   +
1168978   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1168979   +***** end scoring code for regression;
MPRINT(EM_DIAGRAM):   ***** end scoring code for regression;
1168980   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1168981    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1168982    quit;
1168983    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1168984    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1168985    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1168986    retain ID 2 Node "Reg10";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Reg10";
1168987    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1168988    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 461 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 461 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1168989    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1168990    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1168991    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 461 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 461 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1168992    proc sort data=EMWS8.Reg10_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Reg10_variableset out=_temp2(keep=NAME CREATOR);
1168993    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1168994    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set EMWS8.REG10_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1168995    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1168996    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1168997    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1168998    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1168999    proc contents data=EMWS8.Reg10_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Reg10_train out=_meta(keep=NAME) noprint;
1169000    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
1169001    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1169002    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1169003    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1169004    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1169005    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1169006    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1169007    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 53 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1169008    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1169009    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1169009  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 264 rows and 5 columns.
 
1169010    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1169011    proc append base=EMWS8.Ensmbl9_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl9_FCMP data=_tempx;
1169012    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL9_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 264 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL9_FCMP has 264 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1169013    filename _pref
1169013  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
1169014    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1169015    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
1169016   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1169017   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1169018   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1169019   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1169020   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1169021   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1169022    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1169023    quit;
1169024    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1169025    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1169026    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1169027    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
1169028    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1169029    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1169030    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1169031    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1169032    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.03 seconds
 
 
1169033    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
1169034    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1169035    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1169036    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1169037    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1169038    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1169039    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1169040    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
1169041    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
1169042    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1169043    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1169044    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1169045    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1169046    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1169047    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1169048    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1169049    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1169050    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1169050  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.
 
1169051    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1169052    proc append base=EMWS8.Ensmbl9_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl9_FCMP data=_tempx;
1169053    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL9_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL9_FCMP has 268 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1169054    filename _pref
1169054  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
1169055    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1169056    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
1169057   +
1169058   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1169059   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1169059  !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1169060   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1169061   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1169062   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1169063   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1169064   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1169065    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1169066    quit;
1169067    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1169068    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1169069    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1169070    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
1169071    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1169072    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1169073    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1169074    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1169075    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1169076    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
1169077    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1169078    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1169079    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1169080    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1169081    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1169082    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1169083    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
1169084    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1169085    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1169086    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1169087    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1169088    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1169089    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1169090    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1169091    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1169092    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1169093    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1169093  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.
 
1169094    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1169095    proc append base=EMWS8.Ensmbl9_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl9_FCMP data=_tempx;
1169096    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL9_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL9_FCMP has 307 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1169097    filename _pref
1169097  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
1169098    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1169099    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
1169100   +
1169101   +
1169102   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
1169103   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
1169104   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
1169105   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
1169106   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
1169107   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1169108   +
1169109   +
1169110   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
1169111   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
1169112   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
1169113   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
1169114   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
1169115   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1169116   +
1169117   +
1169118   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
1169119   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
1169120   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
1169121   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
1169122   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
1169123   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1169124   +
1169125   +
1169126   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
1169127   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
1169128   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
1169129   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
1169130   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
1169131   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1169132   +
1169133   +
1169134   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
1169135   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
1169136   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
1169137   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
1169138   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
1169139   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1169140   +
1169141   +
1169142   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
1169143   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
1169144   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
1169145   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
1169146   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
1169147   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1169148   +
1169149   +
1169150   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
1169151   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
1169152   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
1169153   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
1169154   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
1169155   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1169156   +
1169157   +
1169158   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
1169159   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
1169160   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
1169161   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
1169162   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
1169163   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1169164   +if
1169165   +_FILTERNORM1 not in ( '.')
1169166   + and
1169167   +_FILTERNORM2 not in ( '.')
1169168   + and
1169169   +_FILTERNORM3 not in ( '.')
1169170   + and
1169171   +_FILTERNORM4 not in ( '.')
1169172   + and
1169173   +_FILTERNORM5 not in ( '.')
1169174   + and
1169175   +_FILTERNORM6 not in ( '.')
1169176   + and
1169177   +_FILTERNORM7 not in ( ' ')
1169178   + and
1169179   +_FILTERNORM8 not in ( ' ')
1169180   +and
1169181   +( Dt_Customer ne .)
1169182   +and ( Income ne . and (Income<=107000))
1169183   +and ( Kidhome ne .)
1169184   +and ( MntFishProducts ne .)
1169185   +and ( MntFruits ne .)
1169186   +and ( MntGoldProds ne .)
1169187   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
1169188   +and ( MntSweetProducts ne .)
1169189   +and ( MntWines ne .)
1169190   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
1169191   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
1169192   +and ( NumStorePurchases ne .)
1169193   +and ( NumWebPurchases ne .)
1169194   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
1169195   +and ( Recency ne .)
1169196   +and ( Teenhome ne .)
1169197   +and ( Year_Birth ne .)
1169198   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and (
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and (
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and (
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and (
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne
.) and ( Year_Birth ne .) then do;
1169199   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
1169200   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
1169201   +end;
MPRINT(EM_DIAGRAM):   end;
1169202   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
1169203   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1169204    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1169205    quit;
1169206    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1169207    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1169208    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1169209    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
1169210    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1169211    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1169212    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1169213    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1169214    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1169215    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
1169216    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1169217    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1169218    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1169219    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1169220    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1169221    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1169222    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
1169223    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
1169224    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1169225    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1169226    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1169227    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1169228    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1169229    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1169230    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1169231    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1169232    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1169232  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.
 
1169233    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1169234    proc append base=EMWS8.Ensmbl9_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl9_FCMP data=_tempx;
1169235    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL9_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL9_FCMP has 373 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1169236    %macro varDept(fcmpdata=,id=);
1169237    %global nobs&id scoreFlag&id;
1169238    %let scoreFlag&id = 0;
1169239    %if &id=1 or ^&fcmpStart %then %do;
1169240    proc sort data=&fcmpdata out=_temp&id nodupkey;
1169241    by NAME;
1169242    where id=&id and LHS in( %let j=1;
1169243    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
1169244    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
1169245    "&var" %let j = %eval(&j+1);
1169246    %end;
1169247    );
1169248    run;
1169249    %let dsid = %sysfunc(open(_temp&id));
1169250    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1169251    %let dsid = %sysfunc(close(&dsid));
1169252    %if &&nobs&id %then %do;
1169253    %let scoreFlag&id = 1;
1169254    %let fcmpStart = 1;
1169255    %end;
1169256    %else %let fcmpStart = 0;
1169257    %end;
1169258    %else %do;
1169259    proc sort data=&fcmpdata out=_tempid;
1169260    where id=&id;
1169261    by LHS;
1169262    run;
1169263    %let dsid = %sysfunc(open(_tempid));
1169264    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1169265    %let dsid = %sysfunc(close(&dsid));
1169266    %if ^&&nobs&id %then %do;
1169267    proc datasets lib=work nolist;
1169268    delete _tempid;
1169269    run;
1169270    quit;
1169271    %end;
1169272    %else %do;
1169273    data _tempAll;
1169274    set %let j=%eval(&id-1);
1169275    %do x=1 %to &j;
1169276    %if &&nobs&x %then %do;
1169277    _temp&x %end;
1169278    %end;
1169279    ;
1169280    run;
1169281    proc sql;
1169282    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
1169282  ! work._tempid p2 where p.name=p2.lhs;
1169283    quit;
1169284    data _temp&id;
1169285    set _temp&id;
1169286    where LHS ne '' and NAME ne '' and Node ne '';
1169287    run;
1169288    proc datasets lib=work nolist;
1169289    delete _tempAll;
1169290    run;
1169291    %let dsid = %sysfunc(open(_temp&id));
1169292    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1169293    %let dsid = %sysfunc(close(&dsid));
1169294    %if ^&&nobs&id %then %do;
1169295    proc datasets lib=work nolist;
1169296    delete _temp&id;
1169297    run;
1169298    quit;
1169299    %end;
1169300    %else %do;
1169301    %let scoreFlag&id = 1;
1169302    data _temp&id;
1169303    set _temp&id;
1169304    where LHS ne NAME and node ne '';
1169305    run;
1169306    %let dsid = %sysfunc(open(_temp&id));
1169307    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1169308    %let dsid = %sysfunc(close(&dsid));
1169309    %if ^&&nobs&id %then %do;
1169310    proc datasets lib=work nolist;
1169311    delete _temp&id;
1169312    run;
1169313    quit;
1169314    %end;
1169315    %else %do;
1169316    proc sort data=_temp&id nodupkey;
1169317    by LHS NAME;
1169318    run;
1169319    %end;
1169320    %end;
1169321    %end;
1169322    %end;
1169323    %mend varDept;
1169324    %macro optCode(outdata=fcmpdata);
1169325    %global fcmpStart;
1169326    %let fcmpStart = 0;
1169327    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
1169328    %let NumNodes=9;
1169329    %do k=1 %to &NumNodes;
1169330    %vardept(fcmpdata=&outdata, id=&k);
1169331    %end;
1169332    %mend optCode;
1169333    %optcode(outData=EMWS8.Ensmbl9_FCMP);
MPRINT(EM_DIAGRAM):
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl9_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL9_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl9_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: There were 72 observations read from the data set EMWS8.ENSMBL9_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 54 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 18 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl9_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL9_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl9_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL9_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl9_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set EMWS8.ENSMBL9_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 18 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 18 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp5;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP5 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl9_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set EMWS8.ENSMBL9_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 18 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 18 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp6;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP6 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl9_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 66 observations read from the data set EMWS8.ENSMBL9_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 18 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 18 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl9_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL9_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl9_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL9_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;
 
1169334    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
1169335    * Ensmbl9: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * Ensmbl9: Computing metadata for TRAIN data;
1169336    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
 
NOTE: View EMWS8.ENSMBL9_TRAIN.VIEW used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
 
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl9\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS8.Ensmbl9_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS8.Ensmbl9_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS8.Ensmbl9_TRAIN out=WORK.M19253YQ noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M19253YQ;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20
INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M19253YQ(keep=name type length label format formatl
formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then format = strip(format)!!strip(put(formatl,
best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd,
best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then informat =
strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl,
best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M19253YQ;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M19253YQ;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M3VKY2AS NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3VKY2AS;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M3VKY2AS;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1SPK04S(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M3VKY2AS;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3VKY2AS;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32
FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M3VKY2AS;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN"
"MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO"
"QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" "YEAR" "YYMMDD" "YYMON"
"YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD"
"EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" ))
formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype =
"DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" ))
formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT"
"NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB"
"SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType =
"DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then
level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA',
'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W',
'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_
('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL',
'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT',
'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3VKY2AS;
MPRINT(EMADVISECOLUMNS):   set WORK.M3VKY2AS;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL=
"Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY=
"Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower limit" UPPERLIMIT=
"Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL=
"Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Reg9_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Reg9_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl9_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT
LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "Ensmbl9";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("DEPVAR") model = "Ensmbl9";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl9: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   if NAME in( "I_DepVar" "F_DepVar" "U_DepVar" "_WARN_" "P_DepVar1"
"P_DepVar0" "R_DepVar1" "R_DepVar0" ) then CREATOR="Ensmbl9";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
1169648    data EMWS8.Ensmbl9_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS8.Ensmbl9_EMINFO;
1169649    length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
1169650    input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
1169651    cards;
MPRINT(EM_DIAGRAM):   cards;
 
NOTE: The data set EMWS8.ENSMBL9_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   run;
1169655    run;
1169656    proc sort data = EMWS8.Ensmbl9_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS8.Ensmbl9_EMINFO NOTHREADS;
1169657    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
1169658    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set EMWS8.ENSMBL9_EMINFO.
NOTE: The data set EMWS8.ENSMBL9_EMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1169659    proc sort data = EMWS8.Reg9_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.Reg9_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
1169660    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
1169661    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set EMWS8.REG9_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1169662    proc sort data = EMWS8.Ensmbl9_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS8.Ensmbl9_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
1169663    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
1169664    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 3 observations read from the data set EMWS8.ENSMBL9_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1169665    data EMWS8.Ensmbl9_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl9_EMINFO;
1169666    merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
1169667    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
1169668    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 3 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS8.ENSMBL9_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1169669    proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
1169670    delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
1169671    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
1169672    quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
NOTE: View EMWS8.ENSMBL9_TRAIN.VIEW used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
 
NOTE: View EMWS8.ENSMBL9_VALIDATE.VIEW used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "19. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "11.18 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Report Log
Date:                19. April 2016
Time:                11.18 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O2LT6FVH
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl9\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O2LT6FVH new;
MPRINT(EM_DIAGRAM):   run;
1169696    data EMWS8.Ensmbl9_EMOUTFIT;
MPRINT(EM_DIAGRAM):    data EMWS8.Ensmbl9_EMOUTFIT;
1169697    set EMWS8.Ensmbl9_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl9_EMOUTFIT;
1169698    length TargetLabel $200;
MPRINT(EM_DIAGRAM):   length TargetLabel $200;
1169699    label targetLabel = "%sysfunc(sasmsg(sashelp.dmine, meta_targetlabel_vlabel,
1169699  ! NOQUOTE))";
MPRINT(EM_DIAGRAM):   label targetLabel = "Target Label";
1169700    if upcase(TARGET) eq "DEPVAR" then TargetLabel = 'DepVar';
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TargetLabel = 'DepVar';
1169701    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.ENSMBL9_EMOUTFIT.
NOTE: The data set EMWS8.ENSMBL9_EMOUTFIT has 1 observations and 20 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1169702    proc sort data=EMWS8.Ensmbl9_EMREPORTFIT nothreads;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS8.Ensmbl9_EMREPORTFIT nothreads;
1169703    by TARGET;
MPRINT(EM_DIAGRAM):   by TARGET;
1169704    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 9 observations read from the data set EMWS8.ENSMBL9_EMREPORTFIT.
NOTE: The data set EMWS8.ENSMBL9_EMREPORTFIT has 9 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1169705    %let _EMwarndup = 0;
1169706    %let _EMtargetdup =;
1169707    %let _EMASEtargetdup =;
1169708    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
1169709    set EMWS8.Ensmbl9_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl9_EMOUTFIT;
1169710    if .<_ASE_<0.000001 then do;
MPRINT(EM_DIAGRAM):   if .<_ASE_<0.000001 then do;
1169711    call symput('_EMwarndup', '1');
MPRINT(EM_DIAGRAM):   call symput('_EMwarndup', '1');
1169712    call symput('_EMtargetdup', target);
MPRINT(EM_DIAGRAM):   call symput('_EMtargetdup', target);
1169713    call symput('_EMASEtargetdup', put(_ASE_, best.));
MPRINT(EM_DIAGRAM):   call symput('_EMASEtargetdup', put(_ASE_, best.));
1169714    end;
MPRINT(EM_DIAGRAM):   end;
1169715    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.ENSMBL9_EMOUTFIT.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1169716    proc sort data=EMWS8.Reg9_CMeta_TRAIN out=WORK.SUBSETINMETA;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS8.Reg9_CMeta_TRAIN out=WORK.SUBSETINMETA;
1169717    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1169718    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set EMWS8.REG9_CMETA_TRAIN.
NOTE: The data set WORK.SUBSETINMETA has 44 observations and 21 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1169719    proc sort data=EMWS8.Ensmbl9_VariableSet out=WORK.SUBSETVARSET(keep=NAME REPORT);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Ensmbl9_VariableSet out=WORK.SUBSETVARSET(keep=NAME
REPORT);
1169720    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1169721    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set EMWS8.ENSMBL9_VARIABLESET.
NOTE: The data set WORK.SUBSETVARSET has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1169722    data WORK.ASSESS_META;
MPRINT(EM_DIAGRAM):   data WORK.ASSESS_META;
1169723    merge WORK.SUBSETINMETA WORK.SUBSETVARSET;
MPRINT(EM_DIAGRAM):   merge WORK.SUBSETINMETA WORK.SUBSETVARSET;
1169724    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1169725    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set WORK.SUBSETINMETA.
NOTE: There were 34 observations read from the data set WORK.SUBSETVARSET.
NOTE: The data set WORK.ASSESS_META has 44 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1169726    data EM_temp_assessMeta;
MPRINT(EM_DIAGRAM):    data EM_temp_assessMeta;
1169727    set EMWS8.Ensmbl9_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl9_CMeta_TRAIN;
1169728    where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION', 'ASSESS', 'COST')
1169728  ! ;
MPRINT(EM_DIAGRAM):   where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION',
'ASSESS', 'COST');
1169729    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 10 observations read from the data set EMWS8.ENSMBL9_CMETA_TRAIN.
      WHERE role in ('ASSESS', 'CLASSIFICATION', 'COST', 'DECISION', 'PREDICT', 'RESIDUAL');
NOTE: The data set WORK.EM_TEMP_ASSESSMETA has 10 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1169730    data EM_temp_assessdata;
MPRINT(EM_DIAGRAM):    data EM_temp_assessdata;
1169731    set EMWS8.Ensmbl9_TRAIN(keep=
1169732    F_DepVar
1169733    I_DepVar
1169734    P_DepVar0
1169735    P_DepVar1
1169736    R_DepVar0
1169737    R_DepVar1
1169738    U_DepVar
1169739    V_DepVar0
1169740    V_DepVar1
1169741    _WARN_
1169742    DepVar
1169743    );
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl9_TRAIN(keep= F_DepVar I_DepVar P_DepVar0 P_DepVar1
R_DepVar0 R_DepVar1 U_DepVar V_DepVar0 V_DepVar1 _WARN_ DepVar );
1169744    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2374 observations read from the data set EMWS8.PART_TRAIN.
NOTE: There were 2374 observations read from the data set EMWS8.META2_TRAIN.
NOTE: View EMWS8.ENSMBL9_TRAIN.VIEW used (Total process time):
      real time           0.15 seconds
      cpu time            0.15 seconds
 
NOTE: There were 2374 observations read from the data set EMWS8.REG9_TRAIN.
NOTE: There were 2374 observations read from the data set EMWS8.ENSMBL9_TRAIN.
NOTE: The data set WORK.EM_TEMP_ASSESSDATA has 2374 observations and 11 variables.
NOTE: DATA statement used (Total process time):
      real time           0.17 seconds
      cpu time            0.17 seconds
 
 
MPRINT(EM_DIAGRAM):    proc freq data=EM_temp_assessdata noprint;
MPRINT(EM_DIAGRAM):   table I_DepVar*F_DepVar / out = WORK.Ensmbl9_2V4AHXM nocol norow outpct;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.Ensmbl9_2V4AHXM;
MPRINT(EM_DIAGRAM):   length _TYPE_ $10 DATAROLE TARGET $32 TARGETLABEL $200 FROM INTO $32
CORRECTTEXT $40 ;
MPRINT(EM_DIAGRAM):   label _TYPE_ = "Outcome Type";
MPRINT(EM_DIAGRAM):   label DATAROLE = "Data Role";
MPRINT(EM_DIAGRAM):   label TARGET = "Target Variable";
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   label FROM = "Target";
MPRINT(EM_DIAGRAM):   label INTO = "Outcome";
MPRINT(EM_DIAGRAM):   label PCT_ROW = "Target Percentage";
MPRINT(EM_DIAGRAM):   label PCT_COL = "Outcome Percentage";
MPRINT(EM_DIAGRAM):   label COUNT = "Frequency Count";
MPRINT(EM_DIAGRAM):   label PERCENT = "Total Percentage";
MPRINT(EM_DIAGRAM):   label CORRECTTEXT = "Correct Text";
MPRINT(EM_DIAGRAM):   label CORRECT = "Correct";
MPRINT(EM_DIAGRAM):   set WORK.Ensmbl9_2V4AHXM(rename=(F_DepVar=FROM I_DepVar=INTO));
MPRINT(EM_DIAGRAM):   retain _TYPE_ 'PREDICTION' DATAROLE "TRAIN" TARGET "DepVar";
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TARGETLABEL = 'DepVar';
MPRINT(EM_DIAGRAM):   if FROM eq INTO then do;
MPRINT(EM_DIAGRAM):   CORRECT = 0;
MPRINT(EM_DIAGRAM):   CORRECTTEXT="Correct";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   CORRECT = 1;
MPRINT(EM_DIAGRAM):   CORRECTTEXT="Incorrect";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS8.Ensmbl9_EMCLASSIFICATION;
MPRINT(EM_DIAGRAM):   set WORK.Ensmbl9_2V4AHXM;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   set WORK.Ensmbl9_2V4AHXM;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.MISCREPORT(drop=INTO FROM _TYPE_);
MPRINT(EM_DIAGRAM):   set WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   length MISC $12;
MPRINT(EM_DIAGRAM):   if FROM='1' and INTO='1' then MISC='TRUEEVENT';
MPRINT(EM_DIAGRAM):   else if FROM='1' and INTO ne '1' then MISC='FALSENEVENT';
MPRINT(EM_DIAGRAM):   else if FROM ne '1' and INTO='1' then MISC='FALSEEVENT';
MPRINT(EM_DIAGRAM):   else if FROM ne'1' and INTO ne '1' then MISC='TRUENEVENT';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.MISCREPORT nothreads;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc summary data=WORK.MISCREPORT NWAY;
MPRINT(EM_DIAGRAM):   output out=WORK.MISCCOUNT(drop=_FREQ_ _TYPE_) SUM=COUNT;
MPRINT(EM_DIAGRAM):   CLASS MISC;
MPRINT(EM_DIAGRAM):   VAR COUNT;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc transpose data=WORK.MISCCOUNT out=WORK.MISCREPORT(drop=_NAME_
_LABEL_);
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   ID MISC;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS8.Ensmbl9_EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   length TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TARGETLABEL = 'DepVar';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data ASSESS_REPORTMETA;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl9_VariableSet;
MPRINT(EM_DIAGRAM):   where REPORT='Y';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename temp catalog 'sashelp.emassmt.em_assess.source';
MPRINT(EM_DIAGRAM):   filename temp;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set EMWS8.Reg9_DepVar_DM;
MPRINT(EM_DIAGRAM):   where _TYPE_="TARGET";
MPRINT(EM_DIAGRAM):   call symput('ASSMT_EVENT', strip(event));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):
MPRINT(EM_ASSESS):   data _ea_tmpdata;
MPRINT(EM_ASSESS):   set EM_temp_assessdata;
MPRINT(EM_ASSESS):   _tmpfreqvar_=1;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_CHECKEMSETINIT):   DATA _NULL_;
MPRINT(EM_CHECKEMSETINIT):   EM_SETINIT = 'N';
MPRINT(EM_CHECKEMSETINIT):   IF SYSPROD('PRODNUM50') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM448') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM102') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM103') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   CALL SYMPUT('EM_SETINIT', EM_SETINIT);
MPRINT(EM_CHECKEMSETINIT):   RUN;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Reading in reporting data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET ASSESS_REPORTMETA END = EOF;
MPRINT(EM_ASSESS):   IF TYPE = "C" OR UPCASE (LEVEL) IN ("NOMINAL", "BINARY" , "ORDINAL") THEN
DO;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) NE UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   NUMCTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTC" || LEFT (PUT (NUMCTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "C");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF UPCASE(NAME) NE UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   NUMNTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTN" || LEFT (PUT (NUMNTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMNTOREPORT", NUMNTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMCTOREPORT", NUMCTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMTOREPORT", SUM (NUMNTOREPORT, NUMCTOREPORT));
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   PROC DMDB DATA = _ea_tmpdata VAROUT = VAROUT DMDBCAT = _D CLASSOUT =
_ASSMT_CLASSOUT;
MPRINT(EM_ASSESS):   CLASS F_DepVar ;
 
MPRINT(EM_ASSESS):   VAR P_DepVar1 _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_;
MPRINT(EM_ASSESS):   RUN ;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   PROC SORT DATA = _ASSMT_CLASSOUT;
MPRINT(EM_ASSESS):   BY NAME;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _auxeventname (keep = __event__) ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ...FLAG0_1 = ..... TARGET IS 0, 1 & EVENT = 1;
 
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   length __event__ $ 32;
MPRINT(EM_ASSESS):   RETAIN FLAG0_1 1 NUM1 . NUM0 . __event__ "_missing_" ;
 
MPRINT(EM_ASSESS):   SET _ASSMT_CLASSOUT END = EOF;
MPRINT(EM_ASSESS):   BY NAME;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ....... LEVEL = BINARY OR NOMINAL OR ORDINAL;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   IF UPCASE(NAME) = UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   CUMFREQ + FREQUENCY;
MPRINT(EM_ASSESS):   IF LEVEL NE "." THEN DO;
MPRINT(EM_ASSESS):   N1 + 1;
MPRINT(EM_ASSESS):   IF (NRAW NE 0 AND NRAW NE 1) OR TYPE NE "N" OR "" > " " THEN FLAG0_1 = 0;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ......................... IF EVENT NE BLANK;
MPRINT(EM_ASSESS):   * ....................LEVEL IS CHAR VAR ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   IF UPCASE("1") = UPCASE(LEVEL) THEN DO;
MPRINT(EM_ASSESS):   NUM1 = FREQUENCY;
MPRINT(EM_ASSESS):   IF TYPE = "C" THEN do;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("EVENTVALUERAW", CRAW );
MPRINT(EM_ASSESS):   __event__ = craw;
MPRINT(EM_ASSESS):   end;
MPRINT(EM_ASSESS):   ELSE do;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("EVENTVALUERAW", NRAW );
MPRINT(EM_ASSESS):   __event__ = nraw;
MPRINT(EM_ASSESS):   end;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF LAST.NAME THEN DO;
 
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * .............. IN NOMINAL CASE, NEED TO GROUP ALL '0' ;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   NUM0 = SUM (CUMFREQ, - NUM1);
MPRINT(EM_ASSESS):   IF NUM0 < 0 THEN NUM0 = 0;
MPRINT(EM_ASSESS):   IF NUM1 = . THEN NUM1 = 0;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUM0", NUM0 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUM1", NUM1);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PNUM1", NUM1 / CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PNUM0", (CUMFREQ - NUM1) / CUMFREQ);
MPRINT(EM_ASSESS):   IF TYPE = "C" THEN DO;
MPRINT(EM_ASSESS):   FLAG0_1 = 0;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "C" );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF "" = " " THEN DO;
MPRINT(EM_ASSESS):   IF "1" NE "1" THEN FLAG0_1 = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "N" );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ................... IF TYPE = N;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("FLAG0_1", FLAG0_1 );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..................IF LAST.NAME ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ...............IF LEVEL NE '.' ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * .............. IF NAME = TARGET;
MPRINT(EM_ASSESS):   ELSE IF "" > " " AND UPCASE(NAME) = UPCASE("") THEN DO;
MPRINT(EM_ASSESS):   NUMDECISIONS + 1;
MPRINT(EM_ASSESS):   LEVEL = TRANSLATE (LEVEL, "_", "'", "_", '"');
MPRINT(EM_ASSESS):   CALL SYMPUTX ("D_LABEL" || LEFT (PUT (NUMDECISIONS, 3.)), LEVEL );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..................... ELSE IF UPCASE;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   output _auxeventname;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMOBS", CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMDECISIONS", NUMDECISIONS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET VAROUT END = EOF;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) = UPCASE ("P_DepVar1") THEN DO;
MPRINT(EM_ASSESS):   IF N = 0 THEN DO;
MPRINT(EM_ASSESS):   PUT //// "          Warning: All posterior probabilities are missing
values ";
MPRINT(EM_ASSESS):   PUT ///;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("ALLMISS", 1);
MPRINT(EM_ASSESS):   STOP;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("ALLMISS", 0);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB", MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB", MAX);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("DIFF", MAX - MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NMISSPROB", NMISS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF UPCASE (NAME) = UPCASE ("_tmpfreqvar_") THEN DO;
MPRINT(EM_ASSESS):   AUXMIN = MIN - INT (MIN);
MPRINT(EM_ASSESS):   AUXMAX = MAX - INT (MAX);
MPRINT(EM_ASSESS):   IF AUXMIN > 0 OR AUXMAX > 0 THEN CALL SYMPUTX ("USEWEIGHT", "Y");
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("USEWEIGHT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _ANY0;
MPRINT(EM_ASSESS):   SET _ea_tmpdata (KEEP = F_DepVar P_DepVar1 _tmpfreqvar_ );
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................... No Formats;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF LEFT ( F_DepVar ) = "1" THEN NTARGET = 1;
MPRINT(EM_ASSESS):   ELSE NTARGET = 0;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .............. Before proc summary of binary case;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC SUMMARY DATA = _ANY0 (KEEP = P_DepVar1 NTARGET _tmpfreqvar_ WHERE =
(NTARGET > . )) NWAY MISSING;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   CLASS P_DepVar1 ;
MPRINT(EM_ASSESS):   VAR NTARGET ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   OUTPUT OUT = ANYSUM (DROP = _TYPE_) MEAN = _MEANTARGET _MEANFREQVAR ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... Main Data Set Processing, Binary case;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK (KEEP = BASECAPC BASECAP __EVENT__ BASEEVENTS
BASEGAIN BASELIFT BASERESP BASERESPC BESTCAP BESTCAPC BESTGAIN BESTLIFT BESTLIFTC
BESTNUMEVENTS BESTRESP BESTRESPC BIN CBASELIFT C_LIFT C_P_CAPT_RESP C_P_RESP GAIN LIFT MAXPROB
MINPROB MNPROB NUMNONRESP NUMOBS NUMRESP PERCENTILE P_CAPT_RESP P_RESP ) WORK._TEMPSCOREDIST
(KEEP = BIN LOWERPROB UPPERPROB EVENTVALUE SCR_NUMEVENTS MODELSCORE SCR_NUMNONEVENTS RANGE
NUMOBSINGROUP PERCOBSINGROUP C_PERCOBSINGROUP SCR_P_EVENTS SCR_CP_EVENTS SCR_P_NONEVENTS
SCR_CP_NONEVENTS SCR_MNPROB SCR_MINPROB SCR_MAXPROB ) ;
 
MPRINT(EM_ASSESS):   SET ANYSUM END = EOF;
 
MPRINT(EM_ASSESS):   IF _N_ = 1 THEN SET _AUXEVENTNAME;
 
MPRINT(EM_ASSESS):   RETAIN MINPROB1 - MINPROB20 1 MAXPROB1 - MAXPROB20 0 MNPROB1 - MNPROB20 0
NUMOBS1 - NUMOBS20 0 NUMRESP1 - NUMRESP20 0 TRUEPOS1 - TRUEPOS100 0 TRUENEG1 - TRUENEG100 0
FALSEPOS1 - FALSEPOS100 0 FALSENEG1 - FALSENEG100 0 EVENTS1 - EVENTS100 NONEVENTS1 -
NONEVENTS100 0 FIRSTIN1 - FIRSTIN100 . LASTIN1 - LASTIN100 . RESPRATE 0.151221567 _NEVENTS 359
_NNONEVENTS 2015 TARGET "NTARGET" ;
MPRINT(EM_ASSESS):   ARRAY MINPROBS (20) MINPROB1 - MINPROB20;
MPRINT(EM_ASSESS):   ARRAY MAXPROBS (20) MAXPROB1 - MAXPROB20;
MPRINT(EM_ASSESS):   ARRAY MNPROBS (20) MNPROB1 - MNPROB20;
MPRINT(EM_ASSESS):   ARRAY NUMOBSS (20) NUMOBS1 - NUMOBS20;
MPRINT(EM_ASSESS):   ARRAY NUMRESPS (20) NUMRESP1 - NUMRESP20;
MPRINT(EM_ASSESS):   ARRAY TRUEPOSX (100) TRUEPOS1 - TRUEPOS100;
MPRINT(EM_ASSESS):   ARRAY FALSEPOSX (100) FALSEPOS1 - FALSEPOS100;
MPRINT(EM_ASSESS):   ARRAY FALSENEGX (100) FALSENEG1 - FALSENEG100;
MPRINT(EM_ASSESS):   ARRAY TRUENEGX (100) TRUENEG1 - TRUENEG100;
MPRINT(EM_ASSESS):   ARRAY _EVENTS (100) EVENTS1 - EVENTS100;
MPRINT(EM_ASSESS):   ARRAY NONEVENTS (100) NONEVENTS1 - NONEVENTS100;
MPRINT(EM_ASSESS):   ARRAY FIRSTIN (100) FIRSTIN1 - FIRSTIN100;
MPRINT(EM_ASSESS):   ARRAY LASTIN (100) LASTIN1 - LASTIN100;
MPRINT(EM_ASSESS):   RETAIN SCR_MNPROB1 - SCR_MNPROB100 0 SCR_MINPROB1 - SCR_MINPROB100 1
SCR_MAXPROB1 - SCR_MAXPROB100 0;
MPRINT(EM_ASSESS):   ARRAY SCR_MNPROBS (100) SCR_MNPROB1 - SCR_MNPROB100;
MPRINT(EM_ASSESS):   ARRAY SCR_MINPROBS (100) SCR_MINPROB1 - SCR_MINPROB100;
MPRINT(EM_ASSESS):   ARRAY SCR_MAXPROBS (100) SCR_MAXPROB1 - SCR_MAXPROB100;
MPRINT(EM_ASSESS):   DROP SCR_MINPROB1 - SCR_MINPROB100 SCR_MAXPROB1 - SCR_MAXPROB100
SCR_MNPROB1 - SCR_MNPROB100 ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...... Area For 8 Financials ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF _MEANTARGET = . THEN _MEANTARGET = RESPRATE;
MPRINT(EM_ASSESS):   DROP N1 _K SUMWEIGHTS ;
MPRINT(EM_ASSESS):   SUMWEIGHTS = 1;
 
MPRINT(EM_ASSESS):   DO _K = 1 TO CEIL (_FREQ_);
MPRINT(EM_ASSESS):   IF _K = CEIL (_FREQ_) THEN DO;
MPRINT(EM_ASSESS):   IF _FREQ_ < CEIL (_FREQ_) THEN _WEIGHT = _FREQ_ - FLOOR (_FREQ_);
MPRINT(EM_ASSESS):   ELSE _WEIGHT = 1;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE _WEIGHT = 1;
MPRINT(EM_ASSESS):   N1 + _WEIGHT;
MPRINT(EM_ASSESS):   NTARGET = _MEANTARGET ;
MPRINT(EM_ASSESS):   DECILE = MIN (20, CEIL (N1 * 20 / 2374));
MPRINT(EM_ASSESS):   MINPROBS ( DECILE) = MIN (MINPROBS ( DECILE), P_DepVar1 );
MPRINT(EM_ASSESS):   MAXPROBS ( DECILE) = MAX (MAXPROBS ( DECILE), P_DepVar1 );
MPRINT(EM_ASSESS):   MNPROBS ( DECILE) = SUM (MNPROBS ( DECILE), P_DepVar1 * _WEIGHT);
MPRINT(EM_ASSESS):   NUMOBSS ( DECILE) = NUMOBSS ( DECILE) + _WEIGHT;
MPRINT(EM_ASSESS):   NUMRESPS ( DECILE) = NUMRESPS ( DECILE) + _MEANTARGET * _WEIGHT;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ outside of do loop, Area for final ROC;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   RANKDELTA = (ROUND ( _FREQ_ ) + 1) / 2;
MPRINT(EM_ASSESS):   RANK = UNTIEDRANK + RANKDELTA;
MPRINT(EM_ASSESS):   DROP RANK ;
MPRINT(EM_ASSESS):   SUMRANK1 + RANK * ROUND (_MEANTARGET * _FREQ_, .0000001);
MPRINT(EM_ASSESS):   UNTIEDRANK + ROUND (_FREQ_, .00000001);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Area For ROC Curve;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DO _K = 1 TO 100;
MPRINT(EM_ASSESS):   IF P_DepVar1 * 100 >= _K THEN DO;
MPRINT(EM_ASSESS):   TRUEPOSX ( _K ) + _FREQ_ * _MEANTARGET ;
MPRINT(EM_ASSESS):   FALSEPOSX ( _K ) + _FREQ_ * (1 - _MEANTARGET) ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   TRUENEGX ( _K ) + _FREQ_ * ( 1 - _MEANTARGET) ;
MPRINT(EM_ASSESS):   FALSENEGX ( _K ) + _FREQ_ * _MEANTARGET ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   SLOT = MIN (MAX (CEIL (P_DepVar1 * 100), 1), 100) ;
MPRINT(EM_ASSESS):   DROP SLOT;
MPRINT(EM_ASSESS):   FIRSTIN ( SLOT ) = MIN ( FIRSTIN ( SLOT ), P_DepVar1);
MPRINT(EM_ASSESS):   LASTIN ( SLOT ) = MAX ( LASTIN ( SLOT ), P_DepVar1);
MPRINT(EM_ASSESS):   _EVENTS ( SLOT) = _EVENTS ( SLOT) + _FREQ_ * _MEANTARGET;
MPRINT(EM_ASSESS):   NONEVENTS ( SLOT) = NONEVENTS ( SLOT) + _FREQ_ * (1 - _MEANTARGET);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ START OF OUTDIST IN BINARY CASE MAIN DATA STEP ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   SCR_MNPROBS ( SLOT ) = SUM (SCR_MNPROBS (SLOT), P_DepVar1 * _FREQ_ );
MPRINT(EM_ASSESS):   SCR_MINPROBS ( SLOT ) = MIN (SCR_MINPROBS (SLOT), P_DepVar1 );
MPRINT(EM_ASSESS):   SCR_MAXPROBS ( SLOT ) = MAX (SCR_MAXPROBS (SLOT), P_DepVar1 );
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ End of Outdist in Binary case main DATA STEP ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   PUT //;
MPRINT(EM_ASSESS):   DO K = 1 TO 20;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LENGTH EVENTVALUE $ 32;
MPRINT(EM_ASSESS):   RETAIN EVENTVALUE "1" ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ......... Start of EOF area of BINARY processing of main data set ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SUMRANK1", SUMRANK1);
MPRINT(EM_ASSESS):   LENGTH DATAROLE $ 10;
MPRINT(EM_ASSESS):   RETAIN DATAROLE "TRAIN" ;
MPRINT(EM_ASSESS):   RETAIN OVLMIN 0.0031266713 OVLMAX 0.9849700145 ;
MPRINT(EM_ASSESS):   DROP OVLMIN OVLMAX ;
MPRINT(EM_ASSESS):   C_NUMOBS = 0;
MPRINT(EM_ASSESS):   C_NUM_RESP = 0;
MPRINT(EM_ASSESS):   C_NUM_NONRESP = 0;
MPRINT(EM_ASSESS):   C_P_RESP = 0;
MPRINT(EM_ASSESS):   P_CAPT_RESP = 0;
MPRINT(EM_ASSESS):   C_P_CAPT_RESP = 0;
MPRINT(EM_ASSESS):   PREVIOUSPROFIT = 0;
MPRINT(EM_ASSESS):   MAXPROFIT = 0;
MPRINT(EM_ASSESS):   _KS_BIN_ = 0;
MPRINT(EM_ASSESS):   DROP _KS_BIN_;
MPRINT(EM_ASSESS):   AVGNUMRESP = _NEVENTS / 20;
MPRINT(EM_ASSESS):   BASERESP = 100 * RESPRATE;
MPRINT(EM_ASSESS):   BASERESPC = BASERESP;
MPRINT(EM_ASSESS):   BASECAP = 100 / 20;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................Start OF Gainschart = Outranks Area;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   _KS_BIN_PROB = 0;
MPRINT(EM_ASSESS):   DO GROUP = 20 TO 1 BY -1;
 
MPRINT(EM_ASSESS):   BASECAPC + BASECAP;
MPRINT(EM_ASSESS):   PERCENTILE = GROUP * (100 / 20);
MPRINT(EM_ASSESS):   MINPROB = MINPROBS ( GROUP);
MPRINT(EM_ASSESS):   MAXPROB = MAXPROBS ( GROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB" || LEFT ( PUT (GROUP, 3.)), MINPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB" || LEFT ( PUT (GROUP, 3.)), MAXPROB);
MPRINT(EM_ASSESS):   NUMOBS = NUMOBSS ( GROUP);
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN MNPROB = MNPROBS ( GROUP) / NUMOBS;
MPRINT(EM_ASSESS):   ELSE MNPROB = .;
MPRINT(EM_ASSESS):   C_NUMOBS = SUM (NUMOBS, C_NUMOBS);
MPRINT(EM_ASSESS):   NUMRESP = NUMRESPS ( GROUP);
MPRINT(EM_ASSESS):   NUMNONRESP = NUMOBS - NUMRESP;
MPRINT(EM_ASSESS):   C_AVGNUM_RESP + AVGNUMRESP;
MPRINT(EM_ASSESS):   IF C_NUMOBS <= _NEVENTS THEN DO;
MPRINT(EM_ASSESS):   BESTNUMEVENTS = NUMOBS;
MPRINT(EM_ASSESS):   BESTCAPC = C_NUMOBS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   BASEEVENTS = _NEVENTS / 20;
MPRINT(EM_ASSESS):   BASENONEVENTS = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   FLAG + 1;
MPRINT(EM_ASSESS):   DROP FLAG;
MPRINT(EM_ASSESS):   BESTNUMEVENTS = _NEVENTS - C_NUMOBS + NUMOBS;
MPRINT(EM_ASSESS):   IF FLAG > 1 THEN BESTNUMEVENTS = 0;
MPRINT(EM_ASSESS):   BESTCAPC = 100;
MPRINT(EM_ASSESS):   IF C_NUMOBS - _NEVENTS <= NUMOBS THEN DO;
MPRINT(EM_ASSESS):   BASEEVENTS = C_NUMOBS - _NEVENTS;
MPRINT(EM_ASSESS):   BASENONEVENTS = NUMOBS - C_NUMOBS + _NEVENTS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BASEEVENTS = 0;
MPRINT(EM_ASSESS):   BASENONEVENTS = NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   BESTCAP = BESTNUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   BESTLIFT = BESTNUMEVENTS / AVGNUMRESP;
MPRINT(EM_ASSESS):   C_BESTNUMEVENTS + BESTNUMEVENTS;
MPRINT(EM_ASSESS):   DROP C_BESTNUMEVENTS;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN BESTLIFTC = C_BESTNUMEVENTS / (_NEVENTS / 2374 *
C_NUMOBS);
MPRINT(EM_ASSESS):   ELSE BESTLIFTC = .;
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BESTRESP = BESTNUMEVENTS * 100 / NUMOBS;
MPRINT(EM_ASSESS):   P_RESP = NUMRESP * 100 / NUMOBS;
MPRINT(EM_ASSESS):   P_NONRESP = NUMNONRESP * 100 / NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTRESP = .;
MPRINT(EM_ASSESS):   P_RESP = .;
MPRINT(EM_ASSESS):   P_NONRESP = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BESTRESPC = C_BESTNUMEVENTS * 100 / C_NUMOBS;
MPRINT(EM_ASSESS):   BESTGAIN = MAX (0, ((C_BESTNUMEVENTS / C_NUMOBS ) / ( AVGNUMRESP /
NUMOBS) - 1) * 100);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTRESPC = .;
MPRINT(EM_ASSESS):   BESTGAIN = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF NUMNONRESP > 0 THEN ODDS = NUMRESP / NUMNONRESP;
MPRINT(EM_ASSESS):   ELSE ODDS = .;
MPRINT(EM_ASSESS):   C_NUM_RESP = SUM (C_NUM_RESP , NUMRESP );
MPRINT(EM_ASSESS):   C_NUM_NONRESP = SUM (C_NUM_NONRESP, NUMNONRESP );
MPRINT(EM_ASSESS):   IF C_NUM_NONRESP > 0 THEN C_ODDS = C_NUM_RESP / C_NUM_NONRESP;
MPRINT(EM_ASSESS):   ELSE C_ODDS = .;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   C_P_RESP = C_NUM_RESP * 100 / C_NUMOBS;
MPRINT(EM_ASSESS):   GAIN = ABS(100 * (((C_NUM_RESP / C_NUMOBS ) / (_NEVENTS / 2374)) - 1));
MPRINT(EM_ASSESS):   BASEGAIN = 100 * (( (C_AVGNUM_RESP / C_NUMOBS) / ( AVGNUMRESP / NUMOBS))
- 1);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   GAIN = .;
MPRINT(EM_ASSESS):   BASEGAIN = .;
MPRINT(EM_ASSESS):   C_P_RESP = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF BASEGAIN <= 0 THEN BASEGAIN = 0;
MPRINT(EM_ASSESS):   P_CAPT_RESP = NUMRESP * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   P_CAPT_NONRESP = NUMNONRESP * 100 / ( 2374 - _NEVENTS);
MPRINT(EM_ASSESS):   C_P_CAPT_RESP = C_NUM_RESP * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   C_P_CAPT_NONRESP = C_NUM_NONRESP * 100 / ( 2374 - _NEVENTS);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Area For Binned KS in Outranks area;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   _DIFFERENCE = C_P_CAPT_RESP - C_P_CAPT_NONRESP ;
MPRINT(EM_ASSESS):   IF _KS_BIN_ < _DIFFERENCE THEN DO;
MPRINT(EM_ASSESS):   _KS_BIN_ = _DIFFERENCE;
MPRINT(EM_ASSESS):   _KS_BIN_PROB = MINPROB + (MAXPROB - MINPROB) / 2 ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LIFT = P_RESP * .01 / RESPRATE ;
MPRINT(EM_ASSESS):   C_LIFT = C_P_RESP * .01 / RESPRATE;
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BASELIFT = AVGNUMRESP / ( RESPRATE * NUMOBS );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE BASELIFT = .;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN CBASELIFT = C_AVGNUM_RESP / (RESPRATE * C_NUMOBS);
MPRINT(EM_ASSESS):   ELSE CBASELIFT = .;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ WITHIN DO LOOP FOR OUTRANKS;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   BIN = 20 + 1 - GROUP;
MPRINT(EM_ASSESS):   PERCENTILE = BIN * (100 / 20);
MPRINT(EM_ASSESS):   B_C_P_RESP = PERCENTILE;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPRANK ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................ END OF GAINSCHART = OUTRANKS AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROFITGROUP" , MAXPROFITGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROFIT" , MAXPROFIT );
MPRINT(EM_ASSESS):   KS_ABSDIFF = 0 ;
MPRINT(EM_ASSESS):   MINPRECTPR = 9999;
MPRINT(EM_ASSESS):   Y0 = 1 - RESPRATE;
MPRINT(EM_ASSESS):   Y1 = RESPRATE;
MPRINT(EM_ASSESS):   MAXMUTUAL = 0;
MPRINT(EM_ASSESS):   DROP MAXMUTUAL KSPROB Y0 Y1 KS_ABSDIFF MINPRECTPR;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .....................About to start Processing Outroc ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................... Finished Processing Outroc ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .............. Outdist ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   BIN = 20 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS96 - EVENTS100 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS96 - NONEVENTS100);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB96 -
SCR_MNPROB100) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB96 - SCR_MINPROB100) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB96 - SCR_MAXPROB100) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 20;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 19 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS91 - EVENTS95 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS91 - NONEVENTS95);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB91 -
SCR_MNPROB95) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB91 - SCR_MINPROB95) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB91 - SCR_MAXPROB95) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 19;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 18 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS86 - EVENTS90 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS86 - NONEVENTS90);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB86 -
SCR_MNPROB90) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB86 - SCR_MINPROB90) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB86 - SCR_MAXPROB90) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 18;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 17 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS81 - EVENTS85 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS81 - NONEVENTS85);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB81 -
SCR_MNPROB85) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB81 - SCR_MINPROB85) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB81 - SCR_MAXPROB85) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 17;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 16 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS76 - EVENTS80 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS76 - NONEVENTS80);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB76 -
SCR_MNPROB80) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB76 - SCR_MINPROB80) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB76 - SCR_MAXPROB80) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 16;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 15 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS71 - EVENTS75 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS71 - NONEVENTS75);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB71 -
SCR_MNPROB75) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB71 - SCR_MINPROB75) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB71 - SCR_MAXPROB75) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 15;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 14 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS66 - EVENTS70 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS66 - NONEVENTS70);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB66 -
SCR_MNPROB70) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB66 - SCR_MINPROB70) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB66 - SCR_MAXPROB70) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 14;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 13 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS61 - EVENTS65 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS61 - NONEVENTS65);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB61 -
SCR_MNPROB65) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB61 - SCR_MINPROB65) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB61 - SCR_MAXPROB65) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 13;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 12 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS56 - EVENTS60 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS56 - NONEVENTS60);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB56 -
SCR_MNPROB60) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB56 - SCR_MINPROB60) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB56 - SCR_MAXPROB60) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 12;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 11 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS51 - EVENTS55 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS51 - NONEVENTS55);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB51 -
SCR_MNPROB55) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB51 - SCR_MINPROB55) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB51 - SCR_MAXPROB55) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 11;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 10 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS46 - EVENTS50 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS46 - NONEVENTS50);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB46 -
SCR_MNPROB50) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB46 - SCR_MINPROB50) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB46 - SCR_MAXPROB50) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 10;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 9 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS41 - EVENTS45 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS41 - NONEVENTS45);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB41 -
SCR_MNPROB45) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB41 - SCR_MINPROB45) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB41 - SCR_MAXPROB45) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 9;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 8 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS36 - EVENTS40 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS36 - NONEVENTS40);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB36 -
SCR_MNPROB40) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB36 - SCR_MINPROB40) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB36 - SCR_MAXPROB40) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 8;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 7 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS31 - EVENTS35 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS31 - NONEVENTS35);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB31 -
SCR_MNPROB35) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB31 - SCR_MINPROB35) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB31 - SCR_MAXPROB35) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 7;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 6 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS26 - EVENTS30 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS26 - NONEVENTS30);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB26 -
SCR_MNPROB30) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB26 - SCR_MINPROB30) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB26 - SCR_MAXPROB30) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 6;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 5 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS21 - EVENTS25 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS21 - NONEVENTS25);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB21 -
SCR_MNPROB25) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB21 - SCR_MINPROB25) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB21 - SCR_MAXPROB25) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 5;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 4 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS16 - EVENTS20 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS16 - NONEVENTS20);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB16 -
SCR_MNPROB20) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB16 - SCR_MINPROB20) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB16 - SCR_MAXPROB20) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 4;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 3 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS11 - EVENTS15 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS11 - NONEVENTS15);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB11 -
SCR_MNPROB15) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB11 - SCR_MINPROB15) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB11 - SCR_MAXPROB15) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 3;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 2 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS6 - EVENTS10 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS6 - NONEVENTS10);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB6 -
SCR_MNPROB10) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB6 - SCR_MINPROB10) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB6 - SCR_MAXPROB10) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 2;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 1 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS1 - EVENTS5 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS1 - NONEVENTS5);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB1 - SCR_MNPROB5)
/ NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB1 - SCR_MINPROB5) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB1 - SCR_MAXPROB5) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 1;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("KSPROB" , PUT (KSPROB, 5.3 ) );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("_KS_BIN_PROB" , _KS_BIN_PROB );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("_KS_BIN_" , _KS_BIN_ / 100 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("KSDIFF" , KS_ABSDIFF );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PRECTPR" , PRECTPR );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXMUTUALPROB" , MAXMUTUALPROB);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LABEL __EVENT__ = "Event" DECILE = "Depth" BIN = "Bin" NUMOBS = "Number
of Observations" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * RUN for large data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST;
MPRINT(EM_ASSESS):   DELETE _AUXEVENTNAME;
MPRINT(EM_ASSESS):   QUIT;
 
MPRINT(EM_ASSESS):   OPTION NOCENTER LS = 95;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Report Vars Area.;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start OF Outdist Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPSCOREDIST;
MPRINT(EM_ASSESS):   RENAME MODELSCORE = SCORE UPPERPROB = UPPOSTERIOR SCR_CP_EVENTS =
CUMULATIVEPERCENTAGEOFEVENTS SCR_CP_NONEVENTS = CUMULATIVEPERCENTAGEOFNONEVENTS EVENTVALUE =
EVENT LOWERPROB = LOWPOSTERIOR NUMOBSINGROUP = N PERCOBSINGROUP = PERCENTAGE SCR_MINPROB =
_MINP_ SCR_MAXPROB = _MAXP_ SCR_MNPROB = _MEANP_ RANGE = P_LABEL C_PERCOBSINGROUP =
CUMULATIVEPERCENTAGE SCR_NUMEVENTS = NUMBEROFEVENTS SCR_NUMNONEVENTS = NUMBEROFNONEVENTS
SCR_P_EVENTS = PERCENTAGEOFEVENTS SCR_P_NONEVENTS = PERCENTAGEOFNONEVENTS ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... OUTDIST MODIFICATION LABEL AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL BIN = "Bin" N = "Number of Observations" P_LABEL = "Posterior
Probability Range" EVENT = "Event" LOWPOSTERIOR = "Lower Bound Posterior Probability"
PERCENTAGEOFEVENTS = "Percentage of Events" CUMULATIVEPERCENTAGEOFNONEVENTS = "Cumulative
Percentage of Nonevents" CUMULATIVEPERCENTAGE = "Cumulative Percentage" PERCENTAGEOFEVENTS =
"Percentage of Events" PERCENTAGEOFNONEVENTS = "Percentage of Nonevents"
CUMULATIVEPERCENTAGEOFEVENTS = "Cumulative Percentage of Events" UPPOSTERIOR = "Upper Bound
Posterior Probability" NUMBEROFEVENTS = "Number of Events" PERCENTAGE = "Percentage"
NUMBEROFNONEVENTS = "Number of Nonevents" _MEANP_ = "Mean Posterior Probability" _MINP_ = "Min
Posterior Probability" _MAXP_ = "Max Posterior Probability" SCORE = "Model Score" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   SET WORK._TEMPSCOREDIST (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........... END OF OUTDIST MODIFICATION;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start of OUTRANKS Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPRANK;
MPRINT(EM_ASSESS):   RENAME __EVENT__ = EVENT P_RESP = RESP C_P_CAPT_RESP = CAPC P_CAPT_RESP =
CAP NUMNONRESP = NUMNEVENT NUMRESP = NUMEVENT BASEEVENTS = BASENUMBEROFEVENTS BESTNUMEVENTS =
BESTNUMBEROFEVENTS MAXPROB = _MAXP_ MINPROB = _MINP_ CBASELIFT = BASELIFTC C_LIFT = LIFTC
MNPROB = _MEANP_ PERCENTILE = DECILE NUMOBS = N NUMEVENT = NUMBEROFEVENTS C_P_RESP = RESPC ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................. OUTRANKS;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL _MAXP_ = "Max Posterior Probability" _MINP_ = "Min Posterior
Probability" _MEANP_ = "Mean Posterior Probability" BASECAP = "Baseline % Captured Response"
BASECAPC = "Baseline Cumulative % Captured Response" BASENUMBEROFEVENTS = "Baseline Number of
Events" BASEGAIN = "Baseline Gain" BASELIFT = "Baseline Lift" BASELIFTC = "Baseline Cumulative
Lift" BASERESP = "Baseline % Response" BASERESPC = "Baseline Cumulative % Response" BASELIFTC
= "Baseline Cumulative Lift" BESTCAP = "Best % Captured Response" BESTCAPC = "Best Cumulative
% Captured Response" BESTGAIN = "Best Gain" BESTRESP = "Best % Response" BESTRESPC = "Best
Cumulative % Response" BESTLIFT = "Best Lift" BESTLIFTC = "Best Cumulative Lift"
BESTNUMBEROFEVENTS = "Best Number of Events" CAP = "% Captured Response" CAPC = "Cumulative %
Captured Response" DECILE = "Depth" GAIN = "Gain" LIFT = "Lift" LIFTC = "Cumulative Lift"
NUMNEVENT = "Number of Nonevents" N = "Number of Observations" EVENT = "Event" RESPC =
"Cumulative % Response" NUMBEROFEVENTS = "Number of Events" RESP = "% Response" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK;
MPRINT(EM_ASSESS):   SET WORK._TEMPRANK (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   proc datasets lib=work nolist;
MPRINT(EM_ASSESS):   delete _ea_tmpdata;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_ASSESS):   quit;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   OPTION ERRORS = 20;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):    data WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   retain target "DepVar";
MPRINT(EM_DIAGRAM):   retain TARGETLABEL 'DepVar';
MPRINT(EM_DIAGRAM):   retain dataRole "TRAIN";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl9_EMRANK;
MPRINT(EM_DIAGRAM):   set WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   retain target "DepVar";
MPRINT(EM_DIAGRAM):   retain TARGETLABEL 'DepVar';
MPRINT(EM_DIAGRAM):   retain dataRole "TRAIN";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl9_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   set WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   run;
1174010    data EM_temp_assessMeta;
MPRINT(EM_DIAGRAM):    data EM_temp_assessMeta;
1174011    set EMWS8.Ensmbl9_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl9_CMeta_TRAIN;
1174012    where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION', 'ASSESS', 'COST')
1174012  ! ;
MPRINT(EM_DIAGRAM):   where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION',
'ASSESS', 'COST');
1174013    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 10 observations read from the data set EMWS8.ENSMBL9_CMETA_TRAIN.
      WHERE role in ('ASSESS', 'CLASSIFICATION', 'COST', 'DECISION', 'PREDICT', 'RESIDUAL');
NOTE: The data set WORK.EM_TEMP_ASSESSMETA has 10 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1174014    data EM_temp_assessdata;
MPRINT(EM_DIAGRAM):    data EM_temp_assessdata;
1174015    set EMWS8.Ensmbl9_VALIDATE(keep=
1174016    F_DepVar
1174017    I_DepVar
1174018    P_DepVar0
1174019    P_DepVar1
1174020    R_DepVar0
1174021    R_DepVar1
1174022    U_DepVar
1174023    V_DepVar0
1174024    V_DepVar1
1174025    _WARN_
1174026    DepVar
1174027    );
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl9_VALIDATE(keep= F_DepVar I_DepVar P_DepVar0 P_DepVar1
R_DepVar0 R_DepVar1 U_DepVar V_DepVar0 V_DepVar1 _WARN_ DepVar );
1174028    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: There were 1018 observations read from the data set EMWS8.META2_VALIDATE.
NOTE: View EMWS8.ENSMBL9_VALIDATE.VIEW used (Total process time):
      real time           0.12 seconds
      cpu time            0.12 seconds
 
NOTE: There were 1018 observations read from the data set EMWS8.REG9_VALIDATE.
NOTE: There were 1018 observations read from the data set EMWS8.ENSMBL9_VALIDATE.
NOTE: The data set WORK.EM_TEMP_ASSESSDATA has 1018 observations and 11 variables.
NOTE: DATA statement used (Total process time):
      real time           0.12 seconds
      cpu time            0.12 seconds
 
 
MPRINT(EM_DIAGRAM):    proc freq data=EM_temp_assessdata noprint;
MPRINT(EM_DIAGRAM):   table I_DepVar*F_DepVar / out = WORK.Ensmbl9_1IETQQ2 nocol norow outpct;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.Ensmbl9_1IETQQ2;
MPRINT(EM_DIAGRAM):   length _TYPE_ $10 DATAROLE TARGET $32 TARGETLABEL $200 FROM INTO $32
CORRECTTEXT $40 ;
MPRINT(EM_DIAGRAM):   label _TYPE_ = "Outcome Type";
MPRINT(EM_DIAGRAM):   label DATAROLE = "Data Role";
MPRINT(EM_DIAGRAM):   label TARGET = "Target Variable";
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   label FROM = "Target";
MPRINT(EM_DIAGRAM):   label INTO = "Outcome";
MPRINT(EM_DIAGRAM):   label PCT_ROW = "Target Percentage";
MPRINT(EM_DIAGRAM):   label PCT_COL = "Outcome Percentage";
MPRINT(EM_DIAGRAM):   label COUNT = "Frequency Count";
MPRINT(EM_DIAGRAM):   label PERCENT = "Total Percentage";
MPRINT(EM_DIAGRAM):   label CORRECTTEXT = "Correct Text";
MPRINT(EM_DIAGRAM):   label CORRECT = "Correct";
MPRINT(EM_DIAGRAM):   set WORK.Ensmbl9_1IETQQ2(rename=(F_DepVar=FROM I_DepVar=INTO));
MPRINT(EM_DIAGRAM):   retain _TYPE_ 'PREDICTION' DATAROLE "VALIDATE" TARGET "DepVar";
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TARGETLABEL = 'DepVar';
MPRINT(EM_DIAGRAM):   if FROM eq INTO then do;
MPRINT(EM_DIAGRAM):   CORRECT = 0;
MPRINT(EM_DIAGRAM):   CORRECTTEXT="Correct";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   CORRECT = 1;
MPRINT(EM_DIAGRAM):   CORRECTTEXT="Incorrect";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS8.Ensmbl9_EMCLASSIFICATION;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl9_EMCLASSIFICATION WORK.Ensmbl9_1IETQQ2;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   set WORK.Ensmbl9_1IETQQ2;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.MISCREPORT(drop=INTO FROM _TYPE_);
MPRINT(EM_DIAGRAM):   set WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   length MISC $12;
MPRINT(EM_DIAGRAM):   if FROM='1' and INTO='1' then MISC='TRUEEVENT';
MPRINT(EM_DIAGRAM):   else if FROM='1' and INTO ne '1' then MISC='FALSENEVENT';
MPRINT(EM_DIAGRAM):   else if FROM ne '1' and INTO='1' then MISC='FALSEEVENT';
MPRINT(EM_DIAGRAM):   else if FROM ne'1' and INTO ne '1' then MISC='TRUENEVENT';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.MISCREPORT nothreads;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc summary data=WORK.MISCREPORT NWAY;
MPRINT(EM_DIAGRAM):   output out=WORK.MISCCOUNT(drop=_FREQ_ _TYPE_) SUM=COUNT;
MPRINT(EM_DIAGRAM):   CLASS MISC;
MPRINT(EM_DIAGRAM):   VAR COUNT;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc transpose data=WORK.MISCCOUNT out=WORK.MISCREPORT(drop=_NAME_
_LABEL_);
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   ID MISC;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS8.Ensmbl9_EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   length TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl9_EMEVENTREPORT WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TARGETLABEL = 'DepVar';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data ASSESS_REPORTMETA;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl9_VariableSet;
MPRINT(EM_DIAGRAM):   where REPORT='Y';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename temp catalog 'sashelp.emassmt.em_assess.source';
MPRINT(EM_DIAGRAM):   filename temp;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set EMWS8.Reg9_DepVar_DM;
MPRINT(EM_DIAGRAM):   where _TYPE_="TARGET";
MPRINT(EM_DIAGRAM):   call symput('ASSMT_EVENT', strip(event));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):
MPRINT(EM_ASSESS):   data _ea_tmpdata;
MPRINT(EM_ASSESS):   set EM_temp_assessdata;
MPRINT(EM_ASSESS):   _tmpfreqvar_=1;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_CHECKEMSETINIT):   DATA _NULL_;
MPRINT(EM_CHECKEMSETINIT):   EM_SETINIT = 'N';
MPRINT(EM_CHECKEMSETINIT):   IF SYSPROD('PRODNUM50') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM448') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM102') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM103') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   CALL SYMPUT('EM_SETINIT', EM_SETINIT);
MPRINT(EM_CHECKEMSETINIT):   RUN;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Reading in reporting data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET ASSESS_REPORTMETA END = EOF;
MPRINT(EM_ASSESS):   IF TYPE = "C" OR UPCASE (LEVEL) IN ("NOMINAL", "BINARY" , "ORDINAL") THEN
DO;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) NE UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   NUMCTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTC" || LEFT (PUT (NUMCTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "C");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF UPCASE(NAME) NE UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   NUMNTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTN" || LEFT (PUT (NUMNTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMNTOREPORT", NUMNTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMCTOREPORT", NUMCTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMTOREPORT", SUM (NUMNTOREPORT, NUMCTOREPORT));
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   PROC DMDB DATA = _ea_tmpdata VAROUT = VAROUT DMDBCAT = _D CLASSOUT =
_ASSMT_CLASSOUT;
MPRINT(EM_ASSESS):   CLASS F_DepVar ;
 
MPRINT(EM_ASSESS):   VAR P_DepVar1 _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_;
MPRINT(EM_ASSESS):   RUN ;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   PROC SORT DATA = _ASSMT_CLASSOUT;
MPRINT(EM_ASSESS):   BY NAME;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _auxeventname (keep = __event__) ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ...FLAG0_1 = ..... TARGET IS 0, 1 & EVENT = 1;
 
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   length __event__ $ 32;
MPRINT(EM_ASSESS):   RETAIN FLAG0_1 1 NUM1 . NUM0 . __event__ "_missing_" ;
 
MPRINT(EM_ASSESS):   SET _ASSMT_CLASSOUT END = EOF;
MPRINT(EM_ASSESS):   BY NAME;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ....... LEVEL = BINARY OR NOMINAL OR ORDINAL;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   IF UPCASE(NAME) = UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   CUMFREQ + FREQUENCY;
MPRINT(EM_ASSESS):   IF LEVEL NE "." THEN DO;
MPRINT(EM_ASSESS):   N1 + 1;
MPRINT(EM_ASSESS):   IF (NRAW NE 0 AND NRAW NE 1) OR TYPE NE "N" OR "" > " " THEN FLAG0_1 = 0;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ......................... IF EVENT NE BLANK;
MPRINT(EM_ASSESS):   * ....................LEVEL IS CHAR VAR ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   IF UPCASE("1") = UPCASE(LEVEL) THEN DO;
MPRINT(EM_ASSESS):   NUM1 = FREQUENCY;
MPRINT(EM_ASSESS):   IF TYPE = "C" THEN do;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("EVENTVALUERAW", CRAW );
MPRINT(EM_ASSESS):   __event__ = craw;
MPRINT(EM_ASSESS):   end;
MPRINT(EM_ASSESS):   ELSE do;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("EVENTVALUERAW", NRAW );
MPRINT(EM_ASSESS):   __event__ = nraw;
MPRINT(EM_ASSESS):   end;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF LAST.NAME THEN DO;
 
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * .............. IN NOMINAL CASE, NEED TO GROUP ALL '0' ;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   NUM0 = SUM (CUMFREQ, - NUM1);
MPRINT(EM_ASSESS):   IF NUM0 < 0 THEN NUM0 = 0;
MPRINT(EM_ASSESS):   IF NUM1 = . THEN NUM1 = 0;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUM0", NUM0 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUM1", NUM1);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PNUM1", NUM1 / CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PNUM0", (CUMFREQ - NUM1) / CUMFREQ);
MPRINT(EM_ASSESS):   IF TYPE = "C" THEN DO;
MPRINT(EM_ASSESS):   FLAG0_1 = 0;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "C" );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF "" = " " THEN DO;
MPRINT(EM_ASSESS):   IF "1" NE "1" THEN FLAG0_1 = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "N" );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ................... IF TYPE = N;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("FLAG0_1", FLAG0_1 );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..................IF LAST.NAME ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ...............IF LEVEL NE '.' ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * .............. IF NAME = TARGET;
MPRINT(EM_ASSESS):   ELSE IF "" > " " AND UPCASE(NAME) = UPCASE("") THEN DO;
MPRINT(EM_ASSESS):   NUMDECISIONS + 1;
MPRINT(EM_ASSESS):   LEVEL = TRANSLATE (LEVEL, "_", "'", "_", '"');
MPRINT(EM_ASSESS):   CALL SYMPUTX ("D_LABEL" || LEFT (PUT (NUMDECISIONS, 3.)), LEVEL );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..................... ELSE IF UPCASE;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   output _auxeventname;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMOBS", CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMDECISIONS", NUMDECISIONS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET VAROUT END = EOF;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) = UPCASE ("P_DepVar1") THEN DO;
MPRINT(EM_ASSESS):   IF N = 0 THEN DO;
The SAS System
 
MPRINT(EM_ASSESS):   PUT //// "          Warning: All posterior probabilities are missing
values ";
MPRINT(EM_ASSESS):   PUT ///;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("ALLMISS", 1);
MPRINT(EM_ASSESS):   STOP;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("ALLMISS", 0);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB", MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB", MAX);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("DIFF", MAX - MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NMISSPROB", NMISS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF UPCASE (NAME) = UPCASE ("_tmpfreqvar_") THEN DO;
MPRINT(EM_ASSESS):   AUXMIN = MIN - INT (MIN);
MPRINT(EM_ASSESS):   AUXMAX = MAX - INT (MAX);
MPRINT(EM_ASSESS):   IF AUXMIN > 0 OR AUXMAX > 0 THEN CALL SYMPUTX ("USEWEIGHT", "Y");
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("USEWEIGHT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _ANY0;
MPRINT(EM_ASSESS):   SET _ea_tmpdata (KEEP = F_DepVar P_DepVar1 _tmpfreqvar_ );
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................... No Formats;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF LEFT ( F_DepVar ) = "1" THEN NTARGET = 1;
MPRINT(EM_ASSESS):   ELSE NTARGET = 0;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .............. Before proc summary of binary case;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC SUMMARY DATA = _ANY0 (KEEP = P_DepVar1 NTARGET _tmpfreqvar_ WHERE =
(NTARGET > . )) NWAY MISSING;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   CLASS P_DepVar1 ;
MPRINT(EM_ASSESS):   VAR NTARGET ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   OUTPUT OUT = ANYSUM (DROP = _TYPE_) MEAN = _MEANTARGET _MEANFREQVAR ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... Main Data Set Processing, Binary case;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK (KEEP = BASECAPC BASECAP __EVENT__ BASEEVENTS
BASEGAIN BASELIFT BASERESP BASERESPC BESTCAP BESTCAPC BESTGAIN BESTLIFT BESTLIFTC
BESTNUMEVENTS BESTRESP BESTRESPC BIN CBASELIFT C_LIFT C_P_CAPT_RESP C_P_RESP GAIN LIFT MAXPROB
MINPROB MNPROB NUMNONRESP NUMOBS NUMRESP PERCENTILE P_CAPT_RESP P_RESP ) WORK._TEMPSCOREDIST
(KEEP = BIN LOWERPROB UPPERPROB EVENTVALUE SCR_NUMEVENTS MODELSCORE SCR_NUMNONEVENTS RANGE
NUMOBSINGROUP PERCOBSINGROUP C_PERCOBSINGROUP SCR_P_EVENTS SCR_CP_EVENTS SCR_P_NONEVENTS
SCR_CP_NONEVENTS SCR_MNPROB SCR_MINPROB SCR_MAXPROB ) ;
 
MPRINT(EM_ASSESS):   SET ANYSUM END = EOF;
 
MPRINT(EM_ASSESS):   IF _N_ = 1 THEN SET _AUXEVENTNAME;
 
MPRINT(EM_ASSESS):   RETAIN MINPROB1 - MINPROB20 1 MAXPROB1 - MAXPROB20 0 MNPROB1 - MNPROB20 0
NUMOBS1 - NUMOBS20 0 NUMRESP1 - NUMRESP20 0 TRUEPOS1 - TRUEPOS100 0 TRUENEG1 - TRUENEG100 0
FALSEPOS1 - FALSEPOS100 0 FALSENEG1 - FALSENEG100 0 EVENTS1 - EVENTS100 NONEVENTS1 -
NONEVENTS100 0 FIRSTIN1 - FIRSTIN100 . LASTIN1 - LASTIN100 . RESPRATE 0.152259332 _NEVENTS 155
_NNONEVENTS 863 TARGET "NTARGET" ;
MPRINT(EM_ASSESS):   ARRAY MINPROBS (20) MINPROB1 - MINPROB20;
MPRINT(EM_ASSESS):   ARRAY MAXPROBS (20) MAXPROB1 - MAXPROB20;
MPRINT(EM_ASSESS):   ARRAY MNPROBS (20) MNPROB1 - MNPROB20;
MPRINT(EM_ASSESS):   ARRAY NUMOBSS (20) NUMOBS1 - NUMOBS20;
MPRINT(EM_ASSESS):   ARRAY NUMRESPS (20) NUMRESP1 - NUMRESP20;
MPRINT(EM_ASSESS):   ARRAY TRUEPOSX (100) TRUEPOS1 - TRUEPOS100;
MPRINT(EM_ASSESS):   ARRAY FALSEPOSX (100) FALSEPOS1 - FALSEPOS100;
MPRINT(EM_ASSESS):   ARRAY FALSENEGX (100) FALSENEG1 - FALSENEG100;
MPRINT(EM_ASSESS):   ARRAY TRUENEGX (100) TRUENEG1 - TRUENEG100;
MPRINT(EM_ASSESS):   ARRAY _EVENTS (100) EVENTS1 - EVENTS100;
MPRINT(EM_ASSESS):   ARRAY NONEVENTS (100) NONEVENTS1 - NONEVENTS100;
MPRINT(EM_ASSESS):   ARRAY FIRSTIN (100) FIRSTIN1 - FIRSTIN100;
MPRINT(EM_ASSESS):   ARRAY LASTIN (100) LASTIN1 - LASTIN100;
MPRINT(EM_ASSESS):   RETAIN SCR_MNPROB1 - SCR_MNPROB100 0 SCR_MINPROB1 - SCR_MINPROB100 1
SCR_MAXPROB1 - SCR_MAXPROB100 0;
MPRINT(EM_ASSESS):   ARRAY SCR_MNPROBS (100) SCR_MNPROB1 - SCR_MNPROB100;
MPRINT(EM_ASSESS):   ARRAY SCR_MINPROBS (100) SCR_MINPROB1 - SCR_MINPROB100;
MPRINT(EM_ASSESS):   ARRAY SCR_MAXPROBS (100) SCR_MAXPROB1 - SCR_MAXPROB100;
MPRINT(EM_ASSESS):   DROP SCR_MINPROB1 - SCR_MINPROB100 SCR_MAXPROB1 - SCR_MAXPROB100
SCR_MNPROB1 - SCR_MNPROB100 ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...... Area For 8 Financials ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF _MEANTARGET = . THEN _MEANTARGET = RESPRATE;
MPRINT(EM_ASSESS):   DROP N1 _K SUMWEIGHTS ;
MPRINT(EM_ASSESS):   SUMWEIGHTS = 1;
 
MPRINT(EM_ASSESS):   DO _K = 1 TO CEIL (_FREQ_);
MPRINT(EM_ASSESS):   IF _K = CEIL (_FREQ_) THEN DO;
MPRINT(EM_ASSESS):   IF _FREQ_ < CEIL (_FREQ_) THEN _WEIGHT = _FREQ_ - FLOOR (_FREQ_);
MPRINT(EM_ASSESS):   ELSE _WEIGHT = 1;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE _WEIGHT = 1;
MPRINT(EM_ASSESS):   N1 + _WEIGHT;
MPRINT(EM_ASSESS):   NTARGET = _MEANTARGET ;
MPRINT(EM_ASSESS):   DECILE = MIN (20, CEIL (N1 * 20 / 1018));
MPRINT(EM_ASSESS):   MINPROBS ( DECILE) = MIN (MINPROBS ( DECILE), P_DepVar1 );
MPRINT(EM_ASSESS):   MAXPROBS ( DECILE) = MAX (MAXPROBS ( DECILE), P_DepVar1 );
MPRINT(EM_ASSESS):   MNPROBS ( DECILE) = SUM (MNPROBS ( DECILE), P_DepVar1 * _WEIGHT);
MPRINT(EM_ASSESS):   NUMOBSS ( DECILE) = NUMOBSS ( DECILE) + _WEIGHT;
MPRINT(EM_ASSESS):   NUMRESPS ( DECILE) = NUMRESPS ( DECILE) + _MEANTARGET * _WEIGHT;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ outside of do loop, Area for final ROC;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   RANKDELTA = (ROUND ( _FREQ_ ) + 1) / 2;
MPRINT(EM_ASSESS):   RANK = UNTIEDRANK + RANKDELTA;
MPRINT(EM_ASSESS):   DROP RANK ;
MPRINT(EM_ASSESS):   SUMRANK1 + RANK * ROUND (_MEANTARGET * _FREQ_, .0000001);
MPRINT(EM_ASSESS):   UNTIEDRANK + ROUND (_FREQ_, .00000001);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Area For ROC Curve;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DO _K = 1 TO 100;
MPRINT(EM_ASSESS):   IF P_DepVar1 * 100 >= _K THEN DO;
MPRINT(EM_ASSESS):   TRUEPOSX ( _K ) + _FREQ_ * _MEANTARGET ;
MPRINT(EM_ASSESS):   FALSEPOSX ( _K ) + _FREQ_ * (1 - _MEANTARGET) ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   TRUENEGX ( _K ) + _FREQ_ * ( 1 - _MEANTARGET) ;
MPRINT(EM_ASSESS):   FALSENEGX ( _K ) + _FREQ_ * _MEANTARGET ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   SLOT = MIN (MAX (CEIL (P_DepVar1 * 100), 1), 100) ;
MPRINT(EM_ASSESS):   DROP SLOT;
MPRINT(EM_ASSESS):   FIRSTIN ( SLOT ) = MIN ( FIRSTIN ( SLOT ), P_DepVar1);
MPRINT(EM_ASSESS):   LASTIN ( SLOT ) = MAX ( LASTIN ( SLOT ), P_DepVar1);
MPRINT(EM_ASSESS):   _EVENTS ( SLOT) = _EVENTS ( SLOT) + _FREQ_ * _MEANTARGET;
MPRINT(EM_ASSESS):   NONEVENTS ( SLOT) = NONEVENTS ( SLOT) + _FREQ_ * (1 - _MEANTARGET);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ START OF OUTDIST IN BINARY CASE MAIN DATA STEP ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   SCR_MNPROBS ( SLOT ) = SUM (SCR_MNPROBS (SLOT), P_DepVar1 * _FREQ_ );
MPRINT(EM_ASSESS):   SCR_MINPROBS ( SLOT ) = MIN (SCR_MINPROBS (SLOT), P_DepVar1 );
MPRINT(EM_ASSESS):   SCR_MAXPROBS ( SLOT ) = MAX (SCR_MAXPROBS (SLOT), P_DepVar1 );
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ End of Outdist in Binary case main DATA STEP ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   PUT //;
MPRINT(EM_ASSESS):   DO K = 1 TO 20;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LENGTH EVENTVALUE $ 32;
MPRINT(EM_ASSESS):   RETAIN EVENTVALUE "1" ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ......... Start of EOF area of BINARY processing of main data set ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SUMRANK1", SUMRANK1);
MPRINT(EM_ASSESS):   LENGTH DATAROLE $ 10;
MPRINT(EM_ASSESS):   RETAIN DATAROLE "VALIDATE" ;
MPRINT(EM_ASSESS):   RETAIN OVLMIN 0.0031262303 OVLMAX 0.9856719595 ;
MPRINT(EM_ASSESS):   DROP OVLMIN OVLMAX ;
MPRINT(EM_ASSESS):   C_NUMOBS = 0;
MPRINT(EM_ASSESS):   C_NUM_RESP = 0;
MPRINT(EM_ASSESS):   C_NUM_NONRESP = 0;
MPRINT(EM_ASSESS):   C_P_RESP = 0;
MPRINT(EM_ASSESS):   P_CAPT_RESP = 0;
MPRINT(EM_ASSESS):   C_P_CAPT_RESP = 0;
MPRINT(EM_ASSESS):   PREVIOUSPROFIT = 0;
MPRINT(EM_ASSESS):   MAXPROFIT = 0;
MPRINT(EM_ASSESS):   _KS_BIN_ = 0;
MPRINT(EM_ASSESS):   DROP _KS_BIN_;
MPRINT(EM_ASSESS):   AVGNUMRESP = _NEVENTS / 20;
MPRINT(EM_ASSESS):   BASERESP = 100 * RESPRATE;
MPRINT(EM_ASSESS):   BASERESPC = BASERESP;
MPRINT(EM_ASSESS):   BASECAP = 100 / 20;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................Start OF Gainschart = Outranks Area;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   _KS_BIN_PROB = 0;
MPRINT(EM_ASSESS):   DO GROUP = 20 TO 1 BY -1;
 
MPRINT(EM_ASSESS):   BASECAPC + BASECAP;
MPRINT(EM_ASSESS):   PERCENTILE = GROUP * (100 / 20);
MPRINT(EM_ASSESS):   MINPROB = MINPROBS ( GROUP);
MPRINT(EM_ASSESS):   MAXPROB = MAXPROBS ( GROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB" || LEFT ( PUT (GROUP, 3.)), MINPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB" || LEFT ( PUT (GROUP, 3.)), MAXPROB);
MPRINT(EM_ASSESS):   NUMOBS = NUMOBSS ( GROUP);
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN MNPROB = MNPROBS ( GROUP) / NUMOBS;
MPRINT(EM_ASSESS):   ELSE MNPROB = .;
MPRINT(EM_ASSESS):   C_NUMOBS = SUM (NUMOBS, C_NUMOBS);
MPRINT(EM_ASSESS):   NUMRESP = NUMRESPS ( GROUP);
MPRINT(EM_ASSESS):   NUMNONRESP = NUMOBS - NUMRESP;
MPRINT(EM_ASSESS):   C_AVGNUM_RESP + AVGNUMRESP;
MPRINT(EM_ASSESS):   IF C_NUMOBS <= _NEVENTS THEN DO;
MPRINT(EM_ASSESS):   BESTNUMEVENTS = NUMOBS;
MPRINT(EM_ASSESS):   BESTCAPC = C_NUMOBS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   BASEEVENTS = _NEVENTS / 20;
MPRINT(EM_ASSESS):   BASENONEVENTS = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   FLAG + 1;
MPRINT(EM_ASSESS):   DROP FLAG;
MPRINT(EM_ASSESS):   BESTNUMEVENTS = _NEVENTS - C_NUMOBS + NUMOBS;
MPRINT(EM_ASSESS):   IF FLAG > 1 THEN BESTNUMEVENTS = 0;
MPRINT(EM_ASSESS):   BESTCAPC = 100;
MPRINT(EM_ASSESS):   IF C_NUMOBS - _NEVENTS <= NUMOBS THEN DO;
MPRINT(EM_ASSESS):   BASEEVENTS = C_NUMOBS - _NEVENTS;
MPRINT(EM_ASSESS):   BASENONEVENTS = NUMOBS - C_NUMOBS + _NEVENTS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BASEEVENTS = 0;
MPRINT(EM_ASSESS):   BASENONEVENTS = NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   BESTCAP = BESTNUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   BESTLIFT = BESTNUMEVENTS / AVGNUMRESP;
MPRINT(EM_ASSESS):   C_BESTNUMEVENTS + BESTNUMEVENTS;
MPRINT(EM_ASSESS):   DROP C_BESTNUMEVENTS;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN BESTLIFTC = C_BESTNUMEVENTS / (_NEVENTS / 1018 *
C_NUMOBS);
MPRINT(EM_ASSESS):   ELSE BESTLIFTC = .;
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BESTRESP = BESTNUMEVENTS * 100 / NUMOBS;
MPRINT(EM_ASSESS):   P_RESP = NUMRESP * 100 / NUMOBS;
MPRINT(EM_ASSESS):   P_NONRESP = NUMNONRESP * 100 / NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTRESP = .;
MPRINT(EM_ASSESS):   P_RESP = .;
MPRINT(EM_ASSESS):   P_NONRESP = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BESTRESPC = C_BESTNUMEVENTS * 100 / C_NUMOBS;
MPRINT(EM_ASSESS):   BESTGAIN = MAX (0, ((C_BESTNUMEVENTS / C_NUMOBS ) / ( AVGNUMRESP /
NUMOBS) - 1) * 100);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTRESPC = .;
MPRINT(EM_ASSESS):   BESTGAIN = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF NUMNONRESP > 0 THEN ODDS = NUMRESP / NUMNONRESP;
MPRINT(EM_ASSESS):   ELSE ODDS = .;
MPRINT(EM_ASSESS):   C_NUM_RESP = SUM (C_NUM_RESP , NUMRESP );
MPRINT(EM_ASSESS):   C_NUM_NONRESP = SUM (C_NUM_NONRESP, NUMNONRESP );
MPRINT(EM_ASSESS):   IF C_NUM_NONRESP > 0 THEN C_ODDS = C_NUM_RESP / C_NUM_NONRESP;
MPRINT(EM_ASSESS):   ELSE C_ODDS = .;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   C_P_RESP = C_NUM_RESP * 100 / C_NUMOBS;
MPRINT(EM_ASSESS):   GAIN = ABS(100 * (((C_NUM_RESP / C_NUMOBS ) / (_NEVENTS / 1018)) - 1));
MPRINT(EM_ASSESS):   BASEGAIN = 100 * (( (C_AVGNUM_RESP / C_NUMOBS) / ( AVGNUMRESP / NUMOBS))
- 1);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   GAIN = .;
MPRINT(EM_ASSESS):   BASEGAIN = .;
MPRINT(EM_ASSESS):   C_P_RESP = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF BASEGAIN <= 0 THEN BASEGAIN = 0;
MPRINT(EM_ASSESS):   P_CAPT_RESP = NUMRESP * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   P_CAPT_NONRESP = NUMNONRESP * 100 / ( 1018 - _NEVENTS);
MPRINT(EM_ASSESS):   C_P_CAPT_RESP = C_NUM_RESP * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   C_P_CAPT_NONRESP = C_NUM_NONRESP * 100 / ( 1018 - _NEVENTS);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Area For Binned KS in Outranks area;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   _DIFFERENCE = C_P_CAPT_RESP - C_P_CAPT_NONRESP ;
MPRINT(EM_ASSESS):   IF _KS_BIN_ < _DIFFERENCE THEN DO;
MPRINT(EM_ASSESS):   _KS_BIN_ = _DIFFERENCE;
MPRINT(EM_ASSESS):   _KS_BIN_PROB = MINPROB + (MAXPROB - MINPROB) / 2 ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LIFT = P_RESP * .01 / RESPRATE ;
MPRINT(EM_ASSESS):   C_LIFT = C_P_RESP * .01 / RESPRATE;
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BASELIFT = AVGNUMRESP / ( RESPRATE * NUMOBS );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE BASELIFT = .;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN CBASELIFT = C_AVGNUM_RESP / (RESPRATE * C_NUMOBS);
MPRINT(EM_ASSESS):   ELSE CBASELIFT = .;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ WITHIN DO LOOP FOR OUTRANKS;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   BIN = 20 + 1 - GROUP;
MPRINT(EM_ASSESS):   PERCENTILE = BIN * (100 / 20);
MPRINT(EM_ASSESS):   B_C_P_RESP = PERCENTILE;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPRANK ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................ END OF GAINSCHART = OUTRANKS AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROFITGROUP" , MAXPROFITGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROFIT" , MAXPROFIT );
MPRINT(EM_ASSESS):   KS_ABSDIFF = 0 ;
MPRINT(EM_ASSESS):   MINPRECTPR = 9999;
MPRINT(EM_ASSESS):   Y0 = 1 - RESPRATE;
MPRINT(EM_ASSESS):   Y1 = RESPRATE;
MPRINT(EM_ASSESS):   MAXMUTUAL = 0;
MPRINT(EM_ASSESS):   DROP MAXMUTUAL KSPROB Y0 Y1 KS_ABSDIFF MINPRECTPR;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .....................About to start Processing Outroc ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................... Finished Processing Outroc ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .............. Outdist ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   BIN = 20 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS96 - EVENTS100 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS96 - NONEVENTS100);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB96 -
SCR_MNPROB100) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB96 - SCR_MINPROB100) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB96 - SCR_MAXPROB100) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 20;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 19 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS91 - EVENTS95 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS91 - NONEVENTS95);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB91 -
SCR_MNPROB95) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB91 - SCR_MINPROB95) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB91 - SCR_MAXPROB95) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 19;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 18 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS86 - EVENTS90 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS86 - NONEVENTS90);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB86 -
SCR_MNPROB90) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB86 - SCR_MINPROB90) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB86 - SCR_MAXPROB90) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 18;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 17 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS81 - EVENTS85 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS81 - NONEVENTS85);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB81 -
SCR_MNPROB85) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB81 - SCR_MINPROB85) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB81 - SCR_MAXPROB85) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 17;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 16 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS76 - EVENTS80 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS76 - NONEVENTS80);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB76 -
SCR_MNPROB80) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB76 - SCR_MINPROB80) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB76 - SCR_MAXPROB80) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 16;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 15 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS71 - EVENTS75 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS71 - NONEVENTS75);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB71 -
SCR_MNPROB75) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB71 - SCR_MINPROB75) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB71 - SCR_MAXPROB75) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 15;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 14 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS66 - EVENTS70 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS66 - NONEVENTS70);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB66 -
SCR_MNPROB70) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB66 - SCR_MINPROB70) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB66 - SCR_MAXPROB70) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 14;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 13 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS61 - EVENTS65 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS61 - NONEVENTS65);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB61 -
SCR_MNPROB65) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB61 - SCR_MINPROB65) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB61 - SCR_MAXPROB65) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 13;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 12 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS56 - EVENTS60 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS56 - NONEVENTS60);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB56 -
SCR_MNPROB60) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB56 - SCR_MINPROB60) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB56 - SCR_MAXPROB60) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 12;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 11 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS51 - EVENTS55 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS51 - NONEVENTS55);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB51 -
SCR_MNPROB55) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB51 - SCR_MINPROB55) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB51 - SCR_MAXPROB55) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 11;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 10 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS46 - EVENTS50 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS46 - NONEVENTS50);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB46 -
SCR_MNPROB50) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB46 - SCR_MINPROB50) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB46 - SCR_MAXPROB50) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 10;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 9 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS41 - EVENTS45 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS41 - NONEVENTS45);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB41 -
SCR_MNPROB45) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB41 - SCR_MINPROB45) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB41 - SCR_MAXPROB45) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 9;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 8 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS36 - EVENTS40 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS36 - NONEVENTS40);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB36 -
SCR_MNPROB40) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB36 - SCR_MINPROB40) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB36 - SCR_MAXPROB40) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 8;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 7 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS31 - EVENTS35 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS31 - NONEVENTS35);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB31 -
SCR_MNPROB35) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB31 - SCR_MINPROB35) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB31 - SCR_MAXPROB35) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 7;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 6 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS26 - EVENTS30 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS26 - NONEVENTS30);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB26 -
SCR_MNPROB30) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB26 - SCR_MINPROB30) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB26 - SCR_MAXPROB30) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 6;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 5 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS21 - EVENTS25 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS21 - NONEVENTS25);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB21 -
SCR_MNPROB25) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB21 - SCR_MINPROB25) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB21 - SCR_MAXPROB25) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 5;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 4 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS16 - EVENTS20 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS16 - NONEVENTS20);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB16 -
SCR_MNPROB20) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB16 - SCR_MINPROB20) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB16 - SCR_MAXPROB20) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 4;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 3 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS11 - EVENTS15 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS11 - NONEVENTS15);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB11 -
SCR_MNPROB15) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB11 - SCR_MINPROB15) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB11 - SCR_MAXPROB15) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 3;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 2 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS6 - EVENTS10 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS6 - NONEVENTS10);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB6 -
SCR_MNPROB10) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB6 - SCR_MINPROB10) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB6 - SCR_MAXPROB10) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 2;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 1 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS1 - EVENTS5 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS1 - NONEVENTS5);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB1 - SCR_MNPROB5)
/ NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB1 - SCR_MINPROB5) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB1 - SCR_MAXPROB5) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 1;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("KSPROB" , PUT (KSPROB, 5.3 ) );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("_KS_BIN_PROB" , _KS_BIN_PROB );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("_KS_BIN_" , _KS_BIN_ / 100 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("KSDIFF" , KS_ABSDIFF );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PRECTPR" , PRECTPR );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXMUTUALPROB" , MAXMUTUALPROB);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LABEL __EVENT__ = "Event" DECILE = "Depth" BIN = "Bin" NUMOBS = "Number
of Observations" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * RUN for large data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST;
MPRINT(EM_ASSESS):   DELETE _AUXEVENTNAME;
MPRINT(EM_ASSESS):   QUIT;
 
MPRINT(EM_ASSESS):   OPTION NOCENTER LS = 95;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Report Vars Area.;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start OF Outdist Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPSCOREDIST;
MPRINT(EM_ASSESS):   RENAME MODELSCORE = SCORE UPPERPROB = UPPOSTERIOR SCR_CP_EVENTS =
CUMULATIVEPERCENTAGEOFEVENTS SCR_CP_NONEVENTS = CUMULATIVEPERCENTAGEOFNONEVENTS EVENTVALUE =
EVENT LOWERPROB = LOWPOSTERIOR NUMOBSINGROUP = N PERCOBSINGROUP = PERCENTAGE SCR_MINPROB =
_MINP_ SCR_MAXPROB = _MAXP_ SCR_MNPROB = _MEANP_ RANGE = P_LABEL C_PERCOBSINGROUP =
CUMULATIVEPERCENTAGE SCR_NUMEVENTS = NUMBEROFEVENTS SCR_NUMNONEVENTS = NUMBEROFNONEVENTS
SCR_P_EVENTS = PERCENTAGEOFEVENTS SCR_P_NONEVENTS = PERCENTAGEOFNONEVENTS ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... OUTDIST MODIFICATION LABEL AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL BIN = "Bin" N = "Number of Observations" P_LABEL = "Posterior
Probability Range" EVENT = "Event" LOWPOSTERIOR = "Lower Bound Posterior Probability"
PERCENTAGEOFEVENTS = "Percentage of Events" CUMULATIVEPERCENTAGEOFNONEVENTS = "Cumulative
Percentage of Nonevents" CUMULATIVEPERCENTAGE = "Cumulative Percentage" PERCENTAGEOFEVENTS =
"Percentage of Events" PERCENTAGEOFNONEVENTS = "Percentage of Nonevents"
CUMULATIVEPERCENTAGEOFEVENTS = "Cumulative Percentage of Events" UPPOSTERIOR = "Upper Bound
Posterior Probability" NUMBEROFEVENTS = "Number of Events" PERCENTAGE = "Percentage"
NUMBEROFNONEVENTS = "Number of Nonevents" _MEANP_ = "Mean Posterior Probability" _MINP_ = "Min
Posterior Probability" _MAXP_ = "Max Posterior Probability" SCORE = "Model Score" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   SET WORK._TEMPSCOREDIST (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........... END OF OUTDIST MODIFICATION;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start of OUTRANKS Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPRANK;
MPRINT(EM_ASSESS):   RENAME __EVENT__ = EVENT P_RESP = RESP C_P_CAPT_RESP = CAPC P_CAPT_RESP =
CAP NUMNONRESP = NUMNEVENT NUMRESP = NUMEVENT BASEEVENTS = BASENUMBEROFEVENTS BESTNUMEVENTS =
BESTNUMBEROFEVENTS MAXPROB = _MAXP_ MINPROB = _MINP_ CBASELIFT = BASELIFTC C_LIFT = LIFTC
MNPROB = _MEANP_ PERCENTILE = DECILE NUMOBS = N NUMEVENT = NUMBEROFEVENTS C_P_RESP = RESPC ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................. OUTRANKS;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL _MAXP_ = "Max Posterior Probability" _MINP_ = "Min Posterior
Probability" _MEANP_ = "Mean Posterior Probability" BASECAP = "Baseline % Captured Response"
BASECAPC = "Baseline Cumulative % Captured Response" BASENUMBEROFEVENTS = "Baseline Number of
Events" BASEGAIN = "Baseline Gain" BASELIFT = "Baseline Lift" BASELIFTC = "Baseline Cumulative
Lift" BASERESP = "Baseline % Response" BASERESPC = "Baseline Cumulative % Response" BASELIFTC
= "Baseline Cumulative Lift" BESTCAP = "Best % Captured Response" BESTCAPC = "Best Cumulative
% Captured Response" BESTGAIN = "Best Gain" BESTRESP = "Best % Response" BESTRESPC = "Best
Cumulative % Response" BESTLIFT = "Best Lift" BESTLIFTC = "Best Cumulative Lift"
BESTNUMBEROFEVENTS = "Best Number of Events" CAP = "% Captured Response" CAPC = "Cumulative %
Captured Response" DECILE = "Depth" GAIN = "Gain" LIFT = "Lift" LIFTC = "Cumulative Lift"
NUMNEVENT = "Number of Nonevents" N = "Number of Observations" EVENT = "Event" RESPC =
"Cumulative % Response" NUMBEROFEVENTS = "Number of Events" RESP = "% Response" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK;
MPRINT(EM_ASSESS):   SET WORK._TEMPRANK (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   proc datasets lib=work nolist;
MPRINT(EM_ASSESS):   delete _ea_tmpdata;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_ASSESS):   quit;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   OPTION ERRORS = 20;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):    data WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   retain target "DepVar";
MPRINT(EM_DIAGRAM):   retain TARGETLABEL 'DepVar';
MPRINT(EM_DIAGRAM):   retain dataRole "VALIDATE";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl9_EMRANK;
MPRINT(EM_DIAGRAM):   length target $32;
MPRINT(EM_DIAGRAM):   length TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   length dataRole $20;
MPRINT(EM_DIAGRAM):   length EVENT $32;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl9_EMRANK WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   retain target "DepVar";
MPRINT(EM_DIAGRAM):   retain TARGETLABEL 'DepVar';
MPRINT(EM_DIAGRAM):   retain dataRole "VALIDATE";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl9_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   length target $32;
MPRINT(EM_DIAGRAM):   length TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   length dataRole $20;
MPRINT(EM_DIAGRAM):   length EVENT $32;
MPRINT(EM_DIAGRAM):   length P_LABEL $9;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl9_EMSCOREDIST WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   run;
1178303    %let _cn = %sysfunc(getoption(CENTER));
1178304    options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
1178305    proc print data=EMWS8.Ensmbl9_EMREPORTFIT noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.Ensmbl9_EMREPORTFIT noobs label;
1178306    var STAT LABEL TRAIN
1178307    VALIDATE
1178308    ;
MPRINT(EM_DIAGRAM):   var STAT LABEL TRAIN VALIDATE ;
1178309    by TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by TARGET TARGETLABEL;
1178310    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
1178311    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_fitstat_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Fit Statistics";
MPRINT(EM_DIAGRAM):   run;
1178312    run;
 
NOTE: There were 9 observations read from the data set EMWS8.ENSMBL9_EMREPORTFIT.
NOTE: The PROCEDURE PRINT printed page 954.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1178313    title10;
MPRINT(EM_DIAGRAM):   title10;
1178314    options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
1178315    proc sort data=EMWS8.Ensmbl9_EMCLASSIFICATION nothreads;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS8.Ensmbl9_EMCLASSIFICATION nothreads;
1178316    by DATAROLE TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET TARGETLABEL;
1178317    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set EMWS8.ENSMBL9_EMCLASSIFICATION.
NOTE: The data set EMWS8.ENSMBL9_EMCLASSIFICATION has 8 observations and 12 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1178318    %let _cn = %sysfunc(getoption(CENTER));
1178319    options nocenter;
MPRINT(EM_DIAGRAM):   options nocenter;
1178320    proc print data=EMWS8.Ensmbl9_EMCLASSIFICATION noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.Ensmbl9_EMCLASSIFICATION noobs label;
1178321    var from into pct_row pct_col count percent
1178322    ;
MPRINT(EM_DIAGRAM):   var from into pct_row pct_col count percent ;
1178323    by DATAROLE TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET TARGETLABEL;
1178324    label FROM = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel ,     NOQUOTE))";
MPRINT(EM_DIAGRAM):   label FROM = "Target";
1178325    label INTO = "%sysfunc(sasmsg(sashelp.dmine, rpt_outcome_vlabel ,    NOQUOTE))";
MPRINT(EM_DIAGRAM):   label INTO = "Outcome";
1178326    label PCT_ROW = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetpct_vlabel ,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PCT_ROW = "Target Percentage";
1178327    label PCT_COL = "%sysfunc(sasmsg(sashelp.dmine, rpt_outcomepct_vlabel , NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PCT_COL = "Outcome Percentage";
1178328    label COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel ,      NOQUOTE))";
MPRINT(EM_DIAGRAM):   label COUNT = "Frequency Count";
1178329    label PERCENT = "%sysfunc(sasmsg(sashelp.dmine, rpt_totalpct_vlabel ,   NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PERCENT = "Total Percentage";
1178330    where _TYPE_='PREDICTION';
MPRINT(EM_DIAGRAM):   where _TYPE_='PREDICTION';
1178331    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
1178332    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_classification_title    , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Classification Table";
MPRINT(EM_DIAGRAM):   run;
1178333    run;
 
NOTE: There were 8 observations read from the data set EMWS8.ENSMBL9_EMCLASSIFICATION.
      WHERE _TYPE_='PREDICTION';
NOTE: The PROCEDURE PRINT printed page 955.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1178334    title9;
MPRINT(EM_DIAGRAM):   title9;
1178335    title10;
MPRINT(EM_DIAGRAM):   title10;
1178336    options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
1178337    %let _cn = %sysfunc(getoption(CENTER));
1178338    options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
1178339    data EMWS8.Ensmbl9_EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl9_EMEVENTREPORT;
1178340    length DATAROLE TARGET $32 TARGETLABEL $200 FALSENEVENT TRUENEVENT FALSEEVENT
1178340  ! TRUEEVENT 8;
MPRINT(EM_DIAGRAM):   length DATAROLE TARGET $32 TARGETLABEL $200 FALSENEVENT TRUENEVENT
FALSEEVENT TRUEEVENT 8;
1178341    label DATAROLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))"
1178341  !  TARGET = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel ,      NOQUOTE))"
1178341  ! TARGETLABEL = "%sysfunc(sasmsg(sashelp.dmine, meta_targetlabel_vlabel, NOQUOTE))"
1178341  ! FALSEEVENT
1178342    = "%sysfunc(sasmsg(sashelp.dmine, rpt_falseevent_vlabel ,  NOQUOTE))" FALSENEVENT =
1178342  ! "%sysfunc(sasmsg(sashelp.dmine, rpt_falsenevent_vlabel , NOQUOTE))" TRUEEVENT =
1178342  ! "%sysfunc(sasmsg(sashelp.dmine, rpt_trueevent_vlabel ,   NOQUOTE))" TRUENEVENT =
1178343       "%sysfunc(sasmsg(sashelp.dmine, rpt_truenevent_vlabel ,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label DATAROLE = "Data Role" TARGET = "Target" TARGETLABEL = "Target
Label" FALSEEVENT = "False Positive" FALSENEVENT = "False Negative" TRUEEVENT = "True
Positive" TRUENEVENT = "True Negative";
1178344    FALSEEVENT=0;
MPRINT(EM_DIAGRAM):   FALSEEVENT=0;
1178345    FALSENEVENT=0;
MPRINT(EM_DIAGRAM):   FALSENEVENT=0;
1178346    TRUEEVENT=0;
MPRINT(EM_DIAGRAM):   TRUEEVENT=0;
1178347    TRUENEVENT=0;
MPRINT(EM_DIAGRAM):   TRUENEVENT=0;
1178348    set EMWS8.Ensmbl9_EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl9_EMEVENTREPORT;
1178349    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set EMWS8.ENSMBL9_EMEVENTREPORT.
NOTE: The data set EMWS8.ENSMBL9_EMEVENTREPORT has 2 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1178350    proc print data=EMWS8.Ensmbl9_EMEVENTREPORT noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.Ensmbl9_EMEVENTREPORT noobs label;
1178351    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
1178352    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_eventtable_title    , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Event Classification Table";
MPRINT(EM_DIAGRAM):   by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL;
MPRINT(EM_DIAGRAM):   run;
1178353    by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL;
1178354    run;
 
NOTE: There were 2 observations read from the data set EMWS8.ENSMBL9_EMEVENTREPORT.
NOTE: The PROCEDURE PRINT printed page 956.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1178355    title10;
MPRINT(EM_DIAGRAM):   title10;
1178356    options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
1178357    proc datasets library=EMWS8 nolist;
MPRINT(EM_DIAGRAM):    proc datasets library=EMWS8 nolist;
1178358    modify Ensmbl9_EMRANK;
MPRINT(EM_DIAGRAM):   modify Ensmbl9_EMRANK;
MPRINT(EM_DIAGRAM):   label target = "Target Variable";
1178359    label target = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetvar_vlabel ,   NOQUOTE))";
MPRINT(EM_DIAGRAM):   label datarole = "Data Role";
1178360    label datarole = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))"
1178360  ! ;
MPRINT(EM_DIAGRAM):   run;
1178361    run;
 
NOTE: MODIFY was successful for EMWS8.ENSMBL9_EMRANK.DATA.
1178362    quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.07 seconds
      cpu time            0.07 seconds
 
 
1178363    %let _cn = %sysfunc(getoption(CENTER));
1178364    options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
1178365    proc print data=EMWS8.Ensmbl9_EMRANK label noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.Ensmbl9_EMRANK label noobs;
1178366    var
1178367    decile gain lift liftc resp respc N _meanP_;
MPRINT(EM_DIAGRAM):   var decile gain lift liftc resp respc N _meanP_;
1178368    by
1178369    notsorted DATAROLE
1178370    notsorted TARGET
1178371    notsorted TARGETLABEL
1178372    ;
MPRINT(EM_DIAGRAM):   by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL ;
1178373    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
1178374    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_scoreranking_title , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Assessment Score Rankings";
MPRINT(EM_DIAGRAM):   run;
1178375    run;
 
NOTE: There were 40 observations read from the data set EMWS8.ENSMBL9_EMRANK.
NOTE: The PROCEDURE PRINT printed page 957.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1178376    title10;
MPRINT(EM_DIAGRAM):   title10;
1178377    options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
1178378    proc datasets library=EMWS8 nolist;
MPRINT(EM_DIAGRAM):    proc datasets library=EMWS8 nolist;
1178379    modify Ensmbl9_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   modify Ensmbl9_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   label target = "Target Variable";
1178380    label target = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetvar_vlabel ,
1178380  ! NOQUOTE))";
MPRINT(EM_DIAGRAM):   label datarole = "Data Role";
1178381    label datarole = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))"
1178381  ! ;
MPRINT(EM_DIAGRAM):   run;
1178382    run;
 
NOTE: MODIFY was successful for EMWS8.ENSMBL9_EMSCOREDIST.DATA.
1178383    quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.07 seconds
      cpu time            0.07 seconds
 
 
MPRINT(EM_DIAGRAM):    options nocenter;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.Ensmbl9_EMSCOREDIST label noobs;
MPRINT(EM_DIAGRAM):   var p_label numberOfEvents numberOfNonEvents _meanp_ percentage;
MPRINT(EM_DIAGRAM):   by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL ;
MPRINT(EM_DIAGRAM):   where TARGET in( "DepVar" );
MPRINT(EM_DIAGRAM):   title9 ' ';
MPRINT(EM_DIAGRAM):   title10 "Assessment Score Distribution";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   title10;
MPRINT(EM_DIAGRAM):   options NOCENTER;
MPRINT(EM_DIAGRAM):   proc printto;
MPRINT(EM_DIAGRAM):   run;
