MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "20. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "17.36 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                20. April 2016
Time:                17.36 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O3HZDBNP 
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl9\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O3HZDBNP new;
MPRINT(EM_DIAGRAM):   run;
2080794    filename emflow
2080794  ! "C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl9\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl9\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl9: Scoring REG10_TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2080795    *------------------------------------------------------------*;
2080796    * Ensmbl9: Scoring REG10_TRAIN data;
2080797    *------------------------------------------------------------*;
2080798    data EMWS8.Ensmbl9_TRAIN
2080799    / view=EMWS8.Ensmbl9_TRAIN
2080800    ;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl9_TRAIN / view=EMWS8.Ensmbl9_TRAIN ;
2080801    set EMWS8.Reg10_TRAIN
2080802    ;
MPRINT(EM_DIAGRAM):   set EMWS8.Reg10_TRAIN ;
2080803    %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl9\EMFLOWSCORE.sas.
2080804   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2080805   +* Ensmbl9: Combine model for DepVar;
MPRINT(EM_DIAGRAM):   * Ensmbl9: Combine model for DepVar;
2080806   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2080807   +* Ensmbl9: Scoring Code of model 1 of 10;
MPRINT(EM_DIAGRAM):   * Ensmbl9: Scoring Code of model 1 of 10;
2080808   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2080809   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2080810   +* TOOL: Extension Class;
MPRINT(EM_DIAGRAM):   * TOOL: Extension Class;
2080811   +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
2080812   +* NODE: FIMPORT;
MPRINT(EM_DIAGRAM):   * NODE: FIMPORT;
2080813   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2080814   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2080815   +* TOOL: Statistics Exploration;
MPRINT(EM_DIAGRAM):   * TOOL: Statistics Exploration;
2080816   +* TYPE: EXPLORE;
MPRINT(EM_DIAGRAM):   * TYPE: EXPLORE;
2080817   +* NODE: Stat;
MPRINT(EM_DIAGRAM):   * NODE: Stat;
2080818   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2080819   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2080820   +* TOOL: Filtering;
MPRINT(EM_DIAGRAM):   * TOOL: Filtering;
2080821   +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
2080822   +* NODE: Filter;
MPRINT(EM_DIAGRAM):   * NODE: Filter;
2080823   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2080824   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2080825   +* TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
MPRINT(EM_DIAGRAM):   * TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
2080826   +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
2080827   +* NODE: EMCODE4;
MPRINT(EM_DIAGRAM):   * NODE: EMCODE4;
2080828   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2080829   +
2080830   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
2080831   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
2080831  !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
2080832   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
2080833   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
2080834   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
2080835   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
2080836   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
2080837   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2080838   +* TOOL: Transform;
MPRINT(EM_DIAGRAM):   * TOOL: Transform;
2080839   +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
2080840   +* NODE: Trans;
MPRINT(EM_DIAGRAM):   * NODE: Trans;
2080841   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2080842   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2080843   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
2080844   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2080845   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
2080846   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
2080847   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
2080848   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2080849   +* TOOL: Partition Class;
MPRINT(EM_DIAGRAM):   * TOOL: Partition Class;
2080850   +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
2080851   +* NODE: Part;
MPRINT(EM_DIAGRAM):   * NODE: Part;
2080852   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2080853   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2080854   +* TOOL: Metadata Node;
MPRINT(EM_DIAGRAM):   * TOOL: Metadata Node;
2080855   +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
2080856   +* NODE: Meta2;
MPRINT(EM_DIAGRAM):   * NODE: Meta2;
2080857   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2080858   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2080859   +* TOOL: Regression;
MPRINT(EM_DIAGRAM):   * TOOL: Regression;
2080860   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
2080861   +* NODE: Reg10;
MPRINT(EM_DIAGRAM):   * NODE: Reg10;
2080862   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2080863   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
2080864   +*** begin scoring code for regression;
MPRINT(EM_DIAGRAM):   *** begin scoring code for regression;
2080865   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
2080866   +
2080867   +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
2080868   +label _WARN_ = 'Warnings' ;
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings' ;
2080869   +
2080870   +length I_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length I_DepVar $ 12;
2080871   +label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2080872   +*** Target Values;
MPRINT(EM_DIAGRAM):   *** Target Values;
2080873   +array REG10DRF [2] $12 _temporary_ ('1' '0' );
MPRINT(EM_DIAGRAM):   array REG10DRF [2] $12 _temporary_ ('1' '0' );
2080874   +label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2080875   +format U_DepVar BEST.;
MPRINT(EM_DIAGRAM):   format U_DepVar BEST.;
2080876   +*** Unnormalized target values;
MPRINT(EM_DIAGRAM):   *** Unnormalized target values;
2080877   +ARRAY REG10DRU[2]  _TEMPORARY_ (1 0);
MPRINT(EM_DIAGRAM):   ARRAY REG10DRU[2] _TEMPORARY_ (1 0);
2080878   +
2080879   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
2080880   +drop _Y ;
MPRINT(EM_DIAGRAM):   drop _Y ;
2080881   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2080882   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
2080883   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
2080884   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2080885   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
2080886   +   _Y = .;
MPRINT(EM_DIAGRAM):   _Y = .;
2080887   +end;
MPRINT(EM_DIAGRAM):   end;
2080888   +else do;
MPRINT(EM_DIAGRAM):   else do;
2080889   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
2080890   +      _Y = 1;
MPRINT(EM_DIAGRAM):   _Y = 1;
2080891   +   end;
MPRINT(EM_DIAGRAM):   end;
2080892   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
2080893   +      _Y = 0;
MPRINT(EM_DIAGRAM):   _Y = 0;
2080894   +   end;
MPRINT(EM_DIAGRAM):   end;
2080895   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2080896   +      _Y = .;
MPRINT(EM_DIAGRAM):   _Y = .;
2080897   +   end;
MPRINT(EM_DIAGRAM):   end;
2080898   +end;
MPRINT(EM_DIAGRAM):   end;
2080899   +
2080900   +drop _DM_BAD;
MPRINT(EM_DIAGRAM):   drop _DM_BAD;
2080901   +_DM_BAD=0;
MPRINT(EM_DIAGRAM):   _DM_BAD=0;
2080902   +
2080903   +*** Check Income for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Income for missing values ;
2080904   +if missing( Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( Income ) then do;
2080905   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2080906   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2080907   +end;
MPRINT(EM_DIAGRAM):   end;
2080908   +
2080909   +*** Check MntFishProducts for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntFishProducts for missing values ;
2080910   +if missing( MntFishProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntFishProducts ) then do;
2080911   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2080912   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2080913   +end;
MPRINT(EM_DIAGRAM):   end;
2080914   +
2080915   +*** Check MntFruits for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntFruits for missing values ;
2080916   +if missing( MntFruits ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntFruits ) then do;
2080917   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2080918   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2080919   +end;
MPRINT(EM_DIAGRAM):   end;
2080920   +
2080921   +*** Check MntMeatProducts for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntMeatProducts for missing values ;
2080922   +if missing( MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntMeatProducts ) then do;
2080923   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2080924   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2080925   +end;
MPRINT(EM_DIAGRAM):   end;
2080926   +
2080927   +*** Check MntWines for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntWines for missing values ;
2080928   +if missing( MntWines ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntWines ) then do;
2080929   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2080930   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2080931   +end;
MPRINT(EM_DIAGRAM):   end;
2080932   +
2080933   +*** Check NumCatalogPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumCatalogPurchases for missing values ;
2080934   +if missing( NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumCatalogPurchases ) then do;
2080935   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2080936   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2080937   +end;
MPRINT(EM_DIAGRAM):   end;
2080938   +
2080939   +*** Check NumDealsPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumDealsPurchases for missing values ;
2080940   +if missing( NumDealsPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumDealsPurchases ) then do;
2080941   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2080942   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2080943   +end;
MPRINT(EM_DIAGRAM):   end;
2080944   +
2080945   +*** Check NumStorePurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumStorePurchases for missing values ;
2080946   +if missing( NumStorePurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumStorePurchases ) then do;
2080947   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2080948   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2080949   +end;
MPRINT(EM_DIAGRAM):   end;
2080950   +
2080951   +*** Check NumWebPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumWebPurchases for missing values ;
2080952   +if missing( NumWebPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumWebPurchases ) then do;
2080953   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2080954   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2080955   +end;
MPRINT(EM_DIAGRAM):   end;
2080956   +
2080957   +*** Check NumWebVisitsMonth for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumWebVisitsMonth for missing values ;
2080958   +if missing( NumWebVisitsMonth ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumWebVisitsMonth ) then do;
2080959   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2080960   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2080961   +end;
MPRINT(EM_DIAGRAM):   end;
2080962   +
2080963   +*** Check Recency for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Recency for missing values ;
2080964   +if missing( Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( Recency ) then do;
2080965   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2080966   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2080967   +end;
MPRINT(EM_DIAGRAM):   end;
2080968   +
2080969   +*** Check Teenhome for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Teenhome for missing values ;
2080970   +if missing( Teenhome ) then do;
MPRINT(EM_DIAGRAM):   if missing( Teenhome ) then do;
2080971   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2080972   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2080973   +end;
MPRINT(EM_DIAGRAM):   end;
2080974   +
2080975   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2080976   +drop _1_0 ;
MPRINT(EM_DIAGRAM):   drop _1_0 ;
2080977   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2080978   +   _1_0 = .;
MPRINT(EM_DIAGRAM):   _1_0 = .;
2080979   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2080980   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2080981   +end;
MPRINT(EM_DIAGRAM):   end;
2080982   +else do;
MPRINT(EM_DIAGRAM):   else do;
2080983   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2080984   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2080985   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2080986   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2080987   +      _1_0 = 1;
MPRINT(EM_DIAGRAM):   _1_0 = 1;
2080988   +   end;
MPRINT(EM_DIAGRAM):   end;
2080989   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2080990   +      _1_0 = -1;
MPRINT(EM_DIAGRAM):   _1_0 = -1;
2080991   +   end;
MPRINT(EM_DIAGRAM):   end;
2080992   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2080993   +      _1_0 = .;
MPRINT(EM_DIAGRAM):   _1_0 = .;
2080994   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2080995   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2080996   +   end;
MPRINT(EM_DIAGRAM):   end;
2080997   +end;
MPRINT(EM_DIAGRAM):   end;
2080998   +
2080999   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2081000   +drop _2_0 ;
MPRINT(EM_DIAGRAM):   drop _2_0 ;
2081001   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2081002   +   _2_0 = .;
MPRINT(EM_DIAGRAM):   _2_0 = .;
2081003   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2081004   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2081005   +end;
MPRINT(EM_DIAGRAM):   end;
2081006   +else do;
MPRINT(EM_DIAGRAM):   else do;
2081007   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2081008   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2081009   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2081010   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2081011   +      _2_0 = 1;
MPRINT(EM_DIAGRAM):   _2_0 = 1;
2081012   +   end;
MPRINT(EM_DIAGRAM):   end;
2081013   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2081014   +      _2_0 = -1;
MPRINT(EM_DIAGRAM):   _2_0 = -1;
2081015   +   end;
MPRINT(EM_DIAGRAM):   end;
2081016   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2081017   +      _2_0 = .;
MPRINT(EM_DIAGRAM):   _2_0 = .;
2081018   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2081019   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2081020   +   end;
MPRINT(EM_DIAGRAM):   end;
2081021   +end;
MPRINT(EM_DIAGRAM):   end;
2081022   +
2081023   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2081024   +drop _3_0 ;
MPRINT(EM_DIAGRAM):   drop _3_0 ;
2081025   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2081026   +   _3_0 = .;
MPRINT(EM_DIAGRAM):   _3_0 = .;
2081027   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2081028   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2081029   +end;
MPRINT(EM_DIAGRAM):   end;
2081030   +else do;
MPRINT(EM_DIAGRAM):   else do;
2081031   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2081032   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2081033   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2081034   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2081035   +      _3_0 = 1;
MPRINT(EM_DIAGRAM):   _3_0 = 1;
2081036   +   end;
MPRINT(EM_DIAGRAM):   end;
2081037   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2081038   +      _3_0 = -1;
MPRINT(EM_DIAGRAM):   _3_0 = -1;
2081039   +   end;
MPRINT(EM_DIAGRAM):   end;
2081040   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2081041   +      _3_0 = .;
MPRINT(EM_DIAGRAM):   _3_0 = .;
2081042   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2081043   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2081044   +   end;
MPRINT(EM_DIAGRAM):   end;
2081045   +end;
MPRINT(EM_DIAGRAM):   end;
2081046   +
2081047   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2081048   +drop _4_0 ;
MPRINT(EM_DIAGRAM):   drop _4_0 ;
2081049   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2081050   +   _4_0 = .;
MPRINT(EM_DIAGRAM):   _4_0 = .;
2081051   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2081052   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2081053   +end;
MPRINT(EM_DIAGRAM):   end;
2081054   +else do;
MPRINT(EM_DIAGRAM):   else do;
2081055   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2081056   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2081057   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2081058   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2081059   +      _4_0 = 1;
MPRINT(EM_DIAGRAM):   _4_0 = 1;
2081060   +   end;
MPRINT(EM_DIAGRAM):   end;
2081061   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2081062   +      _4_0 = -1;
MPRINT(EM_DIAGRAM):   _4_0 = -1;
2081063   +   end;
MPRINT(EM_DIAGRAM):   end;
2081064   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2081065   +      _4_0 = .;
MPRINT(EM_DIAGRAM):   _4_0 = .;
2081066   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2081067   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2081068   +   end;
MPRINT(EM_DIAGRAM):   end;
2081069   +end;
MPRINT(EM_DIAGRAM):   end;
2081070   +
2081071   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2081072   +drop _5_0 ;
MPRINT(EM_DIAGRAM):   drop _5_0 ;
2081073   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2081074   +   _5_0 = .;
MPRINT(EM_DIAGRAM):   _5_0 = .;
2081075   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2081076   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2081077   +end;
MPRINT(EM_DIAGRAM):   end;
2081078   +else do;
MPRINT(EM_DIAGRAM):   else do;
2081079   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2081080   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2081081   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2081082   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2081083   +      _5_0 = 1;
MPRINT(EM_DIAGRAM):   _5_0 = 1;
2081084   +   end;
MPRINT(EM_DIAGRAM):   end;
2081085   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2081086   +      _5_0 = -1;
MPRINT(EM_DIAGRAM):   _5_0 = -1;
2081087   +   end;
MPRINT(EM_DIAGRAM):   end;
2081088   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2081089   +      _5_0 = .;
MPRINT(EM_DIAGRAM):   _5_0 = .;
2081090   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2081091   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2081092   +   end;
MPRINT(EM_DIAGRAM):   end;
2081093   +end;
MPRINT(EM_DIAGRAM):   end;
2081094   +
2081095   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2081096   +drop _8_0 _8_1 _8_2 _8_3 ;
MPRINT(EM_DIAGRAM):   drop _8_0 _8_1 _8_2 _8_3 ;
2081097   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2081098   +_8_0 = 0;
MPRINT(EM_DIAGRAM):   _8_0 = 0;
2081099   +_8_1 = 0;
MPRINT(EM_DIAGRAM):   _8_1 = 0;
2081100   +_8_2 = 0;
MPRINT(EM_DIAGRAM):   _8_2 = 0;
2081101   +_8_3 = 0;
MPRINT(EM_DIAGRAM):   _8_3 = 0;
2081102   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2081103   +   _8_0 = .;
MPRINT(EM_DIAGRAM):   _8_0 = .;
2081104   +   _8_1 = .;
MPRINT(EM_DIAGRAM):   _8_1 = .;
2081105   +   _8_2 = .;
MPRINT(EM_DIAGRAM):   _8_2 = .;
2081106   +   _8_3 = .;
MPRINT(EM_DIAGRAM):   _8_3 = .;
2081107   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2081108   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2081109   +end;
MPRINT(EM_DIAGRAM):   end;
2081110   +else do;
MPRINT(EM_DIAGRAM):   else do;
2081111   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2081112   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2081113   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2081114   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2081115   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2081116   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2081117   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2081118   +            _8_0 = 1;
MPRINT(EM_DIAGRAM):   _8_0 = 1;
2081119   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2081120   +         end;
MPRINT(EM_DIAGRAM):   end;
2081121   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2081122   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2081123   +               _8_1 = 1;
MPRINT(EM_DIAGRAM):   _8_1 = 1;
2081124   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2081125   +            end;
MPRINT(EM_DIAGRAM):   end;
2081126   +         end;
MPRINT(EM_DIAGRAM):   end;
2081127   +      end;
MPRINT(EM_DIAGRAM):   end;
2081128   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2081129   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2081130   +            _8_2 = 1;
MPRINT(EM_DIAGRAM):   _8_2 = 1;
2081131   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2081132   +         end;
MPRINT(EM_DIAGRAM):   end;
2081133   +      end;
MPRINT(EM_DIAGRAM):   end;
2081134   +   end;
MPRINT(EM_DIAGRAM):   end;
2081135   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2081136   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2081137   +         _8_3 = 1;
MPRINT(EM_DIAGRAM):   _8_3 = 1;
2081138   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2081139   +      end;
MPRINT(EM_DIAGRAM):   end;
2081140   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2081141   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2081142   +            _8_0 = -1;
MPRINT(EM_DIAGRAM):   _8_0 = -1;
2081143   +            _8_1 = -1;
MPRINT(EM_DIAGRAM):   _8_1 = -1;
2081144   +            _8_2 = -1;
MPRINT(EM_DIAGRAM):   _8_2 = -1;
2081145   +            _8_3 = -1;
MPRINT(EM_DIAGRAM):   _8_3 = -1;
2081146   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2081147   +         end;
MPRINT(EM_DIAGRAM):   end;
2081148   +      end;
MPRINT(EM_DIAGRAM):   end;
2081149   +   end;
MPRINT(EM_DIAGRAM):   end;
2081150   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2081151   +      _8_0 = .;
MPRINT(EM_DIAGRAM):   _8_0 = .;
2081152   +      _8_1 = .;
MPRINT(EM_DIAGRAM):   _8_1 = .;
2081153   +      _8_2 = .;
MPRINT(EM_DIAGRAM):   _8_2 = .;
2081154   +      _8_3 = .;
MPRINT(EM_DIAGRAM):   _8_3 = .;
2081155   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2081156   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2081157   +   end;
MPRINT(EM_DIAGRAM):   end;
2081158   +end;
MPRINT(EM_DIAGRAM):   end;
2081159   +
2081160   +*** If missing inputs, use averages;
MPRINT(EM_DIAGRAM):   *** If missing inputs, use averages;
2081161   +if _DM_BAD > 0 then do;
MPRINT(EM_DIAGRAM):   if _DM_BAD > 0 then do;
2081162   +   _P0 = 0.151221567;
MPRINT(EM_DIAGRAM):   _P0 = 0.151221567;
2081163   +   _P1 = 0.848778433;
MPRINT(EM_DIAGRAM):   _P1 = 0.848778433;
2081164   +   goto REG10DR1;
MPRINT(EM_DIAGRAM):   goto REG10DR1;
2081165   +end;
MPRINT(EM_DIAGRAM):   end;
2081166   +
2081167   +*** Compute Linear Predictor;
MPRINT(EM_DIAGRAM):   *** Compute Linear Predictor;
2081168   +drop _TEMP;
MPRINT(EM_DIAGRAM):   drop _TEMP;
2081169   +drop _LP0;
MPRINT(EM_DIAGRAM):   drop _LP0;
2081170   +_LP0 = 0;
MPRINT(EM_DIAGRAM):   _LP0 = 0;
2081171   +
2081172   +***  Effect: AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Effect: AcceptedCmp1 ;
2081173   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
2081174   +_LP0 = _LP0 + (   -0.71107732112007) * _TEMP * _1_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.71107732112007) * _TEMP * _1_0;
2081175   +
2081176   +***  Effect: AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Effect: AcceptedCmp2 ;
2081177   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
2081178   +_LP0 = _LP0 + (   -0.81763295180983) * _TEMP * _2_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.81763295180983) * _TEMP * _2_0;
2081179   +
2081180   +***  Effect: AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Effect: AcceptedCmp3 ;
2081181   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
2081182   +_LP0 = _LP0 + (    -0.8618538514738) * _TEMP * _3_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.8618538514738) * _TEMP * _3_0;
2081183   +
2081184   +***  Effect: AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Effect: AcceptedCmp4 ;
2081185   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
2081186   +_LP0 = _LP0 + (   -0.64997710050937) * _TEMP * _4_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.64997710050937) * _TEMP * _4_0;
2081187   +
2081188   +***  Effect: AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Effect: AcceptedCmp5 ;
2081189   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
2081190   +_LP0 = _LP0 + (   -0.91699409369659) * _TEMP * _5_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.91699409369659) * _TEMP * _5_0;
2081191   +
2081192   +***  Effect: Income ;
MPRINT(EM_DIAGRAM):   *** Effect: Income ;
2081193   +_TEMP = Income ;
MPRINT(EM_DIAGRAM):   _TEMP = Income ;
2081194   +_LP0 = _LP0 + (    0.00003628120307 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00003628120307 * _TEMP);
2081195   +
2081196   +***  Effect: Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Effect: Marital_Status ;
2081197   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
2081198   +_LP0 = _LP0 + (    0.09345382071006) * _TEMP * _8_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.09345382071006) * _TEMP * _8_0;
2081199   +_LP0 = _LP0 + (   -0.47894059934485) * _TEMP * _8_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.47894059934485) * _TEMP * _8_1;
2081200   +_LP0 = _LP0 + (    0.46164092141221) * _TEMP * _8_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.46164092141221) * _TEMP * _8_2;
2081201   +_LP0 = _LP0 + (    -0.5078574429985) * _TEMP * _8_3;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.5078574429985) * _TEMP * _8_3;
2081202   +
2081203   +***  Effect: MntFishProducts ;
MPRINT(EM_DIAGRAM):   *** Effect: MntFishProducts ;
2081204   +_TEMP = MntFishProducts ;
MPRINT(EM_DIAGRAM):   _TEMP = MntFishProducts ;
2081205   +_LP0 = _LP0 + (   -0.00285470778488 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.00285470778488 * _TEMP);
2081206   +
2081207   +***  Effect: MntFruits ;
MPRINT(EM_DIAGRAM):   *** Effect: MntFruits ;
2081208   +_TEMP = MntFruits ;
MPRINT(EM_DIAGRAM):   _TEMP = MntFruits ;
2081209   +_LP0 = _LP0 + (   -0.00481548089585 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.00481548089585 * _TEMP);
2081210   +
2081211   +***  Effect: MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Effect: MntMeatProducts ;
2081212   +_TEMP = MntMeatProducts ;
MPRINT(EM_DIAGRAM):   _TEMP = MntMeatProducts ;
2081213   +_LP0 = _LP0 + (    0.00485302069895 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00485302069895 * _TEMP);
2081214   +
2081215   +***  Effect: MntWines ;
MPRINT(EM_DIAGRAM):   *** Effect: MntWines ;
2081216   +_TEMP = MntWines ;
MPRINT(EM_DIAGRAM):   _TEMP = MntWines ;
2081217   +_LP0 = _LP0 + (   -0.00184060065513 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.00184060065513 * _TEMP);
2081218   +
2081219   +***  Effect: NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumCatalogPurchases ;
2081220   +_TEMP = NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumCatalogPurchases ;
2081221   +_LP0 = _LP0 + (    0.40015202354101 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.40015202354101 * _TEMP);
2081222   +
2081223   +***  Effect: NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumDealsPurchases ;
2081224   +_TEMP = NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumDealsPurchases ;
2081225   +_LP0 = _LP0 + (    0.39526484909287 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.39526484909287 * _TEMP);
2081226   +
2081227   +***  Effect: NumStorePurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumStorePurchases ;
2081228   +_TEMP = NumStorePurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumStorePurchases ;
2081229   +_LP0 = _LP0 + (   -0.21400418800044 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.21400418800044 * _TEMP);
2081230   +
2081231   +***  Effect: NumWebPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumWebPurchases ;
2081232   +_TEMP = NumWebPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumWebPurchases ;
2081233   +_LP0 = _LP0 + (    -0.2223953481686 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.2223953481686 * _TEMP);
2081234   +
2081235   +***  Effect: NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   *** Effect: NumWebVisitsMonth ;
2081236   +_TEMP = NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   _TEMP = NumWebVisitsMonth ;
2081237   +_LP0 = _LP0 + (    0.54388363089232 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.54388363089232 * _TEMP);
2081238   +
2081239   +***  Effect: Recency ;
MPRINT(EM_DIAGRAM):   *** Effect: Recency ;
2081240   +_TEMP = Recency ;
MPRINT(EM_DIAGRAM):   _TEMP = Recency ;
2081241   +_LP0 = _LP0 + (   -0.05513564922633 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.05513564922633 * _TEMP);
2081242   +
2081243   +***  Effect: Teenhome ;
MPRINT(EM_DIAGRAM):   *** Effect: Teenhome ;
2081244   +_TEMP = Teenhome ;
MPRINT(EM_DIAGRAM):   _TEMP = Teenhome ;
2081245   +_LP0 = _LP0 + (   -0.70674092258187 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.70674092258187 * _TEMP);
2081246   +
2081247   +*** Naive Posterior Probabilities;
MPRINT(EM_DIAGRAM):   *** Naive Posterior Probabilities;
2081248   +drop _MAXP _IY _P0 _P1;
MPRINT(EM_DIAGRAM):   drop _MAXP _IY _P0 _P1;
2081249   +_P0 = probnorm((   -0.62163391257391) + _LP0);
MPRINT(EM_DIAGRAM):   _P0 = probnorm(( -0.62163391257391) + _LP0);
2081250   +_P1 = 1.0 - _P0;
MPRINT(EM_DIAGRAM):   _P1 = 1.0 - _P0;
2081251   +
2081252   +REG10DR1:
2081253   +
2081254   +*** Residuals;
MPRINT(EM_DIAGRAM):   REG10DR1: *** Residuals;
2081255   +if (_Y = .) then do;
MPRINT(EM_DIAGRAM):   if (_Y = .) then do;
2081256   +   R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
2081257   +   R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
2081258   +end;
MPRINT(EM_DIAGRAM):   end;
2081259   +else do;
MPRINT(EM_DIAGRAM):   else do;
2081260   +    label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
2081261   +    label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
2081262   +   R_DepVar1 = - _P0;
MPRINT(EM_DIAGRAM):   R_DepVar1 = - _P0;
2081263   +   R_DepVar0 = - _P1;
MPRINT(EM_DIAGRAM):   R_DepVar0 = - _P1;
2081264   +   select( _Y );
MPRINT(EM_DIAGRAM):   select( _Y );
2081265   +      when (0)  R_DepVar1 = R_DepVar1 + 1;
MPRINT(EM_DIAGRAM):   when (0) R_DepVar1 = R_DepVar1 + 1;
2081266   +      when (1)  R_DepVar0 = R_DepVar0 + 1;
MPRINT(EM_DIAGRAM):   when (1) R_DepVar0 = R_DepVar0 + 1;
2081267   +   end;
MPRINT(EM_DIAGRAM):   end;
2081268   +end;
MPRINT(EM_DIAGRAM):   end;
2081269   +
2081270   +*** Posterior Probabilities and Predicted Level;
MPRINT(EM_DIAGRAM):   *** Posterior Probabilities and Predicted Level;
2081271   +label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2081272   +label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2081273   +P_DepVar1 = _P0;
MPRINT(EM_DIAGRAM):   P_DepVar1 = _P0;
2081274   +_MAXP = _P0;
MPRINT(EM_DIAGRAM):   _MAXP = _P0;
2081275   +_IY = 1;
MPRINT(EM_DIAGRAM):   _IY = 1;
2081276   +P_DepVar0 = _P1;
MPRINT(EM_DIAGRAM):   P_DepVar0 = _P1;
2081277   +if (_P1 >  _MAXP + 1E-8) then do;
MPRINT(EM_DIAGRAM):   if (_P1 > _MAXP + 1E-8) then do;
2081278   +   _MAXP = _P1;
MPRINT(EM_DIAGRAM):   _MAXP = _P1;
2081279   +   _IY = 2;
MPRINT(EM_DIAGRAM):   _IY = 2;
2081280   +end;
MPRINT(EM_DIAGRAM):   end;
2081281   +I_DepVar = REG10DRF[_IY];
MPRINT(EM_DIAGRAM):   I_DepVar = REG10DRF[_IY];
2081282   +U_DepVar = REG10DRU[_IY];
MPRINT(EM_DIAGRAM):   U_DepVar = REG10DRU[_IY];
2081283   +
2081284   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
2081285   +***** end scoring code for regression;
MPRINT(EM_DIAGRAM):   ***** end scoring code for regression;
2081286   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
2081287   +* Renaming variables for Reg10;
MPRINT(EM_DIAGRAM):   * Renaming variables for Reg10;
2081288   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2081289   +* Renaming Posterior variables for Reg10;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Reg10;
2081290   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2081291   +drop Reg10_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Reg10_P_DepVar1;
2081292   +Reg10_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Reg10_P_DepVar1 = P_DepVar1;
2081293   +drop Reg10_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Reg10_P_DepVar0;
2081294   +Reg10_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Reg10_P_DepVar0 = P_DepVar0;
2081295   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2081296   +* Renaming _WARN_ variable for Reg10;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Reg10;
2081297   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2081298   +length Reg10_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Reg10_WARN_ $4;
2081299   +drop Reg10_WARN_;
MPRINT(EM_DIAGRAM):   drop Reg10_WARN_;
2081300   +Reg10_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Reg10_WARN_ = _WARN_;
2081301   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2081302   +* Ensmbl9: Scoring Code of model 2 of 10;
MPRINT(EM_DIAGRAM):   * Ensmbl9: Scoring Code of model 2 of 10;
2081303   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2081304   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2081305   +* TOOL: Regression;
MPRINT(EM_DIAGRAM):   * TOOL: Regression;
2081306   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
2081307   +* NODE: Reg9;
MPRINT(EM_DIAGRAM):   * NODE: Reg9;
2081308   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2081309   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
2081310   +*** begin scoring code for regression;
MPRINT(EM_DIAGRAM):   *** begin scoring code for regression;
2081311   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
2081312   +
2081313   +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
2081314   +label _WARN_ = 'Warnings' ;
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings' ;
2081315   +
2081316   +length I_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length I_DepVar $ 12;
2081317   +label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2081318   +*** Target Values;
MPRINT(EM_DIAGRAM):   *** Target Values;
2081319   +array REG9DRF [2] $12 _temporary_ ('1' '0' );
MPRINT(EM_DIAGRAM):   array REG9DRF [2] $12 _temporary_ ('1' '0' );
2081320   +label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2081321   +format U_DepVar BEST.;
MPRINT(EM_DIAGRAM):   format U_DepVar BEST.;
2081322   +*** Unnormalized target values;
MPRINT(EM_DIAGRAM):   *** Unnormalized target values;
2081323   +ARRAY REG9DRU[2]  _TEMPORARY_ (1 0);
MPRINT(EM_DIAGRAM):   ARRAY REG9DRU[2] _TEMPORARY_ (1 0);
2081324   +
2081325   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
2081326   +drop _Y ;
MPRINT(EM_DIAGRAM):   drop _Y ;
2081327   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2081328   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
2081329   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
2081330   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2081331   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
2081332   +   _Y = .;
MPRINT(EM_DIAGRAM):   _Y = .;
2081333   +end;
MPRINT(EM_DIAGRAM):   end;
2081334   +else do;
MPRINT(EM_DIAGRAM):   else do;
2081335   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
2081336   +      _Y = 1;
MPRINT(EM_DIAGRAM):   _Y = 1;
2081337   +   end;
MPRINT(EM_DIAGRAM):   end;
2081338   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
2081339   +      _Y = 0;
MPRINT(EM_DIAGRAM):   _Y = 0;
2081340   +   end;
MPRINT(EM_DIAGRAM):   end;
2081341   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2081342   +      _Y = .;
MPRINT(EM_DIAGRAM):   _Y = .;
2081343   +   end;
MPRINT(EM_DIAGRAM):   end;
2081344   +end;
MPRINT(EM_DIAGRAM):   end;
2081345   +
2081346   +drop _DM_BAD;
MPRINT(EM_DIAGRAM):   drop _DM_BAD;
2081347   +_DM_BAD=0;
MPRINT(EM_DIAGRAM):   _DM_BAD=0;
2081348   +
2081349   +*** Check Income for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Income for missing values ;
2081350   +if missing( Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( Income ) then do;
2081351   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2081352   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2081353   +end;
MPRINT(EM_DIAGRAM):   end;
2081354   +
2081355   +*** Check MntFishProducts for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntFishProducts for missing values ;
2081356   +if missing( MntFishProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntFishProducts ) then do;
2081357   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2081358   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2081359   +end;
MPRINT(EM_DIAGRAM):   end;
2081360   +
2081361   +*** Check MntFruits for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntFruits for missing values ;
2081362   +if missing( MntFruits ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntFruits ) then do;
2081363   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2081364   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2081365   +end;
MPRINT(EM_DIAGRAM):   end;
2081366   +
2081367   +*** Check MntMeatProducts for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntMeatProducts for missing values ;
2081368   +if missing( MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntMeatProducts ) then do;
2081369   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2081370   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2081371   +end;
MPRINT(EM_DIAGRAM):   end;
2081372   +
2081373   +*** Check MntWines for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntWines for missing values ;
2081374   +if missing( MntWines ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntWines ) then do;
2081375   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2081376   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2081377   +end;
MPRINT(EM_DIAGRAM):   end;
2081378   +
2081379   +*** Check NumCatalogPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumCatalogPurchases for missing values ;
2081380   +if missing( NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumCatalogPurchases ) then do;
2081381   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2081382   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2081383   +end;
MPRINT(EM_DIAGRAM):   end;
2081384   +
2081385   +*** Check NumDealsPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumDealsPurchases for missing values ;
2081386   +if missing( NumDealsPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumDealsPurchases ) then do;
2081387   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2081388   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2081389   +end;
MPRINT(EM_DIAGRAM):   end;
2081390   +
2081391   +*** Check NumStorePurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumStorePurchases for missing values ;
2081392   +if missing( NumStorePurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumStorePurchases ) then do;
2081393   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2081394   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2081395   +end;
MPRINT(EM_DIAGRAM):   end;
2081396   +
2081397   +*** Check NumWebPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumWebPurchases for missing values ;
2081398   +if missing( NumWebPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumWebPurchases ) then do;
2081399   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2081400   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2081401   +end;
MPRINT(EM_DIAGRAM):   end;
2081402   +
2081403   +*** Check NumWebVisitsMonth for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumWebVisitsMonth for missing values ;
2081404   +if missing( NumWebVisitsMonth ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumWebVisitsMonth ) then do;
2081405   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2081406   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2081407   +end;
MPRINT(EM_DIAGRAM):   end;
2081408   +
2081409   +*** Check Recency for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Recency for missing values ;
2081410   +if missing( Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( Recency ) then do;
2081411   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2081412   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2081413   +end;
MPRINT(EM_DIAGRAM):   end;
2081414   +
2081415   +*** Check Teenhome for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Teenhome for missing values ;
2081416   +if missing( Teenhome ) then do;
MPRINT(EM_DIAGRAM):   if missing( Teenhome ) then do;
2081417   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2081418   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2081419   +end;
MPRINT(EM_DIAGRAM):   end;
2081420   +
2081421   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2081422   +drop _1_0 ;
MPRINT(EM_DIAGRAM):   drop _1_0 ;
2081423   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2081424   +   _1_0 = .;
MPRINT(EM_DIAGRAM):   _1_0 = .;
2081425   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2081426   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2081427   +end;
MPRINT(EM_DIAGRAM):   end;
2081428   +else do;
MPRINT(EM_DIAGRAM):   else do;
2081429   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2081430   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2081431   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2081432   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2081433   +      _1_0 = 1;
MPRINT(EM_DIAGRAM):   _1_0 = 1;
2081434   +   end;
MPRINT(EM_DIAGRAM):   end;
2081435   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2081436   +      _1_0 = -1;
MPRINT(EM_DIAGRAM):   _1_0 = -1;
2081437   +   end;
MPRINT(EM_DIAGRAM):   end;
2081438   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2081439   +      _1_0 = .;
MPRINT(EM_DIAGRAM):   _1_0 = .;
2081440   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2081441   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2081442   +   end;
MPRINT(EM_DIAGRAM):   end;
2081443   +end;
MPRINT(EM_DIAGRAM):   end;
2081444   +
2081445   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2081446   +drop _2_0 ;
MPRINT(EM_DIAGRAM):   drop _2_0 ;
2081447   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2081448   +   _2_0 = .;
MPRINT(EM_DIAGRAM):   _2_0 = .;
2081449   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2081450   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2081451   +end;
MPRINT(EM_DIAGRAM):   end;
2081452   +else do;
MPRINT(EM_DIAGRAM):   else do;
2081453   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2081454   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2081455   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2081456   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2081457   +      _2_0 = 1;
MPRINT(EM_DIAGRAM):   _2_0 = 1;
2081458   +   end;
MPRINT(EM_DIAGRAM):   end;
2081459   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2081460   +      _2_0 = -1;
MPRINT(EM_DIAGRAM):   _2_0 = -1;
2081461   +   end;
MPRINT(EM_DIAGRAM):   end;
2081462   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2081463   +      _2_0 = .;
MPRINT(EM_DIAGRAM):   _2_0 = .;
2081464   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2081465   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2081466   +   end;
MPRINT(EM_DIAGRAM):   end;
2081467   +end;
MPRINT(EM_DIAGRAM):   end;
2081468   +
2081469   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2081470   +drop _3_0 ;
MPRINT(EM_DIAGRAM):   drop _3_0 ;
2081471   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2081472   +   _3_0 = .;
MPRINT(EM_DIAGRAM):   _3_0 = .;
2081473   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2081474   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2081475   +end;
MPRINT(EM_DIAGRAM):   end;
2081476   +else do;
MPRINT(EM_DIAGRAM):   else do;
2081477   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2081478   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2081479   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2081480   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2081481   +      _3_0 = 1;
MPRINT(EM_DIAGRAM):   _3_0 = 1;
2081482   +   end;
MPRINT(EM_DIAGRAM):   end;
2081483   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2081484   +      _3_0 = -1;
MPRINT(EM_DIAGRAM):   _3_0 = -1;
2081485   +   end;
MPRINT(EM_DIAGRAM):   end;
2081486   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2081487   +      _3_0 = .;
MPRINT(EM_DIAGRAM):   _3_0 = .;
2081488   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2081489   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2081490   +   end;
MPRINT(EM_DIAGRAM):   end;
2081491   +end;
MPRINT(EM_DIAGRAM):   end;
2081492   +
2081493   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2081494   +drop _4_0 ;
MPRINT(EM_DIAGRAM):   drop _4_0 ;
2081495   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2081496   +   _4_0 = .;
MPRINT(EM_DIAGRAM):   _4_0 = .;
2081497   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2081498   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2081499   +end;
MPRINT(EM_DIAGRAM):   end;
2081500   +else do;
MPRINT(EM_DIAGRAM):   else do;
2081501   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2081502   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2081503   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2081504   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2081505   +      _4_0 = 1;
MPRINT(EM_DIAGRAM):   _4_0 = 1;
2081506   +   end;
MPRINT(EM_DIAGRAM):   end;
2081507   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2081508   +      _4_0 = -1;
MPRINT(EM_DIAGRAM):   _4_0 = -1;
2081509   +   end;
MPRINT(EM_DIAGRAM):   end;
2081510   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2081511   +      _4_0 = .;
MPRINT(EM_DIAGRAM):   _4_0 = .;
2081512   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2081513   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2081514   +   end;
MPRINT(EM_DIAGRAM):   end;
2081515   +end;
MPRINT(EM_DIAGRAM):   end;
2081516   +
2081517   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2081518   +drop _5_0 ;
MPRINT(EM_DIAGRAM):   drop _5_0 ;
2081519   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2081520   +   _5_0 = .;
MPRINT(EM_DIAGRAM):   _5_0 = .;
2081521   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2081522   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2081523   +end;
MPRINT(EM_DIAGRAM):   end;
2081524   +else do;
MPRINT(EM_DIAGRAM):   else do;
2081525   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2081526   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2081527   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2081528   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2081529   +      _5_0 = 1;
MPRINT(EM_DIAGRAM):   _5_0 = 1;
2081530   +   end;
MPRINT(EM_DIAGRAM):   end;
2081531   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2081532   +      _5_0 = -1;
MPRINT(EM_DIAGRAM):   _5_0 = -1;
2081533   +   end;
MPRINT(EM_DIAGRAM):   end;
2081534   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2081535   +      _5_0 = .;
MPRINT(EM_DIAGRAM):   _5_0 = .;
2081536   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2081537   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2081538   +   end;
MPRINT(EM_DIAGRAM):   end;
2081539   +end;
MPRINT(EM_DIAGRAM):   end;
2081540   +
2081541   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2081542   +drop _8_0 _8_1 _8_2 _8_3 ;
MPRINT(EM_DIAGRAM):   drop _8_0 _8_1 _8_2 _8_3 ;
2081543   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2081544   +_8_0 = 0;
MPRINT(EM_DIAGRAM):   _8_0 = 0;
2081545   +_8_1 = 0;
MPRINT(EM_DIAGRAM):   _8_1 = 0;
2081546   +_8_2 = 0;
MPRINT(EM_DIAGRAM):   _8_2 = 0;
2081547   +_8_3 = 0;
MPRINT(EM_DIAGRAM):   _8_3 = 0;
2081548   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2081549   +   _8_0 = .;
MPRINT(EM_DIAGRAM):   _8_0 = .;
2081550   +   _8_1 = .;
MPRINT(EM_DIAGRAM):   _8_1 = .;
2081551   +   _8_2 = .;
MPRINT(EM_DIAGRAM):   _8_2 = .;
2081552   +   _8_3 = .;
MPRINT(EM_DIAGRAM):   _8_3 = .;
2081553   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2081554   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2081555   +end;
MPRINT(EM_DIAGRAM):   end;
2081556   +else do;
MPRINT(EM_DIAGRAM):   else do;
2081557   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2081558   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2081559   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2081560   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2081561   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2081562   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2081563   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2081564   +            _8_0 = 1;
MPRINT(EM_DIAGRAM):   _8_0 = 1;
2081565   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2081566   +         end;
MPRINT(EM_DIAGRAM):   end;
2081567   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2081568   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2081569   +               _8_1 = 1;
MPRINT(EM_DIAGRAM):   _8_1 = 1;
2081570   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2081571   +            end;
MPRINT(EM_DIAGRAM):   end;
2081572   +         end;
MPRINT(EM_DIAGRAM):   end;
2081573   +      end;
MPRINT(EM_DIAGRAM):   end;
2081574   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2081575   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2081576   +            _8_2 = 1;
MPRINT(EM_DIAGRAM):   _8_2 = 1;
2081577   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2081578   +         end;
MPRINT(EM_DIAGRAM):   end;
2081579   +      end;
MPRINT(EM_DIAGRAM):   end;
2081580   +   end;
MPRINT(EM_DIAGRAM):   end;
2081581   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2081582   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2081583   +         _8_3 = 1;
MPRINT(EM_DIAGRAM):   _8_3 = 1;
2081584   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2081585   +      end;
MPRINT(EM_DIAGRAM):   end;
2081586   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2081587   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2081588   +            _8_0 = -1;
MPRINT(EM_DIAGRAM):   _8_0 = -1;
2081589   +            _8_1 = -1;
MPRINT(EM_DIAGRAM):   _8_1 = -1;
2081590   +            _8_2 = -1;
MPRINT(EM_DIAGRAM):   _8_2 = -1;
2081591   +            _8_3 = -1;
MPRINT(EM_DIAGRAM):   _8_3 = -1;
2081592   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2081593   +         end;
MPRINT(EM_DIAGRAM):   end;
2081594   +      end;
MPRINT(EM_DIAGRAM):   end;
2081595   +   end;
MPRINT(EM_DIAGRAM):   end;
2081596   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2081597   +      _8_0 = .;
MPRINT(EM_DIAGRAM):   _8_0 = .;
2081598   +      _8_1 = .;
MPRINT(EM_DIAGRAM):   _8_1 = .;
2081599   +      _8_2 = .;
MPRINT(EM_DIAGRAM):   _8_2 = .;
2081600   +      _8_3 = .;
MPRINT(EM_DIAGRAM):   _8_3 = .;
2081601   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2081602   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2081603   +   end;
MPRINT(EM_DIAGRAM):   end;
2081604   +end;
MPRINT(EM_DIAGRAM):   end;
2081605   +
2081606   +*** If missing inputs, use averages;
MPRINT(EM_DIAGRAM):   *** If missing inputs, use averages;
2081607   +if _DM_BAD > 0 then do;
MPRINT(EM_DIAGRAM):   if _DM_BAD > 0 then do;
2081608   +   _P0 = 0.151221567;
MPRINT(EM_DIAGRAM):   _P0 = 0.151221567;
2081609   +   _P1 = 0.848778433;
MPRINT(EM_DIAGRAM):   _P1 = 0.848778433;
2081610   +   goto REG9DR1;
MPRINT(EM_DIAGRAM):   goto REG9DR1;
2081611   +end;
MPRINT(EM_DIAGRAM):   end;
2081612   +
2081613   +*** Compute Linear Predictor;
MPRINT(EM_DIAGRAM):   *** Compute Linear Predictor;
2081614   +drop _TEMP;
MPRINT(EM_DIAGRAM):   drop _TEMP;
2081615   +drop _LP0;
MPRINT(EM_DIAGRAM):   drop _LP0;
2081616   +_LP0 = 0;
MPRINT(EM_DIAGRAM):   _LP0 = 0;
2081617   +
2081618   +***  Effect: AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Effect: AcceptedCmp1 ;
2081619   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
2081620   +_LP0 = _LP0 + (   -1.28114872833376) * _TEMP * _1_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.28114872833376) * _TEMP * _1_0;
2081621   +
2081622   +***  Effect: AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Effect: AcceptedCmp2 ;
2081623   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
2081624   +_LP0 = _LP0 + (    -1.4871451186069) * _TEMP * _2_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.4871451186069) * _TEMP * _2_0;
2081625   +
2081626   +***  Effect: AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Effect: AcceptedCmp3 ;
2081627   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
2081628   +_LP0 = _LP0 + (   -1.58721567367346) * _TEMP * _3_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.58721567367346) * _TEMP * _3_0;
2081629   +
2081630   +***  Effect: AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Effect: AcceptedCmp4 ;
2081631   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
2081632   +_LP0 = _LP0 + (    -1.1573037622615) * _TEMP * _4_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.1573037622615) * _TEMP * _4_0;
2081633   +
2081634   +***  Effect: AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Effect: AcceptedCmp5 ;
2081635   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
2081636   +_LP0 = _LP0 + (   -1.68835129992038) * _TEMP * _5_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.68835129992038) * _TEMP * _5_0;
2081637   +
2081638   +***  Effect: Income ;
MPRINT(EM_DIAGRAM):   *** Effect: Income ;
2081639   +_TEMP = Income ;
MPRINT(EM_DIAGRAM):   _TEMP = Income ;
2081640   +_LP0 = _LP0 + (    0.00006770818936 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00006770818936 * _TEMP);
2081641   +
2081642   +***  Effect: Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Effect: Marital_Status ;
2081643   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
2081644   +_LP0 = _LP0 + (    0.18351716765826) * _TEMP * _8_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.18351716765826) * _TEMP * _8_0;
2081645   +_LP0 = _LP0 + (   -0.88993819943493) * _TEMP * _8_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.88993819943493) * _TEMP * _8_1;
2081646   +_LP0 = _LP0 + (    0.89971120865107) * _TEMP * _8_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.89971120865107) * _TEMP * _8_2;
2081647   +_LP0 = _LP0 + (   -0.96825171718714) * _TEMP * _8_3;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.96825171718714) * _TEMP * _8_3;
2081648   +
2081649   +***  Effect: MntFishProducts ;
MPRINT(EM_DIAGRAM):   *** Effect: MntFishProducts ;
2081650   +_TEMP = MntFishProducts ;
MPRINT(EM_DIAGRAM):   _TEMP = MntFishProducts ;
2081651   +_LP0 = _LP0 + (    -0.0053789406447 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.0053789406447 * _TEMP);
2081652   +
2081653   +***  Effect: MntFruits ;
MPRINT(EM_DIAGRAM):   *** Effect: MntFruits ;
2081654   +_TEMP = MntFruits ;
MPRINT(EM_DIAGRAM):   _TEMP = MntFruits ;
2081655   +_LP0 = _LP0 + (   -0.00810096702081 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.00810096702081 * _TEMP);
2081656   +
2081657   +***  Effect: MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Effect: MntMeatProducts ;
2081658   +_TEMP = MntMeatProducts ;
MPRINT(EM_DIAGRAM):   _TEMP = MntMeatProducts ;
2081659   +_LP0 = _LP0 + (    0.00876618054091 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00876618054091 * _TEMP);
2081660   +
2081661   +***  Effect: MntWines ;
MPRINT(EM_DIAGRAM):   *** Effect: MntWines ;
2081662   +_TEMP = MntWines ;
MPRINT(EM_DIAGRAM):   _TEMP = MntWines ;
2081663   +_LP0 = _LP0 + (   -0.00323708533956 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.00323708533956 * _TEMP);
2081664   +
2081665   +***  Effect: NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumCatalogPurchases ;
2081666   +_TEMP = NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumCatalogPurchases ;
2081667   +_LP0 = _LP0 + (    0.72583602627024 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.72583602627024 * _TEMP);
2081668   +
2081669   +***  Effect: NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumDealsPurchases ;
2081670   +_TEMP = NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumDealsPurchases ;
2081671   +_LP0 = _LP0 + (    0.71587738133808 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.71587738133808 * _TEMP);
2081672   +
2081673   +***  Effect: NumStorePurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumStorePurchases ;
2081674   +_TEMP = NumStorePurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumStorePurchases ;
2081675   +_LP0 = _LP0 + (   -0.38414846639641 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.38414846639641 * _TEMP);
2081676   +
2081677   +***  Effect: NumWebPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumWebPurchases ;
2081678   +_TEMP = NumWebPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumWebPurchases ;
2081679   +_LP0 = _LP0 + (   -0.39960732899531 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.39960732899531 * _TEMP);
2081680   +
2081681   +***  Effect: NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   *** Effect: NumWebVisitsMonth ;
2081682   +_TEMP = NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   _TEMP = NumWebVisitsMonth ;
2081683   +_LP0 = _LP0 + (    1.00690630599849 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.00690630599849 * _TEMP);
2081684   +
2081685   +***  Effect: Recency ;
MPRINT(EM_DIAGRAM):   *** Effect: Recency ;
2081686   +_TEMP = Recency ;
MPRINT(EM_DIAGRAM):   _TEMP = Recency ;
2081687   +_LP0 = _LP0 + (   -0.10368937560371 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.10368937560371 * _TEMP);
2081688   +
2081689   +***  Effect: Teenhome ;
MPRINT(EM_DIAGRAM):   *** Effect: Teenhome ;
2081690   +_TEMP = Teenhome ;
MPRINT(EM_DIAGRAM):   _TEMP = Teenhome ;
2081691   +_LP0 = _LP0 + (   -1.33387551959166 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.33387551959166 * _TEMP);
2081692   +
2081693   +*** Naive Posterior Probabilities;
MPRINT(EM_DIAGRAM):   *** Naive Posterior Probabilities;
2081694   +drop _MAXP _IY _P0 _P1;
MPRINT(EM_DIAGRAM):   drop _MAXP _IY _P0 _P1;
2081695   +_TEMP =    -1.29156803352583 + _LP0;
MPRINT(EM_DIAGRAM):   _TEMP = -1.29156803352583 + _LP0;
2081696   +if (_TEMP < 0) then do;
MPRINT(EM_DIAGRAM):   if (_TEMP < 0) then do;
2081697   +   _TEMP = exp(_TEMP);
MPRINT(EM_DIAGRAM):   _TEMP = exp(_TEMP);
2081698   +   _P0 = _TEMP / (1 + _TEMP);
MPRINT(EM_DIAGRAM):   _P0 = _TEMP / (1 + _TEMP);
2081699   +end;
MPRINT(EM_DIAGRAM):   end;
2081700   +else _P0 = 1 / (1 + exp(-_TEMP));
MPRINT(EM_DIAGRAM):   else _P0 = 1 / (1 + exp(-_TEMP));
2081701   +_P1 = 1.0 - _P0;
MPRINT(EM_DIAGRAM):   _P1 = 1.0 - _P0;
2081702   +
2081703   +REG9DR1:
2081704   +
2081705   +*** Residuals;
MPRINT(EM_DIAGRAM):   REG9DR1: *** Residuals;
2081706   +if (_Y = .) then do;
MPRINT(EM_DIAGRAM):   if (_Y = .) then do;
2081707   +   R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
2081708   +   R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
2081709   +end;
MPRINT(EM_DIAGRAM):   end;
2081710   +else do;
MPRINT(EM_DIAGRAM):   else do;
2081711   +    label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
2081712   +    label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
2081713   +   R_DepVar1 = - _P0;
MPRINT(EM_DIAGRAM):   R_DepVar1 = - _P0;
2081714   +   R_DepVar0 = - _P1;
MPRINT(EM_DIAGRAM):   R_DepVar0 = - _P1;
2081715   +   select( _Y );
MPRINT(EM_DIAGRAM):   select( _Y );
2081716   +      when (0)  R_DepVar1 = R_DepVar1 + 1;
MPRINT(EM_DIAGRAM):   when (0) R_DepVar1 = R_DepVar1 + 1;
2081717   +      when (1)  R_DepVar0 = R_DepVar0 + 1;
MPRINT(EM_DIAGRAM):   when (1) R_DepVar0 = R_DepVar0 + 1;
2081718   +   end;
MPRINT(EM_DIAGRAM):   end;
2081719   +end;
MPRINT(EM_DIAGRAM):   end;
2081720   +
2081721   +*** Posterior Probabilities and Predicted Level;
MPRINT(EM_DIAGRAM):   *** Posterior Probabilities and Predicted Level;
2081722   +label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2081723   +label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2081724   +P_DepVar1 = _P0;
MPRINT(EM_DIAGRAM):   P_DepVar1 = _P0;
2081725   +_MAXP = _P0;
MPRINT(EM_DIAGRAM):   _MAXP = _P0;
2081726   +_IY = 1;
MPRINT(EM_DIAGRAM):   _IY = 1;
2081727   +P_DepVar0 = _P1;
MPRINT(EM_DIAGRAM):   P_DepVar0 = _P1;
2081728   +if (_P1 >  _MAXP + 1E-8) then do;
MPRINT(EM_DIAGRAM):   if (_P1 > _MAXP + 1E-8) then do;
2081729   +   _MAXP = _P1;
MPRINT(EM_DIAGRAM):   _MAXP = _P1;
2081730   +   _IY = 2;
MPRINT(EM_DIAGRAM):   _IY = 2;
2081731   +end;
MPRINT(EM_DIAGRAM):   end;
2081732   +I_DepVar = REG9DRF[_IY];
MPRINT(EM_DIAGRAM):   I_DepVar = REG9DRF[_IY];
2081733   +U_DepVar = REG9DRU[_IY];
MPRINT(EM_DIAGRAM):   U_DepVar = REG9DRU[_IY];
2081734   +
2081735   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
2081736   +***** end scoring code for regression;
MPRINT(EM_DIAGRAM):   ***** end scoring code for regression;
2081737   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
2081738   +* Renaming variables for Reg9;
MPRINT(EM_DIAGRAM):   * Renaming variables for Reg9;
2081739   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2081740   +* Renaming Posterior variables for Reg9;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Reg9;
2081741   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2081742   +drop Reg9_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Reg9_P_DepVar1;
2081743   +Reg9_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Reg9_P_DepVar1 = P_DepVar1;
2081744   +drop Reg9_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Reg9_P_DepVar0;
2081745   +Reg9_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Reg9_P_DepVar0 = P_DepVar0;
2081746   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2081747   +* Renaming _WARN_ variable for Reg9;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Reg9;
2081748   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2081749   +length Reg9_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Reg9_WARN_ $4;
2081750   +drop Reg9_WARN_;
MPRINT(EM_DIAGRAM):   drop Reg9_WARN_;
2081751   +Reg9_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Reg9_WARN_ = _WARN_;
2081752   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2081753   +* Ensmbl9: Scoring Code of model 3 of 10;
MPRINT(EM_DIAGRAM):   * Ensmbl9: Scoring Code of model 3 of 10;
2081754   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2081755   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2081756   +* TOOL: Decision Tree;
MPRINT(EM_DIAGRAM):   * TOOL: Decision Tree;
2081757   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
2081758   +* NODE: Tree5;
MPRINT(EM_DIAGRAM):   * NODE: Tree5;
2081759   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2081760   +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
2081761   +******             DECISION TREE SCORING CODE             ******;
MPRINT(EM_DIAGRAM):   ****** DECISION TREE SCORING CODE ******;
2081762   +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
2081763   +
2081764   +******         LENGTHS OF NEW CHARACTER VARIABLES         ******;
MPRINT(EM_DIAGRAM):   ****** LENGTHS OF NEW CHARACTER VARIABLES ******;
2081765   +LENGTH F_DepVar  $   12;
MPRINT(EM_DIAGRAM):   LENGTH F_DepVar $ 12;
2081766   +LENGTH I_DepVar  $   12;
MPRINT(EM_DIAGRAM):   LENGTH I_DepVar $ 12;
2081767   +LENGTH _WARN_  $    4;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $ 4;
2081768   +
2081769   +******              LABELS FOR NEW VARIABLES              ******;
MPRINT(EM_DIAGRAM):   ****** LABELS FOR NEW VARIABLES ******;
2081770   +LABEL _NODE_  = 'Node' ;
MPRINT(EM_DIAGRAM):   LABEL _NODE_ = 'Node' ;
2081771   +LABEL _LEAF_  = 'Leaf' ;
MPRINT(EM_DIAGRAM):   LABEL _LEAF_ = 'Leaf' ;
2081772   +LABEL P_DepVar0  = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   LABEL P_DepVar0 = 'Predicted: DepVar=0' ;
2081773   +LABEL P_DepVar1  = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   LABEL P_DepVar1 = 'Predicted: DepVar=1' ;
2081774   +LABEL Q_DepVar0  = 'Unadjusted P: DepVar=0' ;
MPRINT(EM_DIAGRAM):   LABEL Q_DepVar0 = 'Unadjusted P: DepVar=0' ;
2081775   +LABEL Q_DepVar1  = 'Unadjusted P: DepVar=1' ;
MPRINT(EM_DIAGRAM):   LABEL Q_DepVar1 = 'Unadjusted P: DepVar=1' ;
2081776   +LABEL V_DepVar0  = 'Validated: DepVar=0' ;
MPRINT(EM_DIAGRAM):   LABEL V_DepVar0 = 'Validated: DepVar=0' ;
2081777   +LABEL V_DepVar1  = 'Validated: DepVar=1' ;
MPRINT(EM_DIAGRAM):   LABEL V_DepVar1 = 'Validated: DepVar=1' ;
2081778   +LABEL R_DepVar0  = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   LABEL R_DepVar0 = 'Residual: DepVar=0' ;
2081779   +LABEL R_DepVar1  = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   LABEL R_DepVar1 = 'Residual: DepVar=1' ;
2081780   +LABEL F_DepVar  = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   LABEL F_DepVar = 'From: DepVar' ;
2081781   +LABEL I_DepVar  = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   LABEL I_DepVar = 'Into: DepVar' ;
2081782   +LABEL U_DepVar  = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   LABEL U_DepVar = 'Unnormalized Into: DepVar' ;
2081783   +LABEL _WARN_  = 'Warnings' ;
MPRINT(EM_DIAGRAM):   LABEL _WARN_ = 'Warnings' ;
2081784   +
2081785   +
2081786   +******      TEMPORARY VARIABLES FOR FORMATTED VALUES      ******;
MPRINT(EM_DIAGRAM):   ****** TEMPORARY VARIABLES FOR FORMATTED VALUES ******;
2081787   +LENGTH _ARBFMT_12 $     12; DROP _ARBFMT_12;
MPRINT(EM_DIAGRAM):   LENGTH _ARBFMT_12 $ 12;
MPRINT(EM_DIAGRAM):   DROP _ARBFMT_12;
2081788   +_ARBFMT_12 = ' '; /* Initialize to avoid warning. */
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = ' ';
2081789   +LENGTH _ARBFMT_8 $      8; DROP _ARBFMT_8;
MPRINT(EM_DIAGRAM):   LENGTH _ARBFMT_8 $ 8;
MPRINT(EM_DIAGRAM):   DROP _ARBFMT_8;
2081790   +_ARBFMT_8 = ' '; /* Initialize to avoid warning. */
MPRINT(EM_DIAGRAM):   _ARBFMT_8 = ' ';
2081791   +
2081792   +
2081793   +_ARBFMT_12 = PUT( DepVar , BEST.);
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( DepVar , BEST.);
2081794   + %DMNORMCP( _ARBFMT_12, F_DepVar );
MPRINT(DMNORMCP):   F_DepVar=dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2081795   +
2081796   +******             ASSIGN OBSERVATION TO NODE             ******;
MPRINT(EM_DIAGRAM):   ****** ASSIGN OBSERVATION TO NODE ******;
2081797   +IF  NOT MISSING(Recency ) AND
2081798   +  Recency  <                 38.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(Recency ) AND Recency < 38.5 THEN DO;
2081799   +  IF  NOT MISSING(MntMeatProducts ) AND
2081800   +                   431.5 <= MntMeatProducts  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(MntMeatProducts ) AND 431.5 <= MntMeatProducts THEN DO;
2081801   +    IF  NOT MISSING(NumCatalogPurchases ) AND
2081802   +      NumCatalogPurchases  <                  5.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(NumCatalogPurchases ) AND NumCatalogPurchases < 5.5 THEN 
DO;
2081803   +      _ARBFMT_8 = PUT( Marital_Status , $8.);
MPRINT(EM_DIAGRAM):   _ARBFMT_8 = PUT( Marital_Status , $8.);
2081804   +       %DMNORMIP( _ARBFMT_8);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
2081805   +      IF _ARBFMT_8 IN ('MARRIED' ,'TOGETHER' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_8 IN ('MARRIED' ,'TOGETHER' ) THEN DO;
2081806   +        _NODE_  =                   21;
MPRINT(EM_DIAGRAM):   _NODE_ = 21;
2081807   +        _LEAF_  =                    5;
MPRINT(EM_DIAGRAM):   _LEAF_ = 5;
2081808   +        P_DepVar0  =     0.71052631578947;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.71052631578947;
2081809   +        P_DepVar1  =     0.28947368421052;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.28947368421052;
2081810   +        Q_DepVar0  =     0.71052631578947;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.71052631578947;
2081811   +        Q_DepVar1  =     0.28947368421052;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.28947368421052;
2081812   +        V_DepVar0  =     0.66666666666666;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.66666666666666;
2081813   +        V_DepVar1  =     0.33333333333333;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.33333333333333;
2081814   +        I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
2081815   +        U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2081816   +        END;
MPRINT(EM_DIAGRAM):   END;
2081817   +      ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2081818   +        _NODE_  =                   20;
MPRINT(EM_DIAGRAM):   _NODE_ = 20;
2081819   +        _LEAF_  =                    4;
MPRINT(EM_DIAGRAM):   _LEAF_ = 4;
2081820   +        P_DepVar0  =     0.17647058823529;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.17647058823529;
2081821   +        P_DepVar1  =      0.8235294117647;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.8235294117647;
2081822   +        Q_DepVar0  =     0.17647058823529;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.17647058823529;
2081823   +        Q_DepVar1  =      0.8235294117647;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.8235294117647;
2081824   +        V_DepVar0  =                 0.25;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.25;
2081825   +        V_DepVar1  =                 0.75;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.75;
2081826   +        I_DepVar  = '1' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '1' ;
2081827   +        U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2081828   +        END;
MPRINT(EM_DIAGRAM):   END;
2081829   +      END;
MPRINT(EM_DIAGRAM):   END;
2081830   +    ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2081831   +      _NODE_  =                   11;
MPRINT(EM_DIAGRAM):   _NODE_ = 11;
2081832   +      _LEAF_  =                    6;
MPRINT(EM_DIAGRAM):   _LEAF_ = 6;
2081833   +      P_DepVar0  =     0.15730337078651;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.15730337078651;
2081834   +      P_DepVar1  =     0.84269662921348;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.84269662921348;
2081835   +      Q_DepVar0  =     0.15730337078651;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.15730337078651;
2081836   +      Q_DepVar1  =     0.84269662921348;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.84269662921348;
2081837   +      V_DepVar0  =     0.29411764705882;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.29411764705882;
2081838   +      V_DepVar1  =     0.70588235294117;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.70588235294117;
2081839   +      I_DepVar  = '1' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '1' ;
2081840   +      U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2081841   +      END;
MPRINT(EM_DIAGRAM):   END;
2081842   +    END;
MPRINT(EM_DIAGRAM):   END;
2081843   +  ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2081844   +    _ARBFMT_12 = PUT( AcceptedCmp3 , BEST.);
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( AcceptedCmp3 , BEST.);
2081845   +     %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
2081846   +    IF _ARBFMT_12 IN ('1' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('1' ) THEN DO;
2081847   +      IF  NOT MISSING(NumWebVisitsMonth ) AND
2081848   +        NumWebVisitsMonth  <                  5.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(NumWebVisitsMonth ) AND NumWebVisitsMonth < 5.5 THEN DO;
2081849   +        _NODE_  =                   16;
MPRINT(EM_DIAGRAM):   _NODE_ = 16;
2081850   +        _LEAF_  =                    1;
MPRINT(EM_DIAGRAM):   _LEAF_ = 1;
2081851   +        P_DepVar0  =     0.64705882352941;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.64705882352941;
2081852   +        P_DepVar1  =     0.35294117647058;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.35294117647058;
2081853   +        Q_DepVar0  =     0.64705882352941;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.64705882352941;
2081854   +        Q_DepVar1  =     0.35294117647058;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.35294117647058;
2081855   +        V_DepVar0  =     0.57142857142857;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.57142857142857;
2081856   +        V_DepVar1  =     0.42857142857142;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.42857142857142;
2081857   +        I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
2081858   +        U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2081859   +        END;
MPRINT(EM_DIAGRAM):   END;
2081860   +      ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2081861   +        _NODE_  =                   17;
MPRINT(EM_DIAGRAM):   _NODE_ = 17;
2081862   +        _LEAF_  =                    2;
MPRINT(EM_DIAGRAM):   _LEAF_ = 2;
2081863   +        P_DepVar0  =     0.17391304347826;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.17391304347826;
2081864   +        P_DepVar1  =     0.82608695652173;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.82608695652173;
2081865   +        Q_DepVar0  =     0.17391304347826;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.17391304347826;
2081866   +        Q_DepVar1  =     0.82608695652173;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.82608695652173;
2081867   +        V_DepVar0  =                 0.15;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.15;
2081868   +        V_DepVar1  =                 0.85;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.85;
2081869   +        I_DepVar  = '1' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '1' ;
2081870   +        U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2081871   +        END;
MPRINT(EM_DIAGRAM):   END;
2081872   +      END;
MPRINT(EM_DIAGRAM):   END;
2081873   +    ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2081874   +      _NODE_  =                    9;
MPRINT(EM_DIAGRAM):   _NODE_ = 9;
2081875   +      _LEAF_  =                    3;
MPRINT(EM_DIAGRAM):   _LEAF_ = 3;
2081876   +      P_DepVar0  =     0.82099596231493;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.82099596231493;
2081877   +      P_DepVar1  =     0.17900403768506;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.17900403768506;
2081878   +      Q_DepVar0  =     0.82099596231493;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.82099596231493;
2081879   +      Q_DepVar1  =     0.17900403768506;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.17900403768506;
2081880   +      V_DepVar0  =     0.80966767371601;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.80966767371601;
2081881   +      V_DepVar1  =     0.19033232628398;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.19033232628398;
2081882   +      I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
2081883   +      U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2081884   +      END;
MPRINT(EM_DIAGRAM):   END;
2081885   +    END;
MPRINT(EM_DIAGRAM):   END;
2081886   +  END;
MPRINT(EM_DIAGRAM):   END;
2081887   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2081888   +  _ARBFMT_12 = PUT( AcceptedCmp5 , BEST.);
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( AcceptedCmp5 , BEST.);
2081889   +   %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
2081890   +  IF _ARBFMT_12 IN ('1' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('1' ) THEN DO;
2081891   +    IF  NOT MISSING(MntWines ) AND
2081892   +      MntWines  <                412.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(MntWines ) AND MntWines < 412.5 THEN DO;
2081893   +      _NODE_  =                   12;
MPRINT(EM_DIAGRAM):   _NODE_ = 12;
2081894   +      _LEAF_  =                    7;
MPRINT(EM_DIAGRAM):   _LEAF_ = 7;
2081895   +      P_DepVar0  =     0.13333333333333;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.13333333333333;
2081896   +      P_DepVar1  =     0.86666666666666;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.86666666666666;
2081897   +      Q_DepVar0  =     0.13333333333333;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.13333333333333;
2081898   +      Q_DepVar1  =     0.86666666666666;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.86666666666666;
2081899   +      V_DepVar0  =     0.16666666666666;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.16666666666666;
2081900   +      V_DepVar1  =     0.83333333333333;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.83333333333333;
2081901   +      I_DepVar  = '1' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '1' ;
2081902   +      U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2081903   +      END;
MPRINT(EM_DIAGRAM):   END;
2081904   +    ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2081905   +      _NODE_  =                   13;
MPRINT(EM_DIAGRAM):   _NODE_ = 13;
2081906   +      _LEAF_  =                    8;
MPRINT(EM_DIAGRAM):   _LEAF_ = 8;
2081907   +      P_DepVar0  =     0.70833333333333;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.70833333333333;
2081908   +      P_DepVar1  =     0.29166666666666;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.29166666666666;
2081909   +      Q_DepVar0  =     0.70833333333333;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.70833333333333;
2081910   +      Q_DepVar1  =     0.29166666666666;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.29166666666666;
2081911   +      V_DepVar0  =     0.63461538461538;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.63461538461538;
2081912   +      V_DepVar1  =     0.36538461538461;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.36538461538461;
2081913   +      I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
2081914   +      U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2081915   +      END;
MPRINT(EM_DIAGRAM):   END;
2081916   +    END;
MPRINT(EM_DIAGRAM):   END;
2081917   +  ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2081918   +    _NODE_  =                    7;
MPRINT(EM_DIAGRAM):   _NODE_ = 7;
2081919   +    _LEAF_  =                    9;
MPRINT(EM_DIAGRAM):   _LEAF_ = 9;
2081920   +    P_DepVar0  =     0.96877380045696;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.96877380045696;
2081921   +    P_DepVar1  =     0.03122619954303;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.03122619954303;
2081922   +    Q_DepVar0  =     0.96877380045696;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.96877380045696;
2081923   +    Q_DepVar1  =     0.03122619954303;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.03122619954303;
2081924   +    V_DepVar0  =     0.96756756756756;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.96756756756756;
2081925   +    V_DepVar1  =     0.03243243243243;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.03243243243243;
2081926   +    I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
2081927   +    U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2081928   +    END;
MPRINT(EM_DIAGRAM):   END;
2081929   +  END;
MPRINT(EM_DIAGRAM):   END;
2081930   +
2081931   +*****  RESIDUALS R_ *************;
MPRINT(EM_DIAGRAM):   ***** RESIDUALS R_ *************;
2081932   +IF  F_DepVar  NE '0'
2081933   +AND F_DepVar  NE '1'  THEN DO;
MPRINT(EM_DIAGRAM):   IF F_DepVar NE '0' AND F_DepVar NE '1' THEN DO;
2081934   +        R_DepVar0  = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
2081935   +        R_DepVar1  = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
2081936   + END;
MPRINT(EM_DIAGRAM):   END;
2081937   + ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2081938   +       R_DepVar0  =  -P_DepVar0 ;
MPRINT(EM_DIAGRAM):   R_DepVar0 = -P_DepVar0 ;
2081939   +       R_DepVar1  =  -P_DepVar1 ;
MPRINT(EM_DIAGRAM):   R_DepVar1 = -P_DepVar1 ;
2081940   +       SELECT( F_DepVar  );
MPRINT(EM_DIAGRAM):   SELECT( F_DepVar );
2081941   +          WHEN( '0'  ) R_DepVar0  = R_DepVar0  +1;
MPRINT(EM_DIAGRAM):   WHEN( '0' ) R_DepVar0 = R_DepVar0 +1;
2081942   +          WHEN( '1'  ) R_DepVar1  = R_DepVar1  +1;
MPRINT(EM_DIAGRAM):   WHEN( '1' ) R_DepVar1 = R_DepVar1 +1;
2081943   +       END;
MPRINT(EM_DIAGRAM):   END;
2081944   + END;
MPRINT(EM_DIAGRAM):   END;
2081945   +
2081946   +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
2081947   +******          END OF DECISION TREE SCORING CODE         ******;
MPRINT(EM_DIAGRAM):   ****** END OF DECISION TREE SCORING CODE ******;
2081948   +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
2081949   +drop _LEAF_;
MPRINT(EM_DIAGRAM):   drop _LEAF_;
2081950   +* Renaming variables for Tree5;
MPRINT(EM_DIAGRAM):   * Renaming variables for Tree5;
2081951   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2081952   +* Renaming Posterior variables for Tree5;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Tree5;
2081953   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2081954   +drop Tree5_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Tree5_P_DepVar1;
2081955   +Tree5_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Tree5_P_DepVar1 = P_DepVar1;
2081956   +drop Tree5_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Tree5_P_DepVar0;
2081957   +Tree5_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Tree5_P_DepVar0 = P_DepVar0;
2081958   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2081959   +* Renaming _WARN_ variable for Tree5;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Tree5;
2081960   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2081961   +length Tree5_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Tree5_WARN_ $4;
2081962   +drop Tree5_WARN_;
MPRINT(EM_DIAGRAM):   drop Tree5_WARN_;
2081963   +Tree5_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Tree5_WARN_ = _WARN_;
2081964   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2081965   +* Ensmbl9: Scoring Code of model 4 of 10;
MPRINT(EM_DIAGRAM):   * Ensmbl9: Scoring Code of model 4 of 10;
2081966   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2081967   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2081968   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
2081969   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
2081970   +* NODE: Neural30;
MPRINT(EM_DIAGRAM):   * NODE: Neural30;
2081971   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2081972   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2081973   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2081974   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2081975   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2081976   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2081977   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2081978   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2081979   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2081980   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2081981   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2081982   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2081983   +LENGTH _WARN_ $4
2081984   +      F_DepVar  $ 12
2081985   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
2081986   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2081987   +
2081988   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2081989   +
2081990   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2081991   +
2081992   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2081993   +
2081994   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2081995   +
2081996   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2081997   +
2081998   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2081999   +
2082000   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2082001   +
2082002   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2082003   +
2082004   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2082005   +
2082006   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2082007   +
2082008   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2082009   +
2082010   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2082011   +
2082012   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2082013   +
2082014   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2082015   +
2082016   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2082017   +
2082018   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2082019   +
2082020   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2082021   +
2082022   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2082023   +
2082024   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2082025   +
2082026   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2082027   +
2082028   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2082029   +
2082030   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2082031   +
2082032   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2082033   +
2082034   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2082035   +
2082036   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2082037   +
2082038   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2082039   +
2082040   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2082041   +
2082042   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2082043   +
2082044   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
2082045   +
2082046   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
2082047   +
2082048   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
2082049   +
2082050   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
2082051   +
2082052   +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
2082053   +
2082054   +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
2082055   +
2082056   +      label H17 = 'Hidden: H1=7' ;
MPRINT(EM_DIAGRAM):   label H17 = 'Hidden: H1=7' ;
2082057   +
2082058   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2082059   +
2082060   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2082061   +
2082062   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2082063   +
2082064   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2082065   +
2082066   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
2082067   +
2082068   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2082069   +
2082070   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
2082071   +
2082072   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2082073   +
2082074   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2082075   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2082076   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2082077   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2082078   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2082079   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2082080   +end;
MPRINT(EM_DIAGRAM):   end;
2082081   +else do;
MPRINT(EM_DIAGRAM):   else do;
2082082   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2082083   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2082084   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2082085   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2082086   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2082087   +   end;
MPRINT(EM_DIAGRAM):   end;
2082088   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2082089   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2082090   +   end;
MPRINT(EM_DIAGRAM):   end;
2082091   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2082092   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2082093   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2082094   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2082095   +   end;
MPRINT(EM_DIAGRAM):   end;
2082096   +end;
MPRINT(EM_DIAGRAM):   end;
2082097   +
2082098   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2082099   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2082100   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2082101   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2082102   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2082103   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2082104   +end;
MPRINT(EM_DIAGRAM):   end;
2082105   +else do;
MPRINT(EM_DIAGRAM):   else do;
2082106   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2082107   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2082108   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2082109   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2082110   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2082111   +   end;
MPRINT(EM_DIAGRAM):   end;
2082112   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2082113   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2082114   +   end;
MPRINT(EM_DIAGRAM):   end;
2082115   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2082116   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2082117   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2082118   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2082119   +   end;
MPRINT(EM_DIAGRAM):   end;
2082120   +end;
MPRINT(EM_DIAGRAM):   end;
2082121   +
2082122   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2082123   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2082124   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2082125   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2082126   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2082127   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2082128   +end;
MPRINT(EM_DIAGRAM):   end;
2082129   +else do;
MPRINT(EM_DIAGRAM):   else do;
2082130   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2082131   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2082132   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2082133   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2082134   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2082135   +   end;
MPRINT(EM_DIAGRAM):   end;
2082136   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2082137   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2082138   +   end;
MPRINT(EM_DIAGRAM):   end;
2082139   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2082140   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2082141   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2082142   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2082143   +   end;
MPRINT(EM_DIAGRAM):   end;
2082144   +end;
MPRINT(EM_DIAGRAM):   end;
2082145   +
2082146   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2082147   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2082148   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2082149   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2082150   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2082151   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2082152   +end;
MPRINT(EM_DIAGRAM):   end;
2082153   +else do;
MPRINT(EM_DIAGRAM):   else do;
2082154   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2082155   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2082156   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2082157   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2082158   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2082159   +   end;
MPRINT(EM_DIAGRAM):   end;
2082160   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2082161   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2082162   +   end;
MPRINT(EM_DIAGRAM):   end;
2082163   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2082164   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2082165   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2082166   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2082167   +   end;
MPRINT(EM_DIAGRAM):   end;
2082168   +end;
MPRINT(EM_DIAGRAM):   end;
2082169   +
2082170   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2082171   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2082172   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2082173   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2082174   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2082175   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2082176   +end;
MPRINT(EM_DIAGRAM):   end;
2082177   +else do;
MPRINT(EM_DIAGRAM):   else do;
2082178   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2082179   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2082180   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2082181   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2082182   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2082183   +   end;
MPRINT(EM_DIAGRAM):   end;
2082184   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2082185   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2082186   +   end;
MPRINT(EM_DIAGRAM):   end;
2082187   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2082188   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2082189   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2082190   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2082191   +   end;
MPRINT(EM_DIAGRAM):   end;
2082192   +end;
MPRINT(EM_DIAGRAM):   end;
2082193   +
2082194   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2082195   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2082196   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2082197   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2082198   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2082199   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2082200   +end;
MPRINT(EM_DIAGRAM):   end;
2082201   +else do;
MPRINT(EM_DIAGRAM):   else do;
2082202   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2082203   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2082204   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2082205   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2082206   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2082207   +   end;
MPRINT(EM_DIAGRAM):   end;
2082208   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2082209   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2082210   +   end;
MPRINT(EM_DIAGRAM):   end;
2082211   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2082212   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2082213   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2082214   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2082215   +   end;
MPRINT(EM_DIAGRAM):   end;
2082216   +end;
MPRINT(EM_DIAGRAM):   end;
2082217   +
2082218   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2082219   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
2082220   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2082221   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2082222   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2082223   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2082224   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2082225   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2082226   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2082227   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2082228   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2082229   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2082230   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2082231   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2082232   +end;
MPRINT(EM_DIAGRAM):   end;
2082233   +else do;
MPRINT(EM_DIAGRAM):   else do;
2082234   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2082235   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2082236   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2082237   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2082238   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2082239   +   end;
MPRINT(EM_DIAGRAM):   end;
2082240   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2082241   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2082242   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2082243   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2082244   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2082245   +   end;
MPRINT(EM_DIAGRAM):   end;
2082246   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2082247   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2082248   +   end;
MPRINT(EM_DIAGRAM):   end;
2082249   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2082250   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2082251   +   end;
MPRINT(EM_DIAGRAM):   end;
2082252   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2082253   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2082254   +   end;
MPRINT(EM_DIAGRAM):   end;
2082255   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2082256   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2082257   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2082258   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2082259   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2082260   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2082261   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2082262   +   end;
MPRINT(EM_DIAGRAM):   end;
2082263   +end;
MPRINT(EM_DIAGRAM):   end;
2082264   +
2082265   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2082266   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2082267   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
2082268   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2082269   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2082270   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2082271   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2082272   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2082273   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2082274   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2082275   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2082276   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2082277   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2082278   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2082279   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2082280   +end;
MPRINT(EM_DIAGRAM):   end;
2082281   +else do;
MPRINT(EM_DIAGRAM):   else do;
2082282   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2082283   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2082284   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2082285   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2082286   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2082287   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2082288   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2082289   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2082290   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2082291   +         end;
MPRINT(EM_DIAGRAM):   end;
2082292   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2082293   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2082294   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2082295   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2082296   +            end;
MPRINT(EM_DIAGRAM):   end;
2082297   +         end;
MPRINT(EM_DIAGRAM):   end;
2082298   +      end;
MPRINT(EM_DIAGRAM):   end;
2082299   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2082300   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2082301   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2082302   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2082303   +         end;
MPRINT(EM_DIAGRAM):   end;
2082304   +      end;
MPRINT(EM_DIAGRAM):   end;
2082305   +   end;
MPRINT(EM_DIAGRAM):   end;
2082306   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2082307   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2082308   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2082309   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2082310   +      end;
MPRINT(EM_DIAGRAM):   end;
2082311   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2082312   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2082313   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2082314   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2082315   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2082316   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2082317   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2082318   +         end;
MPRINT(EM_DIAGRAM):   end;
2082319   +      end;
MPRINT(EM_DIAGRAM):   end;
2082320   +   end;
MPRINT(EM_DIAGRAM):   end;
2082321   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2082322   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2082323   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2082324   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2082325   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2082326   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2082327   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2082328   +   end;
MPRINT(EM_DIAGRAM):   end;
2082329   +end;
MPRINT(EM_DIAGRAM):   end;
2082330   +
2082331   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2082332   +*** Checking missing input Interval
2082333   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2082334   +
2082335   +IF NMISS(
2082336   +   Income ,
2082337   +   Kidhome ,
2082338   +   MntFishProducts ,
2082339   +   MntFruits ,
2082340   +   MntGoldProds ,
2082341   +   MntMeatProducts ,
2082342   +   MntSweetProducts ,
2082343   +   MntWines ,
2082344   +   NumCatalogPurchases ,
2082345   +   NumDealsPurchases ,
2082346   +   NumStorePurchases ,
2082347   +   NumWebPurchases ,
2082348   +   NumWebVisitsMonth ,
2082349   +   Recency ,
2082350   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Income , Kidhome , MntFishProducts , MntFruits , MntGoldProds 
, MntMeatProducts , MntSweetProducts , MntWines , NumCatalogPurchases , NumDealsPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , Recency , Teenhome ) THEN DO;
2082351   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2082352   +
2082353   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2082354   +END;
MPRINT(EM_DIAGRAM):   END;
2082355   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2082356   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
2082357   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2082358   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2082359   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2082360   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2082361   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2082362   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2082363   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2082364   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2082365   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2082366   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2082367   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2082368   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2082369   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2082370   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2082371   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2082372   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2082373   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2082374   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2082375   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2082376   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2082377   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2082378   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2082379   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2082380   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2082381   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2082382   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2082383   +END;
MPRINT(EM_DIAGRAM):   END;
2082384   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2082385   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2082386   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2082387   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2082388   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2082389   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2082390   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2082391   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2082392   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2082393   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2082394   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2082395   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2082396   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2082397   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
2082398   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2082399   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2082400   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2082401   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2082402   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2082403   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2082404   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2082405   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2082406   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2082407   +   ELSE S_NumCatalogPurchases
2082408   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2082409   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2082410   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2082411   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2082412   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2082413   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2082414   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2082415   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2082416   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2082417   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2082418   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2082419   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2082420   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2082421   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2082422   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2082423   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2082424   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2082425   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2082426   +END;
MPRINT(EM_DIAGRAM):   END;
2082427   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2082428   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
2082429   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2082430   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2082431   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
2082432   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2082433   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2082434   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
2082435   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2082436   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2082437   +   H11  =    -0.59781928082243 * S_Income  +     0.49830142312288 * S_Kidhome
2082438   +          +    -0.00045024466632 * S_MntFishProducts
2082439   +          +    -0.22421712710333 * S_MntFruits  +    -0.19010144853469 *
2082440   +        S_MntGoldProds  +    -0.53373773623953 * S_MntMeatProducts
2082441   +          +     0.17506402203495 * S_MntSweetProducts
2082442   +          +    -0.28551398649672 * S_MntWines  +       0.019870944777 *
2082443   +        S_NumCatalogPurchases  +     0.03537776181533 * S_NumDealsPurchases
2082444   +          +     0.05580468715403 * S_NumStorePurchases
2082445   +          +    -0.29131611132704 * S_NumWebPurchases
2082446   +          +    -0.40690084025802 * S_NumWebVisitsMonth
2082447   +          +     0.48640195058901 * S_Recency  +     0.31820890239661 *
2082448   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = -0.59781928082243 * S_Income + 0.49830142312288 * S_Kidhome + 
-0.00045024466632 * S_MntFishProducts + -0.22421712710333 * S_MntFruits + -0.19010144853469 * 
S_MntGoldProds + -0.53373773623953 * S_MntMeatProducts + 0.17506402203495 * S_MntSweetProducts 
+ -0.28551398649672 * S_MntWines + 0.019870944777 * S_NumCatalogPurchases + 0.03537776181533 * 
S_NumDealsPurchases + 0.05580468715403 * S_NumStorePurchases + -0.29131611132704 * 
S_NumWebPurchases + -0.40690084025802 * S_NumWebVisitsMonth + 0.48640195058901 * S_Recency + 
0.31820890239661 * S_Teenhome ;
2082449   +   H12  =    -0.41871753512335 * S_Income  +      0.6025072461821 * S_Kidhome
2082450   +          +    -0.03132724937716 * S_MntFishProducts
2082451   +          +     0.19114182835046 * S_MntFruits  +     0.13483463809539 *
2082452   +        S_MntGoldProds  +    -0.63593603749443 * S_MntMeatProducts
2082453   +          +    -0.07569302401223 * S_MntSweetProducts
2082454   +          +     0.67050112032753 * S_MntWines  +    -0.23159243932208 *
2082455   +        S_NumCatalogPurchases  +    -0.07183698407409 * S_NumDealsPurchases
2082456   +          +     0.54619681114623 * S_NumStorePurchases
2082457   +          +     0.44325129671249 * S_NumWebPurchases
2082458   +          +    -1.25054401670605 * S_NumWebVisitsMonth
2082459   +          +      1.2376290916151 * S_Recency  +     0.43747371517287 *
2082460   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -0.41871753512335 * S_Income + 0.6025072461821 * S_Kidhome + 
-0.03132724937716 * S_MntFishProducts + 0.19114182835046 * S_MntFruits + 0.13483463809539 * 
S_MntGoldProds + -0.63593603749443 * S_MntMeatProducts + -0.07569302401223 * 
S_MntSweetProducts + 0.67050112032753 * S_MntWines + -0.23159243932208 * S_NumCatalogPurchases 
+ -0.07183698407409 * S_NumDealsPurchases + 0.54619681114623 * S_NumStorePurchases + 
0.44325129671249 * S_NumWebPurchases + -1.25054401670605 * S_NumWebVisitsMonth + 
1.2376290916151 * S_Recency + 0.43747371517287 * S_Teenhome ;
2082461   +   H13  =      0.0713579189325 * S_Income  +    -0.05759612462349 * S_Kidhome
2082462   +          +     0.07631777381832 * S_MntFishProducts
2082463   +          +    -0.00387785552441 * S_MntFruits  +    -0.21868916314192 *
2082464   +        S_MntGoldProds  +       0.072623883197 * S_MntMeatProducts
2082465   +          +     0.12637946833766 * S_MntSweetProducts
2082466   +          +    -0.37981663841124 * S_MntWines  +    -0.89958525403162 *
2082467   +        S_NumCatalogPurchases  +    -0.17471885937598 * S_NumDealsPurchases
2082468   +          +     0.15845618359126 * S_NumStorePurchases
2082469   +          +    -0.33296932705082 * S_NumWebPurchases
2082470   +          +      0.0260072296349 * S_NumWebVisitsMonth
2082471   +          +     0.02544749712977 * S_Recency  +    -0.17381561661022 *
2082472   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = 0.0713579189325 * S_Income + -0.05759612462349 * S_Kidhome + 
0.07631777381832 * S_MntFishProducts + -0.00387785552441 * S_MntFruits + -0.21868916314192 * 
S_MntGoldProds + 0.072623883197 * S_MntMeatProducts + 0.12637946833766 * S_MntSweetProducts + 
-0.37981663841124 * S_MntWines + -0.89958525403162 * S_NumCatalogPurchases + -0.17471885937598 
* S_NumDealsPurchases + 0.15845618359126 * S_NumStorePurchases + -0.33296932705082 * 
S_NumWebPurchases + 0.0260072296349 * S_NumWebVisitsMonth + 0.02544749712977 * S_Recency + 
-0.17381561661022 * S_Teenhome ;
2082473   +   H14  =    -0.47498613710851 * S_Income  +     0.09339198401437 * S_Kidhome
2082474   +          +    -0.13642352619174 * S_MntFishProducts
2082475   +          +     0.27167245582117 * S_MntFruits  +    -0.00579747559996 *
2082476   +        S_MntGoldProds  +     0.31591387319577 * S_MntMeatProducts
2082477   +          +     0.14125815807238 * S_MntSweetProducts
2082478   +          +     0.07862916790983 * S_MntWines  +    -0.58905358997534 *
2082479   +        S_NumCatalogPurchases  +     -0.5574069633995 * S_NumDealsPurchases
2082480   +          +     0.19718828261526 * S_NumStorePurchases
2082481   +          +    -0.24156925391919 * S_NumWebPurchases
2082482   +          +    -0.25711078938749 * S_NumWebVisitsMonth
2082483   +          +     0.38883063223812 * S_Recency  +     -0.2396731334184 *
2082484   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = -0.47498613710851 * S_Income + 0.09339198401437 * S_Kidhome + 
-0.13642352619174 * S_MntFishProducts + 0.27167245582117 * S_MntFruits + -0.00579747559996 * 
S_MntGoldProds + 0.31591387319577 * S_MntMeatProducts + 0.14125815807238 * S_MntSweetProducts 
+ 0.07862916790983 * S_MntWines + -0.58905358997534 * S_NumCatalogPurchases + -0.5574069633995 
* S_NumDealsPurchases + 0.19718828261526 * S_NumStorePurchases + -0.24156925391919 * 
S_NumWebPurchases + -0.25711078938749 * S_NumWebVisitsMonth + 0.38883063223812 * S_Recency + 
-0.2396731334184 * S_Teenhome ;
2082485   +   H15  =     0.24624924979609 * S_Income  +    -0.37052106312109 * S_Kidhome
2082486   +          +     0.13579628643404 * S_MntFishProducts
2082487   +          +    -0.05263868911164 * S_MntFruits  +    -0.01504675049991 *
2082488   +        S_MntGoldProds  +     -0.4202277804998 * S_MntMeatProducts
2082489   +          +    -0.01039299374426 * S_MntSweetProducts
2082490   +          +     0.71197420459135 * S_MntWines  +    -0.35973505575029 *
2082491   +        S_NumCatalogPurchases  +     -0.4415445481482 * S_NumDealsPurchases
2082492   +          +     0.58897740652611 * S_NumStorePurchases
2082493   +          +     0.24564485851062 * S_NumWebPurchases
2082494   +          +    -0.13976320243555 * S_NumWebVisitsMonth
2082495   +          +      0.1199367613063 * S_Recency  +    -0.15283161418313 *
2082496   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H15 = 0.24624924979609 * S_Income + -0.37052106312109 * S_Kidhome + 
0.13579628643404 * S_MntFishProducts + -0.05263868911164 * S_MntFruits + -0.01504675049991 * 
S_MntGoldProds + -0.4202277804998 * S_MntMeatProducts + -0.01039299374426 * S_MntSweetProducts 
+ 0.71197420459135 * S_MntWines + -0.35973505575029 * S_NumCatalogPurchases + -0.4415445481482 
* S_NumDealsPurchases + 0.58897740652611 * S_NumStorePurchases + 0.24564485851062 * 
S_NumWebPurchases + -0.13976320243555 * S_NumWebVisitsMonth + 0.1199367613063 * S_Recency + 
-0.15283161418313 * S_Teenhome ;
2082497   +   H16  =     0.23493799758749 * S_Income  +     0.07038278079069 * S_Kidhome
2082498   +          +    -0.45448768538367 * S_MntFishProducts
2082499   +          +     0.02622380709004 * S_MntFruits  +     0.14726698184115 *
2082500   +        S_MntGoldProds  +     0.65760183569767 * S_MntMeatProducts
2082501   +          +    -0.16936256277023 * S_MntSweetProducts
2082502   +          +    -0.40647066866305 * S_MntWines  +     0.99645493491726 *
2082503   +        S_NumCatalogPurchases  +     0.65587239961358 * S_NumDealsPurchases
2082504   +          +    -0.22309716855774 * S_NumStorePurchases
2082505   +          +    -0.61204529910842 * S_NumWebPurchases
2082506   +          +     0.43742228867615 * S_NumWebVisitsMonth
2082507   +          +    -0.56099034256092 * S_Recency  +     -0.2445351671148 *
2082508   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H16 = 0.23493799758749 * S_Income + 0.07038278079069 * S_Kidhome + 
-0.45448768538367 * S_MntFishProducts + 0.02622380709004 * S_MntFruits + 0.14726698184115 * 
S_MntGoldProds + 0.65760183569767 * S_MntMeatProducts + -0.16936256277023 * S_MntSweetProducts 
+ -0.40647066866305 * S_MntWines + 0.99645493491726 * S_NumCatalogPurchases + 0.65587239961358 
* S_NumDealsPurchases + -0.22309716855774 * S_NumStorePurchases + -0.61204529910842 * 
S_NumWebPurchases + 0.43742228867615 * S_NumWebVisitsMonth + -0.56099034256092 * S_Recency + 
-0.2445351671148 * S_Teenhome ;
2082509   +   H17  =    -0.00107702057163 * S_Income  +     0.25116135719972 * S_Kidhome
2082510   +          +    -0.04540308470858 * S_MntFishProducts
2082511   +          +        0.21487241577 * S_MntFruits  +    -0.12914913547414 *
2082512   +        S_MntGoldProds  +    -0.04149021191395 * S_MntMeatProducts
2082513   +          +     0.02853521979141 * S_MntSweetProducts
2082514   +          +     -0.2435805887418 * S_MntWines  +    -0.04509621661407 *
2082515   +        S_NumCatalogPurchases  +    -0.26492036720429 * S_NumDealsPurchases
2082516   +          +     -0.3299561248944 * S_NumStorePurchases
2082517   +          +    -0.09806597448224 * S_NumWebPurchases
2082518   +          +      0.0427056351245 * S_NumWebVisitsMonth
2082519   +          +     0.03953235628202 * S_Recency  +    -0.11317308767713 *
2082520   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H17 = -0.00107702057163 * S_Income + 0.25116135719972 * S_Kidhome + 
-0.04540308470858 * S_MntFishProducts + 0.21487241577 * S_MntFruits + -0.12914913547414 * 
S_MntGoldProds + -0.04149021191395 * S_MntMeatProducts + 0.02853521979141 * S_MntSweetProducts 
+ -0.2435805887418 * S_MntWines + -0.04509621661407 * S_NumCatalogPurchases + 
-0.26492036720429 * S_NumDealsPurchases + -0.3299561248944 * S_NumStorePurchases + 
-0.09806597448224 * S_NumWebPurchases + 0.0427056351245 * S_NumWebVisitsMonth + 
0.03953235628202 * S_Recency + -0.11317308767713 * S_Teenhome ;
2082521   +   H11  = H11  +     0.50033674561531 * AcceptedCmp10
2082522   +          +    -0.02275693117286 * AcceptedCmp20  +     0.31338891533156 *
2082523   +        AcceptedCmp30  +      0.3901248845706 * AcceptedCmp40
2082524   +          +     0.44314358358111 * AcceptedCmp50  +    -0.20444060864498 *
2082525   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.50033674561531 * AcceptedCmp10 + -0.02275693117286 * 
AcceptedCmp20 + 0.31338891533156 * AcceptedCmp30 + 0.3901248845706 * AcceptedCmp40 + 
0.44314358358111 * AcceptedCmp50 + -0.20444060864498 * Complain0 ;
2082526   +   H12  = H12  +     0.30103938822692 * AcceptedCmp10
2082527   +          +     0.54298746723422 * AcceptedCmp20  +     0.50401040035525 *
2082528   +        AcceptedCmp30  +     0.43447710825306 * AcceptedCmp40
2082529   +          +     0.60794421030027 * AcceptedCmp50  +    -0.28114274461319 *
2082530   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.30103938822692 * AcceptedCmp10 + 0.54298746723422 * 
AcceptedCmp20 + 0.50401040035525 * AcceptedCmp30 + 0.43447710825306 * AcceptedCmp40 + 
0.60794421030027 * AcceptedCmp50 + -0.28114274461319 * Complain0 ;
2082531   +   H13  = H13  +     -0.1890212967757 * AcceptedCmp10
2082532   +          +    -0.11487406996391 * AcceptedCmp20  +    -0.22740618754863 *
2082533   +        AcceptedCmp30  +      0.2354510231918 * AcceptedCmp40
2082534   +          +    -0.14327434649067 * AcceptedCmp50  +    -0.17839080850556 *
2082535   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.1890212967757 * AcceptedCmp10 + -0.11487406996391 * 
AcceptedCmp20 + -0.22740618754863 * AcceptedCmp30 + 0.2354510231918 * AcceptedCmp40 + 
-0.14327434649067 * AcceptedCmp50 + -0.17839080850556 * Complain0 ;
2082536   +   H14  = H14  +    -0.28194187416219 * AcceptedCmp10
2082537   +          +     0.11732089254624 * AcceptedCmp20  +     0.34964075536156 *
2082538   +        AcceptedCmp30  +     0.05772396286169 * AcceptedCmp40
2082539   +          +    -0.08671748651826 * AcceptedCmp50  +      0.0629540108407 *
2082540   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.28194187416219 * AcceptedCmp10 + 0.11732089254624 * 
AcceptedCmp20 + 0.34964075536156 * AcceptedCmp30 + 0.05772396286169 * AcceptedCmp40 + 
-0.08671748651826 * AcceptedCmp50 + 0.0629540108407 * Complain0 ;
2082541   +   H15  = H15  +    -0.01058257322803 * AcceptedCmp10
2082542   +          +     0.26755355732587 * AcceptedCmp20  +     0.40856661734724 *
2082543   +        AcceptedCmp30  +     0.02977117354989 * AcceptedCmp40
2082544   +          +       0.073655049734 * AcceptedCmp50  +     0.25562048226555 *
2082545   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + -0.01058257322803 * AcceptedCmp10 + 0.26755355732587 * 
AcceptedCmp20 + 0.40856661734724 * AcceptedCmp30 + 0.02977117354989 * AcceptedCmp40 + 
0.073655049734 * AcceptedCmp50 + 0.25562048226555 * Complain0 ;
2082546   +   H16  = H16  +    -0.65590117532084 * AcceptedCmp10
2082547   +          +    -0.31314161223579 * AcceptedCmp20  +    -0.18863165264573 *
2082548   +        AcceptedCmp30  +    -0.18832338914237 * AcceptedCmp40
2082549   +          +    -0.53765749471786 * AcceptedCmp50  +     0.17409401877513 *
2082550   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H16 = H16 + -0.65590117532084 * AcceptedCmp10 + -0.31314161223579 * 
AcceptedCmp20 + -0.18863165264573 * AcceptedCmp30 + -0.18832338914237 * AcceptedCmp40 + 
-0.53765749471786 * AcceptedCmp50 + 0.17409401877513 * Complain0 ;
2082551   +   H17  = H17  +    -0.42253231673718 * AcceptedCmp10
2082552   +          +    -0.40954345229557 * AcceptedCmp20  +    -0.30577523080786 *
2082553   +        AcceptedCmp30  +    -0.22396670899437 * AcceptedCmp40
2082554   +          +     0.05757251451004 * AcceptedCmp50  +     0.07813950542487 *
2082555   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H17 = H17 + -0.42253231673718 * AcceptedCmp10 + -0.40954345229557 * 
AcceptedCmp20 + -0.30577523080786 * AcceptedCmp30 + -0.22396670899437 * AcceptedCmp40 + 
0.05757251451004 * AcceptedCmp50 + 0.07813950542487 * Complain0 ;
2082556   +   H11  = H11  +    -0.14483542022901 * Education2n_Cycle
2082557   +          +     0.32176647745332 * EducationBasic  +     0.00900796305072 *
2082558   +        EducationGraduation  +    -0.00243484910123 * EducationMaster
2082559   +          +    -0.22074132229211 * Marital_StatusDivorced
2082560   +          +     0.70282742634901 * Marital_StatusMarried
2082561   +          +     -0.5926244797961 * Marital_StatusSingle
2082562   +          +     0.21342221410999 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.14483542022901 * Education2n_Cycle + 0.32176647745332 * 
EducationBasic + 0.00900796305072 * EducationGraduation + -0.00243484910123 * EducationMaster 
+ -0.22074132229211 * Marital_StatusDivorced + 0.70282742634901 * Marital_StatusMarried + 
-0.5926244797961 * Marital_StatusSingle + 0.21342221410999 * Marital_StatusTogether ;
2082563   +   H12  = H12  +    -0.10242932200247 * Education2n_Cycle
2082564   +          +     0.34937926721317 * EducationBasic  +    -0.20395479511872 *
2082565   +        EducationGraduation  +     0.31210327899339 * EducationMaster
2082566   +          +    -0.46376392175295 * Marital_StatusDivorced
2082567   +          +       0.589453579718 * Marital_StatusMarried
2082568   +          +    -0.45342174978481 * Marital_StatusSingle
2082569   +          +     0.70517120763557 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.10242932200247 * Education2n_Cycle + 0.34937926721317 * 
EducationBasic + -0.20395479511872 * EducationGraduation + 0.31210327899339 * EducationMaster 
+ -0.46376392175295 * Marital_StatusDivorced + 0.589453579718 * Marital_StatusMarried + 
-0.45342174978481 * Marital_StatusSingle + 0.70517120763557 * Marital_StatusTogether ;
2082570   +   H13  = H13  +     0.24858755570324 * Education2n_Cycle
2082571   +          +     0.07360039359386 * EducationBasic  +    -0.42563056620078 *
2082572   +        EducationGraduation  +    -0.25970840250323 * EducationMaster
2082573   +          +     0.26981972015482 * Marital_StatusDivorced
2082574   +          +    -0.01707364864139 * Marital_StatusMarried
2082575   +          +     0.38646060840009 * Marital_StatusSingle
2082576   +          +     0.19694047086013 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.24858755570324 * Education2n_Cycle + 0.07360039359386 * 
EducationBasic + -0.42563056620078 * EducationGraduation + -0.25970840250323 * EducationMaster 
+ 0.26981972015482 * Marital_StatusDivorced + -0.01707364864139 * Marital_StatusMarried + 
0.38646060840009 * Marital_StatusSingle + 0.19694047086013 * Marital_StatusTogether ;
2082577   +   H14  = H14  +     0.22577522124265 * Education2n_Cycle
2082578   +          +     0.04183136697557 * EducationBasic  +    -0.27725331198825 *
2082579   +        EducationGraduation  +     0.15709188532123 * EducationMaster
2082580   +          +    -0.01933675094701 * Marital_StatusDivorced
2082581   +          +     0.52969577969434 * Marital_StatusMarried
2082582   +          +      -0.348697714569 * Marital_StatusSingle
2082583   +          +      0.5020342481888 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.22577522124265 * Education2n_Cycle + 0.04183136697557 * 
EducationBasic + -0.27725331198825 * EducationGraduation + 0.15709188532123 * EducationMaster 
+ -0.01933675094701 * Marital_StatusDivorced + 0.52969577969434 * Marital_StatusMarried + 
-0.348697714569 * Marital_StatusSingle + 0.5020342481888 * Marital_StatusTogether ;
2082584   +   H15  = H15  +     0.04488332711225 * Education2n_Cycle
2082585   +          +     0.01911097443907 * EducationBasic  +    -0.11699443624996 *
2082586   +        EducationGraduation  +    -0.07291393566738 * EducationMaster
2082587   +          +    -0.04665146013984 * Marital_StatusDivorced
2082588   +          +      -0.586219175167 * Marital_StatusMarried
2082589   +          +     0.55713543417712 * Marital_StatusSingle
2082590   +          +    -0.42208959885332 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.04488332711225 * Education2n_Cycle + 0.01911097443907 * 
EducationBasic + -0.11699443624996 * EducationGraduation + -0.07291393566738 * EducationMaster 
+ -0.04665146013984 * Marital_StatusDivorced + -0.586219175167 * Marital_StatusMarried + 
0.55713543417712 * Marital_StatusSingle + -0.42208959885332 * Marital_StatusTogether ;
2082591   +   H16  = H16  +     0.09174117861154 * Education2n_Cycle
2082592   +          +     -0.1378945860659 * EducationBasic  +     -0.0728635369665 *
2082593   +        EducationGraduation  +     0.29860714824438 * EducationMaster
2082594   +          +    -0.05632171154347 * Marital_StatusDivorced
2082595   +          +     0.03215547861665 * Marital_StatusMarried
2082596   +          +     0.16870781172538 * Marital_StatusSingle
2082597   +          +    -0.04883314322676 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.09174117861154 * Education2n_Cycle + -0.1378945860659 * 
EducationBasic + -0.0728635369665 * EducationGraduation + 0.29860714824438 * EducationMaster + 
-0.05632171154347 * Marital_StatusDivorced + 0.03215547861665 * Marital_StatusMarried + 
0.16870781172538 * Marital_StatusSingle + -0.04883314322676 * Marital_StatusTogether ;
2082598   +   H17  = H17  +    -0.00343694558117 * Education2n_Cycle
2082599   +          +     0.32636427598227 * EducationBasic  +     0.16259654486833 *
2082600   +        EducationGraduation  +    -0.00424229454859 * EducationMaster
2082601   +          +    -0.21765415159355 * Marital_StatusDivorced
2082602   +          +     -0.0542857922075 * Marital_StatusMarried
2082603   +          +     0.20679907454933 * Marital_StatusSingle
2082604   +          +     0.14976519710725 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H17 = H17 + -0.00343694558117 * Education2n_Cycle + 0.32636427598227 * 
EducationBasic + 0.16259654486833 * EducationGraduation + -0.00424229454859 * EducationMaster 
+ -0.21765415159355 * Marital_StatusDivorced + -0.0542857922075 * Marital_StatusMarried + 
0.20679907454933 * Marital_StatusSingle + 0.14976519710725 * Marital_StatusTogether ;
2082605   +   H11  =     0.92977078759503 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 0.92977078759503 + H11 ;
2082606   +   H12  =    -0.97970409253156 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -0.97970409253156 + H12 ;
2082607   +   H13  =     -0.5001144792196 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.5001144792196 + H13 ;
2082608   +   H14  =    -0.90715840862541 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = -0.90715840862541 + H14 ;
2082609   +   H15  =     0.87046153389036 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = 0.87046153389036 + H15 ;
2082610   +   H16  =     0.49066122767086 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = 0.49066122767086 + H16 ;
2082611   +   H17  =    -1.05949763460293 + H17 ;
MPRINT(EM_DIAGRAM):   H17 = -1.05949763460293 + H17 ;
2082612   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
2082613   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
2082614   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
2082615   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
2082616   +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
2082617   +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
2082618   +   H17  = TANH(H17 );
MPRINT(EM_DIAGRAM):   H17 = TANH(H17 );
2082619   +END;
MPRINT(EM_DIAGRAM):   END;
2082620   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2082621   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
2082622   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
2082623   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
2082624   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
2082625   +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
2082626   +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
2082627   +   H17  = .;
MPRINT(EM_DIAGRAM):   H17 = .;
2082628   +END;
MPRINT(EM_DIAGRAM):   END;
2082629   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2082630   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2082631   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2082632   +
2082633   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
2082634   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
2082635   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2082636   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
2082637   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
2082638   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2082639   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
2082640   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2082641   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2082642   +end;
MPRINT(EM_DIAGRAM):   end;
2082643   +else do;
MPRINT(EM_DIAGRAM):   else do;
2082644   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
2082645   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
2082646   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
2082647   +   end;
MPRINT(EM_DIAGRAM):   end;
2082648   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
2082649   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
2082650   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
2082651   +   end;
MPRINT(EM_DIAGRAM):   end;
2082652   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2082653   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2082654   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2082655   +   end;
MPRINT(EM_DIAGRAM):   end;
2082656   +end;
MPRINT(EM_DIAGRAM):   end;
2082657   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2082658   +   P_DepVar1  =    -2.32998401250848 * H11  +     -3.2074078511991 * H12
2082659   +          +    -0.69549988605443 * H13  +    -1.74950789108762 * H14
2082660   +          +    -1.74013772071344 * H15  +     2.65306089869015 * H16
2082661   +          +     0.03700459000906 * H17 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.32998401250848 * H11 + -3.2074078511991 * H12 + 
-0.69549988605443 * H13 + -1.74950789108762 * H14 + -1.74013772071344 * H15 + 2.65306089869015 
* H16 + 0.03700459000906 * H17 ;
2082662   +   P_DepVar1  =    -1.51229898726716 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.51229898726716 + P_DepVar1 ;
2082663   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2082664   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2082665   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2082666   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2082667   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2082668   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2082669   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2082670   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2082671   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2082672   +END;
MPRINT(EM_DIAGRAM):   END;
2082673   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2082674   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2082675   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2082676   +END;
MPRINT(EM_DIAGRAM):   END;
2082677   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2082678   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2082679   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2082680   +END;
MPRINT(EM_DIAGRAM):   END;
2082681   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
2082682   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
2082683   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
2082684   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
2082685   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
2082686   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
2082687   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
2082688   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2082689   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2082690   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2082691   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2082692   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2082693   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2082694   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2082695   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2082696   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2082697   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2082698   +END;
MPRINT(EM_DIAGRAM):   END;
2082699   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2082700   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2082701   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2082702   +drop
2082703   +H11
2082704   +H12
2082705   +H13
2082706   +H14
2082707   +H15
2082708   +H16
2082709   +H17
2082710   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 H17 ;
2082711   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
2082712   +* Renaming variables for Neural30;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural30;
2082713   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2082714   +* Renaming Posterior variables for Neural30;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural30;
2082715   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2082716   +drop Neural30_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural30_P_DepVar1;
2082717   +Neural30_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural30_P_DepVar1 = P_DepVar1;
2082718   +drop Neural30_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural30_P_DepVar0;
2082719   +Neural30_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural30_P_DepVar0 = P_DepVar0;
2082720   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2082721   +* Renaming _WARN_ variable for Neural30;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural30;
2082722   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2082723   +length Neural30_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural30_WARN_ $4;
2082724   +drop Neural30_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural30_WARN_;
2082725   +Neural30_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural30_WARN_ = _WARN_;
2082726   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2082727   +* Ensmbl9: Scoring Code of model 5 of 10;
MPRINT(EM_DIAGRAM):   * Ensmbl9: Scoring Code of model 5 of 10;
2082728   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2082729   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2082730   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
2082731   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
2082732   +* NODE: Neural35;
MPRINT(EM_DIAGRAM):   * NODE: Neural35;
2082733   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2082734   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2082735   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2082736   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2082737   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2082738   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2082739   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2082740   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2082741   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2082742   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2082743   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2082744   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2082745   +LENGTH _WARN_ $4
2082746   +      F_DepVar  $ 12
2082747   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
2082748   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2082749   +
2082750   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2082751   +
2082752   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2082753   +
2082754   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2082755   +
2082756   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2082757   +
2082758   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2082759   +
2082760   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2082761   +
2082762   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2082763   +
2082764   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2082765   +
2082766   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2082767   +
2082768   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2082769   +
2082770   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2082771   +
2082772   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2082773   +
2082774   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2082775   +
2082776   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2082777   +
2082778   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2082779   +
2082780   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2082781   +
2082782   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2082783   +
2082784   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2082785   +
2082786   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2082787   +
2082788   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2082789   +
2082790   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2082791   +
2082792   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2082793   +
2082794   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2082795   +
2082796   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2082797   +
2082798   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2082799   +
2082800   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2082801   +
2082802   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2082803   +
2082804   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2082805   +
2082806   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
2082807   +
2082808   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
2082809   +
2082810   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
2082811   +
2082812   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
2082813   +
2082814   +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
2082815   +
2082816   +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
2082817   +
2082818   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2082819   +
2082820   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2082821   +
2082822   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2082823   +
2082824   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2082825   +
2082826   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
2082827   +
2082828   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2082829   +
2082830   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
2082831   +
2082832   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2082833   +
2082834   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2082835   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2082836   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2082837   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2082838   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2082839   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2082840   +end;
MPRINT(EM_DIAGRAM):   end;
2082841   +else do;
MPRINT(EM_DIAGRAM):   else do;
2082842   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2082843   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2082844   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2082845   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2082846   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2082847   +   end;
MPRINT(EM_DIAGRAM):   end;
2082848   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2082849   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2082850   +   end;
MPRINT(EM_DIAGRAM):   end;
2082851   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2082852   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2082853   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2082854   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2082855   +   end;
MPRINT(EM_DIAGRAM):   end;
2082856   +end;
MPRINT(EM_DIAGRAM):   end;
2082857   +
2082858   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2082859   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2082860   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2082861   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2082862   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2082863   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2082864   +end;
MPRINT(EM_DIAGRAM):   end;
2082865   +else do;
MPRINT(EM_DIAGRAM):   else do;
2082866   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2082867   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2082868   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2082869   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2082870   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2082871   +   end;
MPRINT(EM_DIAGRAM):   end;
2082872   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2082873   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2082874   +   end;
MPRINT(EM_DIAGRAM):   end;
2082875   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2082876   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2082877   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2082878   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2082879   +   end;
MPRINT(EM_DIAGRAM):   end;
2082880   +end;
MPRINT(EM_DIAGRAM):   end;
2082881   +
2082882   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2082883   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2082884   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2082885   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2082886   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2082887   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2082888   +end;
MPRINT(EM_DIAGRAM):   end;
2082889   +else do;
MPRINT(EM_DIAGRAM):   else do;
2082890   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2082891   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2082892   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2082893   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2082894   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2082895   +   end;
MPRINT(EM_DIAGRAM):   end;
2082896   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2082897   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2082898   +   end;
MPRINT(EM_DIAGRAM):   end;
2082899   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2082900   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2082901   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2082902   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2082903   +   end;
MPRINT(EM_DIAGRAM):   end;
2082904   +end;
MPRINT(EM_DIAGRAM):   end;
2082905   +
2082906   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2082907   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2082908   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2082909   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2082910   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2082911   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2082912   +end;
MPRINT(EM_DIAGRAM):   end;
2082913   +else do;
MPRINT(EM_DIAGRAM):   else do;
2082914   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2082915   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2082916   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2082917   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2082918   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2082919   +   end;
MPRINT(EM_DIAGRAM):   end;
2082920   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2082921   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2082922   +   end;
MPRINT(EM_DIAGRAM):   end;
2082923   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2082924   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2082925   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2082926   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2082927   +   end;
MPRINT(EM_DIAGRAM):   end;
2082928   +end;
MPRINT(EM_DIAGRAM):   end;
2082929   +
2082930   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2082931   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2082932   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2082933   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2082934   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2082935   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2082936   +end;
MPRINT(EM_DIAGRAM):   end;
2082937   +else do;
MPRINT(EM_DIAGRAM):   else do;
2082938   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2082939   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2082940   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2082941   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2082942   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2082943   +   end;
MPRINT(EM_DIAGRAM):   end;
2082944   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2082945   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2082946   +   end;
MPRINT(EM_DIAGRAM):   end;
2082947   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2082948   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2082949   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2082950   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2082951   +   end;
MPRINT(EM_DIAGRAM):   end;
2082952   +end;
MPRINT(EM_DIAGRAM):   end;
2082953   +
2082954   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2082955   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2082956   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2082957   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2082958   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2082959   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2082960   +end;
MPRINT(EM_DIAGRAM):   end;
2082961   +else do;
MPRINT(EM_DIAGRAM):   else do;
2082962   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2082963   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2082964   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2082965   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2082966   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2082967   +   end;
MPRINT(EM_DIAGRAM):   end;
2082968   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2082969   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2082970   +   end;
MPRINT(EM_DIAGRAM):   end;
2082971   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2082972   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2082973   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2082974   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2082975   +   end;
MPRINT(EM_DIAGRAM):   end;
2082976   +end;
MPRINT(EM_DIAGRAM):   end;
2082977   +
2082978   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2082979   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
2082980   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2082981   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2082982   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2082983   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2082984   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2082985   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2082986   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2082987   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2082988   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2082989   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2082990   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2082991   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2082992   +end;
MPRINT(EM_DIAGRAM):   end;
2082993   +else do;
MPRINT(EM_DIAGRAM):   else do;
2082994   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2082995   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2082996   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2082997   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2082998   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2082999   +   end;
MPRINT(EM_DIAGRAM):   end;
2083000   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2083001   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2083002   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2083003   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2083004   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2083005   +   end;
MPRINT(EM_DIAGRAM):   end;
2083006   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2083007   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2083008   +   end;
MPRINT(EM_DIAGRAM):   end;
2083009   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2083010   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2083011   +   end;
MPRINT(EM_DIAGRAM):   end;
2083012   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2083013   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2083014   +   end;
MPRINT(EM_DIAGRAM):   end;
2083015   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2083016   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2083017   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2083018   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2083019   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2083020   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2083021   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2083022   +   end;
MPRINT(EM_DIAGRAM):   end;
2083023   +end;
MPRINT(EM_DIAGRAM):   end;
2083024   +
2083025   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2083026   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2083027   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
2083028   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2083029   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2083030   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2083031   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2083032   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2083033   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2083034   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2083035   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2083036   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2083037   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2083038   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2083039   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2083040   +end;
MPRINT(EM_DIAGRAM):   end;
2083041   +else do;
MPRINT(EM_DIAGRAM):   else do;
2083042   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2083043   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2083044   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2083045   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2083046   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2083047   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2083048   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2083049   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2083050   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2083051   +         end;
MPRINT(EM_DIAGRAM):   end;
2083052   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2083053   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2083054   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2083055   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2083056   +            end;
MPRINT(EM_DIAGRAM):   end;
2083057   +         end;
MPRINT(EM_DIAGRAM):   end;
2083058   +      end;
MPRINT(EM_DIAGRAM):   end;
2083059   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2083060   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2083061   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2083062   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2083063   +         end;
MPRINT(EM_DIAGRAM):   end;
2083064   +      end;
MPRINT(EM_DIAGRAM):   end;
2083065   +   end;
MPRINT(EM_DIAGRAM):   end;
2083066   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2083067   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2083068   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2083069   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2083070   +      end;
MPRINT(EM_DIAGRAM):   end;
2083071   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2083072   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2083073   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2083074   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2083075   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2083076   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2083077   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2083078   +         end;
MPRINT(EM_DIAGRAM):   end;
2083079   +      end;
MPRINT(EM_DIAGRAM):   end;
2083080   +   end;
MPRINT(EM_DIAGRAM):   end;
2083081   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2083082   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2083083   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2083084   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2083085   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2083086   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2083087   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2083088   +   end;
MPRINT(EM_DIAGRAM):   end;
2083089   +end;
MPRINT(EM_DIAGRAM):   end;
2083090   +
2083091   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2083092   +*** Checking missing input Interval
2083093   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2083094   +
2083095   +IF NMISS(
2083096   +   Income ,
2083097   +   Kidhome ,
2083098   +   MntFishProducts ,
2083099   +   MntFruits ,
2083100   +   MntGoldProds ,
2083101   +   MntMeatProducts ,
2083102   +   MntSweetProducts ,
2083103   +   MntWines ,
2083104   +   NumCatalogPurchases ,
2083105   +   NumDealsPurchases ,
2083106   +   NumStorePurchases ,
2083107   +   NumWebPurchases ,
2083108   +   NumWebVisitsMonth ,
2083109   +   Recency ,
2083110   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Income , Kidhome , MntFishProducts , MntFruits , MntGoldProds 
, MntMeatProducts , MntSweetProducts , MntWines , NumCatalogPurchases , NumDealsPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , Recency , Teenhome ) THEN DO;
2083111   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2083112   +
2083113   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2083114   +END;
MPRINT(EM_DIAGRAM):   END;
2083115   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2083116   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
2083117   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2083118   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2083119   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2083120   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2083121   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2083122   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2083123   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2083124   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2083125   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2083126   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2083127   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2083128   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2083129   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2083130   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2083131   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2083132   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2083133   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2083134   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2083135   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2083136   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2083137   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2083138   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2083139   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2083140   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2083141   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2083142   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2083143   +END;
MPRINT(EM_DIAGRAM):   END;
2083144   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2083145   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2083146   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2083147   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2083148   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2083149   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2083150   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2083151   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2083152   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2083153   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2083154   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2083155   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2083156   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2083157   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
2083158   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2083159   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2083160   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2083161   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2083162   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2083163   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2083164   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2083165   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2083166   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2083167   +   ELSE S_NumCatalogPurchases
2083168   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2083169   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2083170   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2083171   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2083172   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2083173   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2083174   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2083175   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2083176   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2083177   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2083178   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2083179   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2083180   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2083181   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2083182   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2083183   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2083184   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2083185   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2083186   +END;
MPRINT(EM_DIAGRAM):   END;
2083187   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2083188   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
2083189   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2083190   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2083191   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
2083192   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2083193   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2083194   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
2083195   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2083196   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2083197   +   H11  =     0.87660114046125 * S_Income  +     -0.7994451897827 * S_Kidhome
2083198   +          +    -0.08967295716195 * S_MntFishProducts
2083199   +          +     0.03184635437516 * S_MntFruits  +    -0.13860895575438 *
2083200   +        S_MntGoldProds  +     0.55790460748169 * S_MntMeatProducts
2083201   +          +    -0.02806094557115 * S_MntSweetProducts
2083202   +          +    -0.14537763592724 * S_MntWines  +     0.76891266523847 *
2083203   +        S_NumCatalogPurchases  +     0.16842007461305 * S_NumDealsPurchases
2083204   +          +     0.25137876058262 * S_NumStorePurchases
2083205   +          +    -0.07865442401292 * S_NumWebPurchases
2083206   +          +     1.03197398967259 * S_NumWebVisitsMonth
2083207   +          +    -1.26907156503759 * S_Recency  +    -0.76016893316351 *
2083208   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.87660114046125 * S_Income + -0.7994451897827 * S_Kidhome + 
-0.08967295716195 * S_MntFishProducts + 0.03184635437516 * S_MntFruits + -0.13860895575438 * 
S_MntGoldProds + 0.55790460748169 * S_MntMeatProducts + -0.02806094557115 * S_MntSweetProducts 
+ -0.14537763592724 * S_MntWines + 0.76891266523847 * S_NumCatalogPurchases + 0.16842007461305 
* S_NumDealsPurchases + 0.25137876058262 * S_NumStorePurchases + -0.07865442401292 * 
S_NumWebPurchases + 1.03197398967259 * S_NumWebVisitsMonth + -1.26907156503759 * S_Recency + 
-0.76016893316351 * S_Teenhome ;
2083209   +   H12  =     0.37295000114468 * S_Income  +    -0.12834211496575 * S_Kidhome
2083210   +          +     0.19312392388912 * S_MntFishProducts
2083211   +          +      0.1561688289137 * S_MntFruits  +     0.04004810938796 *
2083212   +        S_MntGoldProds  +     0.32599201739588 * S_MntMeatProducts
2083213   +          +       0.204174263605 * S_MntSweetProducts
2083214   +          +    -0.11560784817014 * S_MntWines  +     0.12255073568725 *
2083215   +        S_NumCatalogPurchases  +    -0.05543734180218 * S_NumDealsPurchases
2083216   +          +     0.07747830335769 * S_NumStorePurchases
2083217   +          +     0.07960837555191 * S_NumWebPurchases
2083218   +          +     0.02351602389122 * S_NumWebVisitsMonth
2083219   +          +     -0.2840853952427 * S_Recency  +    -0.47421627761687 *
2083220   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = 0.37295000114468 * S_Income + -0.12834211496575 * S_Kidhome + 
0.19312392388912 * S_MntFishProducts + 0.1561688289137 * S_MntFruits + 0.04004810938796 * 
S_MntGoldProds + 0.32599201739588 * S_MntMeatProducts + 0.204174263605 * S_MntSweetProducts + 
-0.11560784817014 * S_MntWines + 0.12255073568725 * S_NumCatalogPurchases + -0.05543734180218 
* S_NumDealsPurchases + 0.07747830335769 * S_NumStorePurchases + 0.07960837555191 * 
S_NumWebPurchases + 0.02351602389122 * S_NumWebVisitsMonth + -0.2840853952427 * S_Recency + 
-0.47421627761687 * S_Teenhome ;
2083221   +   H13  =    -0.33428925248315 * S_Income  +    -0.03845622730742 * S_Kidhome
2083222   +          +     0.18733919794636 * S_MntFishProducts
2083223   +          +     0.45907982190052 * S_MntFruits  +    -0.48776616433719 *
2083224   +        S_MntGoldProds  +    -0.41340481007204 * S_MntMeatProducts
2083225   +          +     0.42514606159239 * S_MntSweetProducts
2083226   +          +     0.20038001368787 * S_MntWines  +    -1.21708501803782 *
2083227   +        S_NumCatalogPurchases  +    -1.06820061274533 * S_NumDealsPurchases
2083228   +          +     0.36582106462789 * S_NumStorePurchases
2083229   +          +     0.04244777020435 * S_NumWebPurchases
2083230   +          +    -0.24296342902503 * S_NumWebVisitsMonth
2083231   +          +     0.27451716762947 * S_Recency  +     0.13110477325277 *
2083232   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = -0.33428925248315 * S_Income + -0.03845622730742 * S_Kidhome + 
0.18733919794636 * S_MntFishProducts + 0.45907982190052 * S_MntFruits + -0.48776616433719 * 
S_MntGoldProds + -0.41340481007204 * S_MntMeatProducts + 0.42514606159239 * S_MntSweetProducts 
+ 0.20038001368787 * S_MntWines + -1.21708501803782 * S_NumCatalogPurchases + 
-1.06820061274533 * S_NumDealsPurchases + 0.36582106462789 * S_NumStorePurchases + 
0.04244777020435 * S_NumWebPurchases + -0.24296342902503 * S_NumWebVisitsMonth + 
0.27451716762947 * S_Recency + 0.13110477325277 * S_Teenhome ;
2083233   +   H14  =    -0.70493412542585 * S_Income  +     0.41202796606799 * S_Kidhome
2083234   +          +     0.05986489897572 * S_MntFishProducts
2083235   +          +    -0.05040531715469 * S_MntFruits  +       0.051068387592 *
2083236   +        S_MntGoldProds  +    -0.13581881662481 * S_MntMeatProducts
2083237   +          +    -0.05513370461072 * S_MntSweetProducts
2083238   +          +     0.77472084468819 * S_MntWines  +    -0.03211788969126 *
2083239   +        S_NumCatalogPurchases  +    -0.24097486430988 * S_NumDealsPurchases
2083240   +          +     0.64364674828841 * S_NumStorePurchases
2083241   +          +     0.15084748708424 * S_NumWebPurchases
2083242   +          +    -0.94144998356377 * S_NumWebVisitsMonth
2083243   +          +     1.16778338364599 * S_Recency  +     0.32089861635238 *
2083244   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = -0.70493412542585 * S_Income + 0.41202796606799 * S_Kidhome + 
0.05986489897572 * S_MntFishProducts + -0.05040531715469 * S_MntFruits + 0.051068387592 * 
S_MntGoldProds + -0.13581881662481 * S_MntMeatProducts + -0.05513370461072 * 
S_MntSweetProducts + 0.77472084468819 * S_MntWines + -0.03211788969126 * S_NumCatalogPurchases 
+ -0.24097486430988 * S_NumDealsPurchases + 0.64364674828841 * S_NumStorePurchases + 
0.15084748708424 * S_NumWebPurchases + -0.94144998356377 * S_NumWebVisitsMonth + 
1.16778338364599 * S_Recency + 0.32089861635238 * S_Teenhome ;
2083245   +   H15  =    -0.15703510827879 * S_Income  +    -0.30977841002562 * S_Kidhome
2083246   +          +    -0.14543196273578 * S_MntFishProducts
2083247   +          +     0.32223695896711 * S_MntFruits  +    -0.31846203211698 *
2083248   +        S_MntGoldProds  +     -1.4125160823105 * S_MntMeatProducts
2083249   +          +     0.49374793444169 * S_MntSweetProducts
2083250   +          +     0.39699716010219 * S_MntWines  +    -0.88140331687645 *
2083251   +        S_NumCatalogPurchases  +    -0.87657222813687 * S_NumDealsPurchases
2083252   +          +     1.23754786782746 * S_NumStorePurchases
2083253   +          +     1.11316667348511 * S_NumWebPurchases
2083254   +          +    -1.08592446439781 * S_NumWebVisitsMonth
2083255   +          +     0.66958517589542 * S_Recency  +     0.06799032788481 *
2083256   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H15 = -0.15703510827879 * S_Income + -0.30977841002562 * S_Kidhome + 
-0.14543196273578 * S_MntFishProducts + 0.32223695896711 * S_MntFruits + -0.31846203211698 * 
S_MntGoldProds + -1.4125160823105 * S_MntMeatProducts + 0.49374793444169 * S_MntSweetProducts 
+ 0.39699716010219 * S_MntWines + -0.88140331687645 * S_NumCatalogPurchases + 
-0.87657222813687 * S_NumDealsPurchases + 1.23754786782746 * S_NumStorePurchases + 
1.11316667348511 * S_NumWebPurchases + -1.08592446439781 * S_NumWebVisitsMonth + 
0.66958517589542 * S_Recency + 0.06799032788481 * S_Teenhome ;
2083257   +   H16  =    -0.10360901553583 * S_Income  +     0.39257497240865 * S_Kidhome
2083258   +          +     0.29549884005341 * S_MntFishProducts
2083259   +          +     0.04922491353914 * S_MntFruits  +     -0.1412659458221 *
2083260   +        S_MntGoldProds  +    -0.12361454534126 * S_MntMeatProducts
2083261   +          +    -0.11909215986981 * S_MntSweetProducts
2083262   +          +     0.11430484977092 * S_MntWines  +    -0.66235553839539 *
2083263   +        S_NumCatalogPurchases  +     0.17261763180198 * S_NumDealsPurchases
2083264   +          +     0.30109334594548 * S_NumStorePurchases
2083265   +          +     0.01985762767489 * S_NumWebPurchases
2083266   +          +     0.44965133281333 * S_NumWebVisitsMonth
2083267   +          +     0.32338634259192 * S_Recency  +    -0.04032956941805 *
2083268   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H16 = -0.10360901553583 * S_Income + 0.39257497240865 * S_Kidhome + 
0.29549884005341 * S_MntFishProducts + 0.04922491353914 * S_MntFruits + -0.1412659458221 * 
S_MntGoldProds + -0.12361454534126 * S_MntMeatProducts + -0.11909215986981 * 
S_MntSweetProducts + 0.11430484977092 * S_MntWines + -0.66235553839539 * S_NumCatalogPurchases 
+ 0.17261763180198 * S_NumDealsPurchases + 0.30109334594548 * S_NumStorePurchases + 
0.01985762767489 * S_NumWebPurchases + 0.44965133281333 * S_NumWebVisitsMonth + 
0.32338634259192 * S_Recency + -0.04032956941805 * S_Teenhome ;
2083269   +   H11  = H11  +    -0.23026310289024 * AcceptedCmp10
2083270   +          +    -0.82550012364234 * AcceptedCmp20  +    -0.67764228269441 *
2083271   +        AcceptedCmp30  +    -0.51547666117685 * AcceptedCmp40
2083272   +          +    -0.36424958084824 * AcceptedCmp50  +       0.119862855783 *
2083273   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.23026310289024 * AcceptedCmp10 + -0.82550012364234 * 
AcceptedCmp20 + -0.67764228269441 * AcceptedCmp30 + -0.51547666117685 * AcceptedCmp40 + 
-0.36424958084824 * AcceptedCmp50 + 0.119862855783 * Complain0 ;
2083274   +   H12  = H12  +     0.02722288857426 * AcceptedCmp10
2083275   +          +      0.1236576068539 * AcceptedCmp20  +    -0.31265425960737 *
2083276   +        AcceptedCmp30  +    -0.25076565034266 * AcceptedCmp40
2083277   +          +    -0.20158659730872 * AcceptedCmp50  +    -0.43687103612629 *
2083278   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.02722288857426 * AcceptedCmp10 + 0.1236576068539 * 
AcceptedCmp20 + -0.31265425960737 * AcceptedCmp30 + -0.25076565034266 * AcceptedCmp40 + 
-0.20158659730872 * AcceptedCmp50 + -0.43687103612629 * Complain0 ;
2083279   +   H13  = H13  +     0.21852176280571 * AcceptedCmp10
2083280   +          +     0.01727991436107 * AcceptedCmp20  +     0.19303261094625 *
2083281   +        AcceptedCmp30  +    -0.65492191560509 * AcceptedCmp40
2083282   +          +    -0.09636750660684 * AcceptedCmp50  +     0.07579128571046 *
2083283   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.21852176280571 * AcceptedCmp10 + 0.01727991436107 * 
AcceptedCmp20 + 0.19303261094625 * AcceptedCmp30 + -0.65492191560509 * AcceptedCmp40 + 
-0.09636750660684 * AcceptedCmp50 + 0.07579128571046 * Complain0 ;
2083284   +   H14  = H14  +     0.20819294353855 * AcceptedCmp10
2083285   +          +      0.5159102831901 * AcceptedCmp20  +     0.55295587458643 *
2083286   +        AcceptedCmp30  +     0.80682431419623 * AcceptedCmp40
2083287   +          +     0.74007057798158 * AcceptedCmp50  +     -0.4573052390807 *
2083288   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.20819294353855 * AcceptedCmp10 + 0.5159102831901 * 
AcceptedCmp20 + 0.55295587458643 * AcceptedCmp30 + 0.80682431419623 * AcceptedCmp40 + 
0.74007057798158 * AcceptedCmp50 + -0.4573052390807 * Complain0 ;
2083289   +   H15  = H15  +     1.26330939420524 * AcceptedCmp10
2083290   +          +     0.29494505935793 * AcceptedCmp20  +     0.25561322032419 *
2083291   +        AcceptedCmp30  +     0.50102236777897 * AcceptedCmp40
2083292   +          +     0.20696267245027 * AcceptedCmp50  +    -0.00849145233901 *
2083293   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 1.26330939420524 * AcceptedCmp10 + 0.29494505935793 * 
AcceptedCmp20 + 0.25561322032419 * AcceptedCmp30 + 0.50102236777897 * AcceptedCmp40 + 
0.20696267245027 * AcceptedCmp50 + -0.00849145233901 * Complain0 ;
2083294   +   H16  = H16  +     0.03638428330381 * AcceptedCmp10
2083295   +          +     0.27994215452657 * AcceptedCmp20  +    -0.03861840445025 *
2083296   +        AcceptedCmp30  +      0.3398057347433 * AcceptedCmp40
2083297   +          +    -0.00738335957724 * AcceptedCmp50  +      0.0447804375799 *
2083298   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.03638428330381 * AcceptedCmp10 + 0.27994215452657 * 
AcceptedCmp20 + -0.03861840445025 * AcceptedCmp30 + 0.3398057347433 * AcceptedCmp40 + 
-0.00738335957724 * AcceptedCmp50 + 0.0447804375799 * Complain0 ;
2083299   +   H11  = H11  +     0.27482405283962 * Education2n_Cycle
2083300   +          +     0.11084012456612 * EducationBasic  +    -0.23835071987159 *
2083301   +        EducationGraduation  +    -0.10167082180552 * EducationMaster
2083302   +          +     0.51015833145636 * Marital_StatusDivorced
2083303   +          +     -1.1653662063616 * Marital_StatusMarried
2083304   +          +     1.19396547750441 * Marital_StatusSingle
2083305   +          +    -0.99605751789992 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.27482405283962 * Education2n_Cycle + 0.11084012456612 * 
EducationBasic + -0.23835071987159 * EducationGraduation + -0.10167082180552 * EducationMaster 
+ 0.51015833145636 * Marital_StatusDivorced + -1.1653662063616 * Marital_StatusMarried + 
1.19396547750441 * Marital_StatusSingle + -0.99605751789992 * Marital_StatusTogether ;
2083306   +   H12  = H12  +    -0.05268347704739 * Education2n_Cycle
2083307   +          +     0.19362065968028 * EducationBasic  +    -0.26784257195414 *
2083308   +        EducationGraduation  +     0.16650577465959 * EducationMaster
2083309   +          +     0.09154288513995 * Marital_StatusDivorced
2083310   +          +     0.06725684628382 * Marital_StatusMarried
2083311   +          +     0.11327659191494 * Marital_StatusSingle
2083312   +          +     0.01793778876811 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.05268347704739 * Education2n_Cycle + 0.19362065968028 * 
EducationBasic + -0.26784257195414 * EducationGraduation + 0.16650577465959 * EducationMaster 
+ 0.09154288513995 * Marital_StatusDivorced + 0.06725684628382 * Marital_StatusMarried + 
0.11327659191494 * Marital_StatusSingle + 0.01793778876811 * Marital_StatusTogether ;
2083313   +   H13  = H13  +     -0.1027084329077 * Education2n_Cycle
2083314   +          +    -0.01342449140757 * EducationBasic  +    -0.35627920427273 *
2083315   +        EducationGraduation  +    -0.05554656531793 * EducationMaster
2083316   +          +     0.37591653615852 * Marital_StatusDivorced
2083317   +          +    -0.05024236790132 * Marital_StatusMarried
2083318   +          +    -0.28317154997144 * Marital_StatusSingle
2083319   +          +    -0.19247490223101 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.1027084329077 * Education2n_Cycle + -0.01342449140757 * 
EducationBasic + -0.35627920427273 * EducationGraduation + -0.05554656531793 * EducationMaster 
+ 0.37591653615852 * Marital_StatusDivorced + -0.05024236790132 * Marital_StatusMarried + 
-0.28317154997144 * Marital_StatusSingle + -0.19247490223101 * Marital_StatusTogether ;
2083320   +   H14  = H14  +     -0.4162491480577 * Education2n_Cycle
2083321   +          +     0.38075572764074 * EducationBasic  +    -0.28169469529121 *
2083322   +        EducationGraduation  +       0.638986138084 * EducationMaster
2083323   +          +    -0.44885292450558 * Marital_StatusDivorced
2083324   +          +     0.78958791519299 * Marital_StatusMarried
2083325   +          +    -0.09688714431356 * Marital_StatusSingle
2083326   +          +     0.84239030196202 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.4162491480577 * Education2n_Cycle + 0.38075572764074 * 
EducationBasic + -0.28169469529121 * EducationGraduation + 0.638986138084 * EducationMaster + 
-0.44885292450558 * Marital_StatusDivorced + 0.78958791519299 * Marital_StatusMarried + 
-0.09688714431356 * Marital_StatusSingle + 0.84239030196202 * Marital_StatusTogether ;
2083327   +   H15  = H15  +     0.33126657974568 * Education2n_Cycle
2083328   +          +     0.44539039262703 * EducationBasic  +    -0.09154902903865 *
2083329   +        EducationGraduation  +    -0.26400363440725 * EducationMaster
2083330   +          +    -0.30801073895989 * Marital_StatusDivorced
2083331   +          +     -0.1285150749223 * Marital_StatusMarried
2083332   +          +     0.06775542164414 * Marital_StatusSingle
2083333   +          +    -0.13032366945766 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.33126657974568 * Education2n_Cycle + 0.44539039262703 * 
EducationBasic + -0.09154902903865 * EducationGraduation + -0.26400363440725 * EducationMaster 
+ -0.30801073895989 * Marital_StatusDivorced + -0.1285150749223 * Marital_StatusMarried + 
0.06775542164414 * Marital_StatusSingle + -0.13032366945766 * Marital_StatusTogether ;
2083334   +   H16  = H16  +     0.02030175222681 * Education2n_Cycle
2083335   +          +    -0.19579401096879 * EducationBasic  +      0.2070703930869 *
2083336   +        EducationGraduation  +    -0.40706983167068 * EducationMaster
2083337   +          +     0.22193599090368 * Marital_StatusDivorced
2083338   +          +    -0.54544672042168 * Marital_StatusMarried
2083339   +          +    -0.02237436019864 * Marital_StatusSingle
2083340   +          +    -0.21979468164854 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.02030175222681 * Education2n_Cycle + -0.19579401096879 * 
EducationBasic + 0.2070703930869 * EducationGraduation + -0.40706983167068 * EducationMaster + 
0.22193599090368 * Marital_StatusDivorced + -0.54544672042168 * Marital_StatusMarried + 
-0.02237436019864 * Marital_StatusSingle + -0.21979468164854 * Marital_StatusTogether ;
2083341   +   H11  =    -1.24550293901788 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -1.24550293901788 + H11 ;
2083342   +   H12  =     0.36762263942809 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.36762263942809 + H12 ;
2083343   +   H13  =     0.07010867577103 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = 0.07010867577103 + H13 ;
2083344   +   H14  =    -1.94014549272156 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = -1.94014549272156 + H14 ;
2083345   +   H15  =     0.17666656180153 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = 0.17666656180153 + H15 ;
2083346   +   H16  =    -1.64626406576709 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = -1.64626406576709 + H16 ;
2083347   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
2083348   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
2083349   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
2083350   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
2083351   +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
2083352   +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
2083353   +END;
MPRINT(EM_DIAGRAM):   END;
2083354   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2083355   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
2083356   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
2083357   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
2083358   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
2083359   +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
2083360   +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
2083361   +END;
MPRINT(EM_DIAGRAM):   END;
2083362   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2083363   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2083364   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2083365   +
2083366   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
2083367   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
2083368   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2083369   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
2083370   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
2083371   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2083372   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
2083373   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2083374   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2083375   +end;
MPRINT(EM_DIAGRAM):   end;
2083376   +else do;
MPRINT(EM_DIAGRAM):   else do;
2083377   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
2083378   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
2083379   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
2083380   +   end;
MPRINT(EM_DIAGRAM):   end;
2083381   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
2083382   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
2083383   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
2083384   +   end;
MPRINT(EM_DIAGRAM):   end;
2083385   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2083386   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2083387   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2083388   +   end;
MPRINT(EM_DIAGRAM):   end;
2083389   +end;
MPRINT(EM_DIAGRAM):   end;
2083390   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2083391   +   P_DepVar1  =     4.21126046696691 * H11  +      0.6565061288056 * H12
2083392   +          +    -1.92484011508628 * H13  +    -3.74020722142387 * H14
2083393   +          +    -3.27353026762143 * H15  +     -1.2596922869974 * H16 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 4.21126046696691 * H11 + 0.6565061288056 * H12 + 
-1.92484011508628 * H13 + -3.74020722142387 * H14 + -3.27353026762143 * H15 + -1.2596922869974 
* H16 ;
2083394   +   P_DepVar1  =    -1.36806658950323 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.36806658950323 + P_DepVar1 ;
2083395   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2083396   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2083397   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2083398   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2083399   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2083400   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2083401   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2083402   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2083403   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2083404   +END;
MPRINT(EM_DIAGRAM):   END;
2083405   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2083406   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2083407   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2083408   +END;
MPRINT(EM_DIAGRAM):   END;
2083409   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2083410   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2083411   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2083412   +END;
MPRINT(EM_DIAGRAM):   END;
2083413   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
2083414   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
2083415   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
2083416   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
2083417   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
2083418   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
2083419   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
2083420   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2083421   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2083422   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2083423   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2083424   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2083425   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2083426   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2083427   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2083428   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2083429   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2083430   +END;
MPRINT(EM_DIAGRAM):   END;
2083431   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2083432   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2083433   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2083434   +drop
2083435   +H11
2083436   +H12
2083437   +H13
2083438   +H14
2083439   +H15
2083440   +H16
2083441   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 ;
2083442   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
2083443   +* Renaming variables for Neural35;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural35;
2083444   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2083445   +* Renaming Posterior variables for Neural35;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural35;
2083446   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2083447   +drop Neural35_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural35_P_DepVar1;
2083448   +Neural35_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural35_P_DepVar1 = P_DepVar1;
2083449   +drop Neural35_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural35_P_DepVar0;
2083450   +Neural35_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural35_P_DepVar0 = P_DepVar0;
2083451   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2083452   +* Renaming _WARN_ variable for Neural35;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural35;
2083453   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2083454   +length Neural35_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural35_WARN_ $4;
2083455   +drop Neural35_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural35_WARN_;
2083456   +Neural35_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural35_WARN_ = _WARN_;
2083457   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2083458   +* Ensmbl9: Scoring Code of model 6 of 10;
MPRINT(EM_DIAGRAM):   * Ensmbl9: Scoring Code of model 6 of 10;
2083459   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2083460   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2083461   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
2083462   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
2083463   +* NODE: Neural34;
MPRINT(EM_DIAGRAM):   * NODE: Neural34;
2083464   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2083465   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2083466   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2083467   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2083468   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2083469   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2083470   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2083471   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2083472   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2083473   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2083474   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2083475   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2083476   +LENGTH _WARN_ $4
2083477   +      F_DepVar  $ 12
2083478   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
2083479   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2083480   +
2083481   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2083482   +
2083483   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2083484   +
2083485   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2083486   +
2083487   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2083488   +
2083489   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2083490   +
2083491   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2083492   +
2083493   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2083494   +
2083495   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2083496   +
2083497   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2083498   +
2083499   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2083500   +
2083501   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2083502   +
2083503   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2083504   +
2083505   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2083506   +
2083507   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2083508   +
2083509   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2083510   +
2083511   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2083512   +
2083513   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2083514   +
2083515   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2083516   +
2083517   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2083518   +
2083519   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2083520   +
2083521   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2083522   +
2083523   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2083524   +
2083525   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2083526   +
2083527   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2083528   +
2083529   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2083530   +
2083531   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2083532   +
2083533   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2083534   +
2083535   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2083536   +
2083537   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
2083538   +
2083539   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
2083540   +
2083541   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
2083542   +
2083543   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
2083544   +
2083545   +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
2083546   +
2083547   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2083548   +
2083549   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2083550   +
2083551   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2083552   +
2083553   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2083554   +
2083555   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
2083556   +
2083557   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2083558   +
2083559   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
2083560   +
2083561   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2083562   +
2083563   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2083564   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2083565   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2083566   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2083567   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2083568   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2083569   +end;
MPRINT(EM_DIAGRAM):   end;
2083570   +else do;
MPRINT(EM_DIAGRAM):   else do;
2083571   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2083572   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2083573   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2083574   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2083575   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2083576   +   end;
MPRINT(EM_DIAGRAM):   end;
2083577   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2083578   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2083579   +   end;
MPRINT(EM_DIAGRAM):   end;
2083580   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2083581   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2083582   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2083583   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2083584   +   end;
MPRINT(EM_DIAGRAM):   end;
2083585   +end;
MPRINT(EM_DIAGRAM):   end;
2083586   +
2083587   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2083588   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2083589   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2083590   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2083591   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2083592   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2083593   +end;
MPRINT(EM_DIAGRAM):   end;
2083594   +else do;
MPRINT(EM_DIAGRAM):   else do;
2083595   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2083596   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2083597   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2083598   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2083599   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2083600   +   end;
MPRINT(EM_DIAGRAM):   end;
2083601   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2083602   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2083603   +   end;
MPRINT(EM_DIAGRAM):   end;
2083604   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2083605   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2083606   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2083607   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2083608   +   end;
MPRINT(EM_DIAGRAM):   end;
2083609   +end;
MPRINT(EM_DIAGRAM):   end;
2083610   +
2083611   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2083612   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2083613   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2083614   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2083615   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2083616   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2083617   +end;
MPRINT(EM_DIAGRAM):   end;
2083618   +else do;
MPRINT(EM_DIAGRAM):   else do;
2083619   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2083620   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2083621   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2083622   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2083623   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2083624   +   end;
MPRINT(EM_DIAGRAM):   end;
2083625   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2083626   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2083627   +   end;
MPRINT(EM_DIAGRAM):   end;
2083628   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2083629   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2083630   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2083631   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2083632   +   end;
MPRINT(EM_DIAGRAM):   end;
2083633   +end;
MPRINT(EM_DIAGRAM):   end;
2083634   +
2083635   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2083636   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2083637   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2083638   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2083639   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2083640   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2083641   +end;
MPRINT(EM_DIAGRAM):   end;
2083642   +else do;
MPRINT(EM_DIAGRAM):   else do;
2083643   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2083644   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2083645   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2083646   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2083647   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2083648   +   end;
MPRINT(EM_DIAGRAM):   end;
2083649   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2083650   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2083651   +   end;
MPRINT(EM_DIAGRAM):   end;
2083652   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2083653   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2083654   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2083655   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2083656   +   end;
MPRINT(EM_DIAGRAM):   end;
2083657   +end;
MPRINT(EM_DIAGRAM):   end;
2083658   +
2083659   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2083660   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2083661   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2083662   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2083663   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2083664   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2083665   +end;
MPRINT(EM_DIAGRAM):   end;
2083666   +else do;
MPRINT(EM_DIAGRAM):   else do;
2083667   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2083668   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2083669   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2083670   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2083671   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2083672   +   end;
MPRINT(EM_DIAGRAM):   end;
2083673   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2083674   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2083675   +   end;
MPRINT(EM_DIAGRAM):   end;
2083676   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2083677   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2083678   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2083679   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2083680   +   end;
MPRINT(EM_DIAGRAM):   end;
2083681   +end;
MPRINT(EM_DIAGRAM):   end;
2083682   +
2083683   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2083684   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2083685   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2083686   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2083687   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2083688   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2083689   +end;
MPRINT(EM_DIAGRAM):   end;
2083690   +else do;
MPRINT(EM_DIAGRAM):   else do;
2083691   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2083692   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2083693   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2083694   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2083695   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2083696   +   end;
MPRINT(EM_DIAGRAM):   end;
2083697   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2083698   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2083699   +   end;
MPRINT(EM_DIAGRAM):   end;
2083700   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2083701   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2083702   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2083703   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2083704   +   end;
MPRINT(EM_DIAGRAM):   end;
2083705   +end;
MPRINT(EM_DIAGRAM):   end;
2083706   +
2083707   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2083708   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
2083709   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2083710   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2083711   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2083712   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2083713   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2083714   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2083715   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2083716   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2083717   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2083718   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2083719   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2083720   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2083721   +end;
MPRINT(EM_DIAGRAM):   end;
2083722   +else do;
MPRINT(EM_DIAGRAM):   else do;
2083723   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2083724   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2083725   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2083726   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2083727   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2083728   +   end;
MPRINT(EM_DIAGRAM):   end;
2083729   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2083730   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2083731   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2083732   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2083733   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2083734   +   end;
MPRINT(EM_DIAGRAM):   end;
2083735   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2083736   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2083737   +   end;
MPRINT(EM_DIAGRAM):   end;
2083738   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2083739   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2083740   +   end;
MPRINT(EM_DIAGRAM):   end;
2083741   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2083742   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2083743   +   end;
MPRINT(EM_DIAGRAM):   end;
2083744   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2083745   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2083746   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2083747   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2083748   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2083749   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2083750   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2083751   +   end;
MPRINT(EM_DIAGRAM):   end;
2083752   +end;
MPRINT(EM_DIAGRAM):   end;
2083753   +
2083754   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2083755   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2083756   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
2083757   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2083758   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2083759   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2083760   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2083761   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2083762   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2083763   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2083764   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2083765   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2083766   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2083767   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2083768   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2083769   +end;
MPRINT(EM_DIAGRAM):   end;
2083770   +else do;
MPRINT(EM_DIAGRAM):   else do;
2083771   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2083772   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2083773   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2083774   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2083775   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2083776   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2083777   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2083778   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2083779   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2083780   +         end;
MPRINT(EM_DIAGRAM):   end;
2083781   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2083782   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2083783   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2083784   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2083785   +            end;
MPRINT(EM_DIAGRAM):   end;
2083786   +         end;
MPRINT(EM_DIAGRAM):   end;
2083787   +      end;
MPRINT(EM_DIAGRAM):   end;
2083788   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2083789   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2083790   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2083791   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2083792   +         end;
MPRINT(EM_DIAGRAM):   end;
2083793   +      end;
MPRINT(EM_DIAGRAM):   end;
2083794   +   end;
MPRINT(EM_DIAGRAM):   end;
2083795   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2083796   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2083797   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2083798   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2083799   +      end;
MPRINT(EM_DIAGRAM):   end;
2083800   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2083801   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2083802   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2083803   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2083804   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2083805   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2083806   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2083807   +         end;
MPRINT(EM_DIAGRAM):   end;
2083808   +      end;
MPRINT(EM_DIAGRAM):   end;
2083809   +   end;
MPRINT(EM_DIAGRAM):   end;
2083810   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2083811   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2083812   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2083813   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2083814   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2083815   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2083816   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2083817   +   end;
MPRINT(EM_DIAGRAM):   end;
2083818   +end;
MPRINT(EM_DIAGRAM):   end;
2083819   +
2083820   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2083821   +*** Checking missing input Interval
2083822   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2083823   +
2083824   +IF NMISS(
2083825   +   Income ,
2083826   +   Kidhome ,
2083827   +   MntFishProducts ,
2083828   +   MntFruits ,
2083829   +   MntGoldProds ,
2083830   +   MntMeatProducts ,
2083831   +   MntSweetProducts ,
2083832   +   MntWines ,
2083833   +   NumCatalogPurchases ,
2083834   +   NumDealsPurchases ,
2083835   +   NumStorePurchases ,
2083836   +   NumWebPurchases ,
2083837   +   NumWebVisitsMonth ,
2083838   +   Recency ,
2083839   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Income , Kidhome , MntFishProducts , MntFruits , MntGoldProds 
, MntMeatProducts , MntSweetProducts , MntWines , NumCatalogPurchases , NumDealsPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , Recency , Teenhome ) THEN DO;
2083840   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2083841   +
2083842   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2083843   +END;
MPRINT(EM_DIAGRAM):   END;
2083844   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2083845   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
2083846   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2083847   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2083848   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2083849   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2083850   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2083851   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2083852   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2083853   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2083854   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2083855   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2083856   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2083857   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2083858   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2083859   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2083860   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2083861   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2083862   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2083863   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2083864   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2083865   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2083866   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2083867   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2083868   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2083869   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2083870   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2083871   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2083872   +END;
MPRINT(EM_DIAGRAM):   END;
2083873   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2083874   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2083875   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2083876   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2083877   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2083878   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2083879   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2083880   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2083881   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2083882   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2083883   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2083884   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2083885   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2083886   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
2083887   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2083888   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2083889   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2083890   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2083891   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2083892   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2083893   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2083894   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2083895   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2083896   +   ELSE S_NumCatalogPurchases
2083897   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2083898   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2083899   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2083900   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2083901   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2083902   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2083903   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2083904   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2083905   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2083906   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2083907   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2083908   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2083909   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2083910   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2083911   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2083912   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2083913   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2083914   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2083915   +END;
MPRINT(EM_DIAGRAM):   END;
2083916   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2083917   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
2083918   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2083919   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2083920   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
2083921   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2083922   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2083923   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
2083924   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2083925   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2083926   +   H11  =    -0.81572379016921 * S_Income  +    -0.07670946585348 * S_Kidhome
2083927   +          +     0.24367603598167 * S_MntFishProducts
2083928   +          +     0.19692980127348 * S_MntFruits  +    -0.03926738185333 *
2083929   +        S_MntGoldProds  +    -0.20900804333353 * S_MntMeatProducts
2083930   +          +     0.34054806441484 * S_MntSweetProducts
2083931   +          +     0.65956211369383 * S_MntWines  +    -0.95375334578522 *
2083932   +        S_NumCatalogPurchases  +    -0.73124740368567 * S_NumDealsPurchases
2083933   +          +     0.98942946974575 * S_NumStorePurchases
2083934   +          +     0.89701206630103 * S_NumWebPurchases
2083935   +          +    -1.22878611472154 * S_NumWebVisitsMonth
2083936   +          +     1.44981870978354 * S_Recency  +     0.47533125686411 *
2083937   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = -0.81572379016921 * S_Income + -0.07670946585348 * S_Kidhome + 
0.24367603598167 * S_MntFishProducts + 0.19692980127348 * S_MntFruits + -0.03926738185333 * 
S_MntGoldProds + -0.20900804333353 * S_MntMeatProducts + 0.34054806441484 * S_MntSweetProducts 
+ 0.65956211369383 * S_MntWines + -0.95375334578522 * S_NumCatalogPurchases + 
-0.73124740368567 * S_NumDealsPurchases + 0.98942946974575 * S_NumStorePurchases + 
0.89701206630103 * S_NumWebPurchases + -1.22878611472154 * S_NumWebVisitsMonth + 
1.44981870978354 * S_Recency + 0.47533125686411 * S_Teenhome ;
2083938   +   H12  =    -0.18875145195495 * S_Income  +     0.42230998482453 * S_Kidhome
2083939   +          +     0.16683404689723 * S_MntFishProducts
2083940   +          +     0.32072658929401 * S_MntFruits  +    -0.12341748032201 *
2083941   +        S_MntGoldProds  +    -1.56478754527255 * S_MntMeatProducts
2083942   +          +     0.20389084548968 * S_MntSweetProducts
2083943   +          +     0.95592931625509 * S_MntWines  +    -0.69996817353755 *
2083944   +        S_NumCatalogPurchases  +    -0.92709806328697 * S_NumDealsPurchases
2083945   +          +     1.27164659640366 * S_NumStorePurchases
2083946   +          +     1.02122194207802 * S_NumWebPurchases
2083947   +          +     -1.5111033436803 * S_NumWebVisitsMonth
2083948   +          +     1.63712814901544 * S_Recency  +     0.14205116840572 *
2083949   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -0.18875145195495 * S_Income + 0.42230998482453 * S_Kidhome + 
0.16683404689723 * S_MntFishProducts + 0.32072658929401 * S_MntFruits + -0.12341748032201 * 
S_MntGoldProds + -1.56478754527255 * S_MntMeatProducts + 0.20389084548968 * S_MntSweetProducts 
+ 0.95592931625509 * S_MntWines + -0.69996817353755 * S_NumCatalogPurchases + 
-0.92709806328697 * S_NumDealsPurchases + 1.27164659640366 * S_NumStorePurchases + 
1.02122194207802 * S_NumWebPurchases + -1.5111033436803 * S_NumWebVisitsMonth + 
1.63712814901544 * S_Recency + 0.14205116840572 * S_Teenhome ;
2083950   +   H13  =     1.02798705354163 * S_Income  +    -0.94411708781921 * S_Kidhome
2083951   +          +    -0.03345077166544 * S_MntFishProducts
2083952   +          +     0.00038440809349 * S_MntFruits  +    -0.05068379715712 *
2083953   +        S_MntGoldProds  +     1.00464705307582 * S_MntMeatProducts
2083954   +          +    -0.11948662500951 * S_MntSweetProducts
2083955   +          +    -0.52438819731252 * S_MntWines  +     0.98586904866769 *
2083956   +        S_NumCatalogPurchases  +     0.09015295226839 * S_NumDealsPurchases
2083957   +          +     0.22401914357376 * S_NumStorePurchases
2083958   +          +     0.04219877865976 * S_NumWebPurchases
2083959   +          +     1.21753334166036 * S_NumWebVisitsMonth
2083960   +          +    -1.33712212110081 * S_Recency  +    -0.47582856683655 *
2083961   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = 1.02798705354163 * S_Income + -0.94411708781921 * S_Kidhome + 
-0.03345077166544 * S_MntFishProducts + 0.00038440809349 * S_MntFruits + -0.05068379715712 * 
S_MntGoldProds + 1.00464705307582 * S_MntMeatProducts + -0.11948662500951 * S_MntSweetProducts 
+ -0.52438819731252 * S_MntWines + 0.98586904866769 * S_NumCatalogPurchases + 0.09015295226839 
* S_NumDealsPurchases + 0.22401914357376 * S_NumStorePurchases + 0.04219877865976 * 
S_NumWebPurchases + 1.21753334166036 * S_NumWebVisitsMonth + -1.33712212110081 * S_Recency + 
-0.47582856683655 * S_Teenhome ;
2083962   +   H14  =     0.91431429848834 * S_Income  +    -1.16289676557574 * S_Kidhome
2083963   +          +     0.31175257038578 * S_MntFishProducts
2083964   +          +     0.08080436076271 * S_MntFruits  +     0.15252288175851 *
2083965   +        S_MntGoldProds  +     0.21603546207654 * S_MntMeatProducts
2083966   +          +      0.0927253053382 * S_MntSweetProducts
2083967   +          +     0.05865323888304 * S_MntWines  +    -0.23426953728277 *
2083968   +        S_NumCatalogPurchases  +    -0.46451908614085 * S_NumDealsPurchases
2083969   +          +    -0.12667606349662 * S_NumStorePurchases
2083970   +          +     0.30148374518724 * S_NumWebPurchases
2083971   +          +     0.48934229701658 * S_NumWebVisitsMonth
2083972   +          +    -0.83754390793251 * S_Recency  +     -0.4576645462819 *
2083973   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = 0.91431429848834 * S_Income + -1.16289676557574 * S_Kidhome + 
0.31175257038578 * S_MntFishProducts + 0.08080436076271 * S_MntFruits + 0.15252288175851 * 
S_MntGoldProds + 0.21603546207654 * S_MntMeatProducts + 0.0927253053382 * S_MntSweetProducts + 
0.05865323888304 * S_MntWines + -0.23426953728277 * S_NumCatalogPurchases + -0.46451908614085 
* S_NumDealsPurchases + -0.12667606349662 * S_NumStorePurchases + 0.30148374518724 * 
S_NumWebPurchases + 0.48934229701658 * S_NumWebVisitsMonth + -0.83754390793251 * S_Recency + 
-0.4576645462819 * S_Teenhome ;
2083974   +   H15  =    -0.58161501095664 * S_Income  +     -1.0333658128614 * S_Kidhome
2083975   +          +     0.42646725119177 * S_MntFishProducts
2083976   +          +     -0.3264621401658 * S_MntFruits  +    -0.74616728524532 *
2083977   +        S_MntGoldProds  +    -0.97572068716712 * S_MntMeatProducts
2083978   +          +    -0.01493605582616 * S_MntSweetProducts
2083979   +          +      0.0311636632685 * S_MntWines  +    -1.68599903767191 *
2083980   +        S_NumCatalogPurchases  +    -1.25052648798307 * S_NumDealsPurchases
2083981   +          +     0.54256744091258 * S_NumStorePurchases
2083982   +          +     0.43065931458468 * S_NumWebPurchases
2083983   +          +      0.5935561420466 * S_NumWebVisitsMonth
2083984   +          +    -0.45183418369624 * S_Recency  +     0.19260512629844 *
2083985   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H15 = -0.58161501095664 * S_Income + -1.0333658128614 * S_Kidhome + 
0.42646725119177 * S_MntFishProducts + -0.3264621401658 * S_MntFruits + -0.74616728524532 * 
S_MntGoldProds + -0.97572068716712 * S_MntMeatProducts + -0.01493605582616 * 
S_MntSweetProducts + 0.0311636632685 * S_MntWines + -1.68599903767191 * S_NumCatalogPurchases 
+ -1.25052648798307 * S_NumDealsPurchases + 0.54256744091258 * S_NumStorePurchases + 
0.43065931458468 * S_NumWebPurchases + 0.5935561420466 * S_NumWebVisitsMonth + 
-0.45183418369624 * S_Recency + 0.19260512629844 * S_Teenhome ;
2083986   +   H11  = H11  +     0.61503950219838 * AcceptedCmp10
2083987   +          +     0.02945207091619 * AcceptedCmp20  +     0.99151950769472 *
2083988   +        AcceptedCmp30  +     1.08987060401718 * AcceptedCmp40
2083989   +          +     0.45427753773024 * AcceptedCmp50  +    -1.03533951966815 *
2083990   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.61503950219838 * AcceptedCmp10 + 0.02945207091619 * 
AcceptedCmp20 + 0.99151950769472 * AcceptedCmp30 + 1.08987060401718 * AcceptedCmp40 + 
0.45427753773024 * AcceptedCmp50 + -1.03533951966815 * Complain0 ;
2083991   +   H12  = H12  +     0.83823476190401 * AcceptedCmp10
2083992   +          +      1.0793719601418 * AcceptedCmp20  +     0.68538854946581 *
2083993   +        AcceptedCmp30  +     1.00297565893339 * AcceptedCmp40
2083994   +          +     0.24586379991786 * AcceptedCmp50  +     0.15471251255301 *
2083995   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.83823476190401 * AcceptedCmp10 + 1.0793719601418 * 
AcceptedCmp20 + 0.68538854946581 * AcceptedCmp30 + 1.00297565893339 * AcceptedCmp40 + 
0.24586379991786 * AcceptedCmp50 + 0.15471251255301 * Complain0 ;
2083996   +   H13  = H13  +    -0.41486094438907 * AcceptedCmp10
2083997   +          +    -0.76586628449839 * AcceptedCmp20  +    -0.59695459523693 *
2083998   +        AcceptedCmp30  +    -0.30262159911837 * AcceptedCmp40
2083999   +          +    -0.61141171124182 * AcceptedCmp50  +    -0.01086235188835 *
2084000   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.41486094438907 * AcceptedCmp10 + -0.76586628449839 * 
AcceptedCmp20 + -0.59695459523693 * AcceptedCmp30 + -0.30262159911837 * AcceptedCmp40 + 
-0.61141171124182 * AcceptedCmp50 + -0.01086235188835 * Complain0 ;
2084001   +   H14  = H14  +    -0.09662858884082 * AcceptedCmp10
2084002   +          +    -0.48515652524171 * AcceptedCmp20  +    -0.37421451374399 *
2084003   +        AcceptedCmp30  +    -0.52889523891817 * AcceptedCmp40
2084004   +          +    -0.73518448275357 * AcceptedCmp50  +    -0.36065830718672 *
2084005   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.09662858884082 * AcceptedCmp10 + -0.48515652524171 * 
AcceptedCmp20 + -0.37421451374399 * AcceptedCmp30 + -0.52889523891817 * AcceptedCmp40 + 
-0.73518448275357 * AcceptedCmp50 + -0.36065830718672 * Complain0 ;
2084006   +   H15  = H15  +      0.2985143092641 * AcceptedCmp10
2084007   +          +    -0.06881934778393 * AcceptedCmp20  +    -0.02609197044604 *
2084008   +        AcceptedCmp30  +    -0.79105657447885 * AcceptedCmp40
2084009   +          +    -0.02286855144948 * AcceptedCmp50  +     0.02884650192784 *
2084010   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.2985143092641 * AcceptedCmp10 + -0.06881934778393 * 
AcceptedCmp20 + -0.02609197044604 * AcceptedCmp30 + -0.79105657447885 * AcceptedCmp40 + 
-0.02286855144948 * AcceptedCmp50 + 0.02884650192784 * Complain0 ;
2084011   +   H11  = H11  +    -0.41169946146301 * Education2n_Cycle
2084012   +          +      0.8448273504441 * EducationBasic  +    -1.02497956377347 *
2084013   +        EducationGraduation  +     0.43998321745211 * EducationMaster
2084014   +          +    -0.85912688909911 * Marital_StatusDivorced
2084015   +          +     0.81561401465875 * Marital_StatusMarried
2084016   +          +    -0.58324403081542 * Marital_StatusSingle
2084017   +          +      0.9348017085106 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.41169946146301 * Education2n_Cycle + 0.8448273504441 * 
EducationBasic + -1.02497956377347 * EducationGraduation + 0.43998321745211 * EducationMaster 
+ -0.85912688909911 * Marital_StatusDivorced + 0.81561401465875 * Marital_StatusMarried + 
-0.58324403081542 * Marital_StatusSingle + 0.9348017085106 * Marital_StatusTogether ;
2084018   +   H12  = H12  +     0.22828129841893 * Education2n_Cycle
2084019   +          +     0.47579227804033 * EducationBasic  +    -0.18165301263195 *
2084020   +        EducationGraduation  +    -0.16143431016405 * EducationMaster
2084021   +          +    -0.34784695867287 * Marital_StatusDivorced
2084022   +          +    -0.18194022182247 * Marital_StatusMarried
2084023   +          +    -0.10633185904164 * Marital_StatusSingle
2084024   +          +     0.13136125361628 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.22828129841893 * Education2n_Cycle + 0.47579227804033 * 
EducationBasic + -0.18165301263195 * EducationGraduation + -0.16143431016405 * EducationMaster 
+ -0.34784695867287 * Marital_StatusDivorced + -0.18194022182247 * Marital_StatusMarried + 
-0.10633185904164 * Marital_StatusSingle + 0.13136125361628 * Marital_StatusTogether ;
2084025   +   H13  = H13  +     0.38705901043652 * Education2n_Cycle
2084026   +          +     0.19703188370189 * EducationBasic  +    -0.48062640599976 *
2084027   +        EducationGraduation  +     -0.3646621736273 * EducationMaster
2084028   +          +     0.61058752124466 * Marital_StatusDivorced
2084029   +          +    -1.38793808025141 * Marital_StatusMarried
2084030   +          +     1.10060737810944 * Marital_StatusSingle
2084031   +          +    -1.21250219018366 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.38705901043652 * Education2n_Cycle + 0.19703188370189 * 
EducationBasic + -0.48062640599976 * EducationGraduation + -0.3646621736273 * EducationMaster 
+ 0.61058752124466 * Marital_StatusDivorced + -1.38793808025141 * Marital_StatusMarried + 
1.10060737810944 * Marital_StatusSingle + -1.21250219018366 * Marital_StatusTogether ;
2084032   +   H14  = H14  +    -0.20576658115662 * Education2n_Cycle
2084033   +          +    -0.09185472034614 * EducationBasic  +    -0.43674210064447 *
2084034   +        EducationGraduation  +    -0.18154054746298 * EducationMaster
2084035   +          +     0.11973800573581 * Marital_StatusDivorced
2084036   +          +      -0.294635257911 * Marital_StatusMarried
2084037   +          +    -0.05399659601172 * Marital_StatusSingle
2084038   +          +     0.34207780606239 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.20576658115662 * Education2n_Cycle + -0.09185472034614 * 
EducationBasic + -0.43674210064447 * EducationGraduation + -0.18154054746298 * EducationMaster 
+ 0.11973800573581 * Marital_StatusDivorced + -0.294635257911 * Marital_StatusMarried + 
-0.05399659601172 * Marital_StatusSingle + 0.34207780606239 * Marital_StatusTogether ;
2084039   +   H15  = H15  +    -0.05553093684862 * Education2n_Cycle
2084040   +          +    -0.12898006732329 * EducationBasic  +    -0.16064118923518 *
2084041   +        EducationGraduation  +     -0.6431539624694 * EducationMaster
2084042   +          +     0.42838191659864 * Marital_StatusDivorced
2084043   +          +    -0.09150349181363 * Marital_StatusMarried
2084044   +          +    -0.33520164145276 * Marital_StatusSingle
2084045   +          +    -0.15253738713197 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + -0.05553093684862 * Education2n_Cycle + -0.12898006732329 * 
EducationBasic + -0.16064118923518 * EducationGraduation + -0.6431539624694 * EducationMaster 
+ 0.42838191659864 * Marital_StatusDivorced + -0.09150349181363 * Marital_StatusMarried + 
-0.33520164145276 * Marital_StatusSingle + -0.15253738713197 * Marital_StatusTogether ;
2084046   +   H11  =     -1.5079478405973 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -1.5079478405973 + H11 ;
2084047   +   H12  =     0.03014958331993 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.03014958331993 + H12 ;
2084048   +   H13  =    -1.78098671165572 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -1.78098671165572 + H13 ;
2084049   +   H14  =     0.22179429743277 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 0.22179429743277 + H14 ;
2084050   +   H15  =    -2.06602107857898 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = -2.06602107857898 + H15 ;
2084051   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
2084052   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
2084053   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
2084054   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
2084055   +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
2084056   +END;
MPRINT(EM_DIAGRAM):   END;
2084057   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2084058   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
2084059   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
2084060   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
2084061   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
2084062   +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
2084063   +END;
MPRINT(EM_DIAGRAM):   END;
2084064   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2084065   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2084066   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2084067   +
2084068   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
2084069   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
2084070   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2084071   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
2084072   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
2084073   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2084074   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
2084075   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2084076   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2084077   +end;
MPRINT(EM_DIAGRAM):   end;
2084078   +else do;
MPRINT(EM_DIAGRAM):   else do;
2084079   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
2084080   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
2084081   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
2084082   +   end;
MPRINT(EM_DIAGRAM):   end;
2084083   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
2084084   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
2084085   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
2084086   +   end;
MPRINT(EM_DIAGRAM):   end;
2084087   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2084088   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2084089   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2084090   +   end;
MPRINT(EM_DIAGRAM):   end;
2084091   +end;
MPRINT(EM_DIAGRAM):   end;
2084092   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2084093   +   P_DepVar1  =    -4.55666337815854 * H11  +    -4.04792544554995 * H12
2084094   +          +     4.56148127429284 * H13  +     2.36841344452371 * H14
2084095   +          +    -3.07371010011749 * H15 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -4.55666337815854 * H11 + -4.04792544554995 * H12 + 
4.56148127429284 * H13 + 2.36841344452371 * H14 + -3.07371010011749 * H15 ;
2084096   +   P_DepVar1  =    -0.83283406236136 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.83283406236136 + P_DepVar1 ;
2084097   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2084098   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2084099   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2084100   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2084101   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2084102   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2084103   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2084104   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2084105   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2084106   +END;
MPRINT(EM_DIAGRAM):   END;
2084107   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2084108   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2084109   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2084110   +END;
MPRINT(EM_DIAGRAM):   END;
2084111   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2084112   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2084113   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2084114   +END;
MPRINT(EM_DIAGRAM):   END;
2084115   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
2084116   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
2084117   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
2084118   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
2084119   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
2084120   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
2084121   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
2084122   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2084123   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2084124   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2084125   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2084126   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2084127   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2084128   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2084129   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2084130   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2084131   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2084132   +END;
MPRINT(EM_DIAGRAM):   END;
2084133   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2084134   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2084135   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2084136   +drop
2084137   +H11
2084138   +H12
2084139   +H13
2084140   +H14
2084141   +H15
2084142   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 ;
2084143   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
2084144   +* Renaming variables for Neural34;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural34;
2084145   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2084146   +* Renaming Posterior variables for Neural34;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural34;
2084147   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2084148   +drop Neural34_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural34_P_DepVar1;
2084149   +Neural34_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural34_P_DepVar1 = P_DepVar1;
2084150   +drop Neural34_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural34_P_DepVar0;
2084151   +Neural34_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural34_P_DepVar0 = P_DepVar0;
2084152   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2084153   +* Renaming _WARN_ variable for Neural34;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural34;
2084154   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2084155   +length Neural34_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural34_WARN_ $4;
2084156   +drop Neural34_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural34_WARN_;
2084157   +Neural34_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural34_WARN_ = _WARN_;
2084158   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2084159   +* Ensmbl9: Scoring Code of model 7 of 10;
MPRINT(EM_DIAGRAM):   * Ensmbl9: Scoring Code of model 7 of 10;
2084160   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2084161   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2084162   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
2084163   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
2084164   +* NODE: Neural33;
MPRINT(EM_DIAGRAM):   * NODE: Neural33;
2084165   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2084166   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2084167   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2084168   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2084169   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2084170   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2084171   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2084172   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2084173   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2084174   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2084175   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2084176   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2084177   +LENGTH _WARN_ $4
2084178   +      F_DepVar  $ 12
2084179   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
2084180   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2084181   +
2084182   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2084183   +
2084184   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2084185   +
2084186   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2084187   +
2084188   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2084189   +
2084190   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2084191   +
2084192   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2084193   +
2084194   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2084195   +
2084196   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2084197   +
2084198   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2084199   +
2084200   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2084201   +
2084202   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2084203   +
2084204   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2084205   +
2084206   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2084207   +
2084208   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2084209   +
2084210   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2084211   +
2084212   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2084213   +
2084214   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2084215   +
2084216   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2084217   +
2084218   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2084219   +
2084220   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2084221   +
2084222   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2084223   +
2084224   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2084225   +
2084226   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2084227   +
2084228   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2084229   +
2084230   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2084231   +
2084232   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2084233   +
2084234   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2084235   +
2084236   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2084237   +
2084238   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
2084239   +
2084240   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
2084241   +
2084242   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
2084243   +
2084244   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
2084245   +
2084246   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2084247   +
2084248   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2084249   +
2084250   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2084251   +
2084252   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2084253   +
2084254   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
2084255   +
2084256   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2084257   +
2084258   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
2084259   +
2084260   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2084261   +
2084262   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2084263   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2084264   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2084265   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2084266   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2084267   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2084268   +end;
MPRINT(EM_DIAGRAM):   end;
2084269   +else do;
MPRINT(EM_DIAGRAM):   else do;
2084270   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2084271   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2084272   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2084273   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2084274   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2084275   +   end;
MPRINT(EM_DIAGRAM):   end;
2084276   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2084277   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2084278   +   end;
MPRINT(EM_DIAGRAM):   end;
2084279   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2084280   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2084281   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2084282   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2084283   +   end;
MPRINT(EM_DIAGRAM):   end;
2084284   +end;
MPRINT(EM_DIAGRAM):   end;
2084285   +
2084286   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2084287   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2084288   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2084289   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2084290   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2084291   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2084292   +end;
MPRINT(EM_DIAGRAM):   end;
2084293   +else do;
MPRINT(EM_DIAGRAM):   else do;
2084294   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2084295   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2084296   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2084297   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2084298   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2084299   +   end;
MPRINT(EM_DIAGRAM):   end;
2084300   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2084301   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2084302   +   end;
MPRINT(EM_DIAGRAM):   end;
2084303   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2084304   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2084305   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2084306   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2084307   +   end;
MPRINT(EM_DIAGRAM):   end;
2084308   +end;
MPRINT(EM_DIAGRAM):   end;
2084309   +
2084310   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2084311   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2084312   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2084313   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2084314   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2084315   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2084316   +end;
MPRINT(EM_DIAGRAM):   end;
2084317   +else do;
MPRINT(EM_DIAGRAM):   else do;
2084318   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2084319   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2084320   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2084321   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2084322   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2084323   +   end;
MPRINT(EM_DIAGRAM):   end;
2084324   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2084325   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2084326   +   end;
MPRINT(EM_DIAGRAM):   end;
2084327   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2084328   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2084329   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2084330   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2084331   +   end;
MPRINT(EM_DIAGRAM):   end;
2084332   +end;
MPRINT(EM_DIAGRAM):   end;
2084333   +
2084334   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2084335   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2084336   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2084337   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2084338   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2084339   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2084340   +end;
MPRINT(EM_DIAGRAM):   end;
2084341   +else do;
MPRINT(EM_DIAGRAM):   else do;
2084342   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2084343   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2084344   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2084345   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2084346   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2084347   +   end;
MPRINT(EM_DIAGRAM):   end;
2084348   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2084349   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2084350   +   end;
MPRINT(EM_DIAGRAM):   end;
2084351   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2084352   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2084353   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2084354   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2084355   +   end;
MPRINT(EM_DIAGRAM):   end;
2084356   +end;
MPRINT(EM_DIAGRAM):   end;
2084357   +
2084358   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2084359   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2084360   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2084361   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2084362   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2084363   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2084364   +end;
MPRINT(EM_DIAGRAM):   end;
2084365   +else do;
MPRINT(EM_DIAGRAM):   else do;
2084366   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2084367   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2084368   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2084369   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2084370   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2084371   +   end;
MPRINT(EM_DIAGRAM):   end;
2084372   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2084373   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2084374   +   end;
MPRINT(EM_DIAGRAM):   end;
2084375   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2084376   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2084377   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2084378   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2084379   +   end;
MPRINT(EM_DIAGRAM):   end;
2084380   +end;
MPRINT(EM_DIAGRAM):   end;
2084381   +
2084382   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2084383   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2084384   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2084385   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2084386   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2084387   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2084388   +end;
MPRINT(EM_DIAGRAM):   end;
2084389   +else do;
MPRINT(EM_DIAGRAM):   else do;
2084390   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2084391   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2084392   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2084393   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2084394   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2084395   +   end;
MPRINT(EM_DIAGRAM):   end;
2084396   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2084397   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2084398   +   end;
MPRINT(EM_DIAGRAM):   end;
2084399   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2084400   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2084401   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2084402   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2084403   +   end;
MPRINT(EM_DIAGRAM):   end;
2084404   +end;
MPRINT(EM_DIAGRAM):   end;
2084405   +
2084406   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2084407   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
2084408   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2084409   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2084410   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2084411   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2084412   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2084413   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2084414   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2084415   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2084416   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2084417   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2084418   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2084419   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2084420   +end;
MPRINT(EM_DIAGRAM):   end;
2084421   +else do;
MPRINT(EM_DIAGRAM):   else do;
2084422   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2084423   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2084424   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2084425   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2084426   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2084427   +   end;
MPRINT(EM_DIAGRAM):   end;
2084428   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2084429   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2084430   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2084431   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2084432   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2084433   +   end;
MPRINT(EM_DIAGRAM):   end;
2084434   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2084435   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2084436   +   end;
MPRINT(EM_DIAGRAM):   end;
2084437   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2084438   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2084439   +   end;
MPRINT(EM_DIAGRAM):   end;
2084440   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2084441   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2084442   +   end;
MPRINT(EM_DIAGRAM):   end;
2084443   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2084444   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2084445   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2084446   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2084447   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2084448   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2084449   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2084450   +   end;
MPRINT(EM_DIAGRAM):   end;
2084451   +end;
MPRINT(EM_DIAGRAM):   end;
2084452   +
2084453   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2084454   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2084455   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
2084456   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2084457   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2084458   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2084459   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2084460   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2084461   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2084462   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2084463   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2084464   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2084465   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2084466   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2084467   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2084468   +end;
MPRINT(EM_DIAGRAM):   end;
2084469   +else do;
MPRINT(EM_DIAGRAM):   else do;
2084470   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2084471   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2084472   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2084473   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2084474   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2084475   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2084476   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2084477   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2084478   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2084479   +         end;
MPRINT(EM_DIAGRAM):   end;
2084480   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2084481   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2084482   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2084483   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2084484   +            end;
MPRINT(EM_DIAGRAM):   end;
2084485   +         end;
MPRINT(EM_DIAGRAM):   end;
2084486   +      end;
MPRINT(EM_DIAGRAM):   end;
2084487   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2084488   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2084489   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2084490   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2084491   +         end;
MPRINT(EM_DIAGRAM):   end;
2084492   +      end;
MPRINT(EM_DIAGRAM):   end;
2084493   +   end;
MPRINT(EM_DIAGRAM):   end;
2084494   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2084495   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2084496   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2084497   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2084498   +      end;
MPRINT(EM_DIAGRAM):   end;
2084499   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2084500   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2084501   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2084502   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2084503   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2084504   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2084505   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2084506   +         end;
MPRINT(EM_DIAGRAM):   end;
2084507   +      end;
MPRINT(EM_DIAGRAM):   end;
2084508   +   end;
MPRINT(EM_DIAGRAM):   end;
2084509   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2084510   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2084511   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2084512   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2084513   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2084514   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2084515   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2084516   +   end;
MPRINT(EM_DIAGRAM):   end;
2084517   +end;
MPRINT(EM_DIAGRAM):   end;
2084518   +
2084519   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2084520   +*** Checking missing input Interval
2084521   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2084522   +
2084523   +IF NMISS(
2084524   +   Income ,
2084525   +   Kidhome ,
2084526   +   MntFishProducts ,
2084527   +   MntFruits ,
2084528   +   MntGoldProds ,
2084529   +   MntMeatProducts ,
2084530   +   MntSweetProducts ,
2084531   +   MntWines ,
2084532   +   NumCatalogPurchases ,
2084533   +   NumDealsPurchases ,
2084534   +   NumStorePurchases ,
2084535   +   NumWebPurchases ,
2084536   +   NumWebVisitsMonth ,
2084537   +   Recency ,
2084538   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Income , Kidhome , MntFishProducts , MntFruits , MntGoldProds 
, MntMeatProducts , MntSweetProducts , MntWines , NumCatalogPurchases , NumDealsPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , Recency , Teenhome ) THEN DO;
2084539   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2084540   +
2084541   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2084542   +END;
MPRINT(EM_DIAGRAM):   END;
2084543   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2084544   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
2084545   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2084546   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2084547   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2084548   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2084549   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2084550   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2084551   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2084552   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2084553   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2084554   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2084555   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2084556   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2084557   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2084558   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2084559   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2084560   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2084561   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2084562   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2084563   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2084564   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2084565   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2084566   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2084567   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2084568   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2084569   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2084570   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2084571   +END;
MPRINT(EM_DIAGRAM):   END;
2084572   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2084573   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2084574   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2084575   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2084576   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2084577   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2084578   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2084579   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2084580   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2084581   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2084582   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2084583   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2084584   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2084585   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
2084586   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2084587   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2084588   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2084589   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2084590   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2084591   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2084592   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2084593   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2084594   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2084595   +   ELSE S_NumCatalogPurchases
2084596   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2084597   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2084598   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2084599   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2084600   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2084601   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2084602   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2084603   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2084604   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2084605   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2084606   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2084607   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2084608   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2084609   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2084610   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2084611   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2084612   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2084613   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2084614   +END;
MPRINT(EM_DIAGRAM):   END;
2084615   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2084616   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
2084617   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2084618   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2084619   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
2084620   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2084621   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2084622   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
2084623   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2084624   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2084625   +   H11  =     0.32435248899543 * S_Income  +    -0.47929849648429 * S_Kidhome
2084626   +          +     0.13364230231465 * S_MntFishProducts
2084627   +          +     -0.1386717864506 * S_MntFruits  +    -0.02769770185129 *
2084628   +        S_MntGoldProds  +    -0.29009812234724 * S_MntMeatProducts
2084629   +          +    -0.10871064476617 * S_MntSweetProducts
2084630   +          +     0.57858611197719 * S_MntWines  +    -0.26900817180555 *
2084631   +        S_NumCatalogPurchases  +    -0.39598523430317 * S_NumDealsPurchases
2084632   +          +     0.52835897625366 * S_NumStorePurchases
2084633   +          +     0.66297635444958 * S_NumWebPurchases
2084634   +          +    -0.31727971903608 * S_NumWebVisitsMonth
2084635   +          +     0.12789679291219 * S_Recency  +    -0.39270105014448 *
2084636   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.32435248899543 * S_Income + -0.47929849648429 * S_Kidhome + 
0.13364230231465 * S_MntFishProducts + -0.1386717864506 * S_MntFruits + -0.02769770185129 * 
S_MntGoldProds + -0.29009812234724 * S_MntMeatProducts + -0.10871064476617 * 
S_MntSweetProducts + 0.57858611197719 * S_MntWines + -0.26900817180555 * S_NumCatalogPurchases 
+ -0.39598523430317 * S_NumDealsPurchases + 0.52835897625366 * S_NumStorePurchases + 
0.66297635444958 * S_NumWebPurchases + -0.31727971903608 * S_NumWebVisitsMonth + 
0.12789679291219 * S_Recency + -0.39270105014448 * S_Teenhome ;
2084637   +   H12  =     0.37777254641249 * S_Income  +     0.79199857244438 * S_Kidhome
2084638   +          +     0.14748983783528 * S_MntFishProducts
2084639   +          +     0.14994032216514 * S_MntFruits  +     0.19147871752132 *
2084640   +        S_MntGoldProds  +     0.80535213270443 * S_MntMeatProducts
2084641   +          +     0.31095426478608 * S_MntSweetProducts
2084642   +          +     0.00471809437476 * S_MntWines  +     0.93716396534802 *
2084643   +        S_NumCatalogPurchases  +     0.86841248727948 * S_NumDealsPurchases
2084644   +          +     0.14387100066933 * S_NumStorePurchases
2084645   +          +    -0.01648998884133 * S_NumWebPurchases
2084646   +          +     -0.1378597161576 * S_NumWebVisitsMonth
2084647   +          +     0.15850653387379 * S_Recency  +     0.11714339614827 *
2084648   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = 0.37777254641249 * S_Income + 0.79199857244438 * S_Kidhome + 
0.14748983783528 * S_MntFishProducts + 0.14994032216514 * S_MntFruits + 0.19147871752132 * 
S_MntGoldProds + 0.80535213270443 * S_MntMeatProducts + 0.31095426478608 * S_MntSweetProducts 
+ 0.00471809437476 * S_MntWines + 0.93716396534802 * S_NumCatalogPurchases + 0.86841248727948 
* S_NumDealsPurchases + 0.14387100066933 * S_NumStorePurchases + -0.01648998884133 * 
S_NumWebPurchases + -0.1378597161576 * S_NumWebVisitsMonth + 0.15850653387379 * S_Recency + 
0.11714339614827 * S_Teenhome ;
2084649   +   H13  =    -0.31490756773649 * S_Income  +      0.4776214738577 * S_Kidhome
2084650   +          +     0.00774185404534 * S_MntFishProducts
2084651   +          +     0.22292845341942 * S_MntFruits  +     0.11636422687317 *
2084652   +        S_MntGoldProds  +    -0.45522230281212 * S_MntMeatProducts
2084653   +          +     0.28728624268589 * S_MntSweetProducts
2084654   +          +     0.74892928025295 * S_MntWines  +     -0.4834082773325 *
2084655   +        S_NumCatalogPurchases  +    -0.05055717315946 * S_NumDealsPurchases
2084656   +          +     0.56446566213593 * S_NumStorePurchases
2084657   +          +     0.44547549135846 * S_NumWebPurchases
2084658   +          +    -1.17648505936662 * S_NumWebVisitsMonth
2084659   +          +     1.30076355226685 * S_Recency  +     0.56217939635691 *
2084660   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = -0.31490756773649 * S_Income + 0.4776214738577 * S_Kidhome + 
0.00774185404534 * S_MntFishProducts + 0.22292845341942 * S_MntFruits + 0.11636422687317 * 
S_MntGoldProds + -0.45522230281212 * S_MntMeatProducts + 0.28728624268589 * S_MntSweetProducts 
+ 0.74892928025295 * S_MntWines + -0.4834082773325 * S_NumCatalogPurchases + -0.05055717315946 
* S_NumDealsPurchases + 0.56446566213593 * S_NumStorePurchases + 0.44547549135846 * 
S_NumWebPurchases + -1.17648505936662 * S_NumWebVisitsMonth + 1.30076355226685 * S_Recency + 
0.56217939635691 * S_Teenhome ;
2084661   +   H14  =    -0.40179905952719 * S_Income  +     0.16141565212918 * S_Kidhome
2084662   +          +     0.24665716882586 * S_MntFishProducts
2084663   +          +     0.03410629332469 * S_MntFruits  +     -0.1353295645077 *
2084664   +        S_MntGoldProds  +    -0.74661391150362 * S_MntMeatProducts
2084665   +          +    -0.10530818594736 * S_MntSweetProducts
2084666   +          +     0.30618479493194 * S_MntWines  +    -0.63426712804061 *
2084667   +        S_NumCatalogPurchases  +    -0.39486403699564 * S_NumDealsPurchases
2084668   +          +     0.36617016651032 * S_NumStorePurchases
2084669   +          +      0.3580014320946 * S_NumWebPurchases
2084670   +          +    -0.72597289213724 * S_NumWebVisitsMonth
2084671   +          +     0.93272927444012 * S_Recency  +     0.24531402677279 *
2084672   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = -0.40179905952719 * S_Income + 0.16141565212918 * S_Kidhome + 
0.24665716882586 * S_MntFishProducts + 0.03410629332469 * S_MntFruits + -0.1353295645077 * 
S_MntGoldProds + -0.74661391150362 * S_MntMeatProducts + -0.10530818594736 * 
S_MntSweetProducts + 0.30618479493194 * S_MntWines + -0.63426712804061 * S_NumCatalogPurchases 
+ -0.39486403699564 * S_NumDealsPurchases + 0.36617016651032 * S_NumStorePurchases + 
0.3580014320946 * S_NumWebPurchases + -0.72597289213724 * S_NumWebVisitsMonth + 
0.93272927444012 * S_Recency + 0.24531402677279 * S_Teenhome ;
2084673   +   H11  = H11  +     0.10790306691381 * AcceptedCmp10
2084674   +          +     0.36067546675468 * AcceptedCmp20  +     0.56838342781466 *
2084675   +        AcceptedCmp30  +     0.10138997954661 * AcceptedCmp40
2084676   +          +     0.23809874960179 * AcceptedCmp50  +     0.42164522965364 *
2084677   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.10790306691381 * AcceptedCmp10 + 0.36067546675468 * 
AcceptedCmp20 + 0.56838342781466 * AcceptedCmp30 + 0.10138997954661 * AcceptedCmp40 + 
0.23809874960179 * AcceptedCmp50 + 0.42164522965364 * Complain0 ;
2084678   +   H12  = H12  +    -0.10342435301564 * AcceptedCmp10
2084679   +          +     -0.1021625473908 * AcceptedCmp20  +    -0.17400073301804 *
2084680   +        AcceptedCmp30  +      0.1295257925186 * AcceptedCmp40
2084681   +          +    -0.17149939617806 * AcceptedCmp50  +    -0.11843709761825 *
2084682   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.10342435301564 * AcceptedCmp10 + -0.1021625473908 * 
AcceptedCmp20 + -0.17400073301804 * AcceptedCmp30 + 0.1295257925186 * AcceptedCmp40 + 
-0.17149939617806 * AcceptedCmp50 + -0.11843709761825 * Complain0 ;
2084683   +   H13  = H13  +      0.3357459370893 * AcceptedCmp10
2084684   +          +      -0.142120215863 * AcceptedCmp20  +     0.74265608697316 *
2084685   +        AcceptedCmp30  +     0.62493796040954 * AcceptedCmp40
2084686   +          +     0.60033091776267 * AcceptedCmp50  +    -0.70537393421868 *
2084687   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.3357459370893 * AcceptedCmp10 + -0.142120215863 * 
AcceptedCmp20 + 0.74265608697316 * AcceptedCmp30 + 0.62493796040954 * AcceptedCmp40 + 
0.60033091776267 * AcceptedCmp50 + -0.70537393421868 * Complain0 ;
2084688   +   H14  = H14  +     0.52427760948235 * AcceptedCmp10
2084689   +          +     0.50852083885302 * AcceptedCmp20  +     0.30116257238429 *
2084690   +        AcceptedCmp30  +     0.31213749631365 * AcceptedCmp40
2084691   +          +     0.49344261660916 * AcceptedCmp50  +    -0.18226921500969 *
2084692   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.52427760948235 * AcceptedCmp10 + 0.50852083885302 * 
AcceptedCmp20 + 0.30116257238429 * AcceptedCmp30 + 0.31213749631365 * AcceptedCmp40 + 
0.49344261660916 * AcceptedCmp50 + -0.18226921500969 * Complain0 ;
2084693   +   H11  = H11  +     0.04284090874847 * Education2n_Cycle
2084694   +          +    -0.30425860762413 * EducationBasic  +    -0.44977960705402 *
2084695   +        EducationGraduation  +     -0.0712759822621 * EducationMaster
2084696   +          +     0.05171313818048 * Marital_StatusDivorced
2084697   +          +    -0.79112453157624 * Marital_StatusMarried
2084698   +          +     0.89650138723512 * Marital_StatusSingle
2084699   +          +    -0.22094240412913 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.04284090874847 * Education2n_Cycle + -0.30425860762413 * 
EducationBasic + -0.44977960705402 * EducationGraduation + -0.0712759822621 * EducationMaster 
+ 0.05171313818048 * Marital_StatusDivorced + -0.79112453157624 * Marital_StatusMarried + 
0.89650138723512 * Marital_StatusSingle + -0.22094240412913 * Marital_StatusTogether ;
2084700   +   H12  = H12  +    -0.32431446530898 * Education2n_Cycle
2084701   +          +     0.04651949620543 * EducationBasic  +     0.50250608857106 *
2084702   +        EducationGraduation  +     0.00514401910219 * EducationMaster
2084703   +          +     0.05091092042416 * Marital_StatusDivorced
2084704   +          +     0.86642985712339 * Marital_StatusMarried
2084705   +          +    -0.14148832619997 * Marital_StatusSingle
2084706   +          +     0.54248977280079 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.32431446530898 * Education2n_Cycle + 0.04651949620543 * 
EducationBasic + 0.50250608857106 * EducationGraduation + 0.00514401910219 * EducationMaster + 
0.05091092042416 * Marital_StatusDivorced + 0.86642985712339 * Marital_StatusMarried + 
-0.14148832619997 * Marital_StatusSingle + 0.54248977280079 * Marital_StatusTogether ;
2084707   +   H13  = H13  +      0.0307333873684 * Education2n_Cycle
2084708   +          +     0.54778728297045 * EducationBasic  +    -0.56032296783121 *
2084709   +        EducationGraduation  +     0.26811389967146 * EducationMaster
2084710   +          +    -0.67787102917679 * Marital_StatusDivorced
2084711   +          +     1.38931504762816 * Marital_StatusMarried
2084712   +          +    -0.51164629287485 * Marital_StatusSingle
2084713   +          +     1.18856608313733 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.0307333873684 * Education2n_Cycle + 0.54778728297045 * 
EducationBasic + -0.56032296783121 * EducationGraduation + 0.26811389967146 * EducationMaster 
+ -0.67787102917679 * Marital_StatusDivorced + 1.38931504762816 * Marital_StatusMarried + 
-0.51164629287485 * Marital_StatusSingle + 1.18856608313733 * Marital_StatusTogether ;
2084714   +   H14  = H14  +    -0.07575289231798 * Education2n_Cycle
2084715   +          +     0.20678548929493 * EducationBasic  +     0.15952949579281 *
2084716   +        EducationGraduation  +    -0.08313247341922 * EducationMaster
2084717   +          +     0.12658153975639 * Marital_StatusDivorced
2084718   +          +     0.20111721742791 * Marital_StatusMarried
2084719   +          +     -0.3521524791648 * Marital_StatusSingle
2084720   +          +     0.24908846940254 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.07575289231798 * Education2n_Cycle + 0.20678548929493 * 
EducationBasic + 0.15952949579281 * EducationGraduation + -0.08313247341922 * EducationMaster 
+ 0.12658153975639 * Marital_StatusDivorced + 0.20111721742791 * Marital_StatusMarried + 
-0.3521524791648 * Marital_StatusSingle + 0.24908846940254 * Marital_StatusTogether ;
2084721   +   H11  =      0.8846003542153 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 0.8846003542153 + H11 ;
2084722   +   H12  =      1.7793661863354 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 1.7793661863354 + H12 ;
2084723   +   H13  =    -0.73914187312129 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.73914187312129 + H13 ;
2084724   +   H14  =    -0.28907220457418 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = -0.28907220457418 + H14 ;
2084725   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
2084726   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
2084727   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
2084728   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
2084729   +END;
MPRINT(EM_DIAGRAM):   END;
2084730   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2084731   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
2084732   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
2084733   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
2084734   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
2084735   +END;
MPRINT(EM_DIAGRAM):   END;
2084736   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2084737   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2084738   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2084739   +
2084740   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
2084741   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
2084742   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2084743   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
2084744   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
2084745   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2084746   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
2084747   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2084748   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2084749   +end;
MPRINT(EM_DIAGRAM):   end;
2084750   +else do;
MPRINT(EM_DIAGRAM):   else do;
2084751   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
2084752   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
2084753   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
2084754   +   end;
MPRINT(EM_DIAGRAM):   end;
2084755   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
2084756   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
2084757   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
2084758   +   end;
MPRINT(EM_DIAGRAM):   end;
2084759   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2084760   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2084761   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2084762   +   end;
MPRINT(EM_DIAGRAM):   end;
2084763   +end;
MPRINT(EM_DIAGRAM):   end;
2084764   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2084765   +   P_DepVar1  =    -1.84303414221873 * H11  +     1.56062653143645 * H12
2084766   +          +     -3.0630784922123 * H13  +    -4.55573659919551 * H14 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.84303414221873 * H11 + 1.56062653143645 * H12 + 
-3.0630784922123 * H13 + -4.55573659919551 * H14 ;
2084767   +   P_DepVar1  =    -1.51714888392638 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.51714888392638 + P_DepVar1 ;
2084768   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2084769   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2084770   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2084771   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2084772   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2084773   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2084774   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2084775   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2084776   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2084777   +END;
MPRINT(EM_DIAGRAM):   END;
2084778   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2084779   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2084780   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2084781   +END;
MPRINT(EM_DIAGRAM):   END;
2084782   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2084783   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2084784   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2084785   +END;
MPRINT(EM_DIAGRAM):   END;
2084786   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
2084787   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
2084788   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
2084789   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
2084790   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
2084791   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
2084792   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
2084793   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2084794   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2084795   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2084796   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2084797   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2084798   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2084799   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2084800   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2084801   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2084802   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2084803   +END;
MPRINT(EM_DIAGRAM):   END;
2084804   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2084805   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2084806   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2084807   +drop
2084808   +H11
2084809   +H12
2084810   +H13
2084811   +H14
2084812   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 ;
2084813   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
2084814   +* Renaming variables for Neural33;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural33;
2084815   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2084816   +* Renaming Posterior variables for Neural33;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural33;
2084817   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2084818   +drop Neural33_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural33_P_DepVar1;
2084819   +Neural33_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural33_P_DepVar1 = P_DepVar1;
2084820   +drop Neural33_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural33_P_DepVar0;
2084821   +Neural33_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural33_P_DepVar0 = P_DepVar0;
2084822   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2084823   +* Renaming _WARN_ variable for Neural33;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural33;
2084824   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2084825   +length Neural33_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural33_WARN_ $4;
2084826   +drop Neural33_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural33_WARN_;
2084827   +Neural33_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural33_WARN_ = _WARN_;
2084828   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2084829   +* Ensmbl9: Scoring Code of model 8 of 10;
MPRINT(EM_DIAGRAM):   * Ensmbl9: Scoring Code of model 8 of 10;
2084830   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2084831   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2084832   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
2084833   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
2084834   +* NODE: Neural32;
MPRINT(EM_DIAGRAM):   * NODE: Neural32;
2084835   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2084836   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2084837   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2084838   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2084839   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2084840   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2084841   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2084842   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2084843   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2084844   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2084845   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2084846   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2084847   +LENGTH _WARN_ $4
2084848   +      F_DepVar  $ 12
2084849   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
2084850   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2084851   +
2084852   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2084853   +
2084854   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2084855   +
2084856   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2084857   +
2084858   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2084859   +
2084860   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2084861   +
2084862   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2084863   +
2084864   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2084865   +
2084866   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2084867   +
2084868   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2084869   +
2084870   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2084871   +
2084872   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2084873   +
2084874   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2084875   +
2084876   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2084877   +
2084878   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2084879   +
2084880   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2084881   +
2084882   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2084883   +
2084884   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2084885   +
2084886   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2084887   +
2084888   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2084889   +
2084890   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2084891   +
2084892   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2084893   +
2084894   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2084895   +
2084896   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2084897   +
2084898   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2084899   +
2084900   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2084901   +
2084902   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2084903   +
2084904   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2084905   +
2084906   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2084907   +
2084908   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
2084909   +
2084910   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
2084911   +
2084912   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
2084913   +
2084914   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2084915   +
2084916   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2084917   +
2084918   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2084919   +
2084920   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2084921   +
2084922   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
2084923   +
2084924   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2084925   +
2084926   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
2084927   +
2084928   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2084929   +
2084930   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2084931   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2084932   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2084933   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2084934   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2084935   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2084936   +end;
MPRINT(EM_DIAGRAM):   end;
2084937   +else do;
MPRINT(EM_DIAGRAM):   else do;
2084938   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2084939   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2084940   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2084941   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2084942   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2084943   +   end;
MPRINT(EM_DIAGRAM):   end;
2084944   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2084945   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2084946   +   end;
MPRINT(EM_DIAGRAM):   end;
2084947   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2084948   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2084949   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2084950   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2084951   +   end;
MPRINT(EM_DIAGRAM):   end;
2084952   +end;
MPRINT(EM_DIAGRAM):   end;
2084953   +
2084954   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2084955   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2084956   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2084957   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2084958   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2084959   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2084960   +end;
MPRINT(EM_DIAGRAM):   end;
2084961   +else do;
MPRINT(EM_DIAGRAM):   else do;
2084962   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2084963   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2084964   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2084965   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2084966   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2084967   +   end;
MPRINT(EM_DIAGRAM):   end;
2084968   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2084969   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2084970   +   end;
MPRINT(EM_DIAGRAM):   end;
2084971   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2084972   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2084973   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2084974   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2084975   +   end;
MPRINT(EM_DIAGRAM):   end;
2084976   +end;
MPRINT(EM_DIAGRAM):   end;
2084977   +
2084978   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2084979   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2084980   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2084981   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2084982   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2084983   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2084984   +end;
MPRINT(EM_DIAGRAM):   end;
2084985   +else do;
MPRINT(EM_DIAGRAM):   else do;
2084986   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2084987   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2084988   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2084989   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2084990   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2084991   +   end;
MPRINT(EM_DIAGRAM):   end;
2084992   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2084993   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2084994   +   end;
MPRINT(EM_DIAGRAM):   end;
2084995   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2084996   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2084997   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2084998   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2084999   +   end;
MPRINT(EM_DIAGRAM):   end;
2085000   +end;
MPRINT(EM_DIAGRAM):   end;
2085001   +
2085002   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2085003   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2085004   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2085005   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2085006   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2085007   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2085008   +end;
MPRINT(EM_DIAGRAM):   end;
2085009   +else do;
MPRINT(EM_DIAGRAM):   else do;
2085010   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2085011   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2085012   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2085013   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2085014   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2085015   +   end;
MPRINT(EM_DIAGRAM):   end;
2085016   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2085017   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2085018   +   end;
MPRINT(EM_DIAGRAM):   end;
2085019   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2085020   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2085021   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2085022   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2085023   +   end;
MPRINT(EM_DIAGRAM):   end;
2085024   +end;
MPRINT(EM_DIAGRAM):   end;
2085025   +
2085026   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2085027   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2085028   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2085029   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2085030   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2085031   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2085032   +end;
MPRINT(EM_DIAGRAM):   end;
2085033   +else do;
MPRINT(EM_DIAGRAM):   else do;
2085034   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2085035   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2085036   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2085037   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2085038   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2085039   +   end;
MPRINT(EM_DIAGRAM):   end;
2085040   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2085041   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2085042   +   end;
MPRINT(EM_DIAGRAM):   end;
2085043   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2085044   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2085045   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2085046   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2085047   +   end;
MPRINT(EM_DIAGRAM):   end;
2085048   +end;
MPRINT(EM_DIAGRAM):   end;
2085049   +
2085050   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2085051   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2085052   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2085053   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2085054   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2085055   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2085056   +end;
MPRINT(EM_DIAGRAM):   end;
2085057   +else do;
MPRINT(EM_DIAGRAM):   else do;
2085058   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2085059   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2085060   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2085061   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2085062   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2085063   +   end;
MPRINT(EM_DIAGRAM):   end;
2085064   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2085065   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2085066   +   end;
MPRINT(EM_DIAGRAM):   end;
2085067   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2085068   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2085069   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2085070   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2085071   +   end;
MPRINT(EM_DIAGRAM):   end;
2085072   +end;
MPRINT(EM_DIAGRAM):   end;
2085073   +
2085074   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2085075   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
2085076   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2085077   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2085078   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2085079   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2085080   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2085081   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2085082   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2085083   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2085084   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2085085   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2085086   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2085087   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2085088   +end;
MPRINT(EM_DIAGRAM):   end;
2085089   +else do;
MPRINT(EM_DIAGRAM):   else do;
2085090   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2085091   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2085092   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2085093   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2085094   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2085095   +   end;
MPRINT(EM_DIAGRAM):   end;
2085096   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2085097   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2085098   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2085099   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2085100   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2085101   +   end;
MPRINT(EM_DIAGRAM):   end;
2085102   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2085103   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2085104   +   end;
MPRINT(EM_DIAGRAM):   end;
2085105   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2085106   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2085107   +   end;
MPRINT(EM_DIAGRAM):   end;
2085108   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2085109   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2085110   +   end;
MPRINT(EM_DIAGRAM):   end;
2085111   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2085112   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2085113   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2085114   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2085115   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2085116   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2085117   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2085118   +   end;
MPRINT(EM_DIAGRAM):   end;
2085119   +end;
MPRINT(EM_DIAGRAM):   end;
2085120   +
2085121   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2085122   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2085123   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
2085124   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2085125   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2085126   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2085127   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2085128   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2085129   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2085130   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2085131   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2085132   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2085133   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2085134   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2085135   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2085136   +end;
MPRINT(EM_DIAGRAM):   end;
2085137   +else do;
MPRINT(EM_DIAGRAM):   else do;
2085138   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2085139   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2085140   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2085141   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2085142   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2085143   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2085144   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2085145   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2085146   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2085147   +         end;
MPRINT(EM_DIAGRAM):   end;
2085148   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2085149   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2085150   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2085151   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2085152   +            end;
MPRINT(EM_DIAGRAM):   end;
2085153   +         end;
MPRINT(EM_DIAGRAM):   end;
2085154   +      end;
MPRINT(EM_DIAGRAM):   end;
2085155   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2085156   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2085157   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2085158   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2085159   +         end;
MPRINT(EM_DIAGRAM):   end;
2085160   +      end;
MPRINT(EM_DIAGRAM):   end;
2085161   +   end;
MPRINT(EM_DIAGRAM):   end;
2085162   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2085163   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2085164   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2085165   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2085166   +      end;
MPRINT(EM_DIAGRAM):   end;
2085167   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2085168   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2085169   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2085170   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2085171   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2085172   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2085173   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2085174   +         end;
MPRINT(EM_DIAGRAM):   end;
2085175   +      end;
MPRINT(EM_DIAGRAM):   end;
2085176   +   end;
MPRINT(EM_DIAGRAM):   end;
2085177   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2085178   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2085179   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2085180   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2085181   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2085182   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2085183   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2085184   +   end;
MPRINT(EM_DIAGRAM):   end;
2085185   +end;
MPRINT(EM_DIAGRAM):   end;
2085186   +
2085187   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2085188   +*** Checking missing input Interval
2085189   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2085190   +
2085191   +IF NMISS(
2085192   +   Income ,
2085193   +   Kidhome ,
2085194   +   MntFishProducts ,
2085195   +   MntFruits ,
2085196   +   MntGoldProds ,
2085197   +   MntMeatProducts ,
2085198   +   MntSweetProducts ,
2085199   +   MntWines ,
2085200   +   NumCatalogPurchases ,
2085201   +   NumDealsPurchases ,
2085202   +   NumStorePurchases ,
2085203   +   NumWebPurchases ,
2085204   +   NumWebVisitsMonth ,
2085205   +   Recency ,
2085206   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Income , Kidhome , MntFishProducts , MntFruits , MntGoldProds 
, MntMeatProducts , MntSweetProducts , MntWines , NumCatalogPurchases , NumDealsPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , Recency , Teenhome ) THEN DO;
2085207   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2085208   +
2085209   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2085210   +END;
MPRINT(EM_DIAGRAM):   END;
2085211   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2085212   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
2085213   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2085214   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2085215   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2085216   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2085217   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2085218   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2085219   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2085220   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2085221   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2085222   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2085223   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2085224   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2085225   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2085226   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2085227   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2085228   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2085229   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2085230   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2085231   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2085232   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2085233   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2085234   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2085235   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2085236   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2085237   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2085238   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2085239   +END;
MPRINT(EM_DIAGRAM):   END;
2085240   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2085241   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2085242   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2085243   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2085244   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2085245   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2085246   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2085247   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2085248   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2085249   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2085250   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2085251   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2085252   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2085253   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
2085254   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2085255   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2085256   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2085257   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2085258   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2085259   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2085260   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2085261   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2085262   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2085263   +   ELSE S_NumCatalogPurchases
2085264   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2085265   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2085266   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2085267   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2085268   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2085269   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2085270   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2085271   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2085272   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2085273   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2085274   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2085275   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2085276   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2085277   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2085278   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2085279   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2085280   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2085281   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2085282   +END;
MPRINT(EM_DIAGRAM):   END;
2085283   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2085284   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
2085285   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2085286   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2085287   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
2085288   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2085289   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2085290   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
2085291   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2085292   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2085293   +   H11  =     1.40261108800308 * S_Income  +     -0.8062097507842 * S_Kidhome
2085294   +          +    -0.12974862644982 * S_MntFishProducts
2085295   +          +     0.08065642800368 * S_MntFruits  +    -0.12102130003972 *
2085296   +        S_MntGoldProds  +     0.19226249622126 * S_MntMeatProducts
2085297   +          +    -0.12290326901613 * S_MntSweetProducts
2085298   +          +     0.07790241176978 * S_MntWines  +     0.36123042724896 *
2085299   +        S_NumCatalogPurchases  +    -0.01034406765754 * S_NumDealsPurchases
2085300   +          +     0.09738032540137 * S_NumStorePurchases
2085301   +          +     0.44459515215205 * S_NumWebPurchases
2085302   +          +      0.8471075994578 * S_NumWebVisitsMonth
2085303   +          +    -1.10667985160899 * S_Recency  +    -0.88509832868515 *
2085304   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 1.40261108800308 * S_Income + -0.8062097507842 * S_Kidhome + 
-0.12974862644982 * S_MntFishProducts + 0.08065642800368 * S_MntFruits + -0.12102130003972 * 
S_MntGoldProds + 0.19226249622126 * S_MntMeatProducts + -0.12290326901613 * S_MntSweetProducts 
+ 0.07790241176978 * S_MntWines + 0.36123042724896 * S_NumCatalogPurchases + -0.01034406765754 
* S_NumDealsPurchases + 0.09738032540137 * S_NumStorePurchases + 0.44459515215205 * 
S_NumWebPurchases + 0.8471075994578 * S_NumWebVisitsMonth + -1.10667985160899 * S_Recency + 
-0.88509832868515 * S_Teenhome ;
2085305   +   H12  =     0.51266936686642 * S_Income  +     0.26909433357851 * S_Kidhome
2085306   +          +     0.02406077596811 * S_MntFishProducts
2085307   +          +    -0.57443793453522 * S_MntFruits  +     0.36824731232149 *
2085308   +        S_MntGoldProds  +     0.40177289143061 * S_MntMeatProducts
2085309   +          +     -0.1147507059349 * S_MntSweetProducts
2085310   +          +    -0.66379351187459 * S_MntWines  +     1.33407347415468 *
2085311   +        S_NumCatalogPurchases  +     1.00633891197299 * S_NumDealsPurchases
2085312   +          +    -0.23920969262322 * S_NumStorePurchases
2085313   +          +     -0.6008837862932 * S_NumWebPurchases
2085314   +          +     0.26759743722885 * S_NumWebVisitsMonth
2085315   +          +    -0.42755419464125 * S_Recency  +    -0.14471776361394 *
2085316   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = 0.51266936686642 * S_Income + 0.26909433357851 * S_Kidhome + 
0.02406077596811 * S_MntFishProducts + -0.57443793453522 * S_MntFruits + 0.36824731232149 * 
S_MntGoldProds + 0.40177289143061 * S_MntMeatProducts + -0.1147507059349 * S_MntSweetProducts 
+ -0.66379351187459 * S_MntWines + 1.33407347415468 * S_NumCatalogPurchases + 1.00633891197299 
* S_NumDealsPurchases + -0.23920969262322 * S_NumStorePurchases + -0.6008837862932 * 
S_NumWebPurchases + 0.26759743722885 * S_NumWebVisitsMonth + -0.42755419464125 * S_Recency + 
-0.14471776361394 * S_Teenhome ;
2085317   +   H13  =    -0.19807308698832 * S_Income  +     0.25934675474849 * S_Kidhome
2085318   +          +     0.04398331533724 * S_MntFishProducts
2085319   +          +    -0.00090357598988 * S_MntFruits  +     0.05139545341773 *
2085320   +        S_MntGoldProds  +    -0.74617114336019 * S_MntMeatProducts
2085321   +          +     0.00552488718744 * S_MntSweetProducts
2085322   +          +     0.47194407197012 * S_MntWines  +    -0.35149551848487 *
2085323   +        S_NumCatalogPurchases  +    -0.30232522133093 * S_NumDealsPurchases
2085324   +          +     0.60058189155105 * S_NumStorePurchases
2085325   +          +     0.51423374855856 * S_NumWebPurchases
2085326   +          +     -0.9075304423321 * S_NumWebVisitsMonth
2085327   +          +     0.83597739226791 * S_Recency  +     0.15783202762709 *
2085328   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = -0.19807308698832 * S_Income + 0.25934675474849 * S_Kidhome + 
0.04398331533724 * S_MntFishProducts + -0.00090357598988 * S_MntFruits + 0.05139545341773 * 
S_MntGoldProds + -0.74617114336019 * S_MntMeatProducts + 0.00552488718744 * S_MntSweetProducts 
+ 0.47194407197012 * S_MntWines + -0.35149551848487 * S_NumCatalogPurchases + 
-0.30232522133093 * S_NumDealsPurchases + 0.60058189155105 * S_NumStorePurchases + 
0.51423374855856 * S_NumWebPurchases + -0.9075304423321 * S_NumWebVisitsMonth + 
0.83597739226791 * S_Recency + 0.15783202762709 * S_Teenhome ;
2085329   +   H11  = H11  +    -0.26274045665457 * AcceptedCmp10
2085330   +          +    -0.86105702939371 * AcceptedCmp20  +    -0.50476270558977 *
2085331   +        AcceptedCmp30  +    -0.84284126473343 * AcceptedCmp40
2085332   +          +     0.19764907691314 * AcceptedCmp50  +    -0.29305577412263 *
2085333   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.26274045665457 * AcceptedCmp10 + -0.86105702939371 * 
AcceptedCmp20 + -0.50476270558977 * AcceptedCmp30 + -0.84284126473343 * AcceptedCmp40 + 
0.19764907691314 * AcceptedCmp50 + -0.29305577412263 * Complain0 ;
2085334   +   H12  = H12  +    -0.27394139847883 * AcceptedCmp10
2085335   +          +    -0.14688750266104 * AcceptedCmp20  +    -0.27982299242327 *
2085336   +        AcceptedCmp30  +    -0.10465140408787 * AcceptedCmp40
2085337   +          +    -0.81681330244218 * AcceptedCmp50  +    -0.28152730217644 *
2085338   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.27394139847883 * AcceptedCmp10 + -0.14688750266104 * 
AcceptedCmp20 + -0.27982299242327 * AcceptedCmp30 + -0.10465140408787 * AcceptedCmp40 + 
-0.81681330244218 * AcceptedCmp50 + -0.28152730217644 * Complain0 ;
2085339   +   H13  = H13  +     0.42310780831005 * AcceptedCmp10
2085340   +          +     0.41337614261155 * AcceptedCmp20  +     0.41436520641821 *
2085341   +        AcceptedCmp30  +     0.08914989208239 * AcceptedCmp40
2085342   +          +     0.54013759697695 * AcceptedCmp50  +    -0.19478210268955 *
2085343   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.42310780831005 * AcceptedCmp10 + 0.41337614261155 * 
AcceptedCmp20 + 0.41436520641821 * AcceptedCmp30 + 0.08914989208239 * AcceptedCmp40 + 
0.54013759697695 * AcceptedCmp50 + -0.19478210268955 * Complain0 ;
2085344   +   H11  = H11  +     0.40331200702699 * Education2n_Cycle
2085345   +          +     0.17202421641945 * EducationBasic  +    -0.29654161092174 *
2085346   +        EducationGraduation  +     -0.4835104183635 * EducationMaster
2085347   +          +     0.52129580188513 * Marital_StatusDivorced
2085348   +          +     -1.5224490339553 * Marital_StatusMarried
2085349   +          +     1.05062906057771 * Marital_StatusSingle
2085350   +          +    -1.16420887937635 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.40331200702699 * Education2n_Cycle + 0.17202421641945 * 
EducationBasic + -0.29654161092174 * EducationGraduation + -0.4835104183635 * EducationMaster 
+ 0.52129580188513 * Marital_StatusDivorced + -1.5224490339553 * Marital_StatusMarried + 
1.05062906057771 * Marital_StatusSingle + -1.16420887937635 * Marital_StatusTogether ;
2085351   +   H12  = H12  +     -0.3488928858263 * Education2n_Cycle
2085352   +          +     0.38279680594423 * EducationBasic  +     0.20376044836519 *
2085353   +        EducationGraduation  +     0.20697694670185 * EducationMaster
2085354   +          +    -0.14428158063317 * Marital_StatusDivorced
2085355   +          +     0.22396926143356 * Marital_StatusMarried
2085356   +          +    -0.12980854818876 * Marital_StatusSingle
2085357   +          +     0.32607015627906 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.3488928858263 * Education2n_Cycle + 0.38279680594423 * 
EducationBasic + 0.20376044836519 * EducationGraduation + 0.20697694670185 * EducationMaster + 
-0.14428158063317 * Marital_StatusDivorced + 0.22396926143356 * Marital_StatusMarried + 
-0.12980854818876 * Marital_StatusSingle + 0.32607015627906 * Marital_StatusTogether ;
2085358   +   H13  = H13  +    -0.18351418824199 * Education2n_Cycle
2085359   +          +     0.53417952447263 * EducationBasic  +    -0.14333929289628 *
2085360   +        EducationGraduation  +     0.04513004774082 * EducationMaster
2085361   +          +    -0.25615797303064 * Marital_StatusDivorced
2085362   +          +     0.18825506199046 * Marital_StatusMarried
2085363   +          +    -0.24607556819871 * Marital_StatusSingle
2085364   +          +     0.29531673844201 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.18351418824199 * Education2n_Cycle + 0.53417952447263 * 
EducationBasic + -0.14333929289628 * EducationGraduation + 0.04513004774082 * EducationMaster 
+ -0.25615797303064 * Marital_StatusDivorced + 0.18825506199046 * Marital_StatusMarried + 
-0.24607556819871 * Marital_StatusSingle + 0.29531673844201 * Marital_StatusTogether ;
2085365   +   H11  =    -1.29289362679377 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -1.29289362679377 + H11 ;
2085366   +   H12  =     0.88724419151235 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.88724419151235 + H12 ;
2085367   +   H13  =    -0.51194544699467 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.51194544699467 + H13 ;
2085368   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
2085369   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
2085370   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
2085371   +END;
MPRINT(EM_DIAGRAM):   END;
2085372   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2085373   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
2085374   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
2085375   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
2085376   +END;
MPRINT(EM_DIAGRAM):   END;
2085377   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2085378   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2085379   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2085380   +
2085381   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
2085382   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
2085383   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2085384   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
2085385   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
2085386   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2085387   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
2085388   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2085389   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2085390   +end;
MPRINT(EM_DIAGRAM):   end;
2085391   +else do;
MPRINT(EM_DIAGRAM):   else do;
2085392   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
2085393   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
2085394   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
2085395   +   end;
MPRINT(EM_DIAGRAM):   end;
2085396   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
2085397   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
2085398   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
2085399   +   end;
MPRINT(EM_DIAGRAM):   end;
2085400   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2085401   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2085402   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2085403   +   end;
MPRINT(EM_DIAGRAM):   end;
2085404   +end;
MPRINT(EM_DIAGRAM):   end;
2085405   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2085406   +   P_DepVar1  =     4.44251020865882 * H11  +     2.67139161773156 * H12
2085407   +          +    -4.73549395111184 * H13 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 4.44251020865882 * H11 + 2.67139161773156 * H12 + 
-4.73549395111184 * H13 ;
2085408   +   P_DepVar1  =     0.45492690116644 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.45492690116644 + P_DepVar1 ;
2085409   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2085410   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2085411   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2085412   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2085413   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2085414   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2085415   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2085416   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2085417   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2085418   +END;
MPRINT(EM_DIAGRAM):   END;
2085419   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2085420   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2085421   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2085422   +END;
MPRINT(EM_DIAGRAM):   END;
2085423   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2085424   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2085425   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2085426   +END;
MPRINT(EM_DIAGRAM):   END;
2085427   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
2085428   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
2085429   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
2085430   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
2085431   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
2085432   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
2085433   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
2085434   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2085435   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2085436   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2085437   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2085438   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2085439   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2085440   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2085441   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2085442   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2085443   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2085444   +END;
MPRINT(EM_DIAGRAM):   END;
2085445   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2085446   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2085447   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2085448   +drop
2085449   +H11
2085450   +H12
2085451   +H13
2085452   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 ;
2085453   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
2085454   +* Renaming variables for Neural32;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural32;
2085455   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2085456   +* Renaming Posterior variables for Neural32;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural32;
2085457   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2085458   +drop Neural32_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural32_P_DepVar1;
2085459   +Neural32_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural32_P_DepVar1 = P_DepVar1;
2085460   +drop Neural32_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural32_P_DepVar0;
2085461   +Neural32_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural32_P_DepVar0 = P_DepVar0;
2085462   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2085463   +* Renaming _WARN_ variable for Neural32;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural32;
2085464   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2085465   +length Neural32_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural32_WARN_ $4;
2085466   +drop Neural32_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural32_WARN_;
2085467   +Neural32_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural32_WARN_ = _WARN_;
2085468   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2085469   +* Ensmbl9: Scoring Code of model 9 of 10;
MPRINT(EM_DIAGRAM):   * Ensmbl9: Scoring Code of model 9 of 10;
2085470   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2085471   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2085472   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
2085473   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
2085474   +* NODE: Neural31;
MPRINT(EM_DIAGRAM):   * NODE: Neural31;
2085475   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2085476   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2085477   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2085478   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2085479   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2085480   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2085481   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2085482   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2085483   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2085484   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2085485   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2085486   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2085487   +LENGTH _WARN_ $4
2085488   +      F_DepVar  $ 12
2085489   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
2085490   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2085491   +
2085492   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2085493   +
2085494   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2085495   +
2085496   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2085497   +
2085498   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2085499   +
2085500   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2085501   +
2085502   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2085503   +
2085504   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2085505   +
2085506   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2085507   +
2085508   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2085509   +
2085510   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2085511   +
2085512   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2085513   +
2085514   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2085515   +
2085516   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2085517   +
2085518   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2085519   +
2085520   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2085521   +
2085522   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2085523   +
2085524   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2085525   +
2085526   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2085527   +
2085528   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2085529   +
2085530   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2085531   +
2085532   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2085533   +
2085534   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2085535   +
2085536   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2085537   +
2085538   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2085539   +
2085540   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2085541   +
2085542   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2085543   +
2085544   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2085545   +
2085546   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2085547   +
2085548   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
2085549   +
2085550   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
2085551   +
2085552   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2085553   +
2085554   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2085555   +
2085556   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2085557   +
2085558   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2085559   +
2085560   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
2085561   +
2085562   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2085563   +
2085564   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
2085565   +
2085566   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2085567   +
2085568   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2085569   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2085570   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2085571   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2085572   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2085573   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2085574   +end;
MPRINT(EM_DIAGRAM):   end;
2085575   +else do;
MPRINT(EM_DIAGRAM):   else do;
2085576   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2085577   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2085578   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2085579   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2085580   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2085581   +   end;
MPRINT(EM_DIAGRAM):   end;
2085582   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2085583   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2085584   +   end;
MPRINT(EM_DIAGRAM):   end;
2085585   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2085586   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2085587   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2085588   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2085589   +   end;
MPRINT(EM_DIAGRAM):   end;
2085590   +end;
MPRINT(EM_DIAGRAM):   end;
2085591   +
2085592   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2085593   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2085594   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2085595   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2085596   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2085597   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2085598   +end;
MPRINT(EM_DIAGRAM):   end;
2085599   +else do;
MPRINT(EM_DIAGRAM):   else do;
2085600   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2085601   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2085602   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2085603   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2085604   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2085605   +   end;
MPRINT(EM_DIAGRAM):   end;
2085606   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2085607   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2085608   +   end;
MPRINT(EM_DIAGRAM):   end;
2085609   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2085610   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2085611   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2085612   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2085613   +   end;
MPRINT(EM_DIAGRAM):   end;
2085614   +end;
MPRINT(EM_DIAGRAM):   end;
2085615   +
2085616   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2085617   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2085618   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2085619   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2085620   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2085621   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2085622   +end;
MPRINT(EM_DIAGRAM):   end;
2085623   +else do;
MPRINT(EM_DIAGRAM):   else do;
2085624   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2085625   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2085626   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2085627   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2085628   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2085629   +   end;
MPRINT(EM_DIAGRAM):   end;
2085630   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2085631   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2085632   +   end;
MPRINT(EM_DIAGRAM):   end;
2085633   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2085634   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2085635   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2085636   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2085637   +   end;
MPRINT(EM_DIAGRAM):   end;
2085638   +end;
MPRINT(EM_DIAGRAM):   end;
2085639   +
2085640   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2085641   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2085642   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2085643   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2085644   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2085645   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2085646   +end;
MPRINT(EM_DIAGRAM):   end;
2085647   +else do;
MPRINT(EM_DIAGRAM):   else do;
2085648   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2085649   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2085650   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2085651   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2085652   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2085653   +   end;
MPRINT(EM_DIAGRAM):   end;
2085654   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2085655   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2085656   +   end;
MPRINT(EM_DIAGRAM):   end;
2085657   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2085658   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2085659   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2085660   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2085661   +   end;
MPRINT(EM_DIAGRAM):   end;
2085662   +end;
MPRINT(EM_DIAGRAM):   end;
2085663   +
2085664   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2085665   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2085666   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2085667   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2085668   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2085669   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2085670   +end;
MPRINT(EM_DIAGRAM):   end;
2085671   +else do;
MPRINT(EM_DIAGRAM):   else do;
2085672   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
The SAS System

2085673   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2085674   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2085675   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2085676   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2085677   +   end;
MPRINT(EM_DIAGRAM):   end;
2085678   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2085679   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2085680   +   end;
MPRINT(EM_DIAGRAM):   end;
2085681   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2085682   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2085683   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2085684   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2085685   +   end;
MPRINT(EM_DIAGRAM):   end;
2085686   +end;
MPRINT(EM_DIAGRAM):   end;
2085687   +
2085688   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2085689   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2085690   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2085691   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2085692   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2085693   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2085694   +end;
MPRINT(EM_DIAGRAM):   end;
2085695   +else do;
MPRINT(EM_DIAGRAM):   else do;
2085696   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2085697   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2085698   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2085699   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2085700   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2085701   +   end;
MPRINT(EM_DIAGRAM):   end;
2085702   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2085703   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2085704   +   end;
MPRINT(EM_DIAGRAM):   end;
2085705   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2085706   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2085707   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2085708   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2085709   +   end;
MPRINT(EM_DIAGRAM):   end;
2085710   +end;
MPRINT(EM_DIAGRAM):   end;
2085711   +
2085712   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2085713   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
2085714   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2085715   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2085716   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2085717   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2085718   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2085719   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2085720   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2085721   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2085722   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2085723   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2085724   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2085725   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2085726   +end;
MPRINT(EM_DIAGRAM):   end;
2085727   +else do;
MPRINT(EM_DIAGRAM):   else do;
2085728   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2085729   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2085730   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2085731   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2085732   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2085733   +   end;
MPRINT(EM_DIAGRAM):   end;
2085734   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2085735   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2085736   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2085737   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2085738   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2085739   +   end;
MPRINT(EM_DIAGRAM):   end;
2085740   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2085741   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2085742   +   end;
MPRINT(EM_DIAGRAM):   end;
2085743   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2085744   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2085745   +   end;
MPRINT(EM_DIAGRAM):   end;
2085746   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2085747   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2085748   +   end;
MPRINT(EM_DIAGRAM):   end;
2085749   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2085750   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2085751   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2085752   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2085753   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2085754   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2085755   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2085756   +   end;
MPRINT(EM_DIAGRAM):   end;
2085757   +end;
MPRINT(EM_DIAGRAM):   end;
2085758   +
2085759   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2085760   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2085761   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
2085762   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2085763   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2085764   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2085765   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2085766   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2085767   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2085768   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2085769   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2085770   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2085771   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2085772   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2085773   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2085774   +end;
MPRINT(EM_DIAGRAM):   end;
2085775   +else do;
MPRINT(EM_DIAGRAM):   else do;
2085776   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2085777   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2085778   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2085779   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2085780   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2085781   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2085782   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2085783   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2085784   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2085785   +         end;
MPRINT(EM_DIAGRAM):   end;
2085786   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2085787   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2085788   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2085789   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2085790   +            end;
MPRINT(EM_DIAGRAM):   end;
2085791   +         end;
MPRINT(EM_DIAGRAM):   end;
2085792   +      end;
MPRINT(EM_DIAGRAM):   end;
2085793   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2085794   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2085795   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2085796   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2085797   +         end;
MPRINT(EM_DIAGRAM):   end;
2085798   +      end;
MPRINT(EM_DIAGRAM):   end;
2085799   +   end;
MPRINT(EM_DIAGRAM):   end;
2085800   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2085801   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2085802   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2085803   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2085804   +      end;
MPRINT(EM_DIAGRAM):   end;
2085805   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2085806   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2085807   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2085808   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2085809   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2085810   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2085811   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2085812   +         end;
MPRINT(EM_DIAGRAM):   end;
2085813   +      end;
MPRINT(EM_DIAGRAM):   end;
2085814   +   end;
MPRINT(EM_DIAGRAM):   end;
2085815   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2085816   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2085817   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2085818   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2085819   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2085820   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2085821   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2085822   +   end;
MPRINT(EM_DIAGRAM):   end;
2085823   +end;
MPRINT(EM_DIAGRAM):   end;
2085824   +
2085825   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2085826   +*** Checking missing input Interval
2085827   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2085828   +
2085829   +IF NMISS(
2085830   +   Income ,
2085831   +   Kidhome ,
2085832   +   MntFishProducts ,
2085833   +   MntFruits ,
2085834   +   MntGoldProds ,
2085835   +   MntMeatProducts ,
2085836   +   MntSweetProducts ,
2085837   +   MntWines ,
2085838   +   NumCatalogPurchases ,
2085839   +   NumDealsPurchases ,
2085840   +   NumStorePurchases ,
2085841   +   NumWebPurchases ,
2085842   +   NumWebVisitsMonth ,
2085843   +   Recency ,
2085844   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Income , Kidhome , MntFishProducts , MntFruits , MntGoldProds 
, MntMeatProducts , MntSweetProducts , MntWines , NumCatalogPurchases , NumDealsPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , Recency , Teenhome ) THEN DO;
2085845   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2085846   +
2085847   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2085848   +END;
MPRINT(EM_DIAGRAM):   END;
2085849   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2085850   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
2085851   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2085852   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2085853   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2085854   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2085855   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2085856   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2085857   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2085858   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2085859   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2085860   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2085861   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2085862   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2085863   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2085864   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2085865   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2085866   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2085867   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2085868   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2085869   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2085870   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2085871   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2085872   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2085873   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2085874   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2085875   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2085876   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2085877   +END;
MPRINT(EM_DIAGRAM):   END;
2085878   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2085879   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2085880   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2085881   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2085882   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2085883   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2085884   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2085885   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2085886   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2085887   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2085888   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2085889   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2085890   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2085891   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
2085892   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2085893   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2085894   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2085895   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2085896   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2085897   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2085898   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2085899   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2085900   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2085901   +   ELSE S_NumCatalogPurchases
2085902   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2085903   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2085904   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2085905   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2085906   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2085907   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2085908   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2085909   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2085910   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2085911   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2085912   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2085913   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2085914   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2085915   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2085916   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2085917   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2085918   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2085919   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2085920   +END;
MPRINT(EM_DIAGRAM):   END;
2085921   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2085922   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
2085923   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2085924   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2085925   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
2085926   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2085927   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2085928   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
2085929   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2085930   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2085931   +   H11  =    -1.33502235588914 * S_Income  +     0.86914778071024 * S_Kidhome
2085932   +          +     0.06177226616611 * S_MntFishProducts
2085933   +          +     0.22465531888584 * S_MntFruits  +    -0.01216018017424 *
2085934   +        S_MntGoldProds  +    -0.10435601171346 * S_MntMeatProducts
2085935   +          +     0.19245635559754 * S_MntSweetProducts
2085936   +          +    -0.06473329764962 * S_MntWines  +    -0.40260570275107 *
2085937   +        S_NumCatalogPurchases  +    -0.01043435397255 * S_NumDealsPurchases
2085938   +          +    -0.35392759932805 * S_NumStorePurchases
2085939   +          +     -0.2443007642616 * S_NumWebPurchases
2085940   +          +    -0.72667572173837 * S_NumWebVisitsMonth
2085941   +          +     0.97336679863544 * S_Recency  +     0.72544205905496 *
2085942   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = -1.33502235588914 * S_Income + 0.86914778071024 * S_Kidhome + 
0.06177226616611 * S_MntFishProducts + 0.22465531888584 * S_MntFruits + -0.01216018017424 * 
S_MntGoldProds + -0.10435601171346 * S_MntMeatProducts + 0.19245635559754 * S_MntSweetProducts 
+ -0.06473329764962 * S_MntWines + -0.40260570275107 * S_NumCatalogPurchases + 
-0.01043435397255 * S_NumDealsPurchases + -0.35392759932805 * S_NumStorePurchases + 
-0.2443007642616 * S_NumWebPurchases + -0.72667572173837 * S_NumWebVisitsMonth + 
0.97336679863544 * S_Recency + 0.72544205905496 * S_Teenhome ;
2085943   +   H12  =    -0.09105644521483 * S_Income  +     0.01920168996111 * S_Kidhome
2085944   +          +     0.00012212205827 * S_MntFishProducts
2085945   +          +     0.00032664246198 * S_MntFruits  +    -0.02161363659377 *
2085946   +        S_MntGoldProds  +    -0.40917729724893 * S_MntMeatProducts
2085947   +          +     0.01459978689352 * S_MntSweetProducts
2085948   +          +     0.28732983017398 * S_MntWines  +    -0.26033282919423 *
2085949   +        S_NumCatalogPurchases  +      -0.306688498482 * S_NumDealsPurchases
2085950   +          +      0.4054643699817 * S_NumStorePurchases
2085951   +          +     0.27747327375374 * S_NumWebPurchases
2085952   +          +    -0.31325270852641 * S_NumWebVisitsMonth
2085953   +          +      0.3707065492652 * S_Recency  +     0.05681262835219 *
2085954   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -0.09105644521483 * S_Income + 0.01920168996111 * S_Kidhome + 
0.00012212205827 * S_MntFishProducts + 0.00032664246198 * S_MntFruits + -0.02161363659377 * 
S_MntGoldProds + -0.40917729724893 * S_MntMeatProducts + 0.01459978689352 * S_MntSweetProducts 
+ 0.28732983017398 * S_MntWines + -0.26033282919423 * S_NumCatalogPurchases + -0.306688498482 
* S_NumDealsPurchases + 0.4054643699817 * S_NumStorePurchases + 0.27747327375374 * 
S_NumWebPurchases + -0.31325270852641 * S_NumWebVisitsMonth + 0.3707065492652 * S_Recency + 
0.05681262835219 * S_Teenhome ;
2085955   +   H11  = H11  +     0.23904403737743 * AcceptedCmp10
2085956   +          +     0.12365860406863 * AcceptedCmp20  +     0.28547657706908 *
2085957   +        AcceptedCmp30  +     0.37587337003909 * AcceptedCmp40
2085958   +          +    -0.04113029526683 * AcceptedCmp50  +      0.2596440604013 *
2085959   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.23904403737743 * AcceptedCmp10 + 0.12365860406863 * 
AcceptedCmp20 + 0.28547657706908 * AcceptedCmp30 + 0.37587337003909 * AcceptedCmp40 + 
-0.04113029526683 * AcceptedCmp50 + 0.2596440604013 * Complain0 ;
2085960   +   H12  = H12  +     0.25336773034662 * AcceptedCmp10
2085961   +          +     0.39499004620022 * AcceptedCmp20  +     0.19852127214148 *
2085962   +        AcceptedCmp30  +     0.19215250383325 * AcceptedCmp40
2085963   +          +     0.27213364707939 * AcceptedCmp50  +    -0.00774901485124 *
2085964   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.25336773034662 * AcceptedCmp10 + 0.39499004620022 * 
AcceptedCmp20 + 0.19852127214148 * AcceptedCmp30 + 0.19215250383325 * AcceptedCmp40 + 
0.27213364707939 * AcceptedCmp50 + -0.00774901485124 * Complain0 ;
2085965   +   H11  = H11  +    -0.05263155952227 * Education2n_Cycle
2085966   +          +    -1.40124591386453 * EducationBasic  +     0.43501491332678 *
2085967   +        EducationGraduation  +     0.77305262508081 * EducationMaster
2085968   +          +    -0.43667846017683 * Marital_StatusDivorced
2085969   +          +     1.33507828005472 * Marital_StatusMarried
2085970   +          +    -0.75026283842664 * Marital_StatusSingle
2085971   +          +     0.84436594207558 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.05263155952227 * Education2n_Cycle + -1.40124591386453 * 
EducationBasic + 0.43501491332678 * EducationGraduation + 0.77305262508081 * EducationMaster + 
-0.43667846017683 * Marital_StatusDivorced + 1.33507828005472 * Marital_StatusMarried + 
-0.75026283842664 * Marital_StatusSingle + 0.84436594207558 * Marital_StatusTogether ;
2085972   +   H12  = H12  +     0.08398432584098 * Education2n_Cycle
2085973   +          +     0.12375156883157 * EducationBasic  +     -0.0901891766073 *
2085974   +        EducationGraduation  +    -0.07691770257441 * EducationMaster
2085975   +          +    -0.03531690128173 * Marital_StatusDivorced
2085976   +          +    -0.04344171367809 * Marital_StatusMarried
2085977   +          +    -0.05137362653166 * Marital_StatusSingle
2085978   +          +    -0.01265518570667 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.08398432584098 * Education2n_Cycle + 0.12375156883157 * 
EducationBasic + -0.0901891766073 * EducationGraduation + -0.07691770257441 * EducationMaster 
+ -0.03531690128173 * Marital_StatusDivorced + -0.04344171367809 * Marital_StatusMarried + 
-0.05137362653166 * Marital_StatusSingle + -0.01265518570667 * Marital_StatusTogether ;
2085979   +   H11  =     1.86846527977677 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 1.86846527977677 + H11 ;
2085980   +   H12  =    -0.42494263287735 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -0.42494263287735 + H12 ;
2085981   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
2085982   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
2085983   +END;
MPRINT(EM_DIAGRAM):   END;
2085984   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2085985   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
2085986   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
2085987   +END;
MPRINT(EM_DIAGRAM):   END;
2085988   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2085989   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2085990   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2085991   +
2085992   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
2085993   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
2085994   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2085995   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
2085996   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
2085997   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2085998   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
2085999   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2086000   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2086001   +end;
MPRINT(EM_DIAGRAM):   end;
2086002   +else do;
MPRINT(EM_DIAGRAM):   else do;
2086003   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
2086004   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
2086005   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
2086006   +   end;
MPRINT(EM_DIAGRAM):   end;
2086007   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
2086008   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
2086009   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
2086010   +   end;
MPRINT(EM_DIAGRAM):   end;
2086011   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2086012   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2086013   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2086014   +   end;
MPRINT(EM_DIAGRAM):   end;
2086015   +end;
MPRINT(EM_DIAGRAM):   end;
2086016   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2086017   +   P_DepVar1  =    -5.43090515434696 * H11  +    -9.08673127131886 * H12 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -5.43090515434696 * H11 + -9.08673127131886 * H12 ;
2086018   +   P_DepVar1  =      2.7752946076831 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 2.7752946076831 + P_DepVar1 ;
2086019   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2086020   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2086021   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2086022   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2086023   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2086024   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2086025   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2086026   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2086027   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2086028   +END;
MPRINT(EM_DIAGRAM):   END;
2086029   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2086030   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2086031   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2086032   +END;
MPRINT(EM_DIAGRAM):   END;
2086033   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2086034   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2086035   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2086036   +END;
MPRINT(EM_DIAGRAM):   END;
2086037   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
2086038   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
2086039   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
2086040   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
2086041   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
2086042   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
2086043   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
2086044   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2086045   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2086046   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2086047   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2086048   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2086049   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2086050   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2086051   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2086052   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2086053   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2086054   +END;
MPRINT(EM_DIAGRAM):   END;
2086055   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2086056   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2086057   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2086058   +drop
2086059   +H11
2086060   +H12
2086061   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 ;
2086062   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
2086063   +* Renaming variables for Neural31;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural31;
2086064   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2086065   +* Renaming Posterior variables for Neural31;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural31;
2086066   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2086067   +drop Neural31_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural31_P_DepVar1;
2086068   +Neural31_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural31_P_DepVar1 = P_DepVar1;
2086069   +drop Neural31_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural31_P_DepVar0;
2086070   +Neural31_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural31_P_DepVar0 = P_DepVar0;
2086071   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2086072   +* Renaming _WARN_ variable for Neural31;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural31;
2086073   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2086074   +length Neural31_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural31_WARN_ $4;
2086075   +drop Neural31_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural31_WARN_;
2086076   +Neural31_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural31_WARN_ = _WARN_;
2086077   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2086078   +* Ensmbl9: Scoring Code of model 10 of 10;
MPRINT(EM_DIAGRAM):   * Ensmbl9: Scoring Code of model 10 of 10;
2086079   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2086080   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2086081   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
2086082   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
2086083   +* NODE: Neural6;
MPRINT(EM_DIAGRAM):   * NODE: Neural6;
2086084   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2086085   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2086086   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2086087   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2086088   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2086089   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2086090   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2086091   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2086092   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2086093   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2086094   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2086095   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2086096   +LENGTH _WARN_ $4
2086097   +      F_DepVar  $ 12
2086098   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
2086099   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2086100   +
2086101   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2086102   +
2086103   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2086104   +
2086105   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2086106   +
2086107   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2086108   +
2086109   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2086110   +
2086111   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2086112   +
2086113   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2086114   +
2086115   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2086116   +
2086117   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2086118   +
2086119   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2086120   +
2086121   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2086122   +
2086123   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2086124   +
2086125   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2086126   +
2086127   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2086128   +
2086129   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2086130   +
2086131   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2086132   +
2086133   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2086134   +
2086135   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2086136   +
2086137   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2086138   +
2086139   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2086140   +
2086141   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2086142   +
2086143   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2086144   +
2086145   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2086146   +
2086147   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2086148   +
2086149   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2086150   +
2086151   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2086152   +
2086153   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2086154   +
2086155   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2086156   +
2086157   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
2086158   +
2086159   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2086160   +
2086161   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2086162   +
2086163   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2086164   +
2086165   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2086166   +
2086167   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
2086168   +
2086169   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2086170   +
2086171   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
2086172   +
2086173   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2086174   +
2086175   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2086176   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2086177   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2086178   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2086179   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2086180   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2086181   +end;
MPRINT(EM_DIAGRAM):   end;
2086182   +else do;
MPRINT(EM_DIAGRAM):   else do;
2086183   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2086184   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2086185   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2086186   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2086187   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2086188   +   end;
MPRINT(EM_DIAGRAM):   end;
2086189   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2086190   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2086191   +   end;
MPRINT(EM_DIAGRAM):   end;
2086192   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2086193   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2086194   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2086195   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2086196   +   end;
MPRINT(EM_DIAGRAM):   end;
2086197   +end;
MPRINT(EM_DIAGRAM):   end;
2086198   +
2086199   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2086200   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2086201   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2086202   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2086203   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2086204   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2086205   +end;
MPRINT(EM_DIAGRAM):   end;
2086206   +else do;
MPRINT(EM_DIAGRAM):   else do;
2086207   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2086208   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2086209   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2086210   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2086211   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2086212   +   end;
MPRINT(EM_DIAGRAM):   end;
2086213   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2086214   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2086215   +   end;
MPRINT(EM_DIAGRAM):   end;
2086216   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2086217   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2086218   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2086219   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2086220   +   end;
MPRINT(EM_DIAGRAM):   end;
2086221   +end;
MPRINT(EM_DIAGRAM):   end;
2086222   +
2086223   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2086224   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2086225   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2086226   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2086227   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2086228   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2086229   +end;
MPRINT(EM_DIAGRAM):   end;
2086230   +else do;
MPRINT(EM_DIAGRAM):   else do;
2086231   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2086232   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2086233   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2086234   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2086235   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2086236   +   end;
MPRINT(EM_DIAGRAM):   end;
2086237   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2086238   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2086239   +   end;
MPRINT(EM_DIAGRAM):   end;
2086240   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2086241   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2086242   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2086243   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2086244   +   end;
MPRINT(EM_DIAGRAM):   end;
2086245   +end;
MPRINT(EM_DIAGRAM):   end;
2086246   +
2086247   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2086248   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2086249   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2086250   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2086251   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2086252   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2086253   +end;
MPRINT(EM_DIAGRAM):   end;
2086254   +else do;
MPRINT(EM_DIAGRAM):   else do;
2086255   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2086256   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2086257   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2086258   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2086259   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2086260   +   end;
MPRINT(EM_DIAGRAM):   end;
2086261   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2086262   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2086263   +   end;
MPRINT(EM_DIAGRAM):   end;
2086264   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2086265   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2086266   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2086267   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2086268   +   end;
MPRINT(EM_DIAGRAM):   end;
2086269   +end;
MPRINT(EM_DIAGRAM):   end;
2086270   +
2086271   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2086272   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2086273   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2086274   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2086275   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2086276   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2086277   +end;
MPRINT(EM_DIAGRAM):   end;
2086278   +else do;
MPRINT(EM_DIAGRAM):   else do;
2086279   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2086280   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2086281   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2086282   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2086283   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2086284   +   end;
MPRINT(EM_DIAGRAM):   end;
2086285   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2086286   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2086287   +   end;
MPRINT(EM_DIAGRAM):   end;
2086288   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2086289   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2086290   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2086291   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2086292   +   end;
MPRINT(EM_DIAGRAM):   end;
2086293   +end;
MPRINT(EM_DIAGRAM):   end;
2086294   +
2086295   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2086296   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2086297   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2086298   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2086299   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2086300   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2086301   +end;
MPRINT(EM_DIAGRAM):   end;
2086302   +else do;
MPRINT(EM_DIAGRAM):   else do;
2086303   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2086304   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2086305   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2086306   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2086307   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2086308   +   end;
MPRINT(EM_DIAGRAM):   end;
2086309   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2086310   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2086311   +   end;
MPRINT(EM_DIAGRAM):   end;
2086312   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2086313   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2086314   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2086315   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2086316   +   end;
MPRINT(EM_DIAGRAM):   end;
2086317   +end;
MPRINT(EM_DIAGRAM):   end;
2086318   +
2086319   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2086320   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
2086321   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2086322   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2086323   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2086324   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2086325   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2086326   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2086327   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2086328   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2086329   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2086330   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2086331   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2086332   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2086333   +end;
MPRINT(EM_DIAGRAM):   end;
2086334   +else do;
MPRINT(EM_DIAGRAM):   else do;
2086335   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2086336   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2086337   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2086338   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2086339   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2086340   +   end;
MPRINT(EM_DIAGRAM):   end;
2086341   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2086342   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2086343   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2086344   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2086345   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2086346   +   end;
MPRINT(EM_DIAGRAM):   end;
2086347   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2086348   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2086349   +   end;
MPRINT(EM_DIAGRAM):   end;
2086350   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2086351   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2086352   +   end;
MPRINT(EM_DIAGRAM):   end;
2086353   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2086354   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2086355   +   end;
MPRINT(EM_DIAGRAM):   end;
2086356   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2086357   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2086358   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2086359   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2086360   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2086361   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2086362   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2086363   +   end;
MPRINT(EM_DIAGRAM):   end;
2086364   +end;
MPRINT(EM_DIAGRAM):   end;
2086365   +
2086366   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2086367   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2086368   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
2086369   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2086370   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2086371   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2086372   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2086373   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2086374   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2086375   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2086376   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2086377   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2086378   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2086379   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2086380   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2086381   +end;
MPRINT(EM_DIAGRAM):   end;
2086382   +else do;
MPRINT(EM_DIAGRAM):   else do;
2086383   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2086384   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2086385   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2086386   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2086387   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2086388   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2086389   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2086390   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2086391   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2086392   +         end;
MPRINT(EM_DIAGRAM):   end;
2086393   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2086394   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2086395   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2086396   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2086397   +            end;
MPRINT(EM_DIAGRAM):   end;
2086398   +         end;
MPRINT(EM_DIAGRAM):   end;
2086399   +      end;
MPRINT(EM_DIAGRAM):   end;
2086400   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2086401   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2086402   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2086403   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2086404   +         end;
MPRINT(EM_DIAGRAM):   end;
2086405   +      end;
MPRINT(EM_DIAGRAM):   end;
2086406   +   end;
MPRINT(EM_DIAGRAM):   end;
2086407   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2086408   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2086409   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2086410   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2086411   +      end;
MPRINT(EM_DIAGRAM):   end;
2086412   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2086413   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2086414   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2086415   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2086416   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2086417   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2086418   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2086419   +         end;
MPRINT(EM_DIAGRAM):   end;
2086420   +      end;
MPRINT(EM_DIAGRAM):   end;
2086421   +   end;
MPRINT(EM_DIAGRAM):   end;
2086422   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2086423   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2086424   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2086425   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2086426   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2086427   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2086428   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2086429   +   end;
MPRINT(EM_DIAGRAM):   end;
2086430   +end;
MPRINT(EM_DIAGRAM):   end;
2086431   +
2086432   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2086433   +*** Checking missing input Interval
2086434   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2086435   +
2086436   +IF NMISS(
2086437   +   Income ,
2086438   +   Kidhome ,
2086439   +   MntFishProducts ,
2086440   +   MntFruits ,
2086441   +   MntGoldProds ,
2086442   +   MntMeatProducts ,
2086443   +   MntSweetProducts ,
2086444   +   MntWines ,
2086445   +   NumCatalogPurchases ,
2086446   +   NumDealsPurchases ,
2086447   +   NumStorePurchases ,
2086448   +   NumWebPurchases ,
2086449   +   NumWebVisitsMonth ,
2086450   +   Recency ,
2086451   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Income , Kidhome , MntFishProducts , MntFruits , MntGoldProds 
, MntMeatProducts , MntSweetProducts , MntWines , NumCatalogPurchases , NumDealsPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , Recency , Teenhome ) THEN DO;
2086452   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2086453   +
2086454   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2086455   +END;
MPRINT(EM_DIAGRAM):   END;
2086456   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2086457   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
2086458   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2086459   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2086460   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2086461   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2086462   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2086463   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2086464   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2086465   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2086466   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2086467   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2086468   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2086469   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2086470   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2086471   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2086472   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2086473   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2086474   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2086475   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2086476   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2086477   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2086478   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2086479   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2086480   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2086481   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2086482   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2086483   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2086484   +END;
MPRINT(EM_DIAGRAM):   END;
2086485   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2086486   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2086487   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2086488   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2086489   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2086490   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2086491   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2086492   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2086493   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2086494   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2086495   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2086496   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2086497   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2086498   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
2086499   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2086500   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2086501   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2086502   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2086503   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2086504   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2086505   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2086506   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2086507   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2086508   +   ELSE S_NumCatalogPurchases
2086509   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2086510   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2086511   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2086512   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2086513   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2086514   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2086515   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2086516   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2086517   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2086518   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2086519   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2086520   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2086521   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2086522   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2086523   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2086524   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2086525   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2086526   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2086527   +END;
MPRINT(EM_DIAGRAM):   END;
2086528   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2086529   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
2086530   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2086531   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2086532   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
2086533   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2086534   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2086535   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
2086536   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2086537   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2086538   +   H11  =    -0.16969868213328 * S_Income  +     0.02694502969256 * S_Kidhome
2086539   +          +     0.03393898746968 * S_MntFishProducts
2086540   +          +     0.03394640220058 * S_MntFruits  +    -0.01587167417367 *
2086541   +        S_MntGoldProds  +    -0.21495242415153 * S_MntMeatProducts
2086542   +          +     0.02266052799747 * S_MntSweetProducts
2086543   +          +     0.12574687751719 * S_MntWines  +    -0.21850463721003 *
2086544   +        S_NumCatalogPurchases  +    -0.14568080551206 * S_NumDealsPurchases
2086545   +          +     0.14229567420228 * S_NumStorePurchases
2086546   +          +     0.12847652303094 * S_NumWebPurchases
2086547   +          +    -0.27944976547358 * S_NumWebVisitsMonth
2086548   +          +     0.34174699105869 * S_Recency  +     0.09717306809084 *
2086549   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = -0.16969868213328 * S_Income + 0.02694502969256 * S_Kidhome + 
0.03393898746968 * S_MntFishProducts + 0.03394640220058 * S_MntFruits + -0.01587167417367 * 
S_MntGoldProds + -0.21495242415153 * S_MntMeatProducts + 0.02266052799747 * S_MntSweetProducts 
+ 0.12574687751719 * S_MntWines + -0.21850463721003 * S_NumCatalogPurchases + 
-0.14568080551206 * S_NumDealsPurchases + 0.14229567420228 * S_NumStorePurchases + 
0.12847652303094 * S_NumWebPurchases + -0.27944976547358 * S_NumWebVisitsMonth + 
0.34174699105869 * S_Recency + 0.09717306809084 * S_Teenhome ;
2086550   +   H11  = H11  +     0.14287293066948 * AcceptedCmp10
2086551   +          +     0.17019666922685 * AcceptedCmp20  +      0.1773366178584 *
2086552   +        AcceptedCmp30  +     0.13131611179689 * AcceptedCmp40
2086553   +          +     0.19540838220921 * AcceptedCmp50  +    -0.06278476006654 *
2086554   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.14287293066948 * AcceptedCmp10 + 0.17019666922685 * 
AcceptedCmp20 + 0.1773366178584 * AcceptedCmp30 + 0.13131611179689 * AcceptedCmp40 + 
0.19540838220921 * AcceptedCmp50 + -0.06278476006654 * Complain0 ;
2086555   +   H11  = H11  +    -0.01270106768575 * Education2n_Cycle
2086556   +          +     0.06504707206132 * EducationBasic  +    -0.03889488068058 *
2086557   +        EducationGraduation  +    -0.00452456149121 * EducationMaster
2086558   +          +    -0.03502175493382 * Marital_StatusDivorced
2086559   +          +     0.10402983157245 * Marital_StatusMarried
2086560   +          +    -0.09554165782029 * Marital_StatusSingle
2086561   +          +     0.11204179692307 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.01270106768575 * Education2n_Cycle + 0.06504707206132 * 
EducationBasic + -0.03889488068058 * EducationGraduation + -0.00452456149121 * EducationMaster 
+ -0.03502175493382 * Marital_StatusDivorced + 0.10402983157245 * Marital_StatusMarried + 
-0.09554165782029 * Marital_StatusSingle + 0.11204179692307 * Marital_StatusTogether ;
2086562   +   H11  =    -0.16570612477441 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -0.16570612477441 + H11 ;
2086563   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
2086564   +END;
MPRINT(EM_DIAGRAM):   END;
2086565   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2086566   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
2086567   +END;
MPRINT(EM_DIAGRAM):   END;
2086568   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2086569   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2086570   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2086571   +
2086572   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
2086573   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
2086574   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2086575   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
2086576   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
2086577   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2086578   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
2086579   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2086580   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2086581   +end;
MPRINT(EM_DIAGRAM):   end;
2086582   +else do;
MPRINT(EM_DIAGRAM):   else do;
2086583   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
2086584   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
2086585   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
2086586   +   end;
MPRINT(EM_DIAGRAM):   end;
2086587   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
2086588   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
2086589   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
2086590   +   end;
MPRINT(EM_DIAGRAM):   end;
2086591   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2086592   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2086593   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2086594   +   end;
MPRINT(EM_DIAGRAM):   end;
2086595   +end;
MPRINT(EM_DIAGRAM):   end;
2086596   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2086597   +   P_DepVar1  =     -9.2939742190595 * H11 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -9.2939742190595 * H11 ;
2086598   +   P_DepVar1  =    -0.77234034139714 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.77234034139714 + P_DepVar1 ;
2086599   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2086600   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2086601   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2086602   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2086603   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2086604   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2086605   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2086606   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2086607   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2086608   +END;
MPRINT(EM_DIAGRAM):   END;
2086609   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2086610   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2086611   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2086612   +END;
MPRINT(EM_DIAGRAM):   END;
2086613   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2086614   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2086615   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2086616   +END;
MPRINT(EM_DIAGRAM):   END;
2086617   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
2086618   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
2086619   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
2086620   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
2086621   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
2086622   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
2086623   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
2086624   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2086625   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2086626   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2086627   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2086628   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2086629   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2086630   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2086631   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2086632   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2086633   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2086634   +END;
MPRINT(EM_DIAGRAM):   END;
2086635   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2086636   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2086637   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2086638   +drop
2086639   +H11
2086640   +;
MPRINT(EM_DIAGRAM):   drop H11 ;
2086641   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
2086642   +* Renaming variables for Neural6;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural6;
2086643   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2086644   +* Renaming Posterior variables for Neural6;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural6;
2086645   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2086646   +drop Neural6_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural6_P_DepVar1;
2086647   +Neural6_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural6_P_DepVar1 = P_DepVar1;
2086648   +drop Neural6_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural6_P_DepVar0;
2086649   +Neural6_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural6_P_DepVar0 = P_DepVar0;
2086650   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2086651   +* Renaming _WARN_ variable for Neural6;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural6;
2086652   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2086653   +length Neural6_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural6_WARN_ $4;
2086654   +drop Neural6_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural6_WARN_;
2086655   +Neural6_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural6_WARN_ = _WARN_;
2086656   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2086657   +* Ensmbl9: Average Posteriors of 10 models;
MPRINT(EM_DIAGRAM):   * Ensmbl9: Average Posteriors of 10 models;
2086658   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2086659   +P_DepVar1 = (
2086660   +Reg10_P_DepVar1 +
2086661   +Reg9_P_DepVar1 +
2086662   +Tree5_P_DepVar1 +
2086663   +Neural30_P_DepVar1 +
2086664   +Neural35_P_DepVar1 +
2086665   +Neural34_P_DepVar1 +
2086666   +Neural33_P_DepVar1 +
2086667   +Neural32_P_DepVar1 +
2086668   +Neural31_P_DepVar1 +
2086669   +Neural6_P_DepVar1
2086670   +)/10;
MPRINT(EM_DIAGRAM):   P_DepVar1 = ( Reg10_P_DepVar1 + Reg9_P_DepVar1 + Tree5_P_DepVar1 + 
Neural30_P_DepVar1 + Neural35_P_DepVar1 + Neural34_P_DepVar1 + Neural33_P_DepVar1 + 
Neural32_P_DepVar1 + Neural31_P_DepVar1 + Neural6_P_DepVar1 )/10;
2086671   +P_DepVar0 = (
2086672   +Reg10_P_DepVar0 +
2086673   +Reg9_P_DepVar0 +
2086674   +Tree5_P_DepVar0 +
2086675   +Neural30_P_DepVar0 +
2086676   +Neural35_P_DepVar0 +
2086677   +Neural34_P_DepVar0 +
2086678   +Neural33_P_DepVar0 +
2086679   +Neural32_P_DepVar0 +
2086680   +Neural31_P_DepVar0 +
2086681   +Neural6_P_DepVar0
2086682   +)/10;
MPRINT(EM_DIAGRAM):   P_DepVar0 = ( Reg10_P_DepVar0 + Reg9_P_DepVar0 + Tree5_P_DepVar0 + 
Neural30_P_DepVar0 + Neural35_P_DepVar0 + Neural34_P_DepVar0 + Neural33_P_DepVar0 + 
Neural32_P_DepVar0 + Neural31_P_DepVar0 + Neural6_P_DepVar0 )/10;
2086683   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2086684   +* Ensmbl9: Computing Classification Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl9: Computing Classification Vars;
2086685   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2086686   +length I_DepVar $32;
MPRINT(EM_DIAGRAM):   length I_DepVar $32;
WARNING: Length of character variable I_DepVar has already been set. 
         Use the LENGTH statement as the very first statement in the DATA STEP to declare the 
         length of a character variable.
2086687   +label I_DepVar = 'Into: DepVar';
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar';
2086688   +length _format $200;
MPRINT(EM_DIAGRAM):   length _format $200;
2086689   +drop _format;
MPRINT(EM_DIAGRAM):   drop _format;
2086690   +_format= ' ';
MPRINT(EM_DIAGRAM):   _format= ' ';
2086691   +_p_= 0;
MPRINT(EM_DIAGRAM):   _p_= 0;
2086692   +drop _p_;
MPRINT(EM_DIAGRAM):   drop _p_;
2086693   +if P_DepVar1 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar1 > _p_ then do;
2086694   +_p_= P_DepVar1;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar1;
2086695   +_format= '1';
MPRINT(EM_DIAGRAM):   _format= '1';
2086696   +end;
MPRINT(EM_DIAGRAM):   end;
2086697   +if P_DepVar0 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar0 > _p_ then do;
2086698   +_p_= P_DepVar0;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar0;
2086699   +_format= '0';
MPRINT(EM_DIAGRAM):   _format= '0';
2086700   +end;
MPRINT(EM_DIAGRAM):   end;
2086701   +%DMNORMCP(_format,I_DepVar);
MPRINT(DMNORMCP):   I_DepVar=dmnorm(_format,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2086702   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2086703   +* Ensmbl9: Producing Unformatted variable;
MPRINT(EM_DIAGRAM):   * Ensmbl9: Producing Unformatted variable;
2086704   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2086705   +label U_DepVar = "Unnormalized Into: DepVar";
MPRINT(EM_DIAGRAM):   label U_DepVar = "Unnormalized Into: DepVar";
2086706   +if I_DepVar = '1' then U_DepVar = 1;
MPRINT(EM_DIAGRAM):   if I_DepVar = '1' then U_DepVar = 1;
2086707   +else
2086708   +if I_DepVar = '0' then U_DepVar = 0;
MPRINT(EM_DIAGRAM):   else if I_DepVar = '0' then U_DepVar = 0;
2086709   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2086710   +* Ensmbl9: Computing _WARN_ Variable;
MPRINT(EM_DIAGRAM):   * Ensmbl9: Computing _WARN_ Variable;
2086711   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2086712   +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
2086713   +label _WARN_ = 'Warnings';
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings';
2086714   +_WARN_ = '';
MPRINT(EM_DIAGRAM):   _WARN_ = '';
2086715   +if index(REG10_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(REG10_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 
1, 1) ='M';
2086716   +if index(REG10_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(REG10_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 
2, 1) ='U';
2086717   +if index(REG10_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(REG10_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 
3, 1) ='P';
2086718   +if index(REG10_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(REG10_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 
4, 1) ='C';
2086719   +if index(REG9_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(REG9_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 
1) ='M';
2086720   +if index(REG9_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(REG9_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 
1) ='U';
2086721   +if index(REG9_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(REG9_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 
1) ='P';
2086722   +if index(REG9_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(REG9_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 
1) ='C';
2086723   +if index(TREE5_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(TREE5_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 
1, 1) ='M';
2086724   +if index(TREE5_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(TREE5_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 
2, 1) ='U';
2086725   +if index(TREE5_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(TREE5_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 
3, 1) ='P';
2086726   +if index(TREE5_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(TREE5_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 
4, 1) ='C';
2086727   +if index(NEURAL30_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M'
2086727  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL30_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
2086728   +if index(NEURAL30_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U'
2086728  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL30_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
2086729   +if index(NEURAL30_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P'
2086729  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL30_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
2086730   +if index(NEURAL30_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C'
2086730  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL30_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
2086731   +if index(NEURAL35_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M'
2086731  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL35_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
2086732   +if index(NEURAL35_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U'
2086732  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL35_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
2086733   +if index(NEURAL35_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P'
2086733  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL35_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
2086734   +if index(NEURAL35_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C'
2086734  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL35_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
2086735   +if index(NEURAL34_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M'
2086735  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL34_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
2086736   +if index(NEURAL34_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U'
2086736  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL34_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
2086737   +if index(NEURAL34_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P'
2086737  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL34_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
2086738   +if index(NEURAL34_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C'
2086738  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL34_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
2086739   +if index(NEURAL33_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M'
2086739  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL33_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
2086740   +if index(NEURAL33_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U'
2086740  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL33_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
2086741   +if index(NEURAL33_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P'
2086741  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL33_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
2086742   +if index(NEURAL33_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C'
2086742  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL33_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
2086743   +if index(NEURAL32_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M'
2086743  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL32_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
2086744   +if index(NEURAL32_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U'
2086744  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL32_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
2086745   +if index(NEURAL32_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P'
2086745  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL32_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
2086746   +if index(NEURAL32_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C'
2086746  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL32_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
2086747   +if index(NEURAL31_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M'
2086747  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL31_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
2086748   +if index(NEURAL31_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U'
2086748  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL31_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
2086749   +if index(NEURAL31_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P'
2086749  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL31_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
2086750   +if index(NEURAL31_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C'
2086750  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL31_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
2086751   +if index(NEURAL6_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(NEURAL6_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 
1, 1) ='M';
2086752   +if index(NEURAL6_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(NEURAL6_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 
2, 1) ='U';
2086753   +if index(NEURAL6_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(NEURAL6_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 
3, 1) ='P';
2086754   +if index(NEURAL6_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(NEURAL6_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 
4, 1) ='C';
2086755   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2086756   +* Ensmbl9: Computing Residual Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl9: Computing Residual Vars;
2086757   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2086758   +if
2086759   +F_DepVar NE '1'
2086760   +AND F_DepVar NE '0'
2086761   +then do;
MPRINT(EM_DIAGRAM):   if F_DepVar NE '1' AND F_DepVar NE '0' then do;
2086762   +R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
2086763   +R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
2086764   +end;
MPRINT(EM_DIAGRAM):   end;
2086765   +else do;
MPRINT(EM_DIAGRAM):   else do;
2086766   +R_DepVar1 = -P_DepVar1;
MPRINT(EM_DIAGRAM):   R_DepVar1 = -P_DepVar1;
2086767   +R_DepVar0 = -P_DepVar0;
MPRINT(EM_DIAGRAM):   R_DepVar0 = -P_DepVar0;
2086768   +SELECT(F_DepVar);
MPRINT(EM_DIAGRAM):   SELECT(F_DepVar);
2086769   +WHEN('1') R_DepVar1 = R_DepVar1 +1;
MPRINT(EM_DIAGRAM):   WHEN('1') R_DepVar1 = R_DepVar1 +1;
2086770   +WHEN('0') R_DepVar0 = R_DepVar0 +1;
MPRINT(EM_DIAGRAM):   WHEN('0') R_DepVar0 = R_DepVar0 +1;
2086771   +OTHERWISE;
MPRINT(EM_DIAGRAM):   OTHERWISE;
2086772   +END;
MPRINT(EM_DIAGRAM):   END;
2086773   +END;
MPRINT(EM_DIAGRAM):   END;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2086774    run;

NOTE: DATA STEP view saved on file EMWS8.ENSMBL9_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.REG10_TRAIN.VIEW used (Total process time):
      real time           0.18 seconds
      cpu time            0.18 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.20 seconds
      cpu time            0.18 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2086775    quit;
2086776    filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
2086777    filename emflow
2086777  ! "C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl9\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl9\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl9: Scoring REG10_VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2086778    *------------------------------------------------------------*;
2086779    * Ensmbl9: Scoring REG10_VALIDATE data;
2086780    *------------------------------------------------------------*;
2086781    data EMWS8.Ensmbl9_VALIDATE
2086782    / view=EMWS8.Ensmbl9_VALIDATE
2086783    ;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl9_VALIDATE / view=EMWS8.Ensmbl9_VALIDATE ;
2086784    set EMWS8.Reg10_VALIDATE
2086785    ;
MPRINT(EM_DIAGRAM):   set EMWS8.Reg10_VALIDATE ;
2086786    %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl9\EMFLOWSCORE.sas.
2086787   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2086788   +* Ensmbl9: Combine model for DepVar;
MPRINT(EM_DIAGRAM):   * Ensmbl9: Combine model for DepVar;
2086789   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2086790   +* Ensmbl9: Scoring Code of model 1 of 10;
MPRINT(EM_DIAGRAM):   * Ensmbl9: Scoring Code of model 1 of 10;
2086791   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2086792   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2086793   +* TOOL: Extension Class;
MPRINT(EM_DIAGRAM):   * TOOL: Extension Class;
2086794   +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
2086795   +* NODE: FIMPORT;
MPRINT(EM_DIAGRAM):   * NODE: FIMPORT;
2086796   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2086797   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2086798   +* TOOL: Statistics Exploration;
MPRINT(EM_DIAGRAM):   * TOOL: Statistics Exploration;
2086799   +* TYPE: EXPLORE;
MPRINT(EM_DIAGRAM):   * TYPE: EXPLORE;
2086800   +* NODE: Stat;
MPRINT(EM_DIAGRAM):   * NODE: Stat;
2086801   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2086802   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2086803   +* TOOL: Filtering;
MPRINT(EM_DIAGRAM):   * TOOL: Filtering;
2086804   +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
2086805   +* NODE: Filter;
MPRINT(EM_DIAGRAM):   * NODE: Filter;
2086806   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2086807   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2086808   +* TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
MPRINT(EM_DIAGRAM):   * TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
2086809   +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
2086810   +* NODE: EMCODE4;
MPRINT(EM_DIAGRAM):   * NODE: EMCODE4;
2086811   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2086812   +
2086813   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
2086814   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
2086814  !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
2086815   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
2086816   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
2086817   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
2086818   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
2086819   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
2086820   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2086821   +* TOOL: Transform;
MPRINT(EM_DIAGRAM):   * TOOL: Transform;
2086822   +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
2086823   +* NODE: Trans;
MPRINT(EM_DIAGRAM):   * NODE: Trans;
2086824   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2086825   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2086826   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
2086827   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2086828   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
2086829   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
2086830   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
2086831   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2086832   +* TOOL: Partition Class;
MPRINT(EM_DIAGRAM):   * TOOL: Partition Class;
2086833   +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
2086834   +* NODE: Part;
MPRINT(EM_DIAGRAM):   * NODE: Part;
2086835   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2086836   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2086837   +* TOOL: Metadata Node;
MPRINT(EM_DIAGRAM):   * TOOL: Metadata Node;
2086838   +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
2086839   +* NODE: Meta2;
MPRINT(EM_DIAGRAM):   * NODE: Meta2;
2086840   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2086841   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2086842   +* TOOL: Regression;
MPRINT(EM_DIAGRAM):   * TOOL: Regression;
2086843   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
2086844   +* NODE: Reg10;
MPRINT(EM_DIAGRAM):   * NODE: Reg10;
2086845   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2086846   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
2086847   +*** begin scoring code for regression;
MPRINT(EM_DIAGRAM):   *** begin scoring code for regression;
2086848   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
2086849   +
2086850   +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
2086851   +label _WARN_ = 'Warnings' ;
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings' ;
2086852   +
2086853   +length I_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length I_DepVar $ 12;
2086854   +label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2086855   +*** Target Values;
MPRINT(EM_DIAGRAM):   *** Target Values;
2086856   +array REG10DRF [2] $12 _temporary_ ('1' '0' );
MPRINT(EM_DIAGRAM):   array REG10DRF [2] $12 _temporary_ ('1' '0' );
2086857   +label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2086858   +format U_DepVar BEST.;
MPRINT(EM_DIAGRAM):   format U_DepVar BEST.;
2086859   +*** Unnormalized target values;
MPRINT(EM_DIAGRAM):   *** Unnormalized target values;
2086860   +ARRAY REG10DRU[2]  _TEMPORARY_ (1 0);
MPRINT(EM_DIAGRAM):   ARRAY REG10DRU[2] _TEMPORARY_ (1 0);
2086861   +
2086862   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
2086863   +drop _Y ;
MPRINT(EM_DIAGRAM):   drop _Y ;
2086864   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2086865   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
2086866   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
2086867   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2086868   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
2086869   +   _Y = .;
MPRINT(EM_DIAGRAM):   _Y = .;
2086870   +end;
MPRINT(EM_DIAGRAM):   end;
2086871   +else do;
MPRINT(EM_DIAGRAM):   else do;
2086872   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
2086873   +      _Y = 1;
MPRINT(EM_DIAGRAM):   _Y = 1;
2086874   +   end;
MPRINT(EM_DIAGRAM):   end;
2086875   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
2086876   +      _Y = 0;
MPRINT(EM_DIAGRAM):   _Y = 0;
2086877   +   end;
MPRINT(EM_DIAGRAM):   end;
2086878   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2086879   +      _Y = .;
MPRINT(EM_DIAGRAM):   _Y = .;
2086880   +   end;
MPRINT(EM_DIAGRAM):   end;
2086881   +end;
MPRINT(EM_DIAGRAM):   end;
2086882   +
2086883   +drop _DM_BAD;
MPRINT(EM_DIAGRAM):   drop _DM_BAD;
2086884   +_DM_BAD=0;
MPRINT(EM_DIAGRAM):   _DM_BAD=0;
2086885   +
2086886   +*** Check Income for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Income for missing values ;
2086887   +if missing( Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( Income ) then do;
2086888   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2086889   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2086890   +end;
MPRINT(EM_DIAGRAM):   end;
2086891   +
2086892   +*** Check MntFishProducts for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntFishProducts for missing values ;
2086893   +if missing( MntFishProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntFishProducts ) then do;
2086894   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2086895   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2086896   +end;
MPRINT(EM_DIAGRAM):   end;
2086897   +
2086898   +*** Check MntFruits for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntFruits for missing values ;
2086899   +if missing( MntFruits ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntFruits ) then do;
2086900   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2086901   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2086902   +end;
MPRINT(EM_DIAGRAM):   end;
2086903   +
2086904   +*** Check MntMeatProducts for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntMeatProducts for missing values ;
2086905   +if missing( MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntMeatProducts ) then do;
2086906   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2086907   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2086908   +end;
MPRINT(EM_DIAGRAM):   end;
2086909   +
2086910   +*** Check MntWines for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntWines for missing values ;
2086911   +if missing( MntWines ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntWines ) then do;
2086912   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2086913   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2086914   +end;
MPRINT(EM_DIAGRAM):   end;
2086915   +
2086916   +*** Check NumCatalogPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumCatalogPurchases for missing values ;
2086917   +if missing( NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumCatalogPurchases ) then do;
2086918   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2086919   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2086920   +end;
MPRINT(EM_DIAGRAM):   end;
2086921   +
2086922   +*** Check NumDealsPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumDealsPurchases for missing values ;
2086923   +if missing( NumDealsPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumDealsPurchases ) then do;
2086924   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2086925   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2086926   +end;
MPRINT(EM_DIAGRAM):   end;
2086927   +
2086928   +*** Check NumStorePurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumStorePurchases for missing values ;
2086929   +if missing( NumStorePurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumStorePurchases ) then do;
2086930   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2086931   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2086932   +end;
MPRINT(EM_DIAGRAM):   end;
2086933   +
2086934   +*** Check NumWebPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumWebPurchases for missing values ;
2086935   +if missing( NumWebPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumWebPurchases ) then do;
2086936   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2086937   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2086938   +end;
MPRINT(EM_DIAGRAM):   end;
2086939   +
2086940   +*** Check NumWebVisitsMonth for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumWebVisitsMonth for missing values ;
2086941   +if missing( NumWebVisitsMonth ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumWebVisitsMonth ) then do;
2086942   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2086943   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2086944   +end;
MPRINT(EM_DIAGRAM):   end;
2086945   +
2086946   +*** Check Recency for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Recency for missing values ;
2086947   +if missing( Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( Recency ) then do;
2086948   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2086949   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2086950   +end;
MPRINT(EM_DIAGRAM):   end;
2086951   +
2086952   +*** Check Teenhome for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Teenhome for missing values ;
2086953   +if missing( Teenhome ) then do;
MPRINT(EM_DIAGRAM):   if missing( Teenhome ) then do;
2086954   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2086955   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2086956   +end;
MPRINT(EM_DIAGRAM):   end;
2086957   +
2086958   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2086959   +drop _1_0 ;
MPRINT(EM_DIAGRAM):   drop _1_0 ;
2086960   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2086961   +   _1_0 = .;
MPRINT(EM_DIAGRAM):   _1_0 = .;
2086962   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2086963   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2086964   +end;
MPRINT(EM_DIAGRAM):   end;
2086965   +else do;
MPRINT(EM_DIAGRAM):   else do;
2086966   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2086967   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2086968   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2086969   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2086970   +      _1_0 = 1;
MPRINT(EM_DIAGRAM):   _1_0 = 1;
2086971   +   end;
MPRINT(EM_DIAGRAM):   end;
2086972   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2086973   +      _1_0 = -1;
MPRINT(EM_DIAGRAM):   _1_0 = -1;
2086974   +   end;
MPRINT(EM_DIAGRAM):   end;
2086975   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2086976   +      _1_0 = .;
MPRINT(EM_DIAGRAM):   _1_0 = .;
2086977   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2086978   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2086979   +   end;
MPRINT(EM_DIAGRAM):   end;
2086980   +end;
MPRINT(EM_DIAGRAM):   end;
2086981   +
2086982   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2086983   +drop _2_0 ;
MPRINT(EM_DIAGRAM):   drop _2_0 ;
2086984   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2086985   +   _2_0 = .;
MPRINT(EM_DIAGRAM):   _2_0 = .;
2086986   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2086987   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2086988   +end;
MPRINT(EM_DIAGRAM):   end;
2086989   +else do;
MPRINT(EM_DIAGRAM):   else do;
2086990   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2086991   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2086992   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2086993   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2086994   +      _2_0 = 1;
MPRINT(EM_DIAGRAM):   _2_0 = 1;
2086995   +   end;
MPRINT(EM_DIAGRAM):   end;
2086996   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2086997   +      _2_0 = -1;
MPRINT(EM_DIAGRAM):   _2_0 = -1;
2086998   +   end;
MPRINT(EM_DIAGRAM):   end;
2086999   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2087000   +      _2_0 = .;
MPRINT(EM_DIAGRAM):   _2_0 = .;
2087001   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2087002   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2087003   +   end;
MPRINT(EM_DIAGRAM):   end;
2087004   +end;
MPRINT(EM_DIAGRAM):   end;
2087005   +
2087006   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2087007   +drop _3_0 ;
MPRINT(EM_DIAGRAM):   drop _3_0 ;
2087008   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2087009   +   _3_0 = .;
MPRINT(EM_DIAGRAM):   _3_0 = .;
2087010   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2087011   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2087012   +end;
MPRINT(EM_DIAGRAM):   end;
2087013   +else do;
MPRINT(EM_DIAGRAM):   else do;
2087014   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2087015   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2087016   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2087017   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2087018   +      _3_0 = 1;
MPRINT(EM_DIAGRAM):   _3_0 = 1;
2087019   +   end;
MPRINT(EM_DIAGRAM):   end;
2087020   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2087021   +      _3_0 = -1;
MPRINT(EM_DIAGRAM):   _3_0 = -1;
2087022   +   end;
MPRINT(EM_DIAGRAM):   end;
2087023   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2087024   +      _3_0 = .;
MPRINT(EM_DIAGRAM):   _3_0 = .;
2087025   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2087026   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2087027   +   end;
MPRINT(EM_DIAGRAM):   end;
2087028   +end;
MPRINT(EM_DIAGRAM):   end;
2087029   +
2087030   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2087031   +drop _4_0 ;
MPRINT(EM_DIAGRAM):   drop _4_0 ;
2087032   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2087033   +   _4_0 = .;
MPRINT(EM_DIAGRAM):   _4_0 = .;
2087034   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2087035   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2087036   +end;
MPRINT(EM_DIAGRAM):   end;
2087037   +else do;
MPRINT(EM_DIAGRAM):   else do;
2087038   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2087039   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2087040   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2087041   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2087042   +      _4_0 = 1;
MPRINT(EM_DIAGRAM):   _4_0 = 1;
2087043   +   end;
MPRINT(EM_DIAGRAM):   end;
2087044   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2087045   +      _4_0 = -1;
MPRINT(EM_DIAGRAM):   _4_0 = -1;
2087046   +   end;
MPRINT(EM_DIAGRAM):   end;
2087047   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2087048   +      _4_0 = .;
MPRINT(EM_DIAGRAM):   _4_0 = .;
2087049   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2087050   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2087051   +   end;
MPRINT(EM_DIAGRAM):   end;
2087052   +end;
MPRINT(EM_DIAGRAM):   end;
2087053   +
2087054   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2087055   +drop _5_0 ;
MPRINT(EM_DIAGRAM):   drop _5_0 ;
2087056   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2087057   +   _5_0 = .;
MPRINT(EM_DIAGRAM):   _5_0 = .;
2087058   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2087059   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2087060   +end;
MPRINT(EM_DIAGRAM):   end;
2087061   +else do;
MPRINT(EM_DIAGRAM):   else do;
2087062   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2087063   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2087064   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2087065   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2087066   +      _5_0 = 1;
MPRINT(EM_DIAGRAM):   _5_0 = 1;
2087067   +   end;
MPRINT(EM_DIAGRAM):   end;
2087068   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2087069   +      _5_0 = -1;
MPRINT(EM_DIAGRAM):   _5_0 = -1;
2087070   +   end;
MPRINT(EM_DIAGRAM):   end;
2087071   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2087072   +      _5_0 = .;
MPRINT(EM_DIAGRAM):   _5_0 = .;
2087073   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2087074   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2087075   +   end;
MPRINT(EM_DIAGRAM):   end;
2087076   +end;
MPRINT(EM_DIAGRAM):   end;
2087077   +
2087078   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2087079   +drop _8_0 _8_1 _8_2 _8_3 ;
MPRINT(EM_DIAGRAM):   drop _8_0 _8_1 _8_2 _8_3 ;
2087080   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2087081   +_8_0 = 0;
MPRINT(EM_DIAGRAM):   _8_0 = 0;
2087082   +_8_1 = 0;
MPRINT(EM_DIAGRAM):   _8_1 = 0;
2087083   +_8_2 = 0;
MPRINT(EM_DIAGRAM):   _8_2 = 0;
2087084   +_8_3 = 0;
MPRINT(EM_DIAGRAM):   _8_3 = 0;
2087085   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2087086   +   _8_0 = .;
MPRINT(EM_DIAGRAM):   _8_0 = .;
2087087   +   _8_1 = .;
MPRINT(EM_DIAGRAM):   _8_1 = .;
2087088   +   _8_2 = .;
MPRINT(EM_DIAGRAM):   _8_2 = .;
2087089   +   _8_3 = .;
MPRINT(EM_DIAGRAM):   _8_3 = .;
2087090   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2087091   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2087092   +end;
MPRINT(EM_DIAGRAM):   end;
2087093   +else do;
MPRINT(EM_DIAGRAM):   else do;
2087094   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2087095   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2087096   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2087097   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2087098   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2087099   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2087100   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2087101   +            _8_0 = 1;
MPRINT(EM_DIAGRAM):   _8_0 = 1;
2087102   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2087103   +         end;
MPRINT(EM_DIAGRAM):   end;
2087104   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2087105   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2087106   +               _8_1 = 1;
MPRINT(EM_DIAGRAM):   _8_1 = 1;
2087107   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2087108   +            end;
MPRINT(EM_DIAGRAM):   end;
2087109   +         end;
MPRINT(EM_DIAGRAM):   end;
2087110   +      end;
MPRINT(EM_DIAGRAM):   end;
2087111   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2087112   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2087113   +            _8_2 = 1;
MPRINT(EM_DIAGRAM):   _8_2 = 1;
2087114   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2087115   +         end;
MPRINT(EM_DIAGRAM):   end;
2087116   +      end;
MPRINT(EM_DIAGRAM):   end;
2087117   +   end;
MPRINT(EM_DIAGRAM):   end;
2087118   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2087119   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2087120   +         _8_3 = 1;
MPRINT(EM_DIAGRAM):   _8_3 = 1;
2087121   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2087122   +      end;
MPRINT(EM_DIAGRAM):   end;
2087123   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2087124   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2087125   +            _8_0 = -1;
MPRINT(EM_DIAGRAM):   _8_0 = -1;
2087126   +            _8_1 = -1;
MPRINT(EM_DIAGRAM):   _8_1 = -1;
2087127   +            _8_2 = -1;
MPRINT(EM_DIAGRAM):   _8_2 = -1;
2087128   +            _8_3 = -1;
MPRINT(EM_DIAGRAM):   _8_3 = -1;
2087129   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2087130   +         end;
MPRINT(EM_DIAGRAM):   end;
2087131   +      end;
MPRINT(EM_DIAGRAM):   end;
2087132   +   end;
MPRINT(EM_DIAGRAM):   end;
2087133   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2087134   +      _8_0 = .;
MPRINT(EM_DIAGRAM):   _8_0 = .;
2087135   +      _8_1 = .;
MPRINT(EM_DIAGRAM):   _8_1 = .;
2087136   +      _8_2 = .;
MPRINT(EM_DIAGRAM):   _8_2 = .;
2087137   +      _8_3 = .;
MPRINT(EM_DIAGRAM):   _8_3 = .;
2087138   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2087139   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2087140   +   end;
MPRINT(EM_DIAGRAM):   end;
2087141   +end;
MPRINT(EM_DIAGRAM):   end;
2087142   +
2087143   +*** If missing inputs, use averages;
MPRINT(EM_DIAGRAM):   *** If missing inputs, use averages;
2087144   +if _DM_BAD > 0 then do;
MPRINT(EM_DIAGRAM):   if _DM_BAD > 0 then do;
2087145   +   _P0 = 0.151221567;
MPRINT(EM_DIAGRAM):   _P0 = 0.151221567;
2087146   +   _P1 = 0.848778433;
MPRINT(EM_DIAGRAM):   _P1 = 0.848778433;
2087147   +   goto REG10DR1;
MPRINT(EM_DIAGRAM):   goto REG10DR1;
2087148   +end;
MPRINT(EM_DIAGRAM):   end;
2087149   +
2087150   +*** Compute Linear Predictor;
MPRINT(EM_DIAGRAM):   *** Compute Linear Predictor;
2087151   +drop _TEMP;
MPRINT(EM_DIAGRAM):   drop _TEMP;
2087152   +drop _LP0;
MPRINT(EM_DIAGRAM):   drop _LP0;
2087153   +_LP0 = 0;
MPRINT(EM_DIAGRAM):   _LP0 = 0;
2087154   +
2087155   +***  Effect: AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Effect: AcceptedCmp1 ;
2087156   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
2087157   +_LP0 = _LP0 + (   -0.71107732112007) * _TEMP * _1_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.71107732112007) * _TEMP * _1_0;
2087158   +
2087159   +***  Effect: AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Effect: AcceptedCmp2 ;
2087160   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
2087161   +_LP0 = _LP0 + (   -0.81763295180983) * _TEMP * _2_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.81763295180983) * _TEMP * _2_0;
2087162   +
2087163   +***  Effect: AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Effect: AcceptedCmp3 ;
2087164   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
2087165   +_LP0 = _LP0 + (    -0.8618538514738) * _TEMP * _3_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.8618538514738) * _TEMP * _3_0;
2087166   +
2087167   +***  Effect: AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Effect: AcceptedCmp4 ;
2087168   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
2087169   +_LP0 = _LP0 + (   -0.64997710050937) * _TEMP * _4_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.64997710050937) * _TEMP * _4_0;
2087170   +
2087171   +***  Effect: AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Effect: AcceptedCmp5 ;
2087172   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
2087173   +_LP0 = _LP0 + (   -0.91699409369659) * _TEMP * _5_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.91699409369659) * _TEMP * _5_0;
2087174   +
2087175   +***  Effect: Income ;
MPRINT(EM_DIAGRAM):   *** Effect: Income ;
2087176   +_TEMP = Income ;
MPRINT(EM_DIAGRAM):   _TEMP = Income ;
2087177   +_LP0 = _LP0 + (    0.00003628120307 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00003628120307 * _TEMP);
2087178   +
2087179   +***  Effect: Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Effect: Marital_Status ;
2087180   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
2087181   +_LP0 = _LP0 + (    0.09345382071006) * _TEMP * _8_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.09345382071006) * _TEMP * _8_0;
2087182   +_LP0 = _LP0 + (   -0.47894059934485) * _TEMP * _8_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.47894059934485) * _TEMP * _8_1;
2087183   +_LP0 = _LP0 + (    0.46164092141221) * _TEMP * _8_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.46164092141221) * _TEMP * _8_2;
2087184   +_LP0 = _LP0 + (    -0.5078574429985) * _TEMP * _8_3;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.5078574429985) * _TEMP * _8_3;
2087185   +
2087186   +***  Effect: MntFishProducts ;
MPRINT(EM_DIAGRAM):   *** Effect: MntFishProducts ;
2087187   +_TEMP = MntFishProducts ;
MPRINT(EM_DIAGRAM):   _TEMP = MntFishProducts ;
2087188   +_LP0 = _LP0 + (   -0.00285470778488 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.00285470778488 * _TEMP);
2087189   +
2087190   +***  Effect: MntFruits ;
MPRINT(EM_DIAGRAM):   *** Effect: MntFruits ;
2087191   +_TEMP = MntFruits ;
MPRINT(EM_DIAGRAM):   _TEMP = MntFruits ;
2087192   +_LP0 = _LP0 + (   -0.00481548089585 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.00481548089585 * _TEMP);
2087193   +
2087194   +***  Effect: MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Effect: MntMeatProducts ;
2087195   +_TEMP = MntMeatProducts ;
MPRINT(EM_DIAGRAM):   _TEMP = MntMeatProducts ;
2087196   +_LP0 = _LP0 + (    0.00485302069895 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00485302069895 * _TEMP);
2087197   +
2087198   +***  Effect: MntWines ;
MPRINT(EM_DIAGRAM):   *** Effect: MntWines ;
2087199   +_TEMP = MntWines ;
MPRINT(EM_DIAGRAM):   _TEMP = MntWines ;
2087200   +_LP0 = _LP0 + (   -0.00184060065513 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.00184060065513 * _TEMP);
2087201   +
2087202   +***  Effect: NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumCatalogPurchases ;
2087203   +_TEMP = NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumCatalogPurchases ;
2087204   +_LP0 = _LP0 + (    0.40015202354101 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.40015202354101 * _TEMP);
2087205   +
2087206   +***  Effect: NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumDealsPurchases ;
2087207   +_TEMP = NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumDealsPurchases ;
2087208   +_LP0 = _LP0 + (    0.39526484909287 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.39526484909287 * _TEMP);
2087209   +
2087210   +***  Effect: NumStorePurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumStorePurchases ;
2087211   +_TEMP = NumStorePurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumStorePurchases ;
2087212   +_LP0 = _LP0 + (   -0.21400418800044 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.21400418800044 * _TEMP);
2087213   +
2087214   +***  Effect: NumWebPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumWebPurchases ;
2087215   +_TEMP = NumWebPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumWebPurchases ;
2087216   +_LP0 = _LP0 + (    -0.2223953481686 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.2223953481686 * _TEMP);
2087217   +
2087218   +***  Effect: NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   *** Effect: NumWebVisitsMonth ;
2087219   +_TEMP = NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   _TEMP = NumWebVisitsMonth ;
2087220   +_LP0 = _LP0 + (    0.54388363089232 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.54388363089232 * _TEMP);
2087221   +
2087222   +***  Effect: Recency ;
MPRINT(EM_DIAGRAM):   *** Effect: Recency ;
2087223   +_TEMP = Recency ;
MPRINT(EM_DIAGRAM):   _TEMP = Recency ;
2087224   +_LP0 = _LP0 + (   -0.05513564922633 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.05513564922633 * _TEMP);
2087225   +
2087226   +***  Effect: Teenhome ;
MPRINT(EM_DIAGRAM):   *** Effect: Teenhome ;
2087227   +_TEMP = Teenhome ;
MPRINT(EM_DIAGRAM):   _TEMP = Teenhome ;
2087228   +_LP0 = _LP0 + (   -0.70674092258187 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.70674092258187 * _TEMP);
2087229   +
2087230   +*** Naive Posterior Probabilities;
MPRINT(EM_DIAGRAM):   *** Naive Posterior Probabilities;
2087231   +drop _MAXP _IY _P0 _P1;
MPRINT(EM_DIAGRAM):   drop _MAXP _IY _P0 _P1;
2087232   +_P0 = probnorm((   -0.62163391257391) + _LP0);
MPRINT(EM_DIAGRAM):   _P0 = probnorm(( -0.62163391257391) + _LP0);
2087233   +_P1 = 1.0 - _P0;
MPRINT(EM_DIAGRAM):   _P1 = 1.0 - _P0;
2087234   +
2087235   +REG10DR1:
2087236   +
2087237   +*** Residuals;
MPRINT(EM_DIAGRAM):   REG10DR1: *** Residuals;
2087238   +if (_Y = .) then do;
MPRINT(EM_DIAGRAM):   if (_Y = .) then do;
2087239   +   R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
2087240   +   R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
2087241   +end;
MPRINT(EM_DIAGRAM):   end;
2087242   +else do;
MPRINT(EM_DIAGRAM):   else do;
2087243   +    label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
2087244   +    label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
2087245   +   R_DepVar1 = - _P0;
MPRINT(EM_DIAGRAM):   R_DepVar1 = - _P0;
2087246   +   R_DepVar0 = - _P1;
MPRINT(EM_DIAGRAM):   R_DepVar0 = - _P1;
2087247   +   select( _Y );
MPRINT(EM_DIAGRAM):   select( _Y );
2087248   +      when (0)  R_DepVar1 = R_DepVar1 + 1;
MPRINT(EM_DIAGRAM):   when (0) R_DepVar1 = R_DepVar1 + 1;
2087249   +      when (1)  R_DepVar0 = R_DepVar0 + 1;
MPRINT(EM_DIAGRAM):   when (1) R_DepVar0 = R_DepVar0 + 1;
2087250   +   end;
MPRINT(EM_DIAGRAM):   end;
2087251   +end;
MPRINT(EM_DIAGRAM):   end;
2087252   +
2087253   +*** Posterior Probabilities and Predicted Level;
MPRINT(EM_DIAGRAM):   *** Posterior Probabilities and Predicted Level;
2087254   +label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2087255   +label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2087256   +P_DepVar1 = _P0;
MPRINT(EM_DIAGRAM):   P_DepVar1 = _P0;
2087257   +_MAXP = _P0;
MPRINT(EM_DIAGRAM):   _MAXP = _P0;
2087258   +_IY = 1;
MPRINT(EM_DIAGRAM):   _IY = 1;
2087259   +P_DepVar0 = _P1;
MPRINT(EM_DIAGRAM):   P_DepVar0 = _P1;
2087260   +if (_P1 >  _MAXP + 1E-8) then do;
MPRINT(EM_DIAGRAM):   if (_P1 > _MAXP + 1E-8) then do;
2087261   +   _MAXP = _P1;
MPRINT(EM_DIAGRAM):   _MAXP = _P1;
2087262   +   _IY = 2;
MPRINT(EM_DIAGRAM):   _IY = 2;
2087263   +end;
MPRINT(EM_DIAGRAM):   end;
2087264   +I_DepVar = REG10DRF[_IY];
MPRINT(EM_DIAGRAM):   I_DepVar = REG10DRF[_IY];
2087265   +U_DepVar = REG10DRU[_IY];
MPRINT(EM_DIAGRAM):   U_DepVar = REG10DRU[_IY];
2087266   +
2087267   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
2087268   +***** end scoring code for regression;
MPRINT(EM_DIAGRAM):   ***** end scoring code for regression;
2087269   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
2087270   +* Renaming variables for Reg10;
MPRINT(EM_DIAGRAM):   * Renaming variables for Reg10;
2087271   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2087272   +* Renaming Posterior variables for Reg10;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Reg10;
2087273   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2087274   +drop Reg10_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Reg10_P_DepVar1;
2087275   +Reg10_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Reg10_P_DepVar1 = P_DepVar1;
2087276   +drop Reg10_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Reg10_P_DepVar0;
2087277   +Reg10_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Reg10_P_DepVar0 = P_DepVar0;
2087278   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2087279   +* Renaming _WARN_ variable for Reg10;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Reg10;
2087280   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2087281   +length Reg10_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Reg10_WARN_ $4;
2087282   +drop Reg10_WARN_;
MPRINT(EM_DIAGRAM):   drop Reg10_WARN_;
2087283   +Reg10_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Reg10_WARN_ = _WARN_;
2087284   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2087285   +* Ensmbl9: Scoring Code of model 2 of 10;
MPRINT(EM_DIAGRAM):   * Ensmbl9: Scoring Code of model 2 of 10;
2087286   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2087287   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2087288   +* TOOL: Regression;
MPRINT(EM_DIAGRAM):   * TOOL: Regression;
2087289   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
2087290   +* NODE: Reg9;
MPRINT(EM_DIAGRAM):   * NODE: Reg9;
2087291   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2087292   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
2087293   +*** begin scoring code for regression;
MPRINT(EM_DIAGRAM):   *** begin scoring code for regression;
2087294   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
2087295   +
2087296   +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
2087297   +label _WARN_ = 'Warnings' ;
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings' ;
2087298   +
2087299   +length I_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length I_DepVar $ 12;
2087300   +label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2087301   +*** Target Values;
MPRINT(EM_DIAGRAM):   *** Target Values;
2087302   +array REG9DRF [2] $12 _temporary_ ('1' '0' );
MPRINT(EM_DIAGRAM):   array REG9DRF [2] $12 _temporary_ ('1' '0' );
2087303   +label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2087304   +format U_DepVar BEST.;
MPRINT(EM_DIAGRAM):   format U_DepVar BEST.;
2087305   +*** Unnormalized target values;
MPRINT(EM_DIAGRAM):   *** Unnormalized target values;
2087306   +ARRAY REG9DRU[2]  _TEMPORARY_ (1 0);
MPRINT(EM_DIAGRAM):   ARRAY REG9DRU[2] _TEMPORARY_ (1 0);
2087307   +
2087308   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
2087309   +drop _Y ;
MPRINT(EM_DIAGRAM):   drop _Y ;
2087310   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2087311   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
2087312   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
2087313   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2087314   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
2087315   +   _Y = .;
MPRINT(EM_DIAGRAM):   _Y = .;
2087316   +end;
MPRINT(EM_DIAGRAM):   end;
2087317   +else do;
MPRINT(EM_DIAGRAM):   else do;
2087318   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
2087319   +      _Y = 1;
MPRINT(EM_DIAGRAM):   _Y = 1;
2087320   +   end;
MPRINT(EM_DIAGRAM):   end;
2087321   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
2087322   +      _Y = 0;
MPRINT(EM_DIAGRAM):   _Y = 0;
2087323   +   end;
MPRINT(EM_DIAGRAM):   end;
2087324   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2087325   +      _Y = .;
MPRINT(EM_DIAGRAM):   _Y = .;
2087326   +   end;
MPRINT(EM_DIAGRAM):   end;
2087327   +end;
MPRINT(EM_DIAGRAM):   end;
2087328   +
2087329   +drop _DM_BAD;
MPRINT(EM_DIAGRAM):   drop _DM_BAD;
2087330   +_DM_BAD=0;
MPRINT(EM_DIAGRAM):   _DM_BAD=0;
2087331   +
2087332   +*** Check Income for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Income for missing values ;
2087333   +if missing( Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( Income ) then do;
2087334   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2087335   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2087336   +end;
MPRINT(EM_DIAGRAM):   end;
2087337   +
2087338   +*** Check MntFishProducts for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntFishProducts for missing values ;
2087339   +if missing( MntFishProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntFishProducts ) then do;
2087340   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2087341   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2087342   +end;
MPRINT(EM_DIAGRAM):   end;
2087343   +
2087344   +*** Check MntFruits for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntFruits for missing values ;
2087345   +if missing( MntFruits ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntFruits ) then do;
2087346   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2087347   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2087348   +end;
MPRINT(EM_DIAGRAM):   end;
2087349   +
2087350   +*** Check MntMeatProducts for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntMeatProducts for missing values ;
2087351   +if missing( MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntMeatProducts ) then do;
2087352   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2087353   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2087354   +end;
MPRINT(EM_DIAGRAM):   end;
2087355   +
2087356   +*** Check MntWines for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntWines for missing values ;
2087357   +if missing( MntWines ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntWines ) then do;
2087358   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2087359   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2087360   +end;
MPRINT(EM_DIAGRAM):   end;
2087361   +
2087362   +*** Check NumCatalogPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumCatalogPurchases for missing values ;
2087363   +if missing( NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumCatalogPurchases ) then do;
2087364   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2087365   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2087366   +end;
MPRINT(EM_DIAGRAM):   end;
2087367   +
2087368   +*** Check NumDealsPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumDealsPurchases for missing values ;
2087369   +if missing( NumDealsPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumDealsPurchases ) then do;
2087370   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2087371   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2087372   +end;
MPRINT(EM_DIAGRAM):   end;
2087373   +
2087374   +*** Check NumStorePurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumStorePurchases for missing values ;
2087375   +if missing( NumStorePurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumStorePurchases ) then do;
2087376   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2087377   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2087378   +end;
MPRINT(EM_DIAGRAM):   end;
2087379   +
2087380   +*** Check NumWebPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumWebPurchases for missing values ;
2087381   +if missing( NumWebPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumWebPurchases ) then do;
2087382   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2087383   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2087384   +end;
MPRINT(EM_DIAGRAM):   end;
2087385   +
2087386   +*** Check NumWebVisitsMonth for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumWebVisitsMonth for missing values ;
2087387   +if missing( NumWebVisitsMonth ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumWebVisitsMonth ) then do;
2087388   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2087389   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2087390   +end;
MPRINT(EM_DIAGRAM):   end;
2087391   +
2087392   +*** Check Recency for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Recency for missing values ;
2087393   +if missing( Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( Recency ) then do;
2087394   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2087395   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2087396   +end;
MPRINT(EM_DIAGRAM):   end;
2087397   +
2087398   +*** Check Teenhome for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Teenhome for missing values ;
2087399   +if missing( Teenhome ) then do;
MPRINT(EM_DIAGRAM):   if missing( Teenhome ) then do;
2087400   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2087401   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2087402   +end;
MPRINT(EM_DIAGRAM):   end;
2087403   +
2087404   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2087405   +drop _1_0 ;
MPRINT(EM_DIAGRAM):   drop _1_0 ;
2087406   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2087407   +   _1_0 = .;
MPRINT(EM_DIAGRAM):   _1_0 = .;
2087408   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2087409   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2087410   +end;
MPRINT(EM_DIAGRAM):   end;
2087411   +else do;
MPRINT(EM_DIAGRAM):   else do;
2087412   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2087413   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2087414   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2087415   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2087416   +      _1_0 = 1;
MPRINT(EM_DIAGRAM):   _1_0 = 1;
2087417   +   end;
MPRINT(EM_DIAGRAM):   end;
2087418   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2087419   +      _1_0 = -1;
MPRINT(EM_DIAGRAM):   _1_0 = -1;
2087420   +   end;
MPRINT(EM_DIAGRAM):   end;
2087421   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2087422   +      _1_0 = .;
MPRINT(EM_DIAGRAM):   _1_0 = .;
2087423   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2087424   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2087425   +   end;
MPRINT(EM_DIAGRAM):   end;
2087426   +end;
MPRINT(EM_DIAGRAM):   end;
2087427   +
2087428   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2087429   +drop _2_0 ;
MPRINT(EM_DIAGRAM):   drop _2_0 ;
2087430   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2087431   +   _2_0 = .;
MPRINT(EM_DIAGRAM):   _2_0 = .;
2087432   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2087433   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2087434   +end;
MPRINT(EM_DIAGRAM):   end;
2087435   +else do;
MPRINT(EM_DIAGRAM):   else do;
2087436   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2087437   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2087438   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2087439   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2087440   +      _2_0 = 1;
MPRINT(EM_DIAGRAM):   _2_0 = 1;
2087441   +   end;
MPRINT(EM_DIAGRAM):   end;
2087442   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2087443   +      _2_0 = -1;
MPRINT(EM_DIAGRAM):   _2_0 = -1;
2087444   +   end;
MPRINT(EM_DIAGRAM):   end;
2087445   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2087446   +      _2_0 = .;
MPRINT(EM_DIAGRAM):   _2_0 = .;
2087447   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2087448   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2087449   +   end;
MPRINT(EM_DIAGRAM):   end;
2087450   +end;
MPRINT(EM_DIAGRAM):   end;
2087451   +
2087452   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2087453   +drop _3_0 ;
MPRINT(EM_DIAGRAM):   drop _3_0 ;
2087454   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2087455   +   _3_0 = .;
MPRINT(EM_DIAGRAM):   _3_0 = .;
2087456   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2087457   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2087458   +end;
MPRINT(EM_DIAGRAM):   end;
2087459   +else do;
MPRINT(EM_DIAGRAM):   else do;
2087460   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2087461   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2087462   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2087463   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2087464   +      _3_0 = 1;
MPRINT(EM_DIAGRAM):   _3_0 = 1;
2087465   +   end;
MPRINT(EM_DIAGRAM):   end;
2087466   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2087467   +      _3_0 = -1;
MPRINT(EM_DIAGRAM):   _3_0 = -1;
2087468   +   end;
MPRINT(EM_DIAGRAM):   end;
2087469   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2087470   +      _3_0 = .;
MPRINT(EM_DIAGRAM):   _3_0 = .;
2087471   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2087472   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2087473   +   end;
MPRINT(EM_DIAGRAM):   end;
2087474   +end;
MPRINT(EM_DIAGRAM):   end;
2087475   +
2087476   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2087477   +drop _4_0 ;
MPRINT(EM_DIAGRAM):   drop _4_0 ;
2087478   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2087479   +   _4_0 = .;
MPRINT(EM_DIAGRAM):   _4_0 = .;
2087480   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2087481   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2087482   +end;
MPRINT(EM_DIAGRAM):   end;
2087483   +else do;
MPRINT(EM_DIAGRAM):   else do;
2087484   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2087485   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2087486   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2087487   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2087488   +      _4_0 = 1;
MPRINT(EM_DIAGRAM):   _4_0 = 1;
2087489   +   end;
MPRINT(EM_DIAGRAM):   end;
2087490   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2087491   +      _4_0 = -1;
MPRINT(EM_DIAGRAM):   _4_0 = -1;
2087492   +   end;
MPRINT(EM_DIAGRAM):   end;
2087493   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2087494   +      _4_0 = .;
MPRINT(EM_DIAGRAM):   _4_0 = .;
2087495   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2087496   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2087497   +   end;
MPRINT(EM_DIAGRAM):   end;
2087498   +end;
MPRINT(EM_DIAGRAM):   end;
2087499   +
2087500   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2087501   +drop _5_0 ;
MPRINT(EM_DIAGRAM):   drop _5_0 ;
2087502   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2087503   +   _5_0 = .;
MPRINT(EM_DIAGRAM):   _5_0 = .;
2087504   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2087505   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2087506   +end;
MPRINT(EM_DIAGRAM):   end;
2087507   +else do;
MPRINT(EM_DIAGRAM):   else do;
2087508   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2087509   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2087510   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2087511   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2087512   +      _5_0 = 1;
MPRINT(EM_DIAGRAM):   _5_0 = 1;
2087513   +   end;
MPRINT(EM_DIAGRAM):   end;
2087514   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2087515   +      _5_0 = -1;
MPRINT(EM_DIAGRAM):   _5_0 = -1;
2087516   +   end;
MPRINT(EM_DIAGRAM):   end;
2087517   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2087518   +      _5_0 = .;
MPRINT(EM_DIAGRAM):   _5_0 = .;
2087519   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2087520   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2087521   +   end;
MPRINT(EM_DIAGRAM):   end;
2087522   +end;
MPRINT(EM_DIAGRAM):   end;
2087523   +
2087524   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2087525   +drop _8_0 _8_1 _8_2 _8_3 ;
MPRINT(EM_DIAGRAM):   drop _8_0 _8_1 _8_2 _8_3 ;
2087526   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2087527   +_8_0 = 0;
MPRINT(EM_DIAGRAM):   _8_0 = 0;
2087528   +_8_1 = 0;
MPRINT(EM_DIAGRAM):   _8_1 = 0;
2087529   +_8_2 = 0;
MPRINT(EM_DIAGRAM):   _8_2 = 0;
2087530   +_8_3 = 0;
MPRINT(EM_DIAGRAM):   _8_3 = 0;
2087531   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2087532   +   _8_0 = .;
MPRINT(EM_DIAGRAM):   _8_0 = .;
2087533   +   _8_1 = .;
MPRINT(EM_DIAGRAM):   _8_1 = .;
2087534   +   _8_2 = .;
MPRINT(EM_DIAGRAM):   _8_2 = .;
2087535   +   _8_3 = .;
MPRINT(EM_DIAGRAM):   _8_3 = .;
2087536   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2087537   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2087538   +end;
MPRINT(EM_DIAGRAM):   end;
2087539   +else do;
MPRINT(EM_DIAGRAM):   else do;
2087540   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2087541   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2087542   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2087543   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2087544   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2087545   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2087546   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2087547   +            _8_0 = 1;
MPRINT(EM_DIAGRAM):   _8_0 = 1;
2087548   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2087549   +         end;
MPRINT(EM_DIAGRAM):   end;
2087550   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2087551   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2087552   +               _8_1 = 1;
MPRINT(EM_DIAGRAM):   _8_1 = 1;
2087553   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2087554   +            end;
MPRINT(EM_DIAGRAM):   end;
2087555   +         end;
MPRINT(EM_DIAGRAM):   end;
2087556   +      end;
MPRINT(EM_DIAGRAM):   end;
2087557   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2087558   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2087559   +            _8_2 = 1;
MPRINT(EM_DIAGRAM):   _8_2 = 1;
2087560   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2087561   +         end;
MPRINT(EM_DIAGRAM):   end;
2087562   +      end;
MPRINT(EM_DIAGRAM):   end;
2087563   +   end;
MPRINT(EM_DIAGRAM):   end;
2087564   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2087565   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2087566   +         _8_3 = 1;
MPRINT(EM_DIAGRAM):   _8_3 = 1;
2087567   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2087568   +      end;
MPRINT(EM_DIAGRAM):   end;
2087569   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2087570   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2087571   +            _8_0 = -1;
MPRINT(EM_DIAGRAM):   _8_0 = -1;
2087572   +            _8_1 = -1;
MPRINT(EM_DIAGRAM):   _8_1 = -1;
2087573   +            _8_2 = -1;
MPRINT(EM_DIAGRAM):   _8_2 = -1;
2087574   +            _8_3 = -1;
MPRINT(EM_DIAGRAM):   _8_3 = -1;
2087575   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2087576   +         end;
MPRINT(EM_DIAGRAM):   end;
2087577   +      end;
MPRINT(EM_DIAGRAM):   end;
2087578   +   end;
MPRINT(EM_DIAGRAM):   end;
2087579   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2087580   +      _8_0 = .;
MPRINT(EM_DIAGRAM):   _8_0 = .;
2087581   +      _8_1 = .;
MPRINT(EM_DIAGRAM):   _8_1 = .;
2087582   +      _8_2 = .;
MPRINT(EM_DIAGRAM):   _8_2 = .;
2087583   +      _8_3 = .;
MPRINT(EM_DIAGRAM):   _8_3 = .;
2087584   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2087585   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2087586   +   end;
MPRINT(EM_DIAGRAM):   end;
2087587   +end;
MPRINT(EM_DIAGRAM):   end;
2087588   +
2087589   +*** If missing inputs, use averages;
MPRINT(EM_DIAGRAM):   *** If missing inputs, use averages;
2087590   +if _DM_BAD > 0 then do;
MPRINT(EM_DIAGRAM):   if _DM_BAD > 0 then do;
2087591   +   _P0 = 0.151221567;
MPRINT(EM_DIAGRAM):   _P0 = 0.151221567;
2087592   +   _P1 = 0.848778433;
MPRINT(EM_DIAGRAM):   _P1 = 0.848778433;
2087593   +   goto REG9DR1;
MPRINT(EM_DIAGRAM):   goto REG9DR1;
2087594   +end;
MPRINT(EM_DIAGRAM):   end;
2087595   +
2087596   +*** Compute Linear Predictor;
MPRINT(EM_DIAGRAM):   *** Compute Linear Predictor;
2087597   +drop _TEMP;
MPRINT(EM_DIAGRAM):   drop _TEMP;
2087598   +drop _LP0;
MPRINT(EM_DIAGRAM):   drop _LP0;
2087599   +_LP0 = 0;
MPRINT(EM_DIAGRAM):   _LP0 = 0;
2087600   +
2087601   +***  Effect: AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Effect: AcceptedCmp1 ;
2087602   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
2087603   +_LP0 = _LP0 + (   -1.28114872833376) * _TEMP * _1_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.28114872833376) * _TEMP * _1_0;
2087604   +
2087605   +***  Effect: AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Effect: AcceptedCmp2 ;
2087606   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
2087607   +_LP0 = _LP0 + (    -1.4871451186069) * _TEMP * _2_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.4871451186069) * _TEMP * _2_0;
2087608   +
2087609   +***  Effect: AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Effect: AcceptedCmp3 ;
2087610   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
2087611   +_LP0 = _LP0 + (   -1.58721567367346) * _TEMP * _3_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.58721567367346) * _TEMP * _3_0;
2087612   +
2087613   +***  Effect: AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Effect: AcceptedCmp4 ;
2087614   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
2087615   +_LP0 = _LP0 + (    -1.1573037622615) * _TEMP * _4_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.1573037622615) * _TEMP * _4_0;
2087616   +
2087617   +***  Effect: AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Effect: AcceptedCmp5 ;
2087618   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
2087619   +_LP0 = _LP0 + (   -1.68835129992038) * _TEMP * _5_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.68835129992038) * _TEMP * _5_0;
2087620   +
2087621   +***  Effect: Income ;
MPRINT(EM_DIAGRAM):   *** Effect: Income ;
2087622   +_TEMP = Income ;
MPRINT(EM_DIAGRAM):   _TEMP = Income ;
2087623   +_LP0 = _LP0 + (    0.00006770818936 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00006770818936 * _TEMP);
2087624   +
2087625   +***  Effect: Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Effect: Marital_Status ;
2087626   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
2087627   +_LP0 = _LP0 + (    0.18351716765826) * _TEMP * _8_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.18351716765826) * _TEMP * _8_0;
2087628   +_LP0 = _LP0 + (   -0.88993819943493) * _TEMP * _8_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.88993819943493) * _TEMP * _8_1;
2087629   +_LP0 = _LP0 + (    0.89971120865107) * _TEMP * _8_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.89971120865107) * _TEMP * _8_2;
2087630   +_LP0 = _LP0 + (   -0.96825171718714) * _TEMP * _8_3;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.96825171718714) * _TEMP * _8_3;
2087631   +
2087632   +***  Effect: MntFishProducts ;
MPRINT(EM_DIAGRAM):   *** Effect: MntFishProducts ;
2087633   +_TEMP = MntFishProducts ;
MPRINT(EM_DIAGRAM):   _TEMP = MntFishProducts ;
2087634   +_LP0 = _LP0 + (    -0.0053789406447 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.0053789406447 * _TEMP);
2087635   +
2087636   +***  Effect: MntFruits ;
MPRINT(EM_DIAGRAM):   *** Effect: MntFruits ;
2087637   +_TEMP = MntFruits ;
MPRINT(EM_DIAGRAM):   _TEMP = MntFruits ;
2087638   +_LP0 = _LP0 + (   -0.00810096702081 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.00810096702081 * _TEMP);
2087639   +
2087640   +***  Effect: MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Effect: MntMeatProducts ;
2087641   +_TEMP = MntMeatProducts ;
MPRINT(EM_DIAGRAM):   _TEMP = MntMeatProducts ;
2087642   +_LP0 = _LP0 + (    0.00876618054091 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00876618054091 * _TEMP);
2087643   +
2087644   +***  Effect: MntWines ;
MPRINT(EM_DIAGRAM):   *** Effect: MntWines ;
2087645   +_TEMP = MntWines ;
MPRINT(EM_DIAGRAM):   _TEMP = MntWines ;
2087646   +_LP0 = _LP0 + (   -0.00323708533956 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.00323708533956 * _TEMP);
2087647   +
2087648   +***  Effect: NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumCatalogPurchases ;
2087649   +_TEMP = NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumCatalogPurchases ;
2087650   +_LP0 = _LP0 + (    0.72583602627024 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.72583602627024 * _TEMP);
2087651   +
2087652   +***  Effect: NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumDealsPurchases ;
2087653   +_TEMP = NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumDealsPurchases ;
2087654   +_LP0 = _LP0 + (    0.71587738133808 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.71587738133808 * _TEMP);
2087655   +
2087656   +***  Effect: NumStorePurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumStorePurchases ;
2087657   +_TEMP = NumStorePurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumStorePurchases ;
2087658   +_LP0 = _LP0 + (   -0.38414846639641 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.38414846639641 * _TEMP);
2087659   +
2087660   +***  Effect: NumWebPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumWebPurchases ;
2087661   +_TEMP = NumWebPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumWebPurchases ;
2087662   +_LP0 = _LP0 + (   -0.39960732899531 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.39960732899531 * _TEMP);
2087663   +
2087664   +***  Effect: NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   *** Effect: NumWebVisitsMonth ;
2087665   +_TEMP = NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   _TEMP = NumWebVisitsMonth ;
2087666   +_LP0 = _LP0 + (    1.00690630599849 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.00690630599849 * _TEMP);
2087667   +
2087668   +***  Effect: Recency ;
MPRINT(EM_DIAGRAM):   *** Effect: Recency ;
2087669   +_TEMP = Recency ;
MPRINT(EM_DIAGRAM):   _TEMP = Recency ;
2087670   +_LP0 = _LP0 + (   -0.10368937560371 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.10368937560371 * _TEMP);
2087671   +
2087672   +***  Effect: Teenhome ;
MPRINT(EM_DIAGRAM):   *** Effect: Teenhome ;
2087673   +_TEMP = Teenhome ;
MPRINT(EM_DIAGRAM):   _TEMP = Teenhome ;
2087674   +_LP0 = _LP0 + (   -1.33387551959166 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.33387551959166 * _TEMP);
2087675   +
2087676   +*** Naive Posterior Probabilities;
MPRINT(EM_DIAGRAM):   *** Naive Posterior Probabilities;
2087677   +drop _MAXP _IY _P0 _P1;
MPRINT(EM_DIAGRAM):   drop _MAXP _IY _P0 _P1;
2087678   +_TEMP =    -1.29156803352583 + _LP0;
MPRINT(EM_DIAGRAM):   _TEMP = -1.29156803352583 + _LP0;
2087679   +if (_TEMP < 0) then do;
MPRINT(EM_DIAGRAM):   if (_TEMP < 0) then do;
2087680   +   _TEMP = exp(_TEMP);
MPRINT(EM_DIAGRAM):   _TEMP = exp(_TEMP);
2087681   +   _P0 = _TEMP / (1 + _TEMP);
MPRINT(EM_DIAGRAM):   _P0 = _TEMP / (1 + _TEMP);
2087682   +end;
MPRINT(EM_DIAGRAM):   end;
2087683   +else _P0 = 1 / (1 + exp(-_TEMP));
MPRINT(EM_DIAGRAM):   else _P0 = 1 / (1 + exp(-_TEMP));
2087684   +_P1 = 1.0 - _P0;
MPRINT(EM_DIAGRAM):   _P1 = 1.0 - _P0;
2087685   +
2087686   +REG9DR1:
2087687   +
2087688   +*** Residuals;
MPRINT(EM_DIAGRAM):   REG9DR1: *** Residuals;
2087689   +if (_Y = .) then do;
MPRINT(EM_DIAGRAM):   if (_Y = .) then do;
2087690   +   R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
2087691   +   R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
2087692   +end;
MPRINT(EM_DIAGRAM):   end;
2087693   +else do;
MPRINT(EM_DIAGRAM):   else do;
2087694   +    label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
2087695   +    label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
2087696   +   R_DepVar1 = - _P0;
MPRINT(EM_DIAGRAM):   R_DepVar1 = - _P0;
2087697   +   R_DepVar0 = - _P1;
MPRINT(EM_DIAGRAM):   R_DepVar0 = - _P1;
2087698   +   select( _Y );
MPRINT(EM_DIAGRAM):   select( _Y );
2087699   +      when (0)  R_DepVar1 = R_DepVar1 + 1;
MPRINT(EM_DIAGRAM):   when (0) R_DepVar1 = R_DepVar1 + 1;
2087700   +      when (1)  R_DepVar0 = R_DepVar0 + 1;
MPRINT(EM_DIAGRAM):   when (1) R_DepVar0 = R_DepVar0 + 1;
2087701   +   end;
MPRINT(EM_DIAGRAM):   end;
2087702   +end;
MPRINT(EM_DIAGRAM):   end;
2087703   +
2087704   +*** Posterior Probabilities and Predicted Level;
MPRINT(EM_DIAGRAM):   *** Posterior Probabilities and Predicted Level;
2087705   +label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2087706   +label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2087707   +P_DepVar1 = _P0;
MPRINT(EM_DIAGRAM):   P_DepVar1 = _P0;
2087708   +_MAXP = _P0;
MPRINT(EM_DIAGRAM):   _MAXP = _P0;
2087709   +_IY = 1;
MPRINT(EM_DIAGRAM):   _IY = 1;
2087710   +P_DepVar0 = _P1;
MPRINT(EM_DIAGRAM):   P_DepVar0 = _P1;
2087711   +if (_P1 >  _MAXP + 1E-8) then do;
MPRINT(EM_DIAGRAM):   if (_P1 > _MAXP + 1E-8) then do;
2087712   +   _MAXP = _P1;
MPRINT(EM_DIAGRAM):   _MAXP = _P1;
2087713   +   _IY = 2;
MPRINT(EM_DIAGRAM):   _IY = 2;
2087714   +end;
MPRINT(EM_DIAGRAM):   end;
2087715   +I_DepVar = REG9DRF[_IY];
MPRINT(EM_DIAGRAM):   I_DepVar = REG9DRF[_IY];
2087716   +U_DepVar = REG9DRU[_IY];
MPRINT(EM_DIAGRAM):   U_DepVar = REG9DRU[_IY];
2087717   +
2087718   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
2087719   +***** end scoring code for regression;
MPRINT(EM_DIAGRAM):   ***** end scoring code for regression;
2087720   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
2087721   +* Renaming variables for Reg9;
MPRINT(EM_DIAGRAM):   * Renaming variables for Reg9;
2087722   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2087723   +* Renaming Posterior variables for Reg9;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Reg9;
2087724   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2087725   +drop Reg9_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Reg9_P_DepVar1;
2087726   +Reg9_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Reg9_P_DepVar1 = P_DepVar1;
2087727   +drop Reg9_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Reg9_P_DepVar0;
2087728   +Reg9_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Reg9_P_DepVar0 = P_DepVar0;
2087729   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2087730   +* Renaming _WARN_ variable for Reg9;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Reg9;
2087731   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2087732   +length Reg9_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Reg9_WARN_ $4;
2087733   +drop Reg9_WARN_;
MPRINT(EM_DIAGRAM):   drop Reg9_WARN_;
2087734   +Reg9_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Reg9_WARN_ = _WARN_;
2087735   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2087736   +* Ensmbl9: Scoring Code of model 3 of 10;
MPRINT(EM_DIAGRAM):   * Ensmbl9: Scoring Code of model 3 of 10;
2087737   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2087738   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2087739   +* TOOL: Decision Tree;
MPRINT(EM_DIAGRAM):   * TOOL: Decision Tree;
2087740   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
2087741   +* NODE: Tree5;
MPRINT(EM_DIAGRAM):   * NODE: Tree5;
2087742   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2087743   +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
2087744   +******             DECISION TREE SCORING CODE             ******;
MPRINT(EM_DIAGRAM):   ****** DECISION TREE SCORING CODE ******;
2087745   +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
2087746   +
2087747   +******         LENGTHS OF NEW CHARACTER VARIABLES         ******;
MPRINT(EM_DIAGRAM):   ****** LENGTHS OF NEW CHARACTER VARIABLES ******;
2087748   +LENGTH F_DepVar  $   12;
MPRINT(EM_DIAGRAM):   LENGTH F_DepVar $ 12;
2087749   +LENGTH I_DepVar  $   12;
MPRINT(EM_DIAGRAM):   LENGTH I_DepVar $ 12;
2087750   +LENGTH _WARN_  $    4;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $ 4;
2087751   +
2087752   +******              LABELS FOR NEW VARIABLES              ******;
MPRINT(EM_DIAGRAM):   ****** LABELS FOR NEW VARIABLES ******;
2087753   +LABEL _NODE_  = 'Node' ;
MPRINT(EM_DIAGRAM):   LABEL _NODE_ = 'Node' ;
2087754   +LABEL _LEAF_  = 'Leaf' ;
MPRINT(EM_DIAGRAM):   LABEL _LEAF_ = 'Leaf' ;
2087755   +LABEL P_DepVar0  = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   LABEL P_DepVar0 = 'Predicted: DepVar=0' ;
2087756   +LABEL P_DepVar1  = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   LABEL P_DepVar1 = 'Predicted: DepVar=1' ;
2087757   +LABEL Q_DepVar0  = 'Unadjusted P: DepVar=0' ;
MPRINT(EM_DIAGRAM):   LABEL Q_DepVar0 = 'Unadjusted P: DepVar=0' ;
2087758   +LABEL Q_DepVar1  = 'Unadjusted P: DepVar=1' ;
MPRINT(EM_DIAGRAM):   LABEL Q_DepVar1 = 'Unadjusted P: DepVar=1' ;
2087759   +LABEL V_DepVar0  = 'Validated: DepVar=0' ;
MPRINT(EM_DIAGRAM):   LABEL V_DepVar0 = 'Validated: DepVar=0' ;
2087760   +LABEL V_DepVar1  = 'Validated: DepVar=1' ;
MPRINT(EM_DIAGRAM):   LABEL V_DepVar1 = 'Validated: DepVar=1' ;
2087761   +LABEL R_DepVar0  = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   LABEL R_DepVar0 = 'Residual: DepVar=0' ;
2087762   +LABEL R_DepVar1  = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   LABEL R_DepVar1 = 'Residual: DepVar=1' ;
2087763   +LABEL F_DepVar  = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   LABEL F_DepVar = 'From: DepVar' ;
2087764   +LABEL I_DepVar  = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   LABEL I_DepVar = 'Into: DepVar' ;
2087765   +LABEL U_DepVar  = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   LABEL U_DepVar = 'Unnormalized Into: DepVar' ;
2087766   +LABEL _WARN_  = 'Warnings' ;
MPRINT(EM_DIAGRAM):   LABEL _WARN_ = 'Warnings' ;
2087767   +
2087768   +
2087769   +******      TEMPORARY VARIABLES FOR FORMATTED VALUES      ******;
MPRINT(EM_DIAGRAM):   ****** TEMPORARY VARIABLES FOR FORMATTED VALUES ******;
2087770   +LENGTH _ARBFMT_12 $     12; DROP _ARBFMT_12;
MPRINT(EM_DIAGRAM):   LENGTH _ARBFMT_12 $ 12;
MPRINT(EM_DIAGRAM):   DROP _ARBFMT_12;
2087771   +_ARBFMT_12 = ' '; /* Initialize to avoid warning. */
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = ' ';
2087772   +LENGTH _ARBFMT_8 $      8; DROP _ARBFMT_8;
MPRINT(EM_DIAGRAM):   LENGTH _ARBFMT_8 $ 8;
MPRINT(EM_DIAGRAM):   DROP _ARBFMT_8;
2087773   +_ARBFMT_8 = ' '; /* Initialize to avoid warning. */
MPRINT(EM_DIAGRAM):   _ARBFMT_8 = ' ';
2087774   +
2087775   +
2087776   +_ARBFMT_12 = PUT( DepVar , BEST.);
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( DepVar , BEST.);
2087777   + %DMNORMCP( _ARBFMT_12, F_DepVar );
MPRINT(DMNORMCP):   F_DepVar=dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2087778   +
2087779   +******             ASSIGN OBSERVATION TO NODE             ******;
MPRINT(EM_DIAGRAM):   ****** ASSIGN OBSERVATION TO NODE ******;
2087780   +IF  NOT MISSING(Recency ) AND
2087781   +  Recency  <                 38.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(Recency ) AND Recency < 38.5 THEN DO;
2087782   +  IF  NOT MISSING(MntMeatProducts ) AND
2087783   +                   431.5 <= MntMeatProducts  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(MntMeatProducts ) AND 431.5 <= MntMeatProducts THEN DO;
2087784   +    IF  NOT MISSING(NumCatalogPurchases ) AND
2087785   +      NumCatalogPurchases  <                  5.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(NumCatalogPurchases ) AND NumCatalogPurchases < 5.5 THEN 
DO;
2087786   +      _ARBFMT_8 = PUT( Marital_Status , $8.);
MPRINT(EM_DIAGRAM):   _ARBFMT_8 = PUT( Marital_Status , $8.);
2087787   +       %DMNORMIP( _ARBFMT_8);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
2087788   +      IF _ARBFMT_8 IN ('MARRIED' ,'TOGETHER' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_8 IN ('MARRIED' ,'TOGETHER' ) THEN DO;
2087789   +        _NODE_  =                   21;
MPRINT(EM_DIAGRAM):   _NODE_ = 21;
2087790   +        _LEAF_  =                    5;
MPRINT(EM_DIAGRAM):   _LEAF_ = 5;
2087791   +        P_DepVar0  =     0.71052631578947;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.71052631578947;
2087792   +        P_DepVar1  =     0.28947368421052;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.28947368421052;
2087793   +        Q_DepVar0  =     0.71052631578947;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.71052631578947;
2087794   +        Q_DepVar1  =     0.28947368421052;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.28947368421052;
2087795   +        V_DepVar0  =     0.66666666666666;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.66666666666666;
2087796   +        V_DepVar1  =     0.33333333333333;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.33333333333333;
2087797   +        I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
2087798   +        U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2087799   +        END;
MPRINT(EM_DIAGRAM):   END;
2087800   +      ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2087801   +        _NODE_  =                   20;
MPRINT(EM_DIAGRAM):   _NODE_ = 20;
2087802   +        _LEAF_  =                    4;
MPRINT(EM_DIAGRAM):   _LEAF_ = 4;
2087803   +        P_DepVar0  =     0.17647058823529;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.17647058823529;
2087804   +        P_DepVar1  =      0.8235294117647;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.8235294117647;
2087805   +        Q_DepVar0  =     0.17647058823529;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.17647058823529;
2087806   +        Q_DepVar1  =      0.8235294117647;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.8235294117647;
2087807   +        V_DepVar0  =                 0.25;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.25;
2087808   +        V_DepVar1  =                 0.75;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.75;
2087809   +        I_DepVar  = '1' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '1' ;
2087810   +        U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2087811   +        END;
MPRINT(EM_DIAGRAM):   END;
2087812   +      END;
MPRINT(EM_DIAGRAM):   END;
2087813   +    ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2087814   +      _NODE_  =                   11;
MPRINT(EM_DIAGRAM):   _NODE_ = 11;
2087815   +      _LEAF_  =                    6;
MPRINT(EM_DIAGRAM):   _LEAF_ = 6;
2087816   +      P_DepVar0  =     0.15730337078651;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.15730337078651;
2087817   +      P_DepVar1  =     0.84269662921348;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.84269662921348;
2087818   +      Q_DepVar0  =     0.15730337078651;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.15730337078651;
2087819   +      Q_DepVar1  =     0.84269662921348;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.84269662921348;
2087820   +      V_DepVar0  =     0.29411764705882;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.29411764705882;
2087821   +      V_DepVar1  =     0.70588235294117;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.70588235294117;
2087822   +      I_DepVar  = '1' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '1' ;
2087823   +      U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2087824   +      END;
MPRINT(EM_DIAGRAM):   END;
2087825   +    END;
MPRINT(EM_DIAGRAM):   END;
2087826   +  ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2087827   +    _ARBFMT_12 = PUT( AcceptedCmp3 , BEST.);
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( AcceptedCmp3 , BEST.);
2087828   +     %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
2087829   +    IF _ARBFMT_12 IN ('1' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('1' ) THEN DO;
2087830   +      IF  NOT MISSING(NumWebVisitsMonth ) AND
2087831   +        NumWebVisitsMonth  <                  5.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(NumWebVisitsMonth ) AND NumWebVisitsMonth < 5.5 THEN DO;
2087832   +        _NODE_  =                   16;
MPRINT(EM_DIAGRAM):   _NODE_ = 16;
2087833   +        _LEAF_  =                    1;
MPRINT(EM_DIAGRAM):   _LEAF_ = 1;
2087834   +        P_DepVar0  =     0.64705882352941;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.64705882352941;
2087835   +        P_DepVar1  =     0.35294117647058;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.35294117647058;
2087836   +        Q_DepVar0  =     0.64705882352941;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.64705882352941;
2087837   +        Q_DepVar1  =     0.35294117647058;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.35294117647058;
2087838   +        V_DepVar0  =     0.57142857142857;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.57142857142857;
2087839   +        V_DepVar1  =     0.42857142857142;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.42857142857142;
2087840   +        I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
2087841   +        U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2087842   +        END;
MPRINT(EM_DIAGRAM):   END;
2087843   +      ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2087844   +        _NODE_  =                   17;
MPRINT(EM_DIAGRAM):   _NODE_ = 17;
2087845   +        _LEAF_  =                    2;
MPRINT(EM_DIAGRAM):   _LEAF_ = 2;
2087846   +        P_DepVar0  =     0.17391304347826;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.17391304347826;
2087847   +        P_DepVar1  =     0.82608695652173;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.82608695652173;
2087848   +        Q_DepVar0  =     0.17391304347826;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.17391304347826;
2087849   +        Q_DepVar1  =     0.82608695652173;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.82608695652173;
2087850   +        V_DepVar0  =                 0.15;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.15;
2087851   +        V_DepVar1  =                 0.85;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.85;
2087852   +        I_DepVar  = '1' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '1' ;
2087853   +        U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2087854   +        END;
MPRINT(EM_DIAGRAM):   END;
2087855   +      END;
MPRINT(EM_DIAGRAM):   END;
2087856   +    ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2087857   +      _NODE_  =                    9;
MPRINT(EM_DIAGRAM):   _NODE_ = 9;
2087858   +      _LEAF_  =                    3;
MPRINT(EM_DIAGRAM):   _LEAF_ = 3;
2087859   +      P_DepVar0  =     0.82099596231493;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.82099596231493;
2087860   +      P_DepVar1  =     0.17900403768506;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.17900403768506;
2087861   +      Q_DepVar0  =     0.82099596231493;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.82099596231493;
2087862   +      Q_DepVar1  =     0.17900403768506;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.17900403768506;
2087863   +      V_DepVar0  =     0.80966767371601;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.80966767371601;
2087864   +      V_DepVar1  =     0.19033232628398;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.19033232628398;
2087865   +      I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
2087866   +      U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2087867   +      END;
MPRINT(EM_DIAGRAM):   END;
2087868   +    END;
MPRINT(EM_DIAGRAM):   END;
2087869   +  END;
MPRINT(EM_DIAGRAM):   END;
2087870   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2087871   +  _ARBFMT_12 = PUT( AcceptedCmp5 , BEST.);
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( AcceptedCmp5 , BEST.);
2087872   +   %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
2087873   +  IF _ARBFMT_12 IN ('1' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('1' ) THEN DO;
2087874   +    IF  NOT MISSING(MntWines ) AND
2087875   +      MntWines  <                412.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(MntWines ) AND MntWines < 412.5 THEN DO;
2087876   +      _NODE_  =                   12;
MPRINT(EM_DIAGRAM):   _NODE_ = 12;
2087877   +      _LEAF_  =                    7;
MPRINT(EM_DIAGRAM):   _LEAF_ = 7;
2087878   +      P_DepVar0  =     0.13333333333333;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.13333333333333;
2087879   +      P_DepVar1  =     0.86666666666666;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.86666666666666;
2087880   +      Q_DepVar0  =     0.13333333333333;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.13333333333333;
2087881   +      Q_DepVar1  =     0.86666666666666;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.86666666666666;
2087882   +      V_DepVar0  =     0.16666666666666;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.16666666666666;
2087883   +      V_DepVar1  =     0.83333333333333;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.83333333333333;
2087884   +      I_DepVar  = '1' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '1' ;
2087885   +      U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2087886   +      END;
MPRINT(EM_DIAGRAM):   END;
2087887   +    ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2087888   +      _NODE_  =                   13;
MPRINT(EM_DIAGRAM):   _NODE_ = 13;
2087889   +      _LEAF_  =                    8;
MPRINT(EM_DIAGRAM):   _LEAF_ = 8;
2087890   +      P_DepVar0  =     0.70833333333333;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.70833333333333;
2087891   +      P_DepVar1  =     0.29166666666666;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.29166666666666;
2087892   +      Q_DepVar0  =     0.70833333333333;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.70833333333333;
2087893   +      Q_DepVar1  =     0.29166666666666;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.29166666666666;
2087894   +      V_DepVar0  =     0.63461538461538;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.63461538461538;
2087895   +      V_DepVar1  =     0.36538461538461;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.36538461538461;
2087896   +      I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
2087897   +      U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2087898   +      END;
MPRINT(EM_DIAGRAM):   END;
2087899   +    END;
MPRINT(EM_DIAGRAM):   END;
2087900   +  ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2087901   +    _NODE_  =                    7;
MPRINT(EM_DIAGRAM):   _NODE_ = 7;
2087902   +    _LEAF_  =                    9;
MPRINT(EM_DIAGRAM):   _LEAF_ = 9;
2087903   +    P_DepVar0  =     0.96877380045696;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.96877380045696;
2087904   +    P_DepVar1  =     0.03122619954303;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.03122619954303;
2087905   +    Q_DepVar0  =     0.96877380045696;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.96877380045696;
2087906   +    Q_DepVar1  =     0.03122619954303;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.03122619954303;
2087907   +    V_DepVar0  =     0.96756756756756;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.96756756756756;
2087908   +    V_DepVar1  =     0.03243243243243;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.03243243243243;
2087909   +    I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
2087910   +    U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2087911   +    END;
MPRINT(EM_DIAGRAM):   END;
2087912   +  END;
MPRINT(EM_DIAGRAM):   END;
2087913   +
2087914   +*****  RESIDUALS R_ *************;
MPRINT(EM_DIAGRAM):   ***** RESIDUALS R_ *************;
2087915   +IF  F_DepVar  NE '0'
2087916   +AND F_DepVar  NE '1'  THEN DO;
MPRINT(EM_DIAGRAM):   IF F_DepVar NE '0' AND F_DepVar NE '1' THEN DO;
2087917   +        R_DepVar0  = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
2087918   +        R_DepVar1  = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
2087919   + END;
MPRINT(EM_DIAGRAM):   END;
2087920   + ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2087921   +       R_DepVar0  =  -P_DepVar0 ;
MPRINT(EM_DIAGRAM):   R_DepVar0 = -P_DepVar0 ;
2087922   +       R_DepVar1  =  -P_DepVar1 ;
MPRINT(EM_DIAGRAM):   R_DepVar1 = -P_DepVar1 ;
2087923   +       SELECT( F_DepVar  );
MPRINT(EM_DIAGRAM):   SELECT( F_DepVar );
2087924   +          WHEN( '0'  ) R_DepVar0  = R_DepVar0  +1;
MPRINT(EM_DIAGRAM):   WHEN( '0' ) R_DepVar0 = R_DepVar0 +1;
2087925   +          WHEN( '1'  ) R_DepVar1  = R_DepVar1  +1;
MPRINT(EM_DIAGRAM):   WHEN( '1' ) R_DepVar1 = R_DepVar1 +1;
2087926   +       END;
MPRINT(EM_DIAGRAM):   END;
2087927   + END;
MPRINT(EM_DIAGRAM):   END;
2087928   +
2087929   +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
2087930   +******          END OF DECISION TREE SCORING CODE         ******;
MPRINT(EM_DIAGRAM):   ****** END OF DECISION TREE SCORING CODE ******;
2087931   +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
2087932   +drop _LEAF_;
MPRINT(EM_DIAGRAM):   drop _LEAF_;
2087933   +* Renaming variables for Tree5;
MPRINT(EM_DIAGRAM):   * Renaming variables for Tree5;
2087934   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2087935   +* Renaming Posterior variables for Tree5;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Tree5;
2087936   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2087937   +drop Tree5_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Tree5_P_DepVar1;
2087938   +Tree5_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Tree5_P_DepVar1 = P_DepVar1;
2087939   +drop Tree5_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Tree5_P_DepVar0;
2087940   +Tree5_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Tree5_P_DepVar0 = P_DepVar0;
2087941   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2087942   +* Renaming _WARN_ variable for Tree5;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Tree5;
2087943   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2087944   +length Tree5_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Tree5_WARN_ $4;
2087945   +drop Tree5_WARN_;
MPRINT(EM_DIAGRAM):   drop Tree5_WARN_;
2087946   +Tree5_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Tree5_WARN_ = _WARN_;
2087947   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2087948   +* Ensmbl9: Scoring Code of model 4 of 10;
MPRINT(EM_DIAGRAM):   * Ensmbl9: Scoring Code of model 4 of 10;
2087949   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2087950   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2087951   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
2087952   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
2087953   +* NODE: Neural30;
MPRINT(EM_DIAGRAM):   * NODE: Neural30;
2087954   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2087955   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2087956   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2087957   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2087958   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2087959   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2087960   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2087961   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2087962   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2087963   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2087964   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2087965   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2087966   +LENGTH _WARN_ $4
2087967   +      F_DepVar  $ 12
2087968   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
2087969   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2087970   +
2087971   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2087972   +
2087973   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2087974   +
2087975   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2087976   +
2087977   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2087978   +
2087979   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2087980   +
2087981   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2087982   +
2087983   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2087984   +
2087985   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2087986   +
2087987   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2087988   +
2087989   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2087990   +
2087991   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2087992   +
2087993   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2087994   +
2087995   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2087996   +
2087997   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2087998   +
2087999   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2088000   +
2088001   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2088002   +
2088003   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2088004   +
2088005   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2088006   +
2088007   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2088008   +
2088009   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2088010   +
2088011   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2088012   +
2088013   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2088014   +
2088015   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2088016   +
2088017   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2088018   +
2088019   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2088020   +
2088021   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2088022   +
2088023   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2088024   +
2088025   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2088026   +
2088027   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
2088028   +
2088029   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
2088030   +
2088031   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
2088032   +
2088033   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
2088034   +
2088035   +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
2088036   +
2088037   +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
2088038   +
2088039   +      label H17 = 'Hidden: H1=7' ;
MPRINT(EM_DIAGRAM):   label H17 = 'Hidden: H1=7' ;
2088040   +
2088041   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2088042   +
2088043   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2088044   +
2088045   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2088046   +
2088047   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2088048   +
2088049   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
2088050   +
2088051   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2088052   +
2088053   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
2088054   +
2088055   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2088056   +
2088057   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2088058   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2088059   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2088060   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2088061   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2088062   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2088063   +end;
MPRINT(EM_DIAGRAM):   end;
2088064   +else do;
MPRINT(EM_DIAGRAM):   else do;
2088065   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2088066   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2088067   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2088068   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2088069   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2088070   +   end;
MPRINT(EM_DIAGRAM):   end;
2088071   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2088072   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2088073   +   end;
MPRINT(EM_DIAGRAM):   end;
2088074   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2088075   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2088076   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2088077   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2088078   +   end;
MPRINT(EM_DIAGRAM):   end;
2088079   +end;
MPRINT(EM_DIAGRAM):   end;
2088080   +
2088081   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2088082   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2088083   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2088084   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2088085   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2088086   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2088087   +end;
MPRINT(EM_DIAGRAM):   end;
2088088   +else do;
MPRINT(EM_DIAGRAM):   else do;
2088089   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2088090   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2088091   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2088092   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2088093   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2088094   +   end;
MPRINT(EM_DIAGRAM):   end;
2088095   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2088096   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2088097   +   end;
MPRINT(EM_DIAGRAM):   end;
2088098   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2088099   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2088100   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2088101   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2088102   +   end;
MPRINT(EM_DIAGRAM):   end;
2088103   +end;
MPRINT(EM_DIAGRAM):   end;
2088104   +
2088105   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2088106   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2088107   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2088108   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2088109   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2088110   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2088111   +end;
MPRINT(EM_DIAGRAM):   end;
2088112   +else do;
MPRINT(EM_DIAGRAM):   else do;
2088113   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2088114   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2088115   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2088116   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2088117   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2088118   +   end;
MPRINT(EM_DIAGRAM):   end;
2088119   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2088120   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2088121   +   end;
MPRINT(EM_DIAGRAM):   end;
2088122   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2088123   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2088124   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2088125   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2088126   +   end;
MPRINT(EM_DIAGRAM):   end;
2088127   +end;
MPRINT(EM_DIAGRAM):   end;
2088128   +
2088129   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2088130   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2088131   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2088132   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2088133   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2088134   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2088135   +end;
MPRINT(EM_DIAGRAM):   end;
2088136   +else do;
MPRINT(EM_DIAGRAM):   else do;
2088137   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2088138   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2088139   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2088140   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2088141   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2088142   +   end;
MPRINT(EM_DIAGRAM):   end;
2088143   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2088144   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2088145   +   end;
MPRINT(EM_DIAGRAM):   end;
2088146   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2088147   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2088148   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2088149   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2088150   +   end;
MPRINT(EM_DIAGRAM):   end;
2088151   +end;
MPRINT(EM_DIAGRAM):   end;
2088152   +
2088153   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2088154   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2088155   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2088156   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2088157   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2088158   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2088159   +end;
MPRINT(EM_DIAGRAM):   end;
2088160   +else do;
MPRINT(EM_DIAGRAM):   else do;
2088161   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2088162   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2088163   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2088164   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2088165   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2088166   +   end;
MPRINT(EM_DIAGRAM):   end;
2088167   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2088168   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2088169   +   end;
MPRINT(EM_DIAGRAM):   end;
2088170   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2088171   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2088172   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2088173   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2088174   +   end;
MPRINT(EM_DIAGRAM):   end;
2088175   +end;
MPRINT(EM_DIAGRAM):   end;
2088176   +
2088177   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2088178   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2088179   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2088180   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2088181   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2088182   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2088183   +end;
MPRINT(EM_DIAGRAM):   end;
2088184   +else do;
MPRINT(EM_DIAGRAM):   else do;
2088185   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2088186   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2088187   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2088188   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2088189   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2088190   +   end;
MPRINT(EM_DIAGRAM):   end;
2088191   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2088192   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2088193   +   end;
MPRINT(EM_DIAGRAM):   end;
2088194   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2088195   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2088196   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2088197   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2088198   +   end;
MPRINT(EM_DIAGRAM):   end;
2088199   +end;
MPRINT(EM_DIAGRAM):   end;
2088200   +
2088201   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2088202   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
2088203   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2088204   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2088205   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2088206   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2088207   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2088208   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2088209   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2088210   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2088211   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2088212   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2088213   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2088214   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2088215   +end;
MPRINT(EM_DIAGRAM):   end;
2088216   +else do;
MPRINT(EM_DIAGRAM):   else do;
2088217   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2088218   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2088219   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2088220   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2088221   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2088222   +   end;
MPRINT(EM_DIAGRAM):   end;
2088223   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2088224   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2088225   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2088226   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2088227   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2088228   +   end;
MPRINT(EM_DIAGRAM):   end;
2088229   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2088230   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2088231   +   end;
MPRINT(EM_DIAGRAM):   end;
2088232   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2088233   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2088234   +   end;
MPRINT(EM_DIAGRAM):   end;
2088235   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2088236   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2088237   +   end;
MPRINT(EM_DIAGRAM):   end;
2088238   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2088239   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2088240   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2088241   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2088242   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2088243   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2088244   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2088245   +   end;
MPRINT(EM_DIAGRAM):   end;
2088246   +end;
MPRINT(EM_DIAGRAM):   end;
2088247   +
2088248   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2088249   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2088250   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
2088251   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2088252   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2088253   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2088254   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2088255   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2088256   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2088257   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2088258   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2088259   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2088260   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2088261   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2088262   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2088263   +end;
MPRINT(EM_DIAGRAM):   end;
2088264   +else do;
MPRINT(EM_DIAGRAM):   else do;
2088265   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2088266   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2088267   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2088268   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2088269   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2088270   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2088271   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2088272   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2088273   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2088274   +         end;
MPRINT(EM_DIAGRAM):   end;
2088275   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2088276   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2088277   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2088278   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2088279   +            end;
MPRINT(EM_DIAGRAM):   end;
2088280   +         end;
MPRINT(EM_DIAGRAM):   end;
2088281   +      end;
MPRINT(EM_DIAGRAM):   end;
2088282   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2088283   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2088284   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2088285   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2088286   +         end;
MPRINT(EM_DIAGRAM):   end;
2088287   +      end;
MPRINT(EM_DIAGRAM):   end;
2088288   +   end;
MPRINT(EM_DIAGRAM):   end;
2088289   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2088290   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2088291   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2088292   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2088293   +      end;
MPRINT(EM_DIAGRAM):   end;
2088294   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2088295   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2088296   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2088297   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2088298   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2088299   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2088300   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2088301   +         end;
MPRINT(EM_DIAGRAM):   end;
2088302   +      end;
MPRINT(EM_DIAGRAM):   end;
2088303   +   end;
MPRINT(EM_DIAGRAM):   end;
2088304   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2088305   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2088306   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2088307   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2088308   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2088309   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2088310   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2088311   +   end;
MPRINT(EM_DIAGRAM):   end;
2088312   +end;
MPRINT(EM_DIAGRAM):   end;
2088313   +
2088314   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2088315   +*** Checking missing input Interval
2088316   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2088317   +
2088318   +IF NMISS(
2088319   +   Income ,
2088320   +   Kidhome ,
2088321   +   MntFishProducts ,
2088322   +   MntFruits ,
2088323   +   MntGoldProds ,
2088324   +   MntMeatProducts ,
2088325   +   MntSweetProducts ,
2088326   +   MntWines ,
2088327   +   NumCatalogPurchases ,
2088328   +   NumDealsPurchases ,
2088329   +   NumStorePurchases ,
2088330   +   NumWebPurchases ,
2088331   +   NumWebVisitsMonth ,
2088332   +   Recency ,
2088333   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Income , Kidhome , MntFishProducts , MntFruits , MntGoldProds 
, MntMeatProducts , MntSweetProducts , MntWines , NumCatalogPurchases , NumDealsPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , Recency , Teenhome ) THEN DO;
2088334   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2088335   +
2088336   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2088337   +END;
MPRINT(EM_DIAGRAM):   END;
2088338   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2088339   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
2088340   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2088341   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2088342   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2088343   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2088344   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2088345   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2088346   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2088347   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2088348   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2088349   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2088350   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2088351   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2088352   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2088353   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2088354   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2088355   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2088356   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2088357   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2088358   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2088359   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2088360   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2088361   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2088362   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2088363   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2088364   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2088365   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2088366   +END;
MPRINT(EM_DIAGRAM):   END;
2088367   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2088368   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2088369   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2088370   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2088371   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2088372   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2088373   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2088374   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2088375   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2088376   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2088377   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2088378   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2088379   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2088380   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
2088381   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2088382   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2088383   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2088384   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2088385   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2088386   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2088387   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2088388   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2088389   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2088390   +   ELSE S_NumCatalogPurchases
2088391   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2088392   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2088393   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2088394   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2088395   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2088396   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2088397   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2088398   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2088399   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2088400   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2088401   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2088402   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2088403   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2088404   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2088405   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2088406   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2088407   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2088408   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2088409   +END;
MPRINT(EM_DIAGRAM):   END;
2088410   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2088411   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
2088412   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2088413   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2088414   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
2088415   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2088416   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2088417   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
2088418   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2088419   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2088420   +   H11  =    -0.59781928082243 * S_Income  +     0.49830142312288 * S_Kidhome
2088421   +          +    -0.00045024466632 * S_MntFishProducts
2088422   +          +    -0.22421712710333 * S_MntFruits  +    -0.19010144853469 *
2088423   +        S_MntGoldProds  +    -0.53373773623953 * S_MntMeatProducts
2088424   +          +     0.17506402203495 * S_MntSweetProducts
2088425   +          +    -0.28551398649672 * S_MntWines  +       0.019870944777 *
2088426   +        S_NumCatalogPurchases  +     0.03537776181533 * S_NumDealsPurchases
2088427   +          +     0.05580468715403 * S_NumStorePurchases
2088428   +          +    -0.29131611132704 * S_NumWebPurchases
2088429   +          +    -0.40690084025802 * S_NumWebVisitsMonth
2088430   +          +     0.48640195058901 * S_Recency  +     0.31820890239661 *
2088431   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = -0.59781928082243 * S_Income + 0.49830142312288 * S_Kidhome + 
-0.00045024466632 * S_MntFishProducts + -0.22421712710333 * S_MntFruits + -0.19010144853469 * 
S_MntGoldProds + -0.53373773623953 * S_MntMeatProducts + 0.17506402203495 * S_MntSweetProducts 
+ -0.28551398649672 * S_MntWines + 0.019870944777 * S_NumCatalogPurchases + 0.03537776181533 * 
S_NumDealsPurchases + 0.05580468715403 * S_NumStorePurchases + -0.29131611132704 * 
S_NumWebPurchases + -0.40690084025802 * S_NumWebVisitsMonth + 0.48640195058901 * S_Recency + 
0.31820890239661 * S_Teenhome ;
2088432   +   H12  =    -0.41871753512335 * S_Income  +      0.6025072461821 * S_Kidhome
2088433   +          +    -0.03132724937716 * S_MntFishProducts
2088434   +          +     0.19114182835046 * S_MntFruits  +     0.13483463809539 *
2088435   +        S_MntGoldProds  +    -0.63593603749443 * S_MntMeatProducts
2088436   +          +    -0.07569302401223 * S_MntSweetProducts
2088437   +          +     0.67050112032753 * S_MntWines  +    -0.23159243932208 *
2088438   +        S_NumCatalogPurchases  +    -0.07183698407409 * S_NumDealsPurchases
2088439   +          +     0.54619681114623 * S_NumStorePurchases
2088440   +          +     0.44325129671249 * S_NumWebPurchases
2088441   +          +    -1.25054401670605 * S_NumWebVisitsMonth
2088442   +          +      1.2376290916151 * S_Recency  +     0.43747371517287 *
2088443   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -0.41871753512335 * S_Income + 0.6025072461821 * S_Kidhome + 
-0.03132724937716 * S_MntFishProducts + 0.19114182835046 * S_MntFruits + 0.13483463809539 * 
S_MntGoldProds + -0.63593603749443 * S_MntMeatProducts + -0.07569302401223 * 
S_MntSweetProducts + 0.67050112032753 * S_MntWines + -0.23159243932208 * S_NumCatalogPurchases 
+ -0.07183698407409 * S_NumDealsPurchases + 0.54619681114623 * S_NumStorePurchases + 
0.44325129671249 * S_NumWebPurchases + -1.25054401670605 * S_NumWebVisitsMonth + 
1.2376290916151 * S_Recency + 0.43747371517287 * S_Teenhome ;
2088444   +   H13  =      0.0713579189325 * S_Income  +    -0.05759612462349 * S_Kidhome
2088445   +          +     0.07631777381832 * S_MntFishProducts
2088446   +          +    -0.00387785552441 * S_MntFruits  +    -0.21868916314192 *
2088447   +        S_MntGoldProds  +       0.072623883197 * S_MntMeatProducts
2088448   +          +     0.12637946833766 * S_MntSweetProducts
2088449   +          +    -0.37981663841124 * S_MntWines  +    -0.89958525403162 *
2088450   +        S_NumCatalogPurchases  +    -0.17471885937598 * S_NumDealsPurchases
2088451   +          +     0.15845618359126 * S_NumStorePurchases
2088452   +          +    -0.33296932705082 * S_NumWebPurchases
2088453   +          +      0.0260072296349 * S_NumWebVisitsMonth
2088454   +          +     0.02544749712977 * S_Recency  +    -0.17381561661022 *
2088455   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = 0.0713579189325 * S_Income + -0.05759612462349 * S_Kidhome + 
0.07631777381832 * S_MntFishProducts + -0.00387785552441 * S_MntFruits + -0.21868916314192 * 
S_MntGoldProds + 0.072623883197 * S_MntMeatProducts + 0.12637946833766 * S_MntSweetProducts + 
-0.37981663841124 * S_MntWines + -0.89958525403162 * S_NumCatalogPurchases + -0.17471885937598 
* S_NumDealsPurchases + 0.15845618359126 * S_NumStorePurchases + -0.33296932705082 * 
S_NumWebPurchases + 0.0260072296349 * S_NumWebVisitsMonth + 0.02544749712977 * S_Recency + 
-0.17381561661022 * S_Teenhome ;
2088456   +   H14  =    -0.47498613710851 * S_Income  +     0.09339198401437 * S_Kidhome
2088457   +          +    -0.13642352619174 * S_MntFishProducts
2088458   +          +     0.27167245582117 * S_MntFruits  +    -0.00579747559996 *
2088459   +        S_MntGoldProds  +     0.31591387319577 * S_MntMeatProducts
2088460   +          +     0.14125815807238 * S_MntSweetProducts
2088461   +          +     0.07862916790983 * S_MntWines  +    -0.58905358997534 *
2088462   +        S_NumCatalogPurchases  +     -0.5574069633995 * S_NumDealsPurchases
2088463   +          +     0.19718828261526 * S_NumStorePurchases
2088464   +          +    -0.24156925391919 * S_NumWebPurchases
2088465   +          +    -0.25711078938749 * S_NumWebVisitsMonth
2088466   +          +     0.38883063223812 * S_Recency  +     -0.2396731334184 *
2088467   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = -0.47498613710851 * S_Income + 0.09339198401437 * S_Kidhome + 
-0.13642352619174 * S_MntFishProducts + 0.27167245582117 * S_MntFruits + -0.00579747559996 * 
S_MntGoldProds + 0.31591387319577 * S_MntMeatProducts + 0.14125815807238 * S_MntSweetProducts 
+ 0.07862916790983 * S_MntWines + -0.58905358997534 * S_NumCatalogPurchases + -0.5574069633995 
* S_NumDealsPurchases + 0.19718828261526 * S_NumStorePurchases + -0.24156925391919 * 
S_NumWebPurchases + -0.25711078938749 * S_NumWebVisitsMonth + 0.38883063223812 * S_Recency + 
-0.2396731334184 * S_Teenhome ;
2088468   +   H15  =     0.24624924979609 * S_Income  +    -0.37052106312109 * S_Kidhome
2088469   +          +     0.13579628643404 * S_MntFishProducts
2088470   +          +    -0.05263868911164 * S_MntFruits  +    -0.01504675049991 *
2088471   +        S_MntGoldProds  +     -0.4202277804998 * S_MntMeatProducts
2088472   +          +    -0.01039299374426 * S_MntSweetProducts
2088473   +          +     0.71197420459135 * S_MntWines  +    -0.35973505575029 *
2088474   +        S_NumCatalogPurchases  +     -0.4415445481482 * S_NumDealsPurchases
2088475   +          +     0.58897740652611 * S_NumStorePurchases
2088476   +          +     0.24564485851062 * S_NumWebPurchases
2088477   +          +    -0.13976320243555 * S_NumWebVisitsMonth
2088478   +          +      0.1199367613063 * S_Recency  +    -0.15283161418313 *
2088479   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H15 = 0.24624924979609 * S_Income + -0.37052106312109 * S_Kidhome + 
0.13579628643404 * S_MntFishProducts + -0.05263868911164 * S_MntFruits + -0.01504675049991 * 
S_MntGoldProds + -0.4202277804998 * S_MntMeatProducts + -0.01039299374426 * S_MntSweetProducts 
+ 0.71197420459135 * S_MntWines + -0.35973505575029 * S_NumCatalogPurchases + -0.4415445481482 
* S_NumDealsPurchases + 0.58897740652611 * S_NumStorePurchases + 0.24564485851062 * 
S_NumWebPurchases + -0.13976320243555 * S_NumWebVisitsMonth + 0.1199367613063 * S_Recency + 
-0.15283161418313 * S_Teenhome ;
2088480   +   H16  =     0.23493799758749 * S_Income  +     0.07038278079069 * S_Kidhome
2088481   +          +    -0.45448768538367 * S_MntFishProducts
2088482   +          +     0.02622380709004 * S_MntFruits  +     0.14726698184115 *
2088483   +        S_MntGoldProds  +     0.65760183569767 * S_MntMeatProducts
2088484   +          +    -0.16936256277023 * S_MntSweetProducts
2088485   +          +    -0.40647066866305 * S_MntWines  +     0.99645493491726 *
2088486   +        S_NumCatalogPurchases  +     0.65587239961358 * S_NumDealsPurchases
2088487   +          +    -0.22309716855774 * S_NumStorePurchases
2088488   +          +    -0.61204529910842 * S_NumWebPurchases
2088489   +          +     0.43742228867615 * S_NumWebVisitsMonth
2088490   +          +    -0.56099034256092 * S_Recency  +     -0.2445351671148 *
2088491   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H16 = 0.23493799758749 * S_Income + 0.07038278079069 * S_Kidhome + 
-0.45448768538367 * S_MntFishProducts + 0.02622380709004 * S_MntFruits + 0.14726698184115 * 
S_MntGoldProds + 0.65760183569767 * S_MntMeatProducts + -0.16936256277023 * S_MntSweetProducts 
+ -0.40647066866305 * S_MntWines + 0.99645493491726 * S_NumCatalogPurchases + 0.65587239961358 
* S_NumDealsPurchases + -0.22309716855774 * S_NumStorePurchases + -0.61204529910842 * 
S_NumWebPurchases + 0.43742228867615 * S_NumWebVisitsMonth + -0.56099034256092 * S_Recency + 
-0.2445351671148 * S_Teenhome ;
2088492   +   H17  =    -0.00107702057163 * S_Income  +     0.25116135719972 * S_Kidhome
2088493   +          +    -0.04540308470858 * S_MntFishProducts
2088494   +          +        0.21487241577 * S_MntFruits  +    -0.12914913547414 *
2088495   +        S_MntGoldProds  +    -0.04149021191395 * S_MntMeatProducts
2088496   +          +     0.02853521979141 * S_MntSweetProducts
2088497   +          +     -0.2435805887418 * S_MntWines  +    -0.04509621661407 *
2088498   +        S_NumCatalogPurchases  +    -0.26492036720429 * S_NumDealsPurchases
2088499   +          +     -0.3299561248944 * S_NumStorePurchases
2088500   +          +    -0.09806597448224 * S_NumWebPurchases
2088501   +          +      0.0427056351245 * S_NumWebVisitsMonth
2088502   +          +     0.03953235628202 * S_Recency  +    -0.11317308767713 *
2088503   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H17 = -0.00107702057163 * S_Income + 0.25116135719972 * S_Kidhome + 
-0.04540308470858 * S_MntFishProducts + 0.21487241577 * S_MntFruits + -0.12914913547414 * 
S_MntGoldProds + -0.04149021191395 * S_MntMeatProducts + 0.02853521979141 * S_MntSweetProducts 
+ -0.2435805887418 * S_MntWines + -0.04509621661407 * S_NumCatalogPurchases + 
-0.26492036720429 * S_NumDealsPurchases + -0.3299561248944 * S_NumStorePurchases + 
-0.09806597448224 * S_NumWebPurchases + 0.0427056351245 * S_NumWebVisitsMonth + 
0.03953235628202 * S_Recency + -0.11317308767713 * S_Teenhome ;
2088504   +   H11  = H11  +     0.50033674561531 * AcceptedCmp10
2088505   +          +    -0.02275693117286 * AcceptedCmp20  +     0.31338891533156 *
2088506   +        AcceptedCmp30  +      0.3901248845706 * AcceptedCmp40
2088507   +          +     0.44314358358111 * AcceptedCmp50  +    -0.20444060864498 *
2088508   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.50033674561531 * AcceptedCmp10 + -0.02275693117286 * 
AcceptedCmp20 + 0.31338891533156 * AcceptedCmp30 + 0.3901248845706 * AcceptedCmp40 + 
0.44314358358111 * AcceptedCmp50 + -0.20444060864498 * Complain0 ;
2088509   +   H12  = H12  +     0.30103938822692 * AcceptedCmp10
2088510   +          +     0.54298746723422 * AcceptedCmp20  +     0.50401040035525 *
2088511   +        AcceptedCmp30  +     0.43447710825306 * AcceptedCmp40
2088512   +          +     0.60794421030027 * AcceptedCmp50  +    -0.28114274461319 *
2088513   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.30103938822692 * AcceptedCmp10 + 0.54298746723422 * 
AcceptedCmp20 + 0.50401040035525 * AcceptedCmp30 + 0.43447710825306 * AcceptedCmp40 + 
0.60794421030027 * AcceptedCmp50 + -0.28114274461319 * Complain0 ;
2088514   +   H13  = H13  +     -0.1890212967757 * AcceptedCmp10
2088515   +          +    -0.11487406996391 * AcceptedCmp20  +    -0.22740618754863 *
2088516   +        AcceptedCmp30  +      0.2354510231918 * AcceptedCmp40
2088517   +          +    -0.14327434649067 * AcceptedCmp50  +    -0.17839080850556 *
2088518   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.1890212967757 * AcceptedCmp10 + -0.11487406996391 * 
AcceptedCmp20 + -0.22740618754863 * AcceptedCmp30 + 0.2354510231918 * AcceptedCmp40 + 
-0.14327434649067 * AcceptedCmp50 + -0.17839080850556 * Complain0 ;
2088519   +   H14  = H14  +    -0.28194187416219 * AcceptedCmp10
2088520   +          +     0.11732089254624 * AcceptedCmp20  +     0.34964075536156 *
2088521   +        AcceptedCmp30  +     0.05772396286169 * AcceptedCmp40
2088522   +          +    -0.08671748651826 * AcceptedCmp50  +      0.0629540108407 *
2088523   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.28194187416219 * AcceptedCmp10 + 0.11732089254624 * 
AcceptedCmp20 + 0.34964075536156 * AcceptedCmp30 + 0.05772396286169 * AcceptedCmp40 + 
-0.08671748651826 * AcceptedCmp50 + 0.0629540108407 * Complain0 ;
2088524   +   H15  = H15  +    -0.01058257322803 * AcceptedCmp10
2088525   +          +     0.26755355732587 * AcceptedCmp20  +     0.40856661734724 *
2088526   +        AcceptedCmp30  +     0.02977117354989 * AcceptedCmp40
2088527   +          +       0.073655049734 * AcceptedCmp50  +     0.25562048226555 *
2088528   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + -0.01058257322803 * AcceptedCmp10 + 0.26755355732587 * 
AcceptedCmp20 + 0.40856661734724 * AcceptedCmp30 + 0.02977117354989 * AcceptedCmp40 + 
0.073655049734 * AcceptedCmp50 + 0.25562048226555 * Complain0 ;
2088529   +   H16  = H16  +    -0.65590117532084 * AcceptedCmp10
2088530   +          +    -0.31314161223579 * AcceptedCmp20  +    -0.18863165264573 *
2088531   +        AcceptedCmp30  +    -0.18832338914237 * AcceptedCmp40
2088532   +          +    -0.53765749471786 * AcceptedCmp50  +     0.17409401877513 *
2088533   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H16 = H16 + -0.65590117532084 * AcceptedCmp10 + -0.31314161223579 * 
AcceptedCmp20 + -0.18863165264573 * AcceptedCmp30 + -0.18832338914237 * AcceptedCmp40 + 
-0.53765749471786 * AcceptedCmp50 + 0.17409401877513 * Complain0 ;
2088534   +   H17  = H17  +    -0.42253231673718 * AcceptedCmp10
2088535   +          +    -0.40954345229557 * AcceptedCmp20  +    -0.30577523080786 *
2088536   +        AcceptedCmp30  +    -0.22396670899437 * AcceptedCmp40
2088537   +          +     0.05757251451004 * AcceptedCmp50  +     0.07813950542487 *
2088538   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H17 = H17 + -0.42253231673718 * AcceptedCmp10 + -0.40954345229557 * 
AcceptedCmp20 + -0.30577523080786 * AcceptedCmp30 + -0.22396670899437 * AcceptedCmp40 + 
0.05757251451004 * AcceptedCmp50 + 0.07813950542487 * Complain0 ;
2088539   +   H11  = H11  +    -0.14483542022901 * Education2n_Cycle
2088540   +          +     0.32176647745332 * EducationBasic  +     0.00900796305072 *
2088541   +        EducationGraduation  +    -0.00243484910123 * EducationMaster
2088542   +          +    -0.22074132229211 * Marital_StatusDivorced
2088543   +          +     0.70282742634901 * Marital_StatusMarried
2088544   +          +     -0.5926244797961 * Marital_StatusSingle
2088545   +          +     0.21342221410999 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.14483542022901 * Education2n_Cycle + 0.32176647745332 * 
EducationBasic + 0.00900796305072 * EducationGraduation + -0.00243484910123 * EducationMaster 
+ -0.22074132229211 * Marital_StatusDivorced + 0.70282742634901 * Marital_StatusMarried + 
-0.5926244797961 * Marital_StatusSingle + 0.21342221410999 * Marital_StatusTogether ;
2088546   +   H12  = H12  +    -0.10242932200247 * Education2n_Cycle
2088547   +          +     0.34937926721317 * EducationBasic  +    -0.20395479511872 *
2088548   +        EducationGraduation  +     0.31210327899339 * EducationMaster
2088549   +          +    -0.46376392175295 * Marital_StatusDivorced
2088550   +          +       0.589453579718 * Marital_StatusMarried
2088551   +          +    -0.45342174978481 * Marital_StatusSingle
2088552   +          +     0.70517120763557 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.10242932200247 * Education2n_Cycle + 0.34937926721317 * 
EducationBasic + -0.20395479511872 * EducationGraduation + 0.31210327899339 * EducationMaster 
+ -0.46376392175295 * Marital_StatusDivorced + 0.589453579718 * Marital_StatusMarried + 
-0.45342174978481 * Marital_StatusSingle + 0.70517120763557 * Marital_StatusTogether ;
2088553   +   H13  = H13  +     0.24858755570324 * Education2n_Cycle
2088554   +          +     0.07360039359386 * EducationBasic  +    -0.42563056620078 *
2088555   +        EducationGraduation  +    -0.25970840250323 * EducationMaster
2088556   +          +     0.26981972015482 * Marital_StatusDivorced
2088557   +          +    -0.01707364864139 * Marital_StatusMarried
2088558   +          +     0.38646060840009 * Marital_StatusSingle
2088559   +          +     0.19694047086013 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.24858755570324 * Education2n_Cycle + 0.07360039359386 * 
EducationBasic + -0.42563056620078 * EducationGraduation + -0.25970840250323 * EducationMaster 
+ 0.26981972015482 * Marital_StatusDivorced + -0.01707364864139 * Marital_StatusMarried + 
0.38646060840009 * Marital_StatusSingle + 0.19694047086013 * Marital_StatusTogether ;
2088560   +   H14  = H14  +     0.22577522124265 * Education2n_Cycle
2088561   +          +     0.04183136697557 * EducationBasic  +    -0.27725331198825 *
2088562   +        EducationGraduation  +     0.15709188532123 * EducationMaster
2088563   +          +    -0.01933675094701 * Marital_StatusDivorced
2088564   +          +     0.52969577969434 * Marital_StatusMarried
2088565   +          +      -0.348697714569 * Marital_StatusSingle
2088566   +          +      0.5020342481888 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.22577522124265 * Education2n_Cycle + 0.04183136697557 * 
EducationBasic + -0.27725331198825 * EducationGraduation + 0.15709188532123 * EducationMaster 
+ -0.01933675094701 * Marital_StatusDivorced + 0.52969577969434 * Marital_StatusMarried + 
-0.348697714569 * Marital_StatusSingle + 0.5020342481888 * Marital_StatusTogether ;
2088567   +   H15  = H15  +     0.04488332711225 * Education2n_Cycle
2088568   +          +     0.01911097443907 * EducationBasic  +    -0.11699443624996 *
2088569   +        EducationGraduation  +    -0.07291393566738 * EducationMaster
2088570   +          +    -0.04665146013984 * Marital_StatusDivorced
2088571   +          +      -0.586219175167 * Marital_StatusMarried
2088572   +          +     0.55713543417712 * Marital_StatusSingle
2088573   +          +    -0.42208959885332 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.04488332711225 * Education2n_Cycle + 0.01911097443907 * 
EducationBasic + -0.11699443624996 * EducationGraduation + -0.07291393566738 * EducationMaster 
+ -0.04665146013984 * Marital_StatusDivorced + -0.586219175167 * Marital_StatusMarried + 
0.55713543417712 * Marital_StatusSingle + -0.42208959885332 * Marital_StatusTogether ;
2088574   +   H16  = H16  +     0.09174117861154 * Education2n_Cycle
2088575   +          +     -0.1378945860659 * EducationBasic  +     -0.0728635369665 *
2088576   +        EducationGraduation  +     0.29860714824438 * EducationMaster
2088577   +          +    -0.05632171154347 * Marital_StatusDivorced
2088578   +          +     0.03215547861665 * Marital_StatusMarried
2088579   +          +     0.16870781172538 * Marital_StatusSingle
2088580   +          +    -0.04883314322676 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.09174117861154 * Education2n_Cycle + -0.1378945860659 * 
EducationBasic + -0.0728635369665 * EducationGraduation + 0.29860714824438 * EducationMaster + 
-0.05632171154347 * Marital_StatusDivorced + 0.03215547861665 * Marital_StatusMarried + 
0.16870781172538 * Marital_StatusSingle + -0.04883314322676 * Marital_StatusTogether ;
2088581   +   H17  = H17  +    -0.00343694558117 * Education2n_Cycle
2088582   +          +     0.32636427598227 * EducationBasic  +     0.16259654486833 *
2088583   +        EducationGraduation  +    -0.00424229454859 * EducationMaster
2088584   +          +    -0.21765415159355 * Marital_StatusDivorced
2088585   +          +     -0.0542857922075 * Marital_StatusMarried
2088586   +          +     0.20679907454933 * Marital_StatusSingle
2088587   +          +     0.14976519710725 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H17 = H17 + -0.00343694558117 * Education2n_Cycle + 0.32636427598227 * 
EducationBasic + 0.16259654486833 * EducationGraduation + -0.00424229454859 * EducationMaster 
+ -0.21765415159355 * Marital_StatusDivorced + -0.0542857922075 * Marital_StatusMarried + 
0.20679907454933 * Marital_StatusSingle + 0.14976519710725 * Marital_StatusTogether ;
2088588   +   H11  =     0.92977078759503 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 0.92977078759503 + H11 ;
2088589   +   H12  =    -0.97970409253156 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -0.97970409253156 + H12 ;
2088590   +   H13  =     -0.5001144792196 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.5001144792196 + H13 ;
2088591   +   H14  =    -0.90715840862541 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = -0.90715840862541 + H14 ;
2088592   +   H15  =     0.87046153389036 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = 0.87046153389036 + H15 ;
2088593   +   H16  =     0.49066122767086 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = 0.49066122767086 + H16 ;
2088594   +   H17  =    -1.05949763460293 + H17 ;
MPRINT(EM_DIAGRAM):   H17 = -1.05949763460293 + H17 ;
2088595   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
2088596   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
2088597   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
2088598   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
2088599   +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
2088600   +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
2088601   +   H17  = TANH(H17 );
MPRINT(EM_DIAGRAM):   H17 = TANH(H17 );
2088602   +END;
MPRINT(EM_DIAGRAM):   END;
2088603   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2088604   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
2088605   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
2088606   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
2088607   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
2088608   +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
2088609   +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
2088610   +   H17  = .;
MPRINT(EM_DIAGRAM):   H17 = .;
2088611   +END;
MPRINT(EM_DIAGRAM):   END;
2088612   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2088613   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2088614   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2088615   +
2088616   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
2088617   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
2088618   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2088619   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
2088620   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
2088621   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2088622   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
2088623   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2088624   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2088625   +end;
MPRINT(EM_DIAGRAM):   end;
2088626   +else do;
MPRINT(EM_DIAGRAM):   else do;
2088627   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
2088628   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
2088629   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
2088630   +   end;
MPRINT(EM_DIAGRAM):   end;
2088631   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
2088632   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
2088633   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
2088634   +   end;
MPRINT(EM_DIAGRAM):   end;
2088635   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2088636   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2088637   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2088638   +   end;
MPRINT(EM_DIAGRAM):   end;
2088639   +end;
MPRINT(EM_DIAGRAM):   end;
2088640   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2088641   +   P_DepVar1  =    -2.32998401250848 * H11  +     -3.2074078511991 * H12
2088642   +          +    -0.69549988605443 * H13  +    -1.74950789108762 * H14
2088643   +          +    -1.74013772071344 * H15  +     2.65306089869015 * H16
2088644   +          +     0.03700459000906 * H17 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.32998401250848 * H11 + -3.2074078511991 * H12 + 
-0.69549988605443 * H13 + -1.74950789108762 * H14 + -1.74013772071344 * H15 + 2.65306089869015 
* H16 + 0.03700459000906 * H17 ;
2088645   +   P_DepVar1  =    -1.51229898726716 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.51229898726716 + P_DepVar1 ;
2088646   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2088647   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2088648   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2088649   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2088650   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2088651   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2088652   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2088653   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2088654   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2088655   +END;
MPRINT(EM_DIAGRAM):   END;
2088656   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2088657   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2088658   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2088659   +END;
MPRINT(EM_DIAGRAM):   END;
2088660   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2088661   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2088662   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2088663   +END;
MPRINT(EM_DIAGRAM):   END;
2088664   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
2088665   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
2088666   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
2088667   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
2088668   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
2088669   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
2088670   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
2088671   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2088672   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2088673   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2088674   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2088675   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2088676   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2088677   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2088678   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2088679   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2088680   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2088681   +END;
MPRINT(EM_DIAGRAM):   END;
2088682   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2088683   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2088684   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2088685   +drop
2088686   +H11
2088687   +H12
2088688   +H13
2088689   +H14
2088690   +H15
2088691   +H16
2088692   +H17
2088693   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 H17 ;
2088694   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
2088695   +* Renaming variables for Neural30;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural30;
2088696   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2088697   +* Renaming Posterior variables for Neural30;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural30;
2088698   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2088699   +drop Neural30_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural30_P_DepVar1;
2088700   +Neural30_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural30_P_DepVar1 = P_DepVar1;
2088701   +drop Neural30_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural30_P_DepVar0;
2088702   +Neural30_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural30_P_DepVar0 = P_DepVar0;
2088703   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2088704   +* Renaming _WARN_ variable for Neural30;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural30;
2088705   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2088706   +length Neural30_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural30_WARN_ $4;
2088707   +drop Neural30_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural30_WARN_;
2088708   +Neural30_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural30_WARN_ = _WARN_;
2088709   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2088710   +* Ensmbl9: Scoring Code of model 5 of 10;
MPRINT(EM_DIAGRAM):   * Ensmbl9: Scoring Code of model 5 of 10;
2088711   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2088712   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2088713   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
2088714   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
2088715   +* NODE: Neural35;
MPRINT(EM_DIAGRAM):   * NODE: Neural35;
2088716   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2088717   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2088718   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2088719   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2088720   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2088721   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2088722   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2088723   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2088724   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2088725   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2088726   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2088727   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2088728   +LENGTH _WARN_ $4
2088729   +      F_DepVar  $ 12
2088730   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
2088731   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2088732   +
2088733   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2088734   +
2088735   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2088736   +
2088737   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2088738   +
2088739   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2088740   +
2088741   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2088742   +
2088743   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2088744   +
2088745   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2088746   +
2088747   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2088748   +
2088749   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2088750   +
2088751   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2088752   +
2088753   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2088754   +
2088755   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2088756   +
2088757   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2088758   +
2088759   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2088760   +
2088761   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2088762   +
2088763   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2088764   +
2088765   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2088766   +
2088767   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2088768   +
2088769   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2088770   +
2088771   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2088772   +
2088773   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2088774   +
2088775   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2088776   +
2088777   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2088778   +
2088779   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2088780   +
2088781   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2088782   +
2088783   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2088784   +
2088785   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2088786   +
2088787   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2088788   +
2088789   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
2088790   +
2088791   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
2088792   +
2088793   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
2088794   +
2088795   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
2088796   +
2088797   +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
2088798   +
2088799   +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
2088800   +
2088801   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2088802   +
2088803   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2088804   +
2088805   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2088806   +
2088807   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2088808   +
2088809   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
2088810   +
2088811   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2088812   +
2088813   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
2088814   +
2088815   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2088816   +
2088817   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2088818   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2088819   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2088820   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2088821   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2088822   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2088823   +end;
MPRINT(EM_DIAGRAM):   end;
2088824   +else do;
MPRINT(EM_DIAGRAM):   else do;
2088825   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2088826   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2088827   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2088828   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2088829   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2088830   +   end;
MPRINT(EM_DIAGRAM):   end;
2088831   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2088832   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2088833   +   end;
MPRINT(EM_DIAGRAM):   end;
2088834   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2088835   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2088836   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2088837   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2088838   +   end;
MPRINT(EM_DIAGRAM):   end;
2088839   +end;
MPRINT(EM_DIAGRAM):   end;
2088840   +
2088841   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2088842   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2088843   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2088844   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2088845   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2088846   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2088847   +end;
MPRINT(EM_DIAGRAM):   end;
2088848   +else do;
MPRINT(EM_DIAGRAM):   else do;
2088849   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2088850   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2088851   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2088852   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2088853   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2088854   +   end;
MPRINT(EM_DIAGRAM):   end;
2088855   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2088856   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2088857   +   end;
MPRINT(EM_DIAGRAM):   end;
2088858   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2088859   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2088860   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2088861   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2088862   +   end;
MPRINT(EM_DIAGRAM):   end;
2088863   +end;
MPRINT(EM_DIAGRAM):   end;
2088864   +
2088865   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2088866   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2088867   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2088868   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2088869   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2088870   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2088871   +end;
MPRINT(EM_DIAGRAM):   end;
2088872   +else do;
MPRINT(EM_DIAGRAM):   else do;
2088873   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2088874   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2088875   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2088876   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2088877   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2088878   +   end;
MPRINT(EM_DIAGRAM):   end;
2088879   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2088880   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2088881   +   end;
MPRINT(EM_DIAGRAM):   end;
2088882   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2088883   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2088884   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2088885   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2088886   +   end;
MPRINT(EM_DIAGRAM):   end;
2088887   +end;
MPRINT(EM_DIAGRAM):   end;
2088888   +
2088889   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2088890   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2088891   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2088892   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2088893   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2088894   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2088895   +end;
MPRINT(EM_DIAGRAM):   end;
2088896   +else do;
MPRINT(EM_DIAGRAM):   else do;
2088897   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2088898   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2088899   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2088900   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2088901   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2088902   +   end;
MPRINT(EM_DIAGRAM):   end;
2088903   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2088904   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2088905   +   end;
MPRINT(EM_DIAGRAM):   end;
2088906   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2088907   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2088908   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2088909   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2088910   +   end;
MPRINT(EM_DIAGRAM):   end;
2088911   +end;
MPRINT(EM_DIAGRAM):   end;
2088912   +
2088913   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2088914   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2088915   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2088916   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2088917   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2088918   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2088919   +end;
MPRINT(EM_DIAGRAM):   end;
2088920   +else do;
MPRINT(EM_DIAGRAM):   else do;
2088921   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2088922   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2088923   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2088924   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2088925   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2088926   +   end;
MPRINT(EM_DIAGRAM):   end;
2088927   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2088928   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2088929   +   end;
MPRINT(EM_DIAGRAM):   end;
2088930   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2088931   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2088932   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2088933   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2088934   +   end;
MPRINT(EM_DIAGRAM):   end;
2088935   +end;
MPRINT(EM_DIAGRAM):   end;
2088936   +
2088937   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2088938   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2088939   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2088940   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2088941   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2088942   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2088943   +end;
MPRINT(EM_DIAGRAM):   end;
2088944   +else do;
MPRINT(EM_DIAGRAM):   else do;
2088945   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2088946   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2088947   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2088948   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2088949   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2088950   +   end;
MPRINT(EM_DIAGRAM):   end;
2088951   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2088952   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2088953   +   end;
MPRINT(EM_DIAGRAM):   end;
2088954   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2088955   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2088956   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2088957   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2088958   +   end;
MPRINT(EM_DIAGRAM):   end;
2088959   +end;
MPRINT(EM_DIAGRAM):   end;
2088960   +
2088961   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2088962   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
2088963   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2088964   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2088965   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2088966   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2088967   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2088968   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2088969   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2088970   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2088971   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2088972   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2088973   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2088974   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2088975   +end;
MPRINT(EM_DIAGRAM):   end;
2088976   +else do;
MPRINT(EM_DIAGRAM):   else do;
2088977   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2088978   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2088979   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2088980   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2088981   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2088982   +   end;
MPRINT(EM_DIAGRAM):   end;
2088983   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2088984   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2088985   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2088986   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2088987   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2088988   +   end;
MPRINT(EM_DIAGRAM):   end;
2088989   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2088990   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2088991   +   end;
MPRINT(EM_DIAGRAM):   end;
2088992   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2088993   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2088994   +   end;
MPRINT(EM_DIAGRAM):   end;
2088995   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2088996   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2088997   +   end;
MPRINT(EM_DIAGRAM):   end;
2088998   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2088999   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2089000   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2089001   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2089002   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2089003   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2089004   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2089005   +   end;
MPRINT(EM_DIAGRAM):   end;
2089006   +end;
MPRINT(EM_DIAGRAM):   end;
2089007   +
2089008   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2089009   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2089010   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
2089011   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2089012   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2089013   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2089014   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2089015   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2089016   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2089017   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2089018   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2089019   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2089020   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2089021   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2089022   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2089023   +end;
MPRINT(EM_DIAGRAM):   end;
2089024   +else do;
MPRINT(EM_DIAGRAM):   else do;
2089025   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2089026   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2089027   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2089028   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2089029   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2089030   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2089031   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2089032   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2089033   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2089034   +         end;
MPRINT(EM_DIAGRAM):   end;
2089035   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2089036   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2089037   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2089038   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2089039   +            end;
MPRINT(EM_DIAGRAM):   end;
2089040   +         end;
MPRINT(EM_DIAGRAM):   end;
2089041   +      end;
MPRINT(EM_DIAGRAM):   end;
2089042   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2089043   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2089044   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2089045   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2089046   +         end;
MPRINT(EM_DIAGRAM):   end;
2089047   +      end;
MPRINT(EM_DIAGRAM):   end;
2089048   +   end;
MPRINT(EM_DIAGRAM):   end;
2089049   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2089050   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2089051   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2089052   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2089053   +      end;
MPRINT(EM_DIAGRAM):   end;
2089054   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2089055   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2089056   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2089057   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2089058   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2089059   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2089060   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2089061   +         end;
MPRINT(EM_DIAGRAM):   end;
2089062   +      end;
MPRINT(EM_DIAGRAM):   end;
2089063   +   end;
MPRINT(EM_DIAGRAM):   end;
2089064   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2089065   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2089066   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2089067   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2089068   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2089069   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2089070   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2089071   +   end;
MPRINT(EM_DIAGRAM):   end;
2089072   +end;
MPRINT(EM_DIAGRAM):   end;
2089073   +
2089074   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2089075   +*** Checking missing input Interval
2089076   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2089077   +
2089078   +IF NMISS(
2089079   +   Income ,
2089080   +   Kidhome ,
2089081   +   MntFishProducts ,
2089082   +   MntFruits ,
2089083   +   MntGoldProds ,
2089084   +   MntMeatProducts ,
2089085   +   MntSweetProducts ,
2089086   +   MntWines ,
2089087   +   NumCatalogPurchases ,
2089088   +   NumDealsPurchases ,
2089089   +   NumStorePurchases ,
2089090   +   NumWebPurchases ,
2089091   +   NumWebVisitsMonth ,
2089092   +   Recency ,
2089093   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Income , Kidhome , MntFishProducts , MntFruits , MntGoldProds 
, MntMeatProducts , MntSweetProducts , MntWines , NumCatalogPurchases , NumDealsPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , Recency , Teenhome ) THEN DO;
2089094   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2089095   +
2089096   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2089097   +END;
MPRINT(EM_DIAGRAM):   END;
2089098   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2089099   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
2089100   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2089101   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2089102   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2089103   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2089104   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2089105   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2089106   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2089107   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2089108   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2089109   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2089110   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2089111   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2089112   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2089113   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2089114   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2089115   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2089116   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2089117   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2089118   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2089119   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2089120   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2089121   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2089122   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2089123   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2089124   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2089125   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2089126   +END;
MPRINT(EM_DIAGRAM):   END;
2089127   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2089128   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2089129   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2089130   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2089131   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2089132   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2089133   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2089134   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2089135   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2089136   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2089137   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2089138   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2089139   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2089140   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
2089141   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2089142   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2089143   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2089144   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2089145   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2089146   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2089147   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2089148   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2089149   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2089150   +   ELSE S_NumCatalogPurchases
2089151   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2089152   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2089153   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2089154   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2089155   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2089156   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2089157   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2089158   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2089159   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2089160   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2089161   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2089162   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2089163   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2089164   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2089165   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2089166   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2089167   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2089168   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2089169   +END;
MPRINT(EM_DIAGRAM):   END;
2089170   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2089171   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
2089172   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2089173   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2089174   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
2089175   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2089176   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2089177   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
2089178   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2089179   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2089180   +   H11  =     0.87660114046125 * S_Income  +     -0.7994451897827 * S_Kidhome
2089181   +          +    -0.08967295716195 * S_MntFishProducts
2089182   +          +     0.03184635437516 * S_MntFruits  +    -0.13860895575438 *
2089183   +        S_MntGoldProds  +     0.55790460748169 * S_MntMeatProducts
2089184   +          +    -0.02806094557115 * S_MntSweetProducts
2089185   +          +    -0.14537763592724 * S_MntWines  +     0.76891266523847 *
2089186   +        S_NumCatalogPurchases  +     0.16842007461305 * S_NumDealsPurchases
2089187   +          +     0.25137876058262 * S_NumStorePurchases
2089188   +          +    -0.07865442401292 * S_NumWebPurchases
2089189   +          +     1.03197398967259 * S_NumWebVisitsMonth
2089190   +          +    -1.26907156503759 * S_Recency  +    -0.76016893316351 *
2089191   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.87660114046125 * S_Income + -0.7994451897827 * S_Kidhome + 
-0.08967295716195 * S_MntFishProducts + 0.03184635437516 * S_MntFruits + -0.13860895575438 * 
S_MntGoldProds + 0.55790460748169 * S_MntMeatProducts + -0.02806094557115 * S_MntSweetProducts 
+ -0.14537763592724 * S_MntWines + 0.76891266523847 * S_NumCatalogPurchases + 0.16842007461305 
* S_NumDealsPurchases + 0.25137876058262 * S_NumStorePurchases + -0.07865442401292 * 
S_NumWebPurchases + 1.03197398967259 * S_NumWebVisitsMonth + -1.26907156503759 * S_Recency + 
-0.76016893316351 * S_Teenhome ;
2089192   +   H12  =     0.37295000114468 * S_Income  +    -0.12834211496575 * S_Kidhome
2089193   +          +     0.19312392388912 * S_MntFishProducts
2089194   +          +      0.1561688289137 * S_MntFruits  +     0.04004810938796 *
2089195   +        S_MntGoldProds  +     0.32599201739588 * S_MntMeatProducts
2089196   +          +       0.204174263605 * S_MntSweetProducts
2089197   +          +    -0.11560784817014 * S_MntWines  +     0.12255073568725 *
2089198   +        S_NumCatalogPurchases  +    -0.05543734180218 * S_NumDealsPurchases
2089199   +          +     0.07747830335769 * S_NumStorePurchases
2089200   +          +     0.07960837555191 * S_NumWebPurchases
2089201   +          +     0.02351602389122 * S_NumWebVisitsMonth
2089202   +          +     -0.2840853952427 * S_Recency  +    -0.47421627761687 *
2089203   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = 0.37295000114468 * S_Income + -0.12834211496575 * S_Kidhome + 
0.19312392388912 * S_MntFishProducts + 0.1561688289137 * S_MntFruits + 0.04004810938796 * 
S_MntGoldProds + 0.32599201739588 * S_MntMeatProducts + 0.204174263605 * S_MntSweetProducts + 
-0.11560784817014 * S_MntWines + 0.12255073568725 * S_NumCatalogPurchases + -0.05543734180218 
* S_NumDealsPurchases + 0.07747830335769 * S_NumStorePurchases + 0.07960837555191 * 
S_NumWebPurchases + 0.02351602389122 * S_NumWebVisitsMonth + -0.2840853952427 * S_Recency + 
-0.47421627761687 * S_Teenhome ;
2089204   +   H13  =    -0.33428925248315 * S_Income  +    -0.03845622730742 * S_Kidhome
2089205   +          +     0.18733919794636 * S_MntFishProducts
2089206   +          +     0.45907982190052 * S_MntFruits  +    -0.48776616433719 *
2089207   +        S_MntGoldProds  +    -0.41340481007204 * S_MntMeatProducts
2089208   +          +     0.42514606159239 * S_MntSweetProducts
2089209   +          +     0.20038001368787 * S_MntWines  +    -1.21708501803782 *
2089210   +        S_NumCatalogPurchases  +    -1.06820061274533 * S_NumDealsPurchases
2089211   +          +     0.36582106462789 * S_NumStorePurchases
2089212   +          +     0.04244777020435 * S_NumWebPurchases
2089213   +          +    -0.24296342902503 * S_NumWebVisitsMonth
2089214   +          +     0.27451716762947 * S_Recency  +     0.13110477325277 *
2089215   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = -0.33428925248315 * S_Income + -0.03845622730742 * S_Kidhome + 
0.18733919794636 * S_MntFishProducts + 0.45907982190052 * S_MntFruits + -0.48776616433719 * 
S_MntGoldProds + -0.41340481007204 * S_MntMeatProducts + 0.42514606159239 * S_MntSweetProducts 
+ 0.20038001368787 * S_MntWines + -1.21708501803782 * S_NumCatalogPurchases + 
-1.06820061274533 * S_NumDealsPurchases + 0.36582106462789 * S_NumStorePurchases + 
0.04244777020435 * S_NumWebPurchases + -0.24296342902503 * S_NumWebVisitsMonth + 
0.27451716762947 * S_Recency + 0.13110477325277 * S_Teenhome ;
2089216   +   H14  =    -0.70493412542585 * S_Income  +     0.41202796606799 * S_Kidhome
2089217   +          +     0.05986489897572 * S_MntFishProducts
2089218   +          +    -0.05040531715469 * S_MntFruits  +       0.051068387592 *
2089219   +        S_MntGoldProds  +    -0.13581881662481 * S_MntMeatProducts
2089220   +          +    -0.05513370461072 * S_MntSweetProducts
2089221   +          +     0.77472084468819 * S_MntWines  +    -0.03211788969126 *
2089222   +        S_NumCatalogPurchases  +    -0.24097486430988 * S_NumDealsPurchases
2089223   +          +     0.64364674828841 * S_NumStorePurchases
2089224   +          +     0.15084748708424 * S_NumWebPurchases
2089225   +          +    -0.94144998356377 * S_NumWebVisitsMonth
2089226   +          +     1.16778338364599 * S_Recency  +     0.32089861635238 *
2089227   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = -0.70493412542585 * S_Income + 0.41202796606799 * S_Kidhome + 
0.05986489897572 * S_MntFishProducts + -0.05040531715469 * S_MntFruits + 0.051068387592 * 
S_MntGoldProds + -0.13581881662481 * S_MntMeatProducts + -0.05513370461072 * 
S_MntSweetProducts + 0.77472084468819 * S_MntWines + -0.03211788969126 * S_NumCatalogPurchases 
+ -0.24097486430988 * S_NumDealsPurchases + 0.64364674828841 * S_NumStorePurchases + 
0.15084748708424 * S_NumWebPurchases + -0.94144998356377 * S_NumWebVisitsMonth + 
1.16778338364599 * S_Recency + 0.32089861635238 * S_Teenhome ;
2089228   +   H15  =    -0.15703510827879 * S_Income  +    -0.30977841002562 * S_Kidhome
2089229   +          +    -0.14543196273578 * S_MntFishProducts
2089230   +          +     0.32223695896711 * S_MntFruits  +    -0.31846203211698 *
2089231   +        S_MntGoldProds  +     -1.4125160823105 * S_MntMeatProducts
2089232   +          +     0.49374793444169 * S_MntSweetProducts
2089233   +          +     0.39699716010219 * S_MntWines  +    -0.88140331687645 *
2089234   +        S_NumCatalogPurchases  +    -0.87657222813687 * S_NumDealsPurchases
2089235   +          +     1.23754786782746 * S_NumStorePurchases
2089236   +          +     1.11316667348511 * S_NumWebPurchases
2089237   +          +    -1.08592446439781 * S_NumWebVisitsMonth
2089238   +          +     0.66958517589542 * S_Recency  +     0.06799032788481 *
2089239   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H15 = -0.15703510827879 * S_Income + -0.30977841002562 * S_Kidhome + 
-0.14543196273578 * S_MntFishProducts + 0.32223695896711 * S_MntFruits + -0.31846203211698 * 
S_MntGoldProds + -1.4125160823105 * S_MntMeatProducts + 0.49374793444169 * S_MntSweetProducts 
+ 0.39699716010219 * S_MntWines + -0.88140331687645 * S_NumCatalogPurchases + 
-0.87657222813687 * S_NumDealsPurchases + 1.23754786782746 * S_NumStorePurchases + 
1.11316667348511 * S_NumWebPurchases + -1.08592446439781 * S_NumWebVisitsMonth + 
0.66958517589542 * S_Recency + 0.06799032788481 * S_Teenhome ;
2089240   +   H16  =    -0.10360901553583 * S_Income  +     0.39257497240865 * S_Kidhome
2089241   +          +     0.29549884005341 * S_MntFishProducts
2089242   +          +     0.04922491353914 * S_MntFruits  +     -0.1412659458221 *
2089243   +        S_MntGoldProds  +    -0.12361454534126 * S_MntMeatProducts
2089244   +          +    -0.11909215986981 * S_MntSweetProducts
2089245   +          +     0.11430484977092 * S_MntWines  +    -0.66235553839539 *
2089246   +        S_NumCatalogPurchases  +     0.17261763180198 * S_NumDealsPurchases
2089247   +          +     0.30109334594548 * S_NumStorePurchases
2089248   +          +     0.01985762767489 * S_NumWebPurchases
2089249   +          +     0.44965133281333 * S_NumWebVisitsMonth
2089250   +          +     0.32338634259192 * S_Recency  +    -0.04032956941805 *
2089251   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H16 = -0.10360901553583 * S_Income + 0.39257497240865 * S_Kidhome + 
0.29549884005341 * S_MntFishProducts + 0.04922491353914 * S_MntFruits + -0.1412659458221 * 
S_MntGoldProds + -0.12361454534126 * S_MntMeatProducts + -0.11909215986981 * 
S_MntSweetProducts + 0.11430484977092 * S_MntWines + -0.66235553839539 * S_NumCatalogPurchases 
+ 0.17261763180198 * S_NumDealsPurchases + 0.30109334594548 * S_NumStorePurchases + 
0.01985762767489 * S_NumWebPurchases + 0.44965133281333 * S_NumWebVisitsMonth + 
0.32338634259192 * S_Recency + -0.04032956941805 * S_Teenhome ;
2089252   +   H11  = H11  +    -0.23026310289024 * AcceptedCmp10
2089253   +          +    -0.82550012364234 * AcceptedCmp20  +    -0.67764228269441 *
2089254   +        AcceptedCmp30  +    -0.51547666117685 * AcceptedCmp40
2089255   +          +    -0.36424958084824 * AcceptedCmp50  +       0.119862855783 *
2089256   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.23026310289024 * AcceptedCmp10 + -0.82550012364234 * 
AcceptedCmp20 + -0.67764228269441 * AcceptedCmp30 + -0.51547666117685 * AcceptedCmp40 + 
-0.36424958084824 * AcceptedCmp50 + 0.119862855783 * Complain0 ;
2089257   +   H12  = H12  +     0.02722288857426 * AcceptedCmp10
2089258   +          +      0.1236576068539 * AcceptedCmp20  +    -0.31265425960737 *
2089259   +        AcceptedCmp30  +    -0.25076565034266 * AcceptedCmp40
2089260   +          +    -0.20158659730872 * AcceptedCmp50  +    -0.43687103612629 *
2089261   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.02722288857426 * AcceptedCmp10 + 0.1236576068539 * 
AcceptedCmp20 + -0.31265425960737 * AcceptedCmp30 + -0.25076565034266 * AcceptedCmp40 + 
-0.20158659730872 * AcceptedCmp50 + -0.43687103612629 * Complain0 ;
2089262   +   H13  = H13  +     0.21852176280571 * AcceptedCmp10
2089263   +          +     0.01727991436107 * AcceptedCmp20  +     0.19303261094625 *
2089264   +        AcceptedCmp30  +    -0.65492191560509 * AcceptedCmp40
2089265   +          +    -0.09636750660684 * AcceptedCmp50  +     0.07579128571046 *
2089266   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.21852176280571 * AcceptedCmp10 + 0.01727991436107 * 
AcceptedCmp20 + 0.19303261094625 * AcceptedCmp30 + -0.65492191560509 * AcceptedCmp40 + 
-0.09636750660684 * AcceptedCmp50 + 0.07579128571046 * Complain0 ;
2089267   +   H14  = H14  +     0.20819294353855 * AcceptedCmp10
2089268   +          +      0.5159102831901 * AcceptedCmp20  +     0.55295587458643 *
2089269   +        AcceptedCmp30  +     0.80682431419623 * AcceptedCmp40
2089270   +          +     0.74007057798158 * AcceptedCmp50  +     -0.4573052390807 *
2089271   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.20819294353855 * AcceptedCmp10 + 0.5159102831901 * 
AcceptedCmp20 + 0.55295587458643 * AcceptedCmp30 + 0.80682431419623 * AcceptedCmp40 + 
0.74007057798158 * AcceptedCmp50 + -0.4573052390807 * Complain0 ;
2089272   +   H15  = H15  +     1.26330939420524 * AcceptedCmp10
2089273   +          +     0.29494505935793 * AcceptedCmp20  +     0.25561322032419 *
2089274   +        AcceptedCmp30  +     0.50102236777897 * AcceptedCmp40
2089275   +          +     0.20696267245027 * AcceptedCmp50  +    -0.00849145233901 *
2089276   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 1.26330939420524 * AcceptedCmp10 + 0.29494505935793 * 
AcceptedCmp20 + 0.25561322032419 * AcceptedCmp30 + 0.50102236777897 * AcceptedCmp40 + 
0.20696267245027 * AcceptedCmp50 + -0.00849145233901 * Complain0 ;
2089277   +   H16  = H16  +     0.03638428330381 * AcceptedCmp10
2089278   +          +     0.27994215452657 * AcceptedCmp20  +    -0.03861840445025 *
2089279   +        AcceptedCmp30  +      0.3398057347433 * AcceptedCmp40
2089280   +          +    -0.00738335957724 * AcceptedCmp50  +      0.0447804375799 *
2089281   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.03638428330381 * AcceptedCmp10 + 0.27994215452657 * 
AcceptedCmp20 + -0.03861840445025 * AcceptedCmp30 + 0.3398057347433 * AcceptedCmp40 + 
-0.00738335957724 * AcceptedCmp50 + 0.0447804375799 * Complain0 ;
2089282   +   H11  = H11  +     0.27482405283962 * Education2n_Cycle
2089283   +          +     0.11084012456612 * EducationBasic  +    -0.23835071987159 *
2089284   +        EducationGraduation  +    -0.10167082180552 * EducationMaster
2089285   +          +     0.51015833145636 * Marital_StatusDivorced
2089286   +          +     -1.1653662063616 * Marital_StatusMarried
2089287   +          +     1.19396547750441 * Marital_StatusSingle
2089288   +          +    -0.99605751789992 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.27482405283962 * Education2n_Cycle + 0.11084012456612 * 
EducationBasic + -0.23835071987159 * EducationGraduation + -0.10167082180552 * EducationMaster 
+ 0.51015833145636 * Marital_StatusDivorced + -1.1653662063616 * Marital_StatusMarried + 
1.19396547750441 * Marital_StatusSingle + -0.99605751789992 * Marital_StatusTogether ;
2089289   +   H12  = H12  +    -0.05268347704739 * Education2n_Cycle
2089290   +          +     0.19362065968028 * EducationBasic  +    -0.26784257195414 *
2089291   +        EducationGraduation  +     0.16650577465959 * EducationMaster
2089292   +          +     0.09154288513995 * Marital_StatusDivorced
2089293   +          +     0.06725684628382 * Marital_StatusMarried
2089294   +          +     0.11327659191494 * Marital_StatusSingle
2089295   +          +     0.01793778876811 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.05268347704739 * Education2n_Cycle + 0.19362065968028 * 
EducationBasic + -0.26784257195414 * EducationGraduation + 0.16650577465959 * EducationMaster 
+ 0.09154288513995 * Marital_StatusDivorced + 0.06725684628382 * Marital_StatusMarried + 
0.11327659191494 * Marital_StatusSingle + 0.01793778876811 * Marital_StatusTogether ;
2089296   +   H13  = H13  +     -0.1027084329077 * Education2n_Cycle
2089297   +          +    -0.01342449140757 * EducationBasic  +    -0.35627920427273 *
2089298   +        EducationGraduation  +    -0.05554656531793 * EducationMaster
2089299   +          +     0.37591653615852 * Marital_StatusDivorced
2089300   +          +    -0.05024236790132 * Marital_StatusMarried
2089301   +          +    -0.28317154997144 * Marital_StatusSingle
2089302   +          +    -0.19247490223101 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.1027084329077 * Education2n_Cycle + -0.01342449140757 * 
EducationBasic + -0.35627920427273 * EducationGraduation + -0.05554656531793 * EducationMaster 
+ 0.37591653615852 * Marital_StatusDivorced + -0.05024236790132 * Marital_StatusMarried + 
-0.28317154997144 * Marital_StatusSingle + -0.19247490223101 * Marital_StatusTogether ;
2089303   +   H14  = H14  +     -0.4162491480577 * Education2n_Cycle
2089304   +          +     0.38075572764074 * EducationBasic  +    -0.28169469529121 *
2089305   +        EducationGraduation  +       0.638986138084 * EducationMaster
2089306   +          +    -0.44885292450558 * Marital_StatusDivorced
2089307   +          +     0.78958791519299 * Marital_StatusMarried
2089308   +          +    -0.09688714431356 * Marital_StatusSingle
2089309   +          +     0.84239030196202 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.4162491480577 * Education2n_Cycle + 0.38075572764074 * 
EducationBasic + -0.28169469529121 * EducationGraduation + 0.638986138084 * EducationMaster + 
-0.44885292450558 * Marital_StatusDivorced + 0.78958791519299 * Marital_StatusMarried + 
-0.09688714431356 * Marital_StatusSingle + 0.84239030196202 * Marital_StatusTogether ;
2089310   +   H15  = H15  +     0.33126657974568 * Education2n_Cycle
2089311   +          +     0.44539039262703 * EducationBasic  +    -0.09154902903865 *
2089312   +        EducationGraduation  +    -0.26400363440725 * EducationMaster
2089313   +          +    -0.30801073895989 * Marital_StatusDivorced
2089314   +          +     -0.1285150749223 * Marital_StatusMarried
2089315   +          +     0.06775542164414 * Marital_StatusSingle
2089316   +          +    -0.13032366945766 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.33126657974568 * Education2n_Cycle + 0.44539039262703 * 
EducationBasic + -0.09154902903865 * EducationGraduation + -0.26400363440725 * EducationMaster 
+ -0.30801073895989 * Marital_StatusDivorced + -0.1285150749223 * Marital_StatusMarried + 
0.06775542164414 * Marital_StatusSingle + -0.13032366945766 * Marital_StatusTogether ;
2089317   +   H16  = H16  +     0.02030175222681 * Education2n_Cycle
2089318   +          +    -0.19579401096879 * EducationBasic  +      0.2070703930869 *
2089319   +        EducationGraduation  +    -0.40706983167068 * EducationMaster
2089320   +          +     0.22193599090368 * Marital_StatusDivorced
2089321   +          +    -0.54544672042168 * Marital_StatusMarried
2089322   +          +    -0.02237436019864 * Marital_StatusSingle
2089323   +          +    -0.21979468164854 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.02030175222681 * Education2n_Cycle + -0.19579401096879 * 
EducationBasic + 0.2070703930869 * EducationGraduation + -0.40706983167068 * EducationMaster + 
0.22193599090368 * Marital_StatusDivorced + -0.54544672042168 * Marital_StatusMarried + 
-0.02237436019864 * Marital_StatusSingle + -0.21979468164854 * Marital_StatusTogether ;
2089324   +   H11  =    -1.24550293901788 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -1.24550293901788 + H11 ;
2089325   +   H12  =     0.36762263942809 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.36762263942809 + H12 ;
2089326   +   H13  =     0.07010867577103 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = 0.07010867577103 + H13 ;
2089327   +   H14  =    -1.94014549272156 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = -1.94014549272156 + H14 ;
2089328   +   H15  =     0.17666656180153 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = 0.17666656180153 + H15 ;
2089329   +   H16  =    -1.64626406576709 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = -1.64626406576709 + H16 ;
2089330   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
2089331   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
2089332   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
2089333   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
2089334   +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
2089335   +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
2089336   +END;
MPRINT(EM_DIAGRAM):   END;
2089337   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2089338   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
2089339   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
2089340   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
2089341   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
2089342   +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
2089343   +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
2089344   +END;
MPRINT(EM_DIAGRAM):   END;
2089345   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2089346   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2089347   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2089348   +
2089349   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
2089350   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
2089351   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2089352   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
2089353   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
2089354   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2089355   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
2089356   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2089357   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2089358   +end;
MPRINT(EM_DIAGRAM):   end;
2089359   +else do;
MPRINT(EM_DIAGRAM):   else do;
2089360   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
2089361   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
2089362   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
2089363   +   end;
MPRINT(EM_DIAGRAM):   end;
2089364   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
2089365   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
2089366   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
2089367   +   end;
MPRINT(EM_DIAGRAM):   end;
2089368   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2089369   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2089370   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2089371   +   end;
MPRINT(EM_DIAGRAM):   end;
2089372   +end;
MPRINT(EM_DIAGRAM):   end;
2089373   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2089374   +   P_DepVar1  =     4.21126046696691 * H11  +      0.6565061288056 * H12
2089375   +          +    -1.92484011508628 * H13  +    -3.74020722142387 * H14
2089376   +          +    -3.27353026762143 * H15  +     -1.2596922869974 * H16 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 4.21126046696691 * H11 + 0.6565061288056 * H12 + 
-1.92484011508628 * H13 + -3.74020722142387 * H14 + -3.27353026762143 * H15 + -1.2596922869974 
* H16 ;
2089377   +   P_DepVar1  =    -1.36806658950323 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.36806658950323 + P_DepVar1 ;
2089378   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2089379   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2089380   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2089381   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2089382   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2089383   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2089384   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2089385   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2089386   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2089387   +END;
MPRINT(EM_DIAGRAM):   END;
2089388   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2089389   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2089390   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2089391   +END;
MPRINT(EM_DIAGRAM):   END;
2089392   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2089393   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2089394   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2089395   +END;
MPRINT(EM_DIAGRAM):   END;
2089396   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
2089397   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
2089398   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
2089399   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
2089400   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
2089401   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
2089402   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
2089403   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2089404   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2089405   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2089406   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2089407   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2089408   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2089409   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2089410   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2089411   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2089412   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2089413   +END;
MPRINT(EM_DIAGRAM):   END;
2089414   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2089415   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2089416   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2089417   +drop
2089418   +H11
2089419   +H12
2089420   +H13
2089421   +H14
2089422   +H15
2089423   +H16
2089424   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 ;
2089425   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
2089426   +* Renaming variables for Neural35;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural35;
2089427   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2089428   +* Renaming Posterior variables for Neural35;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural35;
2089429   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2089430   +drop Neural35_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural35_P_DepVar1;
2089431   +Neural35_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural35_P_DepVar1 = P_DepVar1;
2089432   +drop Neural35_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural35_P_DepVar0;
2089433   +Neural35_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural35_P_DepVar0 = P_DepVar0;
2089434   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2089435   +* Renaming _WARN_ variable for Neural35;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural35;
2089436   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2089437   +length Neural35_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural35_WARN_ $4;
2089438   +drop Neural35_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural35_WARN_;
2089439   +Neural35_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural35_WARN_ = _WARN_;
2089440   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2089441   +* Ensmbl9: Scoring Code of model 6 of 10;
MPRINT(EM_DIAGRAM):   * Ensmbl9: Scoring Code of model 6 of 10;
2089442   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2089443   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2089444   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
2089445   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
2089446   +* NODE: Neural34;
MPRINT(EM_DIAGRAM):   * NODE: Neural34;
2089447   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2089448   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2089449   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2089450   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2089451   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2089452   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2089453   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2089454   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2089455   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2089456   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2089457   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2089458   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2089459   +LENGTH _WARN_ $4
2089460   +      F_DepVar  $ 12
2089461   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
2089462   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2089463   +
2089464   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2089465   +
2089466   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2089467   +
2089468   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2089469   +
2089470   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2089471   +
2089472   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2089473   +
2089474   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2089475   +
2089476   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2089477   +
2089478   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2089479   +
2089480   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2089481   +
2089482   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2089483   +
2089484   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2089485   +
2089486   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2089487   +
2089488   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2089489   +
2089490   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2089491   +
2089492   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2089493   +
2089494   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2089495   +
2089496   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2089497   +
2089498   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2089499   +
2089500   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2089501   +
2089502   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2089503   +
2089504   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2089505   +
2089506   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2089507   +
2089508   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2089509   +
2089510   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2089511   +
2089512   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2089513   +
2089514   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2089515   +
2089516   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2089517   +
2089518   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2089519   +
2089520   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
2089521   +
2089522   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
2089523   +
2089524   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
2089525   +
2089526   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
2089527   +
2089528   +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
2089529   +
2089530   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2089531   +
2089532   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2089533   +
2089534   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2089535   +
2089536   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2089537   +
2089538   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
2089539   +
2089540   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2089541   +
2089542   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
2089543   +
2089544   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2089545   +
2089546   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2089547   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2089548   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2089549   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2089550   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2089551   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2089552   +end;
MPRINT(EM_DIAGRAM):   end;
2089553   +else do;
MPRINT(EM_DIAGRAM):   else do;
2089554   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2089555   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2089556   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2089557   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2089558   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2089559   +   end;
MPRINT(EM_DIAGRAM):   end;
2089560   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2089561   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2089562   +   end;
MPRINT(EM_DIAGRAM):   end;
2089563   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2089564   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2089565   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2089566   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2089567   +   end;
MPRINT(EM_DIAGRAM):   end;
2089568   +end;
MPRINT(EM_DIAGRAM):   end;
2089569   +
2089570   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2089571   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2089572   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2089573   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2089574   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2089575   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2089576   +end;
MPRINT(EM_DIAGRAM):   end;
2089577   +else do;
MPRINT(EM_DIAGRAM):   else do;
2089578   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2089579   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2089580   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2089581   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2089582   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2089583   +   end;
MPRINT(EM_DIAGRAM):   end;
2089584   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2089585   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2089586   +   end;
MPRINT(EM_DIAGRAM):   end;
2089587   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2089588   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2089589   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2089590   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2089591   +   end;
MPRINT(EM_DIAGRAM):   end;
2089592   +end;
MPRINT(EM_DIAGRAM):   end;
2089593   +
2089594   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2089595   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2089596   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2089597   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2089598   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2089599   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2089600   +end;
MPRINT(EM_DIAGRAM):   end;
2089601   +else do;
MPRINT(EM_DIAGRAM):   else do;
2089602   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2089603   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2089604   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2089605   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2089606   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2089607   +   end;
MPRINT(EM_DIAGRAM):   end;
2089608   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2089609   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2089610   +   end;
MPRINT(EM_DIAGRAM):   end;
2089611   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2089612   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2089613   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2089614   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2089615   +   end;
MPRINT(EM_DIAGRAM):   end;
2089616   +end;
MPRINT(EM_DIAGRAM):   end;
2089617   +
2089618   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2089619   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2089620   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2089621   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2089622   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2089623   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2089624   +end;
MPRINT(EM_DIAGRAM):   end;
2089625   +else do;
MPRINT(EM_DIAGRAM):   else do;
2089626   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2089627   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2089628   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2089629   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2089630   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2089631   +   end;
MPRINT(EM_DIAGRAM):   end;
2089632   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2089633   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2089634   +   end;
MPRINT(EM_DIAGRAM):   end;
2089635   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2089636   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2089637   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2089638   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2089639   +   end;
MPRINT(EM_DIAGRAM):   end;
2089640   +end;
MPRINT(EM_DIAGRAM):   end;
2089641   +
2089642   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2089643   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2089644   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2089645   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2089646   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2089647   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2089648   +end;
MPRINT(EM_DIAGRAM):   end;
2089649   +else do;
MPRINT(EM_DIAGRAM):   else do;
2089650   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2089651   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2089652   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2089653   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2089654   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2089655   +   end;
MPRINT(EM_DIAGRAM):   end;
2089656   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2089657   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2089658   +   end;
MPRINT(EM_DIAGRAM):   end;
2089659   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2089660   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2089661   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2089662   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2089663   +   end;
MPRINT(EM_DIAGRAM):   end;
2089664   +end;
MPRINT(EM_DIAGRAM):   end;
2089665   +
2089666   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2089667   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2089668   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2089669   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2089670   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2089671   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2089672   +end;
MPRINT(EM_DIAGRAM):   end;
2089673   +else do;
MPRINT(EM_DIAGRAM):   else do;
2089674   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2089675   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2089676   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2089677   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2089678   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2089679   +   end;
MPRINT(EM_DIAGRAM):   end;
2089680   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2089681   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2089682   +   end;
MPRINT(EM_DIAGRAM):   end;
2089683   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2089684   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2089685   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2089686   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2089687   +   end;
MPRINT(EM_DIAGRAM):   end;
2089688   +end;
MPRINT(EM_DIAGRAM):   end;
2089689   +
2089690   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2089691   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
2089692   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2089693   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2089694   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2089695   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2089696   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2089697   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2089698   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2089699   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2089700   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2089701   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2089702   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2089703   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2089704   +end;
MPRINT(EM_DIAGRAM):   end;
2089705   +else do;
MPRINT(EM_DIAGRAM):   else do;
2089706   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2089707   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2089708   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2089709   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2089710   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2089711   +   end;
MPRINT(EM_DIAGRAM):   end;
2089712   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2089713   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2089714   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2089715   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2089716   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2089717   +   end;
MPRINT(EM_DIAGRAM):   end;
2089718   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2089719   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2089720   +   end;
MPRINT(EM_DIAGRAM):   end;
2089721   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2089722   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2089723   +   end;
MPRINT(EM_DIAGRAM):   end;
2089724   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2089725   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2089726   +   end;
MPRINT(EM_DIAGRAM):   end;
2089727   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2089728   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2089729   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2089730   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2089731   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2089732   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2089733   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2089734   +   end;
MPRINT(EM_DIAGRAM):   end;
2089735   +end;
MPRINT(EM_DIAGRAM):   end;
2089736   +
2089737   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2089738   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2089739   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
2089740   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2089741   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2089742   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2089743   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2089744   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2089745   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2089746   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2089747   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2089748   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2089749   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2089750   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2089751   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2089752   +end;
MPRINT(EM_DIAGRAM):   end;
2089753   +else do;
MPRINT(EM_DIAGRAM):   else do;
2089754   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2089755   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2089756   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2089757   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2089758   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2089759   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2089760   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2089761   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2089762   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2089763   +         end;
MPRINT(EM_DIAGRAM):   end;
2089764   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2089765   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2089766   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2089767   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2089768   +            end;
MPRINT(EM_DIAGRAM):   end;
2089769   +         end;
MPRINT(EM_DIAGRAM):   end;
2089770   +      end;
MPRINT(EM_DIAGRAM):   end;
2089771   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2089772   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2089773   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2089774   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2089775   +         end;
MPRINT(EM_DIAGRAM):   end;
2089776   +      end;
MPRINT(EM_DIAGRAM):   end;
2089777   +   end;
MPRINT(EM_DIAGRAM):   end;
2089778   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2089779   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2089780   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2089781   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2089782   +      end;
MPRINT(EM_DIAGRAM):   end;
2089783   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2089784   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2089785   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2089786   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2089787   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2089788   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2089789   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2089790   +         end;
MPRINT(EM_DIAGRAM):   end;
2089791   +      end;
MPRINT(EM_DIAGRAM):   end;
2089792   +   end;
MPRINT(EM_DIAGRAM):   end;
2089793   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2089794   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2089795   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2089796   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2089797   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2089798   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2089799   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2089800   +   end;
MPRINT(EM_DIAGRAM):   end;
2089801   +end;
MPRINT(EM_DIAGRAM):   end;
2089802   +
2089803   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2089804   +*** Checking missing input Interval
2089805   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2089806   +
2089807   +IF NMISS(
2089808   +   Income ,
2089809   +   Kidhome ,
2089810   +   MntFishProducts ,
2089811   +   MntFruits ,
2089812   +   MntGoldProds ,
2089813   +   MntMeatProducts ,
2089814   +   MntSweetProducts ,
2089815   +   MntWines ,
2089816   +   NumCatalogPurchases ,
2089817   +   NumDealsPurchases ,
2089818   +   NumStorePurchases ,
2089819   +   NumWebPurchases ,
2089820   +   NumWebVisitsMonth ,
2089821   +   Recency ,
2089822   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Income , Kidhome , MntFishProducts , MntFruits , MntGoldProds 
, MntMeatProducts , MntSweetProducts , MntWines , NumCatalogPurchases , NumDealsPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , Recency , Teenhome ) THEN DO;
2089823   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2089824   +
2089825   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2089826   +END;
MPRINT(EM_DIAGRAM):   END;
2089827   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2089828   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
2089829   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2089830   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2089831   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2089832   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2089833   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2089834   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2089835   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2089836   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2089837   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2089838   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2089839   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2089840   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2089841   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2089842   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2089843   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2089844   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2089845   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2089846   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2089847   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2089848   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2089849   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2089850   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2089851   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2089852   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2089853   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2089854   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2089855   +END;
MPRINT(EM_DIAGRAM):   END;
2089856   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2089857   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2089858   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2089859   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2089860   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2089861   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2089862   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2089863   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2089864   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2089865   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2089866   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2089867   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2089868   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2089869   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
2089870   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2089871   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2089872   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2089873   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2089874   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2089875   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2089876   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2089877   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2089878   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2089879   +   ELSE S_NumCatalogPurchases
2089880   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2089881   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2089882   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2089883   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2089884   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2089885   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2089886   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2089887   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2089888   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2089889   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2089890   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2089891   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2089892   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2089893   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2089894   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2089895   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2089896   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2089897   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2089898   +END;
MPRINT(EM_DIAGRAM):   END;
2089899   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2089900   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
2089901   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2089902   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2089903   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
2089904   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2089905   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2089906   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
2089907   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2089908   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2089909   +   H11  =    -0.81572379016921 * S_Income  +    -0.07670946585348 * S_Kidhome
2089910   +          +     0.24367603598167 * S_MntFishProducts
2089911   +          +     0.19692980127348 * S_MntFruits  +    -0.03926738185333 *
2089912   +        S_MntGoldProds  +    -0.20900804333353 * S_MntMeatProducts
2089913   +          +     0.34054806441484 * S_MntSweetProducts
2089914   +          +     0.65956211369383 * S_MntWines  +    -0.95375334578522 *
2089915   +        S_NumCatalogPurchases  +    -0.73124740368567 * S_NumDealsPurchases
2089916   +          +     0.98942946974575 * S_NumStorePurchases
2089917   +          +     0.89701206630103 * S_NumWebPurchases
2089918   +          +    -1.22878611472154 * S_NumWebVisitsMonth
2089919   +          +     1.44981870978354 * S_Recency  +     0.47533125686411 *
2089920   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = -0.81572379016921 * S_Income + -0.07670946585348 * S_Kidhome + 
0.24367603598167 * S_MntFishProducts + 0.19692980127348 * S_MntFruits + -0.03926738185333 * 
S_MntGoldProds + -0.20900804333353 * S_MntMeatProducts + 0.34054806441484 * S_MntSweetProducts 
+ 0.65956211369383 * S_MntWines + -0.95375334578522 * S_NumCatalogPurchases + 
-0.73124740368567 * S_NumDealsPurchases + 0.98942946974575 * S_NumStorePurchases + 
0.89701206630103 * S_NumWebPurchases + -1.22878611472154 * S_NumWebVisitsMonth + 
1.44981870978354 * S_Recency + 0.47533125686411 * S_Teenhome ;
2089921   +   H12  =    -0.18875145195495 * S_Income  +     0.42230998482453 * S_Kidhome
2089922   +          +     0.16683404689723 * S_MntFishProducts
2089923   +          +     0.32072658929401 * S_MntFruits  +    -0.12341748032201 *
2089924   +        S_MntGoldProds  +    -1.56478754527255 * S_MntMeatProducts
2089925   +          +     0.20389084548968 * S_MntSweetProducts
2089926   +          +     0.95592931625509 * S_MntWines  +    -0.69996817353755 *
2089927   +        S_NumCatalogPurchases  +    -0.92709806328697 * S_NumDealsPurchases
2089928   +          +     1.27164659640366 * S_NumStorePurchases
2089929   +          +     1.02122194207802 * S_NumWebPurchases
2089930   +          +     -1.5111033436803 * S_NumWebVisitsMonth
2089931   +          +     1.63712814901544 * S_Recency  +     0.14205116840572 *
2089932   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -0.18875145195495 * S_Income + 0.42230998482453 * S_Kidhome + 
0.16683404689723 * S_MntFishProducts + 0.32072658929401 * S_MntFruits + -0.12341748032201 * 
S_MntGoldProds + -1.56478754527255 * S_MntMeatProducts + 0.20389084548968 * S_MntSweetProducts 
+ 0.95592931625509 * S_MntWines + -0.69996817353755 * S_NumCatalogPurchases + 
-0.92709806328697 * S_NumDealsPurchases + 1.27164659640366 * S_NumStorePurchases + 
1.02122194207802 * S_NumWebPurchases + -1.5111033436803 * S_NumWebVisitsMonth + 
1.63712814901544 * S_Recency + 0.14205116840572 * S_Teenhome ;
2089933   +   H13  =     1.02798705354163 * S_Income  +    -0.94411708781921 * S_Kidhome
2089934   +          +    -0.03345077166544 * S_MntFishProducts
2089935   +          +     0.00038440809349 * S_MntFruits  +    -0.05068379715712 *
2089936   +        S_MntGoldProds  +     1.00464705307582 * S_MntMeatProducts
2089937   +          +    -0.11948662500951 * S_MntSweetProducts
2089938   +          +    -0.52438819731252 * S_MntWines  +     0.98586904866769 *
2089939   +        S_NumCatalogPurchases  +     0.09015295226839 * S_NumDealsPurchases
2089940   +          +     0.22401914357376 * S_NumStorePurchases
2089941   +          +     0.04219877865976 * S_NumWebPurchases
2089942   +          +     1.21753334166036 * S_NumWebVisitsMonth
2089943   +          +    -1.33712212110081 * S_Recency  +    -0.47582856683655 *
2089944   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = 1.02798705354163 * S_Income + -0.94411708781921 * S_Kidhome + 
-0.03345077166544 * S_MntFishProducts + 0.00038440809349 * S_MntFruits + -0.05068379715712 * 
S_MntGoldProds + 1.00464705307582 * S_MntMeatProducts + -0.11948662500951 * S_MntSweetProducts 
+ -0.52438819731252 * S_MntWines + 0.98586904866769 * S_NumCatalogPurchases + 0.09015295226839 
* S_NumDealsPurchases + 0.22401914357376 * S_NumStorePurchases + 0.04219877865976 * 
S_NumWebPurchases + 1.21753334166036 * S_NumWebVisitsMonth + -1.33712212110081 * S_Recency + 
-0.47582856683655 * S_Teenhome ;
2089945   +   H14  =     0.91431429848834 * S_Income  +    -1.16289676557574 * S_Kidhome
2089946   +          +     0.31175257038578 * S_MntFishProducts
2089947   +          +     0.08080436076271 * S_MntFruits  +     0.15252288175851 *
2089948   +        S_MntGoldProds  +     0.21603546207654 * S_MntMeatProducts
2089949   +          +      0.0927253053382 * S_MntSweetProducts
2089950   +          +     0.05865323888304 * S_MntWines  +    -0.23426953728277 *
2089951   +        S_NumCatalogPurchases  +    -0.46451908614085 * S_NumDealsPurchases
2089952   +          +    -0.12667606349662 * S_NumStorePurchases
2089953   +          +     0.30148374518724 * S_NumWebPurchases
2089954   +          +     0.48934229701658 * S_NumWebVisitsMonth
2089955   +          +    -0.83754390793251 * S_Recency  +     -0.4576645462819 *
2089956   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = 0.91431429848834 * S_Income + -1.16289676557574 * S_Kidhome + 
0.31175257038578 * S_MntFishProducts + 0.08080436076271 * S_MntFruits + 0.15252288175851 * 
S_MntGoldProds + 0.21603546207654 * S_MntMeatProducts + 0.0927253053382 * S_MntSweetProducts + 
0.05865323888304 * S_MntWines + -0.23426953728277 * S_NumCatalogPurchases + -0.46451908614085 
* S_NumDealsPurchases + -0.12667606349662 * S_NumStorePurchases + 0.30148374518724 * 
S_NumWebPurchases + 0.48934229701658 * S_NumWebVisitsMonth + -0.83754390793251 * S_Recency + 
-0.4576645462819 * S_Teenhome ;
2089957   +   H15  =    -0.58161501095664 * S_Income  +     -1.0333658128614 * S_Kidhome
2089958   +          +     0.42646725119177 * S_MntFishProducts
2089959   +          +     -0.3264621401658 * S_MntFruits  +    -0.74616728524532 *
2089960   +        S_MntGoldProds  +    -0.97572068716712 * S_MntMeatProducts
2089961   +          +    -0.01493605582616 * S_MntSweetProducts
2089962   +          +      0.0311636632685 * S_MntWines  +    -1.68599903767191 *
2089963   +        S_NumCatalogPurchases  +    -1.25052648798307 * S_NumDealsPurchases
2089964   +          +     0.54256744091258 * S_NumStorePurchases
2089965   +          +     0.43065931458468 * S_NumWebPurchases
2089966   +          +      0.5935561420466 * S_NumWebVisitsMonth
2089967   +          +    -0.45183418369624 * S_Recency  +     0.19260512629844 *
2089968   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H15 = -0.58161501095664 * S_Income + -1.0333658128614 * S_Kidhome + 
0.42646725119177 * S_MntFishProducts + -0.3264621401658 * S_MntFruits + -0.74616728524532 * 
S_MntGoldProds + -0.97572068716712 * S_MntMeatProducts + -0.01493605582616 * 
S_MntSweetProducts + 0.0311636632685 * S_MntWines + -1.68599903767191 * S_NumCatalogPurchases 
+ -1.25052648798307 * S_NumDealsPurchases + 0.54256744091258 * S_NumStorePurchases + 
0.43065931458468 * S_NumWebPurchases + 0.5935561420466 * S_NumWebVisitsMonth + 
-0.45183418369624 * S_Recency + 0.19260512629844 * S_Teenhome ;
2089969   +   H11  = H11  +     0.61503950219838 * AcceptedCmp10
2089970   +          +     0.02945207091619 * AcceptedCmp20  +     0.99151950769472 *
2089971   +        AcceptedCmp30  +     1.08987060401718 * AcceptedCmp40
2089972   +          +     0.45427753773024 * AcceptedCmp50  +    -1.03533951966815 *
2089973   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.61503950219838 * AcceptedCmp10 + 0.02945207091619 * 
AcceptedCmp20 + 0.99151950769472 * AcceptedCmp30 + 1.08987060401718 * AcceptedCmp40 + 
0.45427753773024 * AcceptedCmp50 + -1.03533951966815 * Complain0 ;
2089974   +   H12  = H12  +     0.83823476190401 * AcceptedCmp10
2089975   +          +      1.0793719601418 * AcceptedCmp20  +     0.68538854946581 *
2089976   +        AcceptedCmp30  +     1.00297565893339 * AcceptedCmp40
2089977   +          +     0.24586379991786 * AcceptedCmp50  +     0.15471251255301 *
2089978   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.83823476190401 * AcceptedCmp10 + 1.0793719601418 * 
AcceptedCmp20 + 0.68538854946581 * AcceptedCmp30 + 1.00297565893339 * AcceptedCmp40 + 
0.24586379991786 * AcceptedCmp50 + 0.15471251255301 * Complain0 ;
2089979   +   H13  = H13  +    -0.41486094438907 * AcceptedCmp10
2089980   +          +    -0.76586628449839 * AcceptedCmp20  +    -0.59695459523693 *
2089981   +        AcceptedCmp30  +    -0.30262159911837 * AcceptedCmp40
2089982   +          +    -0.61141171124182 * AcceptedCmp50  +    -0.01086235188835 *
2089983   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.41486094438907 * AcceptedCmp10 + -0.76586628449839 * 
AcceptedCmp20 + -0.59695459523693 * AcceptedCmp30 + -0.30262159911837 * AcceptedCmp40 + 
-0.61141171124182 * AcceptedCmp50 + -0.01086235188835 * Complain0 ;
2089984   +   H14  = H14  +    -0.09662858884082 * AcceptedCmp10
2089985   +          +    -0.48515652524171 * AcceptedCmp20  +    -0.37421451374399 *
2089986   +        AcceptedCmp30  +    -0.52889523891817 * AcceptedCmp40
2089987   +          +    -0.73518448275357 * AcceptedCmp50  +    -0.36065830718672 *
2089988   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.09662858884082 * AcceptedCmp10 + -0.48515652524171 * 
AcceptedCmp20 + -0.37421451374399 * AcceptedCmp30 + -0.52889523891817 * AcceptedCmp40 + 
-0.73518448275357 * AcceptedCmp50 + -0.36065830718672 * Complain0 ;
2089989   +   H15  = H15  +      0.2985143092641 * AcceptedCmp10
2089990   +          +    -0.06881934778393 * AcceptedCmp20  +    -0.02609197044604 *
2089991   +        AcceptedCmp30  +    -0.79105657447885 * AcceptedCmp40
2089992   +          +    -0.02286855144948 * AcceptedCmp50  +     0.02884650192784 *
2089993   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.2985143092641 * AcceptedCmp10 + -0.06881934778393 * 
AcceptedCmp20 + -0.02609197044604 * AcceptedCmp30 + -0.79105657447885 * AcceptedCmp40 + 
-0.02286855144948 * AcceptedCmp50 + 0.02884650192784 * Complain0 ;
2089994   +   H11  = H11  +    -0.41169946146301 * Education2n_Cycle
2089995   +          +      0.8448273504441 * EducationBasic  +    -1.02497956377347 *
2089996   +        EducationGraduation  +     0.43998321745211 * EducationMaster
2089997   +          +    -0.85912688909911 * Marital_StatusDivorced
2089998   +          +     0.81561401465875 * Marital_StatusMarried
2089999   +          +    -0.58324403081542 * Marital_StatusSingle
2090000   +          +      0.9348017085106 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.41169946146301 * Education2n_Cycle + 0.8448273504441 * 
EducationBasic + -1.02497956377347 * EducationGraduation + 0.43998321745211 * EducationMaster 
+ -0.85912688909911 * Marital_StatusDivorced + 0.81561401465875 * Marital_StatusMarried + 
-0.58324403081542 * Marital_StatusSingle + 0.9348017085106 * Marital_StatusTogether ;
2090001   +   H12  = H12  +     0.22828129841893 * Education2n_Cycle
2090002   +          +     0.47579227804033 * EducationBasic  +    -0.18165301263195 *
2090003   +        EducationGraduation  +    -0.16143431016405 * EducationMaster
2090004   +          +    -0.34784695867287 * Marital_StatusDivorced
2090005   +          +    -0.18194022182247 * Marital_StatusMarried
2090006   +          +    -0.10633185904164 * Marital_StatusSingle
2090007   +          +     0.13136125361628 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.22828129841893 * Education2n_Cycle + 0.47579227804033 * 
EducationBasic + -0.18165301263195 * EducationGraduation + -0.16143431016405 * EducationMaster 
+ -0.34784695867287 * Marital_StatusDivorced + -0.18194022182247 * Marital_StatusMarried + 
-0.10633185904164 * Marital_StatusSingle + 0.13136125361628 * Marital_StatusTogether ;
2090008   +   H13  = H13  +     0.38705901043652 * Education2n_Cycle
2090009   +          +     0.19703188370189 * EducationBasic  +    -0.48062640599976 *
2090010   +        EducationGraduation  +     -0.3646621736273 * EducationMaster
2090011   +          +     0.61058752124466 * Marital_StatusDivorced
2090012   +          +    -1.38793808025141 * Marital_StatusMarried
2090013   +          +     1.10060737810944 * Marital_StatusSingle
2090014   +          +    -1.21250219018366 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.38705901043652 * Education2n_Cycle + 0.19703188370189 * 
EducationBasic + -0.48062640599976 * EducationGraduation + -0.3646621736273 * EducationMaster 
+ 0.61058752124466 * Marital_StatusDivorced + -1.38793808025141 * Marital_StatusMarried + 
1.10060737810944 * Marital_StatusSingle + -1.21250219018366 * Marital_StatusTogether ;
2090015   +   H14  = H14  +    -0.20576658115662 * Education2n_Cycle
2090016   +          +    -0.09185472034614 * EducationBasic  +    -0.43674210064447 *
2090017   +        EducationGraduation  +    -0.18154054746298 * EducationMaster
2090018   +          +     0.11973800573581 * Marital_StatusDivorced
2090019   +          +      -0.294635257911 * Marital_StatusMarried
2090020   +          +    -0.05399659601172 * Marital_StatusSingle
2090021   +          +     0.34207780606239 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.20576658115662 * Education2n_Cycle + -0.09185472034614 * 
EducationBasic + -0.43674210064447 * EducationGraduation + -0.18154054746298 * EducationMaster 
+ 0.11973800573581 * Marital_StatusDivorced + -0.294635257911 * Marital_StatusMarried + 
-0.05399659601172 * Marital_StatusSingle + 0.34207780606239 * Marital_StatusTogether ;
2090022   +   H15  = H15  +    -0.05553093684862 * Education2n_Cycle
2090023   +          +    -0.12898006732329 * EducationBasic  +    -0.16064118923518 *
2090024   +        EducationGraduation  +     -0.6431539624694 * EducationMaster
2090025   +          +     0.42838191659864 * Marital_StatusDivorced
2090026   +          +    -0.09150349181363 * Marital_StatusMarried
2090027   +          +    -0.33520164145276 * Marital_StatusSingle
2090028   +          +    -0.15253738713197 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + -0.05553093684862 * Education2n_Cycle + -0.12898006732329 * 
EducationBasic + -0.16064118923518 * EducationGraduation + -0.6431539624694 * EducationMaster 
+ 0.42838191659864 * Marital_StatusDivorced + -0.09150349181363 * Marital_StatusMarried + 
-0.33520164145276 * Marital_StatusSingle + -0.15253738713197 * Marital_StatusTogether ;
2090029   +   H11  =     -1.5079478405973 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -1.5079478405973 + H11 ;
2090030   +   H12  =     0.03014958331993 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.03014958331993 + H12 ;
2090031   +   H13  =    -1.78098671165572 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -1.78098671165572 + H13 ;
2090032   +   H14  =     0.22179429743277 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 0.22179429743277 + H14 ;
2090033   +   H15  =    -2.06602107857898 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = -2.06602107857898 + H15 ;
2090034   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
2090035   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
2090036   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
2090037   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
2090038   +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
2090039   +END;
MPRINT(EM_DIAGRAM):   END;
2090040   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2090041   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
2090042   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
2090043   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
2090044   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
2090045   +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
2090046   +END;
MPRINT(EM_DIAGRAM):   END;
2090047   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2090048   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2090049   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2090050   +
2090051   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
2090052   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
2090053   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2090054   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
2090055   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
2090056   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2090057   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
2090058   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2090059   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2090060   +end;
MPRINT(EM_DIAGRAM):   end;
2090061   +else do;
MPRINT(EM_DIAGRAM):   else do;
2090062   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
2090063   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
2090064   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
2090065   +   end;
MPRINT(EM_DIAGRAM):   end;
2090066   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
2090067   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
2090068   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
2090069   +   end;
MPRINT(EM_DIAGRAM):   end;
2090070   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2090071   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2090072   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2090073   +   end;
MPRINT(EM_DIAGRAM):   end;
2090074   +end;
MPRINT(EM_DIAGRAM):   end;
2090075   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2090076   +   P_DepVar1  =    -4.55666337815854 * H11  +    -4.04792544554995 * H12
2090077   +          +     4.56148127429284 * H13  +     2.36841344452371 * H14
2090078   +          +    -3.07371010011749 * H15 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -4.55666337815854 * H11 + -4.04792544554995 * H12 + 
4.56148127429284 * H13 + 2.36841344452371 * H14 + -3.07371010011749 * H15 ;
2090079   +   P_DepVar1  =    -0.83283406236136 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.83283406236136 + P_DepVar1 ;
2090080   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2090081   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2090082   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2090083   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2090084   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2090085   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2090086   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2090087   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2090088   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2090089   +END;
MPRINT(EM_DIAGRAM):   END;
2090090   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2090091   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2090092   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2090093   +END;
MPRINT(EM_DIAGRAM):   END;
2090094   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2090095   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2090096   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2090097   +END;
MPRINT(EM_DIAGRAM):   END;
2090098   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
2090099   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
2090100   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
2090101   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
2090102   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
2090103   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
2090104   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
2090105   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2090106   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2090107   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2090108   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2090109   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2090110   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2090111   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2090112   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2090113   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2090114   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2090115   +END;
MPRINT(EM_DIAGRAM):   END;
2090116   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2090117   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2090118   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2090119   +drop
2090120   +H11
2090121   +H12
2090122   +H13
2090123   +H14
2090124   +H15
2090125   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 ;
2090126   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
2090127   +* Renaming variables for Neural34;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural34;
2090128   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2090129   +* Renaming Posterior variables for Neural34;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural34;
2090130   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2090131   +drop Neural34_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural34_P_DepVar1;
2090132   +Neural34_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural34_P_DepVar1 = P_DepVar1;
2090133   +drop Neural34_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural34_P_DepVar0;
2090134   +Neural34_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural34_P_DepVar0 = P_DepVar0;
2090135   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2090136   +* Renaming _WARN_ variable for Neural34;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural34;
2090137   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2090138   +length Neural34_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural34_WARN_ $4;
2090139   +drop Neural34_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural34_WARN_;
2090140   +Neural34_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural34_WARN_ = _WARN_;
2090141   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2090142   +* Ensmbl9: Scoring Code of model 7 of 10;
MPRINT(EM_DIAGRAM):   * Ensmbl9: Scoring Code of model 7 of 10;
2090143   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2090144   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2090145   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
2090146   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
2090147   +* NODE: Neural33;
MPRINT(EM_DIAGRAM):   * NODE: Neural33;
2090148   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2090149   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2090150   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2090151   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2090152   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2090153   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2090154   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2090155   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2090156   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2090157   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2090158   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2090159   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2090160   +LENGTH _WARN_ $4
2090161   +      F_DepVar  $ 12
2090162   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
2090163   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2090164   +
2090165   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2090166   +
2090167   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2090168   +
2090169   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2090170   +
2090171   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2090172   +
2090173   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2090174   +
2090175   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2090176   +
2090177   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2090178   +
2090179   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2090180   +
2090181   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2090182   +
2090183   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2090184   +
2090185   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2090186   +
2090187   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2090188   +
2090189   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2090190   +
2090191   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2090192   +
2090193   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2090194   +
2090195   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2090196   +
2090197   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2090198   +
2090199   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2090200   +
2090201   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2090202   +
2090203   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2090204   +
2090205   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2090206   +
2090207   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2090208   +
2090209   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2090210   +
2090211   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2090212   +
2090213   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2090214   +
2090215   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2090216   +
2090217   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2090218   +
2090219   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2090220   +
2090221   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
2090222   +
2090223   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
2090224   +
2090225   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
2090226   +
2090227   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
2090228   +
2090229   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2090230   +
2090231   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2090232   +
2090233   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2090234   +
2090235   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2090236   +
2090237   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
2090238   +
2090239   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2090240   +
2090241   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
2090242   +
2090243   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2090244   +
2090245   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2090246   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2090247   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2090248   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2090249   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2090250   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2090251   +end;
MPRINT(EM_DIAGRAM):   end;
2090252   +else do;
MPRINT(EM_DIAGRAM):   else do;
2090253   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2090254   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2090255   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2090256   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2090257   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2090258   +   end;
MPRINT(EM_DIAGRAM):   end;
2090259   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2090260   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2090261   +   end;
MPRINT(EM_DIAGRAM):   end;
2090262   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2090263   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2090264   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2090265   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2090266   +   end;
MPRINT(EM_DIAGRAM):   end;
2090267   +end;
MPRINT(EM_DIAGRAM):   end;
2090268   +
2090269   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2090270   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2090271   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2090272   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2090273   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2090274   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2090275   +end;
MPRINT(EM_DIAGRAM):   end;
2090276   +else do;
MPRINT(EM_DIAGRAM):   else do;
2090277   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2090278   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2090279   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2090280   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2090281   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2090282   +   end;
MPRINT(EM_DIAGRAM):   end;
2090283   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2090284   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2090285   +   end;
MPRINT(EM_DIAGRAM):   end;
2090286   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2090287   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2090288   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2090289   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2090290   +   end;
MPRINT(EM_DIAGRAM):   end;
2090291   +end;
MPRINT(EM_DIAGRAM):   end;
2090292   +
2090293   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2090294   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2090295   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2090296   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2090297   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2090298   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2090299   +end;
MPRINT(EM_DIAGRAM):   end;
2090300   +else do;
MPRINT(EM_DIAGRAM):   else do;
2090301   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2090302   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2090303   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2090304   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2090305   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2090306   +   end;
MPRINT(EM_DIAGRAM):   end;
2090307   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2090308   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2090309   +   end;
MPRINT(EM_DIAGRAM):   end;
2090310   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2090311   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2090312   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2090313   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2090314   +   end;
MPRINT(EM_DIAGRAM):   end;
2090315   +end;
MPRINT(EM_DIAGRAM):   end;
2090316   +
2090317   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2090318   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2090319   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2090320   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2090321   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2090322   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2090323   +end;
MPRINT(EM_DIAGRAM):   end;
2090324   +else do;
MPRINT(EM_DIAGRAM):   else do;
2090325   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2090326   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2090327   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2090328   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2090329   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2090330   +   end;
MPRINT(EM_DIAGRAM):   end;
2090331   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2090332   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2090333   +   end;
MPRINT(EM_DIAGRAM):   end;
2090334   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2090335   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2090336   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2090337   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2090338   +   end;
MPRINT(EM_DIAGRAM):   end;
2090339   +end;
MPRINT(EM_DIAGRAM):   end;
2090340   +
2090341   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2090342   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2090343   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2090344   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2090345   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2090346   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2090347   +end;
MPRINT(EM_DIAGRAM):   end;
2090348   +else do;
MPRINT(EM_DIAGRAM):   else do;
2090349   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2090350   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2090351   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2090352   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2090353   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2090354   +   end;
MPRINT(EM_DIAGRAM):   end;
2090355   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2090356   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2090357   +   end;
MPRINT(EM_DIAGRAM):   end;
2090358   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2090359   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2090360   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2090361   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2090362   +   end;
MPRINT(EM_DIAGRAM):   end;
2090363   +end;
MPRINT(EM_DIAGRAM):   end;
2090364   +
2090365   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2090366   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2090367   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2090368   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2090369   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2090370   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2090371   +end;
MPRINT(EM_DIAGRAM):   end;
2090372   +else do;
MPRINT(EM_DIAGRAM):   else do;
2090373   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2090374   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2090375   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2090376   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2090377   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2090378   +   end;
MPRINT(EM_DIAGRAM):   end;
2090379   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2090380   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2090381   +   end;
MPRINT(EM_DIAGRAM):   end;
2090382   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2090383   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2090384   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2090385   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2090386   +   end;
MPRINT(EM_DIAGRAM):   end;
2090387   +end;
MPRINT(EM_DIAGRAM):   end;
2090388   +
2090389   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2090390   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
2090391   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2090392   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2090393   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2090394   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2090395   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2090396   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2090397   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2090398   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2090399   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2090400   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2090401   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2090402   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2090403   +end;
MPRINT(EM_DIAGRAM):   end;
2090404   +else do;
MPRINT(EM_DIAGRAM):   else do;
2090405   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2090406   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2090407   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2090408   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2090409   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2090410   +   end;
MPRINT(EM_DIAGRAM):   end;
2090411   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2090412   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2090413   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2090414   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2090415   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2090416   +   end;
MPRINT(EM_DIAGRAM):   end;
2090417   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2090418   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2090419   +   end;
MPRINT(EM_DIAGRAM):   end;
2090420   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2090421   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2090422   +   end;
MPRINT(EM_DIAGRAM):   end;
2090423   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2090424   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2090425   +   end;
MPRINT(EM_DIAGRAM):   end;
2090426   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2090427   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2090428   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2090429   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2090430   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2090431   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2090432   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2090433   +   end;
MPRINT(EM_DIAGRAM):   end;
2090434   +end;
MPRINT(EM_DIAGRAM):   end;
2090435   +
2090436   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2090437   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2090438   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
2090439   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2090440   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2090441   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2090442   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2090443   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2090444   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2090445   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2090446   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2090447   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2090448   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2090449   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2090450   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2090451   +end;
MPRINT(EM_DIAGRAM):   end;
2090452   +else do;
MPRINT(EM_DIAGRAM):   else do;
2090453   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2090454   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2090455   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2090456   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2090457   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2090458   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2090459   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2090460   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2090461   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2090462   +         end;
MPRINT(EM_DIAGRAM):   end;
2090463   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2090464   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2090465   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2090466   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2090467   +            end;
MPRINT(EM_DIAGRAM):   end;
2090468   +         end;
MPRINT(EM_DIAGRAM):   end;
2090469   +      end;
MPRINT(EM_DIAGRAM):   end;
2090470   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2090471   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2090472   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2090473   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2090474   +         end;
MPRINT(EM_DIAGRAM):   end;
2090475   +      end;
MPRINT(EM_DIAGRAM):   end;
2090476   +   end;
MPRINT(EM_DIAGRAM):   end;
2090477   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2090478   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2090479   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2090480   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2090481   +      end;
MPRINT(EM_DIAGRAM):   end;
2090482   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2090483   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2090484   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2090485   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2090486   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2090487   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2090488   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2090489   +         end;
MPRINT(EM_DIAGRAM):   end;
2090490   +      end;
MPRINT(EM_DIAGRAM):   end;
2090491   +   end;
MPRINT(EM_DIAGRAM):   end;
2090492   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2090493   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2090494   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2090495   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2090496   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2090497   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2090498   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2090499   +   end;
MPRINT(EM_DIAGRAM):   end;
2090500   +end;
MPRINT(EM_DIAGRAM):   end;
2090501   +
2090502   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2090503   +*** Checking missing input Interval
2090504   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2090505   +
2090506   +IF NMISS(
2090507   +   Income ,
2090508   +   Kidhome ,
2090509   +   MntFishProducts ,
2090510   +   MntFruits ,
2090511   +   MntGoldProds ,
2090512   +   MntMeatProducts ,
2090513   +   MntSweetProducts ,
2090514   +   MntWines ,
2090515   +   NumCatalogPurchases ,
2090516   +   NumDealsPurchases ,
2090517   +   NumStorePurchases ,
2090518   +   NumWebPurchases ,
2090519   +   NumWebVisitsMonth ,
2090520   +   Recency ,
2090521   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Income , Kidhome , MntFishProducts , MntFruits , MntGoldProds 
, MntMeatProducts , MntSweetProducts , MntWines , NumCatalogPurchases , NumDealsPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , Recency , Teenhome ) THEN DO;
2090522   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2090523   +
2090524   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2090525   +END;
MPRINT(EM_DIAGRAM):   END;
2090526   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2090527   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
2090528   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2090529   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2090530   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2090531   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2090532   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2090533   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2090534   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2090535   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2090536   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2090537   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2090538   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2090539   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2090540   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2090541   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2090542   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2090543   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2090544   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2090545   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2090546   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2090547   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2090548   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2090549   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2090550   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2090551   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2090552   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2090553   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2090554   +END;
MPRINT(EM_DIAGRAM):   END;
2090555   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2090556   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2090557   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2090558   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2090559   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2090560   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2090561   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2090562   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2090563   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2090564   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2090565   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2090566   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2090567   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2090568   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
2090569   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2090570   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2090571   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2090572   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2090573   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2090574   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2090575   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2090576   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2090577   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2090578   +   ELSE S_NumCatalogPurchases
2090579   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2090580   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2090581   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2090582   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2090583   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2090584   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2090585   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2090586   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2090587   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2090588   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2090589   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2090590   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2090591   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2090592   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2090593   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2090594   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2090595   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2090596   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2090597   +END;
MPRINT(EM_DIAGRAM):   END;
2090598   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2090599   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
2090600   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2090601   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2090602   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
2090603   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2090604   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2090605   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
2090606   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2090607   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2090608   +   H11  =     0.32435248899543 * S_Income  +    -0.47929849648429 * S_Kidhome
2090609   +          +     0.13364230231465 * S_MntFishProducts
2090610   +          +     -0.1386717864506 * S_MntFruits  +    -0.02769770185129 *
2090611   +        S_MntGoldProds  +    -0.29009812234724 * S_MntMeatProducts
2090612   +          +    -0.10871064476617 * S_MntSweetProducts
2090613   +          +     0.57858611197719 * S_MntWines  +    -0.26900817180555 *
2090614   +        S_NumCatalogPurchases  +    -0.39598523430317 * S_NumDealsPurchases
2090615   +          +     0.52835897625366 * S_NumStorePurchases
2090616   +          +     0.66297635444958 * S_NumWebPurchases
2090617   +          +    -0.31727971903608 * S_NumWebVisitsMonth
2090618   +          +     0.12789679291219 * S_Recency  +    -0.39270105014448 *
2090619   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.32435248899543 * S_Income + -0.47929849648429 * S_Kidhome + 
0.13364230231465 * S_MntFishProducts + -0.1386717864506 * S_MntFruits + -0.02769770185129 * 
S_MntGoldProds + -0.29009812234724 * S_MntMeatProducts + -0.10871064476617 * 
S_MntSweetProducts + 0.57858611197719 * S_MntWines + -0.26900817180555 * S_NumCatalogPurchases 
+ -0.39598523430317 * S_NumDealsPurchases + 0.52835897625366 * S_NumStorePurchases + 
0.66297635444958 * S_NumWebPurchases + -0.31727971903608 * S_NumWebVisitsMonth + 
0.12789679291219 * S_Recency + -0.39270105014448 * S_Teenhome ;
2090620   +   H12  =     0.37777254641249 * S_Income  +     0.79199857244438 * S_Kidhome
2090621   +          +     0.14748983783528 * S_MntFishProducts
2090622   +          +     0.14994032216514 * S_MntFruits  +     0.19147871752132 *
2090623   +        S_MntGoldProds  +     0.80535213270443 * S_MntMeatProducts
2090624   +          +     0.31095426478608 * S_MntSweetProducts
2090625   +          +     0.00471809437476 * S_MntWines  +     0.93716396534802 *
2090626   +        S_NumCatalogPurchases  +     0.86841248727948 * S_NumDealsPurchases
2090627   +          +     0.14387100066933 * S_NumStorePurchases
2090628   +          +    -0.01648998884133 * S_NumWebPurchases
2090629   +          +     -0.1378597161576 * S_NumWebVisitsMonth
2090630   +          +     0.15850653387379 * S_Recency  +     0.11714339614827 *
2090631   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = 0.37777254641249 * S_Income + 0.79199857244438 * S_Kidhome + 
0.14748983783528 * S_MntFishProducts + 0.14994032216514 * S_MntFruits + 0.19147871752132 * 
S_MntGoldProds + 0.80535213270443 * S_MntMeatProducts + 0.31095426478608 * S_MntSweetProducts 
+ 0.00471809437476 * S_MntWines + 0.93716396534802 * S_NumCatalogPurchases + 0.86841248727948 
* S_NumDealsPurchases + 0.14387100066933 * S_NumStorePurchases + -0.01648998884133 * 
S_NumWebPurchases + -0.1378597161576 * S_NumWebVisitsMonth + 0.15850653387379 * S_Recency + 
0.11714339614827 * S_Teenhome ;
2090632   +   H13  =    -0.31490756773649 * S_Income  +      0.4776214738577 * S_Kidhome
2090633   +          +     0.00774185404534 * S_MntFishProducts
2090634   +          +     0.22292845341942 * S_MntFruits  +     0.11636422687317 *
2090635   +        S_MntGoldProds  +    -0.45522230281212 * S_MntMeatProducts
2090636   +          +     0.28728624268589 * S_MntSweetProducts
2090637   +          +     0.74892928025295 * S_MntWines  +     -0.4834082773325 *
2090638   +        S_NumCatalogPurchases  +    -0.05055717315946 * S_NumDealsPurchases
2090639   +          +     0.56446566213593 * S_NumStorePurchases
2090640   +          +     0.44547549135846 * S_NumWebPurchases
2090641   +          +    -1.17648505936662 * S_NumWebVisitsMonth
2090642   +          +     1.30076355226685 * S_Recency  +     0.56217939635691 *
2090643   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = -0.31490756773649 * S_Income + 0.4776214738577 * S_Kidhome + 
0.00774185404534 * S_MntFishProducts + 0.22292845341942 * S_MntFruits + 0.11636422687317 * 
S_MntGoldProds + -0.45522230281212 * S_MntMeatProducts + 0.28728624268589 * S_MntSweetProducts 
+ 0.74892928025295 * S_MntWines + -0.4834082773325 * S_NumCatalogPurchases + -0.05055717315946 
* S_NumDealsPurchases + 0.56446566213593 * S_NumStorePurchases + 0.44547549135846 * 
S_NumWebPurchases + -1.17648505936662 * S_NumWebVisitsMonth + 1.30076355226685 * S_Recency + 
0.56217939635691 * S_Teenhome ;
2090644   +   H14  =    -0.40179905952719 * S_Income  +     0.16141565212918 * S_Kidhome
2090645   +          +     0.24665716882586 * S_MntFishProducts
2090646   +          +     0.03410629332469 * S_MntFruits  +     -0.1353295645077 *
2090647   +        S_MntGoldProds  +    -0.74661391150362 * S_MntMeatProducts
2090648   +          +    -0.10530818594736 * S_MntSweetProducts
2090649   +          +     0.30618479493194 * S_MntWines  +    -0.63426712804061 *
2090650   +        S_NumCatalogPurchases  +    -0.39486403699564 * S_NumDealsPurchases
2090651   +          +     0.36617016651032 * S_NumStorePurchases
2090652   +          +      0.3580014320946 * S_NumWebPurchases
2090653   +          +    -0.72597289213724 * S_NumWebVisitsMonth
2090654   +          +     0.93272927444012 * S_Recency  +     0.24531402677279 *
2090655   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = -0.40179905952719 * S_Income + 0.16141565212918 * S_Kidhome + 
0.24665716882586 * S_MntFishProducts + 0.03410629332469 * S_MntFruits + -0.1353295645077 * 
S_MntGoldProds + -0.74661391150362 * S_MntMeatProducts + -0.10530818594736 * 
S_MntSweetProducts + 0.30618479493194 * S_MntWines + -0.63426712804061 * S_NumCatalogPurchases 
+ -0.39486403699564 * S_NumDealsPurchases + 0.36617016651032 * S_NumStorePurchases + 
0.3580014320946 * S_NumWebPurchases + -0.72597289213724 * S_NumWebVisitsMonth + 
0.93272927444012 * S_Recency + 0.24531402677279 * S_Teenhome ;
2090656   +   H11  = H11  +     0.10790306691381 * AcceptedCmp10
2090657   +          +     0.36067546675468 * AcceptedCmp20  +     0.56838342781466 *
2090658   +        AcceptedCmp30  +     0.10138997954661 * AcceptedCmp40
2090659   +          +     0.23809874960179 * AcceptedCmp50  +     0.42164522965364 *
2090660   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.10790306691381 * AcceptedCmp10 + 0.36067546675468 * 
AcceptedCmp20 + 0.56838342781466 * AcceptedCmp30 + 0.10138997954661 * AcceptedCmp40 + 
0.23809874960179 * AcceptedCmp50 + 0.42164522965364 * Complain0 ;
2090661   +   H12  = H12  +    -0.10342435301564 * AcceptedCmp10
2090662   +          +     -0.1021625473908 * AcceptedCmp20  +    -0.17400073301804 *
2090663   +        AcceptedCmp30  +      0.1295257925186 * AcceptedCmp40
2090664   +          +    -0.17149939617806 * AcceptedCmp50  +    -0.11843709761825 *
2090665   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.10342435301564 * AcceptedCmp10 + -0.1021625473908 * 
AcceptedCmp20 + -0.17400073301804 * AcceptedCmp30 + 0.1295257925186 * AcceptedCmp40 + 
-0.17149939617806 * AcceptedCmp50 + -0.11843709761825 * Complain0 ;
2090666   +   H13  = H13  +      0.3357459370893 * AcceptedCmp10
2090667   +          +      -0.142120215863 * AcceptedCmp20  +     0.74265608697316 *
2090668   +        AcceptedCmp30  +     0.62493796040954 * AcceptedCmp40
2090669   +          +     0.60033091776267 * AcceptedCmp50  +    -0.70537393421868 *
2090670   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.3357459370893 * AcceptedCmp10 + -0.142120215863 * 
AcceptedCmp20 + 0.74265608697316 * AcceptedCmp30 + 0.62493796040954 * AcceptedCmp40 + 
0.60033091776267 * AcceptedCmp50 + -0.70537393421868 * Complain0 ;
2090671   +   H14  = H14  +     0.52427760948235 * AcceptedCmp10
2090672   +          +     0.50852083885302 * AcceptedCmp20  +     0.30116257238429 *
2090673   +        AcceptedCmp30  +     0.31213749631365 * AcceptedCmp40
2090674   +          +     0.49344261660916 * AcceptedCmp50  +    -0.18226921500969 *
2090675   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.52427760948235 * AcceptedCmp10 + 0.50852083885302 * 
AcceptedCmp20 + 0.30116257238429 * AcceptedCmp30 + 0.31213749631365 * AcceptedCmp40 + 
0.49344261660916 * AcceptedCmp50 + -0.18226921500969 * Complain0 ;
2090676   +   H11  = H11  +     0.04284090874847 * Education2n_Cycle
2090677   +          +    -0.30425860762413 * EducationBasic  +    -0.44977960705402 *
2090678   +        EducationGraduation  +     -0.0712759822621 * EducationMaster
2090679   +          +     0.05171313818048 * Marital_StatusDivorced
2090680   +          +    -0.79112453157624 * Marital_StatusMarried
2090681   +          +     0.89650138723512 * Marital_StatusSingle
2090682   +          +    -0.22094240412913 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.04284090874847 * Education2n_Cycle + -0.30425860762413 * 
EducationBasic + -0.44977960705402 * EducationGraduation + -0.0712759822621 * EducationMaster 
+ 0.05171313818048 * Marital_StatusDivorced + -0.79112453157624 * Marital_StatusMarried + 
0.89650138723512 * Marital_StatusSingle + -0.22094240412913 * Marital_StatusTogether ;
2090683   +   H12  = H12  +    -0.32431446530898 * Education2n_Cycle
2090684   +          +     0.04651949620543 * EducationBasic  +     0.50250608857106 *
2090685   +        EducationGraduation  +     0.00514401910219 * EducationMaster
2090686   +          +     0.05091092042416 * Marital_StatusDivorced
2090687   +          +     0.86642985712339 * Marital_StatusMarried
2090688   +          +    -0.14148832619997 * Marital_StatusSingle
2090689   +          +     0.54248977280079 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.32431446530898 * Education2n_Cycle + 0.04651949620543 * 
EducationBasic + 0.50250608857106 * EducationGraduation + 0.00514401910219 * EducationMaster + 
0.05091092042416 * Marital_StatusDivorced + 0.86642985712339 * Marital_StatusMarried + 
-0.14148832619997 * Marital_StatusSingle + 0.54248977280079 * Marital_StatusTogether ;
2090690   +   H13  = H13  +      0.0307333873684 * Education2n_Cycle
2090691   +          +     0.54778728297045 * EducationBasic  +    -0.56032296783121 *
2090692   +        EducationGraduation  +     0.26811389967146 * EducationMaster
2090693   +          +    -0.67787102917679 * Marital_StatusDivorced
2090694   +          +     1.38931504762816 * Marital_StatusMarried
2090695   +          +    -0.51164629287485 * Marital_StatusSingle
2090696   +          +     1.18856608313733 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.0307333873684 * Education2n_Cycle + 0.54778728297045 * 
EducationBasic + -0.56032296783121 * EducationGraduation + 0.26811389967146 * EducationMaster 
+ -0.67787102917679 * Marital_StatusDivorced + 1.38931504762816 * Marital_StatusMarried + 
-0.51164629287485 * Marital_StatusSingle + 1.18856608313733 * Marital_StatusTogether ;
2090697   +   H14  = H14  +    -0.07575289231798 * Education2n_Cycle
2090698   +          +     0.20678548929493 * EducationBasic  +     0.15952949579281 *
2090699   +        EducationGraduation  +    -0.08313247341922 * EducationMaster
2090700   +          +     0.12658153975639 * Marital_StatusDivorced
2090701   +          +     0.20111721742791 * Marital_StatusMarried
2090702   +          +     -0.3521524791648 * Marital_StatusSingle
2090703   +          +     0.24908846940254 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.07575289231798 * Education2n_Cycle + 0.20678548929493 * 
EducationBasic + 0.15952949579281 * EducationGraduation + -0.08313247341922 * EducationMaster 
+ 0.12658153975639 * Marital_StatusDivorced + 0.20111721742791 * Marital_StatusMarried + 
-0.3521524791648 * Marital_StatusSingle + 0.24908846940254 * Marital_StatusTogether ;
2090704   +   H11  =      0.8846003542153 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 0.8846003542153 + H11 ;
2090705   +   H12  =      1.7793661863354 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 1.7793661863354 + H12 ;
2090706   +   H13  =    -0.73914187312129 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.73914187312129 + H13 ;
2090707   +   H14  =    -0.28907220457418 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = -0.28907220457418 + H14 ;
2090708   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
2090709   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
2090710   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
2090711   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
2090712   +END;
MPRINT(EM_DIAGRAM):   END;
2090713   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2090714   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
2090715   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
2090716   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
2090717   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
2090718   +END;
MPRINT(EM_DIAGRAM):   END;
2090719   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2090720   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2090721   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2090722   +
2090723   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
2090724   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
2090725   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2090726   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
2090727   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
2090728   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2090729   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
2090730   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2090731   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2090732   +end;
MPRINT(EM_DIAGRAM):   end;
2090733   +else do;
MPRINT(EM_DIAGRAM):   else do;
2090734   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
2090735   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
2090736   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
2090737   +   end;
MPRINT(EM_DIAGRAM):   end;
2090738   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
2090739   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
2090740   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
2090741   +   end;
MPRINT(EM_DIAGRAM):   end;
2090742   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2090743   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2090744   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2090745   +   end;
MPRINT(EM_DIAGRAM):   end;
2090746   +end;
MPRINT(EM_DIAGRAM):   end;
2090747   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2090748   +   P_DepVar1  =    -1.84303414221873 * H11  +     1.56062653143645 * H12
2090749   +          +     -3.0630784922123 * H13  +    -4.55573659919551 * H14 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.84303414221873 * H11 + 1.56062653143645 * H12 + 
-3.0630784922123 * H13 + -4.55573659919551 * H14 ;
2090750   +   P_DepVar1  =    -1.51714888392638 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.51714888392638 + P_DepVar1 ;
2090751   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2090752   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2090753   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2090754   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2090755   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2090756   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2090757   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2090758   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2090759   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2090760   +END;
MPRINT(EM_DIAGRAM):   END;
2090761   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2090762   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2090763   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2090764   +END;
MPRINT(EM_DIAGRAM):   END;
2090765   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2090766   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2090767   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2090768   +END;
MPRINT(EM_DIAGRAM):   END;
2090769   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
2090770   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
2090771   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
2090772   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
2090773   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
2090774   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
2090775   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
2090776   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2090777   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2090778   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2090779   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2090780   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2090781   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2090782   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2090783   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2090784   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2090785   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2090786   +END;
MPRINT(EM_DIAGRAM):   END;
2090787   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2090788   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2090789   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2090790   +drop
2090791   +H11
2090792   +H12
2090793   +H13
2090794   +H14
2090795   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 ;
2090796   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
2090797   +* Renaming variables for Neural33;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural33;
2090798   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2090799   +* Renaming Posterior variables for Neural33;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural33;
2090800   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2090801   +drop Neural33_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural33_P_DepVar1;
2090802   +Neural33_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural33_P_DepVar1 = P_DepVar1;
2090803   +drop Neural33_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural33_P_DepVar0;
2090804   +Neural33_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural33_P_DepVar0 = P_DepVar0;
2090805   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2090806   +* Renaming _WARN_ variable for Neural33;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural33;
2090807   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2090808   +length Neural33_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural33_WARN_ $4;
2090809   +drop Neural33_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural33_WARN_;
2090810   +Neural33_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural33_WARN_ = _WARN_;
2090811   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2090812   +* Ensmbl9: Scoring Code of model 8 of 10;
MPRINT(EM_DIAGRAM):   * Ensmbl9: Scoring Code of model 8 of 10;
2090813   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2090814   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2090815   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
2090816   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
2090817   +* NODE: Neural32;
MPRINT(EM_DIAGRAM):   * NODE: Neural32;
2090818   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2090819   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2090820   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2090821   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2090822   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2090823   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2090824   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2090825   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2090826   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2090827   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2090828   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2090829   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2090830   +LENGTH _WARN_ $4
2090831   +      F_DepVar  $ 12
2090832   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
2090833   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2090834   +
2090835   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2090836   +
2090837   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2090838   +
2090839   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2090840   +
2090841   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2090842   +
2090843   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2090844   +
2090845   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2090846   +
2090847   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2090848   +
2090849   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2090850   +
2090851   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2090852   +
2090853   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2090854   +
2090855   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2090856   +
2090857   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2090858   +
2090859   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2090860   +
2090861   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2090862   +
2090863   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2090864   +
2090865   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2090866   +
2090867   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2090868   +
2090869   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2090870   +
2090871   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2090872   +
2090873   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2090874   +
2090875   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2090876   +
2090877   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2090878   +
2090879   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2090880   +
2090881   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2090882   +
2090883   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2090884   +
2090885   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2090886   +
2090887   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2090888   +
2090889   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2090890   +
2090891   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
2090892   +
2090893   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
2090894   +
2090895   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
2090896   +
2090897   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2090898   +
2090899   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2090900   +
2090901   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2090902   +
2090903   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2090904   +
2090905   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
2090906   +
2090907   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2090908   +
2090909   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
2090910   +
2090911   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2090912   +
2090913   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2090914   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2090915   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2090916   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2090917   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2090918   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2090919   +end;
MPRINT(EM_DIAGRAM):   end;
2090920   +else do;
MPRINT(EM_DIAGRAM):   else do;
2090921   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2090922   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2090923   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2090924   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2090925   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2090926   +   end;
MPRINT(EM_DIAGRAM):   end;
2090927   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2090928   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2090929   +   end;
MPRINT(EM_DIAGRAM):   end;
2090930   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2090931   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2090932   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2090933   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2090934   +   end;
MPRINT(EM_DIAGRAM):   end;
2090935   +end;
MPRINT(EM_DIAGRAM):   end;
2090936   +
2090937   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2090938   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2090939   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2090940   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2090941   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
The SAS System

2090942   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2090943   +end;
MPRINT(EM_DIAGRAM):   end;
2090944   +else do;
MPRINT(EM_DIAGRAM):   else do;
2090945   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2090946   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2090947   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2090948   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2090949   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2090950   +   end;
MPRINT(EM_DIAGRAM):   end;
2090951   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2090952   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2090953   +   end;
MPRINT(EM_DIAGRAM):   end;
2090954   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2090955   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2090956   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2090957   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2090958   +   end;
MPRINT(EM_DIAGRAM):   end;
2090959   +end;
MPRINT(EM_DIAGRAM):   end;
2090960   +
2090961   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2090962   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2090963   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2090964   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2090965   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2090966   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2090967   +end;
MPRINT(EM_DIAGRAM):   end;
2090968   +else do;
MPRINT(EM_DIAGRAM):   else do;
2090969   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2090970   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2090971   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2090972   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2090973   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2090974   +   end;
MPRINT(EM_DIAGRAM):   end;
2090975   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2090976   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2090977   +   end;
MPRINT(EM_DIAGRAM):   end;
2090978   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2090979   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2090980   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2090981   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2090982   +   end;
MPRINT(EM_DIAGRAM):   end;
2090983   +end;
MPRINT(EM_DIAGRAM):   end;
2090984   +
2090985   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2090986   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2090987   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2090988   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2090989   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2090990   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2090991   +end;
MPRINT(EM_DIAGRAM):   end;
2090992   +else do;
MPRINT(EM_DIAGRAM):   else do;
2090993   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2090994   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2090995   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2090996   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2090997   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2090998   +   end;
MPRINT(EM_DIAGRAM):   end;
2090999   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2091000   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2091001   +   end;
MPRINT(EM_DIAGRAM):   end;
2091002   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2091003   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2091004   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2091005   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2091006   +   end;
MPRINT(EM_DIAGRAM):   end;
2091007   +end;
MPRINT(EM_DIAGRAM):   end;
2091008   +
2091009   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2091010   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2091011   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2091012   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2091013   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2091014   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2091015   +end;
MPRINT(EM_DIAGRAM):   end;
2091016   +else do;
MPRINT(EM_DIAGRAM):   else do;
2091017   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2091018   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2091019   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2091020   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2091021   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2091022   +   end;
MPRINT(EM_DIAGRAM):   end;
2091023   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2091024   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2091025   +   end;
MPRINT(EM_DIAGRAM):   end;
2091026   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2091027   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2091028   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2091029   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2091030   +   end;
MPRINT(EM_DIAGRAM):   end;
2091031   +end;
MPRINT(EM_DIAGRAM):   end;
2091032   +
2091033   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2091034   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2091035   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2091036   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2091037   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2091038   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2091039   +end;
MPRINT(EM_DIAGRAM):   end;
2091040   +else do;
MPRINT(EM_DIAGRAM):   else do;
2091041   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2091042   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2091043   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2091044   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2091045   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2091046   +   end;
MPRINT(EM_DIAGRAM):   end;
2091047   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2091048   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2091049   +   end;
MPRINT(EM_DIAGRAM):   end;
2091050   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2091051   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2091052   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2091053   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2091054   +   end;
MPRINT(EM_DIAGRAM):   end;
2091055   +end;
MPRINT(EM_DIAGRAM):   end;
2091056   +
2091057   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2091058   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
2091059   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2091060   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2091061   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2091062   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2091063   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2091064   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2091065   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2091066   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2091067   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2091068   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2091069   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2091070   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2091071   +end;
MPRINT(EM_DIAGRAM):   end;
2091072   +else do;
MPRINT(EM_DIAGRAM):   else do;
2091073   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2091074   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2091075   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2091076   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2091077   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2091078   +   end;
MPRINT(EM_DIAGRAM):   end;
2091079   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2091080   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2091081   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2091082   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2091083   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2091084   +   end;
MPRINT(EM_DIAGRAM):   end;
2091085   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2091086   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2091087   +   end;
MPRINT(EM_DIAGRAM):   end;
2091088   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2091089   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2091090   +   end;
MPRINT(EM_DIAGRAM):   end;
2091091   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2091092   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2091093   +   end;
MPRINT(EM_DIAGRAM):   end;
2091094   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2091095   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2091096   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2091097   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2091098   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2091099   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2091100   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2091101   +   end;
MPRINT(EM_DIAGRAM):   end;
2091102   +end;
MPRINT(EM_DIAGRAM):   end;
2091103   +
2091104   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2091105   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2091106   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
2091107   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2091108   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2091109   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2091110   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2091111   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2091112   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2091113   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2091114   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2091115   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2091116   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2091117   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2091118   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2091119   +end;
MPRINT(EM_DIAGRAM):   end;
2091120   +else do;
MPRINT(EM_DIAGRAM):   else do;
2091121   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2091122   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2091123   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2091124   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2091125   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2091126   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2091127   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2091128   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2091129   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2091130   +         end;
MPRINT(EM_DIAGRAM):   end;
2091131   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2091132   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2091133   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2091134   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2091135   +            end;
MPRINT(EM_DIAGRAM):   end;
2091136   +         end;
MPRINT(EM_DIAGRAM):   end;
2091137   +      end;
MPRINT(EM_DIAGRAM):   end;
2091138   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2091139   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2091140   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2091141   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2091142   +         end;
MPRINT(EM_DIAGRAM):   end;
2091143   +      end;
MPRINT(EM_DIAGRAM):   end;
2091144   +   end;
MPRINT(EM_DIAGRAM):   end;
2091145   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2091146   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2091147   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2091148   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2091149   +      end;
MPRINT(EM_DIAGRAM):   end;
2091150   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2091151   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2091152   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2091153   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2091154   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2091155   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2091156   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2091157   +         end;
MPRINT(EM_DIAGRAM):   end;
2091158   +      end;
MPRINT(EM_DIAGRAM):   end;
2091159   +   end;
MPRINT(EM_DIAGRAM):   end;
2091160   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2091161   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2091162   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2091163   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2091164   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2091165   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2091166   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2091167   +   end;
MPRINT(EM_DIAGRAM):   end;
2091168   +end;
MPRINT(EM_DIAGRAM):   end;
2091169   +
2091170   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2091171   +*** Checking missing input Interval
2091172   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2091173   +
2091174   +IF NMISS(
2091175   +   Income ,
2091176   +   Kidhome ,
2091177   +   MntFishProducts ,
2091178   +   MntFruits ,
2091179   +   MntGoldProds ,
2091180   +   MntMeatProducts ,
2091181   +   MntSweetProducts ,
2091182   +   MntWines ,
2091183   +   NumCatalogPurchases ,
2091184   +   NumDealsPurchases ,
2091185   +   NumStorePurchases ,
2091186   +   NumWebPurchases ,
2091187   +   NumWebVisitsMonth ,
2091188   +   Recency ,
2091189   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Income , Kidhome , MntFishProducts , MntFruits , MntGoldProds 
, MntMeatProducts , MntSweetProducts , MntWines , NumCatalogPurchases , NumDealsPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , Recency , Teenhome ) THEN DO;
2091190   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2091191   +
2091192   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2091193   +END;
MPRINT(EM_DIAGRAM):   END;
2091194   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2091195   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
2091196   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2091197   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2091198   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2091199   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2091200   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2091201   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2091202   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2091203   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2091204   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2091205   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2091206   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2091207   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2091208   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2091209   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2091210   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2091211   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2091212   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2091213   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2091214   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2091215   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2091216   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2091217   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2091218   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2091219   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2091220   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2091221   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2091222   +END;
MPRINT(EM_DIAGRAM):   END;
2091223   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2091224   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2091225   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2091226   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2091227   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2091228   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2091229   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2091230   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2091231   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2091232   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2091233   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2091234   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2091235   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2091236   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
2091237   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2091238   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2091239   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2091240   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2091241   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2091242   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2091243   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2091244   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2091245   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2091246   +   ELSE S_NumCatalogPurchases
2091247   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2091248   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2091249   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2091250   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2091251   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2091252   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2091253   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2091254   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2091255   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2091256   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2091257   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2091258   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2091259   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2091260   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2091261   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2091262   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2091263   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2091264   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2091265   +END;
MPRINT(EM_DIAGRAM):   END;
2091266   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2091267   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
2091268   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2091269   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2091270   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
2091271   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2091272   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2091273   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
2091274   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2091275   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2091276   +   H11  =     1.40261108800308 * S_Income  +     -0.8062097507842 * S_Kidhome
2091277   +          +    -0.12974862644982 * S_MntFishProducts
2091278   +          +     0.08065642800368 * S_MntFruits  +    -0.12102130003972 *
2091279   +        S_MntGoldProds  +     0.19226249622126 * S_MntMeatProducts
2091280   +          +    -0.12290326901613 * S_MntSweetProducts
2091281   +          +     0.07790241176978 * S_MntWines  +     0.36123042724896 *
2091282   +        S_NumCatalogPurchases  +    -0.01034406765754 * S_NumDealsPurchases
2091283   +          +     0.09738032540137 * S_NumStorePurchases
2091284   +          +     0.44459515215205 * S_NumWebPurchases
2091285   +          +      0.8471075994578 * S_NumWebVisitsMonth
2091286   +          +    -1.10667985160899 * S_Recency  +    -0.88509832868515 *
2091287   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 1.40261108800308 * S_Income + -0.8062097507842 * S_Kidhome + 
-0.12974862644982 * S_MntFishProducts + 0.08065642800368 * S_MntFruits + -0.12102130003972 * 
S_MntGoldProds + 0.19226249622126 * S_MntMeatProducts + -0.12290326901613 * S_MntSweetProducts 
+ 0.07790241176978 * S_MntWines + 0.36123042724896 * S_NumCatalogPurchases + -0.01034406765754 
* S_NumDealsPurchases + 0.09738032540137 * S_NumStorePurchases + 0.44459515215205 * 
S_NumWebPurchases + 0.8471075994578 * S_NumWebVisitsMonth + -1.10667985160899 * S_Recency + 
-0.88509832868515 * S_Teenhome ;
2091288   +   H12  =     0.51266936686642 * S_Income  +     0.26909433357851 * S_Kidhome
2091289   +          +     0.02406077596811 * S_MntFishProducts
2091290   +          +    -0.57443793453522 * S_MntFruits  +     0.36824731232149 *
2091291   +        S_MntGoldProds  +     0.40177289143061 * S_MntMeatProducts
2091292   +          +     -0.1147507059349 * S_MntSweetProducts
2091293   +          +    -0.66379351187459 * S_MntWines  +     1.33407347415468 *
2091294   +        S_NumCatalogPurchases  +     1.00633891197299 * S_NumDealsPurchases
2091295   +          +    -0.23920969262322 * S_NumStorePurchases
2091296   +          +     -0.6008837862932 * S_NumWebPurchases
2091297   +          +     0.26759743722885 * S_NumWebVisitsMonth
2091298   +          +    -0.42755419464125 * S_Recency  +    -0.14471776361394 *
2091299   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = 0.51266936686642 * S_Income + 0.26909433357851 * S_Kidhome + 
0.02406077596811 * S_MntFishProducts + -0.57443793453522 * S_MntFruits + 0.36824731232149 * 
S_MntGoldProds + 0.40177289143061 * S_MntMeatProducts + -0.1147507059349 * S_MntSweetProducts 
+ -0.66379351187459 * S_MntWines + 1.33407347415468 * S_NumCatalogPurchases + 1.00633891197299 
* S_NumDealsPurchases + -0.23920969262322 * S_NumStorePurchases + -0.6008837862932 * 
S_NumWebPurchases + 0.26759743722885 * S_NumWebVisitsMonth + -0.42755419464125 * S_Recency + 
-0.14471776361394 * S_Teenhome ;
2091300   +   H13  =    -0.19807308698832 * S_Income  +     0.25934675474849 * S_Kidhome
2091301   +          +     0.04398331533724 * S_MntFishProducts
2091302   +          +    -0.00090357598988 * S_MntFruits  +     0.05139545341773 *
2091303   +        S_MntGoldProds  +    -0.74617114336019 * S_MntMeatProducts
2091304   +          +     0.00552488718744 * S_MntSweetProducts
2091305   +          +     0.47194407197012 * S_MntWines  +    -0.35149551848487 *
2091306   +        S_NumCatalogPurchases  +    -0.30232522133093 * S_NumDealsPurchases
2091307   +          +     0.60058189155105 * S_NumStorePurchases
2091308   +          +     0.51423374855856 * S_NumWebPurchases
2091309   +          +     -0.9075304423321 * S_NumWebVisitsMonth
2091310   +          +     0.83597739226791 * S_Recency  +     0.15783202762709 *
2091311   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = -0.19807308698832 * S_Income + 0.25934675474849 * S_Kidhome + 
0.04398331533724 * S_MntFishProducts + -0.00090357598988 * S_MntFruits + 0.05139545341773 * 
S_MntGoldProds + -0.74617114336019 * S_MntMeatProducts + 0.00552488718744 * S_MntSweetProducts 
+ 0.47194407197012 * S_MntWines + -0.35149551848487 * S_NumCatalogPurchases + 
-0.30232522133093 * S_NumDealsPurchases + 0.60058189155105 * S_NumStorePurchases + 
0.51423374855856 * S_NumWebPurchases + -0.9075304423321 * S_NumWebVisitsMonth + 
0.83597739226791 * S_Recency + 0.15783202762709 * S_Teenhome ;
2091312   +   H11  = H11  +    -0.26274045665457 * AcceptedCmp10
2091313   +          +    -0.86105702939371 * AcceptedCmp20  +    -0.50476270558977 *
2091314   +        AcceptedCmp30  +    -0.84284126473343 * AcceptedCmp40
2091315   +          +     0.19764907691314 * AcceptedCmp50  +    -0.29305577412263 *
2091316   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.26274045665457 * AcceptedCmp10 + -0.86105702939371 * 
AcceptedCmp20 + -0.50476270558977 * AcceptedCmp30 + -0.84284126473343 * AcceptedCmp40 + 
0.19764907691314 * AcceptedCmp50 + -0.29305577412263 * Complain0 ;
2091317   +   H12  = H12  +    -0.27394139847883 * AcceptedCmp10
2091318   +          +    -0.14688750266104 * AcceptedCmp20  +    -0.27982299242327 *
2091319   +        AcceptedCmp30  +    -0.10465140408787 * AcceptedCmp40
2091320   +          +    -0.81681330244218 * AcceptedCmp50  +    -0.28152730217644 *
2091321   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.27394139847883 * AcceptedCmp10 + -0.14688750266104 * 
AcceptedCmp20 + -0.27982299242327 * AcceptedCmp30 + -0.10465140408787 * AcceptedCmp40 + 
-0.81681330244218 * AcceptedCmp50 + -0.28152730217644 * Complain0 ;
2091322   +   H13  = H13  +     0.42310780831005 * AcceptedCmp10
2091323   +          +     0.41337614261155 * AcceptedCmp20  +     0.41436520641821 *
2091324   +        AcceptedCmp30  +     0.08914989208239 * AcceptedCmp40
2091325   +          +     0.54013759697695 * AcceptedCmp50  +    -0.19478210268955 *
2091326   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.42310780831005 * AcceptedCmp10 + 0.41337614261155 * 
AcceptedCmp20 + 0.41436520641821 * AcceptedCmp30 + 0.08914989208239 * AcceptedCmp40 + 
0.54013759697695 * AcceptedCmp50 + -0.19478210268955 * Complain0 ;
2091327   +   H11  = H11  +     0.40331200702699 * Education2n_Cycle
2091328   +          +     0.17202421641945 * EducationBasic  +    -0.29654161092174 *
2091329   +        EducationGraduation  +     -0.4835104183635 * EducationMaster
2091330   +          +     0.52129580188513 * Marital_StatusDivorced
2091331   +          +     -1.5224490339553 * Marital_StatusMarried
2091332   +          +     1.05062906057771 * Marital_StatusSingle
2091333   +          +    -1.16420887937635 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.40331200702699 * Education2n_Cycle + 0.17202421641945 * 
EducationBasic + -0.29654161092174 * EducationGraduation + -0.4835104183635 * EducationMaster 
+ 0.52129580188513 * Marital_StatusDivorced + -1.5224490339553 * Marital_StatusMarried + 
1.05062906057771 * Marital_StatusSingle + -1.16420887937635 * Marital_StatusTogether ;
2091334   +   H12  = H12  +     -0.3488928858263 * Education2n_Cycle
2091335   +          +     0.38279680594423 * EducationBasic  +     0.20376044836519 *
2091336   +        EducationGraduation  +     0.20697694670185 * EducationMaster
2091337   +          +    -0.14428158063317 * Marital_StatusDivorced
2091338   +          +     0.22396926143356 * Marital_StatusMarried
2091339   +          +    -0.12980854818876 * Marital_StatusSingle
2091340   +          +     0.32607015627906 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.3488928858263 * Education2n_Cycle + 0.38279680594423 * 
EducationBasic + 0.20376044836519 * EducationGraduation + 0.20697694670185 * EducationMaster + 
-0.14428158063317 * Marital_StatusDivorced + 0.22396926143356 * Marital_StatusMarried + 
-0.12980854818876 * Marital_StatusSingle + 0.32607015627906 * Marital_StatusTogether ;
2091341   +   H13  = H13  +    -0.18351418824199 * Education2n_Cycle
2091342   +          +     0.53417952447263 * EducationBasic  +    -0.14333929289628 *
2091343   +        EducationGraduation  +     0.04513004774082 * EducationMaster
2091344   +          +    -0.25615797303064 * Marital_StatusDivorced
2091345   +          +     0.18825506199046 * Marital_StatusMarried
2091346   +          +    -0.24607556819871 * Marital_StatusSingle
2091347   +          +     0.29531673844201 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.18351418824199 * Education2n_Cycle + 0.53417952447263 * 
EducationBasic + -0.14333929289628 * EducationGraduation + 0.04513004774082 * EducationMaster 
+ -0.25615797303064 * Marital_StatusDivorced + 0.18825506199046 * Marital_StatusMarried + 
-0.24607556819871 * Marital_StatusSingle + 0.29531673844201 * Marital_StatusTogether ;
2091348   +   H11  =    -1.29289362679377 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -1.29289362679377 + H11 ;
2091349   +   H12  =     0.88724419151235 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.88724419151235 + H12 ;
2091350   +   H13  =    -0.51194544699467 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.51194544699467 + H13 ;
2091351   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
2091352   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
2091353   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
2091354   +END;
MPRINT(EM_DIAGRAM):   END;
2091355   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2091356   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
2091357   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
2091358   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
2091359   +END;
MPRINT(EM_DIAGRAM):   END;
2091360   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2091361   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2091362   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2091363   +
2091364   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
2091365   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
2091366   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2091367   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
2091368   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
2091369   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2091370   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
2091371   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2091372   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2091373   +end;
MPRINT(EM_DIAGRAM):   end;
2091374   +else do;
MPRINT(EM_DIAGRAM):   else do;
2091375   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
2091376   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
2091377   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
2091378   +   end;
MPRINT(EM_DIAGRAM):   end;
2091379   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
2091380   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
2091381   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
2091382   +   end;
MPRINT(EM_DIAGRAM):   end;
2091383   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2091384   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2091385   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2091386   +   end;
MPRINT(EM_DIAGRAM):   end;
2091387   +end;
MPRINT(EM_DIAGRAM):   end;
2091388   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2091389   +   P_DepVar1  =     4.44251020865882 * H11  +     2.67139161773156 * H12
2091390   +          +    -4.73549395111184 * H13 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 4.44251020865882 * H11 + 2.67139161773156 * H12 + 
-4.73549395111184 * H13 ;
2091391   +   P_DepVar1  =     0.45492690116644 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.45492690116644 + P_DepVar1 ;
2091392   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2091393   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2091394   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2091395   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2091396   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2091397   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2091398   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2091399   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2091400   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2091401   +END;
MPRINT(EM_DIAGRAM):   END;
2091402   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2091403   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2091404   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2091405   +END;
MPRINT(EM_DIAGRAM):   END;
2091406   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2091407   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2091408   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2091409   +END;
MPRINT(EM_DIAGRAM):   END;
2091410   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
2091411   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
2091412   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
2091413   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
2091414   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
2091415   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
2091416   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
2091417   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2091418   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2091419   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2091420   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2091421   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2091422   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2091423   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2091424   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2091425   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2091426   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2091427   +END;
MPRINT(EM_DIAGRAM):   END;
2091428   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2091429   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2091430   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2091431   +drop
2091432   +H11
2091433   +H12
2091434   +H13
2091435   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 ;
2091436   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
2091437   +* Renaming variables for Neural32;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural32;
2091438   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2091439   +* Renaming Posterior variables for Neural32;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural32;
2091440   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2091441   +drop Neural32_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural32_P_DepVar1;
2091442   +Neural32_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural32_P_DepVar1 = P_DepVar1;
2091443   +drop Neural32_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural32_P_DepVar0;
2091444   +Neural32_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural32_P_DepVar0 = P_DepVar0;
2091445   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2091446   +* Renaming _WARN_ variable for Neural32;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural32;
2091447   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2091448   +length Neural32_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural32_WARN_ $4;
2091449   +drop Neural32_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural32_WARN_;
2091450   +Neural32_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural32_WARN_ = _WARN_;
2091451   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2091452   +* Ensmbl9: Scoring Code of model 9 of 10;
MPRINT(EM_DIAGRAM):   * Ensmbl9: Scoring Code of model 9 of 10;
2091453   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2091454   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2091455   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
2091456   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
2091457   +* NODE: Neural31;
MPRINT(EM_DIAGRAM):   * NODE: Neural31;
2091458   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2091459   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2091460   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2091461   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2091462   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2091463   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2091464   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2091465   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2091466   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2091467   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2091468   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2091469   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2091470   +LENGTH _WARN_ $4
2091471   +      F_DepVar  $ 12
2091472   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
2091473   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2091474   +
2091475   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2091476   +
2091477   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2091478   +
2091479   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2091480   +
2091481   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2091482   +
2091483   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2091484   +
2091485   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2091486   +
2091487   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2091488   +
2091489   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2091490   +
2091491   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2091492   +
2091493   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2091494   +
2091495   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2091496   +
2091497   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2091498   +
2091499   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2091500   +
2091501   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2091502   +
2091503   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2091504   +
2091505   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2091506   +
2091507   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2091508   +
2091509   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2091510   +
2091511   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2091512   +
2091513   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2091514   +
2091515   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2091516   +
2091517   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2091518   +
2091519   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2091520   +
2091521   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2091522   +
2091523   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2091524   +
2091525   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2091526   +
2091527   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2091528   +
2091529   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2091530   +
2091531   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
2091532   +
2091533   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
2091534   +
2091535   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2091536   +
2091537   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2091538   +
2091539   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2091540   +
2091541   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2091542   +
2091543   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
2091544   +
2091545   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2091546   +
2091547   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
2091548   +
2091549   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2091550   +
2091551   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2091552   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2091553   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2091554   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2091555   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2091556   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2091557   +end;
MPRINT(EM_DIAGRAM):   end;
2091558   +else do;
MPRINT(EM_DIAGRAM):   else do;
2091559   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2091560   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2091561   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2091562   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2091563   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2091564   +   end;
MPRINT(EM_DIAGRAM):   end;
2091565   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2091566   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2091567   +   end;
MPRINT(EM_DIAGRAM):   end;
2091568   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2091569   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2091570   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2091571   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2091572   +   end;
MPRINT(EM_DIAGRAM):   end;
2091573   +end;
MPRINT(EM_DIAGRAM):   end;
2091574   +
2091575   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2091576   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2091577   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2091578   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2091579   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2091580   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2091581   +end;
MPRINT(EM_DIAGRAM):   end;
2091582   +else do;
MPRINT(EM_DIAGRAM):   else do;
2091583   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2091584   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2091585   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2091586   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2091587   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2091588   +   end;
MPRINT(EM_DIAGRAM):   end;
2091589   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2091590   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2091591   +   end;
MPRINT(EM_DIAGRAM):   end;
2091592   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2091593   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2091594   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2091595   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2091596   +   end;
MPRINT(EM_DIAGRAM):   end;
2091597   +end;
MPRINT(EM_DIAGRAM):   end;
2091598   +
2091599   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2091600   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2091601   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2091602   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2091603   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2091604   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2091605   +end;
MPRINT(EM_DIAGRAM):   end;
2091606   +else do;
MPRINT(EM_DIAGRAM):   else do;
2091607   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2091608   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2091609   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2091610   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2091611   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2091612   +   end;
MPRINT(EM_DIAGRAM):   end;
2091613   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2091614   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2091615   +   end;
MPRINT(EM_DIAGRAM):   end;
2091616   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2091617   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2091618   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2091619   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2091620   +   end;
MPRINT(EM_DIAGRAM):   end;
2091621   +end;
MPRINT(EM_DIAGRAM):   end;
2091622   +
2091623   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2091624   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2091625   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2091626   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2091627   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2091628   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2091629   +end;
MPRINT(EM_DIAGRAM):   end;
2091630   +else do;
MPRINT(EM_DIAGRAM):   else do;
2091631   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2091632   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2091633   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2091634   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2091635   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2091636   +   end;
MPRINT(EM_DIAGRAM):   end;
2091637   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2091638   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2091639   +   end;
MPRINT(EM_DIAGRAM):   end;
2091640   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2091641   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2091642   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2091643   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2091644   +   end;
MPRINT(EM_DIAGRAM):   end;
2091645   +end;
MPRINT(EM_DIAGRAM):   end;
2091646   +
2091647   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2091648   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2091649   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2091650   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2091651   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2091652   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2091653   +end;
MPRINT(EM_DIAGRAM):   end;
2091654   +else do;
MPRINT(EM_DIAGRAM):   else do;
2091655   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2091656   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2091657   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2091658   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2091659   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2091660   +   end;
MPRINT(EM_DIAGRAM):   end;
2091661   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2091662   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2091663   +   end;
MPRINT(EM_DIAGRAM):   end;
2091664   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2091665   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2091666   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2091667   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2091668   +   end;
MPRINT(EM_DIAGRAM):   end;
2091669   +end;
MPRINT(EM_DIAGRAM):   end;
2091670   +
2091671   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2091672   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2091673   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2091674   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2091675   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2091676   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2091677   +end;
MPRINT(EM_DIAGRAM):   end;
2091678   +else do;
MPRINT(EM_DIAGRAM):   else do;
2091679   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2091680   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2091681   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2091682   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2091683   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2091684   +   end;
MPRINT(EM_DIAGRAM):   end;
2091685   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2091686   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2091687   +   end;
MPRINT(EM_DIAGRAM):   end;
2091688   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2091689   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2091690   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2091691   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2091692   +   end;
MPRINT(EM_DIAGRAM):   end;
2091693   +end;
MPRINT(EM_DIAGRAM):   end;
2091694   +
2091695   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2091696   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
2091697   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2091698   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2091699   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2091700   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2091701   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2091702   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2091703   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2091704   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2091705   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2091706   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2091707   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2091708   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2091709   +end;
MPRINT(EM_DIAGRAM):   end;
2091710   +else do;
MPRINT(EM_DIAGRAM):   else do;
2091711   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2091712   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2091713   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2091714   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2091715   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2091716   +   end;
MPRINT(EM_DIAGRAM):   end;
2091717   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2091718   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2091719   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2091720   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2091721   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2091722   +   end;
MPRINT(EM_DIAGRAM):   end;
2091723   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2091724   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2091725   +   end;
MPRINT(EM_DIAGRAM):   end;
2091726   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2091727   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2091728   +   end;
MPRINT(EM_DIAGRAM):   end;
2091729   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2091730   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2091731   +   end;
MPRINT(EM_DIAGRAM):   end;
2091732   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2091733   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2091734   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2091735   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2091736   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2091737   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2091738   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2091739   +   end;
MPRINT(EM_DIAGRAM):   end;
2091740   +end;
MPRINT(EM_DIAGRAM):   end;
2091741   +
2091742   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2091743   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2091744   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
2091745   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2091746   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2091747   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2091748   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2091749   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2091750   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2091751   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2091752   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2091753   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2091754   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2091755   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2091756   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2091757   +end;
MPRINT(EM_DIAGRAM):   end;
2091758   +else do;
MPRINT(EM_DIAGRAM):   else do;
2091759   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2091760   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2091761   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2091762   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2091763   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2091764   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2091765   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2091766   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2091767   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2091768   +         end;
MPRINT(EM_DIAGRAM):   end;
2091769   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2091770   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2091771   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2091772   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2091773   +            end;
MPRINT(EM_DIAGRAM):   end;
2091774   +         end;
MPRINT(EM_DIAGRAM):   end;
2091775   +      end;
MPRINT(EM_DIAGRAM):   end;
2091776   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2091777   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2091778   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2091779   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2091780   +         end;
MPRINT(EM_DIAGRAM):   end;
2091781   +      end;
MPRINT(EM_DIAGRAM):   end;
2091782   +   end;
MPRINT(EM_DIAGRAM):   end;
2091783   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2091784   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2091785   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2091786   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2091787   +      end;
MPRINT(EM_DIAGRAM):   end;
2091788   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2091789   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2091790   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2091791   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2091792   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2091793   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2091794   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2091795   +         end;
MPRINT(EM_DIAGRAM):   end;
2091796   +      end;
MPRINT(EM_DIAGRAM):   end;
2091797   +   end;
MPRINT(EM_DIAGRAM):   end;
2091798   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2091799   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2091800   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2091801   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2091802   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2091803   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2091804   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2091805   +   end;
MPRINT(EM_DIAGRAM):   end;
2091806   +end;
MPRINT(EM_DIAGRAM):   end;
2091807   +
2091808   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2091809   +*** Checking missing input Interval
2091810   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2091811   +
2091812   +IF NMISS(
2091813   +   Income ,
2091814   +   Kidhome ,
2091815   +   MntFishProducts ,
2091816   +   MntFruits ,
2091817   +   MntGoldProds ,
2091818   +   MntMeatProducts ,
2091819   +   MntSweetProducts ,
2091820   +   MntWines ,
2091821   +   NumCatalogPurchases ,
2091822   +   NumDealsPurchases ,
2091823   +   NumStorePurchases ,
2091824   +   NumWebPurchases ,
2091825   +   NumWebVisitsMonth ,
2091826   +   Recency ,
2091827   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Income , Kidhome , MntFishProducts , MntFruits , MntGoldProds 
, MntMeatProducts , MntSweetProducts , MntWines , NumCatalogPurchases , NumDealsPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , Recency , Teenhome ) THEN DO;
2091828   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2091829   +
2091830   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2091831   +END;
MPRINT(EM_DIAGRAM):   END;
2091832   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2091833   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
2091834   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2091835   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2091836   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2091837   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2091838   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2091839   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2091840   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2091841   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2091842   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2091843   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2091844   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2091845   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2091846   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2091847   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2091848   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2091849   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2091850   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2091851   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2091852   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2091853   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2091854   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2091855   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2091856   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2091857   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2091858   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2091859   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2091860   +END;
MPRINT(EM_DIAGRAM):   END;
2091861   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2091862   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2091863   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2091864   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2091865   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2091866   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2091867   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2091868   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2091869   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2091870   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2091871   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2091872   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2091873   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2091874   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
2091875   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2091876   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2091877   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2091878   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2091879   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2091880   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2091881   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2091882   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2091883   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2091884   +   ELSE S_NumCatalogPurchases
2091885   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2091886   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2091887   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2091888   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2091889   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2091890   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2091891   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2091892   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2091893   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2091894   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2091895   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2091896   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2091897   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2091898   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2091899   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2091900   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2091901   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2091902   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2091903   +END;
MPRINT(EM_DIAGRAM):   END;
2091904   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2091905   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
2091906   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2091907   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2091908   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
2091909   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2091910   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2091911   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
2091912   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2091913   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2091914   +   H11  =    -1.33502235588914 * S_Income  +     0.86914778071024 * S_Kidhome
2091915   +          +     0.06177226616611 * S_MntFishProducts
2091916   +          +     0.22465531888584 * S_MntFruits  +    -0.01216018017424 *
2091917   +        S_MntGoldProds  +    -0.10435601171346 * S_MntMeatProducts
2091918   +          +     0.19245635559754 * S_MntSweetProducts
2091919   +          +    -0.06473329764962 * S_MntWines  +    -0.40260570275107 *
2091920   +        S_NumCatalogPurchases  +    -0.01043435397255 * S_NumDealsPurchases
2091921   +          +    -0.35392759932805 * S_NumStorePurchases
2091922   +          +     -0.2443007642616 * S_NumWebPurchases
2091923   +          +    -0.72667572173837 * S_NumWebVisitsMonth
2091924   +          +     0.97336679863544 * S_Recency  +     0.72544205905496 *
2091925   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = -1.33502235588914 * S_Income + 0.86914778071024 * S_Kidhome + 
0.06177226616611 * S_MntFishProducts + 0.22465531888584 * S_MntFruits + -0.01216018017424 * 
S_MntGoldProds + -0.10435601171346 * S_MntMeatProducts + 0.19245635559754 * S_MntSweetProducts 
+ -0.06473329764962 * S_MntWines + -0.40260570275107 * S_NumCatalogPurchases + 
-0.01043435397255 * S_NumDealsPurchases + -0.35392759932805 * S_NumStorePurchases + 
-0.2443007642616 * S_NumWebPurchases + -0.72667572173837 * S_NumWebVisitsMonth + 
0.97336679863544 * S_Recency + 0.72544205905496 * S_Teenhome ;
2091926   +   H12  =    -0.09105644521483 * S_Income  +     0.01920168996111 * S_Kidhome
2091927   +          +     0.00012212205827 * S_MntFishProducts
2091928   +          +     0.00032664246198 * S_MntFruits  +    -0.02161363659377 *
2091929   +        S_MntGoldProds  +    -0.40917729724893 * S_MntMeatProducts
2091930   +          +     0.01459978689352 * S_MntSweetProducts
2091931   +          +     0.28732983017398 * S_MntWines  +    -0.26033282919423 *
2091932   +        S_NumCatalogPurchases  +      -0.306688498482 * S_NumDealsPurchases
2091933   +          +      0.4054643699817 * S_NumStorePurchases
2091934   +          +     0.27747327375374 * S_NumWebPurchases
2091935   +          +    -0.31325270852641 * S_NumWebVisitsMonth
2091936   +          +      0.3707065492652 * S_Recency  +     0.05681262835219 *
2091937   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -0.09105644521483 * S_Income + 0.01920168996111 * S_Kidhome + 
0.00012212205827 * S_MntFishProducts + 0.00032664246198 * S_MntFruits + -0.02161363659377 * 
S_MntGoldProds + -0.40917729724893 * S_MntMeatProducts + 0.01459978689352 * S_MntSweetProducts 
+ 0.28732983017398 * S_MntWines + -0.26033282919423 * S_NumCatalogPurchases + -0.306688498482 
* S_NumDealsPurchases + 0.4054643699817 * S_NumStorePurchases + 0.27747327375374 * 
S_NumWebPurchases + -0.31325270852641 * S_NumWebVisitsMonth + 0.3707065492652 * S_Recency + 
0.05681262835219 * S_Teenhome ;
2091938   +   H11  = H11  +     0.23904403737743 * AcceptedCmp10
2091939   +          +     0.12365860406863 * AcceptedCmp20  +     0.28547657706908 *
2091940   +        AcceptedCmp30  +     0.37587337003909 * AcceptedCmp40
2091941   +          +    -0.04113029526683 * AcceptedCmp50  +      0.2596440604013 *
2091942   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.23904403737743 * AcceptedCmp10 + 0.12365860406863 * 
AcceptedCmp20 + 0.28547657706908 * AcceptedCmp30 + 0.37587337003909 * AcceptedCmp40 + 
-0.04113029526683 * AcceptedCmp50 + 0.2596440604013 * Complain0 ;
2091943   +   H12  = H12  +     0.25336773034662 * AcceptedCmp10
2091944   +          +     0.39499004620022 * AcceptedCmp20  +     0.19852127214148 *
2091945   +        AcceptedCmp30  +     0.19215250383325 * AcceptedCmp40
2091946   +          +     0.27213364707939 * AcceptedCmp50  +    -0.00774901485124 *
2091947   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.25336773034662 * AcceptedCmp10 + 0.39499004620022 * 
AcceptedCmp20 + 0.19852127214148 * AcceptedCmp30 + 0.19215250383325 * AcceptedCmp40 + 
0.27213364707939 * AcceptedCmp50 + -0.00774901485124 * Complain0 ;
2091948   +   H11  = H11  +    -0.05263155952227 * Education2n_Cycle
2091949   +          +    -1.40124591386453 * EducationBasic  +     0.43501491332678 *
2091950   +        EducationGraduation  +     0.77305262508081 * EducationMaster
2091951   +          +    -0.43667846017683 * Marital_StatusDivorced
2091952   +          +     1.33507828005472 * Marital_StatusMarried
2091953   +          +    -0.75026283842664 * Marital_StatusSingle
2091954   +          +     0.84436594207558 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.05263155952227 * Education2n_Cycle + -1.40124591386453 * 
EducationBasic + 0.43501491332678 * EducationGraduation + 0.77305262508081 * EducationMaster + 
-0.43667846017683 * Marital_StatusDivorced + 1.33507828005472 * Marital_StatusMarried + 
-0.75026283842664 * Marital_StatusSingle + 0.84436594207558 * Marital_StatusTogether ;
2091955   +   H12  = H12  +     0.08398432584098 * Education2n_Cycle
2091956   +          +     0.12375156883157 * EducationBasic  +     -0.0901891766073 *
2091957   +        EducationGraduation  +    -0.07691770257441 * EducationMaster
2091958   +          +    -0.03531690128173 * Marital_StatusDivorced
2091959   +          +    -0.04344171367809 * Marital_StatusMarried
2091960   +          +    -0.05137362653166 * Marital_StatusSingle
2091961   +          +    -0.01265518570667 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.08398432584098 * Education2n_Cycle + 0.12375156883157 * 
EducationBasic + -0.0901891766073 * EducationGraduation + -0.07691770257441 * EducationMaster 
+ -0.03531690128173 * Marital_StatusDivorced + -0.04344171367809 * Marital_StatusMarried + 
-0.05137362653166 * Marital_StatusSingle + -0.01265518570667 * Marital_StatusTogether ;
2091962   +   H11  =     1.86846527977677 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 1.86846527977677 + H11 ;
2091963   +   H12  =    -0.42494263287735 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -0.42494263287735 + H12 ;
2091964   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
2091965   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
2091966   +END;
MPRINT(EM_DIAGRAM):   END;
2091967   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2091968   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
2091969   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
2091970   +END;
MPRINT(EM_DIAGRAM):   END;
2091971   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2091972   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2091973   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2091974   +
2091975   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
2091976   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
2091977   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2091978   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
2091979   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
2091980   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2091981   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
2091982   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2091983   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2091984   +end;
MPRINT(EM_DIAGRAM):   end;
2091985   +else do;
MPRINT(EM_DIAGRAM):   else do;
2091986   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
2091987   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
2091988   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
2091989   +   end;
MPRINT(EM_DIAGRAM):   end;
2091990   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
2091991   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
2091992   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
2091993   +   end;
MPRINT(EM_DIAGRAM):   end;
2091994   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2091995   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2091996   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2091997   +   end;
MPRINT(EM_DIAGRAM):   end;
2091998   +end;
MPRINT(EM_DIAGRAM):   end;
2091999   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2092000   +   P_DepVar1  =    -5.43090515434696 * H11  +    -9.08673127131886 * H12 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -5.43090515434696 * H11 + -9.08673127131886 * H12 ;
2092001   +   P_DepVar1  =      2.7752946076831 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 2.7752946076831 + P_DepVar1 ;
2092002   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2092003   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2092004   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2092005   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2092006   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2092007   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2092008   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2092009   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2092010   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2092011   +END;
MPRINT(EM_DIAGRAM):   END;
2092012   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2092013   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2092014   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2092015   +END;
MPRINT(EM_DIAGRAM):   END;
2092016   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2092017   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2092018   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2092019   +END;
MPRINT(EM_DIAGRAM):   END;
2092020   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
2092021   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
2092022   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
2092023   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
2092024   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
2092025   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
2092026   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
2092027   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2092028   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2092029   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2092030   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2092031   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2092032   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2092033   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2092034   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2092035   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2092036   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2092037   +END;
MPRINT(EM_DIAGRAM):   END;
2092038   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2092039   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2092040   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2092041   +drop
2092042   +H11
2092043   +H12
2092044   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 ;
2092045   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
2092046   +* Renaming variables for Neural31;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural31;
2092047   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2092048   +* Renaming Posterior variables for Neural31;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural31;
2092049   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2092050   +drop Neural31_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural31_P_DepVar1;
2092051   +Neural31_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural31_P_DepVar1 = P_DepVar1;
2092052   +drop Neural31_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural31_P_DepVar0;
2092053   +Neural31_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural31_P_DepVar0 = P_DepVar0;
2092054   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2092055   +* Renaming _WARN_ variable for Neural31;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural31;
2092056   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2092057   +length Neural31_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural31_WARN_ $4;
2092058   +drop Neural31_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural31_WARN_;
2092059   +Neural31_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural31_WARN_ = _WARN_;
2092060   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2092061   +* Ensmbl9: Scoring Code of model 10 of 10;
MPRINT(EM_DIAGRAM):   * Ensmbl9: Scoring Code of model 10 of 10;
2092062   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2092063   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2092064   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
2092065   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
2092066   +* NODE: Neural6;
MPRINT(EM_DIAGRAM):   * NODE: Neural6;
2092067   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2092068   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2092069   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2092070   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2092071   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2092072   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2092073   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2092074   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2092075   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2092076   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2092077   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2092078   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2092079   +LENGTH _WARN_ $4
2092080   +      F_DepVar  $ 12
2092081   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
2092082   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2092083   +
2092084   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2092085   +
2092086   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2092087   +
2092088   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2092089   +
2092090   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2092091   +
2092092   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2092093   +
2092094   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2092095   +
2092096   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2092097   +
2092098   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2092099   +
2092100   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2092101   +
2092102   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2092103   +
2092104   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2092105   +
2092106   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2092107   +
2092108   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2092109   +
2092110   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2092111   +
2092112   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2092113   +
2092114   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2092115   +
2092116   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2092117   +
2092118   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2092119   +
2092120   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2092121   +
2092122   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2092123   +
2092124   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2092125   +
2092126   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2092127   +
2092128   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2092129   +
2092130   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2092131   +
2092132   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2092133   +
2092134   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2092135   +
2092136   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2092137   +
2092138   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2092139   +
2092140   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
2092141   +
2092142   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2092143   +
2092144   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2092145   +
2092146   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2092147   +
2092148   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2092149   +
2092150   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
2092151   +
2092152   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2092153   +
2092154   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
2092155   +
2092156   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2092157   +
2092158   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2092159   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2092160   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2092161   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2092162   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2092163   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2092164   +end;
MPRINT(EM_DIAGRAM):   end;
2092165   +else do;
MPRINT(EM_DIAGRAM):   else do;
2092166   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2092167   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2092168   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2092169   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2092170   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2092171   +   end;
MPRINT(EM_DIAGRAM):   end;
2092172   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2092173   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2092174   +   end;
MPRINT(EM_DIAGRAM):   end;
2092175   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2092176   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2092177   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2092178   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2092179   +   end;
MPRINT(EM_DIAGRAM):   end;
2092180   +end;
MPRINT(EM_DIAGRAM):   end;
2092181   +
2092182   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2092183   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2092184   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2092185   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2092186   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2092187   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2092188   +end;
MPRINT(EM_DIAGRAM):   end;
2092189   +else do;
MPRINT(EM_DIAGRAM):   else do;
2092190   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2092191   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2092192   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2092193   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2092194   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2092195   +   end;
MPRINT(EM_DIAGRAM):   end;
2092196   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2092197   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2092198   +   end;
MPRINT(EM_DIAGRAM):   end;
2092199   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2092200   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2092201   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2092202   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2092203   +   end;
MPRINT(EM_DIAGRAM):   end;
2092204   +end;
MPRINT(EM_DIAGRAM):   end;
2092205   +
2092206   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2092207   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2092208   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2092209   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2092210   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2092211   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2092212   +end;
MPRINT(EM_DIAGRAM):   end;
2092213   +else do;
MPRINT(EM_DIAGRAM):   else do;
2092214   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2092215   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2092216   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2092217   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2092218   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2092219   +   end;
MPRINT(EM_DIAGRAM):   end;
2092220   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2092221   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2092222   +   end;
MPRINT(EM_DIAGRAM):   end;
2092223   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2092224   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2092225   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2092226   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2092227   +   end;
MPRINT(EM_DIAGRAM):   end;
2092228   +end;
MPRINT(EM_DIAGRAM):   end;
2092229   +
2092230   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2092231   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2092232   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2092233   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2092234   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2092235   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2092236   +end;
MPRINT(EM_DIAGRAM):   end;
2092237   +else do;
MPRINT(EM_DIAGRAM):   else do;
2092238   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2092239   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2092240   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2092241   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2092242   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2092243   +   end;
MPRINT(EM_DIAGRAM):   end;
2092244   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2092245   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2092246   +   end;
MPRINT(EM_DIAGRAM):   end;
2092247   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2092248   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2092249   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2092250   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2092251   +   end;
MPRINT(EM_DIAGRAM):   end;
2092252   +end;
MPRINT(EM_DIAGRAM):   end;
2092253   +
2092254   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2092255   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2092256   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2092257   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2092258   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2092259   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2092260   +end;
MPRINT(EM_DIAGRAM):   end;
2092261   +else do;
MPRINT(EM_DIAGRAM):   else do;
2092262   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2092263   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2092264   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2092265   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2092266   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2092267   +   end;
MPRINT(EM_DIAGRAM):   end;
2092268   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2092269   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2092270   +   end;
MPRINT(EM_DIAGRAM):   end;
2092271   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2092272   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2092273   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2092274   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2092275   +   end;
MPRINT(EM_DIAGRAM):   end;
2092276   +end;
MPRINT(EM_DIAGRAM):   end;
2092277   +
2092278   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2092279   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2092280   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2092281   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2092282   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2092283   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2092284   +end;
MPRINT(EM_DIAGRAM):   end;
2092285   +else do;
MPRINT(EM_DIAGRAM):   else do;
2092286   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2092287   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2092288   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2092289   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2092290   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2092291   +   end;
MPRINT(EM_DIAGRAM):   end;
2092292   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2092293   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2092294   +   end;
MPRINT(EM_DIAGRAM):   end;
2092295   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2092296   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2092297   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2092298   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2092299   +   end;
MPRINT(EM_DIAGRAM):   end;
2092300   +end;
MPRINT(EM_DIAGRAM):   end;
2092301   +
2092302   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2092303   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
2092304   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2092305   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2092306   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2092307   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2092308   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2092309   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2092310   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2092311   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2092312   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2092313   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2092314   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2092315   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2092316   +end;
MPRINT(EM_DIAGRAM):   end;
2092317   +else do;
MPRINT(EM_DIAGRAM):   else do;
2092318   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2092319   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2092320   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2092321   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2092322   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2092323   +   end;
MPRINT(EM_DIAGRAM):   end;
2092324   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2092325   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2092326   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2092327   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2092328   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2092329   +   end;
MPRINT(EM_DIAGRAM):   end;
2092330   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2092331   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2092332   +   end;
MPRINT(EM_DIAGRAM):   end;
2092333   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2092334   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2092335   +   end;
MPRINT(EM_DIAGRAM):   end;
2092336   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2092337   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2092338   +   end;
MPRINT(EM_DIAGRAM):   end;
2092339   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2092340   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2092341   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2092342   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2092343   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2092344   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2092345   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2092346   +   end;
MPRINT(EM_DIAGRAM):   end;
2092347   +end;
MPRINT(EM_DIAGRAM):   end;
2092348   +
2092349   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2092350   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2092351   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
2092352   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2092353   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2092354   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2092355   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2092356   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2092357   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2092358   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2092359   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2092360   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2092361   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2092362   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2092363   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2092364   +end;
MPRINT(EM_DIAGRAM):   end;
2092365   +else do;
MPRINT(EM_DIAGRAM):   else do;
2092366   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2092367   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2092368   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2092369   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2092370   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2092371   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2092372   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2092373   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2092374   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2092375   +         end;
MPRINT(EM_DIAGRAM):   end;
2092376   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2092377   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2092378   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2092379   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2092380   +            end;
MPRINT(EM_DIAGRAM):   end;
2092381   +         end;
MPRINT(EM_DIAGRAM):   end;
2092382   +      end;
MPRINT(EM_DIAGRAM):   end;
2092383   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2092384   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2092385   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2092386   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2092387   +         end;
MPRINT(EM_DIAGRAM):   end;
2092388   +      end;
MPRINT(EM_DIAGRAM):   end;
2092389   +   end;
MPRINT(EM_DIAGRAM):   end;
2092390   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2092391   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2092392   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2092393   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2092394   +      end;
MPRINT(EM_DIAGRAM):   end;
2092395   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2092396   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2092397   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2092398   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2092399   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2092400   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2092401   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2092402   +         end;
MPRINT(EM_DIAGRAM):   end;
2092403   +      end;
MPRINT(EM_DIAGRAM):   end;
2092404   +   end;
MPRINT(EM_DIAGRAM):   end;
2092405   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2092406   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2092407   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2092408   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2092409   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2092410   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2092411   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2092412   +   end;
MPRINT(EM_DIAGRAM):   end;
2092413   +end;
MPRINT(EM_DIAGRAM):   end;
2092414   +
2092415   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2092416   +*** Checking missing input Interval
2092417   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2092418   +
2092419   +IF NMISS(
2092420   +   Income ,
2092421   +   Kidhome ,
2092422   +   MntFishProducts ,
2092423   +   MntFruits ,
2092424   +   MntGoldProds ,
2092425   +   MntMeatProducts ,
2092426   +   MntSweetProducts ,
2092427   +   MntWines ,
2092428   +   NumCatalogPurchases ,
2092429   +   NumDealsPurchases ,
2092430   +   NumStorePurchases ,
2092431   +   NumWebPurchases ,
2092432   +   NumWebVisitsMonth ,
2092433   +   Recency ,
2092434   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Income , Kidhome , MntFishProducts , MntFruits , MntGoldProds 
, MntMeatProducts , MntSweetProducts , MntWines , NumCatalogPurchases , NumDealsPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , Recency , Teenhome ) THEN DO;
2092435   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2092436   +
2092437   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2092438   +END;
MPRINT(EM_DIAGRAM):   END;
2092439   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2092440   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
2092441   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2092442   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2092443   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2092444   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2092445   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2092446   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2092447   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2092448   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2092449   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2092450   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2092451   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2092452   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2092453   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2092454   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2092455   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2092456   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2092457   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2092458   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2092459   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2092460   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2092461   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2092462   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2092463   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2092464   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2092465   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2092466   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2092467   +END;
MPRINT(EM_DIAGRAM):   END;
2092468   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2092469   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2092470   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2092471   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2092472   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2092473   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2092474   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2092475   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2092476   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2092477   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2092478   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2092479   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2092480   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2092481   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
2092482   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2092483   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2092484   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2092485   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2092486   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2092487   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2092488   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2092489   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2092490   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2092491   +   ELSE S_NumCatalogPurchases
2092492   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2092493   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2092494   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2092495   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2092496   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2092497   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2092498   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2092499   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2092500   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2092501   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2092502   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2092503   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2092504   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2092505   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2092506   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2092507   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2092508   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2092509   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2092510   +END;
MPRINT(EM_DIAGRAM):   END;
2092511   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2092512   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
2092513   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2092514   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2092515   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
2092516   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2092517   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2092518   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
2092519   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2092520   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2092521   +   H11  =    -0.16969868213328 * S_Income  +     0.02694502969256 * S_Kidhome
2092522   +          +     0.03393898746968 * S_MntFishProducts
2092523   +          +     0.03394640220058 * S_MntFruits  +    -0.01587167417367 *
2092524   +        S_MntGoldProds  +    -0.21495242415153 * S_MntMeatProducts
2092525   +          +     0.02266052799747 * S_MntSweetProducts
2092526   +          +     0.12574687751719 * S_MntWines  +    -0.21850463721003 *
2092527   +        S_NumCatalogPurchases  +    -0.14568080551206 * S_NumDealsPurchases
2092528   +          +     0.14229567420228 * S_NumStorePurchases
2092529   +          +     0.12847652303094 * S_NumWebPurchases
2092530   +          +    -0.27944976547358 * S_NumWebVisitsMonth
2092531   +          +     0.34174699105869 * S_Recency  +     0.09717306809084 *
2092532   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = -0.16969868213328 * S_Income + 0.02694502969256 * S_Kidhome + 
0.03393898746968 * S_MntFishProducts + 0.03394640220058 * S_MntFruits + -0.01587167417367 * 
S_MntGoldProds + -0.21495242415153 * S_MntMeatProducts + 0.02266052799747 * S_MntSweetProducts 
+ 0.12574687751719 * S_MntWines + -0.21850463721003 * S_NumCatalogPurchases + 
-0.14568080551206 * S_NumDealsPurchases + 0.14229567420228 * S_NumStorePurchases + 
0.12847652303094 * S_NumWebPurchases + -0.27944976547358 * S_NumWebVisitsMonth + 
0.34174699105869 * S_Recency + 0.09717306809084 * S_Teenhome ;
2092533   +   H11  = H11  +     0.14287293066948 * AcceptedCmp10
2092534   +          +     0.17019666922685 * AcceptedCmp20  +      0.1773366178584 *
2092535   +        AcceptedCmp30  +     0.13131611179689 * AcceptedCmp40
2092536   +          +     0.19540838220921 * AcceptedCmp50  +    -0.06278476006654 *
2092537   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.14287293066948 * AcceptedCmp10 + 0.17019666922685 * 
AcceptedCmp20 + 0.1773366178584 * AcceptedCmp30 + 0.13131611179689 * AcceptedCmp40 + 
0.19540838220921 * AcceptedCmp50 + -0.06278476006654 * Complain0 ;
2092538   +   H11  = H11  +    -0.01270106768575 * Education2n_Cycle
2092539   +          +     0.06504707206132 * EducationBasic  +    -0.03889488068058 *
2092540   +        EducationGraduation  +    -0.00452456149121 * EducationMaster
2092541   +          +    -0.03502175493382 * Marital_StatusDivorced
2092542   +          +     0.10402983157245 * Marital_StatusMarried
2092543   +          +    -0.09554165782029 * Marital_StatusSingle
2092544   +          +     0.11204179692307 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.01270106768575 * Education2n_Cycle + 0.06504707206132 * 
EducationBasic + -0.03889488068058 * EducationGraduation + -0.00452456149121 * EducationMaster 
+ -0.03502175493382 * Marital_StatusDivorced + 0.10402983157245 * Marital_StatusMarried + 
-0.09554165782029 * Marital_StatusSingle + 0.11204179692307 * Marital_StatusTogether ;
2092545   +   H11  =    -0.16570612477441 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -0.16570612477441 + H11 ;
2092546   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
2092547   +END;
MPRINT(EM_DIAGRAM):   END;
2092548   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2092549   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
2092550   +END;
MPRINT(EM_DIAGRAM):   END;
2092551   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2092552   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2092553   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2092554   +
2092555   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
2092556   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
2092557   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2092558   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
2092559   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
2092560   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2092561   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
2092562   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2092563   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2092564   +end;
MPRINT(EM_DIAGRAM):   end;
2092565   +else do;
MPRINT(EM_DIAGRAM):   else do;
2092566   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
2092567   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
2092568   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
2092569   +   end;
MPRINT(EM_DIAGRAM):   end;
2092570   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
2092571   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
2092572   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
2092573   +   end;
MPRINT(EM_DIAGRAM):   end;
2092574   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2092575   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2092576   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2092577   +   end;
MPRINT(EM_DIAGRAM):   end;
2092578   +end;
MPRINT(EM_DIAGRAM):   end;
2092579   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2092580   +   P_DepVar1  =     -9.2939742190595 * H11 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -9.2939742190595 * H11 ;
2092581   +   P_DepVar1  =    -0.77234034139714 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.77234034139714 + P_DepVar1 ;
2092582   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2092583   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2092584   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2092585   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2092586   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2092587   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2092588   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2092589   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2092590   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2092591   +END;
MPRINT(EM_DIAGRAM):   END;
2092592   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2092593   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2092594   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2092595   +END;
MPRINT(EM_DIAGRAM):   END;
2092596   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2092597   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2092598   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2092599   +END;
MPRINT(EM_DIAGRAM):   END;
2092600   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
2092601   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
2092602   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
2092603   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
2092604   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
2092605   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
2092606   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
2092607   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2092608   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2092609   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2092610   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2092611   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2092612   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2092613   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2092614   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2092615   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2092616   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2092617   +END;
MPRINT(EM_DIAGRAM):   END;
2092618   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2092619   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2092620   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2092621   +drop
2092622   +H11
2092623   +;
MPRINT(EM_DIAGRAM):   drop H11 ;
2092624   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
2092625   +* Renaming variables for Neural6;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural6;
2092626   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2092627   +* Renaming Posterior variables for Neural6;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural6;
2092628   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2092629   +drop Neural6_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural6_P_DepVar1;
2092630   +Neural6_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural6_P_DepVar1 = P_DepVar1;
2092631   +drop Neural6_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural6_P_DepVar0;
2092632   +Neural6_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural6_P_DepVar0 = P_DepVar0;
2092633   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2092634   +* Renaming _WARN_ variable for Neural6;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural6;
2092635   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2092636   +length Neural6_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural6_WARN_ $4;
2092637   +drop Neural6_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural6_WARN_;
2092638   +Neural6_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural6_WARN_ = _WARN_;
2092639   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2092640   +* Ensmbl9: Average Posteriors of 10 models;
MPRINT(EM_DIAGRAM):   * Ensmbl9: Average Posteriors of 10 models;
2092641   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2092642   +P_DepVar1 = (
2092643   +Reg10_P_DepVar1 +
2092644   +Reg9_P_DepVar1 +
2092645   +Tree5_P_DepVar1 +
2092646   +Neural30_P_DepVar1 +
2092647   +Neural35_P_DepVar1 +
2092648   +Neural34_P_DepVar1 +
2092649   +Neural33_P_DepVar1 +
2092650   +Neural32_P_DepVar1 +
2092651   +Neural31_P_DepVar1 +
2092652   +Neural6_P_DepVar1
2092653   +)/10;
MPRINT(EM_DIAGRAM):   P_DepVar1 = ( Reg10_P_DepVar1 + Reg9_P_DepVar1 + Tree5_P_DepVar1 + 
Neural30_P_DepVar1 + Neural35_P_DepVar1 + Neural34_P_DepVar1 + Neural33_P_DepVar1 + 
Neural32_P_DepVar1 + Neural31_P_DepVar1 + Neural6_P_DepVar1 )/10;
2092654   +P_DepVar0 = (
2092655   +Reg10_P_DepVar0 +
2092656   +Reg9_P_DepVar0 +
2092657   +Tree5_P_DepVar0 +
2092658   +Neural30_P_DepVar0 +
2092659   +Neural35_P_DepVar0 +
2092660   +Neural34_P_DepVar0 +
2092661   +Neural33_P_DepVar0 +
2092662   +Neural32_P_DepVar0 +
2092663   +Neural31_P_DepVar0 +
2092664   +Neural6_P_DepVar0
2092665   +)/10;
MPRINT(EM_DIAGRAM):   P_DepVar0 = ( Reg10_P_DepVar0 + Reg9_P_DepVar0 + Tree5_P_DepVar0 + 
Neural30_P_DepVar0 + Neural35_P_DepVar0 + Neural34_P_DepVar0 + Neural33_P_DepVar0 + 
Neural32_P_DepVar0 + Neural31_P_DepVar0 + Neural6_P_DepVar0 )/10;
2092666   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2092667   +* Ensmbl9: Computing Classification Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl9: Computing Classification Vars;
2092668   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2092669   +length I_DepVar $32;
MPRINT(EM_DIAGRAM):   length I_DepVar $32;
WARNING: Length of character variable I_DepVar has already been set. 
         Use the LENGTH statement as the very first statement in the DATA STEP to declare the 
         length of a character variable.
2092670   +label I_DepVar = 'Into: DepVar';
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar';
2092671   +length _format $200;
MPRINT(EM_DIAGRAM):   length _format $200;
2092672   +drop _format;
MPRINT(EM_DIAGRAM):   drop _format;
2092673   +_format= ' ';
MPRINT(EM_DIAGRAM):   _format= ' ';
2092674   +_p_= 0;
MPRINT(EM_DIAGRAM):   _p_= 0;
2092675   +drop _p_;
MPRINT(EM_DIAGRAM):   drop _p_;
2092676   +if P_DepVar1 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar1 > _p_ then do;
2092677   +_p_= P_DepVar1;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar1;
2092678   +_format= '1';
MPRINT(EM_DIAGRAM):   _format= '1';
2092679   +end;
MPRINT(EM_DIAGRAM):   end;
2092680   +if P_DepVar0 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar0 > _p_ then do;
2092681   +_p_= P_DepVar0;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar0;
2092682   +_format= '0';
MPRINT(EM_DIAGRAM):   _format= '0';
2092683   +end;
MPRINT(EM_DIAGRAM):   end;
2092684   +%DMNORMCP(_format,I_DepVar);
MPRINT(DMNORMCP):   I_DepVar=dmnorm(_format,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2092685   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2092686   +* Ensmbl9: Producing Unformatted variable;
MPRINT(EM_DIAGRAM):   * Ensmbl9: Producing Unformatted variable;
2092687   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2092688   +label U_DepVar = "Unnormalized Into: DepVar";
MPRINT(EM_DIAGRAM):   label U_DepVar = "Unnormalized Into: DepVar";
2092689   +if I_DepVar = '1' then U_DepVar = 1;
MPRINT(EM_DIAGRAM):   if I_DepVar = '1' then U_DepVar = 1;
2092690   +else
2092691   +if I_DepVar = '0' then U_DepVar = 0;
MPRINT(EM_DIAGRAM):   else if I_DepVar = '0' then U_DepVar = 0;
2092692   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2092693   +* Ensmbl9: Computing _WARN_ Variable;
MPRINT(EM_DIAGRAM):   * Ensmbl9: Computing _WARN_ Variable;
2092694   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2092695   +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
2092696   +label _WARN_ = 'Warnings';
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings';
2092697   +_WARN_ = '';
MPRINT(EM_DIAGRAM):   _WARN_ = '';
2092698   +if index(REG10_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(REG10_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 
1, 1) ='M';
2092699   +if index(REG10_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(REG10_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 
2, 1) ='U';
2092700   +if index(REG10_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(REG10_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 
3, 1) ='P';
2092701   +if index(REG10_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(REG10_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 
4, 1) ='C';
2092702   +if index(REG9_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(REG9_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 
1) ='M';
2092703   +if index(REG9_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(REG9_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 
1) ='U';
2092704   +if index(REG9_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(REG9_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 
1) ='P';
2092705   +if index(REG9_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(REG9_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 
1) ='C';
2092706   +if index(TREE5_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(TREE5_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 
1, 1) ='M';
2092707   +if index(TREE5_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(TREE5_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 
2, 1) ='U';
2092708   +if index(TREE5_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(TREE5_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 
3, 1) ='P';
2092709   +if index(TREE5_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(TREE5_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 
4, 1) ='C';
2092710   +if index(NEURAL30_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M'
2092710  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL30_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
2092711   +if index(NEURAL30_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U'
2092711  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL30_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
2092712   +if index(NEURAL30_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P'
2092712  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL30_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
2092713   +if index(NEURAL30_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C'
2092713  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL30_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
2092714   +if index(NEURAL35_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M'
2092714  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL35_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
2092715   +if index(NEURAL35_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U'
2092715  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL35_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
2092716   +if index(NEURAL35_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P'
2092716  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL35_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
2092717   +if index(NEURAL35_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C'
2092717  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL35_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
2092718   +if index(NEURAL34_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M'
2092718  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL34_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
2092719   +if index(NEURAL34_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U'
2092719  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL34_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
2092720   +if index(NEURAL34_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P'
2092720  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL34_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
2092721   +if index(NEURAL34_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C'
2092721  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL34_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
2092722   +if index(NEURAL33_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M'
2092722  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL33_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
2092723   +if index(NEURAL33_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U'
2092723  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL33_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
2092724   +if index(NEURAL33_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P'
2092724  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL33_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
2092725   +if index(NEURAL33_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C'
2092725  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL33_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
2092726   +if index(NEURAL32_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M'
2092726  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL32_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
2092727   +if index(NEURAL32_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U'
2092727  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL32_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
2092728   +if index(NEURAL32_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P'
2092728  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL32_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
2092729   +if index(NEURAL32_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C'
2092729  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL32_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
2092730   +if index(NEURAL31_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M'
2092730  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL31_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
2092731   +if index(NEURAL31_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U'
2092731  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL31_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
2092732   +if index(NEURAL31_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P'
2092732  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL31_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
2092733   +if index(NEURAL31_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C'
2092733  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL31_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
2092734   +if index(NEURAL6_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(NEURAL6_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 
1, 1) ='M';
2092735   +if index(NEURAL6_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(NEURAL6_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 
2, 1) ='U';
2092736   +if index(NEURAL6_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(NEURAL6_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 
3, 1) ='P';
2092737   +if index(NEURAL6_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(NEURAL6_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 
4, 1) ='C';
2092738   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2092739   +* Ensmbl9: Computing Residual Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl9: Computing Residual Vars;
2092740   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2092741   +if
2092742   +F_DepVar NE '1'
2092743   +AND F_DepVar NE '0'
2092744   +then do;
MPRINT(EM_DIAGRAM):   if F_DepVar NE '1' AND F_DepVar NE '0' then do;
2092745   +R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
2092746   +R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
2092747   +end;
MPRINT(EM_DIAGRAM):   end;
2092748   +else do;
MPRINT(EM_DIAGRAM):   else do;
2092749   +R_DepVar1 = -P_DepVar1;
MPRINT(EM_DIAGRAM):   R_DepVar1 = -P_DepVar1;
2092750   +R_DepVar0 = -P_DepVar0;
MPRINT(EM_DIAGRAM):   R_DepVar0 = -P_DepVar0;
2092751   +SELECT(F_DepVar);
MPRINT(EM_DIAGRAM):   SELECT(F_DepVar);
2092752   +WHEN('1') R_DepVar1 = R_DepVar1 +1;
MPRINT(EM_DIAGRAM):   WHEN('1') R_DepVar1 = R_DepVar1 +1;
2092753   +WHEN('0') R_DepVar0 = R_DepVar0 +1;
MPRINT(EM_DIAGRAM):   WHEN('0') R_DepVar0 = R_DepVar0 +1;
2092754   +OTHERWISE;
MPRINT(EM_DIAGRAM):   OTHERWISE;
2092755   +END;
MPRINT(EM_DIAGRAM):   END;
2092756   +END;
MPRINT(EM_DIAGRAM):   END;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2092757    run;

NOTE: DATA STEP view saved on file EMWS8.ENSMBL9_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.REG10_VALIDATE.VIEW used (Total process time):
      real time           0.19 seconds
      cpu time            0.18 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.20 seconds
      cpu time            0.20 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2092758    quit;
2092759    filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
MPRINT(EM_DIAGRAM):   
MPRINT(CALFITSTATSNOMINAL):   data _tmpTrainFitTable(keep=_TARGET_ _ASE_ _DIV_ _MAX_ _NOBS_ 
_RASE_ _SSE_ _DISF_ _MISC_ _WRONG_ rename=(_TARGET_=TARGET));
MPRINT(CALFITSTATSNOMINAL):   set EMWS8.Ensmbl9_TRAIN end=eof;
MPRINT(CALFITSTATSNOMINAL):   length _TARGET_ $32;
MPRINT(CALFITSTATSNOMINAL):   length _ASE_ _DIV_ _MAX_ _NOBS_ _RASE_ _SSE_ _DISF_ _MISC_ 
_WRONG_ 8;
MPRINT(CALFITSTATSNOMINAL):   label _TARGET_ = "Train: Target Variable" _NOBS_= "Train: Sum of 
Frequencies" _SSE_= "Train: Sum of Squared Errors" _MAX_= "Train: Maximum Absolute Error" 
_DIV_ = "Train: Divisor for ASE" _WRONG_= "Train: Number of Wrong Classifications" _DISF_= 
"Train: Frequency of Classified Cases" _MISC_= "Train: Misclassification Rate" _ASE_ = "Train: 
Average Squared Error" _RASE_ = "Train: Root Average Squared Error";
MPRINT(CALFITSTATSNOMINAL):   retain _TARGET_ _WRONG_ _DIV_ _MAX_ _SSE_ _DISF_ _MISC_ _ASE_ 
_RASE_ ;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar1 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar1)*(R_DepVar1);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar1));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar0 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar0)*(R_DepVar0);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar0));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if F_DepVar ne "" then do;
MPRINT(CALFITSTATSNOMINAL):   _DISF_+ 1;
MPRINT(CALFITSTATSNOMINAL):   _WRONG_+(F_DepVar ne I_DepVar);
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if eof then do;
MPRINT(CALFITSTATSNOMINAL):   _TARGET_ = "DepVar";
MPRINT(CALFITSTATSNOMINAL):   _MAX = 0;
MPRINT(CALFITSTATSNOMINAL):   if _DISF_ ne 0 then do;
MPRINT(CALFITSTATSNOMINAL):   _MISC_=_WRONG_/_DISF_;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   _NOBS_ = _DIV_/2;
MPRINT(CALFITSTATSNOMINAL):   _ASE_=_SSE_/_DIV_;
MPRINT(CALFITSTATSNOMINAL):   _RASE_=sqrt(_ASE_);
MPRINT(CALFITSTATSNOMINAL):   output;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl9_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set _tmpTrainFitTable;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   
MPRINT(CALFITSTATSNOMINAL):   data _tmpValidFitTable(keep=_TARGET_ _ASE_ _DIV_ _MAX_ _NOBS_ 
_RASE_ _SSE_ _DISF_ _MISC_ _WRONG_ rename=(_TARGET_=TARGET));
MPRINT(CALFITSTATSNOMINAL):   set EMWS8.Ensmbl9_VALIDATE end=eof;
MPRINT(CALFITSTATSNOMINAL):   length _TARGET_ $32;
MPRINT(CALFITSTATSNOMINAL):   length _ASE_ _DIV_ _MAX_ _NOBS_ _RASE_ _SSE_ _DISF_ _MISC_ 
_WRONG_ 8;
MPRINT(CALFITSTATSNOMINAL):   label _TARGET_ = "Valid: Target Variable" _NOBS_= "Valid: Sum of 
Frequencies" _SSE_= "Valid: Sum of Squared Errors" _MAX_= "Valid: Maximum Absolute Error" 
_DIV_ = "Valid: Divisor for ASE" _WRONG_= "Valid: Number of Wrong Classifications" _DISF_= 
"Valid: Frequency of Classified Cases" _MISC_= "Valid: Misclassification Rate" _ASE_ = "Valid: 
Average Squared Error" _RASE_ = "Valid: Root Average Squared Error";
MPRINT(CALFITSTATSNOMINAL):   retain _TARGET_ _WRONG_ _DIV_ _MAX_ _SSE_ _DISF_ _MISC_ _ASE_ 
_RASE_ ;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar1 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar1)*(R_DepVar1);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar1));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar0 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar0)*(R_DepVar0);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar0));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if F_DepVar ne "" then do;
MPRINT(CALFITSTATSNOMINAL):   _DISF_+ 1;
MPRINT(CALFITSTATSNOMINAL):   _WRONG_+(F_DepVar ne I_DepVar);
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if eof then do;
MPRINT(CALFITSTATSNOMINAL):   _TARGET_ = "DepVar";
MPRINT(CALFITSTATSNOMINAL):   _MAX = 0;
MPRINT(CALFITSTATSNOMINAL):   if _DISF_ ne 0 then do;
MPRINT(CALFITSTATSNOMINAL):   _MISC_=_WRONG_/_DISF_;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   _NOBS_ = _DIV_/2;
MPRINT(CALFITSTATSNOMINAL):   _ASE_=_SSE_/_DIV_;
MPRINT(CALFITSTATSNOMINAL):   _RASE_=sqrt(_ASE_);
MPRINT(CALFITSTATSNOMINAL):   output;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data _tmpdata_(DROP= TARGET);
MPRINT(EM_DIAGRAM):   set _tmpValidFitTable;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _tmpdata_;
MPRINT(EM_DIAGRAM):   set _tmpdata_;
MPRINT(EM_DIAGRAM):   rename _ASE_=_VASE_;
MPRINT(EM_DIAGRAM):   rename _DIV_=_VDIV_;
MPRINT(EM_DIAGRAM):   rename _MAX_=_VMAX_;
MPRINT(EM_DIAGRAM):   rename _NOBS_=_VNOBS_;
MPRINT(EM_DIAGRAM):   rename _RASE_=_VRASE_;
MPRINT(EM_DIAGRAM):   rename _SSE_=_VSSE_;
MPRINT(EM_DIAGRAM):   rename _DISF_=_VDISF_;
MPRINT(EM_DIAGRAM):   rename _MISC_=_VMISC_;
MPRINT(EM_DIAGRAM):   rename _WRONG_=_VWRONG_;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl9_EMOUTFIT;
MPRINT(EM_DIAGRAM):   merge EMWS8.Ensmbl9_EMOUTFIT _tmpdata_;
MPRINT(EM_DIAGRAM):   run;
2092819    filename _pref
2092819  ! "C:\\predictive-models-project\Workspaces\EMWS8\Reg10\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Reg10\EMPUBLISHSCORE.sas";
2092820    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2092821    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Reg10\EMPUBLISHSCORE.sas.
2092822   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
2092823   +*** begin scoring code for regression;
MPRINT(EM_DIAGRAM):   *** begin scoring code for regression;
2092824   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
2092825   +
2092826   +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
2092827   +label _WARN_ = 'Warnings' ;
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings' ;
2092828   +
2092829   +length I_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length I_DepVar $ 12;
2092830   +label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2092831   +*** Target Values;
MPRINT(EM_DIAGRAM):   *** Target Values;
2092832   +array REG10DRF [2] $12 _temporary_ ('1' '0' );
MPRINT(EM_DIAGRAM):   array REG10DRF [2] $12 _temporary_ ('1' '0' );
2092833   +label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2092834   +format U_DepVar BEST.;
MPRINT(EM_DIAGRAM):   format U_DepVar BEST.;
2092835   +*** Unnormalized target values;
MPRINT(EM_DIAGRAM):   *** Unnormalized target values;
2092836   +ARRAY REG10DRU[2]  _TEMPORARY_ (1 0);
MPRINT(EM_DIAGRAM):   ARRAY REG10DRU[2] _TEMPORARY_ (1 0);
2092837   +
2092838   +drop _DM_BAD;
MPRINT(EM_DIAGRAM):   drop _DM_BAD;
2092839   +_DM_BAD=0;
MPRINT(EM_DIAGRAM):   _DM_BAD=0;
2092840   +
2092841   +*** Check Income for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Income for missing values ;
2092842   +if missing( Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( Income ) then do;
2092843   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2092844   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2092845   +end;
MPRINT(EM_DIAGRAM):   end;
2092846   +
2092847   +*** Check MntFishProducts for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntFishProducts for missing values ;
2092848   +if missing( MntFishProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntFishProducts ) then do;
2092849   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2092850   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2092851   +end;
MPRINT(EM_DIAGRAM):   end;
2092852   +
2092853   +*** Check MntFruits for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntFruits for missing values ;
2092854   +if missing( MntFruits ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntFruits ) then do;
2092855   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2092856   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2092857   +end;
MPRINT(EM_DIAGRAM):   end;
2092858   +
2092859   +*** Check MntMeatProducts for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntMeatProducts for missing values ;
2092860   +if missing( MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntMeatProducts ) then do;
2092861   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2092862   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2092863   +end;
MPRINT(EM_DIAGRAM):   end;
2092864   +
2092865   +*** Check MntWines for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntWines for missing values ;
2092866   +if missing( MntWines ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntWines ) then do;
2092867   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2092868   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2092869   +end;
MPRINT(EM_DIAGRAM):   end;
2092870   +
2092871   +*** Check NumCatalogPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumCatalogPurchases for missing values ;
2092872   +if missing( NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumCatalogPurchases ) then do;
2092873   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2092874   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2092875   +end;
MPRINT(EM_DIAGRAM):   end;
2092876   +
2092877   +*** Check NumDealsPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumDealsPurchases for missing values ;
2092878   +if missing( NumDealsPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumDealsPurchases ) then do;
2092879   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2092880   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2092881   +end;
MPRINT(EM_DIAGRAM):   end;
2092882   +
2092883   +*** Check NumStorePurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumStorePurchases for missing values ;
2092884   +if missing( NumStorePurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumStorePurchases ) then do;
2092885   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2092886   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2092887   +end;
MPRINT(EM_DIAGRAM):   end;
2092888   +
2092889   +*** Check NumWebPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumWebPurchases for missing values ;
2092890   +if missing( NumWebPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumWebPurchases ) then do;
2092891   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2092892   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2092893   +end;
MPRINT(EM_DIAGRAM):   end;
2092894   +
2092895   +*** Check NumWebVisitsMonth for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumWebVisitsMonth for missing values ;
2092896   +if missing( NumWebVisitsMonth ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumWebVisitsMonth ) then do;
2092897   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2092898   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2092899   +end;
MPRINT(EM_DIAGRAM):   end;
2092900   +
2092901   +*** Check Recency for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Recency for missing values ;
2092902   +if missing( Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( Recency ) then do;
2092903   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2092904   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2092905   +end;
MPRINT(EM_DIAGRAM):   end;
2092906   +
2092907   +*** Check Teenhome for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Teenhome for missing values ;
2092908   +if missing( Teenhome ) then do;
MPRINT(EM_DIAGRAM):   if missing( Teenhome ) then do;
2092909   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2092910   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2092911   +end;
MPRINT(EM_DIAGRAM):   end;
2092912   +
2092913   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2092914   +drop _1_0 ;
MPRINT(EM_DIAGRAM):   drop _1_0 ;
2092915   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2092916   +   _1_0 = .;
MPRINT(EM_DIAGRAM):   _1_0 = .;
2092917   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2092918   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2092919   +end;
MPRINT(EM_DIAGRAM):   end;
2092920   +else do;
MPRINT(EM_DIAGRAM):   else do;
2092921   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2092922   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2092923   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2092924   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2092925   +      _1_0 = 1;
MPRINT(EM_DIAGRAM):   _1_0 = 1;
2092926   +   end;
MPRINT(EM_DIAGRAM):   end;
2092927   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2092928   +      _1_0 = -1;
MPRINT(EM_DIAGRAM):   _1_0 = -1;
2092929   +   end;
MPRINT(EM_DIAGRAM):   end;
2092930   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2092931   +      _1_0 = .;
MPRINT(EM_DIAGRAM):   _1_0 = .;
2092932   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2092933   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2092934   +   end;
MPRINT(EM_DIAGRAM):   end;
2092935   +end;
MPRINT(EM_DIAGRAM):   end;
2092936   +
2092937   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2092938   +drop _2_0 ;
MPRINT(EM_DIAGRAM):   drop _2_0 ;
2092939   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2092940   +   _2_0 = .;
MPRINT(EM_DIAGRAM):   _2_0 = .;
2092941   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2092942   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2092943   +end;
MPRINT(EM_DIAGRAM):   end;
2092944   +else do;
MPRINT(EM_DIAGRAM):   else do;
2092945   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2092946   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2092947   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2092948   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2092949   +      _2_0 = 1;
MPRINT(EM_DIAGRAM):   _2_0 = 1;
2092950   +   end;
MPRINT(EM_DIAGRAM):   end;
2092951   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2092952   +      _2_0 = -1;
MPRINT(EM_DIAGRAM):   _2_0 = -1;
2092953   +   end;
MPRINT(EM_DIAGRAM):   end;
2092954   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2092955   +      _2_0 = .;
MPRINT(EM_DIAGRAM):   _2_0 = .;
2092956   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2092957   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2092958   +   end;
MPRINT(EM_DIAGRAM):   end;
2092959   +end;
MPRINT(EM_DIAGRAM):   end;
2092960   +
2092961   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2092962   +drop _3_0 ;
MPRINT(EM_DIAGRAM):   drop _3_0 ;
2092963   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2092964   +   _3_0 = .;
MPRINT(EM_DIAGRAM):   _3_0 = .;
2092965   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2092966   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2092967   +end;
MPRINT(EM_DIAGRAM):   end;
2092968   +else do;
MPRINT(EM_DIAGRAM):   else do;
2092969   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2092970   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2092971   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2092972   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2092973   +      _3_0 = 1;
MPRINT(EM_DIAGRAM):   _3_0 = 1;
2092974   +   end;
MPRINT(EM_DIAGRAM):   end;
2092975   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2092976   +      _3_0 = -1;
MPRINT(EM_DIAGRAM):   _3_0 = -1;
2092977   +   end;
MPRINT(EM_DIAGRAM):   end;
2092978   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2092979   +      _3_0 = .;
MPRINT(EM_DIAGRAM):   _3_0 = .;
2092980   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2092981   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2092982   +   end;
MPRINT(EM_DIAGRAM):   end;
2092983   +end;
MPRINT(EM_DIAGRAM):   end;
2092984   +
2092985   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2092986   +drop _4_0 ;
MPRINT(EM_DIAGRAM):   drop _4_0 ;
2092987   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2092988   +   _4_0 = .;
MPRINT(EM_DIAGRAM):   _4_0 = .;
2092989   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2092990   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2092991   +end;
MPRINT(EM_DIAGRAM):   end;
2092992   +else do;
MPRINT(EM_DIAGRAM):   else do;
2092993   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2092994   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2092995   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2092996   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2092997   +      _4_0 = 1;
MPRINT(EM_DIAGRAM):   _4_0 = 1;
2092998   +   end;
MPRINT(EM_DIAGRAM):   end;
2092999   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2093000   +      _4_0 = -1;
MPRINT(EM_DIAGRAM):   _4_0 = -1;
2093001   +   end;
MPRINT(EM_DIAGRAM):   end;
2093002   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2093003   +      _4_0 = .;
MPRINT(EM_DIAGRAM):   _4_0 = .;
2093004   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2093005   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2093006   +   end;
MPRINT(EM_DIAGRAM):   end;
2093007   +end;
MPRINT(EM_DIAGRAM):   end;
2093008   +
2093009   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2093010   +drop _5_0 ;
MPRINT(EM_DIAGRAM):   drop _5_0 ;
2093011   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2093012   +   _5_0 = .;
MPRINT(EM_DIAGRAM):   _5_0 = .;
2093013   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2093014   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2093015   +end;
MPRINT(EM_DIAGRAM):   end;
2093016   +else do;
MPRINT(EM_DIAGRAM):   else do;
2093017   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2093018   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2093019   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2093020   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2093021   +      _5_0 = 1;
MPRINT(EM_DIAGRAM):   _5_0 = 1;
2093022   +   end;
MPRINT(EM_DIAGRAM):   end;
2093023   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2093024   +      _5_0 = -1;
MPRINT(EM_DIAGRAM):   _5_0 = -1;
2093025   +   end;
MPRINT(EM_DIAGRAM):   end;
2093026   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2093027   +      _5_0 = .;
MPRINT(EM_DIAGRAM):   _5_0 = .;
2093028   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2093029   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2093030   +   end;
MPRINT(EM_DIAGRAM):   end;
2093031   +end;
MPRINT(EM_DIAGRAM):   end;
2093032   +
2093033   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2093034   +drop _8_0 _8_1 _8_2 _8_3 ;
MPRINT(EM_DIAGRAM):   drop _8_0 _8_1 _8_2 _8_3 ;
2093035   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2093036   +_8_0 = 0;
MPRINT(EM_DIAGRAM):   _8_0 = 0;
2093037   +_8_1 = 0;
MPRINT(EM_DIAGRAM):   _8_1 = 0;
2093038   +_8_2 = 0;
MPRINT(EM_DIAGRAM):   _8_2 = 0;
2093039   +_8_3 = 0;
MPRINT(EM_DIAGRAM):   _8_3 = 0;
2093040   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2093041   +   _8_0 = .;
MPRINT(EM_DIAGRAM):   _8_0 = .;
2093042   +   _8_1 = .;
MPRINT(EM_DIAGRAM):   _8_1 = .;
2093043   +   _8_2 = .;
MPRINT(EM_DIAGRAM):   _8_2 = .;
2093044   +   _8_3 = .;
MPRINT(EM_DIAGRAM):   _8_3 = .;
2093045   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2093046   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2093047   +end;
MPRINT(EM_DIAGRAM):   end;
2093048   +else do;
MPRINT(EM_DIAGRAM):   else do;
2093049   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2093050   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2093051   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2093052   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2093053   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2093054   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2093055   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2093056   +            _8_0 = 1;
MPRINT(EM_DIAGRAM):   _8_0 = 1;
2093057   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2093058   +         end;
MPRINT(EM_DIAGRAM):   end;
2093059   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2093060   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2093061   +               _8_1 = 1;
MPRINT(EM_DIAGRAM):   _8_1 = 1;
2093062   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2093063   +            end;
MPRINT(EM_DIAGRAM):   end;
2093064   +         end;
MPRINT(EM_DIAGRAM):   end;
2093065   +      end;
MPRINT(EM_DIAGRAM):   end;
2093066   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2093067   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2093068   +            _8_2 = 1;
MPRINT(EM_DIAGRAM):   _8_2 = 1;
2093069   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2093070   +         end;
MPRINT(EM_DIAGRAM):   end;
2093071   +      end;
MPRINT(EM_DIAGRAM):   end;
2093072   +   end;
MPRINT(EM_DIAGRAM):   end;
2093073   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2093074   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2093075   +         _8_3 = 1;
MPRINT(EM_DIAGRAM):   _8_3 = 1;
2093076   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2093077   +      end;
MPRINT(EM_DIAGRAM):   end;
2093078   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2093079   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2093080   +            _8_0 = -1;
MPRINT(EM_DIAGRAM):   _8_0 = -1;
2093081   +            _8_1 = -1;
MPRINT(EM_DIAGRAM):   _8_1 = -1;
2093082   +            _8_2 = -1;
MPRINT(EM_DIAGRAM):   _8_2 = -1;
2093083   +            _8_3 = -1;
MPRINT(EM_DIAGRAM):   _8_3 = -1;
2093084   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2093085   +         end;
MPRINT(EM_DIAGRAM):   end;
2093086   +      end;
MPRINT(EM_DIAGRAM):   end;
2093087   +   end;
MPRINT(EM_DIAGRAM):   end;
2093088   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2093089   +      _8_0 = .;
MPRINT(EM_DIAGRAM):   _8_0 = .;
2093090   +      _8_1 = .;
MPRINT(EM_DIAGRAM):   _8_1 = .;
2093091   +      _8_2 = .;
MPRINT(EM_DIAGRAM):   _8_2 = .;
2093092   +      _8_3 = .;
MPRINT(EM_DIAGRAM):   _8_3 = .;
2093093   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2093094   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2093095   +   end;
MPRINT(EM_DIAGRAM):   end;
2093096   +end;
MPRINT(EM_DIAGRAM):   end;
2093097   +
2093098   +*** If missing inputs, use averages;
MPRINT(EM_DIAGRAM):   *** If missing inputs, use averages;
2093099   +if _DM_BAD > 0 then do;
MPRINT(EM_DIAGRAM):   if _DM_BAD > 0 then do;
2093100   +   _P0 = 0.151221567;
MPRINT(EM_DIAGRAM):   _P0 = 0.151221567;
2093101   +   _P1 = 0.848778433;
MPRINT(EM_DIAGRAM):   _P1 = 0.848778433;
2093102   +   goto REG10DR1;
MPRINT(EM_DIAGRAM):   goto REG10DR1;
2093103   +end;
MPRINT(EM_DIAGRAM):   end;
2093104   +
2093105   +*** Compute Linear Predictor;
MPRINT(EM_DIAGRAM):   *** Compute Linear Predictor;
2093106   +drop _TEMP;
MPRINT(EM_DIAGRAM):   drop _TEMP;
2093107   +drop _LP0;
MPRINT(EM_DIAGRAM):   drop _LP0;
2093108   +_LP0 = 0;
MPRINT(EM_DIAGRAM):   _LP0 = 0;
2093109   +
2093110   +***  Effect: AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Effect: AcceptedCmp1 ;
2093111   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
2093112   +_LP0 = _LP0 + (   -0.71107732112007) * _TEMP * _1_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.71107732112007) * _TEMP * _1_0;
2093113   +
2093114   +***  Effect: AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Effect: AcceptedCmp2 ;
2093115   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
2093116   +_LP0 = _LP0 + (   -0.81763295180983) * _TEMP * _2_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.81763295180983) * _TEMP * _2_0;
2093117   +
2093118   +***  Effect: AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Effect: AcceptedCmp3 ;
2093119   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
2093120   +_LP0 = _LP0 + (    -0.8618538514738) * _TEMP * _3_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.8618538514738) * _TEMP * _3_0;
2093121   +
2093122   +***  Effect: AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Effect: AcceptedCmp4 ;
2093123   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
2093124   +_LP0 = _LP0 + (   -0.64997710050937) * _TEMP * _4_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.64997710050937) * _TEMP * _4_0;
2093125   +
2093126   +***  Effect: AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Effect: AcceptedCmp5 ;
2093127   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
2093128   +_LP0 = _LP0 + (   -0.91699409369659) * _TEMP * _5_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.91699409369659) * _TEMP * _5_0;
2093129   +
2093130   +***  Effect: Income ;
MPRINT(EM_DIAGRAM):   *** Effect: Income ;
2093131   +_TEMP = Income ;
MPRINT(EM_DIAGRAM):   _TEMP = Income ;
2093132   +_LP0 = _LP0 + (    0.00003628120307 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00003628120307 * _TEMP);
2093133   +
2093134   +***  Effect: Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Effect: Marital_Status ;
2093135   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
2093136   +_LP0 = _LP0 + (    0.09345382071006) * _TEMP * _8_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.09345382071006) * _TEMP * _8_0;
2093137   +_LP0 = _LP0 + (   -0.47894059934485) * _TEMP * _8_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.47894059934485) * _TEMP * _8_1;
2093138   +_LP0 = _LP0 + (    0.46164092141221) * _TEMP * _8_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.46164092141221) * _TEMP * _8_2;
2093139   +_LP0 = _LP0 + (    -0.5078574429985) * _TEMP * _8_3;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.5078574429985) * _TEMP * _8_3;
2093140   +
2093141   +***  Effect: MntFishProducts ;
MPRINT(EM_DIAGRAM):   *** Effect: MntFishProducts ;
2093142   +_TEMP = MntFishProducts ;
MPRINT(EM_DIAGRAM):   _TEMP = MntFishProducts ;
2093143   +_LP0 = _LP0 + (   -0.00285470778488 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.00285470778488 * _TEMP);
2093144   +
2093145   +***  Effect: MntFruits ;
MPRINT(EM_DIAGRAM):   *** Effect: MntFruits ;
2093146   +_TEMP = MntFruits ;
MPRINT(EM_DIAGRAM):   _TEMP = MntFruits ;
2093147   +_LP0 = _LP0 + (   -0.00481548089585 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.00481548089585 * _TEMP);
2093148   +
2093149   +***  Effect: MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Effect: MntMeatProducts ;
2093150   +_TEMP = MntMeatProducts ;
MPRINT(EM_DIAGRAM):   _TEMP = MntMeatProducts ;
2093151   +_LP0 = _LP0 + (    0.00485302069895 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00485302069895 * _TEMP);
2093152   +
2093153   +***  Effect: MntWines ;
MPRINT(EM_DIAGRAM):   *** Effect: MntWines ;
2093154   +_TEMP = MntWines ;
MPRINT(EM_DIAGRAM):   _TEMP = MntWines ;
2093155   +_LP0 = _LP0 + (   -0.00184060065513 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.00184060065513 * _TEMP);
2093156   +
2093157   +***  Effect: NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumCatalogPurchases ;
2093158   +_TEMP = NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumCatalogPurchases ;
2093159   +_LP0 = _LP0 + (    0.40015202354101 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.40015202354101 * _TEMP);
2093160   +
2093161   +***  Effect: NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumDealsPurchases ;
2093162   +_TEMP = NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumDealsPurchases ;
2093163   +_LP0 = _LP0 + (    0.39526484909287 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.39526484909287 * _TEMP);
2093164   +
2093165   +***  Effect: NumStorePurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumStorePurchases ;
2093166   +_TEMP = NumStorePurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumStorePurchases ;
2093167   +_LP0 = _LP0 + (   -0.21400418800044 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.21400418800044 * _TEMP);
2093168   +
2093169   +***  Effect: NumWebPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumWebPurchases ;
2093170   +_TEMP = NumWebPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumWebPurchases ;
2093171   +_LP0 = _LP0 + (    -0.2223953481686 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.2223953481686 * _TEMP);
2093172   +
2093173   +***  Effect: NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   *** Effect: NumWebVisitsMonth ;
2093174   +_TEMP = NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   _TEMP = NumWebVisitsMonth ;
2093175   +_LP0 = _LP0 + (    0.54388363089232 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.54388363089232 * _TEMP);
2093176   +
2093177   +***  Effect: Recency ;
MPRINT(EM_DIAGRAM):   *** Effect: Recency ;
2093178   +_TEMP = Recency ;
MPRINT(EM_DIAGRAM):   _TEMP = Recency ;
2093179   +_LP0 = _LP0 + (   -0.05513564922633 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.05513564922633 * _TEMP);
2093180   +
2093181   +***  Effect: Teenhome ;
MPRINT(EM_DIAGRAM):   *** Effect: Teenhome ;
2093182   +_TEMP = Teenhome ;
MPRINT(EM_DIAGRAM):   _TEMP = Teenhome ;
2093183   +_LP0 = _LP0 + (   -0.70674092258187 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.70674092258187 * _TEMP);
2093184   +
2093185   +*** Naive Posterior Probabilities;
MPRINT(EM_DIAGRAM):   *** Naive Posterior Probabilities;
2093186   +drop _MAXP _IY _P0 _P1;
MPRINT(EM_DIAGRAM):   drop _MAXP _IY _P0 _P1;
2093187   +_P0 = probnorm((   -0.62163391257391) + _LP0);
MPRINT(EM_DIAGRAM):   _P0 = probnorm(( -0.62163391257391) + _LP0);
2093188   +_P1 = 1.0 - _P0;
MPRINT(EM_DIAGRAM):   _P1 = 1.0 - _P0;
2093189   +
2093190   +REG10DR1:
2093191   +
2093192   +
2093193   +*** Posterior Probabilities and Predicted Level;
MPRINT(EM_DIAGRAM):   REG10DR1: *** Posterior Probabilities and Predicted Level;
2093194   +label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2093195   +label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2093196   +P_DepVar1 = _P0;
MPRINT(EM_DIAGRAM):   P_DepVar1 = _P0;
2093197   +_MAXP = _P0;
MPRINT(EM_DIAGRAM):   _MAXP = _P0;
2093198   +_IY = 1;
MPRINT(EM_DIAGRAM):   _IY = 1;
2093199   +P_DepVar0 = _P1;
MPRINT(EM_DIAGRAM):   P_DepVar0 = _P1;
2093200   +if (_P1 >  _MAXP + 1E-8) then do;
MPRINT(EM_DIAGRAM):   if (_P1 > _MAXP + 1E-8) then do;
2093201   +   _MAXP = _P1;
MPRINT(EM_DIAGRAM):   _MAXP = _P1;
2093202   +   _IY = 2;
MPRINT(EM_DIAGRAM):   _IY = 2;
2093203   +end;
MPRINT(EM_DIAGRAM):   end;
2093204   +I_DepVar = REG10DRF[_IY];
MPRINT(EM_DIAGRAM):   I_DepVar = REG10DRF[_IY];
2093205   +U_DepVar = REG10DRU[_IY];
MPRINT(EM_DIAGRAM):   U_DepVar = REG10DRU[_IY];
2093206   +
2093207   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
2093208   +***** end scoring code for regression;
MPRINT(EM_DIAGRAM):   ***** end scoring code for regression;
2093209   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2093210    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2093211    quit;
2093212    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2093213    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2093214    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2093215    retain ID 2 Node "Reg10";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Reg10";
2093216    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2093217    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 461 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 461 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2093218    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2093219    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2093220    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 461 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 461 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2093221    proc sort data=EMWS8.Reg10_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Reg10_variableset out=_temp2(keep=NAME CREATOR);
2093222    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2093223    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.REG10_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2093224    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2093225    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2093226    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2093227    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2093228    proc contents data=EMWS8.Reg10_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Reg10_train out=_meta(keep=NAME) noprint;
2093229    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

2093230    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2093231    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2093232    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 53 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2093233    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2093234    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2093235    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2093236    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 53 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2093237    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2093238    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2093238  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 264 rows and 5 columns.

2093239    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2093240    proc append base=EMWS8.Ensmbl9_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl9_FCMP data=_tempx;
2093241    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL9_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 264 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL9_FCMP has 264 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2093242    filename _pref
2093242  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
2093243    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2093244    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
2093245   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2093246   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
2093247   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2093248   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
2093249   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
2093250   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2093251    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2093252    quit;
2093253    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2093254    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2093255    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2093256    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
2093257    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2093258    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2093259    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2093260    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2093261    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2093262    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
2093263    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2093264    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2093265    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2093266    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2093267    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2093268    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2093269    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
2093270    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

2093271    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2093272    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2093273    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2093274    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2093275    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2093276    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2093277    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2093278    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2093279    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2093279  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

2093280    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2093281    proc append base=EMWS8.Ensmbl9_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl9_FCMP data=_tempx;
2093282    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL9_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL9_FCMP has 268 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2093283    filename _pref
2093283  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
2093284    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2093285    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
2093286   +
2093287   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
2093288   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
2093288  !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
2093289   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
2093290   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
2093291   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
2093292   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
2093293   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2093294    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2093295    quit;
2093296    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2093297    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2093298    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2093299    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
2093300    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2093301    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2093302    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2093303    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2093304    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2093305    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
2093306    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2093307    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2093308    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2093309    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2093310    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2093311    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2093312    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
2093313    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2093314    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2093315    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2093316    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2093317    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2093318    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2093319    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2093320    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2093321    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2093322    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2093322  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

2093323    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2093324    proc append base=EMWS8.Ensmbl9_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl9_FCMP data=_tempx;
2093325    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL9_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL9_FCMP has 307 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2093326    filename _pref
2093326  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
2093327    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2093328    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
2093329   +
2093330   +
2093331   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
2093332   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
2093333   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
2093334   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
2093335   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
2093336   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2093337   +
2093338   +
2093339   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
2093340   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
2093341   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
2093342   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
2093343   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
2093344   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2093345   +
2093346   +
2093347   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
2093348   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
2093349   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
2093350   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
2093351   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
2093352   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2093353   +
2093354   +
2093355   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
2093356   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
2093357   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
2093358   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
2093359   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
2093360   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2093361   +
2093362   +
2093363   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
2093364   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
2093365   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
2093366   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
2093367   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
2093368   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2093369   +
2093370   +
2093371   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
2093372   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
2093373   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
2093374   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
2093375   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
2093376   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2093377   +
2093378   +
2093379   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
2093380   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
2093381   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
2093382   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
2093383   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
2093384   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2093385   +
2093386   +
2093387   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
2093388   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
2093389   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
2093390   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
2093391   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
2093392   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2093393   +if
2093394   +_FILTERNORM1 not in ( '.')
2093395   + and
2093396   +_FILTERNORM2 not in ( '.')
2093397   + and
2093398   +_FILTERNORM3 not in ( '.')
2093399   + and
2093400   +_FILTERNORM4 not in ( '.')
2093401   + and
2093402   +_FILTERNORM5 not in ( '.')
2093403   + and
2093404   +_FILTERNORM6 not in ( '.')
2093405   + and
2093406   +_FILTERNORM7 not in ( ' ')
2093407   + and
2093408   +_FILTERNORM8 not in ( ' ')
2093409   +and
2093410   +( Dt_Customer ne .)
2093411   +and ( Income ne . and (Income<=107000))
2093412   +and ( Kidhome ne .)
2093413   +and ( MntFishProducts ne .)
2093414   +and ( MntFruits ne .)
2093415   +and ( MntGoldProds ne .)
2093416   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
2093417   +and ( MntSweetProducts ne .)
2093418   +and ( MntWines ne .)
2093419   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
2093420   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
2093421   +and ( NumStorePurchases ne .)
2093422   +and ( NumWebPurchases ne .)
2093423   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
2093424   +and ( Recency ne .)
2093425   +and ( Teenhome ne .)
2093426   +and ( Year_Birth ne .)
2093427   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
2093428   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
2093429   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
2093430   +end;
MPRINT(EM_DIAGRAM):   end;
2093431   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
2093432   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2093433    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2093434    quit;
2093435    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2093436    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2093437    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2093438    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
2093439    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2093440    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2093441    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2093442    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2093443    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2093444    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
2093445    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2093446    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2093447    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2093448    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2093449    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2093450    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2093451    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
2093452    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

2093453    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2093454    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2093455    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2093456    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2093457    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2093458    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2093459    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2093460    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2093461    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2093461  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

2093462    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2093463    proc append base=EMWS8.Ensmbl9_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl9_FCMP data=_tempx;
2093464    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL9_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL9_FCMP has 373 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2093465    %macro varDept(fcmpdata=,id=);
2093466    %global nobs&id scoreFlag&id;
2093467    %let scoreFlag&id = 0;
2093468    %if &id=1 or ^&fcmpStart %then %do;
2093469    proc sort data=&fcmpdata out=_temp&id nodupkey;
2093470    by NAME;
2093471    where id=&id and LHS in( %let j=1;
2093472    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
2093473    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
2093474    "&var" %let j = %eval(&j+1);
2093475    %end;
2093476    );
2093477    run;
2093478    %let dsid = %sysfunc(open(_temp&id));
2093479    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2093480    %let dsid = %sysfunc(close(&dsid));
2093481    %if &&nobs&id %then %do;
2093482    %let scoreFlag&id = 1;
2093483    %let fcmpStart = 1;
2093484    %end;
2093485    %else %let fcmpStart = 0;
2093486    %end;
2093487    %else %do;
2093488    proc sort data=&fcmpdata out=_tempid;
2093489    where id=&id;
2093490    by LHS;
2093491    run;
2093492    %let dsid = %sysfunc(open(_tempid));
2093493    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2093494    %let dsid = %sysfunc(close(&dsid));
2093495    %if ^&&nobs&id %then %do;
2093496    proc datasets lib=work nolist;
2093497    delete _tempid;
2093498    run;
2093499    quit;
2093500    %end;
2093501    %else %do;
2093502    data _tempAll;
2093503    set %let j=%eval(&id-1);
2093504    %do x=1 %to &j;
2093505    %if &&nobs&x %then %do;
2093506    _temp&x %end;
2093507    %end;
2093508    ;
2093509    run;
2093510    proc sql;
2093511    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
2093511  ! work._tempid p2 where p.name=p2.lhs;
2093512    quit;
2093513    data _temp&id;
2093514    set _temp&id;
2093515    where LHS ne '' and NAME ne '' and Node ne '';
2093516    run;
2093517    proc datasets lib=work nolist;
2093518    delete _tempAll;
2093519    run;
2093520    %let dsid = %sysfunc(open(_temp&id));
2093521    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2093522    %let dsid = %sysfunc(close(&dsid));
2093523    %if ^&&nobs&id %then %do;
2093524    proc datasets lib=work nolist;
2093525    delete _temp&id;
2093526    run;
2093527    quit;
2093528    %end;
2093529    %else %do;
2093530    %let scoreFlag&id = 1;
2093531    data _temp&id;
2093532    set _temp&id;
2093533    where LHS ne NAME and node ne '';
2093534    run;
2093535    %let dsid = %sysfunc(open(_temp&id));
2093536    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2093537    %let dsid = %sysfunc(close(&dsid));
2093538    %if ^&&nobs&id %then %do;
2093539    proc datasets lib=work nolist;
2093540    delete _temp&id;
2093541    run;
2093542    quit;
2093543    %end;
2093544    %else %do;
2093545    proc sort data=_temp&id nodupkey;
2093546    by LHS NAME;
2093547    run;
2093548    %end;
2093549    %end;
2093550    %end;
2093551    %end;
2093552    %mend varDept;
2093553    %macro optCode(outdata=fcmpdata);
2093554    %global fcmpStart;
2093555    %let fcmpStart = 0;
2093556    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
2093557    %let NumNodes=9;
2093558    %do k=1 %to &NumNodes;
2093559    %vardept(fcmpdata=&outdata, id=&k);
2093560    %end;
2093561    %mend optCode;
2093562    %optcode(outData=EMWS8.Ensmbl9_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl9_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL9_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl9_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 72 observations read from the data set EMWS8.ENSMBL9_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 54 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 18 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl9_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL9_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl9_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL9_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl9_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL9_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 18 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 18 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp5;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP5 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl9_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL9_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 18 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 18 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp6;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP6 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl9_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL9_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 18 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 18 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl9_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL9_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl9_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL9_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

2093563    filename _pref
2093563  ! "C:\\predictive-models-project\Workspaces\EMWS8\Reg9\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Reg9\EMPUBLISHSCORE.sas";
2093564    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2093565    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Reg9\EMPUBLISHSCORE.sas.
2093566   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
2093567   +*** begin scoring code for regression;
MPRINT(EM_DIAGRAM):   *** begin scoring code for regression;
2093568   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
2093569   +
2093570   +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
2093571   +label _WARN_ = 'Warnings' ;
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings' ;
2093572   +
2093573   +length I_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length I_DepVar $ 12;
2093574   +label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2093575   +*** Target Values;
MPRINT(EM_DIAGRAM):   *** Target Values;
2093576   +array REG9DRF [2] $12 _temporary_ ('1' '0' );
MPRINT(EM_DIAGRAM):   array REG9DRF [2] $12 _temporary_ ('1' '0' );
2093577   +label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2093578   +format U_DepVar BEST.;
MPRINT(EM_DIAGRAM):   format U_DepVar BEST.;
2093579   +*** Unnormalized target values;
MPRINT(EM_DIAGRAM):   *** Unnormalized target values;
2093580   +ARRAY REG9DRU[2]  _TEMPORARY_ (1 0);
MPRINT(EM_DIAGRAM):   ARRAY REG9DRU[2] _TEMPORARY_ (1 0);
2093581   +
2093582   +drop _DM_BAD;
MPRINT(EM_DIAGRAM):   drop _DM_BAD;
2093583   +_DM_BAD=0;
MPRINT(EM_DIAGRAM):   _DM_BAD=0;
2093584   +
2093585   +*** Check Income for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Income for missing values ;
2093586   +if missing( Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( Income ) then do;
2093587   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2093588   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2093589   +end;
MPRINT(EM_DIAGRAM):   end;
2093590   +
2093591   +*** Check MntFishProducts for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntFishProducts for missing values ;
2093592   +if missing( MntFishProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntFishProducts ) then do;
2093593   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2093594   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2093595   +end;
MPRINT(EM_DIAGRAM):   end;
2093596   +
2093597   +*** Check MntFruits for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntFruits for missing values ;
2093598   +if missing( MntFruits ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntFruits ) then do;
2093599   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2093600   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2093601   +end;
MPRINT(EM_DIAGRAM):   end;
2093602   +
2093603   +*** Check MntMeatProducts for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntMeatProducts for missing values ;
2093604   +if missing( MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntMeatProducts ) then do;
2093605   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2093606   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2093607   +end;
MPRINT(EM_DIAGRAM):   end;
2093608   +
2093609   +*** Check MntWines for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntWines for missing values ;
2093610   +if missing( MntWines ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntWines ) then do;
2093611   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2093612   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2093613   +end;
MPRINT(EM_DIAGRAM):   end;
2093614   +
2093615   +*** Check NumCatalogPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumCatalogPurchases for missing values ;
2093616   +if missing( NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumCatalogPurchases ) then do;
2093617   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2093618   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2093619   +end;
MPRINT(EM_DIAGRAM):   end;
2093620   +
2093621   +*** Check NumDealsPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumDealsPurchases for missing values ;
2093622   +if missing( NumDealsPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumDealsPurchases ) then do;
2093623   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2093624   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2093625   +end;
MPRINT(EM_DIAGRAM):   end;
2093626   +
2093627   +*** Check NumStorePurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumStorePurchases for missing values ;
2093628   +if missing( NumStorePurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumStorePurchases ) then do;
2093629   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2093630   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2093631   +end;
MPRINT(EM_DIAGRAM):   end;
2093632   +
2093633   +*** Check NumWebPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumWebPurchases for missing values ;
2093634   +if missing( NumWebPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumWebPurchases ) then do;
2093635   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2093636   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2093637   +end;
MPRINT(EM_DIAGRAM):   end;
2093638   +
2093639   +*** Check NumWebVisitsMonth for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumWebVisitsMonth for missing values ;
2093640   +if missing( NumWebVisitsMonth ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumWebVisitsMonth ) then do;
2093641   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2093642   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2093643   +end;
MPRINT(EM_DIAGRAM):   end;
2093644   +
2093645   +*** Check Recency for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Recency for missing values ;
2093646   +if missing( Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( Recency ) then do;
2093647   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2093648   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2093649   +end;
MPRINT(EM_DIAGRAM):   end;
2093650   +
2093651   +*** Check Teenhome for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Teenhome for missing values ;
2093652   +if missing( Teenhome ) then do;
MPRINT(EM_DIAGRAM):   if missing( Teenhome ) then do;
2093653   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2093654   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2093655   +end;
MPRINT(EM_DIAGRAM):   end;
2093656   +
2093657   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2093658   +drop _1_0 ;
MPRINT(EM_DIAGRAM):   drop _1_0 ;
2093659   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2093660   +   _1_0 = .;
MPRINT(EM_DIAGRAM):   _1_0 = .;
2093661   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2093662   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2093663   +end;
MPRINT(EM_DIAGRAM):   end;
2093664   +else do;
MPRINT(EM_DIAGRAM):   else do;
2093665   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2093666   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2093667   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2093668   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2093669   +      _1_0 = 1;
MPRINT(EM_DIAGRAM):   _1_0 = 1;
2093670   +   end;
MPRINT(EM_DIAGRAM):   end;
2093671   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2093672   +      _1_0 = -1;
MPRINT(EM_DIAGRAM):   _1_0 = -1;
2093673   +   end;
MPRINT(EM_DIAGRAM):   end;
2093674   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2093675   +      _1_0 = .;
MPRINT(EM_DIAGRAM):   _1_0 = .;
2093676   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2093677   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2093678   +   end;
MPRINT(EM_DIAGRAM):   end;
2093679   +end;
MPRINT(EM_DIAGRAM):   end;
2093680   +
2093681   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2093682   +drop _2_0 ;
MPRINT(EM_DIAGRAM):   drop _2_0 ;
2093683   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2093684   +   _2_0 = .;
MPRINT(EM_DIAGRAM):   _2_0 = .;
2093685   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2093686   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2093687   +end;
MPRINT(EM_DIAGRAM):   end;
2093688   +else do;
MPRINT(EM_DIAGRAM):   else do;
2093689   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2093690   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2093691   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2093692   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2093693   +      _2_0 = 1;
MPRINT(EM_DIAGRAM):   _2_0 = 1;
2093694   +   end;
MPRINT(EM_DIAGRAM):   end;
2093695   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2093696   +      _2_0 = -1;
MPRINT(EM_DIAGRAM):   _2_0 = -1;
2093697   +   end;
MPRINT(EM_DIAGRAM):   end;
2093698   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2093699   +      _2_0 = .;
MPRINT(EM_DIAGRAM):   _2_0 = .;
2093700   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2093701   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2093702   +   end;
MPRINT(EM_DIAGRAM):   end;
2093703   +end;
MPRINT(EM_DIAGRAM):   end;
2093704   +
2093705   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2093706   +drop _3_0 ;
MPRINT(EM_DIAGRAM):   drop _3_0 ;
2093707   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2093708   +   _3_0 = .;
MPRINT(EM_DIAGRAM):   _3_0 = .;
2093709   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2093710   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2093711   +end;
MPRINT(EM_DIAGRAM):   end;
2093712   +else do;
MPRINT(EM_DIAGRAM):   else do;
2093713   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2093714   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2093715   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2093716   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2093717   +      _3_0 = 1;
MPRINT(EM_DIAGRAM):   _3_0 = 1;
2093718   +   end;
MPRINT(EM_DIAGRAM):   end;
2093719   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2093720   +      _3_0 = -1;
MPRINT(EM_DIAGRAM):   _3_0 = -1;
2093721   +   end;
MPRINT(EM_DIAGRAM):   end;
2093722   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2093723   +      _3_0 = .;
MPRINT(EM_DIAGRAM):   _3_0 = .;
2093724   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2093725   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2093726   +   end;
MPRINT(EM_DIAGRAM):   end;
2093727   +end;
MPRINT(EM_DIAGRAM):   end;
2093728   +
2093729   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2093730   +drop _4_0 ;
MPRINT(EM_DIAGRAM):   drop _4_0 ;
2093731   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2093732   +   _4_0 = .;
MPRINT(EM_DIAGRAM):   _4_0 = .;
2093733   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2093734   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2093735   +end;
MPRINT(EM_DIAGRAM):   end;
2093736   +else do;
MPRINT(EM_DIAGRAM):   else do;
2093737   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2093738   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2093739   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2093740   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2093741   +      _4_0 = 1;
MPRINT(EM_DIAGRAM):   _4_0 = 1;
2093742   +   end;
MPRINT(EM_DIAGRAM):   end;
2093743   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2093744   +      _4_0 = -1;
MPRINT(EM_DIAGRAM):   _4_0 = -1;
2093745   +   end;
MPRINT(EM_DIAGRAM):   end;
2093746   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2093747   +      _4_0 = .;
MPRINT(EM_DIAGRAM):   _4_0 = .;
2093748   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2093749   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2093750   +   end;
MPRINT(EM_DIAGRAM):   end;
2093751   +end;
MPRINT(EM_DIAGRAM):   end;
2093752   +
2093753   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2093754   +drop _5_0 ;
MPRINT(EM_DIAGRAM):   drop _5_0 ;
2093755   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2093756   +   _5_0 = .;
MPRINT(EM_DIAGRAM):   _5_0 = .;
2093757   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2093758   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2093759   +end;
MPRINT(EM_DIAGRAM):   end;
2093760   +else do;
MPRINT(EM_DIAGRAM):   else do;
2093761   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2093762   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2093763   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2093764   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2093765   +      _5_0 = 1;
MPRINT(EM_DIAGRAM):   _5_0 = 1;
2093766   +   end;
MPRINT(EM_DIAGRAM):   end;
2093767   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2093768   +      _5_0 = -1;
MPRINT(EM_DIAGRAM):   _5_0 = -1;
2093769   +   end;
MPRINT(EM_DIAGRAM):   end;
2093770   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2093771   +      _5_0 = .;
MPRINT(EM_DIAGRAM):   _5_0 = .;
2093772   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2093773   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2093774   +   end;
MPRINT(EM_DIAGRAM):   end;
2093775   +end;
MPRINT(EM_DIAGRAM):   end;
2093776   +
2093777   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2093778   +drop _8_0 _8_1 _8_2 _8_3 ;
MPRINT(EM_DIAGRAM):   drop _8_0 _8_1 _8_2 _8_3 ;
2093779   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2093780   +_8_0 = 0;
MPRINT(EM_DIAGRAM):   _8_0 = 0;
2093781   +_8_1 = 0;
MPRINT(EM_DIAGRAM):   _8_1 = 0;
2093782   +_8_2 = 0;
MPRINT(EM_DIAGRAM):   _8_2 = 0;
2093783   +_8_3 = 0;
MPRINT(EM_DIAGRAM):   _8_3 = 0;
2093784   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2093785   +   _8_0 = .;
MPRINT(EM_DIAGRAM):   _8_0 = .;
2093786   +   _8_1 = .;
MPRINT(EM_DIAGRAM):   _8_1 = .;
2093787   +   _8_2 = .;
MPRINT(EM_DIAGRAM):   _8_2 = .;
2093788   +   _8_3 = .;
MPRINT(EM_DIAGRAM):   _8_3 = .;
2093789   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2093790   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2093791   +end;
MPRINT(EM_DIAGRAM):   end;
2093792   +else do;
MPRINT(EM_DIAGRAM):   else do;
2093793   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2093794   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2093795   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2093796   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2093797   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2093798   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2093799   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2093800   +            _8_0 = 1;
MPRINT(EM_DIAGRAM):   _8_0 = 1;
2093801   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2093802   +         end;
MPRINT(EM_DIAGRAM):   end;
2093803   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2093804   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2093805   +               _8_1 = 1;
MPRINT(EM_DIAGRAM):   _8_1 = 1;
2093806   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2093807   +            end;
MPRINT(EM_DIAGRAM):   end;
2093808   +         end;
MPRINT(EM_DIAGRAM):   end;
2093809   +      end;
MPRINT(EM_DIAGRAM):   end;
2093810   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2093811   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2093812   +            _8_2 = 1;
MPRINT(EM_DIAGRAM):   _8_2 = 1;
2093813   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2093814   +         end;
MPRINT(EM_DIAGRAM):   end;
2093815   +      end;
MPRINT(EM_DIAGRAM):   end;
2093816   +   end;
MPRINT(EM_DIAGRAM):   end;
2093817   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2093818   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2093819   +         _8_3 = 1;
MPRINT(EM_DIAGRAM):   _8_3 = 1;
2093820   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2093821   +      end;
MPRINT(EM_DIAGRAM):   end;
2093822   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2093823   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2093824   +            _8_0 = -1;
MPRINT(EM_DIAGRAM):   _8_0 = -1;
2093825   +            _8_1 = -1;
MPRINT(EM_DIAGRAM):   _8_1 = -1;
2093826   +            _8_2 = -1;
MPRINT(EM_DIAGRAM):   _8_2 = -1;
2093827   +            _8_3 = -1;
MPRINT(EM_DIAGRAM):   _8_3 = -1;
2093828   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2093829   +         end;
MPRINT(EM_DIAGRAM):   end;
2093830   +      end;
MPRINT(EM_DIAGRAM):   end;
2093831   +   end;
MPRINT(EM_DIAGRAM):   end;
2093832   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2093833   +      _8_0 = .;
MPRINT(EM_DIAGRAM):   _8_0 = .;
2093834   +      _8_1 = .;
MPRINT(EM_DIAGRAM):   _8_1 = .;
2093835   +      _8_2 = .;
MPRINT(EM_DIAGRAM):   _8_2 = .;
2093836   +      _8_3 = .;
MPRINT(EM_DIAGRAM):   _8_3 = .;
2093837   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2093838   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2093839   +   end;
MPRINT(EM_DIAGRAM):   end;
2093840   +end;
MPRINT(EM_DIAGRAM):   end;
2093841   +
2093842   +*** If missing inputs, use averages;
MPRINT(EM_DIAGRAM):   *** If missing inputs, use averages;
2093843   +if _DM_BAD > 0 then do;
MPRINT(EM_DIAGRAM):   if _DM_BAD > 0 then do;
2093844   +   _P0 = 0.151221567;
MPRINT(EM_DIAGRAM):   _P0 = 0.151221567;
2093845   +   _P1 = 0.848778433;
MPRINT(EM_DIAGRAM):   _P1 = 0.848778433;
2093846   +   goto REG9DR1;
MPRINT(EM_DIAGRAM):   goto REG9DR1;
2093847   +end;
MPRINT(EM_DIAGRAM):   end;
2093848   +
2093849   +*** Compute Linear Predictor;
MPRINT(EM_DIAGRAM):   *** Compute Linear Predictor;
2093850   +drop _TEMP;
MPRINT(EM_DIAGRAM):   drop _TEMP;
2093851   +drop _LP0;
MPRINT(EM_DIAGRAM):   drop _LP0;
2093852   +_LP0 = 0;
MPRINT(EM_DIAGRAM):   _LP0 = 0;
2093853   +
2093854   +***  Effect: AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Effect: AcceptedCmp1 ;
2093855   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
2093856   +_LP0 = _LP0 + (   -1.28114872833376) * _TEMP * _1_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.28114872833376) * _TEMP * _1_0;
2093857   +
2093858   +***  Effect: AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Effect: AcceptedCmp2 ;
2093859   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
2093860   +_LP0 = _LP0 + (    -1.4871451186069) * _TEMP * _2_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.4871451186069) * _TEMP * _2_0;
2093861   +
2093862   +***  Effect: AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Effect: AcceptedCmp3 ;
2093863   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
2093864   +_LP0 = _LP0 + (   -1.58721567367346) * _TEMP * _3_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.58721567367346) * _TEMP * _3_0;
2093865   +
2093866   +***  Effect: AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Effect: AcceptedCmp4 ;
2093867   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
2093868   +_LP0 = _LP0 + (    -1.1573037622615) * _TEMP * _4_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.1573037622615) * _TEMP * _4_0;
2093869   +
2093870   +***  Effect: AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Effect: AcceptedCmp5 ;
2093871   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
2093872   +_LP0 = _LP0 + (   -1.68835129992038) * _TEMP * _5_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.68835129992038) * _TEMP * _5_0;
2093873   +
2093874   +***  Effect: Income ;
MPRINT(EM_DIAGRAM):   *** Effect: Income ;
2093875   +_TEMP = Income ;
MPRINT(EM_DIAGRAM):   _TEMP = Income ;
2093876   +_LP0 = _LP0 + (    0.00006770818936 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00006770818936 * _TEMP);
2093877   +
2093878   +***  Effect: Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Effect: Marital_Status ;
2093879   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
2093880   +_LP0 = _LP0 + (    0.18351716765826) * _TEMP * _8_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.18351716765826) * _TEMP * _8_0;
2093881   +_LP0 = _LP0 + (   -0.88993819943493) * _TEMP * _8_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.88993819943493) * _TEMP * _8_1;
2093882   +_LP0 = _LP0 + (    0.89971120865107) * _TEMP * _8_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.89971120865107) * _TEMP * _8_2;
2093883   +_LP0 = _LP0 + (   -0.96825171718714) * _TEMP * _8_3;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.96825171718714) * _TEMP * _8_3;
2093884   +
2093885   +***  Effect: MntFishProducts ;
MPRINT(EM_DIAGRAM):   *** Effect: MntFishProducts ;
2093886   +_TEMP = MntFishProducts ;
MPRINT(EM_DIAGRAM):   _TEMP = MntFishProducts ;
2093887   +_LP0 = _LP0 + (    -0.0053789406447 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.0053789406447 * _TEMP);
2093888   +
2093889   +***  Effect: MntFruits ;
MPRINT(EM_DIAGRAM):   *** Effect: MntFruits ;
2093890   +_TEMP = MntFruits ;
MPRINT(EM_DIAGRAM):   _TEMP = MntFruits ;
2093891   +_LP0 = _LP0 + (   -0.00810096702081 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.00810096702081 * _TEMP);
2093892   +
2093893   +***  Effect: MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Effect: MntMeatProducts ;
2093894   +_TEMP = MntMeatProducts ;
MPRINT(EM_DIAGRAM):   _TEMP = MntMeatProducts ;
2093895   +_LP0 = _LP0 + (    0.00876618054091 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00876618054091 * _TEMP);
2093896   +
2093897   +***  Effect: MntWines ;
MPRINT(EM_DIAGRAM):   *** Effect: MntWines ;
2093898   +_TEMP = MntWines ;
MPRINT(EM_DIAGRAM):   _TEMP = MntWines ;
2093899   +_LP0 = _LP0 + (   -0.00323708533956 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.00323708533956 * _TEMP);
2093900   +
2093901   +***  Effect: NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumCatalogPurchases ;
2093902   +_TEMP = NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumCatalogPurchases ;
2093903   +_LP0 = _LP0 + (    0.72583602627024 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.72583602627024 * _TEMP);
2093904   +
2093905   +***  Effect: NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumDealsPurchases ;
2093906   +_TEMP = NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumDealsPurchases ;
2093907   +_LP0 = _LP0 + (    0.71587738133808 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.71587738133808 * _TEMP);
2093908   +
2093909   +***  Effect: NumStorePurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumStorePurchases ;
2093910   +_TEMP = NumStorePurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumStorePurchases ;
2093911   +_LP0 = _LP0 + (   -0.38414846639641 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.38414846639641 * _TEMP);
2093912   +
2093913   +***  Effect: NumWebPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumWebPurchases ;
2093914   +_TEMP = NumWebPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumWebPurchases ;
2093915   +_LP0 = _LP0 + (   -0.39960732899531 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.39960732899531 * _TEMP);
2093916   +
2093917   +***  Effect: NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   *** Effect: NumWebVisitsMonth ;
2093918   +_TEMP = NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   _TEMP = NumWebVisitsMonth ;
2093919   +_LP0 = _LP0 + (    1.00690630599849 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.00690630599849 * _TEMP);
2093920   +
2093921   +***  Effect: Recency ;
MPRINT(EM_DIAGRAM):   *** Effect: Recency ;
2093922   +_TEMP = Recency ;
MPRINT(EM_DIAGRAM):   _TEMP = Recency ;
2093923   +_LP0 = _LP0 + (   -0.10368937560371 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.10368937560371 * _TEMP);
2093924   +
2093925   +***  Effect: Teenhome ;
MPRINT(EM_DIAGRAM):   *** Effect: Teenhome ;
2093926   +_TEMP = Teenhome ;
MPRINT(EM_DIAGRAM):   _TEMP = Teenhome ;
2093927   +_LP0 = _LP0 + (   -1.33387551959166 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.33387551959166 * _TEMP);
2093928   +
2093929   +*** Naive Posterior Probabilities;
MPRINT(EM_DIAGRAM):   *** Naive Posterior Probabilities;
2093930   +drop _MAXP _IY _P0 _P1;
MPRINT(EM_DIAGRAM):   drop _MAXP _IY _P0 _P1;
2093931   +_TEMP =    -1.29156803352583 + _LP0;
MPRINT(EM_DIAGRAM):   _TEMP = -1.29156803352583 + _LP0;
2093932   +if (_TEMP < 0) then do;
MPRINT(EM_DIAGRAM):   if (_TEMP < 0) then do;
2093933   +   _TEMP = exp(_TEMP);
MPRINT(EM_DIAGRAM):   _TEMP = exp(_TEMP);
2093934   +   _P0 = _TEMP / (1 + _TEMP);
MPRINT(EM_DIAGRAM):   _P0 = _TEMP / (1 + _TEMP);
2093935   +end;
MPRINT(EM_DIAGRAM):   end;
2093936   +else _P0 = 1 / (1 + exp(-_TEMP));
MPRINT(EM_DIAGRAM):   else _P0 = 1 / (1 + exp(-_TEMP));
2093937   +_P1 = 1.0 - _P0;
MPRINT(EM_DIAGRAM):   _P1 = 1.0 - _P0;
2093938   +
2093939   +REG9DR1:
2093940   +
2093941   +
2093942   +*** Posterior Probabilities and Predicted Level;
MPRINT(EM_DIAGRAM):   REG9DR1: *** Posterior Probabilities and Predicted Level;
2093943   +label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2093944   +label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2093945   +P_DepVar1 = _P0;
MPRINT(EM_DIAGRAM):   P_DepVar1 = _P0;
2093946   +_MAXP = _P0;
MPRINT(EM_DIAGRAM):   _MAXP = _P0;
2093947   +_IY = 1;
MPRINT(EM_DIAGRAM):   _IY = 1;
2093948   +P_DepVar0 = _P1;
MPRINT(EM_DIAGRAM):   P_DepVar0 = _P1;
2093949   +if (_P1 >  _MAXP + 1E-8) then do;
MPRINT(EM_DIAGRAM):   if (_P1 > _MAXP + 1E-8) then do;
2093950   +   _MAXP = _P1;
MPRINT(EM_DIAGRAM):   _MAXP = _P1;
2093951   +   _IY = 2;
MPRINT(EM_DIAGRAM):   _IY = 2;
2093952   +end;
MPRINT(EM_DIAGRAM):   end;
2093953   +I_DepVar = REG9DRF[_IY];
MPRINT(EM_DIAGRAM):   I_DepVar = REG9DRF[_IY];
2093954   +U_DepVar = REG9DRU[_IY];
MPRINT(EM_DIAGRAM):   U_DepVar = REG9DRU[_IY];
2093955   +
2093956   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
2093957   +***** end scoring code for regression;
MPRINT(EM_DIAGRAM):   ***** end scoring code for regression;
2093958   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2093959    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2093960    quit;
2093961    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2093962    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2093963    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2093964    retain ID 2 Node "Reg9";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Reg9";
2093965    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2093966    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 527 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 527 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2093967    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2093968    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2093969    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 527 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 527 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2093970    proc sort data=EMWS8.Reg9_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Reg9_variableset out=_temp2(keep=NAME CREATOR);
2093971    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2093972    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.REG9_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2093973    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2093974    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2093975    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2093976    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2093977    proc contents data=EMWS8.Reg9_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Reg9_train out=_meta(keep=NAME) noprint;
2093978    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

2093979    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2093980    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2093981    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 53 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2093982    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2093983    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2093984    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2093985    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 53 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2093986    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2093987    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2093987  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 288 rows and 5 columns.

2093988    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2093989    proc append base=EMWS8.Ensmbl9_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl9_FCMP data=_tempx;
2093990    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL9_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 288 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL9_FCMP has 288 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2093991    filename _pref
2093991  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
2093992    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2093993    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
2093994   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2093995   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
2093996   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2093997   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
2093998   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
2093999   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2094000    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2094001    quit;
2094002    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2094003    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2094004    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2094005    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
2094006    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2094007    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2094008    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2094009    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2094010    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2094011    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
2094012    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2094013    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2094014    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2094015    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2094016    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2094017    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2094018    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
2094019    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.04 seconds
      

2094020    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2094021    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2094022    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2094023    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2094024    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2094025    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2094026    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2094027    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2094028    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2094028  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

2094029    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2094030    proc append base=EMWS8.Ensmbl9_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl9_FCMP data=_tempx;
2094031    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL9_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL9_FCMP has 292 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2094032    filename _pref
2094032  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
2094033    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2094034    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
2094035   +
2094036   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
2094037   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
2094037  !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
2094038   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
2094039   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
2094040   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
2094041   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
2094042   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2094043    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2094044    quit;
2094045    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2094046    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2094047    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2094048    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
2094049    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2094050    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2094051    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2094052    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2094053    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2094054    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
2094055    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2094056    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2094057    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2094058    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2094059    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2094060    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2094061    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
2094062    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2094063    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2094064    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2094065    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2094066    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2094067    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2094068    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2094069    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2094070    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2094071    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2094071  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

2094072    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2094073    proc append base=EMWS8.Ensmbl9_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl9_FCMP data=_tempx;
2094074    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL9_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL9_FCMP has 331 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2094075    filename _pref
2094075  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
2094076    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2094077    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
2094078   +
2094079   +
2094080   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
2094081   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
2094082   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
2094083   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
2094084   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
2094085   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2094086   +
2094087   +
2094088   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
2094089   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
2094090   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
2094091   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
2094092   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
2094093   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2094094   +
2094095   +
2094096   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
2094097   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
2094098   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
2094099   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
2094100   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
2094101   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2094102   +
2094103   +
2094104   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
2094105   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
2094106   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
2094107   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
2094108   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
2094109   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2094110   +
2094111   +
2094112   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
2094113   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
2094114   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
2094115   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
2094116   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
2094117   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2094118   +
2094119   +
2094120   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
2094121   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
2094122   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
2094123   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
2094124   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
2094125   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2094126   +
2094127   +
2094128   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
2094129   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
2094130   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
2094131   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
2094132   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
2094133   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2094134   +
2094135   +
2094136   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
2094137   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
2094138   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
2094139   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
2094140   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
2094141   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2094142   +if
2094143   +_FILTERNORM1 not in ( '.')
2094144   + and
2094145   +_FILTERNORM2 not in ( '.')
2094146   + and
2094147   +_FILTERNORM3 not in ( '.')
2094148   + and
2094149   +_FILTERNORM4 not in ( '.')
2094150   + and
2094151   +_FILTERNORM5 not in ( '.')
2094152   + and
2094153   +_FILTERNORM6 not in ( '.')
2094154   + and
2094155   +_FILTERNORM7 not in ( ' ')
2094156   + and
2094157   +_FILTERNORM8 not in ( ' ')
2094158   +and
2094159   +( Dt_Customer ne .)
2094160   +and ( Income ne . and (Income<=107000))
2094161   +and ( Kidhome ne .)
2094162   +and ( MntFishProducts ne .)
2094163   +and ( MntFruits ne .)
2094164   +and ( MntGoldProds ne .)
2094165   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
2094166   +and ( MntSweetProducts ne .)
2094167   +and ( MntWines ne .)
2094168   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
2094169   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
2094170   +and ( NumStorePurchases ne .)
2094171   +and ( NumWebPurchases ne .)
2094172   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
2094173   +and ( Recency ne .)
2094174   +and ( Teenhome ne .)
2094175   +and ( Year_Birth ne .)
2094176   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
2094177   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
2094178   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
2094179   +end;
MPRINT(EM_DIAGRAM):   end;
2094180   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
2094181   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2094182    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2094183    quit;
2094184    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2094185    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2094186    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2094187    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
2094188    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2094189    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2094190    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2094191    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2094192    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2094193    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
2094194    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2094195    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2094196    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2094197    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2094198    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2094199    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2094200    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
2094201    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

2094202    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2094203    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2094204    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2094205    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2094206    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2094207    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2094208    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2094209    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2094210    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2094210  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

2094211    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2094212    proc append base=EMWS8.Ensmbl9_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl9_FCMP data=_tempx;
2094213    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL9_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL9_FCMP has 397 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2094214    %macro varDept(fcmpdata=,id=);
2094215    %global nobs&id scoreFlag&id;
2094216    %let scoreFlag&id = 0;
2094217    %if &id=1 or ^&fcmpStart %then %do;
2094218    proc sort data=&fcmpdata out=_temp&id nodupkey;
2094219    by NAME;
2094220    where id=&id and LHS in( %let j=1;
2094221    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
2094222    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
2094223    "&var" %let j = %eval(&j+1);
2094224    %end;
2094225    );
2094226    run;
2094227    %let dsid = %sysfunc(open(_temp&id));
2094228    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2094229    %let dsid = %sysfunc(close(&dsid));
2094230    %if &&nobs&id %then %do;
2094231    %let scoreFlag&id = 1;
2094232    %let fcmpStart = 1;
2094233    %end;
2094234    %else %let fcmpStart = 0;
2094235    %end;
2094236    %else %do;
2094237    proc sort data=&fcmpdata out=_tempid;
2094238    where id=&id;
2094239    by LHS;
2094240    run;
2094241    %let dsid = %sysfunc(open(_tempid));
2094242    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2094243    %let dsid = %sysfunc(close(&dsid));
2094244    %if ^&&nobs&id %then %do;
2094245    proc datasets lib=work nolist;
2094246    delete _tempid;
2094247    run;
2094248    quit;
2094249    %end;
2094250    %else %do;
2094251    data _tempAll;
2094252    set %let j=%eval(&id-1);
2094253    %do x=1 %to &j;
2094254    %if &&nobs&x %then %do;
2094255    _temp&x %end;
2094256    %end;
2094257    ;
2094258    run;
2094259    proc sql;
2094260    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
2094260  ! work._tempid p2 where p.name=p2.lhs;
2094261    quit;
2094262    data _temp&id;
2094263    set _temp&id;
2094264    where LHS ne '' and NAME ne '' and Node ne '';
2094265    run;
2094266    proc datasets lib=work nolist;
2094267    delete _tempAll;
2094268    run;
2094269    %let dsid = %sysfunc(open(_temp&id));
2094270    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2094271    %let dsid = %sysfunc(close(&dsid));
2094272    %if ^&&nobs&id %then %do;
2094273    proc datasets lib=work nolist;
2094274    delete _temp&id;
2094275    run;
2094276    quit;
2094277    %end;
2094278    %else %do;
2094279    %let scoreFlag&id = 1;
2094280    data _temp&id;
2094281    set _temp&id;
2094282    where LHS ne NAME and node ne '';
2094283    run;
2094284    %let dsid = %sysfunc(open(_temp&id));
2094285    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2094286    %let dsid = %sysfunc(close(&dsid));
2094287    %if ^&&nobs&id %then %do;
2094288    proc datasets lib=work nolist;
2094289    delete _temp&id;
2094290    run;
2094291    quit;
2094292    %end;
2094293    %else %do;
2094294    proc sort data=_temp&id nodupkey;
2094295    by LHS NAME;
2094296    run;
2094297    %end;
2094298    %end;
2094299    %end;
2094300    %end;
2094301    %mend varDept;
2094302    %macro optCode(outdata=fcmpdata);
2094303    %global fcmpStart;
2094304    %let fcmpStart = 0;
2094305    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
2094306    %let NumNodes=9;
2094307    %do k=1 %to &NumNodes;
2094308    %vardept(fcmpdata=&outdata, id=&k);
2094309    %end;
2094310    %mend optCode;
2094311    %optcode(outData=EMWS8.Ensmbl9_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl9_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL9_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl9_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 72 observations read from the data set EMWS8.ENSMBL9_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 54 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 18 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl9_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL9_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl9_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL9_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl9_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL9_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 18 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 18 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp5;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP5 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl9_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL9_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 18 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 18 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp6;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP6 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl9_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL9_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 18 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 18 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.21 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl9_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL9_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl9_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL9_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

2094312    filename _pref
2094312  ! "C:\\predictive-models-project\Workspaces\EMWS8\Tree5\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Tree5\EMPUBLISHSCORE.sas";
2094313    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2094314    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Tree5\EMPUBLISHSCORE.sas.
2094315   +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
2094316   +******             DECISION TREE SCORING CODE             ******;
MPRINT(EM_DIAGRAM):   ****** DECISION TREE SCORING CODE ******;
2094317   +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
2094318   +
2094319   +******         LENGTHS OF NEW CHARACTER VARIABLES         ******;
MPRINT(EM_DIAGRAM):   ****** LENGTHS OF NEW CHARACTER VARIABLES ******;
2094320   +LENGTH I_DepVar  $   12;
MPRINT(EM_DIAGRAM):   LENGTH I_DepVar $ 12;
2094321   +LENGTH _WARN_  $    4;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $ 4;
2094322   +
2094323   +******              LABELS FOR NEW VARIABLES              ******;
MPRINT(EM_DIAGRAM):   ****** LABELS FOR NEW VARIABLES ******;
2094324   +LABEL _NODE_  = 'Node' ;
MPRINT(EM_DIAGRAM):   LABEL _NODE_ = 'Node' ;
2094325   +LABEL _LEAF_  = 'Leaf' ;
MPRINT(EM_DIAGRAM):   LABEL _LEAF_ = 'Leaf' ;
2094326   +LABEL P_DepVar0  = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   LABEL P_DepVar0 = 'Predicted: DepVar=0' ;
2094327   +LABEL P_DepVar1  = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   LABEL P_DepVar1 = 'Predicted: DepVar=1' ;
2094328   +LABEL Q_DepVar0  = 'Unadjusted P: DepVar=0' ;
MPRINT(EM_DIAGRAM):   LABEL Q_DepVar0 = 'Unadjusted P: DepVar=0' ;
2094329   +LABEL Q_DepVar1  = 'Unadjusted P: DepVar=1' ;
MPRINT(EM_DIAGRAM):   LABEL Q_DepVar1 = 'Unadjusted P: DepVar=1' ;
2094330   +LABEL V_DepVar0  = 'Validated: DepVar=0' ;
MPRINT(EM_DIAGRAM):   LABEL V_DepVar0 = 'Validated: DepVar=0' ;
2094331   +LABEL V_DepVar1  = 'Validated: DepVar=1' ;
MPRINT(EM_DIAGRAM):   LABEL V_DepVar1 = 'Validated: DepVar=1' ;
2094332   +LABEL I_DepVar  = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   LABEL I_DepVar = 'Into: DepVar' ;
2094333   +LABEL U_DepVar  = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   LABEL U_DepVar = 'Unnormalized Into: DepVar' ;
2094334   +LABEL _WARN_  = 'Warnings' ;
MPRINT(EM_DIAGRAM):   LABEL _WARN_ = 'Warnings' ;
2094335   +
2094336   +
2094337   +******      TEMPORARY VARIABLES FOR FORMATTED VALUES      ******;
MPRINT(EM_DIAGRAM):   ****** TEMPORARY VARIABLES FOR FORMATTED VALUES ******;
2094338   +LENGTH _ARBFMT_12 $     12; DROP _ARBFMT_12;
MPRINT(EM_DIAGRAM):   LENGTH _ARBFMT_12 $ 12;
MPRINT(EM_DIAGRAM):   DROP _ARBFMT_12;
2094339   +_ARBFMT_12 = ' '; /* Initialize to avoid warning. */
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = ' ';
2094340   +LENGTH _ARBFMT_8 $      8; DROP _ARBFMT_8;
MPRINT(EM_DIAGRAM):   /* Initialize to avoid warning. */ LENGTH _ARBFMT_8 $ 8;
MPRINT(EM_DIAGRAM):   DROP _ARBFMT_8;
2094341   +_ARBFMT_8 = ' '; /* Initialize to avoid warning. */
MPRINT(EM_DIAGRAM):   _ARBFMT_8 = ' ';
2094342   +
2094343   +
2094344   +******             ASSIGN OBSERVATION TO NODE             ******;
MPRINT(EM_DIAGRAM):   /* Initialize to avoid warning. */ ****** ASSIGN OBSERVATION TO NODE 
******;
2094345   +IF  NOT MISSING(Recency ) AND
2094346   +  Recency  <                 38.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(Recency ) AND Recency < 38.5 THEN DO;
2094347   +  IF  NOT MISSING(MntMeatProducts ) AND
2094348   +                   431.5 <= MntMeatProducts  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(MntMeatProducts ) AND 431.5 <= MntMeatProducts THEN DO;
2094349   +    IF  NOT MISSING(NumCatalogPurchases ) AND
2094350   +      NumCatalogPurchases  <                  5.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(NumCatalogPurchases ) AND NumCatalogPurchases < 5.5 THEN 
DO;
2094351   +      _ARBFMT_8 = PUT( Marital_Status , $8.);
MPRINT(EM_DIAGRAM):   _ARBFMT_8 = PUT( Marital_Status , $8.);
2094352   +       %DMNORMIP( _ARBFMT_8);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
2094353   +      IF _ARBFMT_8 IN ('MARRIED' ,'TOGETHER' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_8 IN ('MARRIED' ,'TOGETHER' ) THEN DO;
2094354   +        _NODE_  =                   21;
MPRINT(EM_DIAGRAM):   _NODE_ = 21;
2094355   +        _LEAF_  =                    5;
MPRINT(EM_DIAGRAM):   _LEAF_ = 5;
2094356   +        P_DepVar0  =     0.71052631578947;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.71052631578947;
2094357   +        P_DepVar1  =     0.28947368421052;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.28947368421052;
2094358   +        Q_DepVar0  =     0.71052631578947;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.71052631578947;
2094359   +        Q_DepVar1  =     0.28947368421052;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.28947368421052;
2094360   +        V_DepVar0  =     0.66666666666666;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.66666666666666;
2094361   +        V_DepVar1  =     0.33333333333333;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.33333333333333;
2094362   +        I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
2094363   +        U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2094364   +        END;
MPRINT(EM_DIAGRAM):   END;
2094365   +      ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2094366   +        _NODE_  =                   20;
MPRINT(EM_DIAGRAM):   _NODE_ = 20;
2094367   +        _LEAF_  =                    4;
MPRINT(EM_DIAGRAM):   _LEAF_ = 4;
2094368   +        P_DepVar0  =     0.17647058823529;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.17647058823529;
2094369   +        P_DepVar1  =      0.8235294117647;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.8235294117647;
2094370   +        Q_DepVar0  =     0.17647058823529;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.17647058823529;
2094371   +        Q_DepVar1  =      0.8235294117647;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.8235294117647;
2094372   +        V_DepVar0  =                 0.25;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.25;
2094373   +        V_DepVar1  =                 0.75;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.75;
2094374   +        I_DepVar  = '1' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '1' ;
2094375   +        U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2094376   +        END;
MPRINT(EM_DIAGRAM):   END;
2094377   +      END;
MPRINT(EM_DIAGRAM):   END;
2094378   +    ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2094379   +      _NODE_  =                   11;
MPRINT(EM_DIAGRAM):   _NODE_ = 11;
2094380   +      _LEAF_  =                    6;
MPRINT(EM_DIAGRAM):   _LEAF_ = 6;
2094381   +      P_DepVar0  =     0.15730337078651;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.15730337078651;
2094382   +      P_DepVar1  =     0.84269662921348;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.84269662921348;
2094383   +      Q_DepVar0  =     0.15730337078651;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.15730337078651;
2094384   +      Q_DepVar1  =     0.84269662921348;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.84269662921348;
2094385   +      V_DepVar0  =     0.29411764705882;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.29411764705882;
2094386   +      V_DepVar1  =     0.70588235294117;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.70588235294117;
2094387   +      I_DepVar  = '1' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '1' ;
2094388   +      U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2094389   +      END;
MPRINT(EM_DIAGRAM):   END;
2094390   +    END;
MPRINT(EM_DIAGRAM):   END;
2094391   +  ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2094392   +    _ARBFMT_12 = PUT( AcceptedCmp3 , BEST.);
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( AcceptedCmp3 , BEST.);
2094393   +     %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
2094394   +    IF _ARBFMT_12 IN ('1' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('1' ) THEN DO;
2094395   +      IF  NOT MISSING(NumWebVisitsMonth ) AND
2094396   +        NumWebVisitsMonth  <                  5.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(NumWebVisitsMonth ) AND NumWebVisitsMonth < 5.5 THEN DO;
2094397   +        _NODE_  =                   16;
MPRINT(EM_DIAGRAM):   _NODE_ = 16;
2094398   +        _LEAF_  =                    1;
MPRINT(EM_DIAGRAM):   _LEAF_ = 1;
2094399   +        P_DepVar0  =     0.64705882352941;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.64705882352941;
2094400   +        P_DepVar1  =     0.35294117647058;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.35294117647058;
2094401   +        Q_DepVar0  =     0.64705882352941;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.64705882352941;
2094402   +        Q_DepVar1  =     0.35294117647058;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.35294117647058;
2094403   +        V_DepVar0  =     0.57142857142857;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.57142857142857;
2094404   +        V_DepVar1  =     0.42857142857142;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.42857142857142;
2094405   +        I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
2094406   +        U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2094407   +        END;
MPRINT(EM_DIAGRAM):   END;
2094408   +      ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2094409   +        _NODE_  =                   17;
MPRINT(EM_DIAGRAM):   _NODE_ = 17;
2094410   +        _LEAF_  =                    2;
MPRINT(EM_DIAGRAM):   _LEAF_ = 2;
2094411   +        P_DepVar0  =     0.17391304347826;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.17391304347826;
2094412   +        P_DepVar1  =     0.82608695652173;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.82608695652173;
2094413   +        Q_DepVar0  =     0.17391304347826;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.17391304347826;
2094414   +        Q_DepVar1  =     0.82608695652173;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.82608695652173;
2094415   +        V_DepVar0  =                 0.15;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.15;
2094416   +        V_DepVar1  =                 0.85;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.85;
2094417   +        I_DepVar  = '1' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '1' ;
2094418   +        U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2094419   +        END;
MPRINT(EM_DIAGRAM):   END;
2094420   +      END;
MPRINT(EM_DIAGRAM):   END;
2094421   +    ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2094422   +      _NODE_  =                    9;
MPRINT(EM_DIAGRAM):   _NODE_ = 9;
2094423   +      _LEAF_  =                    3;
MPRINT(EM_DIAGRAM):   _LEAF_ = 3;
2094424   +      P_DepVar0  =     0.82099596231493;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.82099596231493;
2094425   +      P_DepVar1  =     0.17900403768506;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.17900403768506;
2094426   +      Q_DepVar0  =     0.82099596231493;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.82099596231493;
2094427   +      Q_DepVar1  =     0.17900403768506;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.17900403768506;
2094428   +      V_DepVar0  =     0.80966767371601;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.80966767371601;
2094429   +      V_DepVar1  =     0.19033232628398;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.19033232628398;
2094430   +      I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
2094431   +      U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2094432   +      END;
MPRINT(EM_DIAGRAM):   END;
2094433   +    END;
MPRINT(EM_DIAGRAM):   END;
2094434   +  END;
MPRINT(EM_DIAGRAM):   END;
2094435   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2094436   +  _ARBFMT_12 = PUT( AcceptedCmp5 , BEST.);
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( AcceptedCmp5 , BEST.);
2094437   +   %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
2094438   +  IF _ARBFMT_12 IN ('1' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('1' ) THEN DO;
2094439   +    IF  NOT MISSING(MntWines ) AND
2094440   +      MntWines  <                412.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(MntWines ) AND MntWines < 412.5 THEN DO;
2094441   +      _NODE_  =                   12;
MPRINT(EM_DIAGRAM):   _NODE_ = 12;
2094442   +      _LEAF_  =                    7;
MPRINT(EM_DIAGRAM):   _LEAF_ = 7;
2094443   +      P_DepVar0  =     0.13333333333333;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.13333333333333;
2094444   +      P_DepVar1  =     0.86666666666666;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.86666666666666;
2094445   +      Q_DepVar0  =     0.13333333333333;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.13333333333333;
2094446   +      Q_DepVar1  =     0.86666666666666;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.86666666666666;
2094447   +      V_DepVar0  =     0.16666666666666;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.16666666666666;
2094448   +      V_DepVar1  =     0.83333333333333;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.83333333333333;
2094449   +      I_DepVar  = '1' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '1' ;
2094450   +      U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2094451   +      END;
MPRINT(EM_DIAGRAM):   END;
2094452   +    ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2094453   +      _NODE_  =                   13;
MPRINT(EM_DIAGRAM):   _NODE_ = 13;
2094454   +      _LEAF_  =                    8;
MPRINT(EM_DIAGRAM):   _LEAF_ = 8;
2094455   +      P_DepVar0  =     0.70833333333333;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.70833333333333;
2094456   +      P_DepVar1  =     0.29166666666666;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.29166666666666;
2094457   +      Q_DepVar0  =     0.70833333333333;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.70833333333333;
2094458   +      Q_DepVar1  =     0.29166666666666;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.29166666666666;
2094459   +      V_DepVar0  =     0.63461538461538;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.63461538461538;
2094460   +      V_DepVar1  =     0.36538461538461;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.36538461538461;
2094461   +      I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
2094462   +      U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2094463   +      END;
MPRINT(EM_DIAGRAM):   END;
2094464   +    END;
MPRINT(EM_DIAGRAM):   END;
2094465   +  ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2094466   +    _NODE_  =                    7;
MPRINT(EM_DIAGRAM):   _NODE_ = 7;
2094467   +    _LEAF_  =                    9;
MPRINT(EM_DIAGRAM):   _LEAF_ = 9;
2094468   +    P_DepVar0  =     0.96877380045696;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.96877380045696;
2094469   +    P_DepVar1  =     0.03122619954303;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.03122619954303;
2094470   +    Q_DepVar0  =     0.96877380045696;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.96877380045696;
2094471   +    Q_DepVar1  =     0.03122619954303;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.03122619954303;
2094472   +    V_DepVar0  =     0.96756756756756;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.96756756756756;
2094473   +    V_DepVar1  =     0.03243243243243;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.03243243243243;
2094474   +    I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
2094475   +    U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2094476   +    END;
MPRINT(EM_DIAGRAM):   END;
2094477   +  END;
MPRINT(EM_DIAGRAM):   END;
2094478   +
2094479   +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
2094480   +******          END OF DECISION TREE SCORING CODE         ******;
MPRINT(EM_DIAGRAM):   ****** END OF DECISION TREE SCORING CODE ******;
2094481   +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
2094482   +drop _LEAF_;
MPRINT(EM_DIAGRAM):   drop _LEAF_;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2094483    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2094484    quit;
2094485    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2094486    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2094487    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2094488    retain ID 2 Node "Tree5";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Tree5";
2094489    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2094490    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 108 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 108 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2094491    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2094492    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2094493    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 108 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 108 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2094494    proc sort data=EMWS8.Tree5_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Tree5_variableset out=_temp2(keep=NAME CREATOR);
2094495    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2094496    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.TREE5_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2094497    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2094498    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2094499    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2094500    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2094501    proc contents data=EMWS8.Tree5_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Tree5_train out=_meta(keep=NAME) noprint;
2094502    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 58 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

2094503    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2094504    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2094505    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 58 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 58 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2094506    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2094507    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2094508    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2094509    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 58 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 58 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2094510    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2094511    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2094511  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 88 rows and 5 columns.

2094512    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2094513    proc append base=EMWS8.Ensmbl9_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl9_FCMP data=_tempx;
2094514    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL9_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 88 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL9_FCMP has 88 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2094515    filename _pref
2094515  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
2094516    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2094517    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
2094518   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2094519   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
2094520   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2094521   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
2094522   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
2094523   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2094524    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2094525    quit;
2094526    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2094527    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2094528    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2094529    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
2094530    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2094531    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2094532    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2094533    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2094534    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2094535    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
2094536    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2094537    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.08 seconds
      cpu time            0.01 seconds
      

2094538    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2094539    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2094540    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2094541    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2094542    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
2094543    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

2094544    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2094545    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2094546    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2094547    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2094548    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2094549    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2094550    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2094551    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2094552    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2094552  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

2094553    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2094554    proc append base=EMWS8.Ensmbl9_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl9_FCMP data=_tempx;
2094555    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL9_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL9_FCMP has 92 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2094556    filename _pref
2094556  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
2094557    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2094558    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
2094559   +
2094560   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
2094561   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
2094561  !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
2094562   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
2094563   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
2094564   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
2094565   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
2094566   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2094567    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2094568    quit;
2094569    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2094570    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2094571    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2094572    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
2094573    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2094574    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2094575    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2094576    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2094577    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2094578    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
2094579    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2094580    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2094581    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2094582    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2094583    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2094584    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2094585    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
2094586    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2094587    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2094588    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2094589    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2094590    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2094591    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2094592    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2094593    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2094594    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2094595    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2094595  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

2094596    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2094597    proc append base=EMWS8.Ensmbl9_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl9_FCMP data=_tempx;
2094598    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL9_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL9_FCMP has 131 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2094599    filename _pref
2094599  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
2094600    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2094601    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
2094602   +
2094603   +
2094604   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
2094605   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
2094606   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
2094607   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
2094608   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
2094609   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2094610   +
2094611   +
2094612   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
2094613   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
2094614   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
2094615   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
2094616   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
2094617   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2094618   +
2094619   +
2094620   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
2094621   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
2094622   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
2094623   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
2094624   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
2094625   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2094626   +
2094627   +
2094628   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
2094629   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
2094630   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
2094631   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
2094632   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
2094633   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2094634   +
2094635   +
2094636   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
2094637   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
2094638   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
2094639   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
2094640   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
2094641   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2094642   +
2094643   +
2094644   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
2094645   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
2094646   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
2094647   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
2094648   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
2094649   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2094650   +
2094651   +
2094652   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
2094653   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
2094654   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
2094655   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
2094656   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
2094657   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2094658   +
2094659   +
2094660   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
2094661   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
2094662   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
2094663   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
2094664   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
2094665   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2094666   +if
2094667   +_FILTERNORM1 not in ( '.')
2094668   + and
2094669   +_FILTERNORM2 not in ( '.')
2094670   + and
2094671   +_FILTERNORM3 not in ( '.')
2094672   + and
2094673   +_FILTERNORM4 not in ( '.')
2094674   + and
2094675   +_FILTERNORM5 not in ( '.')
2094676   + and
2094677   +_FILTERNORM6 not in ( '.')
2094678   + and
2094679   +_FILTERNORM7 not in ( ' ')
2094680   + and
2094681   +_FILTERNORM8 not in ( ' ')
2094682   +and
2094683   +( Dt_Customer ne .)
2094684   +and ( Income ne . and (Income<=107000))
2094685   +and ( Kidhome ne .)
2094686   +and ( MntFishProducts ne .)
2094687   +and ( MntFruits ne .)
2094688   +and ( MntGoldProds ne .)
2094689   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
2094690   +and ( MntSweetProducts ne .)
2094691   +and ( MntWines ne .)
2094692   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
2094693   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
2094694   +and ( NumStorePurchases ne .)
2094695   +and ( NumWebPurchases ne .)
2094696   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
2094697   +and ( Recency ne .)
2094698   +and ( Teenhome ne .)
2094699   +and ( Year_Birth ne .)
2094700   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
2094701   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
2094702   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
2094703   +end;
MPRINT(EM_DIAGRAM):   end;
2094704   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
2094705   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2094706    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2094707    quit;
2094708    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2094709    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2094710    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2094711    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
2094712    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2094713    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2094714    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2094715    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2094716    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2094717    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
2094718    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2094719    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2094720    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2094721    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2094722    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2094723    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2094724    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
2094725    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

2094726    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2094727    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2094728    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2094729    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2094730    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2094731    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2094732    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2094733    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2094734    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2094734  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

2094735    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2094736    proc append base=EMWS8.Ensmbl9_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl9_FCMP data=_tempx;
2094737    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL9_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL9_FCMP has 197 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2094738    %macro varDept(fcmpdata=,id=);
2094739    %global nobs&id scoreFlag&id;
2094740    %let scoreFlag&id = 0;
2094741    %if &id=1 or ^&fcmpStart %then %do;
2094742    proc sort data=&fcmpdata out=_temp&id nodupkey;
2094743    by NAME;
2094744    where id=&id and LHS in( %let j=1;
2094745    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
2094746    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
2094747    "&var" %let j = %eval(&j+1);
2094748    %end;
2094749    );
2094750    run;
2094751    %let dsid = %sysfunc(open(_temp&id));
2094752    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2094753    %let dsid = %sysfunc(close(&dsid));
2094754    %if &&nobs&id %then %do;
2094755    %let scoreFlag&id = 1;
2094756    %let fcmpStart = 1;
2094757    %end;
2094758    %else %let fcmpStart = 0;
2094759    %end;
2094760    %else %do;
2094761    proc sort data=&fcmpdata out=_tempid;
2094762    where id=&id;
2094763    by LHS;
2094764    run;
2094765    %let dsid = %sysfunc(open(_tempid));
2094766    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2094767    %let dsid = %sysfunc(close(&dsid));
2094768    %if ^&&nobs&id %then %do;
2094769    proc datasets lib=work nolist;
2094770    delete _tempid;
2094771    run;
2094772    quit;
2094773    %end;
2094774    %else %do;
2094775    data _tempAll;
2094776    set %let j=%eval(&id-1);
2094777    %do x=1 %to &j;
2094778    %if &&nobs&x %then %do;
2094779    _temp&x %end;
2094780    %end;
2094781    ;
2094782    run;
2094783    proc sql;
2094784    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
2094784  ! work._tempid p2 where p.name=p2.lhs;
2094785    quit;
2094786    data _temp&id;
2094787    set _temp&id;
2094788    where LHS ne '' and NAME ne '' and Node ne '';
2094789    run;
2094790    proc datasets lib=work nolist;
2094791    delete _tempAll;
2094792    run;
2094793    %let dsid = %sysfunc(open(_temp&id));
2094794    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2094795    %let dsid = %sysfunc(close(&dsid));
2094796    %if ^&&nobs&id %then %do;
2094797    proc datasets lib=work nolist;
2094798    delete _temp&id;
2094799    run;
2094800    quit;
2094801    %end;
2094802    %else %do;
2094803    %let scoreFlag&id = 1;
2094804    data _temp&id;
2094805    set _temp&id;
2094806    where LHS ne NAME and node ne '';
2094807    run;
2094808    %let dsid = %sysfunc(open(_temp&id));
2094809    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2094810    %let dsid = %sysfunc(close(&dsid));
2094811    %if ^&&nobs&id %then %do;
2094812    proc datasets lib=work nolist;
2094813    delete _temp&id;
2094814    run;
2094815    quit;
2094816    %end;
2094817    %else %do;
2094818    proc sort data=_temp&id nodupkey;
2094819    by LHS NAME;
2094820    run;
2094821    %end;
2094822    %end;
2094823    %end;
2094824    %end;
2094825    %mend varDept;
2094826    %macro optCode(outdata=fcmpdata);
2094827    %global fcmpStart;
2094828    %let fcmpStart = 0;
2094829    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
2094830    %let NumNodes=9;
2094831    %do k=1 %to &NumNodes;
2094832    %vardept(fcmpdata=&outdata, id=&k);
2094833    %end;
2094834    %mend optCode;
2094835    %optcode(outData=EMWS8.Ensmbl9_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl9_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL9_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl9_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 24 observations read from the data set EMWS8.ENSMBL9_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 16 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 8 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl9_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL9_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl9_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL9_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl9_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL9_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 8 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 8 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp5;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP5 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl9_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL9_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 8 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 8 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp6;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP6 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.06 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl9_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL9_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 8 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 8 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl9_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL9_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl9_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL9_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

2094836    filename _pref
2094836  ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural30\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural30\EMPUBLISHSCORE.sas";
2094837    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2094838    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Neural30\EMPUBLISHSCORE.sas.
2094839   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2094840   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2094841   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2094842   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2094843   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2094844   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2094845   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2094846   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2094847   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2094848   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2094849   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2094850   +LENGTH _WARN_ $4
2094851   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
2094852   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2094853   +
2094854   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2094855   +
2094856   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2094857   +
2094858   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2094859   +
2094860   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2094861   +
2094862   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2094863   +
2094864   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2094865   +
2094866   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2094867   +
2094868   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2094869   +
2094870   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2094871   +
2094872   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2094873   +
2094874   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2094875   +
2094876   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2094877   +
2094878   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2094879   +
2094880   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2094881   +
2094882   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2094883   +
2094884   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2094885   +
2094886   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2094887   +
2094888   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2094889   +
2094890   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2094891   +
2094892   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2094893   +
2094894   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2094895   +
2094896   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2094897   +
2094898   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2094899   +
2094900   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2094901   +
2094902   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2094903   +
2094904   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2094905   +
2094906   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2094907   +
2094908   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2094909   +
2094910   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
2094911   +
2094912   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
2094913   +
2094914   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
2094915   +
2094916   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
2094917   +
2094918   +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
2094919   +
2094920   +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
2094921   +
2094922   +      label H17 = 'Hidden: H1=7' ;
MPRINT(EM_DIAGRAM):   label H17 = 'Hidden: H1=7' ;
2094923   +
2094924   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2094925   +
2094926   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2094927   +
2094928   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2094929   +
2094930   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2094931   +
2094932   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2094933   +
2094934   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2094935   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2094936   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2094937   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2094938   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2094939   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2094940   +end;
MPRINT(EM_DIAGRAM):   end;
2094941   +else do;
MPRINT(EM_DIAGRAM):   else do;
2094942   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2094943   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2094944   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2094945   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2094946   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2094947   +   end;
MPRINT(EM_DIAGRAM):   end;
2094948   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2094949   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2094950   +   end;
MPRINT(EM_DIAGRAM):   end;
2094951   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2094952   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2094953   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2094954   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2094955   +   end;
MPRINT(EM_DIAGRAM):   end;
2094956   +end;
MPRINT(EM_DIAGRAM):   end;
2094957   +
2094958   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2094959   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2094960   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2094961   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2094962   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2094963   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2094964   +end;
MPRINT(EM_DIAGRAM):   end;
2094965   +else do;
MPRINT(EM_DIAGRAM):   else do;
2094966   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2094967   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2094968   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2094969   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2094970   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2094971   +   end;
MPRINT(EM_DIAGRAM):   end;
2094972   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2094973   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2094974   +   end;
MPRINT(EM_DIAGRAM):   end;
2094975   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2094976   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2094977   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2094978   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2094979   +   end;
MPRINT(EM_DIAGRAM):   end;
2094980   +end;
MPRINT(EM_DIAGRAM):   end;
2094981   +
2094982   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2094983   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2094984   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2094985   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2094986   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2094987   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2094988   +end;
MPRINT(EM_DIAGRAM):   end;
2094989   +else do;
MPRINT(EM_DIAGRAM):   else do;
2094990   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2094991   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2094992   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2094993   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2094994   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2094995   +   end;
MPRINT(EM_DIAGRAM):   end;
2094996   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2094997   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2094998   +   end;
MPRINT(EM_DIAGRAM):   end;
2094999   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2095000   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2095001   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2095002   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2095003   +   end;
MPRINT(EM_DIAGRAM):   end;
2095004   +end;
MPRINT(EM_DIAGRAM):   end;
2095005   +
2095006   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2095007   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2095008   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2095009   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2095010   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2095011   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2095012   +end;
MPRINT(EM_DIAGRAM):   end;
2095013   +else do;
MPRINT(EM_DIAGRAM):   else do;
2095014   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2095015   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2095016   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2095017   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2095018   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2095019   +   end;
MPRINT(EM_DIAGRAM):   end;
2095020   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2095021   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2095022   +   end;
MPRINT(EM_DIAGRAM):   end;
2095023   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2095024   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2095025   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2095026   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2095027   +   end;
MPRINT(EM_DIAGRAM):   end;
2095028   +end;
MPRINT(EM_DIAGRAM):   end;
2095029   +
2095030   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2095031   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2095032   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2095033   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2095034   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2095035   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2095036   +end;
MPRINT(EM_DIAGRAM):   end;
2095037   +else do;
MPRINT(EM_DIAGRAM):   else do;
2095038   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2095039   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2095040   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2095041   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2095042   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2095043   +   end;
MPRINT(EM_DIAGRAM):   end;
2095044   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2095045   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2095046   +   end;
MPRINT(EM_DIAGRAM):   end;
2095047   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2095048   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2095049   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2095050   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2095051   +   end;
MPRINT(EM_DIAGRAM):   end;
2095052   +end;
MPRINT(EM_DIAGRAM):   end;
2095053   +
2095054   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2095055   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2095056   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2095057   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2095058   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2095059   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2095060   +end;
MPRINT(EM_DIAGRAM):   end;
2095061   +else do;
MPRINT(EM_DIAGRAM):   else do;
2095062   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2095063   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2095064   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2095065   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2095066   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2095067   +   end;
MPRINT(EM_DIAGRAM):   end;
2095068   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2095069   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2095070   +   end;
MPRINT(EM_DIAGRAM):   end;
2095071   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2095072   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2095073   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2095074   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2095075   +   end;
MPRINT(EM_DIAGRAM):   end;
2095076   +end;
MPRINT(EM_DIAGRAM):   end;
2095077   +
2095078   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2095079   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
2095080   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2095081   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2095082   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2095083   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2095084   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2095085   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2095086   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2095087   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2095088   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2095089   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2095090   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2095091   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2095092   +end;
MPRINT(EM_DIAGRAM):   end;
2095093   +else do;
MPRINT(EM_DIAGRAM):   else do;
2095094   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2095095   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2095096   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2095097   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2095098   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2095099   +   end;
MPRINT(EM_DIAGRAM):   end;
2095100   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2095101   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2095102   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2095103   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2095104   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2095105   +   end;
MPRINT(EM_DIAGRAM):   end;
2095106   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2095107   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2095108   +   end;
MPRINT(EM_DIAGRAM):   end;
2095109   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2095110   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2095111   +   end;
MPRINT(EM_DIAGRAM):   end;
2095112   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2095113   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2095114   +   end;
MPRINT(EM_DIAGRAM):   end;
2095115   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2095116   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2095117   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2095118   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2095119   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2095120   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2095121   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2095122   +   end;
MPRINT(EM_DIAGRAM):   end;
2095123   +end;
MPRINT(EM_DIAGRAM):   end;
2095124   +
2095125   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2095126   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2095127   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
2095128   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2095129   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2095130   +Marital_StatusMarried = 0;
The SAS System

MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2095131   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2095132   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2095133   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2095134   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2095135   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2095136   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2095137   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2095138   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2095139   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2095140   +end;
MPRINT(EM_DIAGRAM):   end;
2095141   +else do;
MPRINT(EM_DIAGRAM):   else do;
2095142   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2095143   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2095144   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2095145   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2095146   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2095147   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2095148   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2095149   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2095150   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2095151   +         end;
MPRINT(EM_DIAGRAM):   end;
2095152   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2095153   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2095154   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2095155   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2095156   +            end;
MPRINT(EM_DIAGRAM):   end;
2095157   +         end;
MPRINT(EM_DIAGRAM):   end;
2095158   +      end;
MPRINT(EM_DIAGRAM):   end;
2095159   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2095160   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2095161   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2095162   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2095163   +         end;
MPRINT(EM_DIAGRAM):   end;
2095164   +      end;
MPRINT(EM_DIAGRAM):   end;
2095165   +   end;
MPRINT(EM_DIAGRAM):   end;
2095166   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2095167   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2095168   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2095169   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2095170   +      end;
MPRINT(EM_DIAGRAM):   end;
2095171   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2095172   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2095173   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2095174   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2095175   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2095176   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2095177   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2095178   +         end;
MPRINT(EM_DIAGRAM):   end;
2095179   +      end;
MPRINT(EM_DIAGRAM):   end;
2095180   +   end;
MPRINT(EM_DIAGRAM):   end;
2095181   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2095182   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2095183   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2095184   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2095185   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2095186   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2095187   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2095188   +   end;
MPRINT(EM_DIAGRAM):   end;
2095189   +end;
MPRINT(EM_DIAGRAM):   end;
2095190   +
2095191   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2095192   +*** Checking missing input Interval
2095193   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2095194   +
2095195   +IF NMISS(
2095196   +   Income ,
2095197   +   Kidhome ,
2095198   +   MntFishProducts ,
2095199   +   MntFruits ,
2095200   +   MntGoldProds ,
2095201   +   MntMeatProducts ,
2095202   +   MntSweetProducts ,
2095203   +   MntWines ,
2095204   +   NumCatalogPurchases ,
2095205   +   NumDealsPurchases ,
2095206   +   NumStorePurchases ,
2095207   +   NumWebPurchases ,
2095208   +   NumWebVisitsMonth ,
2095209   +   Recency ,
2095210   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Income , Kidhome , MntFishProducts , MntFruits , MntGoldProds 
, MntMeatProducts , MntSweetProducts , MntWines , NumCatalogPurchases , NumDealsPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , Recency , Teenhome ) THEN DO;
2095211   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2095212   +
2095213   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2095214   +END;
MPRINT(EM_DIAGRAM):   END;
2095215   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2095216   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
2095217   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2095218   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2095219   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2095220   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2095221   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2095222   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2095223   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2095224   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2095225   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2095226   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2095227   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2095228   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2095229   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2095230   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2095231   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2095232   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2095233   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2095234   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2095235   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2095236   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2095237   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2095238   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2095239   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2095240   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2095241   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2095242   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2095243   +END;
MPRINT(EM_DIAGRAM):   END;
2095244   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2095245   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2095246   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2095247   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2095248   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2095249   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2095250   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2095251   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2095252   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2095253   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2095254   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2095255   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2095256   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2095257   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
2095258   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2095259   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2095260   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2095261   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2095262   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2095263   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2095264   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2095265   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2095266   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2095267   +   ELSE S_NumCatalogPurchases
2095268   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2095269   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2095270   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2095271   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2095272   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2095273   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2095274   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2095275   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2095276   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2095277   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2095278   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2095279   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2095280   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2095281   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2095282   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2095283   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2095284   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2095285   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2095286   +END;
MPRINT(EM_DIAGRAM):   END;
2095287   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2095288   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
2095289   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2095290   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2095291   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
2095292   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2095293   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2095294   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
2095295   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2095296   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2095297   +   H11  =    -0.59781928082243 * S_Income  +     0.49830142312288 * S_Kidhome
2095298   +          +    -0.00045024466632 * S_MntFishProducts
2095299   +          +    -0.22421712710333 * S_MntFruits  +    -0.19010144853469 *
2095300   +        S_MntGoldProds  +    -0.53373773623953 * S_MntMeatProducts
2095301   +          +     0.17506402203495 * S_MntSweetProducts
2095302   +          +    -0.28551398649672 * S_MntWines  +       0.019870944777 *
2095303   +        S_NumCatalogPurchases  +     0.03537776181533 * S_NumDealsPurchases
2095304   +          +     0.05580468715403 * S_NumStorePurchases
2095305   +          +    -0.29131611132704 * S_NumWebPurchases
2095306   +          +    -0.40690084025802 * S_NumWebVisitsMonth
2095307   +          +     0.48640195058901 * S_Recency  +     0.31820890239661 *
2095308   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = -0.59781928082243 * S_Income + 0.49830142312288 * S_Kidhome + 
-0.00045024466632 * S_MntFishProducts + -0.22421712710333 * S_MntFruits + -0.19010144853469 * 
S_MntGoldProds + -0.53373773623953 * S_MntMeatProducts + 0.17506402203495 * S_MntSweetProducts 
+ -0.28551398649672 * S_MntWines + 0.019870944777 * S_NumCatalogPurchases + 0.03537776181533 * 
S_NumDealsPurchases + 0.05580468715403 * S_NumStorePurchases + -0.29131611132704 * 
S_NumWebPurchases + -0.40690084025802 * S_NumWebVisitsMonth + 0.48640195058901 * S_Recency + 
0.31820890239661 * S_Teenhome ;
2095309   +   H12  =    -0.41871753512335 * S_Income  +      0.6025072461821 * S_Kidhome
2095310   +          +    -0.03132724937716 * S_MntFishProducts
2095311   +          +     0.19114182835046 * S_MntFruits  +     0.13483463809539 *
2095312   +        S_MntGoldProds  +    -0.63593603749443 * S_MntMeatProducts
2095313   +          +    -0.07569302401223 * S_MntSweetProducts
2095314   +          +     0.67050112032753 * S_MntWines  +    -0.23159243932208 *
2095315   +        S_NumCatalogPurchases  +    -0.07183698407409 * S_NumDealsPurchases
2095316   +          +     0.54619681114623 * S_NumStorePurchases
2095317   +          +     0.44325129671249 * S_NumWebPurchases
2095318   +          +    -1.25054401670605 * S_NumWebVisitsMonth
2095319   +          +      1.2376290916151 * S_Recency  +     0.43747371517287 *
2095320   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -0.41871753512335 * S_Income + 0.6025072461821 * S_Kidhome + 
-0.03132724937716 * S_MntFishProducts + 0.19114182835046 * S_MntFruits + 0.13483463809539 * 
S_MntGoldProds + -0.63593603749443 * S_MntMeatProducts + -0.07569302401223 * 
S_MntSweetProducts + 0.67050112032753 * S_MntWines + -0.23159243932208 * S_NumCatalogPurchases 
+ -0.07183698407409 * S_NumDealsPurchases + 0.54619681114623 * S_NumStorePurchases + 
0.44325129671249 * S_NumWebPurchases + -1.25054401670605 * S_NumWebVisitsMonth + 
1.2376290916151 * S_Recency + 0.43747371517287 * S_Teenhome ;
2095321   +   H13  =      0.0713579189325 * S_Income  +    -0.05759612462349 * S_Kidhome
2095322   +          +     0.07631777381832 * S_MntFishProducts
2095323   +          +    -0.00387785552441 * S_MntFruits  +    -0.21868916314192 *
2095324   +        S_MntGoldProds  +       0.072623883197 * S_MntMeatProducts
2095325   +          +     0.12637946833766 * S_MntSweetProducts
2095326   +          +    -0.37981663841124 * S_MntWines  +    -0.89958525403162 *
2095327   +        S_NumCatalogPurchases  +    -0.17471885937598 * S_NumDealsPurchases
2095328   +          +     0.15845618359126 * S_NumStorePurchases
2095329   +          +    -0.33296932705082 * S_NumWebPurchases
2095330   +          +      0.0260072296349 * S_NumWebVisitsMonth
2095331   +          +     0.02544749712977 * S_Recency  +    -0.17381561661022 *
2095332   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = 0.0713579189325 * S_Income + -0.05759612462349 * S_Kidhome + 
0.07631777381832 * S_MntFishProducts + -0.00387785552441 * S_MntFruits + -0.21868916314192 * 
S_MntGoldProds + 0.072623883197 * S_MntMeatProducts + 0.12637946833766 * S_MntSweetProducts + 
-0.37981663841124 * S_MntWines + -0.89958525403162 * S_NumCatalogPurchases + -0.17471885937598 
* S_NumDealsPurchases + 0.15845618359126 * S_NumStorePurchases + -0.33296932705082 * 
S_NumWebPurchases + 0.0260072296349 * S_NumWebVisitsMonth + 0.02544749712977 * S_Recency + 
-0.17381561661022 * S_Teenhome ;
2095333   +   H14  =    -0.47498613710851 * S_Income  +     0.09339198401437 * S_Kidhome
2095334   +          +    -0.13642352619174 * S_MntFishProducts
2095335   +          +     0.27167245582117 * S_MntFruits  +    -0.00579747559996 *
2095336   +        S_MntGoldProds  +     0.31591387319577 * S_MntMeatProducts
2095337   +          +     0.14125815807238 * S_MntSweetProducts
2095338   +          +     0.07862916790983 * S_MntWines  +    -0.58905358997534 *
2095339   +        S_NumCatalogPurchases  +     -0.5574069633995 * S_NumDealsPurchases
2095340   +          +     0.19718828261526 * S_NumStorePurchases
2095341   +          +    -0.24156925391919 * S_NumWebPurchases
2095342   +          +    -0.25711078938749 * S_NumWebVisitsMonth
2095343   +          +     0.38883063223812 * S_Recency  +     -0.2396731334184 *
2095344   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = -0.47498613710851 * S_Income + 0.09339198401437 * S_Kidhome + 
-0.13642352619174 * S_MntFishProducts + 0.27167245582117 * S_MntFruits + -0.00579747559996 * 
S_MntGoldProds + 0.31591387319577 * S_MntMeatProducts + 0.14125815807238 * S_MntSweetProducts 
+ 0.07862916790983 * S_MntWines + -0.58905358997534 * S_NumCatalogPurchases + -0.5574069633995 
* S_NumDealsPurchases + 0.19718828261526 * S_NumStorePurchases + -0.24156925391919 * 
S_NumWebPurchases + -0.25711078938749 * S_NumWebVisitsMonth + 0.38883063223812 * S_Recency + 
-0.2396731334184 * S_Teenhome ;
2095345   +   H15  =     0.24624924979609 * S_Income  +    -0.37052106312109 * S_Kidhome
2095346   +          +     0.13579628643404 * S_MntFishProducts
2095347   +          +    -0.05263868911164 * S_MntFruits  +    -0.01504675049991 *
2095348   +        S_MntGoldProds  +     -0.4202277804998 * S_MntMeatProducts
2095349   +          +    -0.01039299374426 * S_MntSweetProducts
2095350   +          +     0.71197420459135 * S_MntWines  +    -0.35973505575029 *
2095351   +        S_NumCatalogPurchases  +     -0.4415445481482 * S_NumDealsPurchases
2095352   +          +     0.58897740652611 * S_NumStorePurchases
2095353   +          +     0.24564485851062 * S_NumWebPurchases
2095354   +          +    -0.13976320243555 * S_NumWebVisitsMonth
2095355   +          +      0.1199367613063 * S_Recency  +    -0.15283161418313 *
2095356   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H15 = 0.24624924979609 * S_Income + -0.37052106312109 * S_Kidhome + 
0.13579628643404 * S_MntFishProducts + -0.05263868911164 * S_MntFruits + -0.01504675049991 * 
S_MntGoldProds + -0.4202277804998 * S_MntMeatProducts + -0.01039299374426 * S_MntSweetProducts 
+ 0.71197420459135 * S_MntWines + -0.35973505575029 * S_NumCatalogPurchases + -0.4415445481482 
* S_NumDealsPurchases + 0.58897740652611 * S_NumStorePurchases + 0.24564485851062 * 
S_NumWebPurchases + -0.13976320243555 * S_NumWebVisitsMonth + 0.1199367613063 * S_Recency + 
-0.15283161418313 * S_Teenhome ;
2095357   +   H16  =     0.23493799758749 * S_Income  +     0.07038278079069 * S_Kidhome
2095358   +          +    -0.45448768538367 * S_MntFishProducts
2095359   +          +     0.02622380709004 * S_MntFruits  +     0.14726698184115 *
2095360   +        S_MntGoldProds  +     0.65760183569767 * S_MntMeatProducts
2095361   +          +    -0.16936256277023 * S_MntSweetProducts
2095362   +          +    -0.40647066866305 * S_MntWines  +     0.99645493491726 *
2095363   +        S_NumCatalogPurchases  +     0.65587239961358 * S_NumDealsPurchases
2095364   +          +    -0.22309716855774 * S_NumStorePurchases
2095365   +          +    -0.61204529910842 * S_NumWebPurchases
2095366   +          +     0.43742228867615 * S_NumWebVisitsMonth
2095367   +          +    -0.56099034256092 * S_Recency  +     -0.2445351671148 *
2095368   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H16 = 0.23493799758749 * S_Income + 0.07038278079069 * S_Kidhome + 
-0.45448768538367 * S_MntFishProducts + 0.02622380709004 * S_MntFruits + 0.14726698184115 * 
S_MntGoldProds + 0.65760183569767 * S_MntMeatProducts + -0.16936256277023 * S_MntSweetProducts 
+ -0.40647066866305 * S_MntWines + 0.99645493491726 * S_NumCatalogPurchases + 0.65587239961358 
* S_NumDealsPurchases + -0.22309716855774 * S_NumStorePurchases + -0.61204529910842 * 
S_NumWebPurchases + 0.43742228867615 * S_NumWebVisitsMonth + -0.56099034256092 * S_Recency + 
-0.2445351671148 * S_Teenhome ;
2095369   +   H17  =    -0.00107702057163 * S_Income  +     0.25116135719972 * S_Kidhome
2095370   +          +    -0.04540308470858 * S_MntFishProducts
2095371   +          +        0.21487241577 * S_MntFruits  +    -0.12914913547414 *
2095372   +        S_MntGoldProds  +    -0.04149021191395 * S_MntMeatProducts
2095373   +          +     0.02853521979141 * S_MntSweetProducts
2095374   +          +     -0.2435805887418 * S_MntWines  +    -0.04509621661407 *
2095375   +        S_NumCatalogPurchases  +    -0.26492036720429 * S_NumDealsPurchases
2095376   +          +     -0.3299561248944 * S_NumStorePurchases
2095377   +          +    -0.09806597448224 * S_NumWebPurchases
2095378   +          +      0.0427056351245 * S_NumWebVisitsMonth
2095379   +          +     0.03953235628202 * S_Recency  +    -0.11317308767713 *
2095380   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H17 = -0.00107702057163 * S_Income + 0.25116135719972 * S_Kidhome + 
-0.04540308470858 * S_MntFishProducts + 0.21487241577 * S_MntFruits + -0.12914913547414 * 
S_MntGoldProds + -0.04149021191395 * S_MntMeatProducts + 0.02853521979141 * S_MntSweetProducts 
+ -0.2435805887418 * S_MntWines + -0.04509621661407 * S_NumCatalogPurchases + 
-0.26492036720429 * S_NumDealsPurchases + -0.3299561248944 * S_NumStorePurchases + 
-0.09806597448224 * S_NumWebPurchases + 0.0427056351245 * S_NumWebVisitsMonth + 
0.03953235628202 * S_Recency + -0.11317308767713 * S_Teenhome ;
2095381   +   H11  = H11  +     0.50033674561531 * AcceptedCmp10
2095382   +          +    -0.02275693117286 * AcceptedCmp20  +     0.31338891533156 *
2095383   +        AcceptedCmp30  +      0.3901248845706 * AcceptedCmp40
2095384   +          +     0.44314358358111 * AcceptedCmp50  +    -0.20444060864498 *
2095385   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.50033674561531 * AcceptedCmp10 + -0.02275693117286 * 
AcceptedCmp20 + 0.31338891533156 * AcceptedCmp30 + 0.3901248845706 * AcceptedCmp40 + 
0.44314358358111 * AcceptedCmp50 + -0.20444060864498 * Complain0 ;
2095386   +   H12  = H12  +     0.30103938822692 * AcceptedCmp10
2095387   +          +     0.54298746723422 * AcceptedCmp20  +     0.50401040035525 *
2095388   +        AcceptedCmp30  +     0.43447710825306 * AcceptedCmp40
2095389   +          +     0.60794421030027 * AcceptedCmp50  +    -0.28114274461319 *
2095390   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.30103938822692 * AcceptedCmp10 + 0.54298746723422 * 
AcceptedCmp20 + 0.50401040035525 * AcceptedCmp30 + 0.43447710825306 * AcceptedCmp40 + 
0.60794421030027 * AcceptedCmp50 + -0.28114274461319 * Complain0 ;
2095391   +   H13  = H13  +     -0.1890212967757 * AcceptedCmp10
2095392   +          +    -0.11487406996391 * AcceptedCmp20  +    -0.22740618754863 *
2095393   +        AcceptedCmp30  +      0.2354510231918 * AcceptedCmp40
2095394   +          +    -0.14327434649067 * AcceptedCmp50  +    -0.17839080850556 *
2095395   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.1890212967757 * AcceptedCmp10 + -0.11487406996391 * 
AcceptedCmp20 + -0.22740618754863 * AcceptedCmp30 + 0.2354510231918 * AcceptedCmp40 + 
-0.14327434649067 * AcceptedCmp50 + -0.17839080850556 * Complain0 ;
2095396   +   H14  = H14  +    -0.28194187416219 * AcceptedCmp10
2095397   +          +     0.11732089254624 * AcceptedCmp20  +     0.34964075536156 *
2095398   +        AcceptedCmp30  +     0.05772396286169 * AcceptedCmp40
2095399   +          +    -0.08671748651826 * AcceptedCmp50  +      0.0629540108407 *
2095400   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.28194187416219 * AcceptedCmp10 + 0.11732089254624 * 
AcceptedCmp20 + 0.34964075536156 * AcceptedCmp30 + 0.05772396286169 * AcceptedCmp40 + 
-0.08671748651826 * AcceptedCmp50 + 0.0629540108407 * Complain0 ;
2095401   +   H15  = H15  +    -0.01058257322803 * AcceptedCmp10
2095402   +          +     0.26755355732587 * AcceptedCmp20  +     0.40856661734724 *
2095403   +        AcceptedCmp30  +     0.02977117354989 * AcceptedCmp40
2095404   +          +       0.073655049734 * AcceptedCmp50  +     0.25562048226555 *
2095405   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + -0.01058257322803 * AcceptedCmp10 + 0.26755355732587 * 
AcceptedCmp20 + 0.40856661734724 * AcceptedCmp30 + 0.02977117354989 * AcceptedCmp40 + 
0.073655049734 * AcceptedCmp50 + 0.25562048226555 * Complain0 ;
2095406   +   H16  = H16  +    -0.65590117532084 * AcceptedCmp10
2095407   +          +    -0.31314161223579 * AcceptedCmp20  +    -0.18863165264573 *
2095408   +        AcceptedCmp30  +    -0.18832338914237 * AcceptedCmp40
2095409   +          +    -0.53765749471786 * AcceptedCmp50  +     0.17409401877513 *
2095410   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H16 = H16 + -0.65590117532084 * AcceptedCmp10 + -0.31314161223579 * 
AcceptedCmp20 + -0.18863165264573 * AcceptedCmp30 + -0.18832338914237 * AcceptedCmp40 + 
-0.53765749471786 * AcceptedCmp50 + 0.17409401877513 * Complain0 ;
2095411   +   H17  = H17  +    -0.42253231673718 * AcceptedCmp10
2095412   +          +    -0.40954345229557 * AcceptedCmp20  +    -0.30577523080786 *
2095413   +        AcceptedCmp30  +    -0.22396670899437 * AcceptedCmp40
2095414   +          +     0.05757251451004 * AcceptedCmp50  +     0.07813950542487 *
2095415   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H17 = H17 + -0.42253231673718 * AcceptedCmp10 + -0.40954345229557 * 
AcceptedCmp20 + -0.30577523080786 * AcceptedCmp30 + -0.22396670899437 * AcceptedCmp40 + 
0.05757251451004 * AcceptedCmp50 + 0.07813950542487 * Complain0 ;
2095416   +   H11  = H11  +    -0.14483542022901 * Education2n_Cycle
2095417   +          +     0.32176647745332 * EducationBasic  +     0.00900796305072 *
2095418   +        EducationGraduation  +    -0.00243484910123 * EducationMaster
2095419   +          +    -0.22074132229211 * Marital_StatusDivorced
2095420   +          +     0.70282742634901 * Marital_StatusMarried
2095421   +          +     -0.5926244797961 * Marital_StatusSingle
2095422   +          +     0.21342221410999 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.14483542022901 * Education2n_Cycle + 0.32176647745332 * 
EducationBasic + 0.00900796305072 * EducationGraduation + -0.00243484910123 * EducationMaster 
+ -0.22074132229211 * Marital_StatusDivorced + 0.70282742634901 * Marital_StatusMarried + 
-0.5926244797961 * Marital_StatusSingle + 0.21342221410999 * Marital_StatusTogether ;
2095423   +   H12  = H12  +    -0.10242932200247 * Education2n_Cycle
2095424   +          +     0.34937926721317 * EducationBasic  +    -0.20395479511872 *
2095425   +        EducationGraduation  +     0.31210327899339 * EducationMaster
2095426   +          +    -0.46376392175295 * Marital_StatusDivorced
2095427   +          +       0.589453579718 * Marital_StatusMarried
2095428   +          +    -0.45342174978481 * Marital_StatusSingle
2095429   +          +     0.70517120763557 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.10242932200247 * Education2n_Cycle + 0.34937926721317 * 
EducationBasic + -0.20395479511872 * EducationGraduation + 0.31210327899339 * EducationMaster 
+ -0.46376392175295 * Marital_StatusDivorced + 0.589453579718 * Marital_StatusMarried + 
-0.45342174978481 * Marital_StatusSingle + 0.70517120763557 * Marital_StatusTogether ;
2095430   +   H13  = H13  +     0.24858755570324 * Education2n_Cycle
2095431   +          +     0.07360039359386 * EducationBasic  +    -0.42563056620078 *
2095432   +        EducationGraduation  +    -0.25970840250323 * EducationMaster
2095433   +          +     0.26981972015482 * Marital_StatusDivorced
2095434   +          +    -0.01707364864139 * Marital_StatusMarried
2095435   +          +     0.38646060840009 * Marital_StatusSingle
2095436   +          +     0.19694047086013 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.24858755570324 * Education2n_Cycle + 0.07360039359386 * 
EducationBasic + -0.42563056620078 * EducationGraduation + -0.25970840250323 * EducationMaster 
+ 0.26981972015482 * Marital_StatusDivorced + -0.01707364864139 * Marital_StatusMarried + 
0.38646060840009 * Marital_StatusSingle + 0.19694047086013 * Marital_StatusTogether ;
2095437   +   H14  = H14  +     0.22577522124265 * Education2n_Cycle
2095438   +          +     0.04183136697557 * EducationBasic  +    -0.27725331198825 *
2095439   +        EducationGraduation  +     0.15709188532123 * EducationMaster
2095440   +          +    -0.01933675094701 * Marital_StatusDivorced
2095441   +          +     0.52969577969434 * Marital_StatusMarried
2095442   +          +      -0.348697714569 * Marital_StatusSingle
2095443   +          +      0.5020342481888 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.22577522124265 * Education2n_Cycle + 0.04183136697557 * 
EducationBasic + -0.27725331198825 * EducationGraduation + 0.15709188532123 * EducationMaster 
+ -0.01933675094701 * Marital_StatusDivorced + 0.52969577969434 * Marital_StatusMarried + 
-0.348697714569 * Marital_StatusSingle + 0.5020342481888 * Marital_StatusTogether ;
2095444   +   H15  = H15  +     0.04488332711225 * Education2n_Cycle
2095445   +          +     0.01911097443907 * EducationBasic  +    -0.11699443624996 *
2095446   +        EducationGraduation  +    -0.07291393566738 * EducationMaster
2095447   +          +    -0.04665146013984 * Marital_StatusDivorced
2095448   +          +      -0.586219175167 * Marital_StatusMarried
2095449   +          +     0.55713543417712 * Marital_StatusSingle
2095450   +          +    -0.42208959885332 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.04488332711225 * Education2n_Cycle + 0.01911097443907 * 
EducationBasic + -0.11699443624996 * EducationGraduation + -0.07291393566738 * EducationMaster 
+ -0.04665146013984 * Marital_StatusDivorced + -0.586219175167 * Marital_StatusMarried + 
0.55713543417712 * Marital_StatusSingle + -0.42208959885332 * Marital_StatusTogether ;
2095451   +   H16  = H16  +     0.09174117861154 * Education2n_Cycle
2095452   +          +     -0.1378945860659 * EducationBasic  +     -0.0728635369665 *
2095453   +        EducationGraduation  +     0.29860714824438 * EducationMaster
2095454   +          +    -0.05632171154347 * Marital_StatusDivorced
2095455   +          +     0.03215547861665 * Marital_StatusMarried
2095456   +          +     0.16870781172538 * Marital_StatusSingle
2095457   +          +    -0.04883314322676 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.09174117861154 * Education2n_Cycle + -0.1378945860659 * 
EducationBasic + -0.0728635369665 * EducationGraduation + 0.29860714824438 * EducationMaster + 
-0.05632171154347 * Marital_StatusDivorced + 0.03215547861665 * Marital_StatusMarried + 
0.16870781172538 * Marital_StatusSingle + -0.04883314322676 * Marital_StatusTogether ;
2095458   +   H17  = H17  +    -0.00343694558117 * Education2n_Cycle
2095459   +          +     0.32636427598227 * EducationBasic  +     0.16259654486833 *
2095460   +        EducationGraduation  +    -0.00424229454859 * EducationMaster
2095461   +          +    -0.21765415159355 * Marital_StatusDivorced
2095462   +          +     -0.0542857922075 * Marital_StatusMarried
2095463   +          +     0.20679907454933 * Marital_StatusSingle
2095464   +          +     0.14976519710725 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H17 = H17 + -0.00343694558117 * Education2n_Cycle + 0.32636427598227 * 
EducationBasic + 0.16259654486833 * EducationGraduation + -0.00424229454859 * EducationMaster 
+ -0.21765415159355 * Marital_StatusDivorced + -0.0542857922075 * Marital_StatusMarried + 
0.20679907454933 * Marital_StatusSingle + 0.14976519710725 * Marital_StatusTogether ;
2095465   +   H11  =     0.92977078759503 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 0.92977078759503 + H11 ;
2095466   +   H12  =    -0.97970409253156 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -0.97970409253156 + H12 ;
2095467   +   H13  =     -0.5001144792196 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.5001144792196 + H13 ;
2095468   +   H14  =    -0.90715840862541 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = -0.90715840862541 + H14 ;
2095469   +   H15  =     0.87046153389036 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = 0.87046153389036 + H15 ;
2095470   +   H16  =     0.49066122767086 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = 0.49066122767086 + H16 ;
2095471   +   H17  =    -1.05949763460293 + H17 ;
MPRINT(EM_DIAGRAM):   H17 = -1.05949763460293 + H17 ;
2095472   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
2095473   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
2095474   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
2095475   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
2095476   +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
2095477   +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
2095478   +   H17  = TANH(H17 );
MPRINT(EM_DIAGRAM):   H17 = TANH(H17 );
2095479   +END;
MPRINT(EM_DIAGRAM):   END;
2095480   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2095481   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
2095482   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
2095483   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
2095484   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
2095485   +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
2095486   +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
2095487   +   H17  = .;
MPRINT(EM_DIAGRAM):   H17 = .;
2095488   +END;
MPRINT(EM_DIAGRAM):   END;
2095489   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2095490   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2095491   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2095492   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2095493   +   P_DepVar1  =    -2.32998401250848 * H11  +     -3.2074078511991 * H12
2095494   +          +    -0.69549988605443 * H13  +    -1.74950789108762 * H14
2095495   +          +    -1.74013772071344 * H15  +     2.65306089869015 * H16
2095496   +          +     0.03700459000906 * H17 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.32998401250848 * H11 + -3.2074078511991 * H12 + 
-0.69549988605443 * H13 + -1.74950789108762 * H14 + -1.74013772071344 * H15 + 2.65306089869015 
* H16 + 0.03700459000906 * H17 ;
2095497   +   P_DepVar1  =    -1.51229898726716 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.51229898726716 + P_DepVar1 ;
2095498   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2095499   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2095500   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2095501   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2095502   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2095503   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2095504   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2095505   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2095506   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2095507   +END;
MPRINT(EM_DIAGRAM):   END;
2095508   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2095509   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2095510   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2095511   +END;
MPRINT(EM_DIAGRAM):   END;
2095512   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2095513   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2095514   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2095515   +END;
MPRINT(EM_DIAGRAM):   END;
2095516   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2095517   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2095518   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2095519   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2095520   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2095521   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2095522   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2095523   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2095524   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2095525   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2095526   +END;
MPRINT(EM_DIAGRAM):   END;
2095527   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2095528   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2095529   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2095530   +drop
2095531   +H11
2095532   +H12
2095533   +H13
2095534   +H14
2095535   +H15
2095536   +H16
2095537   +H17
2095538   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 H17 ;
2095539   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2095540    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2095541    quit;
2095542    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2095543    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2095544    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2095545    retain ID 2 Node "Neural30";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Neural30";
2095546    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2095547    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2154 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2154 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2095548    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2095549    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2095550    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2154 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2154 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2095551    proc sort data=EMWS8.Neural30_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Neural30_variableset out=_temp2(keep=NAME CREATOR);
2095552    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2095553    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.NEURAL30_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2095554    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2095555    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2095556    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2095557    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2095558    proc contents data=EMWS8.Neural30_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Neural30_train out=_meta(keep=NAME) noprint;
2095559    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

2095560    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2095561    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2095562    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 53 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2095563    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2095564    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2095565    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2095566    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 53 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2095567    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2095568    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2095568  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 1016 rows and 5 columns.

2095569    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2095570    proc append base=EMWS8.Ensmbl9_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl9_FCMP data=_tempx;
2095571    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL9_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 1016 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL9_FCMP has 1016 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2095572    filename _pref
2095572  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
2095573    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2095574    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
2095575   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2095576   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
2095577   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2095578   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
2095579   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
2095580   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2095581    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2095582    quit;
2095583    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2095584    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2095585    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2095586    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
2095587    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2095588    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2095589    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2095590    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2095591    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2095592    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
2095593    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2095594    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2095595    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2095596    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2095597    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2095598    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2095599    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
2095600    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

2095601    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2095602    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2095603    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2095604    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2095605    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2095606    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2095607    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2095608    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2095609    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2095609  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

2095610    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2095611    proc append base=EMWS8.Ensmbl9_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl9_FCMP data=_tempx;
2095612    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL9_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL9_FCMP has 1020 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2095613    filename _pref
2095613  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
2095614    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2095615    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
2095616   +
2095617   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
2095618   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
2095618  !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
2095619   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
2095620   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
2095621   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
2095622   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
2095623   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2095624    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2095625    quit;
2095626    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2095627    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2095628    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2095629    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
2095630    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2095631    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2095632    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2095633    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2095634    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2095635    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
2095636    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2095637    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2095638    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2095639    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2095640    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2095641    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2095642    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
2095643    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2095644    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2095645    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2095646    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2095647    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2095648    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2095649    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2095650    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2095651    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2095652    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2095652  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

2095653    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2095654    proc append base=EMWS8.Ensmbl9_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl9_FCMP data=_tempx;
2095655    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL9_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL9_FCMP has 1059 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2095656    filename _pref
2095656  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
2095657    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2095658    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
2095659   +
2095660   +
2095661   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
2095662   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
2095663   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
2095664   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
2095665   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
2095666   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2095667   +
2095668   +
2095669   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
2095670   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
2095671   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
2095672   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
2095673   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
2095674   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2095675   +
2095676   +
2095677   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
2095678   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
2095679   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
2095680   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
2095681   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
2095682   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2095683   +
2095684   +
2095685   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
2095686   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
2095687   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
2095688   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
2095689   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
2095690   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2095691   +
2095692   +
2095693   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
2095694   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
2095695   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
2095696   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
2095697   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
2095698   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2095699   +
2095700   +
2095701   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
2095702   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
2095703   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
2095704   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
2095705   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
2095706   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2095707   +
2095708   +
2095709   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
2095710   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
2095711   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
2095712   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
2095713   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
2095714   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2095715   +
2095716   +
2095717   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
2095718   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
2095719   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
2095720   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
2095721   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
2095722   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2095723   +if
2095724   +_FILTERNORM1 not in ( '.')
2095725   + and
2095726   +_FILTERNORM2 not in ( '.')
2095727   + and
2095728   +_FILTERNORM3 not in ( '.')
2095729   + and
2095730   +_FILTERNORM4 not in ( '.')
2095731   + and
2095732   +_FILTERNORM5 not in ( '.')
2095733   + and
2095734   +_FILTERNORM6 not in ( '.')
2095735   + and
2095736   +_FILTERNORM7 not in ( ' ')
2095737   + and
2095738   +_FILTERNORM8 not in ( ' ')
2095739   +and
2095740   +( Dt_Customer ne .)
2095741   +and ( Income ne . and (Income<=107000))
2095742   +and ( Kidhome ne .)
2095743   +and ( MntFishProducts ne .)
2095744   +and ( MntFruits ne .)
2095745   +and ( MntGoldProds ne .)
2095746   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
2095747   +and ( MntSweetProducts ne .)
2095748   +and ( MntWines ne .)
2095749   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
2095750   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
2095751   +and ( NumStorePurchases ne .)
2095752   +and ( NumWebPurchases ne .)
2095753   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
2095754   +and ( Recency ne .)
2095755   +and ( Teenhome ne .)
2095756   +and ( Year_Birth ne .)
2095757   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
2095758   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
2095759   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
2095760   +end;
MPRINT(EM_DIAGRAM):   end;
2095761   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
2095762   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2095763    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2095764    quit;
2095765    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2095766    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2095767    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2095768    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
2095769    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2095770    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2095771    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2095772    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2095773    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2095774    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
2095775    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2095776    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2095777    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2095778    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2095779    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2095780    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2095781    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
2095782    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

2095783    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2095784    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2095785    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2095786    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2095787    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2095788    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2095789    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2095790    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2095791    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2095791  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

2095792    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2095793    proc append base=EMWS8.Ensmbl9_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl9_FCMP data=_tempx;
2095794    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL9_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL9_FCMP has 1125 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2095795    %macro varDept(fcmpdata=,id=);
2095796    %global nobs&id scoreFlag&id;
2095797    %let scoreFlag&id = 0;
2095798    %if &id=1 or ^&fcmpStart %then %do;
2095799    proc sort data=&fcmpdata out=_temp&id nodupkey;
2095800    by NAME;
2095801    where id=&id and LHS in( %let j=1;
2095802    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
2095803    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
2095804    "&var" %let j = %eval(&j+1);
2095805    %end;
2095806    );
2095807    run;
2095808    %let dsid = %sysfunc(open(_temp&id));
2095809    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2095810    %let dsid = %sysfunc(close(&dsid));
2095811    %if &&nobs&id %then %do;
2095812    %let scoreFlag&id = 1;
2095813    %let fcmpStart = 1;
2095814    %end;
2095815    %else %let fcmpStart = 0;
2095816    %end;
2095817    %else %do;
2095818    proc sort data=&fcmpdata out=_tempid;
2095819    where id=&id;
2095820    by LHS;
2095821    run;
2095822    %let dsid = %sysfunc(open(_tempid));
2095823    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2095824    %let dsid = %sysfunc(close(&dsid));
2095825    %if ^&&nobs&id %then %do;
2095826    proc datasets lib=work nolist;
2095827    delete _tempid;
2095828    run;
2095829    quit;
2095830    %end;
2095831    %else %do;
2095832    data _tempAll;
2095833    set %let j=%eval(&id-1);
2095834    %do x=1 %to &j;
2095835    %if &&nobs&x %then %do;
2095836    _temp&x %end;
2095837    %end;
2095838    ;
2095839    run;
2095840    proc sql;
2095841    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
2095841  ! work._tempid p2 where p.name=p2.lhs;
2095842    quit;
2095843    data _temp&id;
2095844    set _temp&id;
2095845    where LHS ne '' and NAME ne '' and Node ne '';
2095846    run;
2095847    proc datasets lib=work nolist;
2095848    delete _tempAll;
2095849    run;
2095850    %let dsid = %sysfunc(open(_temp&id));
2095851    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2095852    %let dsid = %sysfunc(close(&dsid));
2095853    %if ^&&nobs&id %then %do;
2095854    proc datasets lib=work nolist;
2095855    delete _temp&id;
2095856    run;
2095857    quit;
2095858    %end;
2095859    %else %do;
2095860    %let scoreFlag&id = 1;
2095861    data _temp&id;
2095862    set _temp&id;
2095863    where LHS ne NAME and node ne '';
2095864    run;
2095865    %let dsid = %sysfunc(open(_temp&id));
2095866    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2095867    %let dsid = %sysfunc(close(&dsid));
2095868    %if ^&&nobs&id %then %do;
2095869    proc datasets lib=work nolist;
2095870    delete _temp&id;
2095871    run;
2095872    quit;
2095873    %end;
2095874    %else %do;
2095875    proc sort data=_temp&id nodupkey;
2095876    by LHS NAME;
2095877    run;
2095878    %end;
2095879    %end;
2095880    %end;
2095881    %end;
2095882    %mend varDept;
2095883    %macro optCode(outdata=fcmpdata);
2095884    %global fcmpStart;
2095885    %let fcmpStart = 0;
2095886    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
2095887    %let NumNodes=9;
2095888    %do k=1 %to &NumNodes;
2095889    %vardept(fcmpdata=&outdata, id=&k);
2095890    %end;
2095891    %mend optCode;
2095892    %optcode(outData=EMWS8.Ensmbl9_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl9_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL9_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl9_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 98 observations read from the data set EMWS8.ENSMBL9_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 73 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 25 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl9_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL9_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl9_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL9_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl9_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL9_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 25 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 25 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp5;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP5 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl9_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL9_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 25 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 25 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp6;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP6 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl9_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL9_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 25 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 25 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl9_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL9_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl9_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL9_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

2095893    filename _pref
2095893  ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural35\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural35\EMPUBLISHSCORE.sas";
2095894    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2095895    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Neural35\EMPUBLISHSCORE.sas.
2095896   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2095897   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2095898   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2095899   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2095900   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2095901   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2095902   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2095903   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2095904   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2095905   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2095906   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2095907   +LENGTH _WARN_ $4
2095908   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
2095909   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2095910   +
2095911   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2095912   +
2095913   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2095914   +
2095915   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2095916   +
2095917   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2095918   +
2095919   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2095920   +
2095921   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2095922   +
2095923   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2095924   +
2095925   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2095926   +
2095927   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2095928   +
2095929   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2095930   +
2095931   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2095932   +
2095933   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2095934   +
2095935   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2095936   +
2095937   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2095938   +
2095939   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2095940   +
2095941   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2095942   +
2095943   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2095944   +
2095945   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2095946   +
2095947   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2095948   +
2095949   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2095950   +
2095951   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2095952   +
2095953   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2095954   +
2095955   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2095956   +
2095957   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2095958   +
2095959   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2095960   +
2095961   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2095962   +
2095963   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2095964   +
2095965   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2095966   +
2095967   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
2095968   +
2095969   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
2095970   +
2095971   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
2095972   +
2095973   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
2095974   +
2095975   +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
2095976   +
2095977   +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
2095978   +
2095979   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2095980   +
2095981   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2095982   +
2095983   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2095984   +
2095985   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2095986   +
2095987   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2095988   +
2095989   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2095990   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2095991   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2095992   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2095993   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2095994   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2095995   +end;
MPRINT(EM_DIAGRAM):   end;
2095996   +else do;
MPRINT(EM_DIAGRAM):   else do;
2095997   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2095998   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2095999   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2096000   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2096001   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2096002   +   end;
MPRINT(EM_DIAGRAM):   end;
2096003   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2096004   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2096005   +   end;
MPRINT(EM_DIAGRAM):   end;
2096006   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2096007   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2096008   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2096009   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2096010   +   end;
MPRINT(EM_DIAGRAM):   end;
2096011   +end;
MPRINT(EM_DIAGRAM):   end;
2096012   +
2096013   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2096014   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2096015   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2096016   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2096017   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2096018   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2096019   +end;
MPRINT(EM_DIAGRAM):   end;
2096020   +else do;
MPRINT(EM_DIAGRAM):   else do;
2096021   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2096022   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2096023   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2096024   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2096025   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2096026   +   end;
MPRINT(EM_DIAGRAM):   end;
2096027   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2096028   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2096029   +   end;
MPRINT(EM_DIAGRAM):   end;
2096030   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2096031   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2096032   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2096033   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2096034   +   end;
MPRINT(EM_DIAGRAM):   end;
2096035   +end;
MPRINT(EM_DIAGRAM):   end;
2096036   +
2096037   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2096038   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2096039   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2096040   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2096041   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2096042   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2096043   +end;
MPRINT(EM_DIAGRAM):   end;
2096044   +else do;
MPRINT(EM_DIAGRAM):   else do;
2096045   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2096046   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2096047   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2096048   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2096049   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2096050   +   end;
MPRINT(EM_DIAGRAM):   end;
2096051   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2096052   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2096053   +   end;
MPRINT(EM_DIAGRAM):   end;
2096054   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2096055   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2096056   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2096057   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2096058   +   end;
MPRINT(EM_DIAGRAM):   end;
2096059   +end;
MPRINT(EM_DIAGRAM):   end;
2096060   +
2096061   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2096062   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2096063   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2096064   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2096065   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2096066   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2096067   +end;
MPRINT(EM_DIAGRAM):   end;
2096068   +else do;
MPRINT(EM_DIAGRAM):   else do;
2096069   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2096070   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2096071   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2096072   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2096073   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2096074   +   end;
MPRINT(EM_DIAGRAM):   end;
2096075   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2096076   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2096077   +   end;
MPRINT(EM_DIAGRAM):   end;
2096078   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2096079   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2096080   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2096081   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2096082   +   end;
MPRINT(EM_DIAGRAM):   end;
2096083   +end;
MPRINT(EM_DIAGRAM):   end;
2096084   +
2096085   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2096086   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2096087   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2096088   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2096089   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2096090   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2096091   +end;
MPRINT(EM_DIAGRAM):   end;
2096092   +else do;
MPRINT(EM_DIAGRAM):   else do;
2096093   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2096094   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2096095   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2096096   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2096097   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2096098   +   end;
MPRINT(EM_DIAGRAM):   end;
2096099   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2096100   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2096101   +   end;
MPRINT(EM_DIAGRAM):   end;
2096102   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2096103   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2096104   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2096105   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2096106   +   end;
MPRINT(EM_DIAGRAM):   end;
2096107   +end;
MPRINT(EM_DIAGRAM):   end;
2096108   +
2096109   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2096110   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2096111   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2096112   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2096113   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2096114   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2096115   +end;
MPRINT(EM_DIAGRAM):   end;
2096116   +else do;
MPRINT(EM_DIAGRAM):   else do;
2096117   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2096118   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2096119   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2096120   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2096121   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2096122   +   end;
MPRINT(EM_DIAGRAM):   end;
2096123   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2096124   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2096125   +   end;
MPRINT(EM_DIAGRAM):   end;
2096126   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2096127   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2096128   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2096129   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2096130   +   end;
MPRINT(EM_DIAGRAM):   end;
2096131   +end;
MPRINT(EM_DIAGRAM):   end;
2096132   +
2096133   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2096134   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
2096135   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2096136   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2096137   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2096138   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2096139   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2096140   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2096141   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2096142   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2096143   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2096144   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2096145   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2096146   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2096147   +end;
MPRINT(EM_DIAGRAM):   end;
2096148   +else do;
MPRINT(EM_DIAGRAM):   else do;
2096149   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2096150   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2096151   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2096152   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2096153   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2096154   +   end;
MPRINT(EM_DIAGRAM):   end;
2096155   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2096156   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2096157   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2096158   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2096159   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2096160   +   end;
MPRINT(EM_DIAGRAM):   end;
2096161   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2096162   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2096163   +   end;
MPRINT(EM_DIAGRAM):   end;
2096164   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2096165   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2096166   +   end;
MPRINT(EM_DIAGRAM):   end;
2096167   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2096168   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2096169   +   end;
MPRINT(EM_DIAGRAM):   end;
2096170   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2096171   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2096172   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2096173   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2096174   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2096175   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2096176   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2096177   +   end;
MPRINT(EM_DIAGRAM):   end;
2096178   +end;
MPRINT(EM_DIAGRAM):   end;
2096179   +
2096180   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2096181   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2096182   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
2096183   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2096184   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2096185   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2096186   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2096187   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2096188   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2096189   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2096190   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2096191   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2096192   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2096193   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2096194   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2096195   +end;
MPRINT(EM_DIAGRAM):   end;
2096196   +else do;
MPRINT(EM_DIAGRAM):   else do;
2096197   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2096198   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2096199   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2096200   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2096201   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2096202   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2096203   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2096204   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2096205   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2096206   +         end;
MPRINT(EM_DIAGRAM):   end;
2096207   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2096208   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2096209   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2096210   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2096211   +            end;
MPRINT(EM_DIAGRAM):   end;
2096212   +         end;
MPRINT(EM_DIAGRAM):   end;
2096213   +      end;
MPRINT(EM_DIAGRAM):   end;
2096214   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2096215   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2096216   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2096217   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2096218   +         end;
MPRINT(EM_DIAGRAM):   end;
2096219   +      end;
MPRINT(EM_DIAGRAM):   end;
2096220   +   end;
MPRINT(EM_DIAGRAM):   end;
2096221   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2096222   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2096223   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2096224   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2096225   +      end;
MPRINT(EM_DIAGRAM):   end;
2096226   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2096227   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2096228   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2096229   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2096230   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2096231   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2096232   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2096233   +         end;
MPRINT(EM_DIAGRAM):   end;
2096234   +      end;
MPRINT(EM_DIAGRAM):   end;
2096235   +   end;
MPRINT(EM_DIAGRAM):   end;
2096236   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2096237   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2096238   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2096239   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2096240   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2096241   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2096242   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2096243   +   end;
MPRINT(EM_DIAGRAM):   end;
2096244   +end;
MPRINT(EM_DIAGRAM):   end;
2096245   +
2096246   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2096247   +*** Checking missing input Interval
2096248   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2096249   +
2096250   +IF NMISS(
2096251   +   Income ,
2096252   +   Kidhome ,
2096253   +   MntFishProducts ,
2096254   +   MntFruits ,
2096255   +   MntGoldProds ,
2096256   +   MntMeatProducts ,
2096257   +   MntSweetProducts ,
2096258   +   MntWines ,
2096259   +   NumCatalogPurchases ,
2096260   +   NumDealsPurchases ,
2096261   +   NumStorePurchases ,
2096262   +   NumWebPurchases ,
2096263   +   NumWebVisitsMonth ,
2096264   +   Recency ,
2096265   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Income , Kidhome , MntFishProducts , MntFruits , MntGoldProds 
, MntMeatProducts , MntSweetProducts , MntWines , NumCatalogPurchases , NumDealsPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , Recency , Teenhome ) THEN DO;
2096266   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2096267   +
2096268   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2096269   +END;
MPRINT(EM_DIAGRAM):   END;
2096270   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2096271   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
2096272   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2096273   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2096274   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2096275   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2096276   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2096277   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2096278   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2096279   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2096280   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2096281   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2096282   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2096283   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2096284   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2096285   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2096286   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2096287   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2096288   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2096289   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2096290   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2096291   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2096292   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2096293   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2096294   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2096295   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2096296   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2096297   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2096298   +END;
MPRINT(EM_DIAGRAM):   END;
2096299   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2096300   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2096301   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2096302   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2096303   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2096304   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2096305   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2096306   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2096307   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2096308   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2096309   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2096310   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2096311   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2096312   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
2096313   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2096314   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2096315   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2096316   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2096317   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2096318   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2096319   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2096320   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2096321   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2096322   +   ELSE S_NumCatalogPurchases
2096323   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2096324   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2096325   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2096326   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2096327   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2096328   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2096329   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2096330   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2096331   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2096332   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2096333   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2096334   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2096335   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2096336   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2096337   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2096338   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2096339   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2096340   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2096341   +END;
MPRINT(EM_DIAGRAM):   END;
2096342   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2096343   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
2096344   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2096345   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2096346   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
2096347   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2096348   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2096349   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
2096350   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2096351   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2096352   +   H11  =     0.87660114046125 * S_Income  +     -0.7994451897827 * S_Kidhome
2096353   +          +    -0.08967295716195 * S_MntFishProducts
2096354   +          +     0.03184635437516 * S_MntFruits  +    -0.13860895575438 *
2096355   +        S_MntGoldProds  +     0.55790460748169 * S_MntMeatProducts
2096356   +          +    -0.02806094557115 * S_MntSweetProducts
2096357   +          +    -0.14537763592724 * S_MntWines  +     0.76891266523847 *
2096358   +        S_NumCatalogPurchases  +     0.16842007461305 * S_NumDealsPurchases
2096359   +          +     0.25137876058262 * S_NumStorePurchases
2096360   +          +    -0.07865442401292 * S_NumWebPurchases
2096361   +          +     1.03197398967259 * S_NumWebVisitsMonth
2096362   +          +    -1.26907156503759 * S_Recency  +    -0.76016893316351 *
2096363   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.87660114046125 * S_Income + -0.7994451897827 * S_Kidhome + 
-0.08967295716195 * S_MntFishProducts + 0.03184635437516 * S_MntFruits + -0.13860895575438 * 
S_MntGoldProds + 0.55790460748169 * S_MntMeatProducts + -0.02806094557115 * S_MntSweetProducts 
+ -0.14537763592724 * S_MntWines + 0.76891266523847 * S_NumCatalogPurchases + 0.16842007461305 
* S_NumDealsPurchases + 0.25137876058262 * S_NumStorePurchases + -0.07865442401292 * 
S_NumWebPurchases + 1.03197398967259 * S_NumWebVisitsMonth + -1.26907156503759 * S_Recency + 
-0.76016893316351 * S_Teenhome ;
2096364   +   H12  =     0.37295000114468 * S_Income  +    -0.12834211496575 * S_Kidhome
2096365   +          +     0.19312392388912 * S_MntFishProducts
2096366   +          +      0.1561688289137 * S_MntFruits  +     0.04004810938796 *
2096367   +        S_MntGoldProds  +     0.32599201739588 * S_MntMeatProducts
2096368   +          +       0.204174263605 * S_MntSweetProducts
2096369   +          +    -0.11560784817014 * S_MntWines  +     0.12255073568725 *
2096370   +        S_NumCatalogPurchases  +    -0.05543734180218 * S_NumDealsPurchases
2096371   +          +     0.07747830335769 * S_NumStorePurchases
2096372   +          +     0.07960837555191 * S_NumWebPurchases
2096373   +          +     0.02351602389122 * S_NumWebVisitsMonth
2096374   +          +     -0.2840853952427 * S_Recency  +    -0.47421627761687 *
2096375   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = 0.37295000114468 * S_Income + -0.12834211496575 * S_Kidhome + 
0.19312392388912 * S_MntFishProducts + 0.1561688289137 * S_MntFruits + 0.04004810938796 * 
S_MntGoldProds + 0.32599201739588 * S_MntMeatProducts + 0.204174263605 * S_MntSweetProducts + 
-0.11560784817014 * S_MntWines + 0.12255073568725 * S_NumCatalogPurchases + -0.05543734180218 
* S_NumDealsPurchases + 0.07747830335769 * S_NumStorePurchases + 0.07960837555191 * 
S_NumWebPurchases + 0.02351602389122 * S_NumWebVisitsMonth + -0.2840853952427 * S_Recency + 
-0.47421627761687 * S_Teenhome ;
2096376   +   H13  =    -0.33428925248315 * S_Income  +    -0.03845622730742 * S_Kidhome
2096377   +          +     0.18733919794636 * S_MntFishProducts
2096378   +          +     0.45907982190052 * S_MntFruits  +    -0.48776616433719 *
2096379   +        S_MntGoldProds  +    -0.41340481007204 * S_MntMeatProducts
2096380   +          +     0.42514606159239 * S_MntSweetProducts
2096381   +          +     0.20038001368787 * S_MntWines  +    -1.21708501803782 *
2096382   +        S_NumCatalogPurchases  +    -1.06820061274533 * S_NumDealsPurchases
2096383   +          +     0.36582106462789 * S_NumStorePurchases
2096384   +          +     0.04244777020435 * S_NumWebPurchases
2096385   +          +    -0.24296342902503 * S_NumWebVisitsMonth
2096386   +          +     0.27451716762947 * S_Recency  +     0.13110477325277 *
2096387   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = -0.33428925248315 * S_Income + -0.03845622730742 * S_Kidhome + 
0.18733919794636 * S_MntFishProducts + 0.45907982190052 * S_MntFruits + -0.48776616433719 * 
S_MntGoldProds + -0.41340481007204 * S_MntMeatProducts + 0.42514606159239 * S_MntSweetProducts 
+ 0.20038001368787 * S_MntWines + -1.21708501803782 * S_NumCatalogPurchases + 
-1.06820061274533 * S_NumDealsPurchases + 0.36582106462789 * S_NumStorePurchases + 
0.04244777020435 * S_NumWebPurchases + -0.24296342902503 * S_NumWebVisitsMonth + 
0.27451716762947 * S_Recency + 0.13110477325277 * S_Teenhome ;
2096388   +   H14  =    -0.70493412542585 * S_Income  +     0.41202796606799 * S_Kidhome
2096389   +          +     0.05986489897572 * S_MntFishProducts
2096390   +          +    -0.05040531715469 * S_MntFruits  +       0.051068387592 *
2096391   +        S_MntGoldProds  +    -0.13581881662481 * S_MntMeatProducts
2096392   +          +    -0.05513370461072 * S_MntSweetProducts
2096393   +          +     0.77472084468819 * S_MntWines  +    -0.03211788969126 *
2096394   +        S_NumCatalogPurchases  +    -0.24097486430988 * S_NumDealsPurchases
2096395   +          +     0.64364674828841 * S_NumStorePurchases
2096396   +          +     0.15084748708424 * S_NumWebPurchases
2096397   +          +    -0.94144998356377 * S_NumWebVisitsMonth
2096398   +          +     1.16778338364599 * S_Recency  +     0.32089861635238 *
2096399   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = -0.70493412542585 * S_Income + 0.41202796606799 * S_Kidhome + 
0.05986489897572 * S_MntFishProducts + -0.05040531715469 * S_MntFruits + 0.051068387592 * 
S_MntGoldProds + -0.13581881662481 * S_MntMeatProducts + -0.05513370461072 * 
S_MntSweetProducts + 0.77472084468819 * S_MntWines + -0.03211788969126 * S_NumCatalogPurchases 
+ -0.24097486430988 * S_NumDealsPurchases + 0.64364674828841 * S_NumStorePurchases + 
0.15084748708424 * S_NumWebPurchases + -0.94144998356377 * S_NumWebVisitsMonth + 
1.16778338364599 * S_Recency + 0.32089861635238 * S_Teenhome ;
2096400   +   H15  =    -0.15703510827879 * S_Income  +    -0.30977841002562 * S_Kidhome
2096401   +          +    -0.14543196273578 * S_MntFishProducts
2096402   +          +     0.32223695896711 * S_MntFruits  +    -0.31846203211698 *
2096403   +        S_MntGoldProds  +     -1.4125160823105 * S_MntMeatProducts
2096404   +          +     0.49374793444169 * S_MntSweetProducts
2096405   +          +     0.39699716010219 * S_MntWines  +    -0.88140331687645 *
2096406   +        S_NumCatalogPurchases  +    -0.87657222813687 * S_NumDealsPurchases
2096407   +          +     1.23754786782746 * S_NumStorePurchases
2096408   +          +     1.11316667348511 * S_NumWebPurchases
2096409   +          +    -1.08592446439781 * S_NumWebVisitsMonth
2096410   +          +     0.66958517589542 * S_Recency  +     0.06799032788481 *
2096411   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H15 = -0.15703510827879 * S_Income + -0.30977841002562 * S_Kidhome + 
-0.14543196273578 * S_MntFishProducts + 0.32223695896711 * S_MntFruits + -0.31846203211698 * 
S_MntGoldProds + -1.4125160823105 * S_MntMeatProducts + 0.49374793444169 * S_MntSweetProducts 
+ 0.39699716010219 * S_MntWines + -0.88140331687645 * S_NumCatalogPurchases + 
-0.87657222813687 * S_NumDealsPurchases + 1.23754786782746 * S_NumStorePurchases + 
1.11316667348511 * S_NumWebPurchases + -1.08592446439781 * S_NumWebVisitsMonth + 
0.66958517589542 * S_Recency + 0.06799032788481 * S_Teenhome ;
2096412   +   H16  =    -0.10360901553583 * S_Income  +     0.39257497240865 * S_Kidhome
2096413   +          +     0.29549884005341 * S_MntFishProducts
2096414   +          +     0.04922491353914 * S_MntFruits  +     -0.1412659458221 *
2096415   +        S_MntGoldProds  +    -0.12361454534126 * S_MntMeatProducts
2096416   +          +    -0.11909215986981 * S_MntSweetProducts
2096417   +          +     0.11430484977092 * S_MntWines  +    -0.66235553839539 *
2096418   +        S_NumCatalogPurchases  +     0.17261763180198 * S_NumDealsPurchases
2096419   +          +     0.30109334594548 * S_NumStorePurchases
2096420   +          +     0.01985762767489 * S_NumWebPurchases
2096421   +          +     0.44965133281333 * S_NumWebVisitsMonth
2096422   +          +     0.32338634259192 * S_Recency  +    -0.04032956941805 *
2096423   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H16 = -0.10360901553583 * S_Income + 0.39257497240865 * S_Kidhome + 
0.29549884005341 * S_MntFishProducts + 0.04922491353914 * S_MntFruits + -0.1412659458221 * 
S_MntGoldProds + -0.12361454534126 * S_MntMeatProducts + -0.11909215986981 * 
S_MntSweetProducts + 0.11430484977092 * S_MntWines + -0.66235553839539 * S_NumCatalogPurchases 
+ 0.17261763180198 * S_NumDealsPurchases + 0.30109334594548 * S_NumStorePurchases + 
0.01985762767489 * S_NumWebPurchases + 0.44965133281333 * S_NumWebVisitsMonth + 
0.32338634259192 * S_Recency + -0.04032956941805 * S_Teenhome ;
2096424   +   H11  = H11  +    -0.23026310289024 * AcceptedCmp10
2096425   +          +    -0.82550012364234 * AcceptedCmp20  +    -0.67764228269441 *
2096426   +        AcceptedCmp30  +    -0.51547666117685 * AcceptedCmp40
2096427   +          +    -0.36424958084824 * AcceptedCmp50  +       0.119862855783 *
2096428   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.23026310289024 * AcceptedCmp10 + -0.82550012364234 * 
AcceptedCmp20 + -0.67764228269441 * AcceptedCmp30 + -0.51547666117685 * AcceptedCmp40 + 
-0.36424958084824 * AcceptedCmp50 + 0.119862855783 * Complain0 ;
2096429   +   H12  = H12  +     0.02722288857426 * AcceptedCmp10
2096430   +          +      0.1236576068539 * AcceptedCmp20  +    -0.31265425960737 *
2096431   +        AcceptedCmp30  +    -0.25076565034266 * AcceptedCmp40
2096432   +          +    -0.20158659730872 * AcceptedCmp50  +    -0.43687103612629 *
2096433   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.02722288857426 * AcceptedCmp10 + 0.1236576068539 * 
AcceptedCmp20 + -0.31265425960737 * AcceptedCmp30 + -0.25076565034266 * AcceptedCmp40 + 
-0.20158659730872 * AcceptedCmp50 + -0.43687103612629 * Complain0 ;
2096434   +   H13  = H13  +     0.21852176280571 * AcceptedCmp10
2096435   +          +     0.01727991436107 * AcceptedCmp20  +     0.19303261094625 *
2096436   +        AcceptedCmp30  +    -0.65492191560509 * AcceptedCmp40
2096437   +          +    -0.09636750660684 * AcceptedCmp50  +     0.07579128571046 *
2096438   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.21852176280571 * AcceptedCmp10 + 0.01727991436107 * 
AcceptedCmp20 + 0.19303261094625 * AcceptedCmp30 + -0.65492191560509 * AcceptedCmp40 + 
-0.09636750660684 * AcceptedCmp50 + 0.07579128571046 * Complain0 ;
2096439   +   H14  = H14  +     0.20819294353855 * AcceptedCmp10
2096440   +          +      0.5159102831901 * AcceptedCmp20  +     0.55295587458643 *
2096441   +        AcceptedCmp30  +     0.80682431419623 * AcceptedCmp40
2096442   +          +     0.74007057798158 * AcceptedCmp50  +     -0.4573052390807 *
2096443   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.20819294353855 * AcceptedCmp10 + 0.5159102831901 * 
AcceptedCmp20 + 0.55295587458643 * AcceptedCmp30 + 0.80682431419623 * AcceptedCmp40 + 
0.74007057798158 * AcceptedCmp50 + -0.4573052390807 * Complain0 ;
2096444   +   H15  = H15  +     1.26330939420524 * AcceptedCmp10
2096445   +          +     0.29494505935793 * AcceptedCmp20  +     0.25561322032419 *
2096446   +        AcceptedCmp30  +     0.50102236777897 * AcceptedCmp40
2096447   +          +     0.20696267245027 * AcceptedCmp50  +    -0.00849145233901 *
2096448   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 1.26330939420524 * AcceptedCmp10 + 0.29494505935793 * 
AcceptedCmp20 + 0.25561322032419 * AcceptedCmp30 + 0.50102236777897 * AcceptedCmp40 + 
0.20696267245027 * AcceptedCmp50 + -0.00849145233901 * Complain0 ;
2096449   +   H16  = H16  +     0.03638428330381 * AcceptedCmp10
2096450   +          +     0.27994215452657 * AcceptedCmp20  +    -0.03861840445025 *
2096451   +        AcceptedCmp30  +      0.3398057347433 * AcceptedCmp40
2096452   +          +    -0.00738335957724 * AcceptedCmp50  +      0.0447804375799 *
2096453   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.03638428330381 * AcceptedCmp10 + 0.27994215452657 * 
AcceptedCmp20 + -0.03861840445025 * AcceptedCmp30 + 0.3398057347433 * AcceptedCmp40 + 
-0.00738335957724 * AcceptedCmp50 + 0.0447804375799 * Complain0 ;
2096454   +   H11  = H11  +     0.27482405283962 * Education2n_Cycle
2096455   +          +     0.11084012456612 * EducationBasic  +    -0.23835071987159 *
2096456   +        EducationGraduation  +    -0.10167082180552 * EducationMaster
2096457   +          +     0.51015833145636 * Marital_StatusDivorced
2096458   +          +     -1.1653662063616 * Marital_StatusMarried
2096459   +          +     1.19396547750441 * Marital_StatusSingle
2096460   +          +    -0.99605751789992 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.27482405283962 * Education2n_Cycle + 0.11084012456612 * 
EducationBasic + -0.23835071987159 * EducationGraduation + -0.10167082180552 * EducationMaster 
+ 0.51015833145636 * Marital_StatusDivorced + -1.1653662063616 * Marital_StatusMarried + 
1.19396547750441 * Marital_StatusSingle + -0.99605751789992 * Marital_StatusTogether ;
2096461   +   H12  = H12  +    -0.05268347704739 * Education2n_Cycle
2096462   +          +     0.19362065968028 * EducationBasic  +    -0.26784257195414 *
2096463   +        EducationGraduation  +     0.16650577465959 * EducationMaster
2096464   +          +     0.09154288513995 * Marital_StatusDivorced
2096465   +          +     0.06725684628382 * Marital_StatusMarried
2096466   +          +     0.11327659191494 * Marital_StatusSingle
2096467   +          +     0.01793778876811 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.05268347704739 * Education2n_Cycle + 0.19362065968028 * 
EducationBasic + -0.26784257195414 * EducationGraduation + 0.16650577465959 * EducationMaster 
+ 0.09154288513995 * Marital_StatusDivorced + 0.06725684628382 * Marital_StatusMarried + 
0.11327659191494 * Marital_StatusSingle + 0.01793778876811 * Marital_StatusTogether ;
2096468   +   H13  = H13  +     -0.1027084329077 * Education2n_Cycle
2096469   +          +    -0.01342449140757 * EducationBasic  +    -0.35627920427273 *
2096470   +        EducationGraduation  +    -0.05554656531793 * EducationMaster
2096471   +          +     0.37591653615852 * Marital_StatusDivorced
2096472   +          +    -0.05024236790132 * Marital_StatusMarried
2096473   +          +    -0.28317154997144 * Marital_StatusSingle
2096474   +          +    -0.19247490223101 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.1027084329077 * Education2n_Cycle + -0.01342449140757 * 
EducationBasic + -0.35627920427273 * EducationGraduation + -0.05554656531793 * EducationMaster 
+ 0.37591653615852 * Marital_StatusDivorced + -0.05024236790132 * Marital_StatusMarried + 
-0.28317154997144 * Marital_StatusSingle + -0.19247490223101 * Marital_StatusTogether ;
2096475   +   H14  = H14  +     -0.4162491480577 * Education2n_Cycle
2096476   +          +     0.38075572764074 * EducationBasic  +    -0.28169469529121 *
2096477   +        EducationGraduation  +       0.638986138084 * EducationMaster
2096478   +          +    -0.44885292450558 * Marital_StatusDivorced
2096479   +          +     0.78958791519299 * Marital_StatusMarried
2096480   +          +    -0.09688714431356 * Marital_StatusSingle
2096481   +          +     0.84239030196202 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.4162491480577 * Education2n_Cycle + 0.38075572764074 * 
EducationBasic + -0.28169469529121 * EducationGraduation + 0.638986138084 * EducationMaster + 
-0.44885292450558 * Marital_StatusDivorced + 0.78958791519299 * Marital_StatusMarried + 
-0.09688714431356 * Marital_StatusSingle + 0.84239030196202 * Marital_StatusTogether ;
2096482   +   H15  = H15  +     0.33126657974568 * Education2n_Cycle
2096483   +          +     0.44539039262703 * EducationBasic  +    -0.09154902903865 *
2096484   +        EducationGraduation  +    -0.26400363440725 * EducationMaster
2096485   +          +    -0.30801073895989 * Marital_StatusDivorced
2096486   +          +     -0.1285150749223 * Marital_StatusMarried
2096487   +          +     0.06775542164414 * Marital_StatusSingle
2096488   +          +    -0.13032366945766 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.33126657974568 * Education2n_Cycle + 0.44539039262703 * 
EducationBasic + -0.09154902903865 * EducationGraduation + -0.26400363440725 * EducationMaster 
+ -0.30801073895989 * Marital_StatusDivorced + -0.1285150749223 * Marital_StatusMarried + 
0.06775542164414 * Marital_StatusSingle + -0.13032366945766 * Marital_StatusTogether ;
2096489   +   H16  = H16  +     0.02030175222681 * Education2n_Cycle
2096490   +          +    -0.19579401096879 * EducationBasic  +      0.2070703930869 *
2096491   +        EducationGraduation  +    -0.40706983167068 * EducationMaster
2096492   +          +     0.22193599090368 * Marital_StatusDivorced
2096493   +          +    -0.54544672042168 * Marital_StatusMarried
2096494   +          +    -0.02237436019864 * Marital_StatusSingle
2096495   +          +    -0.21979468164854 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.02030175222681 * Education2n_Cycle + -0.19579401096879 * 
EducationBasic + 0.2070703930869 * EducationGraduation + -0.40706983167068 * EducationMaster + 
0.22193599090368 * Marital_StatusDivorced + -0.54544672042168 * Marital_StatusMarried + 
-0.02237436019864 * Marital_StatusSingle + -0.21979468164854 * Marital_StatusTogether ;
2096496   +   H11  =    -1.24550293901788 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -1.24550293901788 + H11 ;
2096497   +   H12  =     0.36762263942809 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.36762263942809 + H12 ;
2096498   +   H13  =     0.07010867577103 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = 0.07010867577103 + H13 ;
2096499   +   H14  =    -1.94014549272156 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = -1.94014549272156 + H14 ;
2096500   +   H15  =     0.17666656180153 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = 0.17666656180153 + H15 ;
2096501   +   H16  =    -1.64626406576709 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = -1.64626406576709 + H16 ;
2096502   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
2096503   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
2096504   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
2096505   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
2096506   +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
2096507   +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
2096508   +END;
MPRINT(EM_DIAGRAM):   END;
2096509   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2096510   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
2096511   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
2096512   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
2096513   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
2096514   +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
2096515   +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
2096516   +END;
MPRINT(EM_DIAGRAM):   END;
2096517   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2096518   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2096519   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2096520   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2096521   +   P_DepVar1  =     4.21126046696691 * H11  +      0.6565061288056 * H12
2096522   +          +    -1.92484011508628 * H13  +    -3.74020722142387 * H14
2096523   +          +    -3.27353026762143 * H15  +     -1.2596922869974 * H16 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 4.21126046696691 * H11 + 0.6565061288056 * H12 + 
-1.92484011508628 * H13 + -3.74020722142387 * H14 + -3.27353026762143 * H15 + -1.2596922869974 
* H16 ;
2096524   +   P_DepVar1  =    -1.36806658950323 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.36806658950323 + P_DepVar1 ;
2096525   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2096526   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2096527   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2096528   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2096529   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2096530   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2096531   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2096532   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2096533   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2096534   +END;
MPRINT(EM_DIAGRAM):   END;
2096535   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2096536   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2096537   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2096538   +END;
MPRINT(EM_DIAGRAM):   END;
2096539   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2096540   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2096541   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2096542   +END;
MPRINT(EM_DIAGRAM):   END;
2096543   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2096544   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2096545   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2096546   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2096547   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2096548   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2096549   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2096550   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2096551   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2096552   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2096553   +END;
MPRINT(EM_DIAGRAM):   END;
2096554   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2096555   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2096556   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2096557   +drop
2096558   +H11
2096559   +H12
2096560   +H13
2096561   +H14
2096562   +H15
2096563   +H16
2096564   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 ;
2096565   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2096566    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2096567    quit;
2096568    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2096569    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2096570    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2096571    retain ID 2 Node "Neural35";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Neural35";
2096572    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2096573    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2016 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2016 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2096574    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2096575    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2096576    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2016 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2016 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2096577    proc sort data=EMWS8.Neural35_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Neural35_variableset out=_temp2(keep=NAME CREATOR);
2096578    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2096579    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.NEURAL35_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2096580    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2096581    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2096582    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2096583    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2096584    proc contents data=EMWS8.Neural35_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Neural35_train out=_meta(keep=NAME) noprint;
2096585    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

2096586    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2096587    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2096588    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 53 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2096589    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2096590    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2096591    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2096592    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 53 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2096593    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2096594    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2096594  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 970 rows and 5 columns.

2096595    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2096596    proc append base=EMWS8.Ensmbl9_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl9_FCMP data=_tempx;
2096597    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL9_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 970 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL9_FCMP has 970 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2096598    filename _pref
2096598  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
2096599    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2096600    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
2096601   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2096602   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
2096603   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2096604   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
2096605   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
2096606   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2096607    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2096608    quit;
2096609    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2096610    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2096611    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2096612    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
2096613    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2096614    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2096615    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2096616    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2096617    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2096618    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
2096619    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2096620    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2096621    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2096622    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2096623    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2096624    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2096625    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
2096626    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

2096627    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2096628    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2096629    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2096630    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2096631    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2096632    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2096633    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2096634    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2096635    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2096635  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

2096636    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2096637    proc append base=EMWS8.Ensmbl9_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl9_FCMP data=_tempx;
2096638    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL9_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL9_FCMP has 974 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2096639    filename _pref
2096639  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
2096640    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2096641    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
2096642   +
2096643   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
2096644   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
2096644  !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
2096645   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
2096646   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
2096647   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
2096648   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
2096649   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2096650    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2096651    quit;
2096652    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2096653    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2096654    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2096655    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
2096656    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2096657    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2096658    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2096659    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2096660    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2096661    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
2096662    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2096663    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2096664    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2096665    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2096666    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2096667    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2096668    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
2096669    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2096670    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2096671    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2096672    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2096673    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2096674    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2096675    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2096676    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2096677    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2096678    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2096678  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

2096679    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2096680    proc append base=EMWS8.Ensmbl9_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl9_FCMP data=_tempx;
2096681    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL9_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL9_FCMP has 1013 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2096682    filename _pref
2096682  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
2096683    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2096684    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
2096685   +
2096686   +
2096687   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
2096688   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
2096689   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
2096690   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
2096691   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
2096692   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2096693   +
2096694   +
2096695   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
2096696   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
2096697   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
2096698   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
2096699   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
2096700   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2096701   +
2096702   +
2096703   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
2096704   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
2096705   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
2096706   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
2096707   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
2096708   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2096709   +
2096710   +
2096711   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
2096712   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
2096713   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
2096714   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
2096715   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
2096716   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2096717   +
2096718   +
2096719   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
2096720   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
2096721   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
2096722   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
2096723   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
2096724   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2096725   +
2096726   +
2096727   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
2096728   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
2096729   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
2096730   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
2096731   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
2096732   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2096733   +
2096734   +
2096735   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
2096736   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
2096737   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
2096738   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
2096739   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
2096740   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2096741   +
2096742   +
2096743   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
2096744   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
2096745   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
2096746   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
2096747   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
2096748   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2096749   +if
2096750   +_FILTERNORM1 not in ( '.')
2096751   + and
2096752   +_FILTERNORM2 not in ( '.')
2096753   + and
2096754   +_FILTERNORM3 not in ( '.')
2096755   + and
2096756   +_FILTERNORM4 not in ( '.')
2096757   + and
2096758   +_FILTERNORM5 not in ( '.')
2096759   + and
2096760   +_FILTERNORM6 not in ( '.')
2096761   + and
2096762   +_FILTERNORM7 not in ( ' ')
2096763   + and
2096764   +_FILTERNORM8 not in ( ' ')
2096765   +and
2096766   +( Dt_Customer ne .)
2096767   +and ( Income ne . and (Income<=107000))
2096768   +and ( Kidhome ne .)
2096769   +and ( MntFishProducts ne .)
2096770   +and ( MntFruits ne .)
2096771   +and ( MntGoldProds ne .)
2096772   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
2096773   +and ( MntSweetProducts ne .)
2096774   +and ( MntWines ne .)
2096775   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
2096776   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
2096777   +and ( NumStorePurchases ne .)
2096778   +and ( NumWebPurchases ne .)
2096779   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
2096780   +and ( Recency ne .)
2096781   +and ( Teenhome ne .)
2096782   +and ( Year_Birth ne .)
2096783   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
2096784   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
2096785   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
2096786   +end;
MPRINT(EM_DIAGRAM):   end;
2096787   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
2096788   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2096789    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2096790    quit;
2096791    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2096792    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2096793    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2096794    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
2096795    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2096796    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2096797    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2096798    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2096799    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2096800    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
2096801    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2096802    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2096803    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2096804    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2096805    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2096806    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2096807    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
2096808    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

2096809    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2096810    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2096811    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2096812    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2096813    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2096814    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2096815    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2096816    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2096817    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2096817  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

2096818    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2096819    proc append base=EMWS8.Ensmbl9_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl9_FCMP data=_tempx;
2096820    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL9_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL9_FCMP has 1079 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2096821    %macro varDept(fcmpdata=,id=);
2096822    %global nobs&id scoreFlag&id;
2096823    %let scoreFlag&id = 0;
2096824    %if &id=1 or ^&fcmpStart %then %do;
2096825    proc sort data=&fcmpdata out=_temp&id nodupkey;
2096826    by NAME;
2096827    where id=&id and LHS in( %let j=1;
2096828    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
2096829    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
2096830    "&var" %let j = %eval(&j+1);
2096831    %end;
2096832    );
2096833    run;
2096834    %let dsid = %sysfunc(open(_temp&id));
2096835    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2096836    %let dsid = %sysfunc(close(&dsid));
2096837    %if &&nobs&id %then %do;
2096838    %let scoreFlag&id = 1;
2096839    %let fcmpStart = 1;
2096840    %end;
2096841    %else %let fcmpStart = 0;
2096842    %end;
2096843    %else %do;
2096844    proc sort data=&fcmpdata out=_tempid;
2096845    where id=&id;
2096846    by LHS;
2096847    run;
2096848    %let dsid = %sysfunc(open(_tempid));
2096849    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2096850    %let dsid = %sysfunc(close(&dsid));
2096851    %if ^&&nobs&id %then %do;
2096852    proc datasets lib=work nolist;
2096853    delete _tempid;
2096854    run;
2096855    quit;
2096856    %end;
2096857    %else %do;
2096858    data _tempAll;
2096859    set %let j=%eval(&id-1);
2096860    %do x=1 %to &j;
2096861    %if &&nobs&x %then %do;
2096862    _temp&x %end;
2096863    %end;
2096864    ;
2096865    run;
2096866    proc sql;
2096867    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
2096867  ! work._tempid p2 where p.name=p2.lhs;
2096868    quit;
2096869    data _temp&id;
2096870    set _temp&id;
2096871    where LHS ne '' and NAME ne '' and Node ne '';
2096872    run;
2096873    proc datasets lib=work nolist;
2096874    delete _tempAll;
2096875    run;
2096876    %let dsid = %sysfunc(open(_temp&id));
2096877    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2096878    %let dsid = %sysfunc(close(&dsid));
2096879    %if ^&&nobs&id %then %do;
2096880    proc datasets lib=work nolist;
2096881    delete _temp&id;
2096882    run;
2096883    quit;
2096884    %end;
2096885    %else %do;
2096886    %let scoreFlag&id = 1;
2096887    data _temp&id;
2096888    set _temp&id;
2096889    where LHS ne NAME and node ne '';
2096890    run;
2096891    %let dsid = %sysfunc(open(_temp&id));
2096892    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2096893    %let dsid = %sysfunc(close(&dsid));
2096894    %if ^&&nobs&id %then %do;
2096895    proc datasets lib=work nolist;
2096896    delete _temp&id;
2096897    run;
2096898    quit;
2096899    %end;
2096900    %else %do;
2096901    proc sort data=_temp&id nodupkey;
2096902    by LHS NAME;
2096903    run;
2096904    %end;
2096905    %end;
2096906    %end;
2096907    %end;
2096908    %mend varDept;
2096909    %macro optCode(outdata=fcmpdata);
2096910    %global fcmpStart;
2096911    %let fcmpStart = 0;
2096912    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
2096913    %let NumNodes=9;
2096914    %do k=1 %to &NumNodes;
2096915    %vardept(fcmpdata=&outdata, id=&k);
2096916    %end;
2096917    %mend optCode;
2096918    %optcode(outData=EMWS8.Ensmbl9_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl9_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL9_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl9_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 98 observations read from the data set EMWS8.ENSMBL9_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 73 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 25 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl9_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL9_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl9_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL9_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl9_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL9_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 25 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 25 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp5;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP5 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl9_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL9_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 25 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 25 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp6;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP6 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl9_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL9_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 25 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 25 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl9_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL9_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl9_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL9_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

2096919    filename _pref
2096919  ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural34\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural34\EMPUBLISHSCORE.sas";
2096920    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2096921    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Neural34\EMPUBLISHSCORE.sas.
2096922   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2096923   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2096924   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2096925   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2096926   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2096927   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2096928   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2096929   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2096930   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2096931   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2096932   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2096933   +LENGTH _WARN_ $4
2096934   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
2096935   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2096936   +
2096937   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2096938   +
2096939   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2096940   +
2096941   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2096942   +
2096943   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2096944   +
2096945   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2096946   +
2096947   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2096948   +
2096949   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2096950   +
2096951   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2096952   +
2096953   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2096954   +
2096955   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2096956   +
2096957   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2096958   +
2096959   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2096960   +
2096961   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2096962   +
2096963   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2096964   +
2096965   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2096966   +
2096967   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2096968   +
2096969   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2096970   +
2096971   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2096972   +
2096973   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2096974   +
2096975   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2096976   +
2096977   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2096978   +
2096979   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2096980   +
2096981   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2096982   +
2096983   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2096984   +
2096985   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2096986   +
2096987   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2096988   +
2096989   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2096990   +
2096991   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2096992   +
2096993   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
2096994   +
2096995   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
2096996   +
2096997   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
2096998   +
2096999   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
2097000   +
2097001   +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
2097002   +
2097003   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2097004   +
2097005   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2097006   +
2097007   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2097008   +
2097009   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2097010   +
2097011   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2097012   +
2097013   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2097014   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2097015   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2097016   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2097017   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2097018   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2097019   +end;
MPRINT(EM_DIAGRAM):   end;
2097020   +else do;
MPRINT(EM_DIAGRAM):   else do;
2097021   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2097022   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2097023   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2097024   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2097025   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2097026   +   end;
MPRINT(EM_DIAGRAM):   end;
2097027   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2097028   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2097029   +   end;
MPRINT(EM_DIAGRAM):   end;
2097030   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2097031   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2097032   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2097033   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2097034   +   end;
MPRINT(EM_DIAGRAM):   end;
2097035   +end;
MPRINT(EM_DIAGRAM):   end;
2097036   +
2097037   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2097038   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2097039   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2097040   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2097041   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2097042   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2097043   +end;
MPRINT(EM_DIAGRAM):   end;
2097044   +else do;
MPRINT(EM_DIAGRAM):   else do;
2097045   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2097046   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2097047   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2097048   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2097049   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2097050   +   end;
MPRINT(EM_DIAGRAM):   end;
2097051   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2097052   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2097053   +   end;
MPRINT(EM_DIAGRAM):   end;
2097054   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2097055   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2097056   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2097057   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2097058   +   end;
MPRINT(EM_DIAGRAM):   end;
2097059   +end;
MPRINT(EM_DIAGRAM):   end;
2097060   +
2097061   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2097062   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2097063   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2097064   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2097065   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2097066   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2097067   +end;
MPRINT(EM_DIAGRAM):   end;
2097068   +else do;
MPRINT(EM_DIAGRAM):   else do;
2097069   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2097070   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2097071   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2097072   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2097073   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2097074   +   end;
MPRINT(EM_DIAGRAM):   end;
2097075   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2097076   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2097077   +   end;
MPRINT(EM_DIAGRAM):   end;
2097078   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2097079   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2097080   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2097081   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2097082   +   end;
MPRINT(EM_DIAGRAM):   end;
2097083   +end;
MPRINT(EM_DIAGRAM):   end;
2097084   +
2097085   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2097086   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2097087   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2097088   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2097089   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2097090   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2097091   +end;
MPRINT(EM_DIAGRAM):   end;
2097092   +else do;
MPRINT(EM_DIAGRAM):   else do;
2097093   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2097094   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2097095   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2097096   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2097097   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2097098   +   end;
MPRINT(EM_DIAGRAM):   end;
2097099   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2097100   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2097101   +   end;
MPRINT(EM_DIAGRAM):   end;
2097102   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2097103   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2097104   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2097105   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2097106   +   end;
MPRINT(EM_DIAGRAM):   end;
2097107   +end;
MPRINT(EM_DIAGRAM):   end;
2097108   +
2097109   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2097110   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2097111   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2097112   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2097113   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2097114   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2097115   +end;
MPRINT(EM_DIAGRAM):   end;
2097116   +else do;
MPRINT(EM_DIAGRAM):   else do;
2097117   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2097118   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2097119   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2097120   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2097121   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2097122   +   end;
MPRINT(EM_DIAGRAM):   end;
2097123   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2097124   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2097125   +   end;
MPRINT(EM_DIAGRAM):   end;
2097126   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2097127   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2097128   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2097129   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2097130   +   end;
MPRINT(EM_DIAGRAM):   end;
2097131   +end;
MPRINT(EM_DIAGRAM):   end;
2097132   +
2097133   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2097134   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2097135   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2097136   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2097137   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2097138   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2097139   +end;
MPRINT(EM_DIAGRAM):   end;
2097140   +else do;
MPRINT(EM_DIAGRAM):   else do;
2097141   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2097142   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2097143   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2097144   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2097145   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2097146   +   end;
MPRINT(EM_DIAGRAM):   end;
2097147   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2097148   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2097149   +   end;
MPRINT(EM_DIAGRAM):   end;
2097150   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2097151   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2097152   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2097153   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2097154   +   end;
MPRINT(EM_DIAGRAM):   end;
2097155   +end;
MPRINT(EM_DIAGRAM):   end;
2097156   +
2097157   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2097158   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
2097159   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2097160   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2097161   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2097162   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2097163   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2097164   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2097165   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2097166   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2097167   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2097168   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2097169   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2097170   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2097171   +end;
MPRINT(EM_DIAGRAM):   end;
2097172   +else do;
MPRINT(EM_DIAGRAM):   else do;
2097173   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2097174   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2097175   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2097176   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2097177   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2097178   +   end;
MPRINT(EM_DIAGRAM):   end;
2097179   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2097180   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2097181   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2097182   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2097183   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2097184   +   end;
MPRINT(EM_DIAGRAM):   end;
2097185   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2097186   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2097187   +   end;
MPRINT(EM_DIAGRAM):   end;
2097188   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2097189   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2097190   +   end;
MPRINT(EM_DIAGRAM):   end;
2097191   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2097192   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2097193   +   end;
MPRINT(EM_DIAGRAM):   end;
2097194   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2097195   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2097196   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2097197   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2097198   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2097199   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2097200   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2097201   +   end;
MPRINT(EM_DIAGRAM):   end;
2097202   +end;
MPRINT(EM_DIAGRAM):   end;
2097203   +
2097204   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2097205   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2097206   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
2097207   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2097208   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2097209   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2097210   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2097211   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2097212   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2097213   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2097214   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2097215   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2097216   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2097217   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2097218   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2097219   +end;
MPRINT(EM_DIAGRAM):   end;
2097220   +else do;
MPRINT(EM_DIAGRAM):   else do;
2097221   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2097222   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2097223   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2097224   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2097225   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2097226   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2097227   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2097228   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2097229   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2097230   +         end;
MPRINT(EM_DIAGRAM):   end;
2097231   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2097232   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2097233   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2097234   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2097235   +            end;
MPRINT(EM_DIAGRAM):   end;
2097236   +         end;
MPRINT(EM_DIAGRAM):   end;
2097237   +      end;
MPRINT(EM_DIAGRAM):   end;
2097238   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2097239   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2097240   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2097241   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2097242   +         end;
MPRINT(EM_DIAGRAM):   end;
2097243   +      end;
MPRINT(EM_DIAGRAM):   end;
2097244   +   end;
MPRINT(EM_DIAGRAM):   end;
2097245   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2097246   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2097247   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2097248   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2097249   +      end;
MPRINT(EM_DIAGRAM):   end;
2097250   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2097251   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2097252   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2097253   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2097254   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2097255   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2097256   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2097257   +         end;
MPRINT(EM_DIAGRAM):   end;
2097258   +      end;
MPRINT(EM_DIAGRAM):   end;
2097259   +   end;
MPRINT(EM_DIAGRAM):   end;
2097260   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2097261   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2097262   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2097263   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2097264   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2097265   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2097266   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2097267   +   end;
MPRINT(EM_DIAGRAM):   end;
2097268   +end;
MPRINT(EM_DIAGRAM):   end;
2097269   +
2097270   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2097271   +*** Checking missing input Interval
2097272   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2097273   +
2097274   +IF NMISS(
2097275   +   Income ,
2097276   +   Kidhome ,
2097277   +   MntFishProducts ,
2097278   +   MntFruits ,
2097279   +   MntGoldProds ,
2097280   +   MntMeatProducts ,
2097281   +   MntSweetProducts ,
2097282   +   MntWines ,
2097283   +   NumCatalogPurchases ,
2097284   +   NumDealsPurchases ,
2097285   +   NumStorePurchases ,
2097286   +   NumWebPurchases ,
2097287   +   NumWebVisitsMonth ,
2097288   +   Recency ,
2097289   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Income , Kidhome , MntFishProducts , MntFruits , MntGoldProds 
, MntMeatProducts , MntSweetProducts , MntWines , NumCatalogPurchases , NumDealsPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , Recency , Teenhome ) THEN DO;
2097290   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2097291   +
2097292   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2097293   +END;
MPRINT(EM_DIAGRAM):   END;
2097294   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2097295   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
2097296   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2097297   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2097298   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2097299   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2097300   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2097301   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2097302   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2097303   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2097304   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2097305   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2097306   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2097307   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2097308   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2097309   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2097310   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2097311   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2097312   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2097313   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2097314   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2097315   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2097316   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2097317   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2097318   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2097319   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2097320   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2097321   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2097322   +END;
MPRINT(EM_DIAGRAM):   END;
2097323   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2097324   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2097325   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2097326   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2097327   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2097328   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2097329   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2097330   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2097331   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2097332   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2097333   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2097334   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2097335   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2097336   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
2097337   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2097338   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2097339   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2097340   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2097341   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2097342   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2097343   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2097344   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2097345   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2097346   +   ELSE S_NumCatalogPurchases
2097347   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2097348   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2097349   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2097350   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2097351   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2097352   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2097353   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2097354   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2097355   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2097356   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2097357   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2097358   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2097359   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2097360   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2097361   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2097362   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2097363   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2097364   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2097365   +END;
MPRINT(EM_DIAGRAM):   END;
2097366   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2097367   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
2097368   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2097369   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2097370   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
2097371   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2097372   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2097373   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
2097374   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2097375   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2097376   +   H11  =    -0.81572379016921 * S_Income  +    -0.07670946585348 * S_Kidhome
2097377   +          +     0.24367603598167 * S_MntFishProducts
2097378   +          +     0.19692980127348 * S_MntFruits  +    -0.03926738185333 *
2097379   +        S_MntGoldProds  +    -0.20900804333353 * S_MntMeatProducts
2097380   +          +     0.34054806441484 * S_MntSweetProducts
2097381   +          +     0.65956211369383 * S_MntWines  +    -0.95375334578522 *
2097382   +        S_NumCatalogPurchases  +    -0.73124740368567 * S_NumDealsPurchases
2097383   +          +     0.98942946974575 * S_NumStorePurchases
2097384   +          +     0.89701206630103 * S_NumWebPurchases
2097385   +          +    -1.22878611472154 * S_NumWebVisitsMonth
2097386   +          +     1.44981870978354 * S_Recency  +     0.47533125686411 *
2097387   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = -0.81572379016921 * S_Income + -0.07670946585348 * S_Kidhome + 
0.24367603598167 * S_MntFishProducts + 0.19692980127348 * S_MntFruits + -0.03926738185333 * 
S_MntGoldProds + -0.20900804333353 * S_MntMeatProducts + 0.34054806441484 * S_MntSweetProducts 
+ 0.65956211369383 * S_MntWines + -0.95375334578522 * S_NumCatalogPurchases + 
-0.73124740368567 * S_NumDealsPurchases + 0.98942946974575 * S_NumStorePurchases + 
0.89701206630103 * S_NumWebPurchases + -1.22878611472154 * S_NumWebVisitsMonth + 
1.44981870978354 * S_Recency + 0.47533125686411 * S_Teenhome ;
2097388   +   H12  =    -0.18875145195495 * S_Income  +     0.42230998482453 * S_Kidhome
2097389   +          +     0.16683404689723 * S_MntFishProducts
2097390   +          +     0.32072658929401 * S_MntFruits  +    -0.12341748032201 *
2097391   +        S_MntGoldProds  +    -1.56478754527255 * S_MntMeatProducts
2097392   +          +     0.20389084548968 * S_MntSweetProducts
2097393   +          +     0.95592931625509 * S_MntWines  +    -0.69996817353755 *
2097394   +        S_NumCatalogPurchases  +    -0.92709806328697 * S_NumDealsPurchases
2097395   +          +     1.27164659640366 * S_NumStorePurchases
2097396   +          +     1.02122194207802 * S_NumWebPurchases
2097397   +          +     -1.5111033436803 * S_NumWebVisitsMonth
2097398   +          +     1.63712814901544 * S_Recency  +     0.14205116840572 *
2097399   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -0.18875145195495 * S_Income + 0.42230998482453 * S_Kidhome + 
0.16683404689723 * S_MntFishProducts + 0.32072658929401 * S_MntFruits + -0.12341748032201 * 
S_MntGoldProds + -1.56478754527255 * S_MntMeatProducts + 0.20389084548968 * S_MntSweetProducts 
+ 0.95592931625509 * S_MntWines + -0.69996817353755 * S_NumCatalogPurchases + 
-0.92709806328697 * S_NumDealsPurchases + 1.27164659640366 * S_NumStorePurchases + 
1.02122194207802 * S_NumWebPurchases + -1.5111033436803 * S_NumWebVisitsMonth + 
1.63712814901544 * S_Recency + 0.14205116840572 * S_Teenhome ;
2097400   +   H13  =     1.02798705354163 * S_Income  +    -0.94411708781921 * S_Kidhome
2097401   +          +    -0.03345077166544 * S_MntFishProducts
2097402   +          +     0.00038440809349 * S_MntFruits  +    -0.05068379715712 *
2097403   +        S_MntGoldProds  +     1.00464705307582 * S_MntMeatProducts
2097404   +          +    -0.11948662500951 * S_MntSweetProducts
2097405   +          +    -0.52438819731252 * S_MntWines  +     0.98586904866769 *
2097406   +        S_NumCatalogPurchases  +     0.09015295226839 * S_NumDealsPurchases
2097407   +          +     0.22401914357376 * S_NumStorePurchases
2097408   +          +     0.04219877865976 * S_NumWebPurchases
2097409   +          +     1.21753334166036 * S_NumWebVisitsMonth
2097410   +          +    -1.33712212110081 * S_Recency  +    -0.47582856683655 *
2097411   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = 1.02798705354163 * S_Income + -0.94411708781921 * S_Kidhome + 
-0.03345077166544 * S_MntFishProducts + 0.00038440809349 * S_MntFruits + -0.05068379715712 * 
S_MntGoldProds + 1.00464705307582 * S_MntMeatProducts + -0.11948662500951 * S_MntSweetProducts 
+ -0.52438819731252 * S_MntWines + 0.98586904866769 * S_NumCatalogPurchases + 0.09015295226839 
* S_NumDealsPurchases + 0.22401914357376 * S_NumStorePurchases + 0.04219877865976 * 
S_NumWebPurchases + 1.21753334166036 * S_NumWebVisitsMonth + -1.33712212110081 * S_Recency + 
-0.47582856683655 * S_Teenhome ;
2097412   +   H14  =     0.91431429848834 * S_Income  +    -1.16289676557574 * S_Kidhome
2097413   +          +     0.31175257038578 * S_MntFishProducts
2097414   +          +     0.08080436076271 * S_MntFruits  +     0.15252288175851 *
2097415   +        S_MntGoldProds  +     0.21603546207654 * S_MntMeatProducts
2097416   +          +      0.0927253053382 * S_MntSweetProducts
2097417   +          +     0.05865323888304 * S_MntWines  +    -0.23426953728277 *
2097418   +        S_NumCatalogPurchases  +    -0.46451908614085 * S_NumDealsPurchases
2097419   +          +    -0.12667606349662 * S_NumStorePurchases
2097420   +          +     0.30148374518724 * S_NumWebPurchases
2097421   +          +     0.48934229701658 * S_NumWebVisitsMonth
2097422   +          +    -0.83754390793251 * S_Recency  +     -0.4576645462819 *
2097423   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = 0.91431429848834 * S_Income + -1.16289676557574 * S_Kidhome + 
0.31175257038578 * S_MntFishProducts + 0.08080436076271 * S_MntFruits + 0.15252288175851 * 
S_MntGoldProds + 0.21603546207654 * S_MntMeatProducts + 0.0927253053382 * S_MntSweetProducts + 
0.05865323888304 * S_MntWines + -0.23426953728277 * S_NumCatalogPurchases + -0.46451908614085 
* S_NumDealsPurchases + -0.12667606349662 * S_NumStorePurchases + 0.30148374518724 * 
S_NumWebPurchases + 0.48934229701658 * S_NumWebVisitsMonth + -0.83754390793251 * S_Recency + 
-0.4576645462819 * S_Teenhome ;
2097424   +   H15  =    -0.58161501095664 * S_Income  +     -1.0333658128614 * S_Kidhome
2097425   +          +     0.42646725119177 * S_MntFishProducts
2097426   +          +     -0.3264621401658 * S_MntFruits  +    -0.74616728524532 *
2097427   +        S_MntGoldProds  +    -0.97572068716712 * S_MntMeatProducts
2097428   +          +    -0.01493605582616 * S_MntSweetProducts
2097429   +          +      0.0311636632685 * S_MntWines  +    -1.68599903767191 *
2097430   +        S_NumCatalogPurchases  +    -1.25052648798307 * S_NumDealsPurchases
2097431   +          +     0.54256744091258 * S_NumStorePurchases
2097432   +          +     0.43065931458468 * S_NumWebPurchases
2097433   +          +      0.5935561420466 * S_NumWebVisitsMonth
2097434   +          +    -0.45183418369624 * S_Recency  +     0.19260512629844 *
2097435   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H15 = -0.58161501095664 * S_Income + -1.0333658128614 * S_Kidhome + 
0.42646725119177 * S_MntFishProducts + -0.3264621401658 * S_MntFruits + -0.74616728524532 * 
S_MntGoldProds + -0.97572068716712 * S_MntMeatProducts + -0.01493605582616 * 
S_MntSweetProducts + 0.0311636632685 * S_MntWines + -1.68599903767191 * S_NumCatalogPurchases 
+ -1.25052648798307 * S_NumDealsPurchases + 0.54256744091258 * S_NumStorePurchases + 
0.43065931458468 * S_NumWebPurchases + 0.5935561420466 * S_NumWebVisitsMonth + 
-0.45183418369624 * S_Recency + 0.19260512629844 * S_Teenhome ;
2097436   +   H11  = H11  +     0.61503950219838 * AcceptedCmp10
2097437   +          +     0.02945207091619 * AcceptedCmp20  +     0.99151950769472 *
2097438   +        AcceptedCmp30  +     1.08987060401718 * AcceptedCmp40
2097439   +          +     0.45427753773024 * AcceptedCmp50  +    -1.03533951966815 *
2097440   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.61503950219838 * AcceptedCmp10 + 0.02945207091619 * 
AcceptedCmp20 + 0.99151950769472 * AcceptedCmp30 + 1.08987060401718 * AcceptedCmp40 + 
0.45427753773024 * AcceptedCmp50 + -1.03533951966815 * Complain0 ;
2097441   +   H12  = H12  +     0.83823476190401 * AcceptedCmp10
2097442   +          +      1.0793719601418 * AcceptedCmp20  +     0.68538854946581 *
2097443   +        AcceptedCmp30  +     1.00297565893339 * AcceptedCmp40
2097444   +          +     0.24586379991786 * AcceptedCmp50  +     0.15471251255301 *
2097445   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.83823476190401 * AcceptedCmp10 + 1.0793719601418 * 
AcceptedCmp20 + 0.68538854946581 * AcceptedCmp30 + 1.00297565893339 * AcceptedCmp40 + 
0.24586379991786 * AcceptedCmp50 + 0.15471251255301 * Complain0 ;
2097446   +   H13  = H13  +    -0.41486094438907 * AcceptedCmp10
2097447   +          +    -0.76586628449839 * AcceptedCmp20  +    -0.59695459523693 *
2097448   +        AcceptedCmp30  +    -0.30262159911837 * AcceptedCmp40
2097449   +          +    -0.61141171124182 * AcceptedCmp50  +    -0.01086235188835 *
2097450   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.41486094438907 * AcceptedCmp10 + -0.76586628449839 * 
AcceptedCmp20 + -0.59695459523693 * AcceptedCmp30 + -0.30262159911837 * AcceptedCmp40 + 
-0.61141171124182 * AcceptedCmp50 + -0.01086235188835 * Complain0 ;
2097451   +   H14  = H14  +    -0.09662858884082 * AcceptedCmp10
2097452   +          +    -0.48515652524171 * AcceptedCmp20  +    -0.37421451374399 *
2097453   +        AcceptedCmp30  +    -0.52889523891817 * AcceptedCmp40
2097454   +          +    -0.73518448275357 * AcceptedCmp50  +    -0.36065830718672 *
2097455   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.09662858884082 * AcceptedCmp10 + -0.48515652524171 * 
AcceptedCmp20 + -0.37421451374399 * AcceptedCmp30 + -0.52889523891817 * AcceptedCmp40 + 
-0.73518448275357 * AcceptedCmp50 + -0.36065830718672 * Complain0 ;
2097456   +   H15  = H15  +      0.2985143092641 * AcceptedCmp10
2097457   +          +    -0.06881934778393 * AcceptedCmp20  +    -0.02609197044604 *
2097458   +        AcceptedCmp30  +    -0.79105657447885 * AcceptedCmp40
2097459   +          +    -0.02286855144948 * AcceptedCmp50  +     0.02884650192784 *
2097460   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.2985143092641 * AcceptedCmp10 + -0.06881934778393 * 
AcceptedCmp20 + -0.02609197044604 * AcceptedCmp30 + -0.79105657447885 * AcceptedCmp40 + 
-0.02286855144948 * AcceptedCmp50 + 0.02884650192784 * Complain0 ;
2097461   +   H11  = H11  +    -0.41169946146301 * Education2n_Cycle
2097462   +          +      0.8448273504441 * EducationBasic  +    -1.02497956377347 *
2097463   +        EducationGraduation  +     0.43998321745211 * EducationMaster
2097464   +          +    -0.85912688909911 * Marital_StatusDivorced
2097465   +          +     0.81561401465875 * Marital_StatusMarried
2097466   +          +    -0.58324403081542 * Marital_StatusSingle
2097467   +          +      0.9348017085106 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.41169946146301 * Education2n_Cycle + 0.8448273504441 * 
EducationBasic + -1.02497956377347 * EducationGraduation + 0.43998321745211 * EducationMaster 
+ -0.85912688909911 * Marital_StatusDivorced + 0.81561401465875 * Marital_StatusMarried + 
-0.58324403081542 * Marital_StatusSingle + 0.9348017085106 * Marital_StatusTogether ;
2097468   +   H12  = H12  +     0.22828129841893 * Education2n_Cycle
2097469   +          +     0.47579227804033 * EducationBasic  +    -0.18165301263195 *
2097470   +        EducationGraduation  +    -0.16143431016405 * EducationMaster
2097471   +          +    -0.34784695867287 * Marital_StatusDivorced
2097472   +          +    -0.18194022182247 * Marital_StatusMarried
2097473   +          +    -0.10633185904164 * Marital_StatusSingle
2097474   +          +     0.13136125361628 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.22828129841893 * Education2n_Cycle + 0.47579227804033 * 
EducationBasic + -0.18165301263195 * EducationGraduation + -0.16143431016405 * EducationMaster 
+ -0.34784695867287 * Marital_StatusDivorced + -0.18194022182247 * Marital_StatusMarried + 
-0.10633185904164 * Marital_StatusSingle + 0.13136125361628 * Marital_StatusTogether ;
2097475   +   H13  = H13  +     0.38705901043652 * Education2n_Cycle
2097476   +          +     0.19703188370189 * EducationBasic  +    -0.48062640599976 *
2097477   +        EducationGraduation  +     -0.3646621736273 * EducationMaster
2097478   +          +     0.61058752124466 * Marital_StatusDivorced
2097479   +          +    -1.38793808025141 * Marital_StatusMarried
2097480   +          +     1.10060737810944 * Marital_StatusSingle
2097481   +          +    -1.21250219018366 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.38705901043652 * Education2n_Cycle + 0.19703188370189 * 
EducationBasic + -0.48062640599976 * EducationGraduation + -0.3646621736273 * EducationMaster 
+ 0.61058752124466 * Marital_StatusDivorced + -1.38793808025141 * Marital_StatusMarried + 
1.10060737810944 * Marital_StatusSingle + -1.21250219018366 * Marital_StatusTogether ;
2097482   +   H14  = H14  +    -0.20576658115662 * Education2n_Cycle
2097483   +          +    -0.09185472034614 * EducationBasic  +    -0.43674210064447 *
2097484   +        EducationGraduation  +    -0.18154054746298 * EducationMaster
2097485   +          +     0.11973800573581 * Marital_StatusDivorced
2097486   +          +      -0.294635257911 * Marital_StatusMarried
2097487   +          +    -0.05399659601172 * Marital_StatusSingle
2097488   +          +     0.34207780606239 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.20576658115662 * Education2n_Cycle + -0.09185472034614 * 
EducationBasic + -0.43674210064447 * EducationGraduation + -0.18154054746298 * EducationMaster 
+ 0.11973800573581 * Marital_StatusDivorced + -0.294635257911 * Marital_StatusMarried + 
-0.05399659601172 * Marital_StatusSingle + 0.34207780606239 * Marital_StatusTogether ;
2097489   +   H15  = H15  +    -0.05553093684862 * Education2n_Cycle
2097490   +          +    -0.12898006732329 * EducationBasic  +    -0.16064118923518 *
2097491   +        EducationGraduation  +     -0.6431539624694 * EducationMaster
2097492   +          +     0.42838191659864 * Marital_StatusDivorced
2097493   +          +    -0.09150349181363 * Marital_StatusMarried
2097494   +          +    -0.33520164145276 * Marital_StatusSingle
2097495   +          +    -0.15253738713197 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + -0.05553093684862 * Education2n_Cycle + -0.12898006732329 * 
EducationBasic + -0.16064118923518 * EducationGraduation + -0.6431539624694 * EducationMaster 
+ 0.42838191659864 * Marital_StatusDivorced + -0.09150349181363 * Marital_StatusMarried + 
-0.33520164145276 * Marital_StatusSingle + -0.15253738713197 * Marital_StatusTogether ;
2097496   +   H11  =     -1.5079478405973 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -1.5079478405973 + H11 ;
2097497   +   H12  =     0.03014958331993 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.03014958331993 + H12 ;
2097498   +   H13  =    -1.78098671165572 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -1.78098671165572 + H13 ;
2097499   +   H14  =     0.22179429743277 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 0.22179429743277 + H14 ;
2097500   +   H15  =    -2.06602107857898 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = -2.06602107857898 + H15 ;
2097501   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
2097502   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
2097503   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
2097504   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
2097505   +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
2097506   +END;
MPRINT(EM_DIAGRAM):   END;
2097507   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2097508   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
2097509   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
2097510   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
2097511   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
2097512   +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
2097513   +END;
MPRINT(EM_DIAGRAM):   END;
2097514   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2097515   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2097516   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2097517   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2097518   +   P_DepVar1  =    -4.55666337815854 * H11  +    -4.04792544554995 * H12
2097519   +          +     4.56148127429284 * H13  +     2.36841344452371 * H14
2097520   +          +    -3.07371010011749 * H15 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -4.55666337815854 * H11 + -4.04792544554995 * H12 + 
4.56148127429284 * H13 + 2.36841344452371 * H14 + -3.07371010011749 * H15 ;
2097521   +   P_DepVar1  =    -0.83283406236136 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.83283406236136 + P_DepVar1 ;
2097522   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2097523   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2097524   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2097525   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2097526   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2097527   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2097528   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2097529   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2097530   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2097531   +END;
MPRINT(EM_DIAGRAM):   END;
2097532   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2097533   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2097534   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2097535   +END;
MPRINT(EM_DIAGRAM):   END;
2097536   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2097537   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2097538   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2097539   +END;
MPRINT(EM_DIAGRAM):   END;
2097540   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2097541   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2097542   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2097543   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2097544   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2097545   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2097546   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2097547   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2097548   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2097549   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2097550   +END;
MPRINT(EM_DIAGRAM):   END;
2097551   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2097552   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2097553   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2097554   +drop
2097555   +H11
2097556   +H12
2097557   +H13
2097558   +H14
2097559   +H15
2097560   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 ;
2097561   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2097562    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2097563    quit;
2097564    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2097565    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2097566    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2097567    retain ID 2 Node "Neural34";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Neural34";
2097568    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2097569    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1878 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 1878 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2097570    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2097571    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2097572    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1878 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 1878 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2097573    proc sort data=EMWS8.Neural34_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Neural34_variableset out=_temp2(keep=NAME CREATOR);
2097574    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2097575    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.NEURAL34_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2097576    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2097577    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2097578    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2097579    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2097580    proc contents data=EMWS8.Neural34_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Neural34_train out=_meta(keep=NAME) noprint;
2097581    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

2097582    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2097583    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2097584    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 53 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2097585    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2097586    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2097587    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2097588    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 53 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2097589    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2097590    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2097590  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 924 rows and 5 columns.

2097591    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2097592    proc append base=EMWS8.Ensmbl9_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl9_FCMP data=_tempx;
2097593    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL9_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 924 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL9_FCMP has 924 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2097594    filename _pref
2097594  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
2097595    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2097596    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
2097597   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2097598   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
2097599   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2097600   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
2097601   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
2097602   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2097603    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2097604    quit;
2097605    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2097606    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2097607    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2097608    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
2097609    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2097610    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2097611    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2097612    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2097613    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2097614    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
2097615    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2097616    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2097617    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2097618    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2097619    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2097620    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2097621    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
2097622    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

2097623    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2097624    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2097625    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2097626    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2097627    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2097628    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2097629    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2097630    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2097631    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2097631  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

2097632    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2097633    proc append base=EMWS8.Ensmbl9_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl9_FCMP data=_tempx;
2097634    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL9_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL9_FCMP has 928 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2097635    filename _pref
2097635  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
2097636    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2097637    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
2097638   +
2097639   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
2097640   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
2097640  !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
2097641   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
2097642   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
2097643   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
2097644   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
2097645   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2097646    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2097647    quit;
2097648    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2097649    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2097650    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2097651    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
2097652    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2097653    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2097654    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2097655    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2097656    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2097657    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
2097658    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2097659    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2097660    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2097661    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2097662    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2097663    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2097664    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
2097665    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2097666    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2097667    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2097668    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2097669    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2097670    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2097671    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2097672    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2097673    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2097674    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2097674  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

2097675    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2097676    proc append base=EMWS8.Ensmbl9_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl9_FCMP data=_tempx;
2097677    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL9_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL9_FCMP has 967 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2097678    filename _pref
2097678  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
2097679    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2097680    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
2097681   +
2097682   +
2097683   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
2097684   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
2097685   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
2097686   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
2097687   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
2097688   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2097689   +
2097690   +
2097691   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
2097692   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
2097693   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
2097694   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
2097695   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
2097696   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2097697   +
2097698   +
2097699   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
2097700   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
2097701   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
2097702   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
2097703   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
2097704   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2097705   +
2097706   +
2097707   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
2097708   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
2097709   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
2097710   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
2097711   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
2097712   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2097713   +
2097714   +
2097715   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
2097716   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
2097717   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
2097718   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
2097719   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
2097720   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2097721   +
2097722   +
2097723   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
2097724   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
2097725   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
2097726   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
2097727   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
2097728   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2097729   +
2097730   +
2097731   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
2097732   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
2097733   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
2097734   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
2097735   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
2097736   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2097737   +
2097738   +
2097739   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
2097740   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
2097741   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
2097742   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
2097743   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
2097744   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2097745   +if
2097746   +_FILTERNORM1 not in ( '.')
2097747   + and
2097748   +_FILTERNORM2 not in ( '.')
2097749   + and
2097750   +_FILTERNORM3 not in ( '.')
2097751   + and
2097752   +_FILTERNORM4 not in ( '.')
2097753   + and
2097754   +_FILTERNORM5 not in ( '.')
2097755   + and
2097756   +_FILTERNORM6 not in ( '.')
2097757   + and
2097758   +_FILTERNORM7 not in ( ' ')
2097759   + and
2097760   +_FILTERNORM8 not in ( ' ')
2097761   +and
2097762   +( Dt_Customer ne .)
2097763   +and ( Income ne . and (Income<=107000))
2097764   +and ( Kidhome ne .)
2097765   +and ( MntFishProducts ne .)
2097766   +and ( MntFruits ne .)
2097767   +and ( MntGoldProds ne .)
2097768   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
2097769   +and ( MntSweetProducts ne .)
2097770   +and ( MntWines ne .)
2097771   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
2097772   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
2097773   +and ( NumStorePurchases ne .)
2097774   +and ( NumWebPurchases ne .)
2097775   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
2097776   +and ( Recency ne .)
2097777   +and ( Teenhome ne .)
2097778   +and ( Year_Birth ne .)
2097779   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
2097780   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
2097781   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
2097782   +end;
MPRINT(EM_DIAGRAM):   end;
2097783   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
2097784   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2097785    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2097786    quit;
2097787    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2097788    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2097789    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2097790    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
2097791    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2097792    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2097793    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2097794    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2097795    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2097796    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
2097797    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2097798    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2097799    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2097800    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2097801    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2097802    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2097803    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
2097804    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

2097805    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2097806    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2097807    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2097808    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2097809    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2097810    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2097811    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2097812    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2097813    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2097813  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

2097814    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2097815    proc append base=EMWS8.Ensmbl9_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl9_FCMP data=_tempx;
2097816    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL9_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL9_FCMP has 1033 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2097817    %macro varDept(fcmpdata=,id=);
2097818    %global nobs&id scoreFlag&id;
2097819    %let scoreFlag&id = 0;
2097820    %if &id=1 or ^&fcmpStart %then %do;
2097821    proc sort data=&fcmpdata out=_temp&id nodupkey;
2097822    by NAME;
2097823    where id=&id and LHS in( %let j=1;
2097824    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
2097825    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
2097826    "&var" %let j = %eval(&j+1);
2097827    %end;
2097828    );
2097829    run;
2097830    %let dsid = %sysfunc(open(_temp&id));
2097831    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2097832    %let dsid = %sysfunc(close(&dsid));
2097833    %if &&nobs&id %then %do;
2097834    %let scoreFlag&id = 1;
2097835    %let fcmpStart = 1;
2097836    %end;
2097837    %else %let fcmpStart = 0;
2097838    %end;
2097839    %else %do;
2097840    proc sort data=&fcmpdata out=_tempid;
2097841    where id=&id;
2097842    by LHS;
2097843    run;
2097844    %let dsid = %sysfunc(open(_tempid));
2097845    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2097846    %let dsid = %sysfunc(close(&dsid));
2097847    %if ^&&nobs&id %then %do;
2097848    proc datasets lib=work nolist;
2097849    delete _tempid;
2097850    run;
2097851    quit;
2097852    %end;
2097853    %else %do;
2097854    data _tempAll;
2097855    set %let j=%eval(&id-1);
2097856    %do x=1 %to &j;
2097857    %if &&nobs&x %then %do;
2097858    _temp&x %end;
2097859    %end;
2097860    ;
2097861    run;
2097862    proc sql;
2097863    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
2097863  ! work._tempid p2 where p.name=p2.lhs;
2097864    quit;
2097865    data _temp&id;
2097866    set _temp&id;
2097867    where LHS ne '' and NAME ne '' and Node ne '';
2097868    run;
2097869    proc datasets lib=work nolist;
2097870    delete _tempAll;
2097871    run;
2097872    %let dsid = %sysfunc(open(_temp&id));
2097873    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2097874    %let dsid = %sysfunc(close(&dsid));
2097875    %if ^&&nobs&id %then %do;
2097876    proc datasets lib=work nolist;
2097877    delete _temp&id;
2097878    run;
2097879    quit;
2097880    %end;
2097881    %else %do;
2097882    %let scoreFlag&id = 1;
2097883    data _temp&id;
2097884    set _temp&id;
2097885    where LHS ne NAME and node ne '';
2097886    run;
2097887    %let dsid = %sysfunc(open(_temp&id));
2097888    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2097889    %let dsid = %sysfunc(close(&dsid));
2097890    %if ^&&nobs&id %then %do;
2097891    proc datasets lib=work nolist;
2097892    delete _temp&id;
2097893    run;
2097894    quit;
2097895    %end;
2097896    %else %do;
2097897    proc sort data=_temp&id nodupkey;
2097898    by LHS NAME;
2097899    run;
2097900    %end;
2097901    %end;
2097902    %end;
2097903    %end;
2097904    %mend varDept;
2097905    %macro optCode(outdata=fcmpdata);
2097906    %global fcmpStart;
2097907    %let fcmpStart = 0;
2097908    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
2097909    %let NumNodes=9;
2097910    %do k=1 %to &NumNodes;
2097911    %vardept(fcmpdata=&outdata, id=&k);
2097912    %end;
2097913    %mend optCode;
2097914    %optcode(outData=EMWS8.Ensmbl9_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl9_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL9_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl9_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 98 observations read from the data set EMWS8.ENSMBL9_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 73 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 25 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl9_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL9_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl9_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL9_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl9_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL9_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 25 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 25 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp5;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP5 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl9_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL9_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 25 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 25 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp6;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP6 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl9_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL9_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 25 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 25 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.06 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl9_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL9_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl9_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL9_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

2097915    filename _pref
2097915  ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural33\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural33\EMPUBLISHSCORE.sas";
2097916    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2097917    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Neural33\EMPUBLISHSCORE.sas.
2097918   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2097919   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2097920   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2097921   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2097922   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2097923   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2097924   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2097925   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2097926   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2097927   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2097928   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2097929   +LENGTH _WARN_ $4
2097930   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
2097931   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2097932   +
2097933   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2097934   +
2097935   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2097936   +
2097937   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2097938   +
2097939   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2097940   +
2097941   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2097942   +
2097943   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2097944   +
2097945   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2097946   +
2097947   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2097948   +
2097949   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2097950   +
2097951   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2097952   +
2097953   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2097954   +
2097955   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2097956   +
2097957   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2097958   +
2097959   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2097960   +
2097961   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2097962   +
2097963   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2097964   +
2097965   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2097966   +
2097967   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2097968   +
2097969   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2097970   +
2097971   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2097972   +
2097973   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2097974   +
2097975   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2097976   +
2097977   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2097978   +
2097979   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2097980   +
2097981   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2097982   +
2097983   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2097984   +
2097985   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2097986   +
2097987   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2097988   +
2097989   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
2097990   +
2097991   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
2097992   +
2097993   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
2097994   +
2097995   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
2097996   +
2097997   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2097998   +
2097999   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2098000   +
2098001   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2098002   +
2098003   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2098004   +
2098005   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2098006   +
2098007   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2098008   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2098009   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2098010   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2098011   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2098012   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2098013   +end;
MPRINT(EM_DIAGRAM):   end;
2098014   +else do;
MPRINT(EM_DIAGRAM):   else do;
2098015   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2098016   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2098017   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2098018   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2098019   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2098020   +   end;
MPRINT(EM_DIAGRAM):   end;
2098021   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2098022   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2098023   +   end;
MPRINT(EM_DIAGRAM):   end;
2098024   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2098025   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2098026   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2098027   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2098028   +   end;
MPRINT(EM_DIAGRAM):   end;
2098029   +end;
MPRINT(EM_DIAGRAM):   end;
2098030   +
2098031   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2098032   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2098033   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2098034   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2098035   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2098036   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2098037   +end;
MPRINT(EM_DIAGRAM):   end;
2098038   +else do;
MPRINT(EM_DIAGRAM):   else do;
2098039   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2098040   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2098041   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2098042   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2098043   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2098044   +   end;
MPRINT(EM_DIAGRAM):   end;
2098045   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2098046   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2098047   +   end;
MPRINT(EM_DIAGRAM):   end;
2098048   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2098049   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2098050   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2098051   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2098052   +   end;
MPRINT(EM_DIAGRAM):   end;
2098053   +end;
MPRINT(EM_DIAGRAM):   end;
2098054   +
2098055   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2098056   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2098057   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2098058   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2098059   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2098060   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2098061   +end;
MPRINT(EM_DIAGRAM):   end;
2098062   +else do;
MPRINT(EM_DIAGRAM):   else do;
2098063   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2098064   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2098065   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2098066   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2098067   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2098068   +   end;
MPRINT(EM_DIAGRAM):   end;
2098069   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2098070   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2098071   +   end;
MPRINT(EM_DIAGRAM):   end;
2098072   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2098073   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2098074   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2098075   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2098076   +   end;
MPRINT(EM_DIAGRAM):   end;
2098077   +end;
MPRINT(EM_DIAGRAM):   end;
2098078   +
2098079   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2098080   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2098081   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2098082   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2098083   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2098084   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2098085   +end;
MPRINT(EM_DIAGRAM):   end;
2098086   +else do;
MPRINT(EM_DIAGRAM):   else do;
2098087   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2098088   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2098089   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2098090   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2098091   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2098092   +   end;
MPRINT(EM_DIAGRAM):   end;
2098093   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2098094   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2098095   +   end;
MPRINT(EM_DIAGRAM):   end;
2098096   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2098097   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2098098   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2098099   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2098100   +   end;
MPRINT(EM_DIAGRAM):   end;
2098101   +end;
MPRINT(EM_DIAGRAM):   end;
2098102   +
2098103   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2098104   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2098105   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2098106   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2098107   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2098108   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2098109   +end;
MPRINT(EM_DIAGRAM):   end;
2098110   +else do;
MPRINT(EM_DIAGRAM):   else do;
2098111   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2098112   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2098113   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2098114   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2098115   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2098116   +   end;
MPRINT(EM_DIAGRAM):   end;
2098117   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2098118   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2098119   +   end;
MPRINT(EM_DIAGRAM):   end;
2098120   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2098121   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2098122   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2098123   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2098124   +   end;
MPRINT(EM_DIAGRAM):   end;
2098125   +end;
MPRINT(EM_DIAGRAM):   end;
2098126   +
2098127   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2098128   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2098129   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2098130   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2098131   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2098132   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2098133   +end;
MPRINT(EM_DIAGRAM):   end;
2098134   +else do;
MPRINT(EM_DIAGRAM):   else do;
2098135   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2098136   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2098137   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2098138   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2098139   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2098140   +   end;
MPRINT(EM_DIAGRAM):   end;
2098141   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2098142   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2098143   +   end;
MPRINT(EM_DIAGRAM):   end;
2098144   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2098145   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2098146   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2098147   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2098148   +   end;
MPRINT(EM_DIAGRAM):   end;
2098149   +end;
MPRINT(EM_DIAGRAM):   end;
2098150   +
2098151   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2098152   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
2098153   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2098154   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2098155   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2098156   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2098157   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2098158   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2098159   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2098160   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2098161   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2098162   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2098163   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2098164   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2098165   +end;
MPRINT(EM_DIAGRAM):   end;
2098166   +else do;
MPRINT(EM_DIAGRAM):   else do;
2098167   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2098168   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2098169   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2098170   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2098171   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2098172   +   end;
MPRINT(EM_DIAGRAM):   end;
2098173   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2098174   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2098175   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2098176   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2098177   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2098178   +   end;
MPRINT(EM_DIAGRAM):   end;
2098179   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2098180   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2098181   +   end;
MPRINT(EM_DIAGRAM):   end;
2098182   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2098183   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2098184   +   end;
MPRINT(EM_DIAGRAM):   end;
2098185   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2098186   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2098187   +   end;
MPRINT(EM_DIAGRAM):   end;
2098188   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2098189   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2098190   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2098191   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2098192   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2098193   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2098194   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2098195   +   end;
MPRINT(EM_DIAGRAM):   end;
2098196   +end;
MPRINT(EM_DIAGRAM):   end;
2098197   +
2098198   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2098199   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2098200   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
2098201   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2098202   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2098203   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2098204   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2098205   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2098206   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2098207   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2098208   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2098209   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2098210   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2098211   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2098212   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2098213   +end;
MPRINT(EM_DIAGRAM):   end;
2098214   +else do;
MPRINT(EM_DIAGRAM):   else do;
2098215   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2098216   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2098217   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2098218   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2098219   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2098220   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2098221   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2098222   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2098223   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2098224   +         end;
MPRINT(EM_DIAGRAM):   end;
2098225   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2098226   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2098227   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2098228   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2098229   +            end;
MPRINT(EM_DIAGRAM):   end;
2098230   +         end;
MPRINT(EM_DIAGRAM):   end;
2098231   +      end;
MPRINT(EM_DIAGRAM):   end;
2098232   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2098233   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2098234   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2098235   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2098236   +         end;
MPRINT(EM_DIAGRAM):   end;
2098237   +      end;
MPRINT(EM_DIAGRAM):   end;
2098238   +   end;
MPRINT(EM_DIAGRAM):   end;
2098239   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2098240   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2098241   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2098242   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2098243   +      end;
MPRINT(EM_DIAGRAM):   end;
2098244   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2098245   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2098246   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2098247   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2098248   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2098249   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2098250   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2098251   +         end;
MPRINT(EM_DIAGRAM):   end;
2098252   +      end;
MPRINT(EM_DIAGRAM):   end;
2098253   +   end;
MPRINT(EM_DIAGRAM):   end;
2098254   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2098255   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2098256   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2098257   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2098258   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2098259   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2098260   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2098261   +   end;
MPRINT(EM_DIAGRAM):   end;
2098262   +end;
MPRINT(EM_DIAGRAM):   end;
2098263   +
2098264   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2098265   +*** Checking missing input Interval
2098266   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2098267   +
2098268   +IF NMISS(
2098269   +   Income ,
2098270   +   Kidhome ,
2098271   +   MntFishProducts ,
2098272   +   MntFruits ,
2098273   +   MntGoldProds ,
2098274   +   MntMeatProducts ,
2098275   +   MntSweetProducts ,
2098276   +   MntWines ,
2098277   +   NumCatalogPurchases ,
2098278   +   NumDealsPurchases ,
2098279   +   NumStorePurchases ,
2098280   +   NumWebPurchases ,
2098281   +   NumWebVisitsMonth ,
2098282   +   Recency ,
2098283   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Income , Kidhome , MntFishProducts , MntFruits , MntGoldProds 
, MntMeatProducts , MntSweetProducts , MntWines , NumCatalogPurchases , NumDealsPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , Recency , Teenhome ) THEN DO;
2098284   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2098285   +
2098286   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2098287   +END;
MPRINT(EM_DIAGRAM):   END;
2098288   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2098289   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
2098290   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2098291   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2098292   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2098293   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2098294   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2098295   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2098296   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2098297   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2098298   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2098299   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2098300   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2098301   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2098302   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2098303   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2098304   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2098305   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2098306   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2098307   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2098308   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2098309   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2098310   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2098311   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2098312   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2098313   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2098314   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2098315   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2098316   +END;
MPRINT(EM_DIAGRAM):   END;
2098317   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2098318   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2098319   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2098320   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2098321   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2098322   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2098323   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2098324   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2098325   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2098326   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2098327   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2098328   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2098329   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2098330   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
2098331   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2098332   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2098333   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2098334   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2098335   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2098336   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2098337   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2098338   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2098339   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2098340   +   ELSE S_NumCatalogPurchases
2098341   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2098342   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2098343   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2098344   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2098345   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2098346   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2098347   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2098348   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2098349   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2098350   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2098351   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2098352   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2098353   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2098354   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2098355   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2098356   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2098357   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2098358   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2098359   +END;
MPRINT(EM_DIAGRAM):   END;
2098360   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2098361   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
2098362   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2098363   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2098364   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
2098365   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2098366   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2098367   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
2098368   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2098369   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2098370   +   H11  =     0.32435248899543 * S_Income  +    -0.47929849648429 * S_Kidhome
2098371   +          +     0.13364230231465 * S_MntFishProducts
2098372   +          +     -0.1386717864506 * S_MntFruits  +    -0.02769770185129 *
2098373   +        S_MntGoldProds  +    -0.29009812234724 * S_MntMeatProducts
2098374   +          +    -0.10871064476617 * S_MntSweetProducts
2098375   +          +     0.57858611197719 * S_MntWines  +    -0.26900817180555 *
2098376   +        S_NumCatalogPurchases  +    -0.39598523430317 * S_NumDealsPurchases
2098377   +          +     0.52835897625366 * S_NumStorePurchases
2098378   +          +     0.66297635444958 * S_NumWebPurchases
2098379   +          +    -0.31727971903608 * S_NumWebVisitsMonth
2098380   +          +     0.12789679291219 * S_Recency  +    -0.39270105014448 *
2098381   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.32435248899543 * S_Income + -0.47929849648429 * S_Kidhome + 
0.13364230231465 * S_MntFishProducts + -0.1386717864506 * S_MntFruits + -0.02769770185129 * 
S_MntGoldProds + -0.29009812234724 * S_MntMeatProducts + -0.10871064476617 * 
S_MntSweetProducts + 0.57858611197719 * S_MntWines + -0.26900817180555 * S_NumCatalogPurchases 
+ -0.39598523430317 * S_NumDealsPurchases + 0.52835897625366 * S_NumStorePurchases + 
0.66297635444958 * S_NumWebPurchases + -0.31727971903608 * S_NumWebVisitsMonth + 
0.12789679291219 * S_Recency + -0.39270105014448 * S_Teenhome ;
2098382   +   H12  =     0.37777254641249 * S_Income  +     0.79199857244438 * S_Kidhome
2098383   +          +     0.14748983783528 * S_MntFishProducts
2098384   +          +     0.14994032216514 * S_MntFruits  +     0.19147871752132 *
2098385   +        S_MntGoldProds  +     0.80535213270443 * S_MntMeatProducts
2098386   +          +     0.31095426478608 * S_MntSweetProducts
2098387   +          +     0.00471809437476 * S_MntWines  +     0.93716396534802 *
2098388   +        S_NumCatalogPurchases  +     0.86841248727948 * S_NumDealsPurchases
2098389   +          +     0.14387100066933 * S_NumStorePurchases
2098390   +          +    -0.01648998884133 * S_NumWebPurchases
2098391   +          +     -0.1378597161576 * S_NumWebVisitsMonth
2098392   +          +     0.15850653387379 * S_Recency  +     0.11714339614827 *
2098393   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = 0.37777254641249 * S_Income + 0.79199857244438 * S_Kidhome + 
0.14748983783528 * S_MntFishProducts + 0.14994032216514 * S_MntFruits + 0.19147871752132 * 
S_MntGoldProds + 0.80535213270443 * S_MntMeatProducts + 0.31095426478608 * S_MntSweetProducts 
+ 0.00471809437476 * S_MntWines + 0.93716396534802 * S_NumCatalogPurchases + 0.86841248727948 
* S_NumDealsPurchases + 0.14387100066933 * S_NumStorePurchases + -0.01648998884133 * 
S_NumWebPurchases + -0.1378597161576 * S_NumWebVisitsMonth + 0.15850653387379 * S_Recency + 
0.11714339614827 * S_Teenhome ;
2098394   +   H13  =    -0.31490756773649 * S_Income  +      0.4776214738577 * S_Kidhome
2098395   +          +     0.00774185404534 * S_MntFishProducts
2098396   +          +     0.22292845341942 * S_MntFruits  +     0.11636422687317 *
2098397   +        S_MntGoldProds  +    -0.45522230281212 * S_MntMeatProducts
2098398   +          +     0.28728624268589 * S_MntSweetProducts
2098399   +          +     0.74892928025295 * S_MntWines  +     -0.4834082773325 *
2098400   +        S_NumCatalogPurchases  +    -0.05055717315946 * S_NumDealsPurchases
2098401   +          +     0.56446566213593 * S_NumStorePurchases
2098402   +          +     0.44547549135846 * S_NumWebPurchases
2098403   +          +    -1.17648505936662 * S_NumWebVisitsMonth
2098404   +          +     1.30076355226685 * S_Recency  +     0.56217939635691 *
2098405   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = -0.31490756773649 * S_Income + 0.4776214738577 * S_Kidhome + 
0.00774185404534 * S_MntFishProducts + 0.22292845341942 * S_MntFruits + 0.11636422687317 * 
S_MntGoldProds + -0.45522230281212 * S_MntMeatProducts + 0.28728624268589 * S_MntSweetProducts 
+ 0.74892928025295 * S_MntWines + -0.4834082773325 * S_NumCatalogPurchases + -0.05055717315946 
* S_NumDealsPurchases + 0.56446566213593 * S_NumStorePurchases + 0.44547549135846 * 
S_NumWebPurchases + -1.17648505936662 * S_NumWebVisitsMonth + 1.30076355226685 * S_Recency + 
0.56217939635691 * S_Teenhome ;
2098406   +   H14  =    -0.40179905952719 * S_Income  +     0.16141565212918 * S_Kidhome
2098407   +          +     0.24665716882586 * S_MntFishProducts
2098408   +          +     0.03410629332469 * S_MntFruits  +     -0.1353295645077 *
2098409   +        S_MntGoldProds  +    -0.74661391150362 * S_MntMeatProducts
2098410   +          +    -0.10530818594736 * S_MntSweetProducts
2098411   +          +     0.30618479493194 * S_MntWines  +    -0.63426712804061 *
2098412   +        S_NumCatalogPurchases  +    -0.39486403699564 * S_NumDealsPurchases
2098413   +          +     0.36617016651032 * S_NumStorePurchases
2098414   +          +      0.3580014320946 * S_NumWebPurchases
2098415   +          +    -0.72597289213724 * S_NumWebVisitsMonth
2098416   +          +     0.93272927444012 * S_Recency  +     0.24531402677279 *
2098417   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = -0.40179905952719 * S_Income + 0.16141565212918 * S_Kidhome + 
0.24665716882586 * S_MntFishProducts + 0.03410629332469 * S_MntFruits + -0.1353295645077 * 
S_MntGoldProds + -0.74661391150362 * S_MntMeatProducts + -0.10530818594736 * 
S_MntSweetProducts + 0.30618479493194 * S_MntWines + -0.63426712804061 * S_NumCatalogPurchases 
+ -0.39486403699564 * S_NumDealsPurchases + 0.36617016651032 * S_NumStorePurchases + 
0.3580014320946 * S_NumWebPurchases + -0.72597289213724 * S_NumWebVisitsMonth + 
0.93272927444012 * S_Recency + 0.24531402677279 * S_Teenhome ;
2098418   +   H11  = H11  +     0.10790306691381 * AcceptedCmp10
2098419   +          +     0.36067546675468 * AcceptedCmp20  +     0.56838342781466 *
2098420   +        AcceptedCmp30  +     0.10138997954661 * AcceptedCmp40
2098421   +          +     0.23809874960179 * AcceptedCmp50  +     0.42164522965364 *
2098422   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.10790306691381 * AcceptedCmp10 + 0.36067546675468 * 
AcceptedCmp20 + 0.56838342781466 * AcceptedCmp30 + 0.10138997954661 * AcceptedCmp40 + 
0.23809874960179 * AcceptedCmp50 + 0.42164522965364 * Complain0 ;
2098423   +   H12  = H12  +    -0.10342435301564 * AcceptedCmp10
2098424   +          +     -0.1021625473908 * AcceptedCmp20  +    -0.17400073301804 *
2098425   +        AcceptedCmp30  +      0.1295257925186 * AcceptedCmp40
2098426   +          +    -0.17149939617806 * AcceptedCmp50  +    -0.11843709761825 *
2098427   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.10342435301564 * AcceptedCmp10 + -0.1021625473908 * 
AcceptedCmp20 + -0.17400073301804 * AcceptedCmp30 + 0.1295257925186 * AcceptedCmp40 + 
-0.17149939617806 * AcceptedCmp50 + -0.11843709761825 * Complain0 ;
2098428   +   H13  = H13  +      0.3357459370893 * AcceptedCmp10
2098429   +          +      -0.142120215863 * AcceptedCmp20  +     0.74265608697316 *
2098430   +        AcceptedCmp30  +     0.62493796040954 * AcceptedCmp40
2098431   +          +     0.60033091776267 * AcceptedCmp50  +    -0.70537393421868 *
2098432   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.3357459370893 * AcceptedCmp10 + -0.142120215863 * 
AcceptedCmp20 + 0.74265608697316 * AcceptedCmp30 + 0.62493796040954 * AcceptedCmp40 + 
0.60033091776267 * AcceptedCmp50 + -0.70537393421868 * Complain0 ;
2098433   +   H14  = H14  +     0.52427760948235 * AcceptedCmp10
2098434   +          +     0.50852083885302 * AcceptedCmp20  +     0.30116257238429 *
2098435   +        AcceptedCmp30  +     0.31213749631365 * AcceptedCmp40
2098436   +          +     0.49344261660916 * AcceptedCmp50  +    -0.18226921500969 *
2098437   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.52427760948235 * AcceptedCmp10 + 0.50852083885302 * 
AcceptedCmp20 + 0.30116257238429 * AcceptedCmp30 + 0.31213749631365 * AcceptedCmp40 + 
0.49344261660916 * AcceptedCmp50 + -0.18226921500969 * Complain0 ;
2098438   +   H11  = H11  +     0.04284090874847 * Education2n_Cycle
2098439   +          +    -0.30425860762413 * EducationBasic  +    -0.44977960705402 *
2098440   +        EducationGraduation  +     -0.0712759822621 * EducationMaster
2098441   +          +     0.05171313818048 * Marital_StatusDivorced
2098442   +          +    -0.79112453157624 * Marital_StatusMarried
2098443   +          +     0.89650138723512 * Marital_StatusSingle
2098444   +          +    -0.22094240412913 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.04284090874847 * Education2n_Cycle + -0.30425860762413 * 
EducationBasic + -0.44977960705402 * EducationGraduation + -0.0712759822621 * EducationMaster 
+ 0.05171313818048 * Marital_StatusDivorced + -0.79112453157624 * Marital_StatusMarried + 
0.89650138723512 * Marital_StatusSingle + -0.22094240412913 * Marital_StatusTogether ;
2098445   +   H12  = H12  +    -0.32431446530898 * Education2n_Cycle
2098446   +          +     0.04651949620543 * EducationBasic  +     0.50250608857106 *
2098447   +        EducationGraduation  +     0.00514401910219 * EducationMaster
2098448   +          +     0.05091092042416 * Marital_StatusDivorced
2098449   +          +     0.86642985712339 * Marital_StatusMarried
2098450   +          +    -0.14148832619997 * Marital_StatusSingle
2098451   +          +     0.54248977280079 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.32431446530898 * Education2n_Cycle + 0.04651949620543 * 
EducationBasic + 0.50250608857106 * EducationGraduation + 0.00514401910219 * EducationMaster + 
0.05091092042416 * Marital_StatusDivorced + 0.86642985712339 * Marital_StatusMarried + 
-0.14148832619997 * Marital_StatusSingle + 0.54248977280079 * Marital_StatusTogether ;
2098452   +   H13  = H13  +      0.0307333873684 * Education2n_Cycle
2098453   +          +     0.54778728297045 * EducationBasic  +    -0.56032296783121 *
2098454   +        EducationGraduation  +     0.26811389967146 * EducationMaster
2098455   +          +    -0.67787102917679 * Marital_StatusDivorced
2098456   +          +     1.38931504762816 * Marital_StatusMarried
2098457   +          +    -0.51164629287485 * Marital_StatusSingle
2098458   +          +     1.18856608313733 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.0307333873684 * Education2n_Cycle + 0.54778728297045 * 
EducationBasic + -0.56032296783121 * EducationGraduation + 0.26811389967146 * EducationMaster 
+ -0.67787102917679 * Marital_StatusDivorced + 1.38931504762816 * Marital_StatusMarried + 
-0.51164629287485 * Marital_StatusSingle + 1.18856608313733 * Marital_StatusTogether ;
2098459   +   H14  = H14  +    -0.07575289231798 * Education2n_Cycle
2098460   +          +     0.20678548929493 * EducationBasic  +     0.15952949579281 *
2098461   +        EducationGraduation  +    -0.08313247341922 * EducationMaster
2098462   +          +     0.12658153975639 * Marital_StatusDivorced
2098463   +          +     0.20111721742791 * Marital_StatusMarried
2098464   +          +     -0.3521524791648 * Marital_StatusSingle
2098465   +          +     0.24908846940254 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.07575289231798 * Education2n_Cycle + 0.20678548929493 * 
EducationBasic + 0.15952949579281 * EducationGraduation + -0.08313247341922 * EducationMaster 
+ 0.12658153975639 * Marital_StatusDivorced + 0.20111721742791 * Marital_StatusMarried + 
-0.3521524791648 * Marital_StatusSingle + 0.24908846940254 * Marital_StatusTogether ;
2098466   +   H11  =      0.8846003542153 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 0.8846003542153 + H11 ;
2098467   +   H12  =      1.7793661863354 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 1.7793661863354 + H12 ;
2098468   +   H13  =    -0.73914187312129 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.73914187312129 + H13 ;
2098469   +   H14  =    -0.28907220457418 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = -0.28907220457418 + H14 ;
2098470   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
2098471   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
2098472   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
2098473   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
2098474   +END;
MPRINT(EM_DIAGRAM):   END;
2098475   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2098476   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
2098477   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
2098478   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
2098479   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
2098480   +END;
MPRINT(EM_DIAGRAM):   END;
2098481   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2098482   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2098483   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2098484   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2098485   +   P_DepVar1  =    -1.84303414221873 * H11  +     1.56062653143645 * H12
2098486   +          +     -3.0630784922123 * H13  +    -4.55573659919551 * H14 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.84303414221873 * H11 + 1.56062653143645 * H12 + 
-3.0630784922123 * H13 + -4.55573659919551 * H14 ;
2098487   +   P_DepVar1  =    -1.51714888392638 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.51714888392638 + P_DepVar1 ;
2098488   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2098489   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2098490   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2098491   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2098492   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2098493   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2098494   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2098495   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2098496   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2098497   +END;
MPRINT(EM_DIAGRAM):   END;
2098498   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2098499   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2098500   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2098501   +END;
MPRINT(EM_DIAGRAM):   END;
2098502   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2098503   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2098504   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2098505   +END;
MPRINT(EM_DIAGRAM):   END;
2098506   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2098507   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2098508   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2098509   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2098510   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2098511   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2098512   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2098513   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2098514   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2098515   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2098516   +END;
MPRINT(EM_DIAGRAM):   END;
2098517   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2098518   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2098519   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2098520   +drop
2098521   +H11
2098522   +H12
2098523   +H13
2098524   +H14
2098525   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 ;
2098526   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2098527    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2098528    quit;
2098529    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2098530    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2098531    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2098532    retain ID 2 Node "Neural33";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Neural33";
2098533    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2098534    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1740 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 1740 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2098535    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2098536    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2098537    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1740 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 1740 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2098538    proc sort data=EMWS8.Neural33_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Neural33_variableset out=_temp2(keep=NAME CREATOR);
2098539    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2098540    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.NEURAL33_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2098541    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2098542    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2098543    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2098544    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2098545    proc contents data=EMWS8.Neural33_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Neural33_train out=_meta(keep=NAME) noprint;
2098546    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

2098547    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2098548    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2098549    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 53 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2098550    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2098551    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2098552    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2098553    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 53 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2098554    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2098555    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2098555  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 878 rows and 5 columns.

2098556    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2098557    proc append base=EMWS8.Ensmbl9_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl9_FCMP data=_tempx;
2098558    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL9_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 878 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL9_FCMP has 878 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2098559    filename _pref
2098559  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
2098560    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2098561    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
2098562   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2098563   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
2098564   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2098565   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
2098566   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
2098567   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2098568    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2098569    quit;
2098570    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2098571    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2098572    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2098573    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
2098574    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2098575    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2098576    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2098577    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2098578    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2098579    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
2098580    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2098581    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2098582    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2098583    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2098584    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2098585    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2098586    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
2098587    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

2098588    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2098589    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2098590    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2098591    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2098592    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2098593    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2098594    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2098595    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2098596    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2098596  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

2098597    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2098598    proc append base=EMWS8.Ensmbl9_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl9_FCMP data=_tempx;
2098599    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL9_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL9_FCMP has 882 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2098600    filename _pref
2098600  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
2098601    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2098602    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
2098603   +
2098604   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
2098605   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
2098605  !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
2098606   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
2098607   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
2098608   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
2098609   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
2098610   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2098611    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2098612    quit;
2098613    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2098614    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2098615    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2098616    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
2098617    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2098618    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2098619    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2098620    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2098621    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2098622    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
2098623    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2098624    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2098625    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2098626    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2098627    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2098628    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2098629    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
2098630    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2098631    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2098632    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2098633    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2098634    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2098635    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2098636    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2098637    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2098638    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2098639    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2098639  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

2098640    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2098641    proc append base=EMWS8.Ensmbl9_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl9_FCMP data=_tempx;
2098642    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL9_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL9_FCMP has 921 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2098643    filename _pref
2098643  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
2098644    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2098645    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
2098646   +
2098647   +
2098648   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
2098649   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
2098650   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
2098651   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
2098652   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
2098653   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2098654   +
2098655   +
2098656   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
2098657   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
2098658   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
2098659   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
2098660   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
2098661   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2098662   +
2098663   +
2098664   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
2098665   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
2098666   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
2098667   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
2098668   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
2098669   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2098670   +
2098671   +
2098672   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
2098673   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
2098674   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
2098675   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
2098676   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
2098677   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2098678   +
2098679   +
2098680   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
2098681   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
2098682   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
2098683   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
2098684   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
2098685   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2098686   +
2098687   +
2098688   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
2098689   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
2098690   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
2098691   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
2098692   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
2098693   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2098694   +
2098695   +
2098696   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
2098697   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
2098698   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
2098699   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
2098700   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
2098701   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2098702   +
2098703   +
2098704   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
2098705   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
2098706   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
2098707   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
2098708   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
2098709   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2098710   +if
2098711   +_FILTERNORM1 not in ( '.')
2098712   + and
2098713   +_FILTERNORM2 not in ( '.')
2098714   + and
2098715   +_FILTERNORM3 not in ( '.')
2098716   + and
2098717   +_FILTERNORM4 not in ( '.')
2098718   + and
2098719   +_FILTERNORM5 not in ( '.')
2098720   + and
2098721   +_FILTERNORM6 not in ( '.')
2098722   + and
2098723   +_FILTERNORM7 not in ( ' ')
2098724   + and
2098725   +_FILTERNORM8 not in ( ' ')
2098726   +and
2098727   +( Dt_Customer ne .)
2098728   +and ( Income ne . and (Income<=107000))
2098729   +and ( Kidhome ne .)
2098730   +and ( MntFishProducts ne .)
2098731   +and ( MntFruits ne .)
2098732   +and ( MntGoldProds ne .)
2098733   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
2098734   +and ( MntSweetProducts ne .)
2098735   +and ( MntWines ne .)
2098736   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
2098737   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
2098738   +and ( NumStorePurchases ne .)
2098739   +and ( NumWebPurchases ne .)
2098740   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
2098741   +and ( Recency ne .)
2098742   +and ( Teenhome ne .)
2098743   +and ( Year_Birth ne .)
2098744   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
2098745   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
2098746   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
2098747   +end;
MPRINT(EM_DIAGRAM):   end;
2098748   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
2098749   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2098750    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2098751    quit;
2098752    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2098753    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2098754    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2098755    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
2098756    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2098757    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2098758    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2098759    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2098760    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2098761    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
2098762    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2098763    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2098764    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2098765    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2098766    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2098767    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2098768    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
2098769    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

2098770    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2098771    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2098772    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2098773    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2098774    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2098775    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2098776    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2098777    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2098778    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2098778  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

2098779    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2098780    proc append base=EMWS8.Ensmbl9_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl9_FCMP data=_tempx;
2098781    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL9_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL9_FCMP has 987 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2098782    %macro varDept(fcmpdata=,id=);
2098783    %global nobs&id scoreFlag&id;
2098784    %let scoreFlag&id = 0;
2098785    %if &id=1 or ^&fcmpStart %then %do;
2098786    proc sort data=&fcmpdata out=_temp&id nodupkey;
2098787    by NAME;
2098788    where id=&id and LHS in( %let j=1;
2098789    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
2098790    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
2098791    "&var" %let j = %eval(&j+1);
2098792    %end;
2098793    );
2098794    run;
2098795    %let dsid = %sysfunc(open(_temp&id));
2098796    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2098797    %let dsid = %sysfunc(close(&dsid));
2098798    %if &&nobs&id %then %do;
2098799    %let scoreFlag&id = 1;
2098800    %let fcmpStart = 1;
2098801    %end;
2098802    %else %let fcmpStart = 0;
2098803    %end;
2098804    %else %do;
2098805    proc sort data=&fcmpdata out=_tempid;
2098806    where id=&id;
2098807    by LHS;
2098808    run;
2098809    %let dsid = %sysfunc(open(_tempid));
2098810    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2098811    %let dsid = %sysfunc(close(&dsid));
2098812    %if ^&&nobs&id %then %do;
2098813    proc datasets lib=work nolist;
2098814    delete _tempid;
2098815    run;
2098816    quit;
2098817    %end;
2098818    %else %do;
2098819    data _tempAll;
2098820    set %let j=%eval(&id-1);
2098821    %do x=1 %to &j;
2098822    %if &&nobs&x %then %do;
2098823    _temp&x %end;
2098824    %end;
2098825    ;
2098826    run;
2098827    proc sql;
2098828    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
2098828  ! work._tempid p2 where p.name=p2.lhs;
2098829    quit;
2098830    data _temp&id;
2098831    set _temp&id;
2098832    where LHS ne '' and NAME ne '' and Node ne '';
2098833    run;
2098834    proc datasets lib=work nolist;
2098835    delete _tempAll;
2098836    run;
2098837    %let dsid = %sysfunc(open(_temp&id));
2098838    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2098839    %let dsid = %sysfunc(close(&dsid));
2098840    %if ^&&nobs&id %then %do;
2098841    proc datasets lib=work nolist;
2098842    delete _temp&id;
2098843    run;
2098844    quit;
2098845    %end;
2098846    %else %do;
2098847    %let scoreFlag&id = 1;
2098848    data _temp&id;
2098849    set _temp&id;
2098850    where LHS ne NAME and node ne '';
2098851    run;
2098852    %let dsid = %sysfunc(open(_temp&id));
2098853    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2098854    %let dsid = %sysfunc(close(&dsid));
2098855    %if ^&&nobs&id %then %do;
2098856    proc datasets lib=work nolist;
2098857    delete _temp&id;
2098858    run;
2098859    quit;
2098860    %end;
2098861    %else %do;
2098862    proc sort data=_temp&id nodupkey;
2098863    by LHS NAME;
2098864    run;
2098865    %end;
2098866    %end;
2098867    %end;
2098868    %end;
2098869    %mend varDept;
2098870    %macro optCode(outdata=fcmpdata);
2098871    %global fcmpStart;
2098872    %let fcmpStart = 0;
2098873    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
2098874    %let NumNodes=9;
2098875    %do k=1 %to &NumNodes;
2098876    %vardept(fcmpdata=&outdata, id=&k);
2098877    %end;
2098878    %mend optCode;
2098879    %optcode(outData=EMWS8.Ensmbl9_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl9_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL9_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl9_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 98 observations read from the data set EMWS8.ENSMBL9_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 73 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 25 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl9_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL9_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl9_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL9_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl9_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL9_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 25 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 25 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp5;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP5 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl9_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL9_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 25 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 25 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp6;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP6 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl9_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL9_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 25 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 25 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl9_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL9_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.12 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl9_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL9_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

2098880    filename _pref
2098880  ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural32\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural32\EMPUBLISHSCORE.sas";
2098881    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2098882    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Neural32\EMPUBLISHSCORE.sas.
2098883   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2098884   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2098885   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2098886   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2098887   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2098888   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2098889   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2098890   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2098891   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2098892   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2098893   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2098894   +LENGTH _WARN_ $4
2098895   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
2098896   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2098897   +
2098898   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2098899   +
2098900   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2098901   +
2098902   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2098903   +
2098904   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2098905   +
2098906   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2098907   +
2098908   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2098909   +
2098910   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2098911   +
2098912   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2098913   +
2098914   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2098915   +
2098916   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2098917   +
2098918   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2098919   +
2098920   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2098921   +
2098922   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2098923   +
2098924   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2098925   +
2098926   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2098927   +
2098928   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2098929   +
2098930   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2098931   +
2098932   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2098933   +
2098934   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2098935   +
2098936   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2098937   +
2098938   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2098939   +
2098940   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2098941   +
2098942   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2098943   +
2098944   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2098945   +
2098946   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2098947   +
2098948   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2098949   +
2098950   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2098951   +
2098952   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2098953   +
2098954   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
2098955   +
2098956   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
2098957   +
2098958   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
2098959   +
2098960   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2098961   +
2098962   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2098963   +
2098964   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2098965   +
2098966   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2098967   +
2098968   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2098969   +
2098970   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2098971   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2098972   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2098973   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2098974   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2098975   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2098976   +end;
MPRINT(EM_DIAGRAM):   end;
2098977   +else do;
MPRINT(EM_DIAGRAM):   else do;
2098978   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2098979   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2098980   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2098981   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2098982   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2098983   +   end;
MPRINT(EM_DIAGRAM):   end;
2098984   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2098985   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2098986   +   end;
MPRINT(EM_DIAGRAM):   end;
2098987   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2098988   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2098989   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2098990   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2098991   +   end;
MPRINT(EM_DIAGRAM):   end;
2098992   +end;
MPRINT(EM_DIAGRAM):   end;
2098993   +
2098994   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2098995   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2098996   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2098997   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2098998   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2098999   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2099000   +end;
MPRINT(EM_DIAGRAM):   end;
2099001   +else do;
MPRINT(EM_DIAGRAM):   else do;
2099002   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2099003   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2099004   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2099005   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2099006   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2099007   +   end;
MPRINT(EM_DIAGRAM):   end;
2099008   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2099009   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2099010   +   end;
MPRINT(EM_DIAGRAM):   end;
2099011   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2099012   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2099013   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2099014   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2099015   +   end;
MPRINT(EM_DIAGRAM):   end;
2099016   +end;
MPRINT(EM_DIAGRAM):   end;
2099017   +
2099018   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2099019   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2099020   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2099021   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2099022   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2099023   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2099024   +end;
MPRINT(EM_DIAGRAM):   end;
2099025   +else do;
MPRINT(EM_DIAGRAM):   else do;
2099026   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2099027   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2099028   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2099029   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2099030   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2099031   +   end;
MPRINT(EM_DIAGRAM):   end;
2099032   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2099033   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2099034   +   end;
MPRINT(EM_DIAGRAM):   end;
2099035   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2099036   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2099037   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2099038   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2099039   +   end;
MPRINT(EM_DIAGRAM):   end;
2099040   +end;
MPRINT(EM_DIAGRAM):   end;
2099041   +
2099042   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2099043   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2099044   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2099045   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2099046   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2099047   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2099048   +end;
MPRINT(EM_DIAGRAM):   end;
2099049   +else do;
MPRINT(EM_DIAGRAM):   else do;
2099050   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2099051   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2099052   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2099053   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2099054   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2099055   +   end;
MPRINT(EM_DIAGRAM):   end;
2099056   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2099057   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2099058   +   end;
MPRINT(EM_DIAGRAM):   end;
2099059   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2099060   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2099061   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2099062   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2099063   +   end;
MPRINT(EM_DIAGRAM):   end;
2099064   +end;
MPRINT(EM_DIAGRAM):   end;
2099065   +
2099066   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2099067   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2099068   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2099069   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2099070   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2099071   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2099072   +end;
MPRINT(EM_DIAGRAM):   end;
2099073   +else do;
MPRINT(EM_DIAGRAM):   else do;
2099074   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2099075   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2099076   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2099077   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2099078   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2099079   +   end;
MPRINT(EM_DIAGRAM):   end;
2099080   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2099081   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2099082   +   end;
MPRINT(EM_DIAGRAM):   end;
2099083   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2099084   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2099085   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2099086   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2099087   +   end;
MPRINT(EM_DIAGRAM):   end;
2099088   +end;
MPRINT(EM_DIAGRAM):   end;
2099089   +
2099090   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2099091   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2099092   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2099093   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2099094   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2099095   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2099096   +end;
MPRINT(EM_DIAGRAM):   end;
2099097   +else do;
MPRINT(EM_DIAGRAM):   else do;
2099098   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2099099   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2099100   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2099101   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2099102   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2099103   +   end;
MPRINT(EM_DIAGRAM):   end;
2099104   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2099105   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2099106   +   end;
MPRINT(EM_DIAGRAM):   end;
2099107   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2099108   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2099109   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2099110   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2099111   +   end;
MPRINT(EM_DIAGRAM):   end;
2099112   +end;
MPRINT(EM_DIAGRAM):   end;
2099113   +
2099114   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2099115   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
2099116   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2099117   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2099118   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2099119   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2099120   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2099121   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2099122   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2099123   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2099124   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2099125   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2099126   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2099127   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2099128   +end;
MPRINT(EM_DIAGRAM):   end;
2099129   +else do;
MPRINT(EM_DIAGRAM):   else do;
2099130   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
The SAS System

2099131   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2099132   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2099133   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2099134   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2099135   +   end;
MPRINT(EM_DIAGRAM):   end;
2099136   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2099137   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2099138   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2099139   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2099140   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2099141   +   end;
MPRINT(EM_DIAGRAM):   end;
2099142   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2099143   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2099144   +   end;
MPRINT(EM_DIAGRAM):   end;
2099145   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2099146   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2099147   +   end;
MPRINT(EM_DIAGRAM):   end;
2099148   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2099149   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2099150   +   end;
MPRINT(EM_DIAGRAM):   end;
2099151   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2099152   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2099153   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2099154   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2099155   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2099156   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2099157   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2099158   +   end;
MPRINT(EM_DIAGRAM):   end;
2099159   +end;
MPRINT(EM_DIAGRAM):   end;
2099160   +
2099161   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2099162   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2099163   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
2099164   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2099165   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2099166   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2099167   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2099168   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2099169   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2099170   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2099171   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2099172   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2099173   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2099174   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2099175   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2099176   +end;
MPRINT(EM_DIAGRAM):   end;
2099177   +else do;
MPRINT(EM_DIAGRAM):   else do;
2099178   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2099179   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2099180   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2099181   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2099182   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2099183   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2099184   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2099185   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2099186   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2099187   +         end;
MPRINT(EM_DIAGRAM):   end;
2099188   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2099189   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2099190   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2099191   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2099192   +            end;
MPRINT(EM_DIAGRAM):   end;
2099193   +         end;
MPRINT(EM_DIAGRAM):   end;
2099194   +      end;
MPRINT(EM_DIAGRAM):   end;
2099195   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2099196   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2099197   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2099198   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2099199   +         end;
MPRINT(EM_DIAGRAM):   end;
2099200   +      end;
MPRINT(EM_DIAGRAM):   end;
2099201   +   end;
MPRINT(EM_DIAGRAM):   end;
2099202   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2099203   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2099204   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2099205   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2099206   +      end;
MPRINT(EM_DIAGRAM):   end;
2099207   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2099208   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2099209   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2099210   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2099211   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2099212   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2099213   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2099214   +         end;
MPRINT(EM_DIAGRAM):   end;
2099215   +      end;
MPRINT(EM_DIAGRAM):   end;
2099216   +   end;
MPRINT(EM_DIAGRAM):   end;
2099217   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2099218   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2099219   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2099220   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2099221   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2099222   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2099223   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2099224   +   end;
MPRINT(EM_DIAGRAM):   end;
2099225   +end;
MPRINT(EM_DIAGRAM):   end;
2099226   +
2099227   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2099228   +*** Checking missing input Interval
2099229   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2099230   +
2099231   +IF NMISS(
2099232   +   Income ,
2099233   +   Kidhome ,
2099234   +   MntFishProducts ,
2099235   +   MntFruits ,
2099236   +   MntGoldProds ,
2099237   +   MntMeatProducts ,
2099238   +   MntSweetProducts ,
2099239   +   MntWines ,
2099240   +   NumCatalogPurchases ,
2099241   +   NumDealsPurchases ,
2099242   +   NumStorePurchases ,
2099243   +   NumWebPurchases ,
2099244   +   NumWebVisitsMonth ,
2099245   +   Recency ,
2099246   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Income , Kidhome , MntFishProducts , MntFruits , MntGoldProds 
, MntMeatProducts , MntSweetProducts , MntWines , NumCatalogPurchases , NumDealsPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , Recency , Teenhome ) THEN DO;
2099247   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2099248   +
2099249   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2099250   +END;
MPRINT(EM_DIAGRAM):   END;
2099251   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2099252   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
2099253   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2099254   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2099255   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2099256   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2099257   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2099258   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2099259   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2099260   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2099261   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2099262   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2099263   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2099264   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2099265   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2099266   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2099267   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2099268   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2099269   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2099270   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2099271   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2099272   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2099273   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2099274   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2099275   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2099276   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2099277   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2099278   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2099279   +END;
MPRINT(EM_DIAGRAM):   END;
2099280   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2099281   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2099282   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2099283   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2099284   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2099285   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2099286   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2099287   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2099288   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2099289   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2099290   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2099291   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2099292   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2099293   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
2099294   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2099295   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2099296   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2099297   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2099298   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2099299   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2099300   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2099301   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2099302   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2099303   +   ELSE S_NumCatalogPurchases
2099304   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2099305   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2099306   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2099307   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2099308   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2099309   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2099310   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2099311   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2099312   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2099313   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2099314   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2099315   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2099316   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2099317   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2099318   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2099319   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2099320   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2099321   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2099322   +END;
MPRINT(EM_DIAGRAM):   END;
2099323   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2099324   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
2099325   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2099326   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2099327   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
2099328   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2099329   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2099330   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
2099331   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2099332   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2099333   +   H11  =     1.40261108800308 * S_Income  +     -0.8062097507842 * S_Kidhome
2099334   +          +    -0.12974862644982 * S_MntFishProducts
2099335   +          +     0.08065642800368 * S_MntFruits  +    -0.12102130003972 *
2099336   +        S_MntGoldProds  +     0.19226249622126 * S_MntMeatProducts
2099337   +          +    -0.12290326901613 * S_MntSweetProducts
2099338   +          +     0.07790241176978 * S_MntWines  +     0.36123042724896 *
2099339   +        S_NumCatalogPurchases  +    -0.01034406765754 * S_NumDealsPurchases
2099340   +          +     0.09738032540137 * S_NumStorePurchases
2099341   +          +     0.44459515215205 * S_NumWebPurchases
2099342   +          +      0.8471075994578 * S_NumWebVisitsMonth
2099343   +          +    -1.10667985160899 * S_Recency  +    -0.88509832868515 *
2099344   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 1.40261108800308 * S_Income + -0.8062097507842 * S_Kidhome + 
-0.12974862644982 * S_MntFishProducts + 0.08065642800368 * S_MntFruits + -0.12102130003972 * 
S_MntGoldProds + 0.19226249622126 * S_MntMeatProducts + -0.12290326901613 * S_MntSweetProducts 
+ 0.07790241176978 * S_MntWines + 0.36123042724896 * S_NumCatalogPurchases + -0.01034406765754 
* S_NumDealsPurchases + 0.09738032540137 * S_NumStorePurchases + 0.44459515215205 * 
S_NumWebPurchases + 0.8471075994578 * S_NumWebVisitsMonth + -1.10667985160899 * S_Recency + 
-0.88509832868515 * S_Teenhome ;
2099345   +   H12  =     0.51266936686642 * S_Income  +     0.26909433357851 * S_Kidhome
2099346   +          +     0.02406077596811 * S_MntFishProducts
2099347   +          +    -0.57443793453522 * S_MntFruits  +     0.36824731232149 *
2099348   +        S_MntGoldProds  +     0.40177289143061 * S_MntMeatProducts
2099349   +          +     -0.1147507059349 * S_MntSweetProducts
2099350   +          +    -0.66379351187459 * S_MntWines  +     1.33407347415468 *
2099351   +        S_NumCatalogPurchases  +     1.00633891197299 * S_NumDealsPurchases
2099352   +          +    -0.23920969262322 * S_NumStorePurchases
2099353   +          +     -0.6008837862932 * S_NumWebPurchases
2099354   +          +     0.26759743722885 * S_NumWebVisitsMonth
2099355   +          +    -0.42755419464125 * S_Recency  +    -0.14471776361394 *
2099356   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = 0.51266936686642 * S_Income + 0.26909433357851 * S_Kidhome + 
0.02406077596811 * S_MntFishProducts + -0.57443793453522 * S_MntFruits + 0.36824731232149 * 
S_MntGoldProds + 0.40177289143061 * S_MntMeatProducts + -0.1147507059349 * S_MntSweetProducts 
+ -0.66379351187459 * S_MntWines + 1.33407347415468 * S_NumCatalogPurchases + 1.00633891197299 
* S_NumDealsPurchases + -0.23920969262322 * S_NumStorePurchases + -0.6008837862932 * 
S_NumWebPurchases + 0.26759743722885 * S_NumWebVisitsMonth + -0.42755419464125 * S_Recency + 
-0.14471776361394 * S_Teenhome ;
2099357   +   H13  =    -0.19807308698832 * S_Income  +     0.25934675474849 * S_Kidhome
2099358   +          +     0.04398331533724 * S_MntFishProducts
2099359   +          +    -0.00090357598988 * S_MntFruits  +     0.05139545341773 *
2099360   +        S_MntGoldProds  +    -0.74617114336019 * S_MntMeatProducts
2099361   +          +     0.00552488718744 * S_MntSweetProducts
2099362   +          +     0.47194407197012 * S_MntWines  +    -0.35149551848487 *
2099363   +        S_NumCatalogPurchases  +    -0.30232522133093 * S_NumDealsPurchases
2099364   +          +     0.60058189155105 * S_NumStorePurchases
2099365   +          +     0.51423374855856 * S_NumWebPurchases
2099366   +          +     -0.9075304423321 * S_NumWebVisitsMonth
2099367   +          +     0.83597739226791 * S_Recency  +     0.15783202762709 *
2099368   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = -0.19807308698832 * S_Income + 0.25934675474849 * S_Kidhome + 
0.04398331533724 * S_MntFishProducts + -0.00090357598988 * S_MntFruits + 0.05139545341773 * 
S_MntGoldProds + -0.74617114336019 * S_MntMeatProducts + 0.00552488718744 * S_MntSweetProducts 
+ 0.47194407197012 * S_MntWines + -0.35149551848487 * S_NumCatalogPurchases + 
-0.30232522133093 * S_NumDealsPurchases + 0.60058189155105 * S_NumStorePurchases + 
0.51423374855856 * S_NumWebPurchases + -0.9075304423321 * S_NumWebVisitsMonth + 
0.83597739226791 * S_Recency + 0.15783202762709 * S_Teenhome ;
2099369   +   H11  = H11  +    -0.26274045665457 * AcceptedCmp10
2099370   +          +    -0.86105702939371 * AcceptedCmp20  +    -0.50476270558977 *
2099371   +        AcceptedCmp30  +    -0.84284126473343 * AcceptedCmp40
2099372   +          +     0.19764907691314 * AcceptedCmp50  +    -0.29305577412263 *
2099373   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.26274045665457 * AcceptedCmp10 + -0.86105702939371 * 
AcceptedCmp20 + -0.50476270558977 * AcceptedCmp30 + -0.84284126473343 * AcceptedCmp40 + 
0.19764907691314 * AcceptedCmp50 + -0.29305577412263 * Complain0 ;
2099374   +   H12  = H12  +    -0.27394139847883 * AcceptedCmp10
2099375   +          +    -0.14688750266104 * AcceptedCmp20  +    -0.27982299242327 *
2099376   +        AcceptedCmp30  +    -0.10465140408787 * AcceptedCmp40
2099377   +          +    -0.81681330244218 * AcceptedCmp50  +    -0.28152730217644 *
2099378   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.27394139847883 * AcceptedCmp10 + -0.14688750266104 * 
AcceptedCmp20 + -0.27982299242327 * AcceptedCmp30 + -0.10465140408787 * AcceptedCmp40 + 
-0.81681330244218 * AcceptedCmp50 + -0.28152730217644 * Complain0 ;
2099379   +   H13  = H13  +     0.42310780831005 * AcceptedCmp10
2099380   +          +     0.41337614261155 * AcceptedCmp20  +     0.41436520641821 *
2099381   +        AcceptedCmp30  +     0.08914989208239 * AcceptedCmp40
2099382   +          +     0.54013759697695 * AcceptedCmp50  +    -0.19478210268955 *
2099383   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.42310780831005 * AcceptedCmp10 + 0.41337614261155 * 
AcceptedCmp20 + 0.41436520641821 * AcceptedCmp30 + 0.08914989208239 * AcceptedCmp40 + 
0.54013759697695 * AcceptedCmp50 + -0.19478210268955 * Complain0 ;
2099384   +   H11  = H11  +     0.40331200702699 * Education2n_Cycle
2099385   +          +     0.17202421641945 * EducationBasic  +    -0.29654161092174 *
2099386   +        EducationGraduation  +     -0.4835104183635 * EducationMaster
2099387   +          +     0.52129580188513 * Marital_StatusDivorced
2099388   +          +     -1.5224490339553 * Marital_StatusMarried
2099389   +          +     1.05062906057771 * Marital_StatusSingle
2099390   +          +    -1.16420887937635 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.40331200702699 * Education2n_Cycle + 0.17202421641945 * 
EducationBasic + -0.29654161092174 * EducationGraduation + -0.4835104183635 * EducationMaster 
+ 0.52129580188513 * Marital_StatusDivorced + -1.5224490339553 * Marital_StatusMarried + 
1.05062906057771 * Marital_StatusSingle + -1.16420887937635 * Marital_StatusTogether ;
2099391   +   H12  = H12  +     -0.3488928858263 * Education2n_Cycle
2099392   +          +     0.38279680594423 * EducationBasic  +     0.20376044836519 *
2099393   +        EducationGraduation  +     0.20697694670185 * EducationMaster
2099394   +          +    -0.14428158063317 * Marital_StatusDivorced
2099395   +          +     0.22396926143356 * Marital_StatusMarried
2099396   +          +    -0.12980854818876 * Marital_StatusSingle
2099397   +          +     0.32607015627906 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.3488928858263 * Education2n_Cycle + 0.38279680594423 * 
EducationBasic + 0.20376044836519 * EducationGraduation + 0.20697694670185 * EducationMaster + 
-0.14428158063317 * Marital_StatusDivorced + 0.22396926143356 * Marital_StatusMarried + 
-0.12980854818876 * Marital_StatusSingle + 0.32607015627906 * Marital_StatusTogether ;
2099398   +   H13  = H13  +    -0.18351418824199 * Education2n_Cycle
2099399   +          +     0.53417952447263 * EducationBasic  +    -0.14333929289628 *
2099400   +        EducationGraduation  +     0.04513004774082 * EducationMaster
2099401   +          +    -0.25615797303064 * Marital_StatusDivorced
2099402   +          +     0.18825506199046 * Marital_StatusMarried
2099403   +          +    -0.24607556819871 * Marital_StatusSingle
2099404   +          +     0.29531673844201 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.18351418824199 * Education2n_Cycle + 0.53417952447263 * 
EducationBasic + -0.14333929289628 * EducationGraduation + 0.04513004774082 * EducationMaster 
+ -0.25615797303064 * Marital_StatusDivorced + 0.18825506199046 * Marital_StatusMarried + 
-0.24607556819871 * Marital_StatusSingle + 0.29531673844201 * Marital_StatusTogether ;
2099405   +   H11  =    -1.29289362679377 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -1.29289362679377 + H11 ;
2099406   +   H12  =     0.88724419151235 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.88724419151235 + H12 ;
2099407   +   H13  =    -0.51194544699467 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.51194544699467 + H13 ;
2099408   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
2099409   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
2099410   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
2099411   +END;
MPRINT(EM_DIAGRAM):   END;
2099412   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2099413   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
2099414   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
2099415   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
2099416   +END;
MPRINT(EM_DIAGRAM):   END;
2099417   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2099418   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2099419   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2099420   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2099421   +   P_DepVar1  =     4.44251020865882 * H11  +     2.67139161773156 * H12
2099422   +          +    -4.73549395111184 * H13 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 4.44251020865882 * H11 + 2.67139161773156 * H12 + 
-4.73549395111184 * H13 ;
2099423   +   P_DepVar1  =     0.45492690116644 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.45492690116644 + P_DepVar1 ;
2099424   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2099425   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2099426   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2099427   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2099428   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2099429   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2099430   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2099431   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2099432   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2099433   +END;
MPRINT(EM_DIAGRAM):   END;
2099434   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2099435   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2099436   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2099437   +END;
MPRINT(EM_DIAGRAM):   END;
2099438   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2099439   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2099440   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2099441   +END;
MPRINT(EM_DIAGRAM):   END;
2099442   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2099443   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2099444   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2099445   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2099446   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2099447   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2099448   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2099449   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2099450   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2099451   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2099452   +END;
MPRINT(EM_DIAGRAM):   END;
2099453   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2099454   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2099455   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2099456   +drop
2099457   +H11
2099458   +H12
2099459   +H13
2099460   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 ;
2099461   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2099462    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2099463    quit;
2099464    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2099465    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2099466    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2099467    retain ID 2 Node "Neural32";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Neural32";
2099468    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2099469    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1602 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 1602 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2099470    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2099471    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2099472    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1602 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 1602 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2099473    proc sort data=EMWS8.Neural32_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Neural32_variableset out=_temp2(keep=NAME CREATOR);
2099474    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2099475    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.NEURAL32_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2099476    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2099477    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2099478    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2099479    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2099480    proc contents data=EMWS8.Neural32_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Neural32_train out=_meta(keep=NAME) noprint;
2099481    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

2099482    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2099483    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2099484    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 53 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2099485    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2099486    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2099487    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2099488    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 53 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2099489    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2099490    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2099490  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 832 rows and 5 columns.

2099491    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2099492    proc append base=EMWS8.Ensmbl9_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl9_FCMP data=_tempx;
2099493    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL9_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 832 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL9_FCMP has 832 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2099494    filename _pref
2099494  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
2099495    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2099496    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
2099497   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2099498   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
2099499   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2099500   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
2099501   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
2099502   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2099503    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2099504    quit;
2099505    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2099506    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2099507    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2099508    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
2099509    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2099510    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2099511    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2099512    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2099513    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2099514    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
2099515    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2099516    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2099517    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2099518    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2099519    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2099520    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2099521    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
2099522    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

2099523    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2099524    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2099525    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2099526    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2099527    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2099528    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2099529    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2099530    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2099531    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2099531  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

2099532    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2099533    proc append base=EMWS8.Ensmbl9_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl9_FCMP data=_tempx;
2099534    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL9_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL9_FCMP has 836 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2099535    filename _pref
2099535  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
2099536    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2099537    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
2099538   +
2099539   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
2099540   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
2099540  !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
2099541   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
2099542   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
2099543   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
2099544   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
2099545   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2099546    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2099547    quit;
2099548    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2099549    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2099550    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2099551    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
2099552    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2099553    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2099554    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2099555    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2099556    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2099557    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
2099558    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2099559    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2099560    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2099561    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2099562    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2099563    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2099564    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
2099565    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2099566    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2099567    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2099568    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2099569    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2099570    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2099571    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2099572    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2099573    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2099574    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2099574  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

2099575    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2099576    proc append base=EMWS8.Ensmbl9_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl9_FCMP data=_tempx;
2099577    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL9_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL9_FCMP has 875 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2099578    filename _pref
2099578  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
2099579    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2099580    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
2099581   +
2099582   +
2099583   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
2099584   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
2099585   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
2099586   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
2099587   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
2099588   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2099589   +
2099590   +
2099591   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
2099592   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
2099593   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
2099594   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
2099595   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
2099596   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2099597   +
2099598   +
2099599   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
2099600   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
2099601   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
2099602   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
2099603   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
2099604   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2099605   +
2099606   +
2099607   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
2099608   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
2099609   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
2099610   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
2099611   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
2099612   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2099613   +
2099614   +
2099615   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
2099616   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
2099617   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
2099618   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
2099619   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
2099620   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2099621   +
2099622   +
2099623   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
2099624   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
2099625   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
2099626   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
2099627   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
2099628   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2099629   +
2099630   +
2099631   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
2099632   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
2099633   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
2099634   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
2099635   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
2099636   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2099637   +
2099638   +
2099639   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
2099640   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
2099641   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
2099642   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
2099643   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
2099644   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2099645   +if
2099646   +_FILTERNORM1 not in ( '.')
2099647   + and
2099648   +_FILTERNORM2 not in ( '.')
2099649   + and
2099650   +_FILTERNORM3 not in ( '.')
2099651   + and
2099652   +_FILTERNORM4 not in ( '.')
2099653   + and
2099654   +_FILTERNORM5 not in ( '.')
2099655   + and
2099656   +_FILTERNORM6 not in ( '.')
2099657   + and
2099658   +_FILTERNORM7 not in ( ' ')
2099659   + and
2099660   +_FILTERNORM8 not in ( ' ')
2099661   +and
2099662   +( Dt_Customer ne .)
2099663   +and ( Income ne . and (Income<=107000))
2099664   +and ( Kidhome ne .)
2099665   +and ( MntFishProducts ne .)
2099666   +and ( MntFruits ne .)
2099667   +and ( MntGoldProds ne .)
2099668   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
2099669   +and ( MntSweetProducts ne .)
2099670   +and ( MntWines ne .)
2099671   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
2099672   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
2099673   +and ( NumStorePurchases ne .)
2099674   +and ( NumWebPurchases ne .)
2099675   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
2099676   +and ( Recency ne .)
2099677   +and ( Teenhome ne .)
2099678   +and ( Year_Birth ne .)
2099679   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
2099680   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
2099681   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
2099682   +end;
MPRINT(EM_DIAGRAM):   end;
2099683   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
2099684   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2099685    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2099686    quit;
2099687    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2099688    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2099689    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2099690    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
2099691    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2099692    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2099693    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2099694    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2099695    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2099696    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
2099697    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2099698    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2099699    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2099700    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2099701    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2099702    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2099703    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
2099704    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

2099705    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2099706    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2099707    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2099708    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2099709    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2099710    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2099711    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2099712    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2099713    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2099713  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

2099714    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2099715    proc append base=EMWS8.Ensmbl9_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl9_FCMP data=_tempx;
2099716    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL9_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL9_FCMP has 941 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2099717    %macro varDept(fcmpdata=,id=);
2099718    %global nobs&id scoreFlag&id;
2099719    %let scoreFlag&id = 0;
2099720    %if &id=1 or ^&fcmpStart %then %do;
2099721    proc sort data=&fcmpdata out=_temp&id nodupkey;
2099722    by NAME;
2099723    where id=&id and LHS in( %let j=1;
2099724    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
2099725    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
2099726    "&var" %let j = %eval(&j+1);
2099727    %end;
2099728    );
2099729    run;
2099730    %let dsid = %sysfunc(open(_temp&id));
2099731    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2099732    %let dsid = %sysfunc(close(&dsid));
2099733    %if &&nobs&id %then %do;
2099734    %let scoreFlag&id = 1;
2099735    %let fcmpStart = 1;
2099736    %end;
2099737    %else %let fcmpStart = 0;
2099738    %end;
2099739    %else %do;
2099740    proc sort data=&fcmpdata out=_tempid;
2099741    where id=&id;
2099742    by LHS;
2099743    run;
2099744    %let dsid = %sysfunc(open(_tempid));
2099745    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2099746    %let dsid = %sysfunc(close(&dsid));
2099747    %if ^&&nobs&id %then %do;
2099748    proc datasets lib=work nolist;
2099749    delete _tempid;
2099750    run;
2099751    quit;
2099752    %end;
2099753    %else %do;
2099754    data _tempAll;
2099755    set %let j=%eval(&id-1);
2099756    %do x=1 %to &j;
2099757    %if &&nobs&x %then %do;
2099758    _temp&x %end;
2099759    %end;
2099760    ;
2099761    run;
2099762    proc sql;
2099763    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
2099763  ! work._tempid p2 where p.name=p2.lhs;
2099764    quit;
2099765    data _temp&id;
2099766    set _temp&id;
2099767    where LHS ne '' and NAME ne '' and Node ne '';
2099768    run;
2099769    proc datasets lib=work nolist;
2099770    delete _tempAll;
2099771    run;
2099772    %let dsid = %sysfunc(open(_temp&id));
2099773    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2099774    %let dsid = %sysfunc(close(&dsid));
2099775    %if ^&&nobs&id %then %do;
2099776    proc datasets lib=work nolist;
2099777    delete _temp&id;
2099778    run;
2099779    quit;
2099780    %end;
2099781    %else %do;
2099782    %let scoreFlag&id = 1;
2099783    data _temp&id;
2099784    set _temp&id;
2099785    where LHS ne NAME and node ne '';
2099786    run;
2099787    %let dsid = %sysfunc(open(_temp&id));
2099788    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2099789    %let dsid = %sysfunc(close(&dsid));
2099790    %if ^&&nobs&id %then %do;
2099791    proc datasets lib=work nolist;
2099792    delete _temp&id;
2099793    run;
2099794    quit;
2099795    %end;
2099796    %else %do;
2099797    proc sort data=_temp&id nodupkey;
2099798    by LHS NAME;
2099799    run;
2099800    %end;
2099801    %end;
2099802    %end;
2099803    %end;
2099804    %mend varDept;
2099805    %macro optCode(outdata=fcmpdata);
2099806    %global fcmpStart;
2099807    %let fcmpStart = 0;
2099808    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
2099809    %let NumNodes=9;
2099810    %do k=1 %to &NumNodes;
2099811    %vardept(fcmpdata=&outdata, id=&k);
2099812    %end;
2099813    %mend optCode;
2099814    %optcode(outData=EMWS8.Ensmbl9_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl9_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL9_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl9_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 98 observations read from the data set EMWS8.ENSMBL9_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 73 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 25 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl9_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL9_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl9_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL9_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl9_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL9_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 25 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 25 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp5;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP5 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl9_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL9_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 25 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 25 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp6;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP6 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl9_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL9_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 25 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 25 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl9_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL9_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl9_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL9_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

2099815    filename _pref
2099815  ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural31\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural31\EMPUBLISHSCORE.sas";
2099816    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2099817    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Neural31\EMPUBLISHSCORE.sas.
2099818   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2099819   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2099820   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2099821   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2099822   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2099823   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2099824   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2099825   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2099826   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2099827   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2099828   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2099829   +LENGTH _WARN_ $4
2099830   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
2099831   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2099832   +
2099833   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2099834   +
2099835   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2099836   +
2099837   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2099838   +
2099839   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2099840   +
2099841   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2099842   +
2099843   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2099844   +
2099845   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2099846   +
2099847   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2099848   +
2099849   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2099850   +
2099851   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2099852   +
2099853   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2099854   +
2099855   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2099856   +
2099857   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2099858   +
2099859   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2099860   +
2099861   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2099862   +
2099863   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2099864   +
2099865   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2099866   +
2099867   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2099868   +
2099869   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2099870   +
2099871   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2099872   +
2099873   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2099874   +
2099875   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2099876   +
2099877   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2099878   +
2099879   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2099880   +
2099881   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2099882   +
2099883   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2099884   +
2099885   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2099886   +
2099887   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2099888   +
2099889   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
2099890   +
2099891   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
2099892   +
2099893   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2099894   +
2099895   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2099896   +
2099897   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2099898   +
2099899   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2099900   +
2099901   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2099902   +
2099903   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2099904   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2099905   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2099906   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2099907   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2099908   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2099909   +end;
MPRINT(EM_DIAGRAM):   end;
2099910   +else do;
MPRINT(EM_DIAGRAM):   else do;
2099911   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2099912   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2099913   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2099914   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2099915   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2099916   +   end;
MPRINT(EM_DIAGRAM):   end;
2099917   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2099918   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2099919   +   end;
MPRINT(EM_DIAGRAM):   end;
2099920   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2099921   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2099922   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2099923   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2099924   +   end;
MPRINT(EM_DIAGRAM):   end;
2099925   +end;
MPRINT(EM_DIAGRAM):   end;
2099926   +
2099927   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2099928   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2099929   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2099930   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2099931   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2099932   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2099933   +end;
MPRINT(EM_DIAGRAM):   end;
2099934   +else do;
MPRINT(EM_DIAGRAM):   else do;
2099935   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2099936   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2099937   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2099938   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2099939   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2099940   +   end;
MPRINT(EM_DIAGRAM):   end;
2099941   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2099942   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2099943   +   end;
MPRINT(EM_DIAGRAM):   end;
2099944   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2099945   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2099946   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2099947   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2099948   +   end;
MPRINT(EM_DIAGRAM):   end;
2099949   +end;
MPRINT(EM_DIAGRAM):   end;
2099950   +
2099951   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2099952   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2099953   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2099954   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2099955   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2099956   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2099957   +end;
MPRINT(EM_DIAGRAM):   end;
2099958   +else do;
MPRINT(EM_DIAGRAM):   else do;
2099959   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2099960   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2099961   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2099962   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2099963   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2099964   +   end;
MPRINT(EM_DIAGRAM):   end;
2099965   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2099966   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2099967   +   end;
MPRINT(EM_DIAGRAM):   end;
2099968   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2099969   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2099970   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2099971   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2099972   +   end;
MPRINT(EM_DIAGRAM):   end;
2099973   +end;
MPRINT(EM_DIAGRAM):   end;
2099974   +
2099975   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2099976   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2099977   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2099978   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2099979   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2099980   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2099981   +end;
MPRINT(EM_DIAGRAM):   end;
2099982   +else do;
MPRINT(EM_DIAGRAM):   else do;
2099983   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2099984   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2099985   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2099986   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2099987   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2099988   +   end;
MPRINT(EM_DIAGRAM):   end;
2099989   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2099990   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2099991   +   end;
MPRINT(EM_DIAGRAM):   end;
2099992   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2099993   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2099994   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2099995   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2099996   +   end;
MPRINT(EM_DIAGRAM):   end;
2099997   +end;
MPRINT(EM_DIAGRAM):   end;
2099998   +
2099999   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2100000   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2100001   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2100002   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2100003   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2100004   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2100005   +end;
MPRINT(EM_DIAGRAM):   end;
2100006   +else do;
MPRINT(EM_DIAGRAM):   else do;
2100007   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2100008   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2100009   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2100010   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2100011   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2100012   +   end;
MPRINT(EM_DIAGRAM):   end;
2100013   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2100014   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2100015   +   end;
MPRINT(EM_DIAGRAM):   end;
2100016   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2100017   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2100018   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2100019   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2100020   +   end;
MPRINT(EM_DIAGRAM):   end;
2100021   +end;
MPRINT(EM_DIAGRAM):   end;
2100022   +
2100023   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2100024   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2100025   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2100026   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2100027   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2100028   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2100029   +end;
MPRINT(EM_DIAGRAM):   end;
2100030   +else do;
MPRINT(EM_DIAGRAM):   else do;
2100031   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2100032   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2100033   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2100034   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2100035   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2100036   +   end;
MPRINT(EM_DIAGRAM):   end;
2100037   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2100038   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2100039   +   end;
MPRINT(EM_DIAGRAM):   end;
2100040   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2100041   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2100042   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2100043   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2100044   +   end;
MPRINT(EM_DIAGRAM):   end;
2100045   +end;
MPRINT(EM_DIAGRAM):   end;
2100046   +
2100047   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2100048   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
2100049   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2100050   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2100051   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2100052   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2100053   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2100054   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2100055   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2100056   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2100057   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2100058   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2100059   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2100060   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2100061   +end;
MPRINT(EM_DIAGRAM):   end;
2100062   +else do;
MPRINT(EM_DIAGRAM):   else do;
2100063   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2100064   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2100065   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2100066   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2100067   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2100068   +   end;
MPRINT(EM_DIAGRAM):   end;
2100069   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2100070   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2100071   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2100072   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2100073   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2100074   +   end;
MPRINT(EM_DIAGRAM):   end;
2100075   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2100076   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2100077   +   end;
MPRINT(EM_DIAGRAM):   end;
2100078   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2100079   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2100080   +   end;
MPRINT(EM_DIAGRAM):   end;
2100081   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2100082   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2100083   +   end;
MPRINT(EM_DIAGRAM):   end;
2100084   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2100085   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2100086   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2100087   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2100088   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2100089   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2100090   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2100091   +   end;
MPRINT(EM_DIAGRAM):   end;
2100092   +end;
MPRINT(EM_DIAGRAM):   end;
2100093   +
2100094   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2100095   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2100096   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
2100097   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2100098   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2100099   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2100100   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2100101   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2100102   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2100103   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2100104   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2100105   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2100106   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2100107   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2100108   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2100109   +end;
MPRINT(EM_DIAGRAM):   end;
2100110   +else do;
MPRINT(EM_DIAGRAM):   else do;
2100111   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2100112   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2100113   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2100114   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2100115   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2100116   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2100117   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2100118   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2100119   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2100120   +         end;
MPRINT(EM_DIAGRAM):   end;
2100121   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2100122   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2100123   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2100124   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2100125   +            end;
MPRINT(EM_DIAGRAM):   end;
2100126   +         end;
MPRINT(EM_DIAGRAM):   end;
2100127   +      end;
MPRINT(EM_DIAGRAM):   end;
2100128   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2100129   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2100130   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2100131   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2100132   +         end;
MPRINT(EM_DIAGRAM):   end;
2100133   +      end;
MPRINT(EM_DIAGRAM):   end;
2100134   +   end;
MPRINT(EM_DIAGRAM):   end;
2100135   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2100136   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2100137   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2100138   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2100139   +      end;
MPRINT(EM_DIAGRAM):   end;
2100140   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2100141   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2100142   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2100143   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2100144   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2100145   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2100146   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2100147   +         end;
MPRINT(EM_DIAGRAM):   end;
2100148   +      end;
MPRINT(EM_DIAGRAM):   end;
2100149   +   end;
MPRINT(EM_DIAGRAM):   end;
2100150   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2100151   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2100152   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2100153   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2100154   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2100155   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2100156   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2100157   +   end;
MPRINT(EM_DIAGRAM):   end;
2100158   +end;
MPRINT(EM_DIAGRAM):   end;
2100159   +
2100160   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2100161   +*** Checking missing input Interval
2100162   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2100163   +
2100164   +IF NMISS(
2100165   +   Income ,
2100166   +   Kidhome ,
2100167   +   MntFishProducts ,
2100168   +   MntFruits ,
2100169   +   MntGoldProds ,
2100170   +   MntMeatProducts ,
2100171   +   MntSweetProducts ,
2100172   +   MntWines ,
2100173   +   NumCatalogPurchases ,
2100174   +   NumDealsPurchases ,
2100175   +   NumStorePurchases ,
2100176   +   NumWebPurchases ,
2100177   +   NumWebVisitsMonth ,
2100178   +   Recency ,
2100179   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Income , Kidhome , MntFishProducts , MntFruits , MntGoldProds 
, MntMeatProducts , MntSweetProducts , MntWines , NumCatalogPurchases , NumDealsPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , Recency , Teenhome ) THEN DO;
2100180   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2100181   +
2100182   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2100183   +END;
MPRINT(EM_DIAGRAM):   END;
2100184   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2100185   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
2100186   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2100187   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2100188   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2100189   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2100190   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2100191   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2100192   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2100193   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2100194   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2100195   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2100196   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2100197   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2100198   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2100199   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2100200   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2100201   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2100202   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2100203   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2100204   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2100205   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2100206   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2100207   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2100208   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2100209   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2100210   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2100211   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2100212   +END;
MPRINT(EM_DIAGRAM):   END;
2100213   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2100214   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2100215   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2100216   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2100217   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2100218   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2100219   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2100220   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2100221   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2100222   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2100223   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2100224   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2100225   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2100226   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
2100227   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2100228   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2100229   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2100230   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2100231   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2100232   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2100233   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2100234   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2100235   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2100236   +   ELSE S_NumCatalogPurchases
2100237   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2100238   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2100239   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2100240   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2100241   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2100242   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2100243   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2100244   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2100245   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2100246   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2100247   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2100248   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2100249   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2100250   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2100251   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2100252   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2100253   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2100254   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2100255   +END;
MPRINT(EM_DIAGRAM):   END;
2100256   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2100257   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
2100258   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2100259   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2100260   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
2100261   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2100262   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2100263   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
2100264   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2100265   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2100266   +   H11  =    -1.33502235588914 * S_Income  +     0.86914778071024 * S_Kidhome
2100267   +          +     0.06177226616611 * S_MntFishProducts
2100268   +          +     0.22465531888584 * S_MntFruits  +    -0.01216018017424 *
2100269   +        S_MntGoldProds  +    -0.10435601171346 * S_MntMeatProducts
2100270   +          +     0.19245635559754 * S_MntSweetProducts
2100271   +          +    -0.06473329764962 * S_MntWines  +    -0.40260570275107 *
2100272   +        S_NumCatalogPurchases  +    -0.01043435397255 * S_NumDealsPurchases
2100273   +          +    -0.35392759932805 * S_NumStorePurchases
2100274   +          +     -0.2443007642616 * S_NumWebPurchases
2100275   +          +    -0.72667572173837 * S_NumWebVisitsMonth
2100276   +          +     0.97336679863544 * S_Recency  +     0.72544205905496 *
2100277   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = -1.33502235588914 * S_Income + 0.86914778071024 * S_Kidhome + 
0.06177226616611 * S_MntFishProducts + 0.22465531888584 * S_MntFruits + -0.01216018017424 * 
S_MntGoldProds + -0.10435601171346 * S_MntMeatProducts + 0.19245635559754 * S_MntSweetProducts 
+ -0.06473329764962 * S_MntWines + -0.40260570275107 * S_NumCatalogPurchases + 
-0.01043435397255 * S_NumDealsPurchases + -0.35392759932805 * S_NumStorePurchases + 
-0.2443007642616 * S_NumWebPurchases + -0.72667572173837 * S_NumWebVisitsMonth + 
0.97336679863544 * S_Recency + 0.72544205905496 * S_Teenhome ;
2100278   +   H12  =    -0.09105644521483 * S_Income  +     0.01920168996111 * S_Kidhome
2100279   +          +     0.00012212205827 * S_MntFishProducts
2100280   +          +     0.00032664246198 * S_MntFruits  +    -0.02161363659377 *
2100281   +        S_MntGoldProds  +    -0.40917729724893 * S_MntMeatProducts
2100282   +          +     0.01459978689352 * S_MntSweetProducts
2100283   +          +     0.28732983017398 * S_MntWines  +    -0.26033282919423 *
2100284   +        S_NumCatalogPurchases  +      -0.306688498482 * S_NumDealsPurchases
2100285   +          +      0.4054643699817 * S_NumStorePurchases
2100286   +          +     0.27747327375374 * S_NumWebPurchases
2100287   +          +    -0.31325270852641 * S_NumWebVisitsMonth
2100288   +          +      0.3707065492652 * S_Recency  +     0.05681262835219 *
2100289   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -0.09105644521483 * S_Income + 0.01920168996111 * S_Kidhome + 
0.00012212205827 * S_MntFishProducts + 0.00032664246198 * S_MntFruits + -0.02161363659377 * 
S_MntGoldProds + -0.40917729724893 * S_MntMeatProducts + 0.01459978689352 * S_MntSweetProducts 
+ 0.28732983017398 * S_MntWines + -0.26033282919423 * S_NumCatalogPurchases + -0.306688498482 
* S_NumDealsPurchases + 0.4054643699817 * S_NumStorePurchases + 0.27747327375374 * 
S_NumWebPurchases + -0.31325270852641 * S_NumWebVisitsMonth + 0.3707065492652 * S_Recency + 
0.05681262835219 * S_Teenhome ;
2100290   +   H11  = H11  +     0.23904403737743 * AcceptedCmp10
2100291   +          +     0.12365860406863 * AcceptedCmp20  +     0.28547657706908 *
2100292   +        AcceptedCmp30  +     0.37587337003909 * AcceptedCmp40
2100293   +          +    -0.04113029526683 * AcceptedCmp50  +      0.2596440604013 *
2100294   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.23904403737743 * AcceptedCmp10 + 0.12365860406863 * 
AcceptedCmp20 + 0.28547657706908 * AcceptedCmp30 + 0.37587337003909 * AcceptedCmp40 + 
-0.04113029526683 * AcceptedCmp50 + 0.2596440604013 * Complain0 ;
2100295   +   H12  = H12  +     0.25336773034662 * AcceptedCmp10
2100296   +          +     0.39499004620022 * AcceptedCmp20  +     0.19852127214148 *
2100297   +        AcceptedCmp30  +     0.19215250383325 * AcceptedCmp40
2100298   +          +     0.27213364707939 * AcceptedCmp50  +    -0.00774901485124 *
2100299   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.25336773034662 * AcceptedCmp10 + 0.39499004620022 * 
AcceptedCmp20 + 0.19852127214148 * AcceptedCmp30 + 0.19215250383325 * AcceptedCmp40 + 
0.27213364707939 * AcceptedCmp50 + -0.00774901485124 * Complain0 ;
2100300   +   H11  = H11  +    -0.05263155952227 * Education2n_Cycle
2100301   +          +    -1.40124591386453 * EducationBasic  +     0.43501491332678 *
2100302   +        EducationGraduation  +     0.77305262508081 * EducationMaster
2100303   +          +    -0.43667846017683 * Marital_StatusDivorced
2100304   +          +     1.33507828005472 * Marital_StatusMarried
2100305   +          +    -0.75026283842664 * Marital_StatusSingle
2100306   +          +     0.84436594207558 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.05263155952227 * Education2n_Cycle + -1.40124591386453 * 
EducationBasic + 0.43501491332678 * EducationGraduation + 0.77305262508081 * EducationMaster + 
-0.43667846017683 * Marital_StatusDivorced + 1.33507828005472 * Marital_StatusMarried + 
-0.75026283842664 * Marital_StatusSingle + 0.84436594207558 * Marital_StatusTogether ;
2100307   +   H12  = H12  +     0.08398432584098 * Education2n_Cycle
2100308   +          +     0.12375156883157 * EducationBasic  +     -0.0901891766073 *
2100309   +        EducationGraduation  +    -0.07691770257441 * EducationMaster
2100310   +          +    -0.03531690128173 * Marital_StatusDivorced
2100311   +          +    -0.04344171367809 * Marital_StatusMarried
2100312   +          +    -0.05137362653166 * Marital_StatusSingle
2100313   +          +    -0.01265518570667 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.08398432584098 * Education2n_Cycle + 0.12375156883157 * 
EducationBasic + -0.0901891766073 * EducationGraduation + -0.07691770257441 * EducationMaster 
+ -0.03531690128173 * Marital_StatusDivorced + -0.04344171367809 * Marital_StatusMarried + 
-0.05137362653166 * Marital_StatusSingle + -0.01265518570667 * Marital_StatusTogether ;
2100314   +   H11  =     1.86846527977677 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 1.86846527977677 + H11 ;
2100315   +   H12  =    -0.42494263287735 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -0.42494263287735 + H12 ;
2100316   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
2100317   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
2100318   +END;
MPRINT(EM_DIAGRAM):   END;
2100319   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2100320   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
2100321   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
2100322   +END;
MPRINT(EM_DIAGRAM):   END;
2100323   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2100324   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2100325   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2100326   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2100327   +   P_DepVar1  =    -5.43090515434696 * H11  +    -9.08673127131886 * H12 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -5.43090515434696 * H11 + -9.08673127131886 * H12 ;
2100328   +   P_DepVar1  =      2.7752946076831 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 2.7752946076831 + P_DepVar1 ;
2100329   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2100330   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2100331   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2100332   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2100333   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2100334   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2100335   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2100336   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2100337   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2100338   +END;
MPRINT(EM_DIAGRAM):   END;
2100339   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2100340   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2100341   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2100342   +END;
MPRINT(EM_DIAGRAM):   END;
2100343   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2100344   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2100345   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2100346   +END;
MPRINT(EM_DIAGRAM):   END;
2100347   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2100348   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2100349   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2100350   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2100351   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2100352   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2100353   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2100354   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2100355   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2100356   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2100357   +END;
MPRINT(EM_DIAGRAM):   END;
2100358   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2100359   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2100360   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2100361   +drop
2100362   +H11
2100363   +H12
2100364   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 ;
2100365   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2100366    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2100367    quit;
2100368    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2100369    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2100370    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2100371    retain ID 2 Node "Neural31";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Neural31";
2100372    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2100373    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1464 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 1464 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2100374    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2100375    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2100376    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1464 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 1464 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2100377    proc sort data=EMWS8.Neural31_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Neural31_variableset out=_temp2(keep=NAME CREATOR);
2100378    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2100379    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.NEURAL31_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2100380    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2100381    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2100382    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2100383    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2100384    proc contents data=EMWS8.Neural31_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Neural31_train out=_meta(keep=NAME) noprint;
2100385    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

2100386    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2100387    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2100388    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 53 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2100389    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2100390    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2100391    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2100392    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 53 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2100393    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2100394    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2100394  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 786 rows and 5 columns.

2100395    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2100396    proc append base=EMWS8.Ensmbl9_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl9_FCMP data=_tempx;
2100397    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL9_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 786 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL9_FCMP has 786 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2100398    filename _pref
2100398  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
2100399    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2100400    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
2100401   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2100402   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
2100403   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2100404   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
2100405   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
2100406   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2100407    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2100408    quit;
2100409    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2100410    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2100411    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2100412    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
2100413    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2100414    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2100415    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2100416    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2100417    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2100418    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
2100419    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2100420    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2100421    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2100422    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2100423    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2100424    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2100425    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
2100426    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

2100427    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2100428    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2100429    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2100430    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2100431    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2100432    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2100433    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2100434    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2100435    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2100435  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

2100436    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2100437    proc append base=EMWS8.Ensmbl9_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl9_FCMP data=_tempx;
2100438    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL9_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL9_FCMP has 790 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2100439    filename _pref
2100439  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
2100440    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2100441    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
2100442   +
2100443   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
2100444   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
2100444  !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
2100445   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
2100446   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
2100447   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
2100448   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
2100449   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2100450    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2100451    quit;
2100452    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2100453    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2100454    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2100455    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
2100456    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2100457    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2100458    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2100459    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2100460    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2100461    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
2100462    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2100463    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2100464    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2100465    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2100466    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2100467    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2100468    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
2100469    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2100470    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2100471    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2100472    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2100473    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2100474    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2100475    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2100476    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2100477    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2100478    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2100478  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

2100479    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2100480    proc append base=EMWS8.Ensmbl9_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl9_FCMP data=_tempx;
2100481    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL9_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL9_FCMP has 829 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2100482    filename _pref
2100482  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
2100483    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2100484    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
2100485   +
2100486   +
2100487   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
2100488   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
2100489   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
2100490   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
2100491   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
2100492   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2100493   +
2100494   +
2100495   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
2100496   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
2100497   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
2100498   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
2100499   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
2100500   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2100501   +
2100502   +
2100503   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
2100504   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
2100505   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
2100506   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
2100507   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
2100508   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2100509   +
2100510   +
2100511   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
2100512   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
2100513   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
2100514   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
2100515   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
2100516   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2100517   +
2100518   +
2100519   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
2100520   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
2100521   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
2100522   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
2100523   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
2100524   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2100525   +
2100526   +
2100527   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
2100528   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
2100529   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
2100530   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
2100531   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
2100532   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2100533   +
2100534   +
2100535   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
2100536   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
2100537   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
2100538   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
2100539   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
2100540   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2100541   +
2100542   +
2100543   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
2100544   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
2100545   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
2100546   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
2100547   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
2100548   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2100549   +if
2100550   +_FILTERNORM1 not in ( '.')
2100551   + and
2100552   +_FILTERNORM2 not in ( '.')
2100553   + and
2100554   +_FILTERNORM3 not in ( '.')
2100555   + and
2100556   +_FILTERNORM4 not in ( '.')
2100557   + and
2100558   +_FILTERNORM5 not in ( '.')
2100559   + and
2100560   +_FILTERNORM6 not in ( '.')
2100561   + and
2100562   +_FILTERNORM7 not in ( ' ')
2100563   + and
2100564   +_FILTERNORM8 not in ( ' ')
2100565   +and
2100566   +( Dt_Customer ne .)
2100567   +and ( Income ne . and (Income<=107000))
2100568   +and ( Kidhome ne .)
2100569   +and ( MntFishProducts ne .)
2100570   +and ( MntFruits ne .)
2100571   +and ( MntGoldProds ne .)
2100572   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
2100573   +and ( MntSweetProducts ne .)
2100574   +and ( MntWines ne .)
2100575   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
2100576   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
2100577   +and ( NumStorePurchases ne .)
2100578   +and ( NumWebPurchases ne .)
2100579   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
2100580   +and ( Recency ne .)
2100581   +and ( Teenhome ne .)
2100582   +and ( Year_Birth ne .)
2100583   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
2100584   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
2100585   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
2100586   +end;
MPRINT(EM_DIAGRAM):   end;
2100587   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
2100588   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2100589    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2100590    quit;
2100591    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2100592    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2100593    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2100594    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
2100595    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2100596    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2100597    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2100598    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2100599    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2100600    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
2100601    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2100602    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2100603    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2100604    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2100605    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2100606    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2100607    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
2100608    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

2100609    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2100610    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2100611    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2100612    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2100613    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2100614    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2100615    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2100616    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2100617    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2100617  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

2100618    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2100619    proc append base=EMWS8.Ensmbl9_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl9_FCMP data=_tempx;
2100620    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL9_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL9_FCMP has 895 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2100621    %macro varDept(fcmpdata=,id=);
2100622    %global nobs&id scoreFlag&id;
2100623    %let scoreFlag&id = 0;
2100624    %if &id=1 or ^&fcmpStart %then %do;
2100625    proc sort data=&fcmpdata out=_temp&id nodupkey;
2100626    by NAME;
2100627    where id=&id and LHS in( %let j=1;
2100628    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
2100629    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
2100630    "&var" %let j = %eval(&j+1);
2100631    %end;
2100632    );
2100633    run;
2100634    %let dsid = %sysfunc(open(_temp&id));
2100635    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2100636    %let dsid = %sysfunc(close(&dsid));
2100637    %if &&nobs&id %then %do;
2100638    %let scoreFlag&id = 1;
2100639    %let fcmpStart = 1;
2100640    %end;
2100641    %else %let fcmpStart = 0;
2100642    %end;
2100643    %else %do;
2100644    proc sort data=&fcmpdata out=_tempid;
2100645    where id=&id;
2100646    by LHS;
2100647    run;
2100648    %let dsid = %sysfunc(open(_tempid));
2100649    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2100650    %let dsid = %sysfunc(close(&dsid));
2100651    %if ^&&nobs&id %then %do;
2100652    proc datasets lib=work nolist;
2100653    delete _tempid;
2100654    run;
2100655    quit;
2100656    %end;
2100657    %else %do;
2100658    data _tempAll;
2100659    set %let j=%eval(&id-1);
2100660    %do x=1 %to &j;
2100661    %if &&nobs&x %then %do;
2100662    _temp&x %end;
2100663    %end;
2100664    ;
2100665    run;
2100666    proc sql;
2100667    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
2100667  ! work._tempid p2 where p.name=p2.lhs;
2100668    quit;
2100669    data _temp&id;
2100670    set _temp&id;
2100671    where LHS ne '' and NAME ne '' and Node ne '';
2100672    run;
2100673    proc datasets lib=work nolist;
2100674    delete _tempAll;
2100675    run;
2100676    %let dsid = %sysfunc(open(_temp&id));
2100677    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2100678    %let dsid = %sysfunc(close(&dsid));
2100679    %if ^&&nobs&id %then %do;
2100680    proc datasets lib=work nolist;
2100681    delete _temp&id;
2100682    run;
2100683    quit;
2100684    %end;
2100685    %else %do;
2100686    %let scoreFlag&id = 1;
2100687    data _temp&id;
2100688    set _temp&id;
2100689    where LHS ne NAME and node ne '';
2100690    run;
2100691    %let dsid = %sysfunc(open(_temp&id));
2100692    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2100693    %let dsid = %sysfunc(close(&dsid));
2100694    %if ^&&nobs&id %then %do;
2100695    proc datasets lib=work nolist;
2100696    delete _temp&id;
2100697    run;
2100698    quit;
2100699    %end;
2100700    %else %do;
2100701    proc sort data=_temp&id nodupkey;
2100702    by LHS NAME;
2100703    run;
2100704    %end;
2100705    %end;
2100706    %end;
2100707    %end;
2100708    %mend varDept;
2100709    %macro optCode(outdata=fcmpdata);
2100710    %global fcmpStart;
2100711    %let fcmpStart = 0;
2100712    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
2100713    %let NumNodes=9;
2100714    %do k=1 %to &NumNodes;
2100715    %vardept(fcmpdata=&outdata, id=&k);
2100716    %end;
2100717    %mend optCode;
2100718    %optcode(outData=EMWS8.Ensmbl9_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl9_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL9_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl9_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 98 observations read from the data set EMWS8.ENSMBL9_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 73 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 25 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl9_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL9_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl9_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL9_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl9_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL9_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 25 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 25 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp5;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP5 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl9_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL9_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 25 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 25 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp6;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP6 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl9_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL9_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 25 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 25 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl9_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL9_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl9_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL9_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

2100719    filename _pref
2100719  ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural6\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural6\EMPUBLISHSCORE.sas";
2100720    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2100721    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Neural6\EMPUBLISHSCORE.sas.
2100722   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2100723   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2100724   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2100725   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2100726   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2100727   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2100728   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2100729   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2100730   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2100731   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2100732   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2100733   +LENGTH _WARN_ $4
2100734   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
2100735   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2100736   +
2100737   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2100738   +
2100739   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2100740   +
2100741   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2100742   +
2100743   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2100744   +
2100745   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2100746   +
2100747   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2100748   +
2100749   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2100750   +
2100751   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2100752   +
2100753   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2100754   +
2100755   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2100756   +
2100757   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2100758   +
2100759   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2100760   +
2100761   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2100762   +
2100763   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2100764   +
2100765   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2100766   +
2100767   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2100768   +
2100769   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2100770   +
2100771   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2100772   +
2100773   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2100774   +
2100775   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2100776   +
2100777   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2100778   +
2100779   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2100780   +
2100781   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2100782   +
2100783   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2100784   +
2100785   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2100786   +
2100787   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2100788   +
2100789   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2100790   +
2100791   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2100792   +
2100793   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
2100794   +
2100795   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2100796   +
2100797   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2100798   +
2100799   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2100800   +
2100801   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2100802   +
2100803   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2100804   +
2100805   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2100806   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2100807   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2100808   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2100809   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2100810   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2100811   +end;
MPRINT(EM_DIAGRAM):   end;
2100812   +else do;
MPRINT(EM_DIAGRAM):   else do;
2100813   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2100814   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2100815   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2100816   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2100817   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2100818   +   end;
MPRINT(EM_DIAGRAM):   end;
2100819   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2100820   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2100821   +   end;
MPRINT(EM_DIAGRAM):   end;
2100822   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2100823   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2100824   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2100825   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2100826   +   end;
MPRINT(EM_DIAGRAM):   end;
2100827   +end;
MPRINT(EM_DIAGRAM):   end;
2100828   +
2100829   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2100830   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2100831   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2100832   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2100833   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2100834   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2100835   +end;
MPRINT(EM_DIAGRAM):   end;
2100836   +else do;
MPRINT(EM_DIAGRAM):   else do;
2100837   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2100838   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2100839   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2100840   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2100841   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2100842   +   end;
MPRINT(EM_DIAGRAM):   end;
2100843   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2100844   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2100845   +   end;
MPRINT(EM_DIAGRAM):   end;
2100846   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2100847   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2100848   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2100849   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2100850   +   end;
MPRINT(EM_DIAGRAM):   end;
2100851   +end;
MPRINT(EM_DIAGRAM):   end;
2100852   +
2100853   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2100854   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2100855   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2100856   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2100857   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2100858   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2100859   +end;
MPRINT(EM_DIAGRAM):   end;
2100860   +else do;
MPRINT(EM_DIAGRAM):   else do;
2100861   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2100862   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2100863   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2100864   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2100865   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2100866   +   end;
MPRINT(EM_DIAGRAM):   end;
2100867   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2100868   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2100869   +   end;
MPRINT(EM_DIAGRAM):   end;
2100870   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2100871   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2100872   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2100873   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2100874   +   end;
MPRINT(EM_DIAGRAM):   end;
2100875   +end;
MPRINT(EM_DIAGRAM):   end;
2100876   +
2100877   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2100878   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2100879   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2100880   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2100881   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2100882   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2100883   +end;
MPRINT(EM_DIAGRAM):   end;
2100884   +else do;
MPRINT(EM_DIAGRAM):   else do;
2100885   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2100886   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2100887   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2100888   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2100889   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2100890   +   end;
MPRINT(EM_DIAGRAM):   end;
2100891   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2100892   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2100893   +   end;
MPRINT(EM_DIAGRAM):   end;
2100894   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2100895   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2100896   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2100897   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2100898   +   end;
MPRINT(EM_DIAGRAM):   end;
2100899   +end;
MPRINT(EM_DIAGRAM):   end;
2100900   +
2100901   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2100902   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2100903   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2100904   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2100905   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2100906   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2100907   +end;
MPRINT(EM_DIAGRAM):   end;
2100908   +else do;
MPRINT(EM_DIAGRAM):   else do;
2100909   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2100910   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2100911   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2100912   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2100913   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2100914   +   end;
MPRINT(EM_DIAGRAM):   end;
2100915   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2100916   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2100917   +   end;
MPRINT(EM_DIAGRAM):   end;
2100918   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2100919   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2100920   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2100921   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2100922   +   end;
MPRINT(EM_DIAGRAM):   end;
2100923   +end;
MPRINT(EM_DIAGRAM):   end;
2100924   +
2100925   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2100926   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2100927   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2100928   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2100929   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2100930   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2100931   +end;
MPRINT(EM_DIAGRAM):   end;
2100932   +else do;
MPRINT(EM_DIAGRAM):   else do;
2100933   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2100934   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2100935   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2100936   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2100937   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2100938   +   end;
MPRINT(EM_DIAGRAM):   end;
2100939   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2100940   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2100941   +   end;
MPRINT(EM_DIAGRAM):   end;
2100942   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2100943   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2100944   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2100945   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2100946   +   end;
MPRINT(EM_DIAGRAM):   end;
2100947   +end;
MPRINT(EM_DIAGRAM):   end;
2100948   +
2100949   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2100950   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
2100951   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2100952   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2100953   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2100954   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2100955   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2100956   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2100957   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2100958   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2100959   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2100960   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2100961   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2100962   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2100963   +end;
MPRINT(EM_DIAGRAM):   end;
2100964   +else do;
MPRINT(EM_DIAGRAM):   else do;
2100965   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2100966   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2100967   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2100968   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2100969   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2100970   +   end;
MPRINT(EM_DIAGRAM):   end;
2100971   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2100972   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2100973   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2100974   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2100975   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2100976   +   end;
MPRINT(EM_DIAGRAM):   end;
2100977   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2100978   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2100979   +   end;
MPRINT(EM_DIAGRAM):   end;
2100980   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2100981   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2100982   +   end;
MPRINT(EM_DIAGRAM):   end;
2100983   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2100984   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2100985   +   end;
MPRINT(EM_DIAGRAM):   end;
2100986   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2100987   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2100988   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2100989   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2100990   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2100991   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2100992   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2100993   +   end;
MPRINT(EM_DIAGRAM):   end;
2100994   +end;
MPRINT(EM_DIAGRAM):   end;
2100995   +
2100996   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2100997   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2100998   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
2100999   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2101000   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2101001   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2101002   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2101003   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2101004   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2101005   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2101006   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2101007   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2101008   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2101009   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2101010   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2101011   +end;
MPRINT(EM_DIAGRAM):   end;
2101012   +else do;
MPRINT(EM_DIAGRAM):   else do;
2101013   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2101014   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2101015   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2101016   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2101017   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2101018   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2101019   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2101020   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2101021   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2101022   +         end;
MPRINT(EM_DIAGRAM):   end;
2101023   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2101024   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2101025   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2101026   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2101027   +            end;
MPRINT(EM_DIAGRAM):   end;
2101028   +         end;
MPRINT(EM_DIAGRAM):   end;
2101029   +      end;
MPRINT(EM_DIAGRAM):   end;
2101030   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2101031   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2101032   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2101033   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2101034   +         end;
MPRINT(EM_DIAGRAM):   end;
2101035   +      end;
MPRINT(EM_DIAGRAM):   end;
2101036   +   end;
MPRINT(EM_DIAGRAM):   end;
2101037   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2101038   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2101039   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2101040   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2101041   +      end;
MPRINT(EM_DIAGRAM):   end;
2101042   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2101043   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2101044   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2101045   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2101046   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2101047   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2101048   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2101049   +         end;
MPRINT(EM_DIAGRAM):   end;
2101050   +      end;
MPRINT(EM_DIAGRAM):   end;
2101051   +   end;
MPRINT(EM_DIAGRAM):   end;
2101052   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2101053   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2101054   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2101055   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2101056   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2101057   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2101058   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2101059   +   end;
MPRINT(EM_DIAGRAM):   end;
2101060   +end;
MPRINT(EM_DIAGRAM):   end;
2101061   +
2101062   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2101063   +*** Checking missing input Interval
2101064   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2101065   +
2101066   +IF NMISS(
2101067   +   Income ,
2101068   +   Kidhome ,
2101069   +   MntFishProducts ,
2101070   +   MntFruits ,
2101071   +   MntGoldProds ,
2101072   +   MntMeatProducts ,
2101073   +   MntSweetProducts ,
2101074   +   MntWines ,
2101075   +   NumCatalogPurchases ,
2101076   +   NumDealsPurchases ,
2101077   +   NumStorePurchases ,
2101078   +   NumWebPurchases ,
2101079   +   NumWebVisitsMonth ,
2101080   +   Recency ,
2101081   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Income , Kidhome , MntFishProducts , MntFruits , MntGoldProds 
, MntMeatProducts , MntSweetProducts , MntWines , NumCatalogPurchases , NumDealsPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , Recency , Teenhome ) THEN DO;
2101082   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2101083   +
2101084   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2101085   +END;
MPRINT(EM_DIAGRAM):   END;
2101086   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2101087   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
2101088   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2101089   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2101090   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2101091   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2101092   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2101093   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2101094   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2101095   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2101096   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2101097   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2101098   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2101099   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2101100   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2101101   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2101102   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2101103   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2101104   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2101105   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2101106   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2101107   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2101108   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2101109   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2101110   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2101111   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2101112   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2101113   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2101114   +END;
MPRINT(EM_DIAGRAM):   END;
2101115   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2101116   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2101117   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2101118   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2101119   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2101120   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2101121   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2101122   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2101123   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2101124   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2101125   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2101126   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2101127   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2101128   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
2101129   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2101130   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2101131   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2101132   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2101133   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2101134   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2101135   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2101136   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2101137   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2101138   +   ELSE S_NumCatalogPurchases
2101139   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2101140   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2101141   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2101142   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2101143   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2101144   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2101145   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2101146   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2101147   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2101148   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2101149   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2101150   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2101151   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2101152   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2101153   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2101154   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2101155   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2101156   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2101157   +END;
MPRINT(EM_DIAGRAM):   END;
2101158   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2101159   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
2101160   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2101161   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2101162   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
2101163   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2101164   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2101165   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
2101166   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2101167   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2101168   +   H11  =    -0.16969868213328 * S_Income  +     0.02694502969256 * S_Kidhome
2101169   +          +     0.03393898746968 * S_MntFishProducts
2101170   +          +     0.03394640220058 * S_MntFruits  +    -0.01587167417367 *
2101171   +        S_MntGoldProds  +    -0.21495242415153 * S_MntMeatProducts
2101172   +          +     0.02266052799747 * S_MntSweetProducts
2101173   +          +     0.12574687751719 * S_MntWines  +    -0.21850463721003 *
2101174   +        S_NumCatalogPurchases  +    -0.14568080551206 * S_NumDealsPurchases
2101175   +          +     0.14229567420228 * S_NumStorePurchases
2101176   +          +     0.12847652303094 * S_NumWebPurchases
2101177   +          +    -0.27944976547358 * S_NumWebVisitsMonth
2101178   +          +     0.34174699105869 * S_Recency  +     0.09717306809084 *
2101179   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = -0.16969868213328 * S_Income + 0.02694502969256 * S_Kidhome + 
0.03393898746968 * S_MntFishProducts + 0.03394640220058 * S_MntFruits + -0.01587167417367 * 
S_MntGoldProds + -0.21495242415153 * S_MntMeatProducts + 0.02266052799747 * S_MntSweetProducts 
+ 0.12574687751719 * S_MntWines + -0.21850463721003 * S_NumCatalogPurchases + 
-0.14568080551206 * S_NumDealsPurchases + 0.14229567420228 * S_NumStorePurchases + 
0.12847652303094 * S_NumWebPurchases + -0.27944976547358 * S_NumWebVisitsMonth + 
0.34174699105869 * S_Recency + 0.09717306809084 * S_Teenhome ;
2101180   +   H11  = H11  +     0.14287293066948 * AcceptedCmp10
2101181   +          +     0.17019666922685 * AcceptedCmp20  +      0.1773366178584 *
2101182   +        AcceptedCmp30  +     0.13131611179689 * AcceptedCmp40
2101183   +          +     0.19540838220921 * AcceptedCmp50  +    -0.06278476006654 *
2101184   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.14287293066948 * AcceptedCmp10 + 0.17019666922685 * 
AcceptedCmp20 + 0.1773366178584 * AcceptedCmp30 + 0.13131611179689 * AcceptedCmp40 + 
0.19540838220921 * AcceptedCmp50 + -0.06278476006654 * Complain0 ;
2101185   +   H11  = H11  +    -0.01270106768575 * Education2n_Cycle
2101186   +          +     0.06504707206132 * EducationBasic  +    -0.03889488068058 *
2101187   +        EducationGraduation  +    -0.00452456149121 * EducationMaster
2101188   +          +    -0.03502175493382 * Marital_StatusDivorced
2101189   +          +     0.10402983157245 * Marital_StatusMarried
2101190   +          +    -0.09554165782029 * Marital_StatusSingle
2101191   +          +     0.11204179692307 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.01270106768575 * Education2n_Cycle + 0.06504707206132 * 
EducationBasic + -0.03889488068058 * EducationGraduation + -0.00452456149121 * EducationMaster 
+ -0.03502175493382 * Marital_StatusDivorced + 0.10402983157245 * Marital_StatusMarried + 
-0.09554165782029 * Marital_StatusSingle + 0.11204179692307 * Marital_StatusTogether ;
2101192   +   H11  =    -0.16570612477441 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -0.16570612477441 + H11 ;
2101193   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
2101194   +END;
MPRINT(EM_DIAGRAM):   END;
2101195   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2101196   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
2101197   +END;
MPRINT(EM_DIAGRAM):   END;
2101198   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2101199   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2101200   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2101201   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2101202   +   P_DepVar1  =     -9.2939742190595 * H11 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -9.2939742190595 * H11 ;
2101203   +   P_DepVar1  =    -0.77234034139714 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.77234034139714 + P_DepVar1 ;
2101204   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2101205   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2101206   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2101207   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2101208   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2101209   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2101210   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2101211   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2101212   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2101213   +END;
MPRINT(EM_DIAGRAM):   END;
2101214   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2101215   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2101216   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2101217   +END;
MPRINT(EM_DIAGRAM):   END;
2101218   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2101219   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2101220   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2101221   +END;
MPRINT(EM_DIAGRAM):   END;
2101222   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2101223   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2101224   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2101225   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2101226   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2101227   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2101228   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2101229   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2101230   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2101231   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2101232   +END;
MPRINT(EM_DIAGRAM):   END;
2101233   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2101234   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2101235   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2101236   +drop
2101237   +H11
2101238   +;
MPRINT(EM_DIAGRAM):   drop H11 ;
2101239   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2101240    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2101241    quit;
2101242    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2101243    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2101244    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2101245    retain ID 2 Node "Neural6";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Neural6";
2101246    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2101247    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1326 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 1326 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2101248    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2101249    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2101250    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1326 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 1326 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2101251    proc sort data=EMWS8.Neural6_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Neural6_variableset out=_temp2(keep=NAME CREATOR);
2101252    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2101253    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.NEURAL6_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2101254    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2101255    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2101256    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2101257    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2101258    proc contents data=EMWS8.Neural6_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Neural6_train out=_meta(keep=NAME) noprint;
2101259    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

2101260    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2101261    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2101262    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 53 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2101263    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2101264    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2101265    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2101266    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 53 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2101267    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2101268    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2101268  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 740 rows and 5 columns.

2101269    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2101270    proc append base=EMWS8.Ensmbl9_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl9_FCMP data=_tempx;
2101271    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL9_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 740 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL9_FCMP has 740 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2101272    filename _pref
2101272  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
2101273    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2101274    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
2101275   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2101276   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
2101277   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2101278   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
2101279   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
2101280   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2101281    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2101282    quit;
2101283    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2101284    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2101285    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2101286    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
2101287    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2101288    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2101289    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2101290    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2101291    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2101292    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
2101293    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2101294    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2101295    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2101296    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2101297    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2101298    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2101299    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
2101300    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

2101301    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2101302    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2101303    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2101304    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2101305    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2101306    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2101307    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2101308    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2101309    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2101309  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

2101310    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2101311    proc append base=EMWS8.Ensmbl9_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl9_FCMP data=_tempx;
2101312    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL9_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL9_FCMP has 744 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2101313    filename _pref
2101313  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
2101314    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2101315    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
2101316   +
2101317   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
2101318   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
2101318  !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
2101319   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
2101320   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
2101321   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
2101322   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
2101323   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2101324    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2101325    quit;
2101326    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2101327    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2101328    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2101329    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
2101330    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2101331    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2101332    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2101333    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2101334    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2101335    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
2101336    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2101337    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2101338    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2101339    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2101340    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2101341    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2101342    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
2101343    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2101344    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2101345    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2101346    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2101347    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2101348    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2101349    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2101350    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2101351    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2101352    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2101352  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

2101353    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2101354    proc append base=EMWS8.Ensmbl9_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl9_FCMP data=_tempx;
2101355    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL9_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL9_FCMP has 783 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2101356    filename _pref
2101356  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
2101357    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2101358    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
2101359   +
2101360   +
2101361   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
2101362   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
2101363   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
2101364   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
2101365   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
2101366   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2101367   +
2101368   +
2101369   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
2101370   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
2101371   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
2101372   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
2101373   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
2101374   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2101375   +
2101376   +
2101377   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
2101378   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
2101379   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
2101380   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
2101381   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
2101382   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2101383   +
2101384   +
2101385   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
2101386   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
2101387   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
2101388   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
2101389   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
2101390   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2101391   +
2101392   +
2101393   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
2101394   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
2101395   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
2101396   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
2101397   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
2101398   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2101399   +
2101400   +
2101401   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
2101402   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
2101403   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
2101404   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
2101405   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
2101406   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2101407   +
2101408   +
2101409   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
2101410   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
2101411   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
2101412   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
2101413   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
2101414   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2101415   +
2101416   +
2101417   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
2101418   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
2101419   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
2101420   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
2101421   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
2101422   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2101423   +if
2101424   +_FILTERNORM1 not in ( '.')
2101425   + and
2101426   +_FILTERNORM2 not in ( '.')
2101427   + and
2101428   +_FILTERNORM3 not in ( '.')
2101429   + and
2101430   +_FILTERNORM4 not in ( '.')
2101431   + and
2101432   +_FILTERNORM5 not in ( '.')
2101433   + and
2101434   +_FILTERNORM6 not in ( '.')
2101435   + and
2101436   +_FILTERNORM7 not in ( ' ')
2101437   + and
2101438   +_FILTERNORM8 not in ( ' ')
2101439   +and
2101440   +( Dt_Customer ne .)
2101441   +and ( Income ne . and (Income<=107000))
2101442   +and ( Kidhome ne .)
2101443   +and ( MntFishProducts ne .)
2101444   +and ( MntFruits ne .)
2101445   +and ( MntGoldProds ne .)
2101446   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
2101447   +and ( MntSweetProducts ne .)
2101448   +and ( MntWines ne .)
2101449   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
2101450   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
2101451   +and ( NumStorePurchases ne .)
2101452   +and ( NumWebPurchases ne .)
2101453   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
2101454   +and ( Recency ne .)
2101455   +and ( Teenhome ne .)
2101456   +and ( Year_Birth ne .)
2101457   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
2101458   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
2101459   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
2101460   +end;
MPRINT(EM_DIAGRAM):   end;
2101461   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
2101462   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2101463    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2101464    quit;
2101465    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2101466    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2101467    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2101468    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
2101469    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2101470    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2101471    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2101472    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2101473    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2101474    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
2101475    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2101476    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2101477    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2101478    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2101479    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2101480    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2101481    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
2101482    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

2101483    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2101484    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2101485    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2101486    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2101487    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2101488    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2101489    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2101490    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2101491    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2101491  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

2101492    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2101493    proc append base=EMWS8.Ensmbl9_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl9_FCMP data=_tempx;
2101494    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL9_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL9_FCMP has 849 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2101495    %macro varDept(fcmpdata=,id=);
2101496    %global nobs&id scoreFlag&id;
2101497    %let scoreFlag&id = 0;
2101498    %if &id=1 or ^&fcmpStart %then %do;
2101499    proc sort data=&fcmpdata out=_temp&id nodupkey;
2101500    by NAME;
2101501    where id=&id and LHS in( %let j=1;
2101502    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
2101503    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
2101504    "&var" %let j = %eval(&j+1);
2101505    %end;
2101506    );
2101507    run;
2101508    %let dsid = %sysfunc(open(_temp&id));
2101509    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2101510    %let dsid = %sysfunc(close(&dsid));
2101511    %if &&nobs&id %then %do;
2101512    %let scoreFlag&id = 1;
2101513    %let fcmpStart = 1;
2101514    %end;
2101515    %else %let fcmpStart = 0;
2101516    %end;
2101517    %else %do;
2101518    proc sort data=&fcmpdata out=_tempid;
2101519    where id=&id;
2101520    by LHS;
2101521    run;
2101522    %let dsid = %sysfunc(open(_tempid));
2101523    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2101524    %let dsid = %sysfunc(close(&dsid));
2101525    %if ^&&nobs&id %then %do;
2101526    proc datasets lib=work nolist;
2101527    delete _tempid;
2101528    run;
2101529    quit;
2101530    %end;
2101531    %else %do;
2101532    data _tempAll;
2101533    set %let j=%eval(&id-1);
2101534    %do x=1 %to &j;
2101535    %if &&nobs&x %then %do;
2101536    _temp&x %end;
2101537    %end;
2101538    ;
2101539    run;
2101540    proc sql;
2101541    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
2101541  ! work._tempid p2 where p.name=p2.lhs;
2101542    quit;
2101543    data _temp&id;
2101544    set _temp&id;
2101545    where LHS ne '' and NAME ne '' and Node ne '';
2101546    run;
2101547    proc datasets lib=work nolist;
2101548    delete _tempAll;
2101549    run;
2101550    %let dsid = %sysfunc(open(_temp&id));
2101551    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2101552    %let dsid = %sysfunc(close(&dsid));
2101553    %if ^&&nobs&id %then %do;
2101554    proc datasets lib=work nolist;
2101555    delete _temp&id;
2101556    run;
2101557    quit;
2101558    %end;
2101559    %else %do;
2101560    %let scoreFlag&id = 1;
2101561    data _temp&id;
2101562    set _temp&id;
2101563    where LHS ne NAME and node ne '';
2101564    run;
2101565    %let dsid = %sysfunc(open(_temp&id));
2101566    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2101567    %let dsid = %sysfunc(close(&dsid));
2101568    %if ^&&nobs&id %then %do;
2101569    proc datasets lib=work nolist;
2101570    delete _temp&id;
2101571    run;
2101572    quit;
2101573    %end;
2101574    %else %do;
2101575    proc sort data=_temp&id nodupkey;
2101576    by LHS NAME;
2101577    run;
2101578    %end;
2101579    %end;
2101580    %end;
2101581    %end;
2101582    %mend varDept;
2101583    %macro optCode(outdata=fcmpdata);
2101584    %global fcmpStart;
2101585    %let fcmpStart = 0;
2101586    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
2101587    %let NumNodes=9;
2101588    %do k=1 %to &NumNodes;
2101589    %vardept(fcmpdata=&outdata, id=&k);
2101590    %end;
2101591    %mend optCode;
2101592    %optcode(outData=EMWS8.Ensmbl9_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl9_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL9_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl9_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 98 observations read from the data set EMWS8.ENSMBL9_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 73 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 25 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl9_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL9_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl9_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL9_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl9_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL9_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 25 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 25 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp5;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP5 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl9_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL9_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 25 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 25 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.06 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp6;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP6 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl9_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL9_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 25 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 25 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl9_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL9_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl9_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL9_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

2101593    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
2101594    * Ensmbl9: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * Ensmbl9: Computing metadata for TRAIN data;
2101595    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;

NOTE: View EMWS8.ENSMBL9_TRAIN.VIEW used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
      
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta 
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl9\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS8.Ensmbl9_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS8.Ensmbl9_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS8.Ensmbl9_TRAIN out=WORK.M18U9FIY noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M18U9FIY;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20 
INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M18U9FIY(keep=name type length label format formatl 
formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then format = strip(format)!!strip(put(formatl, 
best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, 
best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then informat = 
strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, 
best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M18U9FIY;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M18U9FIY;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M1LNZBWC NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1LNZBWC;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M1LNZBWC;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2IHQH2K(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M1LNZBWC;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1LNZBWC;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 
FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M1LNZBWC;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" 
"MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" 
"QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" "YEAR" "YYMMDD" "YYMON" 
"YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" 
"EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) 
formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = 
"DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) 
formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" 
"NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" 
"SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = 
"DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then 
level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 
'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 
'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ 
('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 
'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 
'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1LNZBWC;
MPRINT(EMADVISECOLUMNS):   set WORK.M1LNZBWC;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= 
"Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= 
"Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower limit" UPPERLIMIT= 
"Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= 
"Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Reg10_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Reg10_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl9_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT 
LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "Ensmbl9";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("P_DEPVAR1") creator = "Ensmbl9";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR1") creator = "Ensmbl9";
MPRINT(EM_DIAGRAM):   when("P_DEPVAR0") creator = "Ensmbl9";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR0") creator = "Ensmbl9";
MPRINT(EM_DIAGRAM):   when("F_DEPVAR") creator = "Ensmbl9";
MPRINT(EM_DIAGRAM):   when("I_DEPVAR") creator = "Ensmbl9";
MPRINT(EM_DIAGRAM):   when("U_DEPVAR") creator = "Ensmbl9";
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "Ensmbl9";
MPRINT(EM_DIAGRAM):   when("DEPVAR") model = "Ensmbl9";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl9: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   if NAME in( "I_DepVar" "F_DepVar" "U_DepVar" "_WARN_" "P_DepVar1" 
"P_DepVar0" "R_DepVar1" "R_DepVar0" ) then CREATOR="Ensmbl9";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
2101915    data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
2101916    set EMWS8.Ensmbl9_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl9_EMINFO;
2101917    where DATA='Ensmbl9' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='Ensmbl9' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 
'MODEL');
2101918    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.ENSMBL9_EMINFO.
      WHERE (DATA='Ensmbl9') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2101919    data EMWS8.Ensmbl9_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS8.Ensmbl9_EMINFO;
2101920    length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
2101921    input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
2101922    cards;
MPRINT(EM_DIAGRAM):   cards;

NOTE: The data set EMWS8.ENSMBL9_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   run;
2101926    run;
2101927    data EMWS8.Ensmbl9_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl9_EMINFO;
2101928    set EMWS8.Ensmbl9_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl9_EMINFO WORK.MODELTEMP_INFO;
2101929    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.ENSMBL9_EMINFO.
NOTE: There were 0 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS8.ENSMBL9_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2101930    proc sort data = EMWS8.Ensmbl9_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.Ensmbl9_EMINFO NOTHREADS;
2101931    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
2101932    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.ENSMBL9_EMINFO.
NOTE: The data set EMWS8.ENSMBL9_EMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2101933    proc sort data = EMWS8.Reg10_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.Reg10_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
2101934    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
2101935    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set EMWS8.REG10_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2101936    proc sort data = EMWS8.Ensmbl9_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS8.Ensmbl9_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
2101937    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
2101938    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 3 observations read from the data set EMWS8.ENSMBL9_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2101939    data EMWS8.Ensmbl9_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl9_EMINFO;
2101940    merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
2101941    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
2101942    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 3 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS8.ENSMBL9_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2101943    proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
2101944    delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
2101945    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
2101946    quit;
MPRINT(EM_DIAGRAM):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

NOTE: View EMWS8.ENSMBL9_TRAIN.VIEW used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
      
NOTE: View EMWS8.ENSMBL9_VALIDATE.VIEW used (Total process time):
      real time           0.05 seconds
      cpu time            0.07 seconds
      
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
