MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "19. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "11.17 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                19. April 2016
Time:                11.17 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O12XU06J 
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl12\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O12XU06J new;
MPRINT(EM_DIAGRAM):   run;
1086460    filename emflow
1086460  ! "C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl12\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl12\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl12: Scoring REG12_TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1086461    *------------------------------------------------------------*;
1086462    * Ensmbl12: Scoring REG12_TRAIN data;
1086463    *------------------------------------------------------------*;
1086464    data EMWS8.Ensmbl12_TRAIN
1086465    / view=EMWS8.Ensmbl12_TRAIN
1086466    ;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl12_TRAIN / view=EMWS8.Ensmbl12_TRAIN ;
1086467    set EMWS8.Reg12_TRAIN
1086468    ;
MPRINT(EM_DIAGRAM):   set EMWS8.Reg12_TRAIN ;
1086469    %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl12\EMFLOWSCORE.sas.
1086470   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1086471   +* Ensmbl12: Combine model for DepVar;
MPRINT(EM_DIAGRAM):   * Ensmbl12: Combine model for DepVar;
1086472   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1086473   +* Ensmbl12: Scoring Code of model 1 of 10;
MPRINT(EM_DIAGRAM):   * Ensmbl12: Scoring Code of model 1 of 10;
1086474   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1086475   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1086476   +* TOOL: Extension Class;
MPRINT(EM_DIAGRAM):   * TOOL: Extension Class;
1086477   +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
1086478   +* NODE: FIMPORT;
MPRINT(EM_DIAGRAM):   * NODE: FIMPORT;
1086479   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1086480   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1086481   +* TOOL: Statistics Exploration;
MPRINT(EM_DIAGRAM):   * TOOL: Statistics Exploration;
1086482   +* TYPE: EXPLORE;
MPRINT(EM_DIAGRAM):   * TYPE: EXPLORE;
1086483   +* NODE: Stat;
MPRINT(EM_DIAGRAM):   * NODE: Stat;
1086484   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1086485   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1086486   +* TOOL: Filtering;
MPRINT(EM_DIAGRAM):   * TOOL: Filtering;
1086487   +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
1086488   +* NODE: Filter;
MPRINT(EM_DIAGRAM):   * NODE: Filter;
1086489   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1086490   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1086491   +* TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
MPRINT(EM_DIAGRAM):   * TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
1086492   +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
1086493   +* NODE: EMCODE4;
MPRINT(EM_DIAGRAM):   * NODE: EMCODE4;
1086494   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1086495   +
1086496   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1086497   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1086497  !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1086498   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1086499   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1086500   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1086501   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1086502   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
1086503   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1086504   +* TOOL: Transform;
MPRINT(EM_DIAGRAM):   * TOOL: Transform;
1086505   +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
1086506   +* NODE: Trans;
MPRINT(EM_DIAGRAM):   * NODE: Trans;
1086507   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1086508   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1086509   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1086510   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1086511   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1086512   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1086513   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
1086514   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1086515   +* TOOL: Partition Class;
MPRINT(EM_DIAGRAM):   * TOOL: Partition Class;
1086516   +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
1086517   +* NODE: Part;
MPRINT(EM_DIAGRAM):   * NODE: Part;
1086518   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1086519   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1086520   +* TOOL: Metadata Node;
MPRINT(EM_DIAGRAM):   * TOOL: Metadata Node;
1086521   +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
1086522   +* NODE: Meta3;
MPRINT(EM_DIAGRAM):   * NODE: Meta3;
1086523   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1086524   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1086525   +* TOOL: Regression;
MPRINT(EM_DIAGRAM):   * TOOL: Regression;
1086526   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1086527   +* NODE: Reg12;
MPRINT(EM_DIAGRAM):   * NODE: Reg12;
1086528   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1086529   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1086530   +*** begin scoring code for regression;
MPRINT(EM_DIAGRAM):   *** begin scoring code for regression;
1086531   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1086532   +
1086533   +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
1086534   +label _WARN_ = 'Warnings' ;
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings' ;
1086535   +
1086536   +length I_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length I_DepVar $ 12;
1086537   +label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1086538   +*** Target Values;
MPRINT(EM_DIAGRAM):   *** Target Values;
1086539   +array REG12DRF [2] $12 _temporary_ ('1' '0' );
MPRINT(EM_DIAGRAM):   array REG12DRF [2] $12 _temporary_ ('1' '0' );
1086540   +label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1086541   +format U_DepVar BEST.;
MPRINT(EM_DIAGRAM):   format U_DepVar BEST.;
1086542   +*** Unnormalized target values;
MPRINT(EM_DIAGRAM):   *** Unnormalized target values;
1086543   +ARRAY REG12DRU[2]  _TEMPORARY_ (1 0);
MPRINT(EM_DIAGRAM):   ARRAY REG12DRU[2] _TEMPORARY_ (1 0);
1086544   +
1086545   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1086546   +drop _Y ;
MPRINT(EM_DIAGRAM):   drop _Y ;
1086547   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1086548   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1086549   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1086550   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1086551   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1086552   +   _Y = .;
MPRINT(EM_DIAGRAM):   _Y = .;
1086553   +end;
MPRINT(EM_DIAGRAM):   end;
1086554   +else do;
MPRINT(EM_DIAGRAM):   else do;
1086555   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1086556   +      _Y = 1;
MPRINT(EM_DIAGRAM):   _Y = 1;
1086557   +   end;
MPRINT(EM_DIAGRAM):   end;
1086558   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1086559   +      _Y = 0;
MPRINT(EM_DIAGRAM):   _Y = 0;
1086560   +   end;
MPRINT(EM_DIAGRAM):   end;
1086561   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1086562   +      _Y = .;
MPRINT(EM_DIAGRAM):   _Y = .;
1086563   +   end;
MPRINT(EM_DIAGRAM):   end;
1086564   +end;
MPRINT(EM_DIAGRAM):   end;
1086565   +
1086566   +drop _DM_BAD;
MPRINT(EM_DIAGRAM):   drop _DM_BAD;
1086567   +_DM_BAD=0;
MPRINT(EM_DIAGRAM):   _DM_BAD=0;
1086568   +
1086569   +*** Check AcceptedCmpTotal for missing values ;
MPRINT(EM_DIAGRAM):   *** Check AcceptedCmpTotal for missing values ;
1086570   +if missing( AcceptedCmpTotal ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmpTotal ) then do;
1086571   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1086572   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1086573   +end;
MPRINT(EM_DIAGRAM):   end;
1086574   +
1086575   +*** Check Age for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Age for missing values ;
1086576   +if missing( Age ) then do;
MPRINT(EM_DIAGRAM):   if missing( Age ) then do;
1086577   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1086578   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1086579   +end;
MPRINT(EM_DIAGRAM):   end;
1086580   +
1086581   +*** Check Frq for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Frq for missing values ;
1086582   +if missing( Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( Frq ) then do;
1086583   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1086584   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1086585   +end;
MPRINT(EM_DIAGRAM):   end;
1086586   +
1086587   +*** Check Income for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Income for missing values ;
1086588   +if missing( Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( Income ) then do;
1086589   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1086590   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1086591   +end;
MPRINT(EM_DIAGRAM):   end;
1086592   +
1086593   +*** Check NumDealsPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumDealsPurchases for missing values ;
1086594   +if missing( NumDealsPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumDealsPurchases ) then do;
1086595   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1086596   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1086597   +end;
MPRINT(EM_DIAGRAM):   end;
1086598   +
1086599   +*** Check NumWebVisitsMonth for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumWebVisitsMonth for missing values ;
1086600   +if missing( NumWebVisitsMonth ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumWebVisitsMonth ) then do;
1086601   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1086602   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1086603   +end;
MPRINT(EM_DIAGRAM):   end;
1086604   +
1086605   +*** Check RMntFrq for missing values ;
MPRINT(EM_DIAGRAM):   *** Check RMntFrq for missing values ;
1086606   +if missing( RMntFrq ) then do;
MPRINT(EM_DIAGRAM):   if missing( RMntFrq ) then do;
1086607   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1086608   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1086609   +end;
MPRINT(EM_DIAGRAM):   end;
1086610   +
1086611   +*** Check Recency for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Recency for missing values ;
1086612   +if missing( Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( Recency ) then do;
1086613   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1086614   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1086615   +end;
MPRINT(EM_DIAGRAM):   end;
1086616   +
1086617   +*** Check Teenhome for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Teenhome for missing values ;
1086618   +if missing( Teenhome ) then do;
MPRINT(EM_DIAGRAM):   if missing( Teenhome ) then do;
1086619   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1086620   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1086621   +end;
MPRINT(EM_DIAGRAM):   end;
1086622   +
1086623   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1086624   +drop _3_0 ;
MPRINT(EM_DIAGRAM):   drop _3_0 ;
1086625   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1086626   +   _3_0 = .;
MPRINT(EM_DIAGRAM):   _3_0 = .;
1086627   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1086628   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1086629   +end;
MPRINT(EM_DIAGRAM):   end;
1086630   +else do;
MPRINT(EM_DIAGRAM):   else do;
1086631   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1086632   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1086633   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1086634   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1086635   +      _3_0 = 1;
MPRINT(EM_DIAGRAM):   _3_0 = 1;
1086636   +   end;
MPRINT(EM_DIAGRAM):   end;
1086637   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1086638   +      _3_0 = -1;
MPRINT(EM_DIAGRAM):   _3_0 = -1;
1086639   +   end;
MPRINT(EM_DIAGRAM):   end;
1086640   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1086641   +      _3_0 = .;
MPRINT(EM_DIAGRAM):   _3_0 = .;
1086642   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1086643   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1086644   +   end;
MPRINT(EM_DIAGRAM):   end;
1086645   +end;
MPRINT(EM_DIAGRAM):   end;
1086646   +
1086647   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1086648   +drop _4_0 ;
MPRINT(EM_DIAGRAM):   drop _4_0 ;
1086649   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1086650   +   _4_0 = .;
MPRINT(EM_DIAGRAM):   _4_0 = .;
1086651   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1086652   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1086653   +end;
MPRINT(EM_DIAGRAM):   end;
1086654   +else do;
MPRINT(EM_DIAGRAM):   else do;
1086655   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1086656   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1086657   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1086658   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1086659   +      _4_0 = 1;
MPRINT(EM_DIAGRAM):   _4_0 = 1;
1086660   +   end;
MPRINT(EM_DIAGRAM):   end;
1086661   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1086662   +      _4_0 = -1;
MPRINT(EM_DIAGRAM):   _4_0 = -1;
1086663   +   end;
MPRINT(EM_DIAGRAM):   end;
1086664   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1086665   +      _4_0 = .;
MPRINT(EM_DIAGRAM):   _4_0 = .;
1086666   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1086667   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1086668   +   end;
MPRINT(EM_DIAGRAM):   end;
1086669   +end;
MPRINT(EM_DIAGRAM):   end;
1086670   +
1086671   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1086672   +drop _9_0 _9_1 _9_2 _9_3 ;
MPRINT(EM_DIAGRAM):   drop _9_0 _9_1 _9_2 _9_3 ;
1086673   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1086674   +_9_0 = 0;
MPRINT(EM_DIAGRAM):   _9_0 = 0;
1086675   +_9_1 = 0;
MPRINT(EM_DIAGRAM):   _9_1 = 0;
1086676   +_9_2 = 0;
MPRINT(EM_DIAGRAM):   _9_2 = 0;
1086677   +_9_3 = 0;
MPRINT(EM_DIAGRAM):   _9_3 = 0;
1086678   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1086679   +   _9_0 = .;
MPRINT(EM_DIAGRAM):   _9_0 = .;
1086680   +   _9_1 = .;
MPRINT(EM_DIAGRAM):   _9_1 = .;
1086681   +   _9_2 = .;
MPRINT(EM_DIAGRAM):   _9_2 = .;
1086682   +   _9_3 = .;
MPRINT(EM_DIAGRAM):   _9_3 = .;
1086683   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1086684   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1086685   +end;
MPRINT(EM_DIAGRAM):   end;
1086686   +else do;
MPRINT(EM_DIAGRAM):   else do;
1086687   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1086688   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1086689   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1086690   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1086691   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1086692   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1086693   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1086694   +            _9_0 = 1;
MPRINT(EM_DIAGRAM):   _9_0 = 1;
1086695   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1086696   +         end;
MPRINT(EM_DIAGRAM):   end;
1086697   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1086698   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1086699   +               _9_1 = 1;
MPRINT(EM_DIAGRAM):   _9_1 = 1;
1086700   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1086701   +            end;
MPRINT(EM_DIAGRAM):   end;
1086702   +         end;
MPRINT(EM_DIAGRAM):   end;
1086703   +      end;
MPRINT(EM_DIAGRAM):   end;
1086704   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1086705   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1086706   +            _9_2 = 1;
MPRINT(EM_DIAGRAM):   _9_2 = 1;
1086707   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1086708   +         end;
MPRINT(EM_DIAGRAM):   end;
1086709   +      end;
MPRINT(EM_DIAGRAM):   end;
1086710   +   end;
MPRINT(EM_DIAGRAM):   end;
1086711   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1086712   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1086713   +         _9_3 = 1;
MPRINT(EM_DIAGRAM):   _9_3 = 1;
1086714   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1086715   +      end;
MPRINT(EM_DIAGRAM):   end;
1086716   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1086717   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1086718   +            _9_0 = -1;
MPRINT(EM_DIAGRAM):   _9_0 = -1;
1086719   +            _9_1 = -1;
MPRINT(EM_DIAGRAM):   _9_1 = -1;
1086720   +            _9_2 = -1;
MPRINT(EM_DIAGRAM):   _9_2 = -1;
1086721   +            _9_3 = -1;
MPRINT(EM_DIAGRAM):   _9_3 = -1;
1086722   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1086723   +         end;
MPRINT(EM_DIAGRAM):   end;
1086724   +      end;
MPRINT(EM_DIAGRAM):   end;
1086725   +   end;
MPRINT(EM_DIAGRAM):   end;
1086726   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1086727   +      _9_0 = .;
MPRINT(EM_DIAGRAM):   _9_0 = .;
1086728   +      _9_1 = .;
MPRINT(EM_DIAGRAM):   _9_1 = .;
1086729   +      _9_2 = .;
MPRINT(EM_DIAGRAM):   _9_2 = .;
1086730   +      _9_3 = .;
MPRINT(EM_DIAGRAM):   _9_3 = .;
1086731   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1086732   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1086733   +   end;
MPRINT(EM_DIAGRAM):   end;
1086734   +end;
MPRINT(EM_DIAGRAM):   end;
1086735   +
1086736   +*** If missing inputs, use averages;
MPRINT(EM_DIAGRAM):   *** If missing inputs, use averages;
1086737   +if _DM_BAD > 0 then do;
MPRINT(EM_DIAGRAM):   if _DM_BAD > 0 then do;
1086738   +   _P0 = 0.151221567;
MPRINT(EM_DIAGRAM):   _P0 = 0.151221567;
1086739   +   _P1 = 0.848778433;
MPRINT(EM_DIAGRAM):   _P1 = 0.848778433;
1086740   +   goto REG12DR1;
MPRINT(EM_DIAGRAM):   goto REG12DR1;
1086741   +end;
MPRINT(EM_DIAGRAM):   end;
1086742   +
1086743   +*** Compute Linear Predictor;
MPRINT(EM_DIAGRAM):   *** Compute Linear Predictor;
1086744   +drop _TEMP;
MPRINT(EM_DIAGRAM):   drop _TEMP;
1086745   +drop _LP0;
MPRINT(EM_DIAGRAM):   drop _LP0;
1086746   +_LP0 = 0;
MPRINT(EM_DIAGRAM):   _LP0 = 0;
1086747   +
1086748   +***  Effect: AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Effect: AcceptedCmp3 ;
1086749   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1086750   +_LP0 = _LP0 + (   -0.41254575292144) * _TEMP * _3_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.41254575292144) * _TEMP * _3_0;
1086751   +
1086752   +***  Effect: AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Effect: AcceptedCmp4 ;
1086753   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1086754   +_LP0 = _LP0 + (    0.34675190501967) * _TEMP * _4_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.34675190501967) * _TEMP * _4_0;
1086755   +
1086756   +***  Effect: AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   *** Effect: AcceptedCmpTotal ;
1086757   +_TEMP = AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   _TEMP = AcceptedCmpTotal ;
1086758   +_LP0 = _LP0 + (    1.80745311910799 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.80745311910799 * _TEMP);
1086759   +
1086760   +***  Effect: Age ;
MPRINT(EM_DIAGRAM):   *** Effect: Age ;
1086761   +_TEMP = Age ;
MPRINT(EM_DIAGRAM):   _TEMP = Age ;
1086762   +_LP0 = _LP0 + (   -0.01852391433447 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.01852391433447 * _TEMP);
1086763   +
1086764   +***  Effect: Frq ;
MPRINT(EM_DIAGRAM):   *** Effect: Frq ;
1086765   +_TEMP = Frq ;
MPRINT(EM_DIAGRAM):   _TEMP = Frq ;
1086766   +_LP0 = _LP0 + (   -0.05045980295154 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.05045980295154 * _TEMP);
1086767   +
1086768   +***  Effect: Income ;
MPRINT(EM_DIAGRAM):   *** Effect: Income ;
1086769   +_TEMP = Income ;
MPRINT(EM_DIAGRAM):   _TEMP = Income ;
1086770   +_LP0 = _LP0 + (     0.0000456777011 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.0000456777011 * _TEMP);
1086771   +
1086772   +***  Effect: Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Effect: Marital_Status ;
1086773   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1086774   +_LP0 = _LP0 + (    0.19470733105664) * _TEMP * _9_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.19470733105664) * _TEMP * _9_0;
1086775   +_LP0 = _LP0 + (   -0.66737124261283) * _TEMP * _9_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.66737124261283) * _TEMP * _9_1;
1086776   +_LP0 = _LP0 + (    0.47354458382979) * _TEMP * _9_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.47354458382979) * _TEMP * _9_2;
1086777   +_LP0 = _LP0 + (   -0.76484617755918) * _TEMP * _9_3;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.76484617755918) * _TEMP * _9_3;
1086778   +
1086779   +***  Effect: NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumDealsPurchases ;
1086780   +_TEMP = NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumDealsPurchases ;
1086781   +_LP0 = _LP0 + (    0.38683487817532 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.38683487817532 * _TEMP);
1086782   +
1086783   +***  Effect: NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   *** Effect: NumWebVisitsMonth ;
1086784   +_TEMP = NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   _TEMP = NumWebVisitsMonth ;
1086785   +_LP0 = _LP0 + (    0.30399773949187 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.30399773949187 * _TEMP);
1086786   +
1086787   +***  Effect: RMntFrq ;
MPRINT(EM_DIAGRAM):   *** Effect: RMntFrq ;
1086788   +_TEMP = RMntFrq ;
MPRINT(EM_DIAGRAM):   _TEMP = RMntFrq ;
1086789   +_LP0 = _LP0 + (    0.01122718563179 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.01122718563179 * _TEMP);
1086790   +
1086791   +***  Effect: Recency ;
MPRINT(EM_DIAGRAM):   *** Effect: Recency ;
1086792   +_TEMP = Recency ;
MPRINT(EM_DIAGRAM):   _TEMP = Recency ;
1086793   +_LP0 = _LP0 + (   -0.06483187112579 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.06483187112579 * _TEMP);
1086794   +
1086795   +***  Effect: Teenhome ;
MPRINT(EM_DIAGRAM):   *** Effect: Teenhome ;
1086796   +_TEMP = Teenhome ;
MPRINT(EM_DIAGRAM):   _TEMP = Teenhome ;
1086797   +_LP0 = _LP0 + (   -1.33693437973843 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.33693437973843 * _TEMP);
1086798   +
1086799   +*** Naive Posterior Probabilities;
MPRINT(EM_DIAGRAM):   *** Naive Posterior Probabilities;
1086800   +drop _MAXP _IY _P0 _P1;
MPRINT(EM_DIAGRAM):   drop _MAXP _IY _P0 _P1;
1086801   +_TEMP =    -3.46388239032287 + _LP0;
MPRINT(EM_DIAGRAM):   _TEMP = -3.46388239032287 + _LP0;
1086802   +if (_TEMP < 0) then do;
MPRINT(EM_DIAGRAM):   if (_TEMP < 0) then do;
1086803   +   _TEMP = exp(_TEMP);
MPRINT(EM_DIAGRAM):   _TEMP = exp(_TEMP);
1086804   +   _P0 = _TEMP / (1 + _TEMP);
MPRINT(EM_DIAGRAM):   _P0 = _TEMP / (1 + _TEMP);
1086805   +end;
MPRINT(EM_DIAGRAM):   end;
1086806   +else _P0 = 1 / (1 + exp(-_TEMP));
MPRINT(EM_DIAGRAM):   else _P0 = 1 / (1 + exp(-_TEMP));
1086807   +_P1 = 1.0 - _P0;
MPRINT(EM_DIAGRAM):   _P1 = 1.0 - _P0;
1086808   +
1086809   +REG12DR1:
1086810   +
1086811   +*** Residuals;
MPRINT(EM_DIAGRAM):   REG12DR1: *** Residuals;
1086812   +if (_Y = .) then do;
MPRINT(EM_DIAGRAM):   if (_Y = .) then do;
1086813   +   R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
1086814   +   R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
1086815   +end;
MPRINT(EM_DIAGRAM):   end;
1086816   +else do;
MPRINT(EM_DIAGRAM):   else do;
1086817   +    label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1086818   +    label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1086819   +   R_DepVar1 = - _P0;
MPRINT(EM_DIAGRAM):   R_DepVar1 = - _P0;
1086820   +   R_DepVar0 = - _P1;
MPRINT(EM_DIAGRAM):   R_DepVar0 = - _P1;
1086821   +   select( _Y );
MPRINT(EM_DIAGRAM):   select( _Y );
1086822   +      when (0)  R_DepVar1 = R_DepVar1 + 1;
MPRINT(EM_DIAGRAM):   when (0) R_DepVar1 = R_DepVar1 + 1;
1086823   +      when (1)  R_DepVar0 = R_DepVar0 + 1;
MPRINT(EM_DIAGRAM):   when (1) R_DepVar0 = R_DepVar0 + 1;
1086824   +   end;
MPRINT(EM_DIAGRAM):   end;
1086825   +end;
MPRINT(EM_DIAGRAM):   end;
1086826   +
1086827   +*** Posterior Probabilities and Predicted Level;
MPRINT(EM_DIAGRAM):   *** Posterior Probabilities and Predicted Level;
1086828   +label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1086829   +label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1086830   +P_DepVar1 = _P0;
MPRINT(EM_DIAGRAM):   P_DepVar1 = _P0;
1086831   +_MAXP = _P0;
MPRINT(EM_DIAGRAM):   _MAXP = _P0;
1086832   +_IY = 1;
MPRINT(EM_DIAGRAM):   _IY = 1;
1086833   +P_DepVar0 = _P1;
MPRINT(EM_DIAGRAM):   P_DepVar0 = _P1;
1086834   +if (_P1 >  _MAXP + 1E-8) then do;
MPRINT(EM_DIAGRAM):   if (_P1 > _MAXP + 1E-8) then do;
1086835   +   _MAXP = _P1;
MPRINT(EM_DIAGRAM):   _MAXP = _P1;
1086836   +   _IY = 2;
MPRINT(EM_DIAGRAM):   _IY = 2;
1086837   +end;
MPRINT(EM_DIAGRAM):   end;
1086838   +I_DepVar = REG12DRF[_IY];
MPRINT(EM_DIAGRAM):   I_DepVar = REG12DRF[_IY];
1086839   +U_DepVar = REG12DRU[_IY];
MPRINT(EM_DIAGRAM):   U_DepVar = REG12DRU[_IY];
1086840   +
1086841   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1086842   +***** end scoring code for regression;
MPRINT(EM_DIAGRAM):   ***** end scoring code for regression;
1086843   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1086844   +* Renaming variables for Reg12;
MPRINT(EM_DIAGRAM):   * Renaming variables for Reg12;
1086845   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1086846   +* Renaming Posterior variables for Reg12;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Reg12;
1086847   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1086848   +drop Reg12_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Reg12_P_DepVar1;
1086849   +Reg12_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Reg12_P_DepVar1 = P_DepVar1;
1086850   +drop Reg12_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Reg12_P_DepVar0;
1086851   +Reg12_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Reg12_P_DepVar0 = P_DepVar0;
1086852   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1086853   +* Renaming _WARN_ variable for Reg12;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Reg12;
1086854   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1086855   +length Reg12_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Reg12_WARN_ $4;
1086856   +drop Reg12_WARN_;
MPRINT(EM_DIAGRAM):   drop Reg12_WARN_;
1086857   +Reg12_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Reg12_WARN_ = _WARN_;
1086858   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1086859   +* Ensmbl12: Scoring Code of model 2 of 10;
MPRINT(EM_DIAGRAM):   * Ensmbl12: Scoring Code of model 2 of 10;
1086860   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1086861   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1086862   +* TOOL: Decision Tree;
MPRINT(EM_DIAGRAM):   * TOOL: Decision Tree;
1086863   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1086864   +* NODE: Tree6;
MPRINT(EM_DIAGRAM):   * NODE: Tree6;
1086865   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1086866   +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
1086867   +******             DECISION TREE SCORING CODE             ******;
MPRINT(EM_DIAGRAM):   ****** DECISION TREE SCORING CODE ******;
1086868   +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
1086869   +
1086870   +******         LENGTHS OF NEW CHARACTER VARIABLES         ******;
MPRINT(EM_DIAGRAM):   ****** LENGTHS OF NEW CHARACTER VARIABLES ******;
1086871   +LENGTH F_DepVar  $   12;
MPRINT(EM_DIAGRAM):   LENGTH F_DepVar $ 12;
1086872   +LENGTH I_DepVar  $   12;
MPRINT(EM_DIAGRAM):   LENGTH I_DepVar $ 12;
1086873   +LENGTH _WARN_  $    4;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $ 4;
1086874   +
1086875   +******              LABELS FOR NEW VARIABLES              ******;
MPRINT(EM_DIAGRAM):   ****** LABELS FOR NEW VARIABLES ******;
1086876   +LABEL _NODE_  = 'Node' ;
MPRINT(EM_DIAGRAM):   LABEL _NODE_ = 'Node' ;
1086877   +LABEL _LEAF_  = 'Leaf' ;
MPRINT(EM_DIAGRAM):   LABEL _LEAF_ = 'Leaf' ;
1086878   +LABEL P_DepVar0  = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   LABEL P_DepVar0 = 'Predicted: DepVar=0' ;
1086879   +LABEL P_DepVar1  = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   LABEL P_DepVar1 = 'Predicted: DepVar=1' ;
1086880   +LABEL Q_DepVar0  = 'Unadjusted P: DepVar=0' ;
MPRINT(EM_DIAGRAM):   LABEL Q_DepVar0 = 'Unadjusted P: DepVar=0' ;
1086881   +LABEL Q_DepVar1  = 'Unadjusted P: DepVar=1' ;
MPRINT(EM_DIAGRAM):   LABEL Q_DepVar1 = 'Unadjusted P: DepVar=1' ;
1086882   +LABEL V_DepVar0  = 'Validated: DepVar=0' ;
MPRINT(EM_DIAGRAM):   LABEL V_DepVar0 = 'Validated: DepVar=0' ;
1086883   +LABEL V_DepVar1  = 'Validated: DepVar=1' ;
MPRINT(EM_DIAGRAM):   LABEL V_DepVar1 = 'Validated: DepVar=1' ;
1086884   +LABEL R_DepVar0  = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   LABEL R_DepVar0 = 'Residual: DepVar=0' ;
1086885   +LABEL R_DepVar1  = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   LABEL R_DepVar1 = 'Residual: DepVar=1' ;
1086886   +LABEL F_DepVar  = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   LABEL F_DepVar = 'From: DepVar' ;
1086887   +LABEL I_DepVar  = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   LABEL I_DepVar = 'Into: DepVar' ;
1086888   +LABEL U_DepVar  = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   LABEL U_DepVar = 'Unnormalized Into: DepVar' ;
1086889   +LABEL _WARN_  = 'Warnings' ;
MPRINT(EM_DIAGRAM):   LABEL _WARN_ = 'Warnings' ;
1086890   +
1086891   +
1086892   +******      TEMPORARY VARIABLES FOR FORMATTED VALUES      ******;
MPRINT(EM_DIAGRAM):   ****** TEMPORARY VARIABLES FOR FORMATTED VALUES ******;
1086893   +LENGTH _ARBFMT_12 $     12; DROP _ARBFMT_12;
MPRINT(EM_DIAGRAM):   LENGTH _ARBFMT_12 $ 12;
MPRINT(EM_DIAGRAM):   DROP _ARBFMT_12;
1086894   +_ARBFMT_12 = ' '; /* Initialize to avoid warning. */
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = ' ';
1086895   +LENGTH _ARBFMT_8 $      8; DROP _ARBFMT_8;
MPRINT(EM_DIAGRAM):   LENGTH _ARBFMT_8 $ 8;
MPRINT(EM_DIAGRAM):   DROP _ARBFMT_8;
1086896   +_ARBFMT_8 = ' '; /* Initialize to avoid warning. */
MPRINT(EM_DIAGRAM):   _ARBFMT_8 = ' ';
1086897   +
1086898   +
1086899   +_ARBFMT_12 = PUT( DepVar , BEST.);
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( DepVar , BEST.);
1086900   + %DMNORMCP( _ARBFMT_12, F_DepVar );
MPRINT(DMNORMCP):   F_DepVar=dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1086901   +
1086902   +******             ASSIGN OBSERVATION TO NODE             ******;
MPRINT(EM_DIAGRAM):   ****** ASSIGN OBSERVATION TO NODE ******;
1086903   +IF  NOT MISSING(AcceptedCmpTotal ) AND
1086904   +                   0.5 <= AcceptedCmpTotal  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(AcceptedCmpTotal ) AND 0.5 <= AcceptedCmpTotal THEN DO;
1086905   +  IF  NOT MISSING(Recency ) AND
1086906   +    Recency  <                 38.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(Recency ) AND Recency < 38.5 THEN DO;
1086907   +    IF  NOT MISSING(AcceptedCmpTotal ) AND
1086908   +                       1.5 <= AcceptedCmpTotal  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(AcceptedCmpTotal ) AND 1.5 <= AcceptedCmpTotal THEN DO;
1086909   +      _NODE_  =                   13;
MPRINT(EM_DIAGRAM):   _NODE_ = 13;
1086910   +      _LEAF_  =                   11;
MPRINT(EM_DIAGRAM):   _LEAF_ = 11;
1086911   +      P_DepVar0  =     0.05263157894736;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.05263157894736;
1086912   +      P_DepVar1  =     0.94736842105263;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.94736842105263;
1086913   +      Q_DepVar0  =     0.05263157894736;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.05263157894736;
1086914   +      Q_DepVar1  =     0.94736842105263;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.94736842105263;
1086915   +      V_DepVar0  =                    0;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0;
1086916   +      V_DepVar1  =                    1;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 1;
1086917   +      I_DepVar  = '1' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '1' ;
1086918   +      U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1086919   +      END;
MPRINT(EM_DIAGRAM):   END;
1086920   +    ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1086921   +      _ARBFMT_8 = PUT( Marital_Status , $8.);
MPRINT(EM_DIAGRAM):   _ARBFMT_8 = PUT( Marital_Status , $8.);
1086922   +       %DMNORMIP( _ARBFMT_8);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
1086923   +      IF _ARBFMT_8 IN ('WIDOW' ,'DIVORCED' ,'SINGLE' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_8 IN ('WIDOW' ,'DIVORCED' ,'SINGLE' ) THEN DO;
1086924   +        _NODE_  =                   25;
MPRINT(EM_DIAGRAM):   _NODE_ = 25;
1086925   +        _LEAF_  =                   10;
MPRINT(EM_DIAGRAM):   _LEAF_ = 10;
1086926   +        P_DepVar0  =      0.2258064516129;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.2258064516129;
1086927   +        P_DepVar1  =     0.77419354838709;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.77419354838709;
1086928   +        Q_DepVar0  =      0.2258064516129;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.2258064516129;
1086929   +        Q_DepVar1  =     0.77419354838709;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.77419354838709;
1086930   +        V_DepVar0  =     0.41935483870967;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.41935483870967;
1086931   +        V_DepVar1  =     0.58064516129032;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.58064516129032;
1086932   +        I_DepVar  = '1' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '1' ;
1086933   +        U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1086934   +        END;
MPRINT(EM_DIAGRAM):   END;
1086935   +      ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1086936   +        IF  NOT MISSING(Kidhome ) AND
1086937   +                           0.5 <= Kidhome  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(Kidhome ) AND 0.5 <= Kidhome THEN DO;
1086938   +          _NODE_  =                   39;
MPRINT(EM_DIAGRAM):   _NODE_ = 39;
1086939   +          _LEAF_  =                    9;
MPRINT(EM_DIAGRAM):   _LEAF_ = 9;
1086940   +          P_DepVar0  =               0.3125;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.3125;
1086941   +          P_DepVar1  =               0.6875;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.6875;
1086942   +          Q_DepVar0  =               0.3125;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.3125;
1086943   +          Q_DepVar1  =               0.6875;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.6875;
1086944   +          V_DepVar0  =     0.23076923076923;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.23076923076923;
1086945   +          V_DepVar1  =     0.76923076923076;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.76923076923076;
1086946   +          I_DepVar  = '1' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '1' ;
1086947   +          U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1086948   +          END;
MPRINT(EM_DIAGRAM):   END;
1086949   +        ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1086950   +          IF  NOT MISSING(RFMstat ) AND
1086951   +                2448.04945054945 <= RFMstat  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(RFMstat ) AND 2448.04945054945 <= RFMstat THEN DO;
1086952   +            _NODE_  =                   51;
MPRINT(EM_DIAGRAM):   _NODE_ = 51;
1086953   +            _LEAF_  =                    8;
MPRINT(EM_DIAGRAM):   _LEAF_ = 8;
1086954   +            P_DepVar0  =     0.23529411764705;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.23529411764705;
1086955   +            P_DepVar1  =     0.76470588235294;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.76470588235294;
1086956   +            Q_DepVar0  =     0.23529411764705;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.23529411764705;
1086957   +            Q_DepVar1  =     0.76470588235294;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.76470588235294;
1086958   +            V_DepVar0  =     0.42857142857142;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.42857142857142;
1086959   +            V_DepVar1  =     0.57142857142857;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.57142857142857;
1086960   +            I_DepVar  = '1' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '1' ;
1086961   +            U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1086962   +            END;
MPRINT(EM_DIAGRAM):   END;
1086963   +          ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1086964   +            _NODE_  =                   50;
MPRINT(EM_DIAGRAM):   _NODE_ = 50;
1086965   +            _LEAF_  =                    7;
MPRINT(EM_DIAGRAM):   _LEAF_ = 7;
1086966   +            P_DepVar0  =      0.8076923076923;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.8076923076923;
1086967   +            P_DepVar1  =     0.19230769230769;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.19230769230769;
1086968   +            Q_DepVar0  =      0.8076923076923;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.8076923076923;
1086969   +            Q_DepVar1  =     0.19230769230769;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.19230769230769;
1086970   +            V_DepVar0  =     0.78260869565217;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.78260869565217;
1086971   +            V_DepVar1  =     0.21739130434782;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.21739130434782;
1086972   +            I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
1086973   +            U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1086974   +            END;
MPRINT(EM_DIAGRAM):   END;
1086975   +          END;
MPRINT(EM_DIAGRAM):   END;
1086976   +        END;
MPRINT(EM_DIAGRAM):   END;
1086977   +      END;
MPRINT(EM_DIAGRAM):   END;
1086978   +    END;
MPRINT(EM_DIAGRAM):   END;
1086979   +  ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1086980   +    IF  NOT MISSING(AcceptedCmpTotal ) AND
1086981   +                       2.5 <= AcceptedCmpTotal  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(AcceptedCmpTotal ) AND 2.5 <= AcceptedCmpTotal THEN DO;
1086982   +      _NODE_  =                   15;
MPRINT(EM_DIAGRAM):   _NODE_ = 15;
1086983   +      _LEAF_  =                   13;
MPRINT(EM_DIAGRAM):   _LEAF_ = 13;
1086984   +      P_DepVar0  =      0.3103448275862;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.3103448275862;
1086985   +      P_DepVar1  =     0.68965517241379;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.68965517241379;
1086986   +      Q_DepVar0  =      0.3103448275862;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.3103448275862;
1086987   +      Q_DepVar1  =     0.68965517241379;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.68965517241379;
1086988   +      V_DepVar0  =     0.33333333333333;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.33333333333333;
1086989   +      V_DepVar1  =     0.66666666666666;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.66666666666666;
1086990   +      I_DepVar  = '1' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '1' ;
1086991   +      U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1086992   +      END;
MPRINT(EM_DIAGRAM):   END;
1086993   +    ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1086994   +      _NODE_  =                   14;
MPRINT(EM_DIAGRAM):   _NODE_ = 14;
1086995   +      _LEAF_  =                   12;
MPRINT(EM_DIAGRAM):   _LEAF_ = 12;
1086996   +      P_DepVar0  =     0.82562277580071;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.82562277580071;
1086997   +      P_DepVar1  =     0.17437722419928;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.17437722419928;
1086998   +      Q_DepVar0  =     0.82562277580071;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.82562277580071;
1086999   +      Q_DepVar1  =     0.17437722419928;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.17437722419928;
1087000   +      V_DepVar0  =     0.81818181818181;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.81818181818181;
1087001   +      V_DepVar1  =     0.18181818181818;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.18181818181818;
1087002   +      I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
1087003   +      U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1087004   +      END;
MPRINT(EM_DIAGRAM):   END;
1087005   +    END;
MPRINT(EM_DIAGRAM):   END;
1087006   +  END;
MPRINT(EM_DIAGRAM):   END;
1087007   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1087008   +  IF  NOT MISSING(Recency ) AND
1087009   +    Recency  <                 32.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(Recency ) AND Recency < 32.5 THEN DO;
1087010   +    IF  NOT MISSING(NumDealsPurchases ) AND
1087011   +                       5.5 <= NumDealsPurchases  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(NumDealsPurchases ) AND 5.5 <= NumDealsPurchases THEN DO;
1087012   +      IF  NOT MISSING(Frq ) AND
1087013   +        Frq  <                 13.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(Frq ) AND Frq < 13.5 THEN DO;
1087014   +        _NODE_  =                   18;
MPRINT(EM_DIAGRAM):   _NODE_ = 18;
1087015   +        _LEAF_  =                    3;
MPRINT(EM_DIAGRAM):   _LEAF_ = 3;
1087016   +        P_DepVar0  =     0.06666666666666;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.06666666666666;
1087017   +        P_DepVar1  =     0.93333333333333;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.93333333333333;
1087018   +        Q_DepVar0  =     0.06666666666666;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.06666666666666;
1087019   +        Q_DepVar1  =     0.93333333333333;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.93333333333333;
1087020   +        V_DepVar0  =                  0.2;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.2;
1087021   +        V_DepVar1  =                  0.8;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.8;
1087022   +        I_DepVar  = '1' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '1' ;
1087023   +        U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1087024   +        END;
MPRINT(EM_DIAGRAM):   END;
1087025   +      ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1087026   +        IF  NOT MISSING(RFMstat ) AND
1087027   +              1513.63146551724 <= RFMstat  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(RFMstat ) AND 1513.63146551724 <= RFMstat THEN DO;
1087028   +          _NODE_  =                   35;
MPRINT(EM_DIAGRAM):   _NODE_ = 35;
1087029   +          _LEAF_  =                    5;
MPRINT(EM_DIAGRAM):   _LEAF_ = 5;
1087030   +          P_DepVar0  =     0.16666666666666;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.16666666666666;
1087031   +          P_DepVar1  =     0.83333333333333;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.83333333333333;
1087032   +          Q_DepVar0  =     0.16666666666666;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.16666666666666;
1087033   +          Q_DepVar1  =     0.83333333333333;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.83333333333333;
1087034   +          V_DepVar0  =                 0.25;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.25;
1087035   +          V_DepVar1  =                 0.75;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.75;
1087036   +          I_DepVar  = '1' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '1' ;
1087037   +          U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1087038   +          END;
MPRINT(EM_DIAGRAM):   END;
1087039   +        ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1087040   +          _NODE_  =                   34;
MPRINT(EM_DIAGRAM):   _NODE_ = 34;
1087041   +          _LEAF_  =                    4;
MPRINT(EM_DIAGRAM):   _LEAF_ = 4;
1087042   +          P_DepVar0  =                0.875;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.875;
1087043   +          P_DepVar1  =                0.125;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.125;
1087044   +          Q_DepVar0  =                0.875;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.875;
1087045   +          Q_DepVar1  =                0.125;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.125;
1087046   +          V_DepVar0  =                  0.7;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.7;
1087047   +          V_DepVar1  =                  0.3;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.3;
1087048   +          I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
1087049   +          U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1087050   +          END;
MPRINT(EM_DIAGRAM):   END;
1087051   +        END;
MPRINT(EM_DIAGRAM):   END;
1087052   +      END;
MPRINT(EM_DIAGRAM):   END;
1087053   +    ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1087054   +      IF  NOT MISSING(RFMstat ) AND
1087055   +            5150.39285714285 <= RFMstat  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(RFMstat ) AND 5150.39285714285 <= RFMstat THEN DO;
1087056   +        _NODE_  =                   17;
MPRINT(EM_DIAGRAM):   _NODE_ = 17;
1087057   +        _LEAF_  =                    2;
MPRINT(EM_DIAGRAM):   _LEAF_ = 2;
1087058   +        P_DepVar0  =     0.38888888888888;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.38888888888888;
1087059   +        P_DepVar1  =     0.61111111111111;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.61111111111111;
1087060   +        Q_DepVar0  =     0.38888888888888;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.38888888888888;
1087061   +        Q_DepVar1  =     0.61111111111111;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.61111111111111;
1087062   +        V_DepVar0  =     0.41666666666666;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.41666666666666;
1087063   +        V_DepVar1  =     0.58333333333333;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.58333333333333;
1087064   +        I_DepVar  = '1' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '1' ;
1087065   +        U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1087066   +        END;
MPRINT(EM_DIAGRAM):   END;
1087067   +      ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1087068   +        _NODE_  =                   16;
MPRINT(EM_DIAGRAM):   _NODE_ = 16;
1087069   +        _LEAF_  =                    1;
MPRINT(EM_DIAGRAM):   _LEAF_ = 1;
1087070   +        P_DepVar0  =     0.84547069271758;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84547069271758;
1087071   +        P_DepVar1  =     0.15452930728241;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15452930728241;
1087072   +        Q_DepVar0  =     0.84547069271758;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.84547069271758;
1087073   +        Q_DepVar1  =     0.15452930728241;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.15452930728241;
1087074   +        V_DepVar0  =     0.81673306772908;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.81673306772908;
1087075   +        V_DepVar1  =     0.18326693227091;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.18326693227091;
1087076   +        I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
1087077   +        U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1087078   +        END;
MPRINT(EM_DIAGRAM):   END;
1087079   +      END;
MPRINT(EM_DIAGRAM):   END;
1087080   +    END;
MPRINT(EM_DIAGRAM):   END;
1087081   +  ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1087082   +    _NODE_  =                    5;
MPRINT(EM_DIAGRAM):   _NODE_ = 5;
1087083   +    _LEAF_  =                    6;
MPRINT(EM_DIAGRAM):   _LEAF_ = 6;
1087084   +    P_DepVar0  =     0.98042414355628;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.98042414355628;
1087085   +    P_DepVar1  =     0.01957585644371;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.01957585644371;
1087086   +    Q_DepVar0  =     0.98042414355628;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.98042414355628;
1087087   +    Q_DepVar1  =     0.01957585644371;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.01957585644371;
1087088   +    V_DepVar0  =     0.98795180722891;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.98795180722891;
1087089   +    V_DepVar1  =     0.01204819277108;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.01204819277108;
1087090   +    I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
1087091   +    U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1087092   +    END;
MPRINT(EM_DIAGRAM):   END;
1087093   +  END;
MPRINT(EM_DIAGRAM):   END;
1087094   +
1087095   +*****  RESIDUALS R_ *************;
MPRINT(EM_DIAGRAM):   ***** RESIDUALS R_ *************;
1087096   +IF  F_DepVar  NE '0'
1087097   +AND F_DepVar  NE '1'  THEN DO;
MPRINT(EM_DIAGRAM):   IF F_DepVar NE '0' AND F_DepVar NE '1' THEN DO;
1087098   +        R_DepVar0  = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
1087099   +        R_DepVar1  = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
1087100   + END;
MPRINT(EM_DIAGRAM):   END;
1087101   + ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1087102   +       R_DepVar0  =  -P_DepVar0 ;
MPRINT(EM_DIAGRAM):   R_DepVar0 = -P_DepVar0 ;
1087103   +       R_DepVar1  =  -P_DepVar1 ;
MPRINT(EM_DIAGRAM):   R_DepVar1 = -P_DepVar1 ;
1087104   +       SELECT( F_DepVar  );
MPRINT(EM_DIAGRAM):   SELECT( F_DepVar );
1087105   +          WHEN( '0'  ) R_DepVar0  = R_DepVar0  +1;
MPRINT(EM_DIAGRAM):   WHEN( '0' ) R_DepVar0 = R_DepVar0 +1;
1087106   +          WHEN( '1'  ) R_DepVar1  = R_DepVar1  +1;
MPRINT(EM_DIAGRAM):   WHEN( '1' ) R_DepVar1 = R_DepVar1 +1;
1087107   +       END;
MPRINT(EM_DIAGRAM):   END;
1087108   + END;
MPRINT(EM_DIAGRAM):   END;
1087109   +
1087110   +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
1087111   +******          END OF DECISION TREE SCORING CODE         ******;
MPRINT(EM_DIAGRAM):   ****** END OF DECISION TREE SCORING CODE ******;
1087112   +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
1087113   +drop _LEAF_;
MPRINT(EM_DIAGRAM):   drop _LEAF_;
1087114   +* Renaming variables for Tree6;
MPRINT(EM_DIAGRAM):   * Renaming variables for Tree6;
1087115   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1087116   +* Renaming Posterior variables for Tree6;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Tree6;
1087117   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1087118   +drop Tree6_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Tree6_P_DepVar1;
1087119   +Tree6_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Tree6_P_DepVar1 = P_DepVar1;
1087120   +drop Tree6_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Tree6_P_DepVar0;
1087121   +Tree6_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Tree6_P_DepVar0 = P_DepVar0;
1087122   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1087123   +* Renaming _WARN_ variable for Tree6;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Tree6;
1087124   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1087125   +length Tree6_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Tree6_WARN_ $4;
1087126   +drop Tree6_WARN_;
MPRINT(EM_DIAGRAM):   drop Tree6_WARN_;
1087127   +Tree6_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Tree6_WARN_ = _WARN_;
1087128   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1087129   +* Ensmbl12: Scoring Code of model 3 of 10;
MPRINT(EM_DIAGRAM):   * Ensmbl12: Scoring Code of model 3 of 10;
1087130   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1087131   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1087132   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
1087133   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1087134   +* NODE: Neural39;
MPRINT(EM_DIAGRAM):   * NODE: Neural39;
1087135   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1087136   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1087137   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1087138   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1087139   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1087140   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1087141   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1087142   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1087143   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1087144   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1087145   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1087146   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1087147   +LENGTH _WARN_ $4
1087148   +      F_DepVar  $ 12
1087149   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1087150   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1087151   +
1087152   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1087153   +
1087154   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1087155   +
1087156   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1087157   +
1087158   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1087159   +
1087160   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1087161   +
1087162   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1087163   +
1087164   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1087165   +
1087166   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1087167   +
1087168   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1087169   +
1087170   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1087171   +
1087172   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1087173   +
1087174   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1087175   +
1087176   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1087177   +
1087178   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1087179   +
1087180   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1087181   +
1087182   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1087183   +
1087184   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1087185   +
1087186   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1087187   +
1087188   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1087189   +
1087190   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1087191   +
1087192   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1087193   +
1087194   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1087195   +
1087196   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1087197   +
1087198   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1087199   +
1087200   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1087201   +
1087202   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1087203   +
1087204   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1087205   +
1087206   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1087207   +
1087208   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1087209   +
1087210   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1087211   +
1087212   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1087213   +
1087214   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1087215   +
1087216   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1087217   +
1087218   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1087219   +
1087220   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1087221   +
1087222   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1087223   +
1087224   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1087225   +
1087226   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1087227   +
1087228   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1087229   +
1087230   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1087231   +
1087232   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1087233   +
1087234   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1087235   +
1087236   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1087237   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1087238   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1087239   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1087240   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1087241   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1087242   +end;
MPRINT(EM_DIAGRAM):   end;
1087243   +else do;
MPRINT(EM_DIAGRAM):   else do;
1087244   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1087245   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1087246   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1087247   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1087248   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1087249   +   end;
MPRINT(EM_DIAGRAM):   end;
1087250   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1087251   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1087252   +   end;
MPRINT(EM_DIAGRAM):   end;
1087253   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1087254   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1087255   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1087256   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1087257   +   end;
MPRINT(EM_DIAGRAM):   end;
1087258   +end;
MPRINT(EM_DIAGRAM):   end;
1087259   +
1087260   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1087261   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1087262   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1087263   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1087264   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1087265   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1087266   +end;
MPRINT(EM_DIAGRAM):   end;
1087267   +else do;
MPRINT(EM_DIAGRAM):   else do;
1087268   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1087269   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1087270   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1087271   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1087272   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1087273   +   end;
MPRINT(EM_DIAGRAM):   end;
1087274   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1087275   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1087276   +   end;
MPRINT(EM_DIAGRAM):   end;
1087277   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1087278   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1087279   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1087280   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1087281   +   end;
MPRINT(EM_DIAGRAM):   end;
1087282   +end;
MPRINT(EM_DIAGRAM):   end;
1087283   +
1087284   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1087285   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1087286   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1087287   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1087288   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1087289   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1087290   +end;
MPRINT(EM_DIAGRAM):   end;
1087291   +else do;
MPRINT(EM_DIAGRAM):   else do;
1087292   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1087293   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1087294   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1087295   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1087296   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1087297   +   end;
MPRINT(EM_DIAGRAM):   end;
1087298   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1087299   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1087300   +   end;
MPRINT(EM_DIAGRAM):   end;
1087301   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1087302   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1087303   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1087304   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1087305   +   end;
MPRINT(EM_DIAGRAM):   end;
1087306   +end;
MPRINT(EM_DIAGRAM):   end;
1087307   +
1087308   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1087309   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1087310   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1087311   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1087312   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1087313   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1087314   +end;
MPRINT(EM_DIAGRAM):   end;
1087315   +else do;
MPRINT(EM_DIAGRAM):   else do;
1087316   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1087317   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1087318   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1087319   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1087320   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1087321   +   end;
MPRINT(EM_DIAGRAM):   end;
1087322   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1087323   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1087324   +   end;
MPRINT(EM_DIAGRAM):   end;
1087325   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1087326   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1087327   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1087328   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1087329   +   end;
MPRINT(EM_DIAGRAM):   end;
1087330   +end;
MPRINT(EM_DIAGRAM):   end;
1087331   +
1087332   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1087333   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1087334   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1087335   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1087336   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1087337   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1087338   +end;
MPRINT(EM_DIAGRAM):   end;
1087339   +else do;
MPRINT(EM_DIAGRAM):   else do;
1087340   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1087341   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1087342   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1087343   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1087344   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1087345   +   end;
MPRINT(EM_DIAGRAM):   end;
1087346   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1087347   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1087348   +   end;
MPRINT(EM_DIAGRAM):   end;
1087349   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1087350   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1087351   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1087352   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1087353   +   end;
MPRINT(EM_DIAGRAM):   end;
1087354   +end;
MPRINT(EM_DIAGRAM):   end;
1087355   +
1087356   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1087357   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1087358   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1087359   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1087360   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1087361   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1087362   +end;
MPRINT(EM_DIAGRAM):   end;
1087363   +else do;
MPRINT(EM_DIAGRAM):   else do;
1087364   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1087365   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1087366   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1087367   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1087368   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1087369   +   end;
MPRINT(EM_DIAGRAM):   end;
1087370   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1087371   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1087372   +   end;
MPRINT(EM_DIAGRAM):   end;
1087373   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1087374   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1087375   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1087376   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1087377   +   end;
MPRINT(EM_DIAGRAM):   end;
1087378   +end;
MPRINT(EM_DIAGRAM):   end;
1087379   +
1087380   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1087381   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1087382   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1087383   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1087384   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1087385   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1087386   +end;
MPRINT(EM_DIAGRAM):   end;
1087387   +else do;
MPRINT(EM_DIAGRAM):   else do;
1087388   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1087389   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1087390   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1087391   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1087392   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1087393   +   end;
MPRINT(EM_DIAGRAM):   end;
1087394   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1087395   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1087396   +   end;
MPRINT(EM_DIAGRAM):   end;
1087397   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1087398   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1087399   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1087400   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1087401   +   end;
MPRINT(EM_DIAGRAM):   end;
1087402   +end;
MPRINT(EM_DIAGRAM):   end;
1087403   +
1087404   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1087405   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
1087406   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1087407   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1087408   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1087409   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1087410   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1087411   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1087412   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1087413   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1087414   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1087415   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1087416   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1087417   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1087418   +end;
MPRINT(EM_DIAGRAM):   end;
1087419   +else do;
MPRINT(EM_DIAGRAM):   else do;
1087420   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1087421   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1087422   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1087423   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1087424   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1087425   +   end;
MPRINT(EM_DIAGRAM):   end;
1087426   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1087427   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1087428   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1087429   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1087430   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1087431   +   end;
MPRINT(EM_DIAGRAM):   end;
1087432   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1087433   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1087434   +   end;
MPRINT(EM_DIAGRAM):   end;
1087435   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1087436   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1087437   +   end;
MPRINT(EM_DIAGRAM):   end;
1087438   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1087439   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1087440   +   end;
MPRINT(EM_DIAGRAM):   end;
1087441   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1087442   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1087443   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1087444   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1087445   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1087446   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1087447   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1087448   +   end;
MPRINT(EM_DIAGRAM):   end;
1087449   +end;
MPRINT(EM_DIAGRAM):   end;
1087450   +
1087451   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1087452   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1087453   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
1087454   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1087455   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1087456   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1087457   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1087458   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1087459   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1087460   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1087461   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1087462   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1087463   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1087464   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1087465   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1087466   +end;
MPRINT(EM_DIAGRAM):   end;
1087467   +else do;
MPRINT(EM_DIAGRAM):   else do;
1087468   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1087469   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1087470   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1087471   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1087472   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1087473   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1087474   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1087475   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1087476   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1087477   +         end;
MPRINT(EM_DIAGRAM):   end;
1087478   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1087479   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1087480   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1087481   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1087482   +            end;
MPRINT(EM_DIAGRAM):   end;
1087483   +         end;
MPRINT(EM_DIAGRAM):   end;
1087484   +      end;
MPRINT(EM_DIAGRAM):   end;
1087485   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1087486   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1087487   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1087488   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1087489   +         end;
MPRINT(EM_DIAGRAM):   end;
1087490   +      end;
MPRINT(EM_DIAGRAM):   end;
1087491   +   end;
MPRINT(EM_DIAGRAM):   end;
1087492   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1087493   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1087494   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1087495   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1087496   +      end;
MPRINT(EM_DIAGRAM):   end;
1087497   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1087498   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1087499   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1087500   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1087501   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1087502   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1087503   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1087504   +         end;
MPRINT(EM_DIAGRAM):   end;
1087505   +      end;
MPRINT(EM_DIAGRAM):   end;
1087506   +   end;
MPRINT(EM_DIAGRAM):   end;
1087507   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1087508   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1087509   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1087510   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1087511   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1087512   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1087513   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1087514   +   end;
MPRINT(EM_DIAGRAM):   end;
1087515   +end;
MPRINT(EM_DIAGRAM):   end;
1087516   +
1087517   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1087518   +*** Checking missing input Interval
1087519   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1087520   +
1087521   +IF NMISS(
1087522   +   AcceptedCmpTotal ,
1087523   +   Age ,
1087524   +   Frq ,
1087525   +   Income ,
1087526   +   Kidhome ,
1087527   +   MntFishProducts ,
1087528   +   MntFruits ,
1087529   +   MntGoldProds ,
1087530   +   MntSweetProducts ,
1087531   +   MonthsAsCustomer ,
1087532   +   NumDealsPurchases ,
1087533   +   NumWebVisitsMonth ,
1087534   +   RFMstat ,
1087535   +   RMntFrq ,
1087536   +   Recency ,
1087537   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , 
MntFishProducts , MntFruits , MntGoldProds , MntSweetProducts , MonthsAsCustomer , 
NumDealsPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , Teenhome ) THEN DO;
1087538   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1087539   +
1087540   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1087541   +END;
MPRINT(EM_DIAGRAM):   END;
1087542   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1087543   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1087544   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1087545   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1087546   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1087547   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1087548   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1087549   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1087550   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1087551   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1087552   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1087553   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1087554   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1087555   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1087556   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1087557   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1087558   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1087559   +   S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
1087560   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
1087561   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1087562   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1087563   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1087564   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1087565   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1087566   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1087567   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1087568   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1087569   +END;
MPRINT(EM_DIAGRAM):   END;
1087570   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1087571   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1087572   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1087573   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1087574   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1087575   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1087576   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1087577   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1087578   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1087579   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1087580   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1087581   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1087582   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1087583   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1087584   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1087585   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1087586   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1087587   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1087588   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1087589   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1087590   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1087591   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1087592   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1087593   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1087594   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1087595   +   ELSE S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
1087596   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
1087597   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1087598   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1087599   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1087600   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1087601   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1087602   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1087603   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1087604   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1087605   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1087606   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1087607   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1087608   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1087609   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1087610   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1087611   +END;
MPRINT(EM_DIAGRAM):   END;
1087612   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1087613   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1087614   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1087615   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1087616   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1087617   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1087618   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1087619   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1087620   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1087621   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1087622   +   H11  =    -0.61879380889194 * S_AcceptedCmpTotal  +    -0.09795242603477 *
1087623   +        S_Age  +     0.36103250822255 * S_Frq  +     0.08899052794394 *
1087624   +        S_Income  +     0.25564250606874 * S_Kidhome
1087625   +          +    -0.02786629817134 * S_MntFishProducts
1087626   +          +     0.13529614728112 * S_MntFruits  +     0.19622442891821 *
1087627   +        S_MntGoldProds  +     0.14107929478218 * S_MntSweetProducts
1087628   +          +    -0.29199173107007 * S_MonthsAsCustomer
1087629   +          +    -0.59759788962473 * S_NumDealsPurchases
1087630   +          +     -0.3788422274482 * S_NumWebVisitsMonth
1087631   +          +    -0.06743318112874 * S_RFMstat  +      0.2833264895355 *
1087632   +        S_RMntFrq  +     0.70854972350771 * S_Recency
1087633   +          +     0.11936327488967 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = -0.61879380889194 * S_AcceptedCmpTotal + -0.09795242603477 * S_Age 
+ 0.36103250822255 * S_Frq + 0.08899052794394 * S_Income + 0.25564250606874 * S_Kidhome + 
-0.02786629817134 * S_MntFishProducts + 0.13529614728112 * S_MntFruits + 0.19622442891821 * 
S_MntGoldProds + 0.14107929478218 * S_MntSweetProducts + -0.29199173107007 * 
S_MonthsAsCustomer + -0.59759788962473 * S_NumDealsPurchases + -0.3788422274482 * 
S_NumWebVisitsMonth + -0.06743318112874 * S_RFMstat + 0.2833264895355 * S_RMntFrq + 
0.70854972350771 * S_Recency + 0.11936327488967 * S_Teenhome ;
1087634   +   H12  =    -0.18766983828727 * S_AcceptedCmpTotal  +       0.517042669033 *
1087635   +        S_Age  +     1.02262972068559 * S_Frq  +     0.38007459198406 *
1087636   +        S_Income  +     0.07328887474153 * S_Kidhome
1087637   +          +    -0.23284570213322 * S_MntFishProducts
1087638   +          +     0.02838864374624 * S_MntFruits  +    -0.07574618602845 *
1087639   +        S_MntGoldProds  +    -0.41131707239504 * S_MntSweetProducts
1087640   +          +     0.29669594858185 * S_MonthsAsCustomer
1087641   +          +    -0.51220833966596 * S_NumDealsPurchases
1087642   +          +    -0.72293271444385 * S_NumWebVisitsMonth
1087643   +          +    -0.20562458645044 * S_RFMstat  +    -0.52495075768839 *
1087644   +        S_RMntFrq  +      1.0795232419354 * S_Recency
1087645   +          +    -0.18997953891579 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -0.18766983828727 * S_AcceptedCmpTotal + 0.517042669033 * S_Age + 
1.02262972068559 * S_Frq + 0.38007459198406 * S_Income + 0.07328887474153 * S_Kidhome + 
-0.23284570213322 * S_MntFishProducts + 0.02838864374624 * S_MntFruits + -0.07574618602845 * 
S_MntGoldProds + -0.41131707239504 * S_MntSweetProducts + 0.29669594858185 * 
S_MonthsAsCustomer + -0.51220833966596 * S_NumDealsPurchases + -0.72293271444385 * 
S_NumWebVisitsMonth + -0.20562458645044 * S_RFMstat + -0.52495075768839 * S_RMntFrq + 
1.0795232419354 * S_Recency + -0.18997953891579 * S_Teenhome ;
1087646   +   H13  =    -0.49159501579895 * S_AcceptedCmpTotal  +    -0.16293971978781 *
1087647   +        S_Age  +    -0.02977525702894 * S_Frq  +    -0.78728568889664 *
1087648   +        S_Income  +    -0.68209910558389 * S_Kidhome
1087649   +          +     0.23366174254474 * S_MntFishProducts
1087650   +          +    -0.08764688950673 * S_MntFruits  +    -0.38895649975347 *
1087651   +        S_MntGoldProds  +     0.02270546080284 * S_MntSweetProducts
1087652   +          +    -0.05759532204753 * S_MonthsAsCustomer
1087653   +          +    -0.30170163047261 * S_NumDealsPurchases
1087654   +          +    -0.57711437834603 * S_NumWebVisitsMonth
1087655   +          +    -0.09851659878757 * S_RFMstat  +    -0.20102310575519 *
1087656   +        S_RMntFrq  +     0.80994896921796 * S_Recency
1087657   +          +     0.32766576826101 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = -0.49159501579895 * S_AcceptedCmpTotal + -0.16293971978781 * S_Age 
+ -0.02977525702894 * S_Frq + -0.78728568889664 * S_Income + -0.68209910558389 * S_Kidhome + 
0.23366174254474 * S_MntFishProducts + -0.08764688950673 * S_MntFruits + -0.38895649975347 * 
S_MntGoldProds + 0.02270546080284 * S_MntSweetProducts + -0.05759532204753 * 
S_MonthsAsCustomer + -0.30170163047261 * S_NumDealsPurchases + -0.57711437834603 * 
S_NumWebVisitsMonth + -0.09851659878757 * S_RFMstat + -0.20102310575519 * S_RMntFrq + 
0.80994896921796 * S_Recency + 0.32766576826101 * S_Teenhome ;
1087658   +   H14  =    -0.11122937165995 * S_AcceptedCmpTotal  +     0.06859829254058 *
1087659   +        S_Age  +    -0.60966071706708 * S_Frq  +    -1.00949681880427 *
1087660   +        S_Income  +     0.67855138873039 * S_Kidhome
1087661   +          +    -0.05297743313476 * S_MntFishProducts
1087662   +          +     0.21613302257797 * S_MntFruits  +     0.03843790921347 *
1087663   +        S_MntGoldProds  +     0.25543771093558 * S_MntSweetProducts
1087664   +          +    -0.15817861274553 * S_MonthsAsCustomer
1087665   +          +     0.25133066233725 * S_NumDealsPurchases
1087666   +          +     0.08802636187267 * S_NumWebVisitsMonth
1087667   +          +    -0.04637957487976 * S_RFMstat  +    -0.31656429052936 *
1087668   +        S_RMntFrq  +      0.7228272496527 * S_Recency
1087669   +          +     0.58629319995218 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = -0.11122937165995 * S_AcceptedCmpTotal + 0.06859829254058 * S_Age 
+ -0.60966071706708 * S_Frq + -1.00949681880427 * S_Income + 0.67855138873039 * S_Kidhome + 
-0.05297743313476 * S_MntFishProducts + 0.21613302257797 * S_MntFruits + 0.03843790921347 * 
S_MntGoldProds + 0.25543771093558 * S_MntSweetProducts + -0.15817861274553 * 
S_MonthsAsCustomer + 0.25133066233725 * S_NumDealsPurchases + 0.08802636187267 * 
S_NumWebVisitsMonth + -0.04637957487976 * S_RFMstat + -0.31656429052936 * S_RMntFrq + 
0.7228272496527 * S_Recency + 0.58629319995218 * S_Teenhome ;
1087670   +   H11  = H11  +     0.23190135069025 * AcceptedCmp10
1087671   +          +     0.04686213078143 * AcceptedCmp20  +     0.17662818955575 *
1087672   +        AcceptedCmp30  +     0.03498741067378 * AcceptedCmp40
1087673   +          +     0.61042747626768 * AcceptedCmp50  +    -0.12810871081838 *
1087674   +        Complain0  +     0.03047400476944 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.23190135069025 * AcceptedCmp10 + 0.04686213078143 * 
AcceptedCmp20 + 0.17662818955575 * AcceptedCmp30 + 0.03498741067378 * AcceptedCmp40 + 
0.61042747626768 * AcceptedCmp50 + -0.12810871081838 * Complain0 + 0.03047400476944 * 
HigherEducationBinary0 ;
1087675   +   H12  = H12  +     0.53873807658752 * AcceptedCmp10
1087676   +          +     0.29840055428915 * AcceptedCmp20  +     0.52740574468702 *
1087677   +        AcceptedCmp30  +     0.27242279016627 * AcceptedCmp40
1087678   +          +     0.07126269343217 * AcceptedCmp50  +    -0.14631570192286 *
1087679   +        Complain0  +     0.16629352334811 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.53873807658752 * AcceptedCmp10 + 0.29840055428915 * 
AcceptedCmp20 + 0.52740574468702 * AcceptedCmp30 + 0.27242279016627 * AcceptedCmp40 + 
0.07126269343217 * AcceptedCmp50 + -0.14631570192286 * Complain0 + 0.16629352334811 * 
HigherEducationBinary0 ;
1087680   +   H13  = H13  +     0.09118941740461 * AcceptedCmp10
1087681   +          +     0.04178457860358 * AcceptedCmp20  +     0.48487479920901 *
1087682   +        AcceptedCmp30  +    -0.80910928087974 * AcceptedCmp40
1087683   +          +      0.4667831985075 * AcceptedCmp50  +    -0.29601289494349 *
1087684   +        Complain0  +     0.10690006738431 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.09118941740461 * AcceptedCmp10 + 0.04178457860358 * 
AcceptedCmp20 + 0.48487479920901 * AcceptedCmp30 + -0.80910928087974 * AcceptedCmp40 + 
0.4667831985075 * AcceptedCmp50 + -0.29601289494349 * Complain0 + 0.10690006738431 * 
HigherEducationBinary0 ;
1087685   +   H14  = H14  +     0.21382858049752 * AcceptedCmp10
1087686   +          +     0.12652392800261 * AcceptedCmp20  +     0.30403608200617 *
1087687   +        AcceptedCmp30  +     0.51966382166521 * AcceptedCmp40
1087688   +          +    -0.14518145187533 * AcceptedCmp50  +     0.27045295957801 *
1087689   +        Complain0  +    -0.49307163723406 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.21382858049752 * AcceptedCmp10 + 0.12652392800261 * 
AcceptedCmp20 + 0.30403608200617 * AcceptedCmp30 + 0.51966382166521 * AcceptedCmp40 + 
-0.14518145187533 * AcceptedCmp50 + 0.27045295957801 * Complain0 + -0.49307163723406 * 
HigherEducationBinary0 ;
1087690   +   H11  = H11  +    -0.15292649085097 * Education2n_Cycle
1087691   +          +     0.00016605452926 * EducationBasic  +    -0.04208965271063 *
1087692   +        EducationGraduation  +    -0.05433922630608 * EducationMaster
1087693   +          +      0.0528075343138 * Marital_StatusDivorced
1087694   +          +    -0.08269844855231 * Marital_StatusMarried
1087695   +          +     0.43411839786169 * Marital_StatusSingle
1087696   +          +     0.38324605489754 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.15292649085097 * Education2n_Cycle + 0.00016605452926 * 
EducationBasic + -0.04208965271063 * EducationGraduation + -0.05433922630608 * EducationMaster 
+ 0.0528075343138 * Marital_StatusDivorced + -0.08269844855231 * Marital_StatusMarried + 
0.43411839786169 * Marital_StatusSingle + 0.38324605489754 * Marital_StatusTogether ;
1087697   +   H12  = H12  +      0.3082578019648 * Education2n_Cycle
1087698   +          +    -0.01380127751108 * EducationBasic  +    -0.11076736066311 *
1087699   +        EducationGraduation  +     -0.1586948328241 * EducationMaster
1087700   +          +    -0.12842912869907 * Marital_StatusDivorced
1087701   +          +     0.11838814754642 * Marital_StatusMarried
1087702   +          +     0.01184261900927 * Marital_StatusSingle
1087703   +          +     0.14066273070318 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.3082578019648 * Education2n_Cycle + -0.01380127751108 * 
EducationBasic + -0.11076736066311 * EducationGraduation + -0.1586948328241 * EducationMaster 
+ -0.12842912869907 * Marital_StatusDivorced + 0.11838814754642 * Marital_StatusMarried + 
0.01184261900927 * Marital_StatusSingle + 0.14066273070318 * Marital_StatusTogether ;
1087704   +   H13  = H13  +     0.02861254390946 * Education2n_Cycle
1087705   +          +      0.4349807830691 * EducationBasic  +    -0.31346964692246 *
1087706   +        EducationGraduation  +      0.0620488761517 * EducationMaster
1087707   +          +    -0.22110722201709 * Marital_StatusDivorced
1087708   +          +      0.1355339029843 * Marital_StatusMarried
1087709   +          +    -0.33157273596382 * Marital_StatusSingle
1087710   +          +    -0.19725820483372 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.02861254390946 * Education2n_Cycle + 0.4349807830691 * 
EducationBasic + -0.31346964692246 * EducationGraduation + 0.0620488761517 * EducationMaster + 
-0.22110722201709 * Marital_StatusDivorced + 0.1355339029843 * Marital_StatusMarried + 
-0.33157273596382 * Marital_StatusSingle + -0.19725820483372 * Marital_StatusTogether ;
1087711   +   H14  = H14  +    -0.15196350137644 * Education2n_Cycle
1087712   +          +     0.11143610044897 * EducationBasic  +    -0.23356442851658 *
1087713   +        EducationGraduation  +     0.26881272673711 * EducationMaster
1087714   +          +    -0.21663247467797 * Marital_StatusDivorced
1087715   +          +     1.11468603898508 * Marital_StatusMarried
1087716   +          +    -0.84252388146943 * Marital_StatusSingle
1087717   +          +     0.91707021954171 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.15196350137644 * Education2n_Cycle + 0.11143610044897 * 
EducationBasic + -0.23356442851658 * EducationGraduation + 0.26881272673711 * EducationMaster 
+ -0.21663247467797 * Marital_StatusDivorced + 1.11468603898508 * Marital_StatusMarried + 
-0.84252388146943 * Marital_StatusSingle + 0.91707021954171 * Marital_StatusTogether ;
1087718   +   H11  =     0.69752617990443 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 0.69752617990443 + H11 ;
1087719   +   H12  =     0.88932226025287 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.88932226025287 + H12 ;
1087720   +   H13  =    -0.23351093325425 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.23351093325425 + H13 ;
1087721   +   H14  =      1.5565991209041 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 1.5565991209041 + H14 ;
1087722   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1087723   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1087724   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1087725   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1087726   +END;
MPRINT(EM_DIAGRAM):   END;
1087727   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1087728   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1087729   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1087730   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1087731   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1087732   +END;
MPRINT(EM_DIAGRAM):   END;
1087733   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1087734   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1087735   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1087736   +
1087737   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1087738   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1087739   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1087740   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1087741   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1087742   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1087743   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1087744   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1087745   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1087746   +end;
MPRINT(EM_DIAGRAM):   end;
1087747   +else do;
MPRINT(EM_DIAGRAM):   else do;
1087748   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1087749   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1087750   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1087751   +   end;
MPRINT(EM_DIAGRAM):   end;
1087752   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1087753   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1087754   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1087755   +   end;
MPRINT(EM_DIAGRAM):   end;
1087756   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1087757   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1087758   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1087759   +   end;
MPRINT(EM_DIAGRAM):   end;
1087760   +end;
MPRINT(EM_DIAGRAM):   end;
1087761   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1087762   +   P_DepVar1  =    -1.10683009838286 * H11  +    -1.85294488833715 * H12
1087763   +          +    -2.73624761150933 * H13  +    -2.51103548718704 * H14 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.10683009838286 * H11 + -1.85294488833715 * H12 + 
-2.73624761150933 * H13 + -2.51103548718704 * H14 ;
1087764   +   P_DepVar1  =    -0.86309949021709 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.86309949021709 + P_DepVar1 ;
1087765   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1087766   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1087767   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1087768   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1087769   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1087770   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1087771   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1087772   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1087773   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1087774   +END;
MPRINT(EM_DIAGRAM):   END;
1087775   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1087776   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1087777   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1087778   +END;
MPRINT(EM_DIAGRAM):   END;
1087779   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1087780   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1087781   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1087782   +END;
MPRINT(EM_DIAGRAM):   END;
1087783   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1087784   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1087785   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1087786   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1087787   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1087788   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1087789   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1087790   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1087791   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1087792   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1087793   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1087794   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1087795   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1087796   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1087797   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1087798   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1087799   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1087800   +END;
MPRINT(EM_DIAGRAM):   END;
1087801   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1087802   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1087803   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1087804   +drop
1087805   +H11
1087806   +H12
1087807   +H13
1087808   +H14
1087809   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 ;
1087810   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1087811   +* Renaming variables for Neural39;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural39;
1087812   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1087813   +* Renaming Posterior variables for Neural39;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural39;
1087814   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1087815   +drop Neural39_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural39_P_DepVar1;
1087816   +Neural39_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural39_P_DepVar1 = P_DepVar1;
1087817   +drop Neural39_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural39_P_DepVar0;
1087818   +Neural39_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural39_P_DepVar0 = P_DepVar0;
1087819   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1087820   +* Renaming _WARN_ variable for Neural39;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural39;
1087821   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1087822   +length Neural39_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural39_WARN_ $4;
1087823   +drop Neural39_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural39_WARN_;
1087824   +Neural39_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural39_WARN_ = _WARN_;
1087825   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1087826   +* Ensmbl12: Scoring Code of model 4 of 10;
MPRINT(EM_DIAGRAM):   * Ensmbl12: Scoring Code of model 4 of 10;
1087827   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1087828   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1087829   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
1087830   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1087831   +* NODE: Neural42;
MPRINT(EM_DIAGRAM):   * NODE: Neural42;
1087832   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1087833   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1087834   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1087835   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1087836   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1087837   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1087838   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1087839   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1087840   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1087841   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1087842   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1087843   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1087844   +LENGTH _WARN_ $4
1087845   +      F_DepVar  $ 12
1087846   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1087847   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1087848   +
1087849   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1087850   +
1087851   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1087852   +
1087853   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1087854   +
1087855   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1087856   +
1087857   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1087858   +
1087859   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1087860   +
1087861   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1087862   +
1087863   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1087864   +
1087865   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1087866   +
1087867   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1087868   +
1087869   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1087870   +
1087871   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1087872   +
1087873   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1087874   +
1087875   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1087876   +
1087877   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1087878   +
1087879   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1087880   +
1087881   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1087882   +
1087883   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1087884   +
1087885   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1087886   +
1087887   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1087888   +
1087889   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1087890   +
1087891   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1087892   +
1087893   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1087894   +
1087895   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1087896   +
1087897   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1087898   +
1087899   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1087900   +
1087901   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1087902   +
1087903   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1087904   +
1087905   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1087906   +
1087907   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1087908   +
1087909   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1087910   +
1087911   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1087912   +
1087913   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1087914   +
1087915   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1087916   +
1087917   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1087918   +
1087919   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1087920   +
1087921   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1087922   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1087923   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1087924   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1087925   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1087926   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1087927   +end;
MPRINT(EM_DIAGRAM):   end;
1087928   +else do;
MPRINT(EM_DIAGRAM):   else do;
1087929   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1087930   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1087931   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1087932   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1087933   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1087934   +   end;
MPRINT(EM_DIAGRAM):   end;
1087935   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1087936   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1087937   +   end;
MPRINT(EM_DIAGRAM):   end;
1087938   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1087939   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1087940   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1087941   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1087942   +   end;
MPRINT(EM_DIAGRAM):   end;
1087943   +end;
MPRINT(EM_DIAGRAM):   end;
1087944   +
1087945   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1087946   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1087947   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1087948   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1087949   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1087950   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1087951   +end;
MPRINT(EM_DIAGRAM):   end;
1087952   +else do;
MPRINT(EM_DIAGRAM):   else do;
1087953   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1087954   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1087955   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1087956   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1087957   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1087958   +   end;
MPRINT(EM_DIAGRAM):   end;
1087959   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1087960   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1087961   +   end;
MPRINT(EM_DIAGRAM):   end;
1087962   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1087963   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1087964   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1087965   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1087966   +   end;
MPRINT(EM_DIAGRAM):   end;
1087967   +end;
MPRINT(EM_DIAGRAM):   end;
1087968   +
1087969   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1087970   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1087971   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1087972   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1087973   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1087974   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1087975   +end;
MPRINT(EM_DIAGRAM):   end;
1087976   +else do;
MPRINT(EM_DIAGRAM):   else do;
1087977   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1087978   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1087979   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1087980   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1087981   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1087982   +   end;
MPRINT(EM_DIAGRAM):   end;
1087983   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1087984   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1087985   +   end;
MPRINT(EM_DIAGRAM):   end;
1087986   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1087987   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1087988   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1087989   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1087990   +   end;
MPRINT(EM_DIAGRAM):   end;
1087991   +end;
MPRINT(EM_DIAGRAM):   end;
1087992   +
1087993   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1087994   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1087995   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1087996   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1087997   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1087998   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1087999   +end;
MPRINT(EM_DIAGRAM):   end;
1088000   +else do;
MPRINT(EM_DIAGRAM):   else do;
1088001   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1088002   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1088003   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1088004   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1088005   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1088006   +   end;
MPRINT(EM_DIAGRAM):   end;
1088007   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1088008   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1088009   +   end;
MPRINT(EM_DIAGRAM):   end;
1088010   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1088011   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1088012   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1088013   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1088014   +   end;
MPRINT(EM_DIAGRAM):   end;
1088015   +end;
MPRINT(EM_DIAGRAM):   end;
1088016   +
1088017   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1088018   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1088019   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1088020   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1088021   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1088022   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1088023   +end;
MPRINT(EM_DIAGRAM):   end;
1088024   +else do;
MPRINT(EM_DIAGRAM):   else do;
1088025   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1088026   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1088027   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1088028   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1088029   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1088030   +   end;
MPRINT(EM_DIAGRAM):   end;
1088031   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1088032   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1088033   +   end;
MPRINT(EM_DIAGRAM):   end;
1088034   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1088035   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1088036   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1088037   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1088038   +   end;
MPRINT(EM_DIAGRAM):   end;
1088039   +end;
MPRINT(EM_DIAGRAM):   end;
1088040   +
1088041   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1088042   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1088043   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1088044   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1088045   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1088046   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1088047   +end;
MPRINT(EM_DIAGRAM):   end;
1088048   +else do;
MPRINT(EM_DIAGRAM):   else do;
1088049   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1088050   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1088051   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1088052   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1088053   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1088054   +   end;
MPRINT(EM_DIAGRAM):   end;
1088055   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1088056   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1088057   +   end;
MPRINT(EM_DIAGRAM):   end;
1088058   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1088059   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1088060   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1088061   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1088062   +   end;
MPRINT(EM_DIAGRAM):   end;
1088063   +end;
MPRINT(EM_DIAGRAM):   end;
1088064   +
1088065   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1088066   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1088067   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1088068   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1088069   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1088070   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1088071   +end;
MPRINT(EM_DIAGRAM):   end;
1088072   +else do;
MPRINT(EM_DIAGRAM):   else do;
1088073   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1088074   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1088075   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1088076   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1088077   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1088078   +   end;
MPRINT(EM_DIAGRAM):   end;
1088079   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1088080   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1088081   +   end;
MPRINT(EM_DIAGRAM):   end;
1088082   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1088083   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1088084   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1088085   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1088086   +   end;
MPRINT(EM_DIAGRAM):   end;
1088087   +end;
MPRINT(EM_DIAGRAM):   end;
1088088   +
1088089   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1088090   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
1088091   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1088092   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1088093   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1088094   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1088095   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1088096   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1088097   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1088098   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1088099   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1088100   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1088101   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1088102   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1088103   +end;
MPRINT(EM_DIAGRAM):   end;
1088104   +else do;
MPRINT(EM_DIAGRAM):   else do;
1088105   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1088106   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1088107   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1088108   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1088109   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1088110   +   end;
MPRINT(EM_DIAGRAM):   end;
1088111   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1088112   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1088113   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1088114   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1088115   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1088116   +   end;
MPRINT(EM_DIAGRAM):   end;
1088117   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1088118   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1088119   +   end;
MPRINT(EM_DIAGRAM):   end;
1088120   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1088121   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1088122   +   end;
MPRINT(EM_DIAGRAM):   end;
1088123   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1088124   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1088125   +   end;
MPRINT(EM_DIAGRAM):   end;
1088126   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1088127   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1088128   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1088129   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1088130   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1088131   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1088132   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1088133   +   end;
MPRINT(EM_DIAGRAM):   end;
1088134   +end;
MPRINT(EM_DIAGRAM):   end;
1088135   +
1088136   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1088137   +*** Checking missing input Interval
1088138   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1088139   +
1088140   +IF NMISS(
1088141   +   AcceptedCmpTotal ,
1088142   +   Age ,
1088143   +   Frq ,
1088144   +   Income ,
1088145   +   Kidhome ,
1088146   +   Mnt ,
1088147   +   MntFishProducts ,
1088148   +   MntFruits ,
1088149   +   MntGoldProds ,
1088150   +   MntSweetProducts ,
1088151   +   MonthsAsCustomer ,
1088152   +   NumDealsPurchases ,
1088153   +   NumWebVisitsMonth ,
1088154   +   RFMstat ,
1088155   +   RMntFrq ,
1088156   +   Recency ,
1088157   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntSweetProducts , MonthsAsCustomer , 
NumDealsPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , Teenhome ) THEN DO;
1088158   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1088159   +
1088160   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1088161   +END;
MPRINT(EM_DIAGRAM):   END;
1088162   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1088163   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1088164   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1088165   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1088166   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1088167   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1088168   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1088169   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1088170   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1088171   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1088172   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1088173   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1088174   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1088175   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1088176   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1088177   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1088178   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1088179   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1088180   +   S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
1088181   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
1088182   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1088183   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1088184   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1088185   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1088186   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1088187   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1088188   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1088189   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1088190   +END;
MPRINT(EM_DIAGRAM):   END;
1088191   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1088192   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1088193   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1088194   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1088195   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1088196   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1088197   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1088198   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1088199   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1088200   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1088201   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1088202   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1088203   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1088204   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1088205   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1088206   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1088207   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1088208   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1088209   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1088210   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1088211   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1088212   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1088213   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1088214   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1088215   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1088216   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1088217   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1088218   +   ELSE S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
1088219   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
1088220   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1088221   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1088222   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1088223   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1088224   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1088225   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1088226   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1088227   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1088228   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1088229   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1088230   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1088231   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1088232   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1088233   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1088234   +END;
MPRINT(EM_DIAGRAM):   END;
1088235   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1088236   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1088237   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1088238   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1088239   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1088240   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1088241   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1088242   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1088243   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1088244   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1088245   +   H11  =       0.143162011359 * S_AcceptedCmpTotal  +    -0.01147578601065 *
1088246   +        S_Age  +    -0.05169955507594 * S_Frq  +      0.0608752061961 *
1088247   +        S_Income  +    -0.00693057472767 * S_Kidhome
1088248   +          +     0.05071822608697 * S_Mnt  +    -0.00418474163671 *
1088249   +        S_MntFishProducts  +    -0.00868585259854 * S_MntFruits
1088250   +          +     0.00371185422632 * S_MntGoldProds  +    -0.00953369321279 *
1088251   +        S_MntSweetProducts  +     0.00364165525253 * S_MonthsAsCustomer
1088252   +          +     0.04099251994623 * S_NumDealsPurchases
1088253   +          +     0.03811258944826 * S_NumWebVisitsMonth
1088254   +          +     0.01010786402462 * S_RFMstat  +    -0.01356300667842 *
1088255   +        S_RMntFrq  +     -0.0946537245815 * S_Recency
1088256   +          +    -0.04221477681001 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.143162011359 * S_AcceptedCmpTotal + -0.01147578601065 * S_Age + 
-0.05169955507594 * S_Frq + 0.0608752061961 * S_Income + -0.00693057472767 * S_Kidhome + 
0.05071822608697 * S_Mnt + -0.00418474163671 * S_MntFishProducts + -0.00868585259854 * 
S_MntFruits + 0.00371185422632 * S_MntGoldProds + -0.00953369321279 * S_MntSweetProducts + 
0.00364165525253 * S_MonthsAsCustomer + 0.04099251994623 * S_NumDealsPurchases + 
0.03811258944826 * S_NumWebVisitsMonth + 0.01010786402462 * S_RFMstat + -0.01356300667842 * 
S_RMntFrq + -0.0946537245815 * S_Recency + -0.04221477681001 * S_Teenhome ;
1088257   +   H11  = H11  +     0.05665985483083 * AcceptedCmp10
1088258   +          +     0.07738044644174 * AcceptedCmp20  +     0.03664267575532 *
1088259   +        AcceptedCmp30  +     0.07960267580286 * AcceptedCmp40
1088260   +          +     0.05680904334063 * AcceptedCmp50  +     0.03195731295007 *
1088261   +        Complain0  +     0.02227933507918 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.05665985483083 * AcceptedCmp10 + 0.07738044644174 * 
AcceptedCmp20 + 0.03664267575532 * AcceptedCmp30 + 0.07960267580286 * AcceptedCmp40 + 
0.05680904334063 * AcceptedCmp50 + 0.03195731295007 * Complain0 + 0.02227933507918 * 
HigherEducationBinary0 ;
1088262   +   H11  = H11  +     -0.0196308800544 * Education2n_Cycle
1088263   +          +    -0.03243102288942 * EducationBasic  +     0.03338744363865 *
1088264   +        EducationGraduation  +      0.0055581758102 * EducationMaster ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.0196308800544 * Education2n_Cycle + -0.03243102288942 * 
EducationBasic + 0.03338744363865 * EducationGraduation + 0.0055581758102 * EducationMaster ;
1088265   +   H11  =     0.00486262152917 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 0.00486262152917 + H11 ;
1088266   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1088267   +END;
MPRINT(EM_DIAGRAM):   END;
1088268   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1088269   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1088270   +END;
MPRINT(EM_DIAGRAM):   END;
1088271   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1088272   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1088273   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1088274   +
1088275   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1088276   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1088277   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1088278   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1088279   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1088280   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1088281   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1088282   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1088283   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1088284   +end;
MPRINT(EM_DIAGRAM):   end;
1088285   +else do;
MPRINT(EM_DIAGRAM):   else do;
1088286   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1088287   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1088288   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1088289   +   end;
MPRINT(EM_DIAGRAM):   end;
1088290   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1088291   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1088292   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1088293   +   end;
MPRINT(EM_DIAGRAM):   end;
1088294   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1088295   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1088296   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1088297   +   end;
MPRINT(EM_DIAGRAM):   end;
1088298   +end;
MPRINT(EM_DIAGRAM):   end;
1088299   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1088300   +   P_DepVar1  =     21.3591691048455 * H11 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 21.3591691048455 * H11 ;
1088301   +   P_DepVar1  =    -9.58357245308623 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -9.58357245308623 + P_DepVar1 ;
1088302   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1088303   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1088304   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1088305   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1088306   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1088307   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1088308   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1088309   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1088310   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1088311   +END;
MPRINT(EM_DIAGRAM):   END;
1088312   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1088313   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1088314   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1088315   +END;
MPRINT(EM_DIAGRAM):   END;
1088316   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1088317   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1088318   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1088319   +END;
MPRINT(EM_DIAGRAM):   END;
1088320   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1088321   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1088322   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1088323   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1088324   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1088325   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1088326   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1088327   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1088328   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1088329   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1088330   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1088331   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1088332   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1088333   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1088334   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1088335   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1088336   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1088337   +END;
MPRINT(EM_DIAGRAM):   END;
1088338   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1088339   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1088340   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1088341   +drop
1088342   +H11
1088343   +;
MPRINT(EM_DIAGRAM):   drop H11 ;
1088344   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1088345   +* Renaming variables for Neural42;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural42;
1088346   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1088347   +* Renaming Posterior variables for Neural42;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural42;
1088348   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1088349   +drop Neural42_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural42_P_DepVar1;
1088350   +Neural42_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural42_P_DepVar1 = P_DepVar1;
1088351   +drop Neural42_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural42_P_DepVar0;
1088352   +Neural42_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural42_P_DepVar0 = P_DepVar0;
1088353   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1088354   +* Renaming _WARN_ variable for Neural42;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural42;
1088355   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1088356   +length Neural42_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural42_WARN_ $4;
1088357   +drop Neural42_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural42_WARN_;
1088358   +Neural42_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural42_WARN_ = _WARN_;
1088359   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1088360   +* Ensmbl12: Scoring Code of model 5 of 10;
MPRINT(EM_DIAGRAM):   * Ensmbl12: Scoring Code of model 5 of 10;
1088361   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1088362   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1088363   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
1088364   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1088365   +* NODE: Neural37;
MPRINT(EM_DIAGRAM):   * NODE: Neural37;
1088366   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1088367   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1088368   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1088369   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1088370   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1088371   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1088372   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1088373   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1088374   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1088375   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1088376   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1088377   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1088378   +LENGTH _WARN_ $4
1088379   +      F_DepVar  $ 12
1088380   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1088381   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1088382   +
1088383   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1088384   +
1088385   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1088386   +
1088387   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1088388   +
1088389   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1088390   +
1088391   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1088392   +
1088393   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1088394   +
1088395   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1088396   +
1088397   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1088398   +
1088399   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1088400   +
1088401   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1088402   +
1088403   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1088404   +
1088405   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1088406   +
1088407   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1088408   +
1088409   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1088410   +
1088411   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1088412   +
1088413   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1088414   +
1088415   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1088416   +
1088417   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1088418   +
1088419   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1088420   +
1088421   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1088422   +
1088423   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1088424   +
1088425   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1088426   +
1088427   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1088428   +
1088429   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1088430   +
1088431   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1088432   +
1088433   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1088434   +
1088435   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1088436   +
1088437   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1088438   +
1088439   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1088440   +
1088441   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1088442   +
1088443   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1088444   +
1088445   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1088446   +
1088447   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1088448   +
1088449   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1088450   +
1088451   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1088452   +
1088453   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1088454   +
1088455   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1088456   +
1088457   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1088458   +
1088459   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1088460   +
1088461   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1088462   +
1088463   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1088464   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1088465   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1088466   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1088467   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1088468   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1088469   +end;
MPRINT(EM_DIAGRAM):   end;
1088470   +else do;
MPRINT(EM_DIAGRAM):   else do;
1088471   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1088472   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1088473   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1088474   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1088475   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1088476   +   end;
MPRINT(EM_DIAGRAM):   end;
1088477   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1088478   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1088479   +   end;
MPRINT(EM_DIAGRAM):   end;
1088480   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1088481   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1088482   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1088483   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1088484   +   end;
MPRINT(EM_DIAGRAM):   end;
1088485   +end;
MPRINT(EM_DIAGRAM):   end;
1088486   +
1088487   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1088488   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1088489   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1088490   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1088491   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1088492   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1088493   +end;
MPRINT(EM_DIAGRAM):   end;
1088494   +else do;
MPRINT(EM_DIAGRAM):   else do;
1088495   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1088496   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1088497   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1088498   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1088499   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1088500   +   end;
MPRINT(EM_DIAGRAM):   end;
1088501   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1088502   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1088503   +   end;
MPRINT(EM_DIAGRAM):   end;
1088504   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1088505   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1088506   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1088507   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1088508   +   end;
MPRINT(EM_DIAGRAM):   end;
1088509   +end;
MPRINT(EM_DIAGRAM):   end;
1088510   +
1088511   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1088512   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1088513   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1088514   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1088515   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1088516   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1088517   +end;
MPRINT(EM_DIAGRAM):   end;
1088518   +else do;
MPRINT(EM_DIAGRAM):   else do;
1088519   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1088520   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1088521   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1088522   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1088523   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1088524   +   end;
MPRINT(EM_DIAGRAM):   end;
1088525   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1088526   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1088527   +   end;
MPRINT(EM_DIAGRAM):   end;
1088528   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1088529   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1088530   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1088531   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1088532   +   end;
MPRINT(EM_DIAGRAM):   end;
1088533   +end;
MPRINT(EM_DIAGRAM):   end;
1088534   +
1088535   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1088536   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1088537   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1088538   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1088539   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1088540   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1088541   +end;
MPRINT(EM_DIAGRAM):   end;
1088542   +else do;
MPRINT(EM_DIAGRAM):   else do;
1088543   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1088544   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1088545   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1088546   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1088547   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1088548   +   end;
MPRINT(EM_DIAGRAM):   end;
1088549   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1088550   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1088551   +   end;
MPRINT(EM_DIAGRAM):   end;
1088552   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1088553   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1088554   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1088555   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1088556   +   end;
MPRINT(EM_DIAGRAM):   end;
1088557   +end;
MPRINT(EM_DIAGRAM):   end;
1088558   +
1088559   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1088560   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1088561   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1088562   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1088563   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1088564   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1088565   +end;
MPRINT(EM_DIAGRAM):   end;
1088566   +else do;
MPRINT(EM_DIAGRAM):   else do;
1088567   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1088568   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1088569   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1088570   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1088571   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1088572   +   end;
MPRINT(EM_DIAGRAM):   end;
1088573   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1088574   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1088575   +   end;
MPRINT(EM_DIAGRAM):   end;
1088576   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1088577   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1088578   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1088579   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1088580   +   end;
MPRINT(EM_DIAGRAM):   end;
1088581   +end;
MPRINT(EM_DIAGRAM):   end;
1088582   +
1088583   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1088584   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1088585   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1088586   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1088587   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1088588   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1088589   +end;
MPRINT(EM_DIAGRAM):   end;
1088590   +else do;
MPRINT(EM_DIAGRAM):   else do;
1088591   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1088592   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1088593   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1088594   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1088595   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1088596   +   end;
MPRINT(EM_DIAGRAM):   end;
1088597   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1088598   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1088599   +   end;
MPRINT(EM_DIAGRAM):   end;
1088600   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1088601   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1088602   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1088603   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1088604   +   end;
MPRINT(EM_DIAGRAM):   end;
1088605   +end;
MPRINT(EM_DIAGRAM):   end;
1088606   +
1088607   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1088608   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1088609   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1088610   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1088611   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1088612   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1088613   +end;
MPRINT(EM_DIAGRAM):   end;
1088614   +else do;
MPRINT(EM_DIAGRAM):   else do;
1088615   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1088616   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1088617   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1088618   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1088619   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1088620   +   end;
MPRINT(EM_DIAGRAM):   end;
1088621   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1088622   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1088623   +   end;
MPRINT(EM_DIAGRAM):   end;
1088624   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1088625   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1088626   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1088627   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1088628   +   end;
MPRINT(EM_DIAGRAM):   end;
1088629   +end;
MPRINT(EM_DIAGRAM):   end;
1088630   +
1088631   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1088632   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
1088633   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1088634   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1088635   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1088636   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1088637   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1088638   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1088639   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1088640   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1088641   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1088642   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1088643   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1088644   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1088645   +end;
MPRINT(EM_DIAGRAM):   end;
1088646   +else do;
MPRINT(EM_DIAGRAM):   else do;
1088647   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1088648   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1088649   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1088650   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1088651   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1088652   +   end;
MPRINT(EM_DIAGRAM):   end;
1088653   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1088654   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1088655   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1088656   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1088657   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1088658   +   end;
MPRINT(EM_DIAGRAM):   end;
1088659   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1088660   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1088661   +   end;
MPRINT(EM_DIAGRAM):   end;
1088662   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1088663   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1088664   +   end;
MPRINT(EM_DIAGRAM):   end;
1088665   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1088666   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1088667   +   end;
MPRINT(EM_DIAGRAM):   end;
1088668   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1088669   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1088670   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1088671   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1088672   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1088673   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1088674   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1088675   +   end;
MPRINT(EM_DIAGRAM):   end;
1088676   +end;
MPRINT(EM_DIAGRAM):   end;
1088677   +
1088678   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1088679   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1088680   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
1088681   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1088682   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1088683   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1088684   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1088685   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1088686   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1088687   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1088688   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1088689   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1088690   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1088691   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1088692   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1088693   +end;
MPRINT(EM_DIAGRAM):   end;
1088694   +else do;
MPRINT(EM_DIAGRAM):   else do;
1088695   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1088696   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1088697   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1088698   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1088699   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1088700   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1088701   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1088702   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1088703   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1088704   +         end;
MPRINT(EM_DIAGRAM):   end;
1088705   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1088706   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1088707   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1088708   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1088709   +            end;
MPRINT(EM_DIAGRAM):   end;
1088710   +         end;
MPRINT(EM_DIAGRAM):   end;
1088711   +      end;
MPRINT(EM_DIAGRAM):   end;
1088712   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1088713   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1088714   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1088715   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1088716   +         end;
MPRINT(EM_DIAGRAM):   end;
1088717   +      end;
MPRINT(EM_DIAGRAM):   end;
1088718   +   end;
MPRINT(EM_DIAGRAM):   end;
1088719   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1088720   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1088721   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1088722   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1088723   +      end;
MPRINT(EM_DIAGRAM):   end;
1088724   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1088725   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1088726   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1088727   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1088728   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1088729   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1088730   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1088731   +         end;
MPRINT(EM_DIAGRAM):   end;
1088732   +      end;
MPRINT(EM_DIAGRAM):   end;
1088733   +   end;
MPRINT(EM_DIAGRAM):   end;
1088734   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1088735   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1088736   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1088737   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1088738   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1088739   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1088740   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1088741   +   end;
MPRINT(EM_DIAGRAM):   end;
1088742   +end;
MPRINT(EM_DIAGRAM):   end;
1088743   +
1088744   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1088745   +*** Checking missing input Interval
1088746   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1088747   +
1088748   +IF NMISS(
1088749   +   AcceptedCmpTotal ,
1088750   +   Age ,
1088751   +   Frq ,
1088752   +   Income ,
1088753   +   Kidhome ,
1088754   +   MntFishProducts ,
1088755   +   MntFruits ,
1088756   +   MntGoldProds ,
1088757   +   MntSweetProducts ,
1088758   +   MonthsAsCustomer ,
1088759   +   NumDealsPurchases ,
1088760   +   NumWebVisitsMonth ,
1088761   +   RFMstat ,
1088762   +   RMntFrq ,
1088763   +   Recency ,
1088764   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , 
MntFishProducts , MntFruits , MntGoldProds , MntSweetProducts , MonthsAsCustomer , 
NumDealsPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , Teenhome ) THEN DO;
1088765   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1088766   +
1088767   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1088768   +END;
MPRINT(EM_DIAGRAM):   END;
1088769   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1088770   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1088771   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1088772   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1088773   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1088774   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1088775   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1088776   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1088777   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1088778   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1088779   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1088780   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1088781   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1088782   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1088783   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1088784   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1088785   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1088786   +   S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
1088787   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
1088788   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1088789   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1088790   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1088791   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1088792   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1088793   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1088794   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1088795   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1088796   +END;
MPRINT(EM_DIAGRAM):   END;
1088797   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1088798   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1088799   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1088800   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1088801   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1088802   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1088803   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1088804   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1088805   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1088806   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1088807   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1088808   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1088809   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1088810   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1088811   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1088812   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1088813   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1088814   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1088815   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1088816   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1088817   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1088818   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1088819   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1088820   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1088821   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1088822   +   ELSE S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
1088823   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
1088824   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1088825   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1088826   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1088827   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1088828   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1088829   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1088830   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1088831   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1088832   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1088833   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1088834   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1088835   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1088836   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1088837   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1088838   +END;
MPRINT(EM_DIAGRAM):   END;
1088839   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1088840   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1088841   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1088842   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1088843   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1088844   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1088845   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1088846   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1088847   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1088848   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1088849   +   H11  =     0.00529231235481 * S_AcceptedCmpTotal  +      0.0343326832257 *
1088850   +        S_Age  +    -0.05203541829299 * S_Frq  +    -0.45089409751085 *
1088851   +        S_Income  +     0.21434017685167 * S_Kidhome
1088852   +          +    -0.00245095061163 * S_MntFishProducts
1088853   +          +     0.05045649639793 * S_MntFruits  +     0.00647541618092 *
1088854   +        S_MntGoldProds  +     0.05644685811145 * S_MntSweetProducts
1088855   +          +     -0.0436897985886 * S_MonthsAsCustomer
1088856   +          +    -0.11066147452589 * S_NumDealsPurchases
1088857   +          +    -0.15815826211613 * S_NumWebVisitsMonth
1088858   +          +    -0.02488895787197 * S_RFMstat  +    -0.07848372303852 *
1088859   +        S_RMntFrq  +     0.44584112602611 * S_Recency
1088860   +          +     0.31802924624272 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.00529231235481 * S_AcceptedCmpTotal + 0.0343326832257 * S_Age + 
-0.05203541829299 * S_Frq + -0.45089409751085 * S_Income + 0.21434017685167 * S_Kidhome + 
-0.00245095061163 * S_MntFishProducts + 0.05045649639793 * S_MntFruits + 0.00647541618092 * 
S_MntGoldProds + 0.05644685811145 * S_MntSweetProducts + -0.0436897985886 * S_MonthsAsCustomer 
+ -0.11066147452589 * S_NumDealsPurchases + -0.15815826211613 * S_NumWebVisitsMonth + 
-0.02488895787197 * S_RFMstat + -0.07848372303852 * S_RMntFrq + 0.44584112602611 * S_Recency + 
0.31802924624272 * S_Teenhome ;
1088861   +   H12  =    -0.10209163274452 * S_AcceptedCmpTotal  +     0.11827354067819 *
1088862   +        S_Age  +     1.40350663058769 * S_Frq  +     0.61315172399898 *
1088863   +        S_Income  +    -0.34676303560555 * S_Kidhome
1088864   +          +    -0.19666313381749 * S_MntFishProducts
1088865   +          +     0.02049419497141 * S_MntFruits  +    -0.20582738219797 *
1088866   +        S_MntGoldProds  +    -0.07237052620156 * S_MntSweetProducts
1088867   +          +     0.11921399006499 * S_MonthsAsCustomer
1088868   +          +    -0.67623098057964 * S_NumDealsPurchases
1088869   +          +    -0.59190965073948 * S_NumWebVisitsMonth
1088870   +          +    -0.20613596895241 * S_RFMstat  +    -0.32007172204835 *
1088871   +        S_RMntFrq  +     0.69616846305831 * S_Recency
1088872   +          +     -0.3023019033387 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -0.10209163274452 * S_AcceptedCmpTotal + 0.11827354067819 * S_Age 
+ 1.40350663058769 * S_Frq + 0.61315172399898 * S_Income + -0.34676303560555 * S_Kidhome + 
-0.19666313381749 * S_MntFishProducts + 0.02049419497141 * S_MntFruits + -0.20582738219797 * 
S_MntGoldProds + -0.07237052620156 * S_MntSweetProducts + 0.11921399006499 * 
S_MonthsAsCustomer + -0.67623098057964 * S_NumDealsPurchases + -0.59190965073948 * 
S_NumWebVisitsMonth + -0.20613596895241 * S_RFMstat + -0.32007172204835 * S_RMntFrq + 
0.69616846305831 * S_Recency + -0.3023019033387 * S_Teenhome ;
1088873   +   H11  = H11  +     0.19876934538613 * AcceptedCmp10
1088874   +          +     0.18951634162327 * AcceptedCmp20  +     0.24251361227823 *
1088875   +        AcceptedCmp30  +     0.16680588614581 * AcceptedCmp40
1088876   +          +     0.15217121708385 * AcceptedCmp50  +    -0.06185934853348 *
1088877   +        Complain0  +    -0.02156128066423 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.19876934538613 * AcceptedCmp10 + 0.18951634162327 * 
AcceptedCmp20 + 0.24251361227823 * AcceptedCmp30 + 0.16680588614581 * AcceptedCmp40 + 
0.15217121708385 * AcceptedCmp50 + -0.06185934853348 * Complain0 + -0.02156128066423 * 
HigherEducationBinary0 ;
1088878   +   H12  = H12  +     0.42936838873103 * AcceptedCmp10
1088879   +          +     0.31531206230129 * AcceptedCmp20  +     0.61595858080275 *
1088880   +        AcceptedCmp30  +    -0.02848071087974 * AcceptedCmp40
1088881   +          +     0.26463885464849 * AcceptedCmp50  +    -0.25408897937456 *
1088882   +        Complain0  +     0.37165308117925 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.42936838873103 * AcceptedCmp10 + 0.31531206230129 * 
AcceptedCmp20 + 0.61595858080275 * AcceptedCmp30 + -0.02848071087974 * AcceptedCmp40 + 
0.26463885464849 * AcceptedCmp50 + -0.25408897937456 * Complain0 + 0.37165308117925 * 
HigherEducationBinary0 ;
1088883   +   H11  = H11  +    -0.06004623502296 * Education2n_Cycle
1088884   +          +    -0.14055981460472 * EducationBasic  +    -0.02226325005028 *
1088885   +        EducationGraduation  +     0.17382426297237 * EducationMaster
1088886   +          +    -0.09599098826432 * Marital_StatusDivorced
1088887   +          +     0.29380773989654 * Marital_StatusMarried
1088888   +          +    -0.24344588832351 * Marital_StatusSingle
1088889   +          +     0.26861619886367 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.06004623502296 * Education2n_Cycle + -0.14055981460472 * 
EducationBasic + -0.02226325005028 * EducationGraduation + 0.17382426297237 * EducationMaster 
+ -0.09599098826432 * Marital_StatusDivorced + 0.29380773989654 * Marital_StatusMarried + 
-0.24344588832351 * Marital_StatusSingle + 0.26861619886367 * Marital_StatusTogether ;
1088890   +   H12  = H12  +    -0.05553559517027 * Education2n_Cycle
1088891   +          +     0.10110187812592 * EducationBasic  +    -0.01454720780814 *
1088892   +        EducationGraduation  +    -0.23207789950977 * EducationMaster
1088893   +          +    -0.18210246138549 * Marital_StatusDivorced
1088894   +          +    -0.33707503901978 * Marital_StatusMarried
1088895   +          +     0.45975144433549 * Marital_StatusSingle
1088896   +          +    -0.30223475265715 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.05553559517027 * Education2n_Cycle + 0.10110187812592 * 
EducationBasic + -0.01454720780814 * EducationGraduation + -0.23207789950977 * EducationMaster 
+ -0.18210246138549 * Marital_StatusDivorced + -0.33707503901978 * Marital_StatusMarried + 
0.45975144433549 * Marital_StatusSingle + -0.30223475265715 * Marital_StatusTogether ;
1088897   +   H11  =    -0.01761609034495 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -0.01761609034495 + H11 ;
1088898   +   H12  =     1.54520059814945 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 1.54520059814945 + H12 ;
1088899   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1088900   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1088901   +END;
MPRINT(EM_DIAGRAM):   END;
1088902   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1088903   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1088904   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1088905   +END;
MPRINT(EM_DIAGRAM):   END;
1088906   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1088907   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1088908   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1088909   +
1088910   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1088911   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1088912   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1088913   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1088914   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1088915   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1088916   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1088917   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1088918   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1088919   +end;
MPRINT(EM_DIAGRAM):   end;
1088920   +else do;
MPRINT(EM_DIAGRAM):   else do;
1088921   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1088922   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1088923   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1088924   +   end;
MPRINT(EM_DIAGRAM):   end;
1088925   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1088926   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1088927   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1088928   +   end;
MPRINT(EM_DIAGRAM):   end;
1088929   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1088930   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1088931   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1088932   +   end;
MPRINT(EM_DIAGRAM):   end;
1088933   +end;
MPRINT(EM_DIAGRAM):   end;
1088934   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1088935   +   P_DepVar1  =    -5.00819716007083 * H11  +    -2.90644970096905 * H12 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -5.00819716007083 * H11 + -2.90644970096905 * H12 ;
1088936   +   P_DepVar1  =     0.91635286006129 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.91635286006129 + P_DepVar1 ;
1088937   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1088938   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1088939   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1088940   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1088941   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1088942   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1088943   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1088944   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1088945   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1088946   +END;
MPRINT(EM_DIAGRAM):   END;
1088947   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1088948   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1088949   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1088950   +END;
MPRINT(EM_DIAGRAM):   END;
1088951   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1088952   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1088953   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1088954   +END;
MPRINT(EM_DIAGRAM):   END;
1088955   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1088956   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1088957   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1088958   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1088959   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1088960   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1088961   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1088962   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1088963   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1088964   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1088965   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1088966   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1088967   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1088968   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1088969   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1088970   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1088971   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1088972   +END;
MPRINT(EM_DIAGRAM):   END;
1088973   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1088974   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1088975   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1088976   +drop
1088977   +H11
1088978   +H12
1088979   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 ;
1088980   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1088981   +* Renaming variables for Neural37;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural37;
1088982   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1088983   +* Renaming Posterior variables for Neural37;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural37;
1088984   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1088985   +drop Neural37_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural37_P_DepVar1;
1088986   +Neural37_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural37_P_DepVar1 = P_DepVar1;
1088987   +drop Neural37_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural37_P_DepVar0;
1088988   +Neural37_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural37_P_DepVar0 = P_DepVar0;
1088989   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1088990   +* Renaming _WARN_ variable for Neural37;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural37;
1088991   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1088992   +length Neural37_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural37_WARN_ $4;
1088993   +drop Neural37_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural37_WARN_;
1088994   +Neural37_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural37_WARN_ = _WARN_;
1088995   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1088996   +* Ensmbl12: Scoring Code of model 6 of 10;
MPRINT(EM_DIAGRAM):   * Ensmbl12: Scoring Code of model 6 of 10;
1088997   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1088998   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1088999   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
1089000   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1089001   +* NODE: Neural38;
MPRINT(EM_DIAGRAM):   * NODE: Neural38;
1089002   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1089003   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1089004   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1089005   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1089006   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1089007   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1089008   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1089009   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1089010   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1089011   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1089012   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1089013   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1089014   +LENGTH _WARN_ $4
1089015   +      F_DepVar  $ 12
1089016   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1089017   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1089018   +
1089019   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1089020   +
1089021   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1089022   +
1089023   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1089024   +
1089025   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1089026   +
1089027   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1089028   +
1089029   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1089030   +
1089031   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1089032   +
1089033   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1089034   +
1089035   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1089036   +
1089037   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1089038   +
1089039   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1089040   +
1089041   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1089042   +
1089043   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1089044   +
1089045   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1089046   +
1089047   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1089048   +
1089049   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1089050   +
1089051   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1089052   +
1089053   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1089054   +
1089055   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1089056   +
1089057   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1089058   +
1089059   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1089060   +
1089061   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1089062   +
1089063   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1089064   +
1089065   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1089066   +
1089067   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1089068   +
1089069   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1089070   +
1089071   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1089072   +
1089073   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1089074   +
1089075   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1089076   +
1089077   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1089078   +
1089079   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1089080   +
1089081   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1089082   +
1089083   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1089084   +
1089085   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1089086   +
1089087   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1089088   +
1089089   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1089090   +
1089091   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1089092   +
1089093   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1089094   +
1089095   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1089096   +
1089097   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1089098   +
1089099   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1089100   +
1089101   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1089102   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1089103   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1089104   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1089105   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1089106   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1089107   +end;
MPRINT(EM_DIAGRAM):   end;
1089108   +else do;
MPRINT(EM_DIAGRAM):   else do;
1089109   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1089110   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1089111   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1089112   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1089113   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1089114   +   end;
MPRINT(EM_DIAGRAM):   end;
1089115   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1089116   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1089117   +   end;
MPRINT(EM_DIAGRAM):   end;
1089118   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1089119   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1089120   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1089121   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1089122   +   end;
MPRINT(EM_DIAGRAM):   end;
1089123   +end;
MPRINT(EM_DIAGRAM):   end;
1089124   +
1089125   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1089126   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1089127   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1089128   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1089129   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1089130   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1089131   +end;
MPRINT(EM_DIAGRAM):   end;
1089132   +else do;
MPRINT(EM_DIAGRAM):   else do;
1089133   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1089134   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1089135   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1089136   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1089137   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1089138   +   end;
MPRINT(EM_DIAGRAM):   end;
1089139   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1089140   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1089141   +   end;
MPRINT(EM_DIAGRAM):   end;
1089142   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1089143   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1089144   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1089145   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1089146   +   end;
MPRINT(EM_DIAGRAM):   end;
1089147   +end;
MPRINT(EM_DIAGRAM):   end;
1089148   +
1089149   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1089150   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1089151   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1089152   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1089153   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1089154   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1089155   +end;
MPRINT(EM_DIAGRAM):   end;
1089156   +else do;
MPRINT(EM_DIAGRAM):   else do;
1089157   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1089158   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1089159   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1089160   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1089161   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1089162   +   end;
MPRINT(EM_DIAGRAM):   end;
1089163   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1089164   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1089165   +   end;
MPRINT(EM_DIAGRAM):   end;
1089166   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1089167   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1089168   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1089169   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1089170   +   end;
MPRINT(EM_DIAGRAM):   end;
1089171   +end;
MPRINT(EM_DIAGRAM):   end;
1089172   +
1089173   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1089174   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1089175   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1089176   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1089177   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1089178   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1089179   +end;
MPRINT(EM_DIAGRAM):   end;
1089180   +else do;
MPRINT(EM_DIAGRAM):   else do;
1089181   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1089182   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1089183   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1089184   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1089185   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1089186   +   end;
MPRINT(EM_DIAGRAM):   end;
1089187   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1089188   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1089189   +   end;
MPRINT(EM_DIAGRAM):   end;
1089190   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1089191   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1089192   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1089193   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1089194   +   end;
MPRINT(EM_DIAGRAM):   end;
1089195   +end;
MPRINT(EM_DIAGRAM):   end;
1089196   +
1089197   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1089198   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1089199   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1089200   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1089201   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1089202   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1089203   +end;
MPRINT(EM_DIAGRAM):   end;
1089204   +else do;
MPRINT(EM_DIAGRAM):   else do;
1089205   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1089206   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1089207   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1089208   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1089209   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1089210   +   end;
MPRINT(EM_DIAGRAM):   end;
1089211   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1089212   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1089213   +   end;
MPRINT(EM_DIAGRAM):   end;
1089214   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1089215   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1089216   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1089217   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1089218   +   end;
MPRINT(EM_DIAGRAM):   end;
1089219   +end;
MPRINT(EM_DIAGRAM):   end;
1089220   +
1089221   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1089222   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1089223   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1089224   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1089225   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1089226   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1089227   +end;
MPRINT(EM_DIAGRAM):   end;
1089228   +else do;
MPRINT(EM_DIAGRAM):   else do;
1089229   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1089230   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1089231   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1089232   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1089233   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1089234   +   end;
MPRINT(EM_DIAGRAM):   end;
1089235   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1089236   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1089237   +   end;
MPRINT(EM_DIAGRAM):   end;
1089238   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1089239   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1089240   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1089241   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1089242   +   end;
MPRINT(EM_DIAGRAM):   end;
1089243   +end;
MPRINT(EM_DIAGRAM):   end;
1089244   +
1089245   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1089246   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1089247   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1089248   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1089249   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1089250   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1089251   +end;
MPRINT(EM_DIAGRAM):   end;
1089252   +else do;
MPRINT(EM_DIAGRAM):   else do;
1089253   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1089254   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1089255   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1089256   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1089257   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1089258   +   end;
MPRINT(EM_DIAGRAM):   end;
1089259   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1089260   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1089261   +   end;
MPRINT(EM_DIAGRAM):   end;
1089262   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1089263   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1089264   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1089265   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1089266   +   end;
MPRINT(EM_DIAGRAM):   end;
1089267   +end;
MPRINT(EM_DIAGRAM):   end;
1089268   +
1089269   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1089270   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
1089271   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1089272   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1089273   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1089274   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1089275   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1089276   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1089277   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1089278   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1089279   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1089280   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1089281   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1089282   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1089283   +end;
MPRINT(EM_DIAGRAM):   end;
1089284   +else do;
MPRINT(EM_DIAGRAM):   else do;
1089285   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1089286   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1089287   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1089288   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1089289   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1089290   +   end;
MPRINT(EM_DIAGRAM):   end;
1089291   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1089292   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1089293   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1089294   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1089295   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1089296   +   end;
MPRINT(EM_DIAGRAM):   end;
1089297   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1089298   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1089299   +   end;
MPRINT(EM_DIAGRAM):   end;
1089300   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1089301   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1089302   +   end;
MPRINT(EM_DIAGRAM):   end;
1089303   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1089304   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1089305   +   end;
MPRINT(EM_DIAGRAM):   end;
1089306   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1089307   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1089308   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1089309   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1089310   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1089311   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1089312   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1089313   +   end;
MPRINT(EM_DIAGRAM):   end;
1089314   +end;
MPRINT(EM_DIAGRAM):   end;
1089315   +
1089316   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1089317   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1089318   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
1089319   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1089320   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1089321   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1089322   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1089323   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1089324   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1089325   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1089326   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1089327   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1089328   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1089329   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1089330   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1089331   +end;
MPRINT(EM_DIAGRAM):   end;
1089332   +else do;
MPRINT(EM_DIAGRAM):   else do;
1089333   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1089334   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1089335   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1089336   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1089337   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1089338   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1089339   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1089340   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1089341   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1089342   +         end;
MPRINT(EM_DIAGRAM):   end;
1089343   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1089344   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1089345   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1089346   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1089347   +            end;
MPRINT(EM_DIAGRAM):   end;
1089348   +         end;
MPRINT(EM_DIAGRAM):   end;
1089349   +      end;
MPRINT(EM_DIAGRAM):   end;
1089350   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1089351   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1089352   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1089353   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1089354   +         end;
MPRINT(EM_DIAGRAM):   end;
1089355   +      end;
MPRINT(EM_DIAGRAM):   end;
1089356   +   end;
MPRINT(EM_DIAGRAM):   end;
1089357   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1089358   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1089359   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1089360   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1089361   +      end;
MPRINT(EM_DIAGRAM):   end;
1089362   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1089363   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1089364   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1089365   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1089366   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1089367   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1089368   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1089369   +         end;
MPRINT(EM_DIAGRAM):   end;
1089370   +      end;
MPRINT(EM_DIAGRAM):   end;
1089371   +   end;
MPRINT(EM_DIAGRAM):   end;
1089372   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1089373   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1089374   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1089375   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1089376   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1089377   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1089378   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1089379   +   end;
MPRINT(EM_DIAGRAM):   end;
1089380   +end;
MPRINT(EM_DIAGRAM):   end;
1089381   +
1089382   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1089383   +*** Checking missing input Interval
1089384   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1089385   +
1089386   +IF NMISS(
1089387   +   AcceptedCmpTotal ,
1089388   +   Age ,
1089389   +   Frq ,
1089390   +   Income ,
1089391   +   Kidhome ,
1089392   +   MntFishProducts ,
1089393   +   MntFruits ,
1089394   +   MntGoldProds ,
1089395   +   MntSweetProducts ,
1089396   +   MonthsAsCustomer ,
1089397   +   NumDealsPurchases ,
1089398   +   NumWebVisitsMonth ,
1089399   +   RFMstat ,
1089400   +   RMntFrq ,
1089401   +   Recency ,
1089402   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , 
MntFishProducts , MntFruits , MntGoldProds , MntSweetProducts , MonthsAsCustomer , 
NumDealsPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , Teenhome ) THEN DO;
1089403   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1089404   +
1089405   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1089406   +END;
MPRINT(EM_DIAGRAM):   END;
1089407   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1089408   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1089409   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1089410   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1089411   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1089412   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1089413   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1089414   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1089415   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1089416   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1089417   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1089418   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1089419   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1089420   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1089421   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1089422   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1089423   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1089424   +   S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
1089425   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
1089426   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1089427   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1089428   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1089429   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1089430   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1089431   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1089432   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1089433   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1089434   +END;
MPRINT(EM_DIAGRAM):   END;
1089435   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1089436   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1089437   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1089438   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1089439   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1089440   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1089441   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1089442   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1089443   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1089444   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1089445   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1089446   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1089447   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1089448   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1089449   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1089450   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1089451   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1089452   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1089453   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1089454   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1089455   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1089456   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1089457   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1089458   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1089459   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1089460   +   ELSE S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
1089461   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
1089462   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1089463   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1089464   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1089465   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1089466   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1089467   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1089468   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1089469   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1089470   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1089471   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1089472   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1089473   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1089474   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1089475   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1089476   +END;
MPRINT(EM_DIAGRAM):   END;
1089477   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1089478   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1089479   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1089480   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1089481   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1089482   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1089483   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1089484   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1089485   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1089486   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1089487   +   H11  =    -0.05939653438507 * S_AcceptedCmpTotal  +    -0.03097621866927 *
1089488   +        S_Age  +     0.38549836561373 * S_Frq  +     0.04529710170514 *
1089489   +        S_Income  +    -0.29829037747286 * S_Kidhome
1089490   +          +    -0.18720823453547 * S_MntFishProducts
1089491   +          +    -0.21050293648727 * S_MntFruits  +    -0.17024743813518 *
1089492   +        S_MntGoldProds  +     0.06568676148572 * S_MntSweetProducts
1089493   +          +    -0.06646294977493 * S_MonthsAsCustomer
1089494   +          +    -0.37026551859537 * S_NumDealsPurchases
1089495   +          +    -0.14222086870703 * S_NumWebVisitsMonth
1089496   +          +    -0.13771028020173 * S_RFMstat  +    -0.18058593739947 *
1089497   +        S_RMntFrq  +     0.16089693413185 * S_Recency
1089498   +          +    -0.09296281260919 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = -0.05939653438507 * S_AcceptedCmpTotal + -0.03097621866927 * S_Age 
+ 0.38549836561373 * S_Frq + 0.04529710170514 * S_Income + -0.29829037747286 * S_Kidhome + 
-0.18720823453547 * S_MntFishProducts + -0.21050293648727 * S_MntFruits + -0.17024743813518 * 
S_MntGoldProds + 0.06568676148572 * S_MntSweetProducts + -0.06646294977493 * 
S_MonthsAsCustomer + -0.37026551859537 * S_NumDealsPurchases + -0.14222086870703 * 
S_NumWebVisitsMonth + -0.13771028020173 * S_RFMstat + -0.18058593739947 * S_RMntFrq + 
0.16089693413185 * S_Recency + -0.09296281260919 * S_Teenhome ;
1089499   +   H12  =    -1.07525876494597 * S_AcceptedCmpTotal  +     0.17274493487957 *
1089500   +        S_Age  +     1.31699360143525 * S_Frq  +      0.8506314580981 *
1089501   +        S_Income  +    -0.83201267605135 * S_Kidhome
1089502   +          +    -0.09483355610222 * S_MntFishProducts
1089503   +          +    -0.31816096382562 * S_MntFruits  +    -0.18054381770991 *
1089504   +        S_MntGoldProds  +     0.05267776627167 * S_MntSweetProducts
1089505   +          +     0.36008195182034 * S_MonthsAsCustomer
1089506   +          +    -0.13663022832818 * S_NumDealsPurchases
1089507   +          +    -0.43055337001488 * S_NumWebVisitsMonth
1089508   +          +    -0.20985567596746 * S_RFMstat  +     0.29271762840275 *
1089509   +        S_RMntFrq  +    -0.13626348763752 * S_Recency
1089510   +          +    -0.85691575464107 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -1.07525876494597 * S_AcceptedCmpTotal + 0.17274493487957 * S_Age 
+ 1.31699360143525 * S_Frq + 0.8506314580981 * S_Income + -0.83201267605135 * S_Kidhome + 
-0.09483355610222 * S_MntFishProducts + -0.31816096382562 * S_MntFruits + -0.18054381770991 * 
S_MntGoldProds + 0.05267776627167 * S_MntSweetProducts + 0.36008195182034 * S_MonthsAsCustomer 
+ -0.13663022832818 * S_NumDealsPurchases + -0.43055337001488 * S_NumWebVisitsMonth + 
-0.20985567596746 * S_RFMstat + 0.29271762840275 * S_RMntFrq + -0.13626348763752 * S_Recency + 
-0.85691575464107 * S_Teenhome ;
1089511   +   H13  =    -0.17967871499719 * S_AcceptedCmpTotal  +      0.1189238919833 *
1089512   +        S_Age  +      0.2812438420035 * S_Frq  +    -0.19278826529363 *
1089513   +        S_Income  +     0.25780281448124 * S_Kidhome
1089514   +          +     0.04440164182166 * S_MntFishProducts
1089515   +          +     0.04221733494133 * S_MntFruits  +     0.00772772044315 *
1089516   +        S_MntGoldProds  +     0.03211863452879 * S_MntSweetProducts
1089517   +          +     0.11601256317603 * S_MonthsAsCustomer
1089518   +          +    -0.06382091961731 * S_NumDealsPurchases
1089519   +          +    -0.31707488359351 * S_NumWebVisitsMonth
1089520   +          +    -0.03315899689257 * S_RFMstat  +      0.1166714754638 *
1089521   +        S_RMntFrq  +     0.39922359779347 * S_Recency
1089522   +          +     0.12723983872652 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = -0.17967871499719 * S_AcceptedCmpTotal + 0.1189238919833 * S_Age + 
0.2812438420035 * S_Frq + -0.19278826529363 * S_Income + 0.25780281448124 * S_Kidhome + 
0.04440164182166 * S_MntFishProducts + 0.04221733494133 * S_MntFruits + 0.00772772044315 * 
S_MntGoldProds + 0.03211863452879 * S_MntSweetProducts + 0.11601256317603 * S_MonthsAsCustomer 
+ -0.06382091961731 * S_NumDealsPurchases + -0.31707488359351 * S_NumWebVisitsMonth + 
-0.03315899689257 * S_RFMstat + 0.1166714754638 * S_RMntFrq + 0.39922359779347 * S_Recency + 
0.12723983872652 * S_Teenhome ;
1089523   +   H11  = H11  +     1.30972442853005 * AcceptedCmp10
1089524   +          +      -0.107725040763 * AcceptedCmp20  +      0.1632298365033 *
1089525   +        AcceptedCmp30  +    -0.04285993483605 * AcceptedCmp40
1089526   +          +     0.27424410998159 * AcceptedCmp50  +     0.13223002478852 *
1089527   +        Complain0  +       0.148007066302 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 1.30972442853005 * AcceptedCmp10 + -0.107725040763 * 
AcceptedCmp20 + 0.1632298365033 * AcceptedCmp30 + -0.04285993483605 * AcceptedCmp40 + 
0.27424410998159 * AcceptedCmp50 + 0.13223002478852 * Complain0 + 0.148007066302 * 
HigherEducationBinary0 ;
1089528   +   H12  = H12  +     0.43127584437858 * AcceptedCmp10
1089529   +          +    -0.45791405760753 * AcceptedCmp20  +    -0.99939161573095 *
1089530   +        AcceptedCmp30  +    -1.19828550777192 * AcceptedCmp40
1089531   +          +    -0.01213030081313 * AcceptedCmp50  +    -0.13910242772434 *
1089532   +        Complain0  +     0.30067707265993 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.43127584437858 * AcceptedCmp10 + -0.45791405760753 * 
AcceptedCmp20 + -0.99939161573095 * AcceptedCmp30 + -1.19828550777192 * AcceptedCmp40 + 
-0.01213030081313 * AcceptedCmp50 + -0.13910242772434 * Complain0 + 0.30067707265993 * 
HigherEducationBinary0 ;
1089533   +   H13  = H13  +    -0.11762761348562 * AcceptedCmp10
1089534   +          +      0.2189277190916 * AcceptedCmp20  +     0.04353030554468 *
1089535   +        AcceptedCmp30  +    -0.03987223536277 * AcceptedCmp40
1089536   +          +     0.15029448487681 * AcceptedCmp50  +      -0.117886738648 *
1089537   +        Complain0  +    -0.01645100634446 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.11762761348562 * AcceptedCmp10 + 0.2189277190916 * 
AcceptedCmp20 + 0.04353030554468 * AcceptedCmp30 + -0.03987223536277 * AcceptedCmp40 + 
0.15029448487681 * AcceptedCmp50 + -0.117886738648 * Complain0 + -0.01645100634446 * 
HigherEducationBinary0 ;
1089538   +   H11  = H11  +     0.16808351038824 * Education2n_Cycle
1089539   +          +    -0.29249243891567 * EducationBasic  +     0.02800261669472 *
1089540   +        EducationGraduation  +    -0.22350316846433 * EducationMaster
1089541   +          +     0.18754186259114 * Marital_StatusDivorced
1089542   +          +    -0.11988223819284 * Marital_StatusMarried
1089543   +          +    -0.02283707816223 * Marital_StatusSingle
1089544   +          +     -0.1005355792805 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.16808351038824 * Education2n_Cycle + -0.29249243891567 * 
EducationBasic + 0.02800261669472 * EducationGraduation + -0.22350316846433 * EducationMaster 
+ 0.18754186259114 * Marital_StatusDivorced + -0.11988223819284 * Marital_StatusMarried + 
-0.02283707816223 * Marital_StatusSingle + -0.1005355792805 * Marital_StatusTogether ;
1089545   +   H12  = H12  +    -0.12807098247021 * Education2n_Cycle
1089546   +          +     0.23889287012189 * EducationBasic  +     0.10996477979775 *
1089547   +        EducationGraduation  +    -0.24880728981933 * EducationMaster
1089548   +          +    -0.28983318463941 * Marital_StatusDivorced
1089549   +          +    -0.74851149560881 * Marital_StatusMarried
1089550   +          +      0.7618336919202 * Marital_StatusSingle
1089551   +          +    -0.81079042586509 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.12807098247021 * Education2n_Cycle + 0.23889287012189 * 
EducationBasic + 0.10996477979775 * EducationGraduation + -0.24880728981933 * EducationMaster 
+ -0.28983318463941 * Marital_StatusDivorced + -0.74851149560881 * Marital_StatusMarried + 
0.7618336919202 * Marital_StatusSingle + -0.81079042586509 * Marital_StatusTogether ;
1089552   +   H13  = H13  +    -0.26305004071484 * Education2n_Cycle
1089553   +          +     0.28231626292259 * EducationBasic  +    -0.07308832725307 *
1089554   +        EducationGraduation  +     0.20925521527006 * EducationMaster
1089555   +          +    -0.33639004627791 * Marital_StatusDivorced
1089556   +          +     0.12327415586833 * Marital_StatusMarried
1089557   +          +      0.0060971946845 * Marital_StatusSingle
1089558   +          +     0.09875322175475 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.26305004071484 * Education2n_Cycle + 0.28231626292259 * 
EducationBasic + -0.07308832725307 * EducationGraduation + 0.20925521527006 * EducationMaster 
+ -0.33639004627791 * Marital_StatusDivorced + 0.12327415586833 * Marital_StatusMarried + 
0.0060971946845 * Marital_StatusSingle + 0.09875322175475 * Marital_StatusTogether ;
1089559   +   H11  =    -1.17886598743906 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -1.17886598743906 + H11 ;
1089560   +   H12  =    -0.91184279928765 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -0.91184279928765 + H12 ;
1089561   +   H13  =    -0.12019399765604 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.12019399765604 + H13 ;
1089562   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1089563   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1089564   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1089565   +END;
MPRINT(EM_DIAGRAM):   END;
1089566   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1089567   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1089568   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1089569   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1089570   +END;
MPRINT(EM_DIAGRAM):   END;
1089571   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1089572   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1089573   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1089574   +
1089575   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1089576   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1089577   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1089578   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1089579   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1089580   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1089581   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1089582   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1089583   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1089584   +end;
MPRINT(EM_DIAGRAM):   end;
1089585   +else do;
MPRINT(EM_DIAGRAM):   else do;
1089586   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1089587   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1089588   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1089589   +   end;
MPRINT(EM_DIAGRAM):   end;
1089590   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1089591   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1089592   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1089593   +   end;
MPRINT(EM_DIAGRAM):   end;
1089594   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1089595   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1089596   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1089597   +   end;
MPRINT(EM_DIAGRAM):   end;
1089598   +end;
MPRINT(EM_DIAGRAM):   end;
1089599   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1089600   +   P_DepVar1  =    -5.25940615604579 * H11  +     5.20640516145161 * H12
1089601   +          +    -6.47403374532058 * H13 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -5.25940615604579 * H11 + 5.20640516145161 * H12 + 
-6.47403374532058 * H13 ;
1089602   +   P_DepVar1  =    -0.12049819292714 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.12049819292714 + P_DepVar1 ;
1089603   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1089604   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1089605   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1089606   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1089607   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1089608   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1089609   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1089610   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1089611   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1089612   +END;
MPRINT(EM_DIAGRAM):   END;
1089613   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1089614   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1089615   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1089616   +END;
MPRINT(EM_DIAGRAM):   END;
1089617   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1089618   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1089619   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1089620   +END;
MPRINT(EM_DIAGRAM):   END;
1089621   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1089622   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1089623   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1089624   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1089625   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1089626   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1089627   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1089628   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1089629   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1089630   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1089631   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1089632   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1089633   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1089634   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1089635   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1089636   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1089637   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1089638   +END;
MPRINT(EM_DIAGRAM):   END;
1089639   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1089640   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1089641   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1089642   +drop
1089643   +H11
1089644   +H12
1089645   +H13
1089646   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 ;
1089647   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1089648   +* Renaming variables for Neural38;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural38;
1089649   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1089650   +* Renaming Posterior variables for Neural38;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural38;
1089651   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1089652   +drop Neural38_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural38_P_DepVar1;
1089653   +Neural38_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural38_P_DepVar1 = P_DepVar1;
1089654   +drop Neural38_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural38_P_DepVar0;
1089655   +Neural38_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural38_P_DepVar0 = P_DepVar0;
1089656   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1089657   +* Renaming _WARN_ variable for Neural38;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural38;
1089658   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1089659   +length Neural38_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural38_WARN_ $4;
1089660   +drop Neural38_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural38_WARN_;
1089661   +Neural38_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural38_WARN_ = _WARN_;
1089662   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1089663   +* Ensmbl12: Scoring Code of model 7 of 10;
MPRINT(EM_DIAGRAM):   * Ensmbl12: Scoring Code of model 7 of 10;
1089664   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1089665   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1089666   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
1089667   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1089668   +* NODE: Neural40;
MPRINT(EM_DIAGRAM):   * NODE: Neural40;
1089669   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1089670   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1089671   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1089672   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1089673   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1089674   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1089675   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1089676   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1089677   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1089678   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1089679   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1089680   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1089681   +LENGTH _WARN_ $4
1089682   +      F_DepVar  $ 12
1089683   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1089684   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1089685   +
1089686   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1089687   +
1089688   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1089689   +
1089690   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1089691   +
1089692   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1089693   +
1089694   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1089695   +
1089696   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1089697   +
1089698   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1089699   +
1089700   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1089701   +
1089702   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1089703   +
1089704   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1089705   +
1089706   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1089707   +
1089708   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1089709   +
1089710   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1089711   +
1089712   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1089713   +
1089714   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1089715   +
1089716   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1089717   +
1089718   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1089719   +
1089720   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1089721   +
1089722   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1089723   +
1089724   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1089725   +
1089726   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1089727   +
1089728   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1089729   +
1089730   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1089731   +
1089732   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1089733   +
1089734   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1089735   +
1089736   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1089737   +
1089738   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1089739   +
1089740   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1089741   +
1089742   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1089743   +
1089744   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1089745   +
1089746   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1089747   +
1089748   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1089749   +
1089750   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1089751   +
1089752   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1089753   +
1089754   +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
1089755   +
1089756   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1089757   +
1089758   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1089759   +
1089760   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1089761   +
1089762   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1089763   +
1089764   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1089765   +
1089766   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1089767   +
1089768   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1089769   +
1089770   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1089771   +
1089772   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1089773   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1089774   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1089775   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1089776   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1089777   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1089778   +end;
MPRINT(EM_DIAGRAM):   end;
1089779   +else do;
MPRINT(EM_DIAGRAM):   else do;
1089780   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1089781   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1089782   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1089783   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1089784   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1089785   +   end;
MPRINT(EM_DIAGRAM):   end;
1089786   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1089787   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1089788   +   end;
MPRINT(EM_DIAGRAM):   end;
1089789   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1089790   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1089791   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1089792   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1089793   +   end;
MPRINT(EM_DIAGRAM):   end;
1089794   +end;
MPRINT(EM_DIAGRAM):   end;
1089795   +
1089796   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1089797   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1089798   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1089799   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1089800   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1089801   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1089802   +end;
MPRINT(EM_DIAGRAM):   end;
1089803   +else do;
MPRINT(EM_DIAGRAM):   else do;
1089804   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1089805   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1089806   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1089807   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1089808   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1089809   +   end;
MPRINT(EM_DIAGRAM):   end;
1089810   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1089811   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1089812   +   end;
MPRINT(EM_DIAGRAM):   end;
1089813   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1089814   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1089815   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1089816   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1089817   +   end;
MPRINT(EM_DIAGRAM):   end;
1089818   +end;
MPRINT(EM_DIAGRAM):   end;
1089819   +
1089820   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1089821   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1089822   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1089823   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1089824   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1089825   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1089826   +end;
MPRINT(EM_DIAGRAM):   end;
1089827   +else do;
MPRINT(EM_DIAGRAM):   else do;
1089828   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1089829   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1089830   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1089831   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1089832   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1089833   +   end;
MPRINT(EM_DIAGRAM):   end;
1089834   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1089835   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1089836   +   end;
MPRINT(EM_DIAGRAM):   end;
1089837   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1089838   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1089839   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1089840   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1089841   +   end;
MPRINT(EM_DIAGRAM):   end;
1089842   +end;
MPRINT(EM_DIAGRAM):   end;
1089843   +
1089844   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1089845   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1089846   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1089847   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1089848   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1089849   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1089850   +end;
MPRINT(EM_DIAGRAM):   end;
1089851   +else do;
MPRINT(EM_DIAGRAM):   else do;
1089852   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1089853   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1089854   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1089855   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1089856   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1089857   +   end;
MPRINT(EM_DIAGRAM):   end;
1089858   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1089859   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1089860   +   end;
MPRINT(EM_DIAGRAM):   end;
1089861   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1089862   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1089863   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1089864   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1089865   +   end;
MPRINT(EM_DIAGRAM):   end;
1089866   +end;
MPRINT(EM_DIAGRAM):   end;
1089867   +
1089868   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1089869   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1089870   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1089871   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1089872   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1089873   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1089874   +end;
MPRINT(EM_DIAGRAM):   end;
1089875   +else do;
MPRINT(EM_DIAGRAM):   else do;
1089876   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1089877   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1089878   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1089879   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1089880   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1089881   +   end;
MPRINT(EM_DIAGRAM):   end;
1089882   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1089883   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1089884   +   end;
MPRINT(EM_DIAGRAM):   end;
1089885   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1089886   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1089887   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1089888   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1089889   +   end;
MPRINT(EM_DIAGRAM):   end;
1089890   +end;
MPRINT(EM_DIAGRAM):   end;
1089891   +
1089892   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1089893   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1089894   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1089895   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1089896   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1089897   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1089898   +end;
MPRINT(EM_DIAGRAM):   end;
1089899   +else do;
MPRINT(EM_DIAGRAM):   else do;
1089900   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1089901   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1089902   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1089903   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1089904   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1089905   +   end;
MPRINT(EM_DIAGRAM):   end;
1089906   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1089907   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1089908   +   end;
MPRINT(EM_DIAGRAM):   end;
1089909   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1089910   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1089911   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1089912   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1089913   +   end;
MPRINT(EM_DIAGRAM):   end;
1089914   +end;
MPRINT(EM_DIAGRAM):   end;
1089915   +
1089916   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1089917   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1089918   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1089919   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1089920   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1089921   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1089922   +end;
MPRINT(EM_DIAGRAM):   end;
1089923   +else do;
MPRINT(EM_DIAGRAM):   else do;
1089924   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1089925   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1089926   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1089927   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1089928   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1089929   +   end;
MPRINT(EM_DIAGRAM):   end;
1089930   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1089931   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1089932   +   end;
MPRINT(EM_DIAGRAM):   end;
1089933   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1089934   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1089935   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1089936   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1089937   +   end;
MPRINT(EM_DIAGRAM):   end;
1089938   +end;
MPRINT(EM_DIAGRAM):   end;
1089939   +
1089940   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1089941   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
1089942   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1089943   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1089944   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1089945   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1089946   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1089947   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1089948   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1089949   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1089950   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1089951   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1089952   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1089953   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1089954   +end;
MPRINT(EM_DIAGRAM):   end;
1089955   +else do;
MPRINT(EM_DIAGRAM):   else do;
1089956   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1089957   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1089958   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1089959   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1089960   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1089961   +   end;
MPRINT(EM_DIAGRAM):   end;
1089962   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1089963   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1089964   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1089965   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1089966   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1089967   +   end;
MPRINT(EM_DIAGRAM):   end;
1089968   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1089969   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1089970   +   end;
MPRINT(EM_DIAGRAM):   end;
1089971   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1089972   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1089973   +   end;
MPRINT(EM_DIAGRAM):   end;
1089974   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1089975   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1089976   +   end;
MPRINT(EM_DIAGRAM):   end;
1089977   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1089978   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1089979   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1089980   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1089981   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1089982   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1089983   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1089984   +   end;
MPRINT(EM_DIAGRAM):   end;
1089985   +end;
MPRINT(EM_DIAGRAM):   end;
1089986   +
1089987   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1089988   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1089989   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
1089990   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1089991   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1089992   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1089993   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1089994   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1089995   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1089996   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1089997   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1089998   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1089999   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1090000   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1090001   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1090002   +end;
MPRINT(EM_DIAGRAM):   end;
1090003   +else do;
MPRINT(EM_DIAGRAM):   else do;
1090004   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1090005   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1090006   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1090007   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1090008   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1090009   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1090010   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1090011   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1090012   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1090013   +         end;
MPRINT(EM_DIAGRAM):   end;
1090014   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1090015   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1090016   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1090017   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1090018   +            end;
MPRINT(EM_DIAGRAM):   end;
1090019   +         end;
MPRINT(EM_DIAGRAM):   end;
1090020   +      end;
MPRINT(EM_DIAGRAM):   end;
1090021   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1090022   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1090023   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1090024   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1090025   +         end;
MPRINT(EM_DIAGRAM):   end;
1090026   +      end;
MPRINT(EM_DIAGRAM):   end;
1090027   +   end;
MPRINT(EM_DIAGRAM):   end;
1090028   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1090029   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1090030   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1090031   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1090032   +      end;
MPRINT(EM_DIAGRAM):   end;
1090033   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1090034   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1090035   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1090036   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1090037   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1090038   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1090039   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1090040   +         end;
MPRINT(EM_DIAGRAM):   end;
1090041   +      end;
MPRINT(EM_DIAGRAM):   end;
1090042   +   end;
MPRINT(EM_DIAGRAM):   end;
1090043   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1090044   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1090045   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1090046   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1090047   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1090048   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1090049   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1090050   +   end;
MPRINT(EM_DIAGRAM):   end;
1090051   +end;
MPRINT(EM_DIAGRAM):   end;
1090052   +
1090053   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1090054   +*** Checking missing input Interval
1090055   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1090056   +
1090057   +IF NMISS(
1090058   +   AcceptedCmpTotal ,
1090059   +   Age ,
1090060   +   Frq ,
1090061   +   Income ,
1090062   +   Kidhome ,
1090063   +   MntFishProducts ,
1090064   +   MntFruits ,
1090065   +   MntGoldProds ,
1090066   +   MntSweetProducts ,
1090067   +   MonthsAsCustomer ,
1090068   +   NumDealsPurchases ,
1090069   +   NumWebVisitsMonth ,
1090070   +   RFMstat ,
1090071   +   RMntFrq ,
1090072   +   Recency ,
1090073   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , 
MntFishProducts , MntFruits , MntGoldProds , MntSweetProducts , MonthsAsCustomer , 
NumDealsPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , Teenhome ) THEN DO;
1090074   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1090075   +
1090076   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1090077   +END;
MPRINT(EM_DIAGRAM):   END;
1090078   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1090079   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1090080   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1090081   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1090082   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1090083   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1090084   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1090085   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1090086   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1090087   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1090088   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1090089   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1090090   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1090091   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1090092   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1090093   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1090094   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1090095   +   S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
1090096   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
1090097   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1090098   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1090099   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1090100   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1090101   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1090102   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1090103   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1090104   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1090105   +END;
MPRINT(EM_DIAGRAM):   END;
1090106   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1090107   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1090108   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1090109   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1090110   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1090111   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1090112   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1090113   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1090114   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1090115   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1090116   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1090117   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1090118   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1090119   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1090120   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1090121   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1090122   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1090123   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1090124   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1090125   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1090126   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1090127   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1090128   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1090129   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1090130   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1090131   +   ELSE S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
1090132   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
1090133   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1090134   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1090135   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1090136   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1090137   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1090138   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1090139   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1090140   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1090141   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1090142   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1090143   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1090144   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1090145   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1090146   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1090147   +END;
MPRINT(EM_DIAGRAM):   END;
1090148   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1090149   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1090150   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1090151   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1090152   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1090153   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1090154   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1090155   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1090156   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1090157   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1090158   +   H11  =      0.0175934799517 * S_AcceptedCmpTotal  +     0.05885450913465 *
1090159   +        S_Age  +    -0.17194721523787 * S_Frq  +    -0.82356228294539 *
1090160   +        S_Income  +     0.39869341630865 * S_Kidhome
1090161   +          +    -0.04263586382867 * S_MntFishProducts
1090162   +          +     0.02697365132515 * S_MntFruits  +     0.04818007940845 *
1090163   +        S_MntGoldProds  +      0.1933390486387 * S_MntSweetProducts
1090164   +          +    -0.14308588367026 * S_MonthsAsCustomer
1090165   +          +    -0.01053346972758 * S_NumDealsPurchases
1090166   +          +    -0.02308351901024 * S_NumWebVisitsMonth
1090167   +          +     0.00403225397753 * S_RFMstat  +    -0.21691316840182 *
1090168   +        S_RMntFrq  +     0.53938373050534 * S_Recency
1090169   +          +     0.55541282723709 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.0175934799517 * S_AcceptedCmpTotal + 0.05885450913465 * S_Age + 
-0.17194721523787 * S_Frq + -0.82356228294539 * S_Income + 0.39869341630865 * S_Kidhome + 
-0.04263586382867 * S_MntFishProducts + 0.02697365132515 * S_MntFruits + 0.04818007940845 * 
S_MntGoldProds + 0.1933390486387 * S_MntSweetProducts + -0.14308588367026 * S_MonthsAsCustomer 
+ -0.01053346972758 * S_NumDealsPurchases + -0.02308351901024 * S_NumWebVisitsMonth + 
0.00403225397753 * S_RFMstat + -0.21691316840182 * S_RMntFrq + 0.53938373050534 * S_Recency + 
0.55541282723709 * S_Teenhome ;
1090170   +   H12  =    -0.31735811206172 * S_AcceptedCmpTotal  +    -0.13976815294846 *
1090171   +        S_Age  +    -0.11928757030551 * S_Frq  +    -0.03597478449162 *
1090172   +        S_Income  +     0.31514301668626 * S_Kidhome
1090173   +          +    -0.05723808748191 * S_MntFishProducts
1090174   +          +     0.04545715816601 * S_MntFruits  +     0.19006209866265 *
1090175   +        S_MntGoldProds  +     0.34690576354698 * S_MntSweetProducts
1090176   +          +    -0.48738730918684 * S_MonthsAsCustomer
1090177   +          +     0.31545795225489 * S_NumDealsPurchases
1090178   +          +     0.24686603252864 * S_NumWebVisitsMonth
1090179   +          +     0.29857007170218 * S_RFMstat  +    -0.01009427724752 *
1090180   +        S_RMntFrq  +    -0.48894693883774 * S_Recency
1090181   +          +    -0.32384426712368 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -0.31735811206172 * S_AcceptedCmpTotal + -0.13976815294846 * S_Age 
+ -0.11928757030551 * S_Frq + -0.03597478449162 * S_Income + 0.31514301668626 * S_Kidhome + 
-0.05723808748191 * S_MntFishProducts + 0.04545715816601 * S_MntFruits + 0.19006209866265 * 
S_MntGoldProds + 0.34690576354698 * S_MntSweetProducts + -0.48738730918684 * 
S_MonthsAsCustomer + 0.31545795225489 * S_NumDealsPurchases + 0.24686603252864 * 
S_NumWebVisitsMonth + 0.29857007170218 * S_RFMstat + -0.01009427724752 * S_RMntFrq + 
-0.48894693883774 * S_Recency + -0.32384426712368 * S_Teenhome ;
1090182   +   H13  =    -0.67705794412683 * S_AcceptedCmpTotal  +     -0.1538815804864 *
1090183   +        S_Age  +    -0.32580272740463 * S_Frq  +    -0.42829033761305 *
1090184   +        S_Income  +    -0.48452563006855 * S_Kidhome
1090185   +          +      0.1638851163007 * S_MntFishProducts
1090186   +          +      0.0664068987141 * S_MntFruits  +    -0.54942999951449 *
1090187   +        S_MntGoldProds  +    -0.03119903843323 * S_MntSweetProducts
1090188   +          +    -0.09008316729574 * S_MonthsAsCustomer
1090189   +          +    -0.45452883452999 * S_NumDealsPurchases
1090190   +          +    -0.51499533680205 * S_NumWebVisitsMonth
1090191   +          +    -0.31380282266424 * S_RFMstat  +    -0.49525143192723 *
1090192   +        S_RMntFrq  +     0.78729387300328 * S_Recency
1090193   +          +    -0.00915408985389 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = -0.67705794412683 * S_AcceptedCmpTotal + -0.1538815804864 * S_Age 
+ -0.32580272740463 * S_Frq + -0.42829033761305 * S_Income + -0.48452563006855 * S_Kidhome + 
0.1638851163007 * S_MntFishProducts + 0.0664068987141 * S_MntFruits + -0.54942999951449 * 
S_MntGoldProds + -0.03119903843323 * S_MntSweetProducts + -0.09008316729574 * 
S_MonthsAsCustomer + -0.45452883452999 * S_NumDealsPurchases + -0.51499533680205 * 
S_NumWebVisitsMonth + -0.31380282266424 * S_RFMstat + -0.49525143192723 * S_RMntFrq + 
0.78729387300328 * S_Recency + -0.00915408985389 * S_Teenhome ;
1090194   +   H14  =     0.38318271090494 * S_AcceptedCmpTotal  +     0.06739638561066 *
1090195   +        S_Age  +     0.06912614028701 * S_Frq  +     0.14095220260271 *
1090196   +        S_Income  +    -0.62959343200613 * S_Kidhome
1090197   +          +    -0.08953561593231 * S_MntFishProducts
1090198   +          +    -0.17218233364246 * S_MntFruits  +    -0.00637076803669 *
1090199   +        S_MntGoldProds  +    -0.30194599011284 * S_MntSweetProducts
1090200   +          +    -0.04786752357029 * S_MonthsAsCustomer
1090201   +          +     0.01658790214447 * S_NumDealsPurchases
1090202   +          +     0.60508225698649 * S_NumWebVisitsMonth
1090203   +          +     0.24353060507938 * S_RFMstat  +    -0.16860031884486 *
1090204   +        S_RMntFrq  +    -0.74371082820398 * S_Recency
1090205   +          +    -0.33551735128078 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = 0.38318271090494 * S_AcceptedCmpTotal + 0.06739638561066 * S_Age + 
0.06912614028701 * S_Frq + 0.14095220260271 * S_Income + -0.62959343200613 * S_Kidhome + 
-0.08953561593231 * S_MntFishProducts + -0.17218233364246 * S_MntFruits + -0.00637076803669 * 
S_MntGoldProds + -0.30194599011284 * S_MntSweetProducts + -0.04786752357029 * 
S_MonthsAsCustomer + 0.01658790214447 * S_NumDealsPurchases + 0.60508225698649 * 
S_NumWebVisitsMonth + 0.24353060507938 * S_RFMstat + -0.16860031884486 * S_RMntFrq + 
-0.74371082820398 * S_Recency + -0.33551735128078 * S_Teenhome ;
1090206   +   H15  =    -0.33857166416401 * S_AcceptedCmpTotal  +     0.16520608022036 *
1090207   +        S_Age  +     0.94641603263172 * S_Frq  +     0.27973805141234 *
1090208   +        S_Income  +    -0.02417847760857 * S_Kidhome
1090209   +          +    -0.15499190740194 * S_MntFishProducts
1090210   +          +     0.06053779821593 * S_MntFruits  +     0.01880479324025 *
1090211   +        S_MntGoldProds  +    -0.12339726666832 * S_MntSweetProducts
1090212   +          +     0.03507116553703 * S_MonthsAsCustomer
1090213   +          +    -0.55190381693021 * S_NumDealsPurchases
1090214   +          +    -0.59332657995985 * S_NumWebVisitsMonth
1090215   +          +    -0.06593374840561 * S_RFMstat  +     -0.1695910963416 *
1090216   +        S_RMntFrq  +     0.67557246434122 * S_Recency
1090217   +          +    -0.18658362303394 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H15 = -0.33857166416401 * S_AcceptedCmpTotal + 0.16520608022036 * S_Age 
+ 0.94641603263172 * S_Frq + 0.27973805141234 * S_Income + -0.02417847760857 * S_Kidhome + 
-0.15499190740194 * S_MntFishProducts + 0.06053779821593 * S_MntFruits + 0.01880479324025 * 
S_MntGoldProds + -0.12339726666832 * S_MntSweetProducts + 0.03507116553703 * 
S_MonthsAsCustomer + -0.55190381693021 * S_NumDealsPurchases + -0.59332657995985 * 
S_NumWebVisitsMonth + -0.06593374840561 * S_RFMstat + -0.1695910963416 * S_RMntFrq + 
0.67557246434122 * S_Recency + -0.18658362303394 * S_Teenhome ;
1090218   +   H11  = H11  +     0.33421746514492 * AcceptedCmp10
1090219   +          +     0.40665603760529 * AcceptedCmp20  +     0.31091046539166 *
1090220   +        AcceptedCmp30  +     0.31067810471417 * AcceptedCmp40
1090221   +          +     0.23230606314386 * AcceptedCmp50  +     0.16336773428886 *
1090222   +        Complain0  +    -0.30987882500611 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.33421746514492 * AcceptedCmp10 + 0.40665603760529 * 
AcceptedCmp20 + 0.31091046539166 * AcceptedCmp30 + 0.31067810471417 * AcceptedCmp40 + 
0.23230606314386 * AcceptedCmp50 + 0.16336773428886 * Complain0 + -0.30987882500611 * 
HigherEducationBinary0 ;
1090223   +   H12  = H12  +     0.15837463939449 * AcceptedCmp10
1090224   +          +    -0.01452684677445 * AcceptedCmp20  +    -0.18194082864383 *
1090225   +        AcceptedCmp30  +     0.10656170173016 * AcceptedCmp40
1090226   +          +     0.27710912124072 * AcceptedCmp50  +     0.21438736172214 *
1090227   +        Complain0  +      0.2669951422121 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.15837463939449 * AcceptedCmp10 + -0.01452684677445 * 
AcceptedCmp20 + -0.18194082864383 * AcceptedCmp30 + 0.10656170173016 * AcceptedCmp40 + 
0.27710912124072 * AcceptedCmp50 + 0.21438736172214 * Complain0 + 0.2669951422121 * 
HigherEducationBinary0 ;
1090228   +   H13  = H13  +    -0.11101425179048 * AcceptedCmp10
1090229   +          +    -0.13751555879468 * AcceptedCmp20  +     0.15733527433639 *
1090230   +        AcceptedCmp30  +    -0.09214109408136 * AcceptedCmp40
1090231   +          +     0.20478673178439 * AcceptedCmp50  +    -0.28890027497717 *
1090232   +        Complain0  +     0.12242984309847 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.11101425179048 * AcceptedCmp10 + -0.13751555879468 * 
AcceptedCmp20 + 0.15733527433639 * AcceptedCmp30 + -0.09214109408136 * AcceptedCmp40 + 
0.20478673178439 * AcceptedCmp50 + -0.28890027497717 * Complain0 + 0.12242984309847 * 
HigherEducationBinary0 ;
1090233   +   H14  = H14  +     0.23187291622457 * AcceptedCmp10
1090234   +          +    -0.00683976547266 * AcceptedCmp20  +    -0.31710598764248 *
1090235   +        AcceptedCmp30  +     0.01758514221597 * AcceptedCmp40
1090236   +          +     0.01100509244187 * AcceptedCmp50  +     0.18584999296157 *
1090237   +        Complain0  +     0.02524550049258 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.23187291622457 * AcceptedCmp10 + -0.00683976547266 * 
AcceptedCmp20 + -0.31710598764248 * AcceptedCmp30 + 0.01758514221597 * AcceptedCmp40 + 
0.01100509244187 * AcceptedCmp50 + 0.18584999296157 * Complain0 + 0.02524550049258 * 
HigherEducationBinary0 ;
1090238   +   H15  = H15  +     0.53220831693924 * AcceptedCmp10
1090239   +          +     0.01983211122446 * AcceptedCmp20  +      0.4704897795251 *
1090240   +        AcceptedCmp30  +    -0.05798671810245 * AcceptedCmp40
1090241   +          +      0.2900384423652 * AcceptedCmp50  +     0.05796705496261 *
1090242   +        Complain0  +     0.17745347141736 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.53220831693924 * AcceptedCmp10 + 0.01983211122446 * 
AcceptedCmp20 + 0.4704897795251 * AcceptedCmp30 + -0.05798671810245 * AcceptedCmp40 + 
0.2900384423652 * AcceptedCmp50 + 0.05796705496261 * Complain0 + 0.17745347141736 * 
HigherEducationBinary0 ;
1090243   +   H11  = H11  +     0.02871001640043 * Education2n_Cycle
1090244   +          +    -0.13470776546868 * EducationBasic  +    -0.09722995474504 *
1090245   +        EducationGraduation  +     0.23764107317064 * EducationMaster
1090246   +          +    -0.41654638301737 * Marital_StatusDivorced
1090247   +          +     0.65956207700583 * Marital_StatusMarried
1090248   +          +    -0.52573042887166 * Marital_StatusSingle
1090249   +          +     0.70466028872575 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.02871001640043 * Education2n_Cycle + -0.13470776546868 * 
EducationBasic + -0.09722995474504 * EducationGraduation + 0.23764107317064 * EducationMaster 
+ -0.41654638301737 * Marital_StatusDivorced + 0.65956207700583 * Marital_StatusMarried + 
-0.52573042887166 * Marital_StatusSingle + 0.70466028872575 * Marital_StatusTogether ;
1090250   +   H12  = H12  +    -0.18219729356622 * Education2n_Cycle
1090251   +          +    -0.04034334204744 * EducationBasic  +     0.26266153233615 *
1090252   +        EducationGraduation  +     0.04617834975571 * EducationMaster
1090253   +          +    -0.32313846862799 * Marital_StatusDivorced
1090254   +          +     0.15910539009887 * Marital_StatusMarried
1090255   +          +     0.28781821946114 * Marital_StatusSingle
1090256   +          +    -0.31451367898445 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.18219729356622 * Education2n_Cycle + -0.04034334204744 * 
EducationBasic + 0.26266153233615 * EducationGraduation + 0.04617834975571 * EducationMaster + 
-0.32313846862799 * Marital_StatusDivorced + 0.15910539009887 * Marital_StatusMarried + 
0.28781821946114 * Marital_StatusSingle + -0.31451367898445 * Marital_StatusTogether ;
1090257   +   H13  = H13  +     0.03267721493849 * Education2n_Cycle
1090258   +          +     0.16906837093601 * EducationBasic  +    -0.24874822218195 *
1090259   +        EducationGraduation  +    -0.16815820019721 * EducationMaster
1090260   +          +    -0.06481096024989 * Marital_StatusDivorced
1090261   +          +    -0.01184060710261 * Marital_StatusMarried
1090262   +          +    -0.04932258474026 * Marital_StatusSingle
1090263   +          +     -0.1515388053958 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.03267721493849 * Education2n_Cycle + 0.16906837093601 * 
EducationBasic + -0.24874822218195 * EducationGraduation + -0.16815820019721 * EducationMaster 
+ -0.06481096024989 * Marital_StatusDivorced + -0.01184060710261 * Marital_StatusMarried + 
-0.04932258474026 * Marital_StatusSingle + -0.1515388053958 * Marital_StatusTogether ;
1090264   +   H14  = H14  +     0.04382537081818 * Education2n_Cycle
1090265   +          +     0.09896945976445 * EducationBasic  +      0.2410849324915 *
1090266   +        EducationGraduation  +    -0.17878202935912 * EducationMaster
1090267   +          +      0.2062190716357 * Marital_StatusDivorced
1090268   +          +      -0.523160668609 * Marital_StatusMarried
1090269   +          +     0.50687401816278 * Marital_StatusSingle
1090270   +          +    -0.14896192891933 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.04382537081818 * Education2n_Cycle + 0.09896945976445 * 
EducationBasic + 0.2410849324915 * EducationGraduation + -0.17878202935912 * EducationMaster + 
0.2062190716357 * Marital_StatusDivorced + -0.523160668609 * Marital_StatusMarried + 
0.50687401816278 * Marital_StatusSingle + -0.14896192891933 * Marital_StatusTogether ;
1090271   +   H15  = H15  +    -0.08178258730533 * Education2n_Cycle
1090272   +          +      0.2352291498146 * EducationBasic  +     0.00142061419661 *
1090273   +        EducationGraduation  +      0.0248100493803 * EducationMaster
1090274   +          +     -0.1386176879533 * Marital_StatusDivorced
1090275   +          +    -0.17611433777439 * Marital_StatusMarried
1090276   +          +     0.09908348348999 * Marital_StatusSingle
1090277   +          +     0.03642332762739 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + -0.08178258730533 * Education2n_Cycle + 0.2352291498146 * 
EducationBasic + 0.00142061419661 * EducationGraduation + 0.0248100493803 * EducationMaster + 
-0.1386176879533 * Marital_StatusDivorced + -0.17611433777439 * Marital_StatusMarried + 
0.09908348348999 * Marital_StatusSingle + 0.03642332762739 * Marital_StatusTogether ;
1090278   +   H11  =     0.45628072516851 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 0.45628072516851 + H11 ;
1090279   +   H12  =    -0.95695553300305 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -0.95695553300305 + H12 ;
1090280   +   H13  =    -0.44156518168947 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.44156518168947 + H13 ;
1090281   +   H14  =      0.5435213841731 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 0.5435213841731 + H14 ;
1090282   +   H15  =     0.82816554742793 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = 0.82816554742793 + H15 ;
1090283   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1090284   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1090285   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1090286   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1090287   +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
1090288   +END;
MPRINT(EM_DIAGRAM):   END;
1090289   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1090290   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1090291   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1090292   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1090293   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1090294   +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
1090295   +END;
MPRINT(EM_DIAGRAM):   END;
1090296   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1090297   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1090298   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1090299   +
1090300   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1090301   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1090302   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1090303   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1090304   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1090305   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1090306   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1090307   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1090308   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1090309   +end;
MPRINT(EM_DIAGRAM):   end;
1090310   +else do;
MPRINT(EM_DIAGRAM):   else do;
1090311   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1090312   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1090313   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1090314   +   end;
MPRINT(EM_DIAGRAM):   end;
1090315   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1090316   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1090317   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1090318   +   end;
MPRINT(EM_DIAGRAM):   end;
1090319   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1090320   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1090321   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1090322   +   end;
MPRINT(EM_DIAGRAM):   end;
1090323   +end;
MPRINT(EM_DIAGRAM):   end;
1090324   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1090325   +   P_DepVar1  =    -3.08501570662701 * H11  +     0.89180279281701 * H12
1090326   +          +    -2.65199906073292 * H13  +     1.47191997336768 * H14
1090327   +          +     -1.9303334635002 * H15 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.08501570662701 * H11 + 0.89180279281701 * H12 + 
-2.65199906073292 * H13 + 1.47191997336768 * H14 + -1.9303334635002 * H15 ;
1090328   +   P_DepVar1  =    -1.84416627670626 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.84416627670626 + P_DepVar1 ;
1090329   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1090330   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1090331   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1090332   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1090333   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1090334   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1090335   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1090336   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1090337   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1090338   +END;
MPRINT(EM_DIAGRAM):   END;
1090339   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1090340   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1090341   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1090342   +END;
MPRINT(EM_DIAGRAM):   END;
1090343   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1090344   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1090345   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1090346   +END;
MPRINT(EM_DIAGRAM):   END;
1090347   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1090348   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1090349   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1090350   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1090351   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1090352   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1090353   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1090354   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1090355   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1090356   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1090357   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1090358   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1090359   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1090360   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1090361   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1090362   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1090363   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1090364   +END;
MPRINT(EM_DIAGRAM):   END;
1090365   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1090366   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1090367   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1090368   +drop
1090369   +H11
1090370   +H12
1090371   +H13
1090372   +H14
1090373   +H15
1090374   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 ;
1090375   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1090376   +* Renaming variables for Neural40;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural40;
1090377   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1090378   +* Renaming Posterior variables for Neural40;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural40;
1090379   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1090380   +drop Neural40_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural40_P_DepVar1;
1090381   +Neural40_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural40_P_DepVar1 = P_DepVar1;
1090382   +drop Neural40_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural40_P_DepVar0;
1090383   +Neural40_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural40_P_DepVar0 = P_DepVar0;
1090384   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1090385   +* Renaming _WARN_ variable for Neural40;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural40;
1090386   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1090387   +length Neural40_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural40_WARN_ $4;
1090388   +drop Neural40_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural40_WARN_;
1090389   +Neural40_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural40_WARN_ = _WARN_;
1090390   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1090391   +* Ensmbl12: Scoring Code of model 8 of 10;
MPRINT(EM_DIAGRAM):   * Ensmbl12: Scoring Code of model 8 of 10;
1090392   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1090393   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1090394   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
1090395   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1090396   +* NODE: Neural41;
MPRINT(EM_DIAGRAM):   * NODE: Neural41;
1090397   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1090398   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1090399   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1090400   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1090401   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1090402   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1090403   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1090404   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1090405   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1090406   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1090407   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1090408   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1090409   +LENGTH _WARN_ $4
1090410   +      F_DepVar  $ 12
1090411   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1090412   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1090413   +
1090414   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1090415   +
1090416   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1090417   +
1090418   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1090419   +
1090420   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1090421   +
1090422   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1090423   +
1090424   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1090425   +
1090426   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1090427   +
1090428   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1090429   +
1090430   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1090431   +
1090432   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1090433   +
1090434   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1090435   +
1090436   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1090437   +
1090438   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1090439   +
1090440   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1090441   +
1090442   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1090443   +
1090444   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1090445   +
1090446   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1090447   +
1090448   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1090449   +
1090450   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1090451   +
1090452   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1090453   +
1090454   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1090455   +
1090456   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1090457   +
1090458   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1090459   +
1090460   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1090461   +
1090462   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1090463   +
1090464   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1090465   +
1090466   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1090467   +
1090468   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1090469   +
1090470   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1090471   +
1090472   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1090473   +
1090474   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1090475   +
1090476   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1090477   +
1090478   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1090479   +
1090480   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1090481   +
1090482   +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
1090483   +
1090484   +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
1090485   +
1090486   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1090487   +
1090488   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1090489   +
1090490   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1090491   +
1090492   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1090493   +
1090494   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1090495   +
1090496   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1090497   +
1090498   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1090499   +
1090500   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1090501   +
1090502   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1090503   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1090504   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1090505   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1090506   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1090507   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1090508   +end;
MPRINT(EM_DIAGRAM):   end;
1090509   +else do;
MPRINT(EM_DIAGRAM):   else do;
1090510   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1090511   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1090512   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1090513   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1090514   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1090515   +   end;
MPRINT(EM_DIAGRAM):   end;
1090516   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1090517   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1090518   +   end;
MPRINT(EM_DIAGRAM):   end;
1090519   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1090520   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1090521   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1090522   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1090523   +   end;
MPRINT(EM_DIAGRAM):   end;
1090524   +end;
MPRINT(EM_DIAGRAM):   end;
1090525   +
1090526   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1090527   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1090528   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1090529   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1090530   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1090531   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1090532   +end;
MPRINT(EM_DIAGRAM):   end;
1090533   +else do;
MPRINT(EM_DIAGRAM):   else do;
1090534   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1090535   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1090536   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1090537   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1090538   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1090539   +   end;
MPRINT(EM_DIAGRAM):   end;
1090540   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1090541   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1090542   +   end;
MPRINT(EM_DIAGRAM):   end;
1090543   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1090544   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1090545   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1090546   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1090547   +   end;
MPRINT(EM_DIAGRAM):   end;
1090548   +end;
MPRINT(EM_DIAGRAM):   end;
1090549   +
1090550   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1090551   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1090552   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1090553   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1090554   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1090555   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1090556   +end;
MPRINT(EM_DIAGRAM):   end;
1090557   +else do;
MPRINT(EM_DIAGRAM):   else do;
1090558   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1090559   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1090560   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1090561   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1090562   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1090563   +   end;
MPRINT(EM_DIAGRAM):   end;
1090564   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1090565   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1090566   +   end;
MPRINT(EM_DIAGRAM):   end;
1090567   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1090568   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1090569   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1090570   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1090571   +   end;
MPRINT(EM_DIAGRAM):   end;
1090572   +end;
MPRINT(EM_DIAGRAM):   end;
1090573   +
1090574   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1090575   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1090576   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1090577   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1090578   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1090579   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1090580   +end;
MPRINT(EM_DIAGRAM):   end;
1090581   +else do;
MPRINT(EM_DIAGRAM):   else do;
1090582   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1090583   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1090584   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1090585   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1090586   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1090587   +   end;
MPRINT(EM_DIAGRAM):   end;
1090588   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1090589   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1090590   +   end;
MPRINT(EM_DIAGRAM):   end;
1090591   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1090592   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1090593   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1090594   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1090595   +   end;
MPRINT(EM_DIAGRAM):   end;
1090596   +end;
MPRINT(EM_DIAGRAM):   end;
1090597   +
1090598   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1090599   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1090600   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1090601   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1090602   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1090603   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1090604   +end;
MPRINT(EM_DIAGRAM):   end;
1090605   +else do;
MPRINT(EM_DIAGRAM):   else do;
1090606   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1090607   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1090608   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1090609   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1090610   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1090611   +   end;
MPRINT(EM_DIAGRAM):   end;
1090612   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1090613   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1090614   +   end;
MPRINT(EM_DIAGRAM):   end;
1090615   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1090616   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1090617   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1090618   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1090619   +   end;
MPRINT(EM_DIAGRAM):   end;
1090620   +end;
MPRINT(EM_DIAGRAM):   end;
1090621   +
1090622   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1090623   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1090624   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1090625   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1090626   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1090627   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1090628   +end;
MPRINT(EM_DIAGRAM):   end;
1090629   +else do;
MPRINT(EM_DIAGRAM):   else do;
1090630   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1090631   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1090632   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1090633   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1090634   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1090635   +   end;
MPRINT(EM_DIAGRAM):   end;
1090636   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1090637   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1090638   +   end;
MPRINT(EM_DIAGRAM):   end;
1090639   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1090640   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1090641   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1090642   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1090643   +   end;
MPRINT(EM_DIAGRAM):   end;
1090644   +end;
MPRINT(EM_DIAGRAM):   end;
1090645   +
1090646   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1090647   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1090648   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1090649   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1090650   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1090651   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1090652   +end;
MPRINT(EM_DIAGRAM):   end;
1090653   +else do;
MPRINT(EM_DIAGRAM):   else do;
1090654   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1090655   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1090656   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1090657   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1090658   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1090659   +   end;
MPRINT(EM_DIAGRAM):   end;
1090660   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1090661   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1090662   +   end;
MPRINT(EM_DIAGRAM):   end;
1090663   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1090664   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1090665   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1090666   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1090667   +   end;
MPRINT(EM_DIAGRAM):   end;
1090668   +end;
MPRINT(EM_DIAGRAM):   end;
1090669   +
1090670   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1090671   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
1090672   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1090673   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1090674   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1090675   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1090676   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1090677   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1090678   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1090679   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1090680   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1090681   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1090682   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1090683   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1090684   +end;
MPRINT(EM_DIAGRAM):   end;
1090685   +else do;
MPRINT(EM_DIAGRAM):   else do;
1090686   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1090687   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1090688   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1090689   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1090690   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1090691   +   end;
MPRINT(EM_DIAGRAM):   end;
1090692   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1090693   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1090694   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1090695   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1090696   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1090697   +   end;
MPRINT(EM_DIAGRAM):   end;
1090698   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1090699   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1090700   +   end;
MPRINT(EM_DIAGRAM):   end;
1090701   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1090702   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1090703   +   end;
MPRINT(EM_DIAGRAM):   end;
1090704   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1090705   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1090706   +   end;
MPRINT(EM_DIAGRAM):   end;
1090707   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1090708   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1090709   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1090710   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1090711   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1090712   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1090713   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1090714   +   end;
MPRINT(EM_DIAGRAM):   end;
1090715   +end;
MPRINT(EM_DIAGRAM):   end;
1090716   +
1090717   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1090718   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1090719   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
1090720   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1090721   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1090722   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1090723   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1090724   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1090725   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1090726   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1090727   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1090728   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1090729   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1090730   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1090731   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1090732   +end;
MPRINT(EM_DIAGRAM):   end;
1090733   +else do;
MPRINT(EM_DIAGRAM):   else do;
1090734   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1090735   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1090736   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1090737   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1090738   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1090739   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1090740   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1090741   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1090742   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1090743   +         end;
MPRINT(EM_DIAGRAM):   end;
1090744   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1090745   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1090746   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1090747   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1090748   +            end;
MPRINT(EM_DIAGRAM):   end;
1090749   +         end;
MPRINT(EM_DIAGRAM):   end;
1090750   +      end;
MPRINT(EM_DIAGRAM):   end;
1090751   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1090752   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1090753   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1090754   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1090755   +         end;
MPRINT(EM_DIAGRAM):   end;
1090756   +      end;
MPRINT(EM_DIAGRAM):   end;
1090757   +   end;
MPRINT(EM_DIAGRAM):   end;
1090758   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1090759   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1090760   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1090761   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1090762   +      end;
MPRINT(EM_DIAGRAM):   end;
1090763   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1090764   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1090765   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1090766   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1090767   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1090768   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1090769   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1090770   +         end;
MPRINT(EM_DIAGRAM):   end;
1090771   +      end;
MPRINT(EM_DIAGRAM):   end;
1090772   +   end;
MPRINT(EM_DIAGRAM):   end;
1090773   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1090774   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1090775   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1090776   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1090777   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1090778   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1090779   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1090780   +   end;
MPRINT(EM_DIAGRAM):   end;
1090781   +end;
MPRINT(EM_DIAGRAM):   end;
1090782   +
1090783   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1090784   +*** Checking missing input Interval
1090785   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1090786   +
1090787   +IF NMISS(
1090788   +   AcceptedCmpTotal ,
1090789   +   Age ,
1090790   +   Frq ,
1090791   +   Income ,
1090792   +   Kidhome ,
1090793   +   MntFishProducts ,
1090794   +   MntFruits ,
1090795   +   MntGoldProds ,
1090796   +   MntSweetProducts ,
1090797   +   MonthsAsCustomer ,
1090798   +   NumDealsPurchases ,
1090799   +   NumWebVisitsMonth ,
1090800   +   RFMstat ,
1090801   +   RMntFrq ,
1090802   +   Recency ,
1090803   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , 
MntFishProducts , MntFruits , MntGoldProds , MntSweetProducts , MonthsAsCustomer , 
NumDealsPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , Teenhome ) THEN DO;
1090804   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1090805   +
1090806   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1090807   +END;
MPRINT(EM_DIAGRAM):   END;
1090808   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1090809   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1090810   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1090811   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1090812   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1090813   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1090814   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1090815   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1090816   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1090817   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1090818   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1090819   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1090820   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1090821   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1090822   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1090823   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1090824   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1090825   +   S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
1090826   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
1090827   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1090828   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1090829   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1090830   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1090831   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1090832   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1090833   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1090834   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1090835   +END;
MPRINT(EM_DIAGRAM):   END;
1090836   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1090837   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1090838   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1090839   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1090840   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1090841   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1090842   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1090843   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1090844   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1090845   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1090846   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1090847   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1090848   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1090849   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1090850   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1090851   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1090852   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1090853   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1090854   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1090855   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1090856   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1090857   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1090858   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1090859   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1090860   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1090861   +   ELSE S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
1090862   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
1090863   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1090864   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1090865   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1090866   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1090867   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1090868   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1090869   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1090870   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1090871   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1090872   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1090873   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1090874   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1090875   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1090876   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1090877   +END;
MPRINT(EM_DIAGRAM):   END;
1090878   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1090879   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1090880   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1090881   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1090882   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1090883   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1090884   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1090885   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1090886   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1090887   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1090888   +   H11  =     0.00008202203841 * S_AcceptedCmpTotal  +    -0.13126483592154 *
1090889   +        S_Age  +    -0.18503379491116 * S_Frq  +      0.0037482920266 *
1090890   +        S_Income  +    -0.52684337240504 * S_Kidhome
1090891   +          +     0.07835956947085 * S_MntFishProducts
1090892   +          +    -0.04668308882455 * S_MntFruits  +     0.05311471984852 *
1090893   +        S_MntGoldProds  +    -0.39576933150762 * S_MntSweetProducts
1090894   +          +    -0.44463888327841 * S_MonthsAsCustomer
1090895   +          +    -0.20310227710644 * S_NumDealsPurchases
1090896   +          +     0.06594467408568 * S_NumWebVisitsMonth
1090897   +          +      0.1351556470497 * S_RFMstat  +    -0.29446460505048 *
1090898   +        S_RMntFrq  +    -0.68878207173764 * S_Recency
1090899   +          +    -0.29241927123525 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.00008202203841 * S_AcceptedCmpTotal + -0.13126483592154 * S_Age 
+ -0.18503379491116 * S_Frq + 0.0037482920266 * S_Income + -0.52684337240504 * S_Kidhome + 
0.07835956947085 * S_MntFishProducts + -0.04668308882455 * S_MntFruits + 0.05311471984852 * 
S_MntGoldProds + -0.39576933150762 * S_MntSweetProducts + -0.44463888327841 * 
S_MonthsAsCustomer + -0.20310227710644 * S_NumDealsPurchases + 0.06594467408568 * 
S_NumWebVisitsMonth + 0.1351556470497 * S_RFMstat + -0.29446460505048 * S_RMntFrq + 
-0.68878207173764 * S_Recency + -0.29241927123525 * S_Teenhome ;
1090900   +   H12  =     0.38864749644126 * S_AcceptedCmpTotal  +    -0.01077611135972 *
1090901   +        S_Age  +     0.24187074268223 * S_Frq  +     0.64180191864108 *
1090902   +        S_Income  +     0.91025818069308 * S_Kidhome
1090903   +          +     0.26585860774761 * S_MntFishProducts
1090904   +          +     -0.3087386188037 * S_MntFruits  +     0.14643568534568 *
1090905   +        S_MntGoldProds  +     0.23763200275034 * S_MntSweetProducts
1090906   +          +    -0.12421403342454 * S_MonthsAsCustomer
1090907   +          +     0.66931066909347 * S_NumDealsPurchases
1090908   +          +     0.35050056776957 * S_NumWebVisitsMonth
1090909   +          +     0.16127659142199 * S_RFMstat  +     0.04112742589329 *
1090910   +        S_RMntFrq  +    -0.83075146355987 * S_Recency
1090911   +          +    -0.37723917156575 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = 0.38864749644126 * S_AcceptedCmpTotal + -0.01077611135972 * S_Age 
+ 0.24187074268223 * S_Frq + 0.64180191864108 * S_Income + 0.91025818069308 * S_Kidhome + 
0.26585860774761 * S_MntFishProducts + -0.3087386188037 * S_MntFruits + 0.14643568534568 * 
S_MntGoldProds + 0.23763200275034 * S_MntSweetProducts + -0.12421403342454 * 
S_MonthsAsCustomer + 0.66931066909347 * S_NumDealsPurchases + 0.35050056776957 * 
S_NumWebVisitsMonth + 0.16127659142199 * S_RFMstat + 0.04112742589329 * S_RMntFrq + 
-0.83075146355987 * S_Recency + -0.37723917156575 * S_Teenhome ;
1090912   +   H13  =     0.02339384767281 * S_AcceptedCmpTotal  +    -0.17700567590774 *
1090913   +        S_Age  +    -0.38060509731554 * S_Frq  +    -0.86026143079344 *
1090914   +        S_Income  +     0.63027536562783 * S_Kidhome
1090915   +          +     0.15303249164566 * S_MntFishProducts
1090916   +          +    -0.04780128957622 * S_MntFruits  +    -0.02064261038049 *
1090917   +        S_MntGoldProds  +     0.26238383938455 * S_MntSweetProducts
1090918   +          +    -0.21006970062531 * S_MonthsAsCustomer
1090919   +          +      0.2955774677605 * S_NumDealsPurchases
1090920   +          +    -0.15769947513958 * S_NumWebVisitsMonth
1090921   +          +    -0.02874776268384 * S_RFMstat  +     -0.3955429869434 *
1090922   +        S_RMntFrq  +      0.3744122250079 * S_Recency
1090923   +          +     0.58295521976226 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = 0.02339384767281 * S_AcceptedCmpTotal + -0.17700567590774 * S_Age 
+ -0.38060509731554 * S_Frq + -0.86026143079344 * S_Income + 0.63027536562783 * S_Kidhome + 
0.15303249164566 * S_MntFishProducts + -0.04780128957622 * S_MntFruits + -0.02064261038049 * 
S_MntGoldProds + 0.26238383938455 * S_MntSweetProducts + -0.21006970062531 * 
S_MonthsAsCustomer + 0.2955774677605 * S_NumDealsPurchases + -0.15769947513958 * 
S_NumWebVisitsMonth + -0.02874776268384 * S_RFMstat + -0.3955429869434 * S_RMntFrq + 
0.3744122250079 * S_Recency + 0.58295521976226 * S_Teenhome ;
1090924   +   H14  =    -0.22800152627721 * S_AcceptedCmpTotal  +     0.27991667815594 *
1090925   +        S_Age  +     0.89001922321833 * S_Frq  +     0.17467731177386 *
1090926   +        S_Income  +    -0.00985947331416 * S_Kidhome
1090927   +          +    -0.27114701164817 * S_MntFishProducts
1090928   +          +     0.32554392037328 * S_MntFruits  +     0.06705670808471 *
1090929   +        S_MntGoldProds  +     -0.3590087223323 * S_MntSweetProducts
1090930   +          +    -0.02702818828921 * S_MonthsAsCustomer
1090931   +          +    -0.63381188911946 * S_NumDealsPurchases
1090932   +          +    -0.86143000704363 * S_NumWebVisitsMonth
1090933   +          +    -0.16788755655818 * S_RFMstat  +    -0.09712800982817 *
1090934   +        S_RMntFrq  +     0.61892338869919 * S_Recency
1090935   +          +    -0.21544816860839 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = -0.22800152627721 * S_AcceptedCmpTotal + 0.27991667815594 * S_Age 
+ 0.89001922321833 * S_Frq + 0.17467731177386 * S_Income + -0.00985947331416 * S_Kidhome + 
-0.27114701164817 * S_MntFishProducts + 0.32554392037328 * S_MntFruits + 0.06705670808471 * 
S_MntGoldProds + -0.3590087223323 * S_MntSweetProducts + -0.02702818828921 * 
S_MonthsAsCustomer + -0.63381188911946 * S_NumDealsPurchases + -0.86143000704363 * 
S_NumWebVisitsMonth + -0.16788755655818 * S_RFMstat + -0.09712800982817 * S_RMntFrq + 
0.61892338869919 * S_Recency + -0.21544816860839 * S_Teenhome ;
1090936   +   H15  =      0.0846389232492 * S_AcceptedCmpTotal  +    -0.03933692648164 *
1090937   +        S_Age  +     0.26004669807852 * S_Frq  +     0.30306661543325 *
1090938   +        S_Income  +    -0.24206929946772 * S_Kidhome
1090939   +          +    -0.19039689229491 * S_MntFishProducts
1090940   +          +    -0.22957509816007 * S_MntFruits  +    -0.35006912387254 *
1090941   +        S_MntGoldProds  +    -0.02737135204648 * S_MntSweetProducts
1090942   +          +     0.03815221487927 * S_MonthsAsCustomer
1090943   +          +    -0.43579024169696 * S_NumDealsPurchases
1090944   +          +    -0.27796253880432 * S_NumWebVisitsMonth
1090945   +          +     0.15010895791429 * S_RFMstat  +     0.24377797912725 *
1090946   +        S_RMntFrq  +     0.50547916383425 * S_Recency
1090947   +          +    -0.22622962943787 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H15 = 0.0846389232492 * S_AcceptedCmpTotal + -0.03933692648164 * S_Age + 
0.26004669807852 * S_Frq + 0.30306661543325 * S_Income + -0.24206929946772 * S_Kidhome + 
-0.19039689229491 * S_MntFishProducts + -0.22957509816007 * S_MntFruits + -0.35006912387254 * 
S_MntGoldProds + -0.02737135204648 * S_MntSweetProducts + 0.03815221487927 * 
S_MonthsAsCustomer + -0.43579024169696 * S_NumDealsPurchases + -0.27796253880432 * 
S_NumWebVisitsMonth + 0.15010895791429 * S_RFMstat + 0.24377797912725 * S_RMntFrq + 
0.50547916383425 * S_Recency + -0.22622962943787 * S_Teenhome ;
1090948   +   H16  =     0.03788304209102 * S_AcceptedCmpTotal  +    -0.27022676521755 *
1090949   +        S_Age  +    -0.17480141247917 * S_Frq  +     0.53345624791204 *
1090950   +        S_Income  +    -0.25736924536467 * S_Kidhome
1090951   +          +    -0.04400855145817 * S_MntFishProducts
1090952   +          +    -0.06651358259718 * S_MntFruits  +     -0.0117104183032 *
1090953   +        S_MntGoldProds  +    -0.02790266219853 * S_MntSweetProducts
1090954   +          +     0.00265986106691 * S_MonthsAsCustomer
1090955   +          +     0.27331919080312 * S_NumDealsPurchases
1090956   +          +     0.22836119952787 * S_NumWebVisitsMonth
1090957   +          +     0.09245783028838 * S_RFMstat  +     0.10223459152488 *
1090958   +        S_RMntFrq  +    -0.90398250269857 * S_Recency
1090959   +          +     -0.2621421532112 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H16 = 0.03788304209102 * S_AcceptedCmpTotal + -0.27022676521755 * S_Age 
+ -0.17480141247917 * S_Frq + 0.53345624791204 * S_Income + -0.25736924536467 * S_Kidhome + 
-0.04400855145817 * S_MntFishProducts + -0.06651358259718 * S_MntFruits + -0.0117104183032 * 
S_MntGoldProds + -0.02790266219853 * S_MntSweetProducts + 0.00265986106691 * 
S_MonthsAsCustomer + 0.27331919080312 * S_NumDealsPurchases + 0.22836119952787 * 
S_NumWebVisitsMonth + 0.09245783028838 * S_RFMstat + 0.10223459152488 * S_RMntFrq + 
-0.90398250269857 * S_Recency + -0.2621421532112 * S_Teenhome ;
1090960   +   H11  = H11  +     0.24155985997122 * AcceptedCmp10
1090961   +          +     0.02727843300562 * AcceptedCmp20  +     0.05990453920581 *
1090962   +        AcceptedCmp30  +    -0.43469138041411 * AcceptedCmp40
1090963   +          +     0.00076050589964 * AcceptedCmp50  +     0.43307119233671 *
1090964   +        Complain0  +     0.23242177664865 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.24155985997122 * AcceptedCmp10 + 0.02727843300562 * 
AcceptedCmp20 + 0.05990453920581 * AcceptedCmp30 + -0.43469138041411 * AcceptedCmp40 + 
0.00076050589964 * AcceptedCmp50 + 0.43307119233671 * Complain0 + 0.23242177664865 * 
HigherEducationBinary0 ;
1090965   +   H12  = H12  +     0.04034689771488 * AcceptedCmp10
1090966   +          +    -0.01358747117911 * AcceptedCmp20  +    -0.29883922116453 *
1090967   +        AcceptedCmp30  +     0.58794258522438 * AcceptedCmp40
1090968   +          +    -0.40659406037079 * AcceptedCmp50  +     0.59068991602469 *
1090969   +        Complain0  +     -0.3122461557933 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.04034689771488 * AcceptedCmp10 + -0.01358747117911 * 
AcceptedCmp20 + -0.29883922116453 * AcceptedCmp30 + 0.58794258522438 * AcceptedCmp40 + 
-0.40659406037079 * AcceptedCmp50 + 0.59068991602469 * Complain0 + -0.3122461557933 * 
HigherEducationBinary0 ;
1090970   +   H13  = H13  +     0.49941486221932 * AcceptedCmp10
1090971   +          +     0.42891153022885 * AcceptedCmp20  +     0.28744085742243 *
1090972   +        AcceptedCmp30  +     0.54657253664873 * AcceptedCmp40
1090973   +          +     0.10655487579255 * AcceptedCmp50  +     0.11223153893952 *
1090974   +        Complain0  +    -0.44704943665138 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.49941486221932 * AcceptedCmp10 + 0.42891153022885 * 
AcceptedCmp20 + 0.28744085742243 * AcceptedCmp30 + 0.54657253664873 * AcceptedCmp40 + 
0.10655487579255 * AcceptedCmp50 + 0.11223153893952 * Complain0 + -0.44704943665138 * 
HigherEducationBinary0 ;
1090975   +   H14  = H14  +     0.70510583713907 * AcceptedCmp10
1090976   +          +     0.04052111261969 * AcceptedCmp20  +     0.76301816100625 *
1090977   +        AcceptedCmp30  +     0.09753552533639 * AcceptedCmp40
1090978   +          +     0.40999088454383 * AcceptedCmp50  +     0.19278448059725 *
1090979   +        Complain0  +     0.09127136236268 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.70510583713907 * AcceptedCmp10 + 0.04052111261969 * 
AcceptedCmp20 + 0.76301816100625 * AcceptedCmp30 + 0.09753552533639 * AcceptedCmp40 + 
0.40999088454383 * AcceptedCmp50 + 0.19278448059725 * Complain0 + 0.09127136236268 * 
HigherEducationBinary0 ;
1090980   +   H15  = H15  +     0.30535300313392 * AcceptedCmp10
1090981   +          +    -0.01605332227631 * AcceptedCmp20  +     0.09278623651632 *
1090982   +        AcceptedCmp30  +     0.03468239765482 * AcceptedCmp40
1090983   +          +     0.19720723485806 * AcceptedCmp50  +    -0.32364247007443 *
1090984   +        Complain0  +    -0.20695533150084 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.30535300313392 * AcceptedCmp10 + -0.01605332227631 * 
AcceptedCmp20 + 0.09278623651632 * AcceptedCmp30 + 0.03468239765482 * AcceptedCmp40 + 
0.19720723485806 * AcceptedCmp50 + -0.32364247007443 * Complain0 + -0.20695533150084 * 
HigherEducationBinary0 ;
1090985   +   H16  = H16  +    -0.19354253973215 * AcceptedCmp10
1090986   +          +     0.01566685138596 * AcceptedCmp20  +    -0.28250218144785 *
1090987   +        AcceptedCmp30  +    -0.13118265240955 * AcceptedCmp40
1090988   +          +    -0.03808858956936 * AcceptedCmp50  +    -0.19850701105147 *
1090989   +        Complain0  +     0.14297616111345 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H16 = H16 + -0.19354253973215 * AcceptedCmp10 + 0.01566685138596 * 
AcceptedCmp20 + -0.28250218144785 * AcceptedCmp30 + -0.13118265240955 * AcceptedCmp40 + 
-0.03808858956936 * AcceptedCmp50 + -0.19850701105147 * Complain0 + 0.14297616111345 * 
HigherEducationBinary0 ;
1090990   +   H11  = H11  +     0.05082493200436 * Education2n_Cycle
1090991   +          +    -0.08192239267323 * EducationBasic  +    -0.01445849926378 *
1090992   +        EducationGraduation  +     0.01459143816519 * EducationMaster
1090993   +          +     0.12502276672336 * Marital_StatusDivorced
1090994   +          +    -0.02606508453741 * Marital_StatusMarried
1090995   +          +      0.0418850245266 * Marital_StatusSingle
1090996   +          +     0.02050996572132 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.05082493200436 * Education2n_Cycle + -0.08192239267323 * 
EducationBasic + -0.01445849926378 * EducationGraduation + 0.01459143816519 * EducationMaster 
+ 0.12502276672336 * Marital_StatusDivorced + -0.02606508453741 * Marital_StatusMarried + 
0.0418850245266 * Marital_StatusSingle + 0.02050996572132 * Marital_StatusTogether ;
1090997   +   H12  = H12  +     -0.1900759238575 * Education2n_Cycle
1090998   +          +     0.13535241443003 * EducationBasic  +    -0.00199771592906 *
1090999   +        EducationGraduation  +     0.00476193515914 * EducationMaster
1091000   +          +      0.1943860669795 * Marital_StatusDivorced
1091001   +          +     -0.1529596261268 * Marital_StatusMarried
1091002   +          +     0.24187461301348 * Marital_StatusSingle
1091003   +          +     0.09157538589749 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.1900759238575 * Education2n_Cycle + 0.13535241443003 * 
EducationBasic + -0.00199771592906 * EducationGraduation + 0.00476193515914 * EducationMaster 
+ 0.1943860669795 * Marital_StatusDivorced + -0.1529596261268 * Marital_StatusMarried + 
0.24187461301348 * Marital_StatusSingle + 0.09157538589749 * Marital_StatusTogether ;
1091004   +   H13  = H13  +     0.02140936656506 * Education2n_Cycle
1091005   +          +     0.05845427475503 * EducationBasic  +    -0.44298208278895 *
1091006   +        EducationGraduation  +     0.17149477011717 * EducationMaster
1091007   +          +    -0.19677652422622 * Marital_StatusDivorced
1091008   +          +     0.75897106429478 * Marital_StatusMarried
1091009   +          +    -0.66692260284833 * Marital_StatusSingle
1091010   +          +     0.58287349221333 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.02140936656506 * Education2n_Cycle + 0.05845427475503 * 
EducationBasic + -0.44298208278895 * EducationGraduation + 0.17149477011717 * EducationMaster 
+ -0.19677652422622 * Marital_StatusDivorced + 0.75897106429478 * Marital_StatusMarried + 
-0.66692260284833 * Marital_StatusSingle + 0.58287349221333 * Marital_StatusTogether ;
1091011   +   H14  = H14  +     0.18801855635785 * Education2n_Cycle
1091012   +          +    -0.06231007239836 * EducationBasic  +    -0.26915940640311 *
1091013   +        EducationGraduation  +    -0.30689797876717 * EducationMaster
1091014   +          +    -0.18964222971122 * Marital_StatusDivorced
1091015   +          +    -0.15222045956879 * Marital_StatusMarried
1091016   +          +     0.15455795695595 * Marital_StatusSingle
1091017   +          +    -0.04060840399479 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.18801855635785 * Education2n_Cycle + -0.06231007239836 * 
EducationBasic + -0.26915940640311 * EducationGraduation + -0.30689797876717 * EducationMaster 
+ -0.18964222971122 * Marital_StatusDivorced + -0.15222045956879 * Marital_StatusMarried + 
0.15455795695595 * Marital_StatusSingle + -0.04060840399479 * Marital_StatusTogether ;
1091018   +   H15  = H15  +    -0.12131367369042 * Education2n_Cycle
1091019   +          +     0.20547688844423 * EducationBasic  +     0.04965529549437 *
1091020   +        EducationGraduation  +    -0.21811990669176 * EducationMaster
1091021   +          +    -0.10122776921995 * Marital_StatusDivorced
1091022   +          +     0.14126755564161 * Marital_StatusMarried
1091023   +          +    -0.18463644418978 * Marital_StatusSingle
1091024   +          +     0.23071597384519 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + -0.12131367369042 * Education2n_Cycle + 0.20547688844423 * 
EducationBasic + 0.04965529549437 * EducationGraduation + -0.21811990669176 * EducationMaster 
+ -0.10122776921995 * Marital_StatusDivorced + 0.14126755564161 * Marital_StatusMarried + 
-0.18463644418978 * Marital_StatusSingle + 0.23071597384519 * Marital_StatusTogether ;
1091025   +   H16  = H16  +     0.02961881390411 * Education2n_Cycle
1091026   +          +    -0.46228434914367 * EducationBasic  +    -0.08513280071643 *
1091027   +        EducationGraduation  +    -0.20159542694386 * EducationMaster
1091028   +          +     0.05009431660662 * Marital_StatusDivorced
1091029   +          +    -0.38407798045329 * Marital_StatusMarried
1091030   +          +      0.3035257398654 * Marital_StatusSingle
1091031   +          +    -0.27725923319119 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.02961881390411 * Education2n_Cycle + -0.46228434914367 * 
EducationBasic + -0.08513280071643 * EducationGraduation + -0.20159542694386 * EducationMaster 
+ 0.05009431660662 * Marital_StatusDivorced + -0.38407798045329 * Marital_StatusMarried + 
0.3035257398654 * Marital_StatusSingle + -0.27725923319119 * Marital_StatusTogether ;
1091032   +   H11  =      1.3960587011002 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 1.3960587011002 + H11 ;
1091033   +   H12  =     0.18947019063375 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.18947019063375 + H12 ;
1091034   +   H13  =     0.55907472867898 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = 0.55907472867898 + H13 ;
1091035   +   H14  =     0.28336290184268 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 0.28336290184268 + H14 ;
1091036   +   H15  =     1.08919536550159 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = 1.08919536550159 + H15 ;
1091037   +   H16  =    -0.22538308534609 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = -0.22538308534609 + H16 ;
1091038   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1091039   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1091040   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1091041   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1091042   +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
1091043   +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
1091044   +END;
MPRINT(EM_DIAGRAM):   END;
1091045   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1091046   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1091047   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1091048   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1091049   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1091050   +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
1091051   +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
1091052   +END;
MPRINT(EM_DIAGRAM):   END;
1091053   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1091054   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1091055   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1091056   +
1091057   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1091058   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1091059   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1091060   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1091061   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1091062   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1091063   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1091064   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1091065   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1091066   +end;
MPRINT(EM_DIAGRAM):   end;
1091067   +else do;
MPRINT(EM_DIAGRAM):   else do;
1091068   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1091069   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1091070   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1091071   +   end;
MPRINT(EM_DIAGRAM):   end;
1091072   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1091073   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1091074   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1091075   +   end;
MPRINT(EM_DIAGRAM):   end;
1091076   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1091077   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1091078   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1091079   +   end;
MPRINT(EM_DIAGRAM):   end;
1091080   +end;
MPRINT(EM_DIAGRAM):   end;
1091081   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1091082   +   P_DepVar1  =      1.1921632715983 * H11  +     2.38386446186622 * H12
1091083   +          +    -2.42409896638067 * H13  +    -2.19084949788904 * H14
1091084   +          +      -0.380575449439 * H15  +     1.17350595805971 * H16 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 1.1921632715983 * H11 + 2.38386446186622 * H12 + 
-2.42409896638067 * H13 + -2.19084949788904 * H14 + -0.380575449439 * H15 + 1.17350595805971 * 
H16 ;
1091085   +   P_DepVar1  =    -1.70154799161574 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.70154799161574 + P_DepVar1 ;
1091086   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1091087   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1091088   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1091089   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1091090   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1091091   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1091092   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1091093   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1091094   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1091095   +END;
MPRINT(EM_DIAGRAM):   END;
1091096   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1091097   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1091098   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1091099   +END;
MPRINT(EM_DIAGRAM):   END;
1091100   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1091101   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1091102   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1091103   +END;
MPRINT(EM_DIAGRAM):   END;
1091104   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1091105   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1091106   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1091107   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1091108   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1091109   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1091110   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1091111   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1091112   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1091113   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1091114   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1091115   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1091116   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1091117   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1091118   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1091119   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1091120   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1091121   +END;
MPRINT(EM_DIAGRAM):   END;
1091122   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1091123   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1091124   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1091125   +drop
1091126   +H11
1091127   +H12
1091128   +H13
1091129   +H14
1091130   +H15
1091131   +H16
1091132   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 ;
1091133   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1091134   +* Renaming variables for Neural41;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural41;
1091135   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1091136   +* Renaming Posterior variables for Neural41;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural41;
1091137   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1091138   +drop Neural41_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural41_P_DepVar1;
1091139   +Neural41_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural41_P_DepVar1 = P_DepVar1;
1091140   +drop Neural41_P_DepVar0;
The SAS System

MPRINT(EM_DIAGRAM):   drop Neural41_P_DepVar0;
1091141   +Neural41_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural41_P_DepVar0 = P_DepVar0;
1091142   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1091143   +* Renaming _WARN_ variable for Neural41;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural41;
1091144   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1091145   +length Neural41_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural41_WARN_ $4;
1091146   +drop Neural41_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural41_WARN_;
1091147   +Neural41_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural41_WARN_ = _WARN_;
1091148   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1091149   +* Ensmbl12: Scoring Code of model 9 of 10;
MPRINT(EM_DIAGRAM):   * Ensmbl12: Scoring Code of model 9 of 10;
1091150   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1091151   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1091152   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
1091153   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1091154   +* NODE: Neural36;
MPRINT(EM_DIAGRAM):   * NODE: Neural36;
1091155   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1091156   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1091157   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1091158   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1091159   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1091160   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1091161   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1091162   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1091163   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1091164   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1091165   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1091166   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1091167   +LENGTH _WARN_ $4
1091168   +      F_DepVar  $ 12
1091169   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1091170   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1091171   +
1091172   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1091173   +
1091174   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1091175   +
1091176   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1091177   +
1091178   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1091179   +
1091180   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1091181   +
1091182   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1091183   +
1091184   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1091185   +
1091186   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1091187   +
1091188   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1091189   +
1091190   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1091191   +
1091192   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1091193   +
1091194   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1091195   +
1091196   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1091197   +
1091198   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1091199   +
1091200   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1091201   +
1091202   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1091203   +
1091204   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1091205   +
1091206   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1091207   +
1091208   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1091209   +
1091210   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1091211   +
1091212   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1091213   +
1091214   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1091215   +
1091216   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1091217   +
1091218   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1091219   +
1091220   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1091221   +
1091222   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1091223   +
1091224   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1091225   +
1091226   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1091227   +
1091228   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1091229   +
1091230   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1091231   +
1091232   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1091233   +
1091234   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1091235   +
1091236   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1091237   +
1091238   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1091239   +
1091240   +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
1091241   +
1091242   +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
1091243   +
1091244   +      label H17 = 'Hidden: H1=7' ;
MPRINT(EM_DIAGRAM):   label H17 = 'Hidden: H1=7' ;
1091245   +
1091246   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1091247   +
1091248   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1091249   +
1091250   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1091251   +
1091252   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1091253   +
1091254   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1091255   +
1091256   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1091257   +
1091258   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1091259   +
1091260   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1091261   +
1091262   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1091263   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1091264   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1091265   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1091266   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1091267   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1091268   +end;
MPRINT(EM_DIAGRAM):   end;
1091269   +else do;
MPRINT(EM_DIAGRAM):   else do;
1091270   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1091271   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1091272   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1091273   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1091274   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1091275   +   end;
MPRINT(EM_DIAGRAM):   end;
1091276   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1091277   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1091278   +   end;
MPRINT(EM_DIAGRAM):   end;
1091279   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1091280   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1091281   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1091282   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1091283   +   end;
MPRINT(EM_DIAGRAM):   end;
1091284   +end;
MPRINT(EM_DIAGRAM):   end;
1091285   +
1091286   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1091287   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1091288   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1091289   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1091290   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1091291   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1091292   +end;
MPRINT(EM_DIAGRAM):   end;
1091293   +else do;
MPRINT(EM_DIAGRAM):   else do;
1091294   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1091295   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1091296   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1091297   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1091298   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1091299   +   end;
MPRINT(EM_DIAGRAM):   end;
1091300   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1091301   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1091302   +   end;
MPRINT(EM_DIAGRAM):   end;
1091303   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1091304   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1091305   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1091306   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1091307   +   end;
MPRINT(EM_DIAGRAM):   end;
1091308   +end;
MPRINT(EM_DIAGRAM):   end;
1091309   +
1091310   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1091311   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1091312   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1091313   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1091314   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1091315   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1091316   +end;
MPRINT(EM_DIAGRAM):   end;
1091317   +else do;
MPRINT(EM_DIAGRAM):   else do;
1091318   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1091319   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1091320   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1091321   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1091322   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1091323   +   end;
MPRINT(EM_DIAGRAM):   end;
1091324   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1091325   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1091326   +   end;
MPRINT(EM_DIAGRAM):   end;
1091327   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1091328   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1091329   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1091330   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1091331   +   end;
MPRINT(EM_DIAGRAM):   end;
1091332   +end;
MPRINT(EM_DIAGRAM):   end;
1091333   +
1091334   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1091335   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1091336   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1091337   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1091338   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1091339   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1091340   +end;
MPRINT(EM_DIAGRAM):   end;
1091341   +else do;
MPRINT(EM_DIAGRAM):   else do;
1091342   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1091343   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1091344   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1091345   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1091346   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1091347   +   end;
MPRINT(EM_DIAGRAM):   end;
1091348   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1091349   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1091350   +   end;
MPRINT(EM_DIAGRAM):   end;
1091351   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1091352   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1091353   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1091354   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1091355   +   end;
MPRINT(EM_DIAGRAM):   end;
1091356   +end;
MPRINT(EM_DIAGRAM):   end;
1091357   +
1091358   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1091359   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1091360   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1091361   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1091362   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1091363   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1091364   +end;
MPRINT(EM_DIAGRAM):   end;
1091365   +else do;
MPRINT(EM_DIAGRAM):   else do;
1091366   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1091367   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1091368   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1091369   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1091370   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1091371   +   end;
MPRINT(EM_DIAGRAM):   end;
1091372   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1091373   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1091374   +   end;
MPRINT(EM_DIAGRAM):   end;
1091375   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1091376   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1091377   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1091378   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1091379   +   end;
MPRINT(EM_DIAGRAM):   end;
1091380   +end;
MPRINT(EM_DIAGRAM):   end;
1091381   +
1091382   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1091383   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1091384   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1091385   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1091386   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1091387   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1091388   +end;
MPRINT(EM_DIAGRAM):   end;
1091389   +else do;
MPRINT(EM_DIAGRAM):   else do;
1091390   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1091391   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1091392   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1091393   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1091394   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1091395   +   end;
MPRINT(EM_DIAGRAM):   end;
1091396   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1091397   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1091398   +   end;
MPRINT(EM_DIAGRAM):   end;
1091399   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1091400   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1091401   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1091402   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1091403   +   end;
MPRINT(EM_DIAGRAM):   end;
1091404   +end;
MPRINT(EM_DIAGRAM):   end;
1091405   +
1091406   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1091407   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1091408   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1091409   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1091410   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1091411   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1091412   +end;
MPRINT(EM_DIAGRAM):   end;
1091413   +else do;
MPRINT(EM_DIAGRAM):   else do;
1091414   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1091415   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1091416   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1091417   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1091418   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1091419   +   end;
MPRINT(EM_DIAGRAM):   end;
1091420   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1091421   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1091422   +   end;
MPRINT(EM_DIAGRAM):   end;
1091423   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1091424   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1091425   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1091426   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1091427   +   end;
MPRINT(EM_DIAGRAM):   end;
1091428   +end;
MPRINT(EM_DIAGRAM):   end;
1091429   +
1091430   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1091431   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
1091432   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1091433   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1091434   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1091435   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1091436   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1091437   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1091438   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1091439   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1091440   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1091441   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1091442   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1091443   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1091444   +end;
MPRINT(EM_DIAGRAM):   end;
1091445   +else do;
MPRINT(EM_DIAGRAM):   else do;
1091446   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1091447   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1091448   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1091449   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1091450   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1091451   +   end;
MPRINT(EM_DIAGRAM):   end;
1091452   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1091453   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1091454   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1091455   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1091456   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1091457   +   end;
MPRINT(EM_DIAGRAM):   end;
1091458   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1091459   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1091460   +   end;
MPRINT(EM_DIAGRAM):   end;
1091461   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1091462   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1091463   +   end;
MPRINT(EM_DIAGRAM):   end;
1091464   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1091465   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1091466   +   end;
MPRINT(EM_DIAGRAM):   end;
1091467   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1091468   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1091469   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1091470   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1091471   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1091472   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1091473   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1091474   +   end;
MPRINT(EM_DIAGRAM):   end;
1091475   +end;
MPRINT(EM_DIAGRAM):   end;
1091476   +
1091477   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1091478   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1091479   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
1091480   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1091481   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1091482   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1091483   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1091484   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1091485   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1091486   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1091487   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1091488   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1091489   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1091490   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1091491   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1091492   +end;
MPRINT(EM_DIAGRAM):   end;
1091493   +else do;
MPRINT(EM_DIAGRAM):   else do;
1091494   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1091495   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1091496   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1091497   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1091498   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1091499   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1091500   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1091501   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1091502   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1091503   +         end;
MPRINT(EM_DIAGRAM):   end;
1091504   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1091505   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1091506   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1091507   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1091508   +            end;
MPRINT(EM_DIAGRAM):   end;
1091509   +         end;
MPRINT(EM_DIAGRAM):   end;
1091510   +      end;
MPRINT(EM_DIAGRAM):   end;
1091511   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1091512   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1091513   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1091514   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1091515   +         end;
MPRINT(EM_DIAGRAM):   end;
1091516   +      end;
MPRINT(EM_DIAGRAM):   end;
1091517   +   end;
MPRINT(EM_DIAGRAM):   end;
1091518   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1091519   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1091520   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1091521   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1091522   +      end;
MPRINT(EM_DIAGRAM):   end;
1091523   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1091524   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1091525   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1091526   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1091527   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1091528   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1091529   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1091530   +         end;
MPRINT(EM_DIAGRAM):   end;
1091531   +      end;
MPRINT(EM_DIAGRAM):   end;
1091532   +   end;
MPRINT(EM_DIAGRAM):   end;
1091533   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1091534   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1091535   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1091536   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1091537   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1091538   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1091539   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1091540   +   end;
MPRINT(EM_DIAGRAM):   end;
1091541   +end;
MPRINT(EM_DIAGRAM):   end;
1091542   +
1091543   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1091544   +*** Checking missing input Interval
1091545   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1091546   +
1091547   +IF NMISS(
1091548   +   AcceptedCmpTotal ,
1091549   +   Age ,
1091550   +   Frq ,
1091551   +   Income ,
1091552   +   Kidhome ,
1091553   +   MntFishProducts ,
1091554   +   MntFruits ,
1091555   +   MntGoldProds ,
1091556   +   MntSweetProducts ,
1091557   +   MonthsAsCustomer ,
1091558   +   NumDealsPurchases ,
1091559   +   NumWebVisitsMonth ,
1091560   +   RFMstat ,
1091561   +   RMntFrq ,
1091562   +   Recency ,
1091563   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , 
MntFishProducts , MntFruits , MntGoldProds , MntSweetProducts , MonthsAsCustomer , 
NumDealsPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , Teenhome ) THEN DO;
1091564   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1091565   +
1091566   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1091567   +END;
MPRINT(EM_DIAGRAM):   END;
1091568   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1091569   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1091570   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1091571   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1091572   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1091573   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1091574   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1091575   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1091576   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1091577   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1091578   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1091579   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1091580   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1091581   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1091582   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1091583   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1091584   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1091585   +   S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
1091586   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
1091587   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1091588   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1091589   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1091590   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1091591   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1091592   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1091593   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1091594   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1091595   +END;
MPRINT(EM_DIAGRAM):   END;
1091596   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1091597   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1091598   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1091599   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1091600   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1091601   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1091602   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1091603   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1091604   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1091605   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1091606   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1091607   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1091608   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1091609   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1091610   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1091611   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1091612   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1091613   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1091614   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1091615   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1091616   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1091617   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1091618   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1091619   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1091620   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1091621   +   ELSE S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
1091622   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
1091623   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1091624   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1091625   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1091626   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1091627   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1091628   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1091629   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1091630   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1091631   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1091632   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1091633   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1091634   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1091635   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1091636   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1091637   +END;
MPRINT(EM_DIAGRAM):   END;
1091638   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1091639   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1091640   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1091641   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1091642   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1091643   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1091644   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1091645   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1091646   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1091647   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1091648   +   H11  =     0.36102409886134 * S_AcceptedCmpTotal  +     0.13395156650326 *
1091649   +        S_Age  +    -0.24538302428059 * S_Frq  +    -0.11572058197557 *
1091650   +        S_Income  +     0.21790378443814 * S_Kidhome
1091651   +          +    -0.08134586316395 * S_MntFishProducts
1091652   +          +     -0.2688648060203 * S_MntFruits  +    -0.25880035211038 *
1091653   +        S_MntGoldProds  +     0.07531502626045 * S_MntSweetProducts
1091654   +          +     0.21726816930291 * S_MonthsAsCustomer
1091655   +          +    -0.21824241156847 * S_NumDealsPurchases
1091656   +          +     0.07727563921761 * S_NumWebVisitsMonth
1091657   +          +     0.09027808324069 * S_RFMstat  +     -0.0189462843628 *
1091658   +        S_RMntFrq  +     0.15658915596853 * S_Recency
1091659   +          +     0.18680606168417 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.36102409886134 * S_AcceptedCmpTotal + 0.13395156650326 * S_Age + 
-0.24538302428059 * S_Frq + -0.11572058197557 * S_Income + 0.21790378443814 * S_Kidhome + 
-0.08134586316395 * S_MntFishProducts + -0.2688648060203 * S_MntFruits + -0.25880035211038 * 
S_MntGoldProds + 0.07531502626045 * S_MntSweetProducts + 0.21726816930291 * S_MonthsAsCustomer 
+ -0.21824241156847 * S_NumDealsPurchases + 0.07727563921761 * S_NumWebVisitsMonth + 
0.09027808324069 * S_RFMstat + -0.0189462843628 * S_RMntFrq + 0.15658915596853 * S_Recency + 
0.18680606168417 * S_Teenhome ;
1091660   +   H12  =    -0.50461866181934 * S_AcceptedCmpTotal  +     0.01266437730767 *
1091661   +        S_Age  +     0.02534169432751 * S_Frq  +    -0.89441458532035 *
1091662   +        S_Income  +    -0.51036141680293 * S_Kidhome
1091663   +          +     0.10879858722875 * S_MntFishProducts
1091664   +          +    -0.05639987269313 * S_MntFruits  +    -0.43702228668285 *
1091665   +        S_MntGoldProds  +     0.18909754042399 * S_MntSweetProducts
1091666   +          +    -0.11392977531374 * S_MonthsAsCustomer
1091667   +          +     -0.5318843752274 * S_NumDealsPurchases
1091668   +          +    -0.65796537312585 * S_NumWebVisitsMonth
1091669   +          +    -0.29571612685484 * S_RFMstat  +     -0.0801458884647 *
1091670   +        S_RMntFrq  +     0.73429478940872 * S_Recency
1091671   +          +     0.28950334189528 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -0.50461866181934 * S_AcceptedCmpTotal + 0.01266437730767 * S_Age 
+ 0.02534169432751 * S_Frq + -0.89441458532035 * S_Income + -0.51036141680293 * S_Kidhome + 
0.10879858722875 * S_MntFishProducts + -0.05639987269313 * S_MntFruits + -0.43702228668285 * 
S_MntGoldProds + 0.18909754042399 * S_MntSweetProducts + -0.11392977531374 * 
S_MonthsAsCustomer + -0.5318843752274 * S_NumDealsPurchases + -0.65796537312585 * 
S_NumWebVisitsMonth + -0.29571612685484 * S_RFMstat + -0.0801458884647 * S_RMntFrq + 
0.73429478940872 * S_Recency + 0.28950334189528 * S_Teenhome ;
1091672   +   H13  =    -0.22612994964695 * S_AcceptedCmpTotal  +     0.04392639924073 *
1091673   +        S_Age  +     0.32974877429932 * S_Frq  +    -0.26990824722212 *
1091674   +        S_Income  +     0.59254092901621 * S_Kidhome
1091675   +          +    -0.20448500725841 * S_MntFishProducts
1091676   +          +     0.09904900315476 * S_MntFruits  +     0.33085368683805 *
1091677   +        S_MntGoldProds  +     0.19272280339022 * S_MntSweetProducts
1091678   +          +     0.75084411765835 * S_MonthsAsCustomer
1091679   +          +     -0.0387146296237 * S_NumDealsPurchases
1091680   +          +    -0.28387522584505 * S_NumWebVisitsMonth
1091681   +          +    -0.15204072409221 * S_RFMstat  +     0.09340123133096 *
1091682   +        S_RMntFrq  +     0.82636976290684 * S_Recency
1091683   +          +     0.37810091232378 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = -0.22612994964695 * S_AcceptedCmpTotal + 0.04392639924073 * S_Age 
+ 0.32974877429932 * S_Frq + -0.26990824722212 * S_Income + 0.59254092901621 * S_Kidhome + 
-0.20448500725841 * S_MntFishProducts + 0.09904900315476 * S_MntFruits + 0.33085368683805 * 
S_MntGoldProds + 0.19272280339022 * S_MntSweetProducts + 0.75084411765835 * S_MonthsAsCustomer 
+ -0.0387146296237 * S_NumDealsPurchases + -0.28387522584505 * S_NumWebVisitsMonth + 
-0.15204072409221 * S_RFMstat + 0.09340123133096 * S_RMntFrq + 0.82636976290684 * S_Recency + 
0.37810091232378 * S_Teenhome ;
1091684   +   H14  =    -0.30228547708859 * S_AcceptedCmpTotal  +     0.03241560550242 *
1091685   +        S_Age  +     0.84298653991521 * S_Frq  +     0.08457309547848 *
1091686   +        S_Income  +    -0.00122834275949 * S_Kidhome
1091687   +          +    -0.27566379985337 * S_MntFishProducts
1091688   +          +     0.22439349557664 * S_MntFruits  +     -0.2238462316234 *
1091689   +        S_MntGoldProds  +     0.10162320730644 * S_MntSweetProducts
1091690   +          +    -0.04164317708211 * S_MonthsAsCustomer
1091691   +          +    -0.69362879353268 * S_NumDealsPurchases
1091692   +          +    -0.42590146496797 * S_NumWebVisitsMonth
1091693   +          +    -0.14963136795323 * S_RFMstat  +    -0.12684701620224 *
1091694   +        S_RMntFrq  +     0.84758472963267 * S_Recency
1091695   +          +     0.11712588251204 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = -0.30228547708859 * S_AcceptedCmpTotal + 0.03241560550242 * S_Age 
+ 0.84298653991521 * S_Frq + 0.08457309547848 * S_Income + -0.00122834275949 * S_Kidhome + 
-0.27566379985337 * S_MntFishProducts + 0.22439349557664 * S_MntFruits + -0.2238462316234 * 
S_MntGoldProds + 0.10162320730644 * S_MntSweetProducts + -0.04164317708211 * 
S_MonthsAsCustomer + -0.69362879353268 * S_NumDealsPurchases + -0.42590146496797 * 
S_NumWebVisitsMonth + -0.14963136795323 * S_RFMstat + -0.12684701620224 * S_RMntFrq + 
0.84758472963267 * S_Recency + 0.11712588251204 * S_Teenhome ;
1091696   +   H15  =    -0.07826142783822 * S_AcceptedCmpTotal  +     0.02869519269506 *
1091697   +        S_Age  +     0.47709626753648 * S_Frq  +     0.77626478438802 *
1091698   +        S_Income  +    -0.52116533001423 * S_Kidhome
1091699   +          +     -0.0164127050263 * S_MntFishProducts
1091700   +          +    -0.21044074963391 * S_MntFruits  +    -0.01106715629962 *
1091701   +        S_MntGoldProds  +    -0.04742180634458 * S_MntSweetProducts
1091702   +          +     0.24190773546087 * S_MonthsAsCustomer
1091703   +          +    -0.20709839635746 * S_NumDealsPurchases
1091704   +          +    -0.03892039672539 * S_NumWebVisitsMonth
1091705   +          +     0.01844174922581 * S_RFMstat  +     0.33852543335405 *
1091706   +        S_RMntFrq  +    -0.44935213795722 * S_Recency
1091707   +          +     -0.6298368435821 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H15 = -0.07826142783822 * S_AcceptedCmpTotal + 0.02869519269506 * S_Age 
+ 0.47709626753648 * S_Frq + 0.77626478438802 * S_Income + -0.52116533001423 * S_Kidhome + 
-0.0164127050263 * S_MntFishProducts + -0.21044074963391 * S_MntFruits + -0.01106715629962 * 
S_MntGoldProds + -0.04742180634458 * S_MntSweetProducts + 0.24190773546087 * 
S_MonthsAsCustomer + -0.20709839635746 * S_NumDealsPurchases + -0.03892039672539 * 
S_NumWebVisitsMonth + 0.01844174922581 * S_RFMstat + 0.33852543335405 * S_RMntFrq + 
-0.44935213795722 * S_Recency + -0.6298368435821 * S_Teenhome ;
1091708   +   H16  =    -0.38278200147216 * S_AcceptedCmpTotal  +     0.10976543329989 *
1091709   +        S_Age  +    -0.17634499366273 * S_Frq  +    -0.00464219628456 *
1091710   +        S_Income  +     0.02656798188894 * S_Kidhome
1091711   +          +     0.30126647035438 * S_MntFishProducts
1091712   +          +    -0.15329042297108 * S_MntFruits  +     0.34485619618635 *
1091713   +        S_MntGoldProds  +    -0.02131109278943 * S_MntSweetProducts
1091714   +          +     0.02225077975252 * S_MonthsAsCustomer
1091715   +          +    -0.25574607065737 * S_NumDealsPurchases
1091716   +          +    -0.17649073415066 * S_NumWebVisitsMonth
1091717   +          +    -0.05940264496746 * S_RFMstat  +    -0.10060551243835 *
1091718   +        S_RMntFrq  +    -0.26823576982436 * S_Recency
1091719   +          +    -0.02089829217347 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H16 = -0.38278200147216 * S_AcceptedCmpTotal + 0.10976543329989 * S_Age 
+ -0.17634499366273 * S_Frq + -0.00464219628456 * S_Income + 0.02656798188894 * S_Kidhome + 
0.30126647035438 * S_MntFishProducts + -0.15329042297108 * S_MntFruits + 0.34485619618635 * 
S_MntGoldProds + -0.02131109278943 * S_MntSweetProducts + 0.02225077975252 * 
S_MonthsAsCustomer + -0.25574607065737 * S_NumDealsPurchases + -0.17649073415066 * 
S_NumWebVisitsMonth + -0.05940264496746 * S_RFMstat + -0.10060551243835 * S_RMntFrq + 
-0.26823576982436 * S_Recency + -0.02089829217347 * S_Teenhome ;
1091720   +   H17  =     0.19294816663728 * S_AcceptedCmpTotal  +    -0.36492507147362 *
1091721   +        S_Age  +     -0.5026822541815 * S_Frq  +    -0.48143237402929 *
1091722   +        S_Income  +     0.24859715564668 * S_Kidhome
1091723   +          +    -0.25170385966484 * S_MntFishProducts
1091724   +          +     0.32613161868695 * S_MntFruits  +     0.13394374893255 *
1091725   +        S_MntGoldProds  +     0.48416151380913 * S_MntSweetProducts
1091726   +          +     0.05219342683802 * S_MonthsAsCustomer
1091727   +          +     0.43291262348863 * S_NumDealsPurchases
1091728   +          +     0.56350506449265 * S_NumWebVisitsMonth
1091729   +          +     0.07050038692379 * S_RFMstat  +     0.09321760948671 *
1091730   +        S_RMntFrq  +      -0.582152401129 * S_Recency
1091731   +          +     0.37123217787922 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H17 = 0.19294816663728 * S_AcceptedCmpTotal + -0.36492507147362 * S_Age 
+ -0.5026822541815 * S_Frq + -0.48143237402929 * S_Income + 0.24859715564668 * S_Kidhome + 
-0.25170385966484 * S_MntFishProducts + 0.32613161868695 * S_MntFruits + 0.13394374893255 * 
S_MntGoldProds + 0.48416151380913 * S_MntSweetProducts + 0.05219342683802 * S_MonthsAsCustomer 
+ 0.43291262348863 * S_NumDealsPurchases + 0.56350506449265 * S_NumWebVisitsMonth + 
0.07050038692379 * S_RFMstat + 0.09321760948671 * S_RMntFrq + -0.582152401129 * S_Recency + 
0.37123217787922 * S_Teenhome ;
1091732   +   H11  = H11  +     0.19124500210188 * AcceptedCmp10
1091733   +          +    -0.07164186578541 * AcceptedCmp20  +     0.21783016367597 *
1091734   +        AcceptedCmp30  +     0.21148394728435 * AcceptedCmp40
1091735   +          +    -0.03026880266191 * AcceptedCmp50  +    -0.07201946966594 *
1091736   +        Complain0  +     0.01809478462337 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.19124500210188 * AcceptedCmp10 + -0.07164186578541 * 
AcceptedCmp20 + 0.21783016367597 * AcceptedCmp30 + 0.21148394728435 * AcceptedCmp40 + 
-0.03026880266191 * AcceptedCmp50 + -0.07201946966594 * Complain0 + 0.01809478462337 * 
HigherEducationBinary0 ;
1091737   +   H12  = H12  +    -0.08224648561215 * AcceptedCmp10
1091738   +          +    -0.04262229291512 * AcceptedCmp20  +     0.31730600734378 *
1091739   +        AcceptedCmp30  +    -0.50103336510524 * AcceptedCmp40
1091740   +          +     0.14654032457963 * AcceptedCmp50  +     -0.3081029727525 *
1091741   +        Complain0  +     0.33420373179467 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.08224648561215 * AcceptedCmp10 + -0.04262229291512 * 
AcceptedCmp20 + 0.31730600734378 * AcceptedCmp30 + -0.50103336510524 * AcceptedCmp40 + 
0.14654032457963 * AcceptedCmp50 + -0.3081029727525 * Complain0 + 0.33420373179467 * 
HigherEducationBinary0 ;
1091742   +   H13  = H13  +     -0.2675286852338 * AcceptedCmp10
1091743   +          +     0.00293684627092 * AcceptedCmp20  +     0.17042784679702 *
1091744   +        AcceptedCmp30  +    -0.03300348487228 * AcceptedCmp40
1091745   +          +     0.18139562224546 * AcceptedCmp50  +     -0.5876653777255 *
1091746   +        Complain0  +      -0.348312724013 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.2675286852338 * AcceptedCmp10 + 0.00293684627092 * 
AcceptedCmp20 + 0.17042784679702 * AcceptedCmp30 + -0.03300348487228 * AcceptedCmp40 + 
0.18139562224546 * AcceptedCmp50 + -0.5876653777255 * Complain0 + -0.348312724013 * 
HigherEducationBinary0 ;
1091747   +   H14  = H14  +     0.62345895952335 * AcceptedCmp10
1091748   +          +     0.06420128732689 * AcceptedCmp20  +     0.32944172885024 *
1091749   +        AcceptedCmp30  +    -0.04719511461619 * AcceptedCmp40
1091750   +          +     0.61833640682482 * AcceptedCmp50  +     -0.0006656764006 *
1091751   +        Complain0  +    -0.12356778452039 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.62345895952335 * AcceptedCmp10 + 0.06420128732689 * 
AcceptedCmp20 + 0.32944172885024 * AcceptedCmp30 + -0.04719511461619 * AcceptedCmp40 + 
0.61833640682482 * AcceptedCmp50 + -0.0006656764006 * Complain0 + -0.12356778452039 * 
HigherEducationBinary0 ;
1091752   +   H15  = H15  +    -0.43202592233127 * AcceptedCmp10
1091753   +          +    -0.35346067325701 * AcceptedCmp20  +    -0.29446055239371 *
1091754   +        AcceptedCmp30  +     -0.6355060868005 * AcceptedCmp40
1091755   +          +     0.08763000125481 * AcceptedCmp50  +    -0.55439066852712 *
1091756   +        Complain0  +     0.37078134908454 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + -0.43202592233127 * AcceptedCmp10 + -0.35346067325701 * 
AcceptedCmp20 + -0.29446055239371 * AcceptedCmp30 + -0.6355060868005 * AcceptedCmp40 + 
0.08763000125481 * AcceptedCmp50 + -0.55439066852712 * Complain0 + 0.37078134908454 * 
HigherEducationBinary0 ;
1091757   +   H16  = H16  +    -0.10522820178908 * AcceptedCmp10
1091758   +          +     0.20645125728354 * AcceptedCmp20  +     0.34040121966792 *
1091759   +        AcceptedCmp30  +    -0.02259616994399 * AcceptedCmp40
1091760   +          +    -0.22123397523195 * AcceptedCmp50  +    -0.37258892216723 *
1091761   +        Complain0  +     0.14107103807235 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H16 = H16 + -0.10522820178908 * AcceptedCmp10 + 0.20645125728354 * 
AcceptedCmp20 + 0.34040121966792 * AcceptedCmp30 + -0.02259616994399 * AcceptedCmp40 + 
-0.22123397523195 * AcceptedCmp50 + -0.37258892216723 * Complain0 + 0.14107103807235 * 
HigherEducationBinary0 ;
1091762   +   H17  = H17  +    -0.09096203784003 * AcceptedCmp10
1091763   +          +    -0.04735484605229 * AcceptedCmp20  +     -0.4485810761844 *
1091764   +        AcceptedCmp30  +     0.10362320405529 * AcceptedCmp40
1091765   +          +    -0.05214433990448 * AcceptedCmp50  +    -0.19339827696554 *
1091766   +        Complain0  +    -0.21246690264814 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H17 = H17 + -0.09096203784003 * AcceptedCmp10 + -0.04735484605229 * 
AcceptedCmp20 + -0.4485810761844 * AcceptedCmp30 + 0.10362320405529 * AcceptedCmp40 + 
-0.05214433990448 * AcceptedCmp50 + -0.19339827696554 * Complain0 + -0.21246690264814 * 
HigherEducationBinary0 ;
1091767   +   H11  = H11  +    -0.16759278562529 * Education2n_Cycle
1091768   +          +    -0.31449574789464 * EducationBasic  +     0.13281408830843 *
1091769   +        EducationGraduation  +      0.0199258483942 * EducationMaster
1091770   +          +     0.03245181998921 * Marital_StatusDivorced
1091771   +          +     0.29722741247663 * Marital_StatusMarried
1091772   +          +    -0.05683085497262 * Marital_StatusSingle
1091773   +          +     0.27914630307932 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.16759278562529 * Education2n_Cycle + -0.31449574789464 * 
EducationBasic + 0.13281408830843 * EducationGraduation + 0.0199258483942 * EducationMaster + 
0.03245181998921 * Marital_StatusDivorced + 0.29722741247663 * Marital_StatusMarried + 
-0.05683085497262 * Marital_StatusSingle + 0.27914630307932 * Marital_StatusTogether ;
1091774   +   H12  = H12  +    -0.10709422401859 * Education2n_Cycle
1091775   +          +     0.25457515905931 * EducationBasic  +    -0.26018740430941 *
1091776   +        EducationGraduation  +     0.05808954602972 * EducationMaster
1091777   +          +    -0.13095826187081 * Marital_StatusDivorced
1091778   +          +     0.29509760197193 * Marital_StatusMarried
1091779   +          +    -0.21019918550166 * Marital_StatusSingle
1091780   +          +     0.12557122666089 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.10709422401859 * Education2n_Cycle + 0.25457515905931 * 
EducationBasic + -0.26018740430941 * EducationGraduation + 0.05808954602972 * EducationMaster 
+ -0.13095826187081 * Marital_StatusDivorced + 0.29509760197193 * Marital_StatusMarried + 
-0.21019918550166 * Marital_StatusSingle + 0.12557122666089 * Marital_StatusTogether ;
1091781   +   H13  = H13  +     0.16189957128414 * Education2n_Cycle
1091782   +          +    -0.08593025695878 * EducationBasic  +     0.11065463845302 *
1091783   +        EducationGraduation  +    -0.23434271231945 * EducationMaster
1091784   +          +     0.03746692643939 * Marital_StatusDivorced
1091785   +          +     0.03482798841727 * Marital_StatusMarried
1091786   +          +     0.16645207250571 * Marital_StatusSingle
1091787   +          +    -0.40169040281111 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.16189957128414 * Education2n_Cycle + -0.08593025695878 * 
EducationBasic + 0.11065463845302 * EducationGraduation + -0.23434271231945 * EducationMaster 
+ 0.03746692643939 * Marital_StatusDivorced + 0.03482798841727 * Marital_StatusMarried + 
0.16645207250571 * Marital_StatusSingle + -0.40169040281111 * Marital_StatusTogether ;
1091788   +   H14  = H14  +      0.0929589076858 * Education2n_Cycle
1091789   +          +     0.17576896755796 * EducationBasic  +    -0.08548079761525 *
1091790   +        EducationGraduation  +     -0.0086494793343 * EducationMaster
1091791   +          +     -0.0753971504765 * Marital_StatusDivorced
1091792   +          +     0.20446719655724 * Marital_StatusMarried
1091793   +          +     0.21472836757686 * Marital_StatusSingle
1091794   +          +     0.25097210445128 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.0929589076858 * Education2n_Cycle + 0.17576896755796 * 
EducationBasic + -0.08548079761525 * EducationGraduation + -0.0086494793343 * EducationMaster 
+ -0.0753971504765 * Marital_StatusDivorced + 0.20446719655724 * Marital_StatusMarried + 
0.21472836757686 * Marital_StatusSingle + 0.25097210445128 * Marital_StatusTogether ;
1091795   +   H15  = H15  +     0.05613706593293 * Education2n_Cycle
1091796   +          +     0.15733773983498 * EducationBasic  +     0.18710928885666 *
1091797   +        EducationGraduation  +    -0.40226962940436 * EducationMaster
1091798   +          +     0.16191937298215 * Marital_StatusDivorced
1091799   +          +    -0.81780658848614 * Marital_StatusMarried
1091800   +          +     0.84981159748349 * Marital_StatusSingle
1091801   +          +    -0.81246154443713 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.05613706593293 * Education2n_Cycle + 0.15733773983498 * 
EducationBasic + 0.18710928885666 * EducationGraduation + -0.40226962940436 * EducationMaster 
+ 0.16191937298215 * Marital_StatusDivorced + -0.81780658848614 * Marital_StatusMarried + 
0.84981159748349 * Marital_StatusSingle + -0.81246154443713 * Marital_StatusTogether ;
1091802   +   H16  = H16  +    -0.15143146742513 * Education2n_Cycle
1091803   +          +    -0.32039616194876 * EducationBasic  +     0.14759493683433 *
1091804   +        EducationGraduation  +    -0.24148020292763 * EducationMaster
1091805   +          +    -0.01766312280073 * Marital_StatusDivorced
1091806   +          +     0.04455346003394 * Marital_StatusMarried
1091807   +          +    -0.05433982251127 * Marital_StatusSingle
1091808   +          +     0.07585750304293 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H16 = H16 + -0.15143146742513 * Education2n_Cycle + -0.32039616194876 * 
EducationBasic + 0.14759493683433 * EducationGraduation + -0.24148020292763 * EducationMaster 
+ -0.01766312280073 * Marital_StatusDivorced + 0.04455346003394 * Marital_StatusMarried + 
-0.05433982251127 * Marital_StatusSingle + 0.07585750304293 * Marital_StatusTogether ;
1091809   +   H17  = H17  +    -0.18844639887236 * Education2n_Cycle
1091810   +          +     0.31793429928185 * EducationBasic  +     0.21885580860665 *
1091811   +        EducationGraduation  +      0.1367538666381 * EducationMaster
1091812   +          +        0.22905595967 * Marital_StatusDivorced
1091813   +          +      0.1024998677695 * Marital_StatusMarried
1091814   +          +    -0.07752101768018 * Marital_StatusSingle
1091815   +          +    -0.19408218868635 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H17 = H17 + -0.18844639887236 * Education2n_Cycle + 0.31793429928185 * 
EducationBasic + 0.21885580860665 * EducationGraduation + 0.1367538666381 * EducationMaster + 
0.22905595967 * Marital_StatusDivorced + 0.1024998677695 * Marital_StatusMarried + 
-0.07752101768018 * Marital_StatusSingle + -0.19408218868635 * Marital_StatusTogether ;
1091816   +   H11  =     1.31548476078312 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 1.31548476078312 + H11 ;
1091817   +   H12  =     0.20389286508203 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.20389286508203 + H12 ;
1091818   +   H13  =    -0.77820109969785 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.77820109969785 + H13 ;
1091819   +   H14  =     0.85462770897247 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 0.85462770897247 + H14 ;
1091820   +   H15  =    -0.15190484788676 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = -0.15190484788676 + H15 ;
1091821   +   H16  =     -0.7146854381659 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = -0.7146854381659 + H16 ;
1091822   +   H17  =    -1.06220893322882 + H17 ;
MPRINT(EM_DIAGRAM):   H17 = -1.06220893322882 + H17 ;
1091823   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1091824   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1091825   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1091826   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1091827   +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
1091828   +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
1091829   +   H17  = TANH(H17 );
MPRINT(EM_DIAGRAM):   H17 = TANH(H17 );
1091830   +END;
MPRINT(EM_DIAGRAM):   END;
1091831   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1091832   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1091833   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1091834   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1091835   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1091836   +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
1091837   +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
1091838   +   H17  = .;
MPRINT(EM_DIAGRAM):   H17 = .;
1091839   +END;
MPRINT(EM_DIAGRAM):   END;
1091840   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1091841   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1091842   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1091843   +
1091844   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1091845   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1091846   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1091847   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1091848   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1091849   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1091850   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1091851   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1091852   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1091853   +end;
MPRINT(EM_DIAGRAM):   end;
1091854   +else do;
MPRINT(EM_DIAGRAM):   else do;
1091855   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1091856   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1091857   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1091858   +   end;
MPRINT(EM_DIAGRAM):   end;
1091859   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1091860   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1091861   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1091862   +   end;
MPRINT(EM_DIAGRAM):   end;
1091863   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1091864   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1091865   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1091866   +   end;
MPRINT(EM_DIAGRAM):   end;
1091867   +end;
MPRINT(EM_DIAGRAM):   end;
1091868   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1091869   +   P_DepVar1  =    -0.11628699177184 * H11  +    -2.70843270240794 * H12
1091870   +          +    -1.81814079406916 * H13  +    -1.84852165774564 * H14
1091871   +          +     2.53533827620448 * H15  +    -0.20106950795136 * H16
1091872   +          +     1.26058098194871 * H17 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.11628699177184 * H11 + -2.70843270240794 * H12 + 
-1.81814079406916 * H13 + -1.84852165774564 * H14 + 2.53533827620448 * H15 + -0.20106950795136 
* H16 + 1.26058098194871 * H17 ;
1091873   +   P_DepVar1  =    -1.66152267043508 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.66152267043508 + P_DepVar1 ;
1091874   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1091875   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1091876   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1091877   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1091878   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1091879   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1091880   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1091881   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1091882   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1091883   +END;
MPRINT(EM_DIAGRAM):   END;
1091884   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1091885   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1091886   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1091887   +END;
MPRINT(EM_DIAGRAM):   END;
1091888   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1091889   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1091890   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1091891   +END;
MPRINT(EM_DIAGRAM):   END;
1091892   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1091893   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1091894   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1091895   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1091896   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1091897   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1091898   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1091899   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1091900   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1091901   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1091902   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1091903   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1091904   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1091905   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1091906   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1091907   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1091908   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1091909   +END;
MPRINT(EM_DIAGRAM):   END;
1091910   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1091911   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1091912   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1091913   +drop
1091914   +H11
1091915   +H12
1091916   +H13
1091917   +H14
1091918   +H15
1091919   +H16
1091920   +H17
1091921   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 H17 ;
1091922   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1091923   +* Renaming variables for Neural36;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural36;
1091924   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1091925   +* Renaming Posterior variables for Neural36;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural36;
1091926   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1091927   +drop Neural36_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural36_P_DepVar1;
1091928   +Neural36_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural36_P_DepVar1 = P_DepVar1;
1091929   +drop Neural36_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural36_P_DepVar0;
1091930   +Neural36_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural36_P_DepVar0 = P_DepVar0;
1091931   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1091932   +* Renaming _WARN_ variable for Neural36;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural36;
1091933   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1091934   +length Neural36_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural36_WARN_ $4;
1091935   +drop Neural36_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural36_WARN_;
1091936   +Neural36_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural36_WARN_ = _WARN_;
1091937   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1091938   +* Ensmbl12: Scoring Code of model 10 of 10;
MPRINT(EM_DIAGRAM):   * Ensmbl12: Scoring Code of model 10 of 10;
1091939   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1091940   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1091941   +* TOOL: Regression;
MPRINT(EM_DIAGRAM):   * TOOL: Regression;
1091942   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1091943   +* NODE: Reg11;
MPRINT(EM_DIAGRAM):   * NODE: Reg11;
1091944   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1091945   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1091946   +*** begin scoring code for regression;
MPRINT(EM_DIAGRAM):   *** begin scoring code for regression;
1091947   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1091948   +
1091949   +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
1091950   +label _WARN_ = 'Warnings' ;
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings' ;
1091951   +
1091952   +length I_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length I_DepVar $ 12;
1091953   +label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1091954   +*** Target Values;
MPRINT(EM_DIAGRAM):   *** Target Values;
1091955   +array REG11DRF [2] $12 _temporary_ ('1' '0' );
MPRINT(EM_DIAGRAM):   array REG11DRF [2] $12 _temporary_ ('1' '0' );
1091956   +label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1091957   +format U_DepVar BEST.;
MPRINT(EM_DIAGRAM):   format U_DepVar BEST.;
1091958   +*** Unnormalized target values;
MPRINT(EM_DIAGRAM):   *** Unnormalized target values;
1091959   +ARRAY REG11DRU[2]  _TEMPORARY_ (1 0);
MPRINT(EM_DIAGRAM):   ARRAY REG11DRU[2] _TEMPORARY_ (1 0);
1091960   +
1091961   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1091962   +drop _Y ;
MPRINT(EM_DIAGRAM):   drop _Y ;
1091963   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1091964   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1091965   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1091966   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1091967   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1091968   +   _Y = .;
MPRINT(EM_DIAGRAM):   _Y = .;
1091969   +end;
MPRINT(EM_DIAGRAM):   end;
1091970   +else do;
MPRINT(EM_DIAGRAM):   else do;
1091971   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1091972   +      _Y = 1;
MPRINT(EM_DIAGRAM):   _Y = 1;
1091973   +   end;
MPRINT(EM_DIAGRAM):   end;
1091974   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1091975   +      _Y = 0;
MPRINT(EM_DIAGRAM):   _Y = 0;
1091976   +   end;
MPRINT(EM_DIAGRAM):   end;
1091977   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1091978   +      _Y = .;
MPRINT(EM_DIAGRAM):   _Y = .;
1091979   +   end;
MPRINT(EM_DIAGRAM):   end;
1091980   +end;
MPRINT(EM_DIAGRAM):   end;
1091981   +
1091982   +drop _DM_BAD;
MPRINT(EM_DIAGRAM):   drop _DM_BAD;
1091983   +_DM_BAD=0;
MPRINT(EM_DIAGRAM):   _DM_BAD=0;
1091984   +
1091985   +*** Check AcceptedCmpTotal for missing values ;
MPRINT(EM_DIAGRAM):   *** Check AcceptedCmpTotal for missing values ;
1091986   +if missing( AcceptedCmpTotal ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmpTotal ) then do;
1091987   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1091988   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1091989   +end;
MPRINT(EM_DIAGRAM):   end;
1091990   +
1091991   +*** Check Age for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Age for missing values ;
1091992   +if missing( Age ) then do;
MPRINT(EM_DIAGRAM):   if missing( Age ) then do;
1091993   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1091994   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1091995   +end;
MPRINT(EM_DIAGRAM):   end;
1091996   +
1091997   +*** Check Frq for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Frq for missing values ;
1091998   +if missing( Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( Frq ) then do;
1091999   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1092000   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1092001   +end;
MPRINT(EM_DIAGRAM):   end;
1092002   +
1092003   +*** Check Income for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Income for missing values ;
1092004   +if missing( Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( Income ) then do;
1092005   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1092006   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1092007   +end;
MPRINT(EM_DIAGRAM):   end;
1092008   +
1092009   +*** Check NumDealsPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumDealsPurchases for missing values ;
1092010   +if missing( NumDealsPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumDealsPurchases ) then do;
1092011   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1092012   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1092013   +end;
MPRINT(EM_DIAGRAM):   end;
1092014   +
1092015   +*** Check NumWebVisitsMonth for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumWebVisitsMonth for missing values ;
1092016   +if missing( NumWebVisitsMonth ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumWebVisitsMonth ) then do;
1092017   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1092018   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1092019   +end;
MPRINT(EM_DIAGRAM):   end;
1092020   +
1092021   +*** Check RFMstat for missing values ;
MPRINT(EM_DIAGRAM):   *** Check RFMstat for missing values ;
1092022   +if missing( RFMstat ) then do;
MPRINT(EM_DIAGRAM):   if missing( RFMstat ) then do;
1092023   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1092024   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1092025   +end;
MPRINT(EM_DIAGRAM):   end;
1092026   +
1092027   +*** Check RMntFrq for missing values ;
MPRINT(EM_DIAGRAM):   *** Check RMntFrq for missing values ;
1092028   +if missing( RMntFrq ) then do;
MPRINT(EM_DIAGRAM):   if missing( RMntFrq ) then do;
1092029   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1092030   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1092031   +end;
MPRINT(EM_DIAGRAM):   end;
1092032   +
1092033   +*** Check Recency for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Recency for missing values ;
1092034   +if missing( Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( Recency ) then do;
1092035   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1092036   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1092037   +end;
MPRINT(EM_DIAGRAM):   end;
1092038   +
1092039   +*** Check Teenhome for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Teenhome for missing values ;
1092040   +if missing( Teenhome ) then do;
MPRINT(EM_DIAGRAM):   if missing( Teenhome ) then do;
1092041   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1092042   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1092043   +end;
MPRINT(EM_DIAGRAM):   end;
1092044   +
1092045   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1092046   +drop _3_0 ;
MPRINT(EM_DIAGRAM):   drop _3_0 ;
1092047   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1092048   +   _3_0 = .;
MPRINT(EM_DIAGRAM):   _3_0 = .;
1092049   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1092050   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1092051   +end;
MPRINT(EM_DIAGRAM):   end;
1092052   +else do;
MPRINT(EM_DIAGRAM):   else do;
1092053   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1092054   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1092055   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1092056   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1092057   +      _3_0 = 1;
MPRINT(EM_DIAGRAM):   _3_0 = 1;
1092058   +   end;
MPRINT(EM_DIAGRAM):   end;
1092059   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1092060   +      _3_0 = -1;
MPRINT(EM_DIAGRAM):   _3_0 = -1;
1092061   +   end;
MPRINT(EM_DIAGRAM):   end;
1092062   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1092063   +      _3_0 = .;
MPRINT(EM_DIAGRAM):   _3_0 = .;
1092064   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1092065   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1092066   +   end;
MPRINT(EM_DIAGRAM):   end;
1092067   +end;
MPRINT(EM_DIAGRAM):   end;
1092068   +
1092069   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1092070   +drop _4_0 ;
MPRINT(EM_DIAGRAM):   drop _4_0 ;
1092071   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1092072   +   _4_0 = .;
MPRINT(EM_DIAGRAM):   _4_0 = .;
1092073   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1092074   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1092075   +end;
MPRINT(EM_DIAGRAM):   end;
1092076   +else do;
MPRINT(EM_DIAGRAM):   else do;
1092077   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1092078   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1092079   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1092080   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1092081   +      _4_0 = 1;
MPRINT(EM_DIAGRAM):   _4_0 = 1;
1092082   +   end;
MPRINT(EM_DIAGRAM):   end;
1092083   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1092084   +      _4_0 = -1;
MPRINT(EM_DIAGRAM):   _4_0 = -1;
1092085   +   end;
MPRINT(EM_DIAGRAM):   end;
1092086   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1092087   +      _4_0 = .;
MPRINT(EM_DIAGRAM):   _4_0 = .;
1092088   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1092089   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1092090   +   end;
MPRINT(EM_DIAGRAM):   end;
1092091   +end;
MPRINT(EM_DIAGRAM):   end;
1092092   +
1092093   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1092094   +drop _9_0 _9_1 _9_2 _9_3 ;
MPRINT(EM_DIAGRAM):   drop _9_0 _9_1 _9_2 _9_3 ;
1092095   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1092096   +_9_0 = 0;
MPRINT(EM_DIAGRAM):   _9_0 = 0;
1092097   +_9_1 = 0;
MPRINT(EM_DIAGRAM):   _9_1 = 0;
1092098   +_9_2 = 0;
MPRINT(EM_DIAGRAM):   _9_2 = 0;
1092099   +_9_3 = 0;
MPRINT(EM_DIAGRAM):   _9_3 = 0;
1092100   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1092101   +   _9_0 = .;
MPRINT(EM_DIAGRAM):   _9_0 = .;
1092102   +   _9_1 = .;
MPRINT(EM_DIAGRAM):   _9_1 = .;
1092103   +   _9_2 = .;
MPRINT(EM_DIAGRAM):   _9_2 = .;
1092104   +   _9_3 = .;
MPRINT(EM_DIAGRAM):   _9_3 = .;
1092105   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1092106   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1092107   +end;
MPRINT(EM_DIAGRAM):   end;
1092108   +else do;
MPRINT(EM_DIAGRAM):   else do;
1092109   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1092110   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1092111   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1092112   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1092113   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1092114   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1092115   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1092116   +            _9_0 = 1;
MPRINT(EM_DIAGRAM):   _9_0 = 1;
1092117   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1092118   +         end;
MPRINT(EM_DIAGRAM):   end;
1092119   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1092120   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1092121   +               _9_1 = 1;
MPRINT(EM_DIAGRAM):   _9_1 = 1;
1092122   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1092123   +            end;
MPRINT(EM_DIAGRAM):   end;
1092124   +         end;
MPRINT(EM_DIAGRAM):   end;
1092125   +      end;
MPRINT(EM_DIAGRAM):   end;
1092126   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1092127   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1092128   +            _9_2 = 1;
MPRINT(EM_DIAGRAM):   _9_2 = 1;
1092129   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1092130   +         end;
MPRINT(EM_DIAGRAM):   end;
1092131   +      end;
MPRINT(EM_DIAGRAM):   end;
1092132   +   end;
MPRINT(EM_DIAGRAM):   end;
1092133   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1092134   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1092135   +         _9_3 = 1;
MPRINT(EM_DIAGRAM):   _9_3 = 1;
1092136   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1092137   +      end;
MPRINT(EM_DIAGRAM):   end;
1092138   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1092139   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1092140   +            _9_0 = -1;
MPRINT(EM_DIAGRAM):   _9_0 = -1;
1092141   +            _9_1 = -1;
MPRINT(EM_DIAGRAM):   _9_1 = -1;
1092142   +            _9_2 = -1;
MPRINT(EM_DIAGRAM):   _9_2 = -1;
1092143   +            _9_3 = -1;
MPRINT(EM_DIAGRAM):   _9_3 = -1;
1092144   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1092145   +         end;
MPRINT(EM_DIAGRAM):   end;
1092146   +      end;
MPRINT(EM_DIAGRAM):   end;
1092147   +   end;
MPRINT(EM_DIAGRAM):   end;
1092148   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1092149   +      _9_0 = .;
MPRINT(EM_DIAGRAM):   _9_0 = .;
1092150   +      _9_1 = .;
MPRINT(EM_DIAGRAM):   _9_1 = .;
1092151   +      _9_2 = .;
MPRINT(EM_DIAGRAM):   _9_2 = .;
1092152   +      _9_3 = .;
MPRINT(EM_DIAGRAM):   _9_3 = .;
1092153   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1092154   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1092155   +   end;
MPRINT(EM_DIAGRAM):   end;
1092156   +end;
MPRINT(EM_DIAGRAM):   end;
1092157   +
1092158   +*** If missing inputs, use averages;
MPRINT(EM_DIAGRAM):   *** If missing inputs, use averages;
1092159   +if _DM_BAD > 0 then do;
MPRINT(EM_DIAGRAM):   if _DM_BAD > 0 then do;
1092160   +   _P0 = 0.151221567;
MPRINT(EM_DIAGRAM):   _P0 = 0.151221567;
1092161   +   _P1 = 0.848778433;
MPRINT(EM_DIAGRAM):   _P1 = 0.848778433;
1092162   +   goto REG11DR1;
MPRINT(EM_DIAGRAM):   goto REG11DR1;
1092163   +end;
MPRINT(EM_DIAGRAM):   end;
1092164   +
1092165   +*** Compute Linear Predictor;
MPRINT(EM_DIAGRAM):   *** Compute Linear Predictor;
1092166   +drop _TEMP;
MPRINT(EM_DIAGRAM):   drop _TEMP;
1092167   +drop _LP0;
MPRINT(EM_DIAGRAM):   drop _LP0;
1092168   +_LP0 = 0;
MPRINT(EM_DIAGRAM):   _LP0 = 0;
1092169   +
1092170   +***  Effect: AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Effect: AcceptedCmp3 ;
1092171   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1092172   +_LP0 = _LP0 + (   -0.21402292491598) * _TEMP * _3_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.21402292491598) * _TEMP * _3_0;
1092173   +
1092174   +***  Effect: AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Effect: AcceptedCmp4 ;
1092175   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1092176   +_LP0 = _LP0 + (    0.20181176396468) * _TEMP * _4_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.20181176396468) * _TEMP * _4_0;
1092177   +
1092178   +***  Effect: AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   *** Effect: AcceptedCmpTotal ;
1092179   +_TEMP = AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   _TEMP = AcceptedCmpTotal ;
1092180   +_LP0 = _LP0 + (    1.01331254975906 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.01331254975906 * _TEMP);
1092181   +
1092182   +***  Effect: Age ;
MPRINT(EM_DIAGRAM):   *** Effect: Age ;
1092183   +_TEMP = Age ;
MPRINT(EM_DIAGRAM):   _TEMP = Age ;
1092184   +_LP0 = _LP0 + (   -0.00968312823761 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.00968312823761 * _TEMP);
1092185   +
1092186   +***  Effect: Frq ;
MPRINT(EM_DIAGRAM):   *** Effect: Frq ;
1092187   +_TEMP = Frq ;
MPRINT(EM_DIAGRAM):   _TEMP = Frq ;
1092188   +_LP0 = _LP0 + (   -0.03456417718144 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.03456417718144 * _TEMP);
1092189   +
1092190   +***  Effect: Income ;
MPRINT(EM_DIAGRAM):   *** Effect: Income ;
1092191   +_TEMP = Income ;
MPRINT(EM_DIAGRAM):   _TEMP = Income ;
1092192   +_LP0 = _LP0 + (    0.00002539988923 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00002539988923 * _TEMP);
1092193   +
1092194   +***  Effect: Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Effect: Marital_Status ;
1092195   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1092196   +_LP0 = _LP0 + (    0.11081046192241) * _TEMP * _9_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.11081046192241) * _TEMP * _9_0;
1092197   +_LP0 = _LP0 + (   -0.36385893866909) * _TEMP * _9_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.36385893866909) * _TEMP * _9_1;
1092198   +_LP0 = _LP0 + (    0.25486771612086) * _TEMP * _9_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.25486771612086) * _TEMP * _9_2;
1092199   +_LP0 = _LP0 + (   -0.40515143447522) * _TEMP * _9_3;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.40515143447522) * _TEMP * _9_3;
1092200   +
1092201   +***  Effect: NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumDealsPurchases ;
1092202   +_TEMP = NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumDealsPurchases ;
1092203   +_LP0 = _LP0 + (    0.21113804572457 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.21113804572457 * _TEMP);
1092204   +
1092205   +***  Effect: NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   *** Effect: NumWebVisitsMonth ;
1092206   +_TEMP = NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   _TEMP = NumWebVisitsMonth ;
1092207   +_LP0 = _LP0 + (    0.17412114550604 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.17412114550604 * _TEMP);
1092208   +
1092209   +***  Effect: RFMstat ;
MPRINT(EM_DIAGRAM):   *** Effect: RFMstat ;
1092210   +_TEMP = RFMstat ;
MPRINT(EM_DIAGRAM):   _TEMP = RFMstat ;
1092211   +_LP0 = _LP0 + (    0.00006841011087 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00006841011087 * _TEMP);
1092212   +
1092213   +***  Effect: RMntFrq ;
MPRINT(EM_DIAGRAM):   *** Effect: RMntFrq ;
1092214   +_TEMP = RMntFrq ;
MPRINT(EM_DIAGRAM):   _TEMP = RMntFrq ;
1092215   +_LP0 = _LP0 + (    0.00529455452809 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00529455452809 * _TEMP);
1092216   +
1092217   +***  Effect: Recency ;
MPRINT(EM_DIAGRAM):   *** Effect: Recency ;
1092218   +_TEMP = Recency ;
MPRINT(EM_DIAGRAM):   _TEMP = Recency ;
1092219   +_LP0 = _LP0 + (   -0.03257124268465 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.03257124268465 * _TEMP);
1092220   +
1092221   +***  Effect: Teenhome ;
MPRINT(EM_DIAGRAM):   *** Effect: Teenhome ;
1092222   +_TEMP = Teenhome ;
MPRINT(EM_DIAGRAM):   _TEMP = Teenhome ;
1092223   +_LP0 = _LP0 + (   -0.71325798797505 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.71325798797505 * _TEMP);
1092224   +
1092225   +*** Naive Posterior Probabilities;
MPRINT(EM_DIAGRAM):   *** Naive Posterior Probabilities;
1092226   +drop _MAXP _IY _P0 _P1;
MPRINT(EM_DIAGRAM):   drop _MAXP _IY _P0 _P1;
1092227   +_P0 = probnorm((   -2.04830407754231) + _LP0);
MPRINT(EM_DIAGRAM):   _P0 = probnorm(( -2.04830407754231) + _LP0);
1092228   +_P1 = 1.0 - _P0;
MPRINT(EM_DIAGRAM):   _P1 = 1.0 - _P0;
1092229   +
1092230   +REG11DR1:
1092231   +
1092232   +*** Residuals;
MPRINT(EM_DIAGRAM):   REG11DR1: *** Residuals;
1092233   +if (_Y = .) then do;
MPRINT(EM_DIAGRAM):   if (_Y = .) then do;
1092234   +   R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
1092235   +   R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
1092236   +end;
MPRINT(EM_DIAGRAM):   end;
1092237   +else do;
MPRINT(EM_DIAGRAM):   else do;
1092238   +    label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1092239   +    label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1092240   +   R_DepVar1 = - _P0;
MPRINT(EM_DIAGRAM):   R_DepVar1 = - _P0;
1092241   +   R_DepVar0 = - _P1;
MPRINT(EM_DIAGRAM):   R_DepVar0 = - _P1;
1092242   +   select( _Y );
MPRINT(EM_DIAGRAM):   select( _Y );
1092243   +      when (0)  R_DepVar1 = R_DepVar1 + 1;
MPRINT(EM_DIAGRAM):   when (0) R_DepVar1 = R_DepVar1 + 1;
1092244   +      when (1)  R_DepVar0 = R_DepVar0 + 1;
MPRINT(EM_DIAGRAM):   when (1) R_DepVar0 = R_DepVar0 + 1;
1092245   +   end;
MPRINT(EM_DIAGRAM):   end;
1092246   +end;
MPRINT(EM_DIAGRAM):   end;
1092247   +
1092248   +*** Posterior Probabilities and Predicted Level;
MPRINT(EM_DIAGRAM):   *** Posterior Probabilities and Predicted Level;
1092249   +label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1092250   +label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1092251   +P_DepVar1 = _P0;
MPRINT(EM_DIAGRAM):   P_DepVar1 = _P0;
1092252   +_MAXP = _P0;
MPRINT(EM_DIAGRAM):   _MAXP = _P0;
1092253   +_IY = 1;
MPRINT(EM_DIAGRAM):   _IY = 1;
1092254   +P_DepVar0 = _P1;
MPRINT(EM_DIAGRAM):   P_DepVar0 = _P1;
1092255   +if (_P1 >  _MAXP + 1E-8) then do;
MPRINT(EM_DIAGRAM):   if (_P1 > _MAXP + 1E-8) then do;
1092256   +   _MAXP = _P1;
MPRINT(EM_DIAGRAM):   _MAXP = _P1;
1092257   +   _IY = 2;
MPRINT(EM_DIAGRAM):   _IY = 2;
1092258   +end;
MPRINT(EM_DIAGRAM):   end;
1092259   +I_DepVar = REG11DRF[_IY];
MPRINT(EM_DIAGRAM):   I_DepVar = REG11DRF[_IY];
1092260   +U_DepVar = REG11DRU[_IY];
MPRINT(EM_DIAGRAM):   U_DepVar = REG11DRU[_IY];
1092261   +
1092262   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1092263   +***** end scoring code for regression;
MPRINT(EM_DIAGRAM):   ***** end scoring code for regression;
1092264   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1092265   +* Renaming variables for Reg11;
MPRINT(EM_DIAGRAM):   * Renaming variables for Reg11;
1092266   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1092267   +* Renaming Posterior variables for Reg11;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Reg11;
1092268   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1092269   +drop Reg11_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Reg11_P_DepVar1;
1092270   +Reg11_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Reg11_P_DepVar1 = P_DepVar1;
1092271   +drop Reg11_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Reg11_P_DepVar0;
1092272   +Reg11_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Reg11_P_DepVar0 = P_DepVar0;
1092273   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1092274   +* Renaming _WARN_ variable for Reg11;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Reg11;
1092275   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1092276   +length Reg11_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Reg11_WARN_ $4;
1092277   +drop Reg11_WARN_;
MPRINT(EM_DIAGRAM):   drop Reg11_WARN_;
1092278   +Reg11_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Reg11_WARN_ = _WARN_;
1092279   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1092280   +* Ensmbl12: Average Posteriors of 10 models;
MPRINT(EM_DIAGRAM):   * Ensmbl12: Average Posteriors of 10 models;
1092281   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1092282   +P_DepVar1 = (
1092283   +Reg12_P_DepVar1 +
1092284   +Tree6_P_DepVar1 +
1092285   +Neural39_P_DepVar1 +
1092286   +Neural42_P_DepVar1 +
1092287   +Neural37_P_DepVar1 +
1092288   +Neural38_P_DepVar1 +
1092289   +Neural40_P_DepVar1 +
1092290   +Neural41_P_DepVar1 +
1092291   +Neural36_P_DepVar1 +
1092292   +Reg11_P_DepVar1
1092293   +)/10;
MPRINT(EM_DIAGRAM):   P_DepVar1 = ( Reg12_P_DepVar1 + Tree6_P_DepVar1 + Neural39_P_DepVar1 + 
Neural42_P_DepVar1 + Neural37_P_DepVar1 + Neural38_P_DepVar1 + Neural40_P_DepVar1 + 
Neural41_P_DepVar1 + Neural36_P_DepVar1 + Reg11_P_DepVar1 )/10;
1092294   +P_DepVar0 = (
1092295   +Reg12_P_DepVar0 +
1092296   +Tree6_P_DepVar0 +
1092297   +Neural39_P_DepVar0 +
1092298   +Neural42_P_DepVar0 +
1092299   +Neural37_P_DepVar0 +
1092300   +Neural38_P_DepVar0 +
1092301   +Neural40_P_DepVar0 +
1092302   +Neural41_P_DepVar0 +
1092303   +Neural36_P_DepVar0 +
1092304   +Reg11_P_DepVar0
1092305   +)/10;
MPRINT(EM_DIAGRAM):   P_DepVar0 = ( Reg12_P_DepVar0 + Tree6_P_DepVar0 + Neural39_P_DepVar0 + 
Neural42_P_DepVar0 + Neural37_P_DepVar0 + Neural38_P_DepVar0 + Neural40_P_DepVar0 + 
Neural41_P_DepVar0 + Neural36_P_DepVar0 + Reg11_P_DepVar0 )/10;
1092306   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1092307   +* Ensmbl12: Computing Classification Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl12: Computing Classification Vars;
1092308   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1092309   +length I_DepVar $32;
MPRINT(EM_DIAGRAM):   length I_DepVar $32;
WARNING: Length of character variable I_DepVar has already been set. 
         Use the LENGTH statement as the very first statement in the DATA STEP to declare the 
         length of a character variable.
1092310   +label I_DepVar = 'Into: DepVar';
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar';
1092311   +length _format $200;
MPRINT(EM_DIAGRAM):   length _format $200;
1092312   +drop _format;
MPRINT(EM_DIAGRAM):   drop _format;
1092313   +_format= ' ';
MPRINT(EM_DIAGRAM):   _format= ' ';
1092314   +_p_= 0;
MPRINT(EM_DIAGRAM):   _p_= 0;
1092315   +drop _p_;
MPRINT(EM_DIAGRAM):   drop _p_;
1092316   +if P_DepVar1 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar1 > _p_ then do;
1092317   +_p_= P_DepVar1;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar1;
1092318   +_format= '1';
MPRINT(EM_DIAGRAM):   _format= '1';
1092319   +end;
MPRINT(EM_DIAGRAM):   end;
1092320   +if P_DepVar0 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar0 > _p_ then do;
1092321   +_p_= P_DepVar0;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar0;
1092322   +_format= '0';
MPRINT(EM_DIAGRAM):   _format= '0';
1092323   +end;
MPRINT(EM_DIAGRAM):   end;
1092324   +%DMNORMCP(_format,I_DepVar);
MPRINT(DMNORMCP):   I_DepVar=dmnorm(_format,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1092325   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1092326   +* Ensmbl12: Producing Unformatted variable;
MPRINT(EM_DIAGRAM):   * Ensmbl12: Producing Unformatted variable;
1092327   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1092328   +label U_DepVar = "Unnormalized Into: DepVar";
MPRINT(EM_DIAGRAM):   label U_DepVar = "Unnormalized Into: DepVar";
1092329   +if I_DepVar = '1' then U_DepVar = 1;
MPRINT(EM_DIAGRAM):   if I_DepVar = '1' then U_DepVar = 1;
1092330   +else
1092331   +if I_DepVar = '0' then U_DepVar = 0;
MPRINT(EM_DIAGRAM):   else if I_DepVar = '0' then U_DepVar = 0;
1092332   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1092333   +* Ensmbl12: Computing _WARN_ Variable;
MPRINT(EM_DIAGRAM):   * Ensmbl12: Computing _WARN_ Variable;
1092334   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1092335   +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
1092336   +label _WARN_ = 'Warnings';
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings';
1092337   +_WARN_ = '';
MPRINT(EM_DIAGRAM):   _WARN_ = '';
1092338   +if index(REG12_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(REG12_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 
1, 1) ='M';
1092339   +if index(REG12_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(REG12_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 
2, 1) ='U';
1092340   +if index(REG12_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(REG12_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 
3, 1) ='P';
1092341   +if index(REG12_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(REG12_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 
4, 1) ='C';
1092342   +if index(TREE6_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(TREE6_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 
1, 1) ='M';
1092343   +if index(TREE6_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(TREE6_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 
2, 1) ='U';
1092344   +if index(TREE6_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(TREE6_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 
3, 1) ='P';
1092345   +if index(TREE6_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(TREE6_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 
4, 1) ='C';
1092346   +if index(NEURAL39_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M'
1092346  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL39_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
1092347   +if index(NEURAL39_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U'
1092347  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL39_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
1092348   +if index(NEURAL39_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P'
1092348  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL39_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
1092349   +if index(NEURAL39_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C'
1092349  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL39_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
1092350   +if index(NEURAL42_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M'
1092350  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL42_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
1092351   +if index(NEURAL42_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U'
1092351  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL42_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
1092352   +if index(NEURAL42_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P'
1092352  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL42_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
1092353   +if index(NEURAL42_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C'
1092353  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL42_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
1092354   +if index(NEURAL37_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M'
1092354  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL37_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
1092355   +if index(NEURAL37_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U'
1092355  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL37_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
1092356   +if index(NEURAL37_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P'
1092356  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL37_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
1092357   +if index(NEURAL37_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C'
1092357  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL37_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
1092358   +if index(NEURAL38_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M'
1092358  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL38_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
1092359   +if index(NEURAL38_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U'
1092359  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL38_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
1092360   +if index(NEURAL38_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P'
1092360  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL38_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
1092361   +if index(NEURAL38_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C'
1092361  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL38_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
1092362   +if index(NEURAL40_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M'
1092362  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL40_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
1092363   +if index(NEURAL40_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U'
1092363  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL40_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
1092364   +if index(NEURAL40_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P'
1092364  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL40_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
1092365   +if index(NEURAL40_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C'
1092365  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL40_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
1092366   +if index(NEURAL41_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M'
1092366  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL41_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
1092367   +if index(NEURAL41_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U'
1092367  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL41_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
1092368   +if index(NEURAL41_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P'
1092368  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL41_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
1092369   +if index(NEURAL41_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C'
1092369  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL41_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
1092370   +if index(NEURAL36_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M'
1092370  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL36_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
1092371   +if index(NEURAL36_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U'
1092371  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL36_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
1092372   +if index(NEURAL36_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P'
1092372  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL36_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
1092373   +if index(NEURAL36_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C'
1092373  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL36_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
1092374   +if index(REG11_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(REG11_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 
1, 1) ='M';
1092375   +if index(REG11_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(REG11_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 
2, 1) ='U';
1092376   +if index(REG11_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(REG11_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 
3, 1) ='P';
1092377   +if index(REG11_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(REG11_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 
4, 1) ='C';
1092378   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1092379   +* Ensmbl12: Computing Residual Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl12: Computing Residual Vars;
1092380   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1092381   +if
1092382   +F_DepVar NE '1'
1092383   +AND F_DepVar NE '0'
1092384   +then do;
MPRINT(EM_DIAGRAM):   if F_DepVar NE '1' AND F_DepVar NE '0' then do;
1092385   +R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
1092386   +R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
1092387   +end;
MPRINT(EM_DIAGRAM):   end;
1092388   +else do;
MPRINT(EM_DIAGRAM):   else do;
1092389   +R_DepVar1 = -P_DepVar1;
MPRINT(EM_DIAGRAM):   R_DepVar1 = -P_DepVar1;
1092390   +R_DepVar0 = -P_DepVar0;
MPRINT(EM_DIAGRAM):   R_DepVar0 = -P_DepVar0;
1092391   +SELECT(F_DepVar);
MPRINT(EM_DIAGRAM):   SELECT(F_DepVar);
1092392   +WHEN('1') R_DepVar1 = R_DepVar1 +1;
MPRINT(EM_DIAGRAM):   WHEN('1') R_DepVar1 = R_DepVar1 +1;
1092393   +WHEN('0') R_DepVar0 = R_DepVar0 +1;
MPRINT(EM_DIAGRAM):   WHEN('0') R_DepVar0 = R_DepVar0 +1;
1092394   +OTHERWISE;
MPRINT(EM_DIAGRAM):   OTHERWISE;
1092395   +END;
MPRINT(EM_DIAGRAM):   END;
1092396   +END;
MPRINT(EM_DIAGRAM):   END;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1092397    run;

NOTE: DATA STEP view saved on file EMWS8.ENSMBL12_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.REG12_TRAIN.VIEW used (Total process time):
      real time           0.18 seconds
      cpu time            0.18 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.19 seconds
      cpu time            0.18 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1092398    quit;
1092399    filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
1092400    filename emflow
1092400  ! "C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl12\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl12\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl12: Scoring REG12_VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1092401    *------------------------------------------------------------*;
1092402    * Ensmbl12: Scoring REG12_VALIDATE data;
1092403    *------------------------------------------------------------*;
1092404    data EMWS8.Ensmbl12_VALIDATE
1092405    / view=EMWS8.Ensmbl12_VALIDATE
1092406    ;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl12_VALIDATE / view=EMWS8.Ensmbl12_VALIDATE ;
1092407    set EMWS8.Reg12_VALIDATE
1092408    ;
MPRINT(EM_DIAGRAM):   set EMWS8.Reg12_VALIDATE ;
1092409    %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl12\EMFLOWSCORE.sas.
1092410   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1092411   +* Ensmbl12: Combine model for DepVar;
MPRINT(EM_DIAGRAM):   * Ensmbl12: Combine model for DepVar;
1092412   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1092413   +* Ensmbl12: Scoring Code of model 1 of 10;
MPRINT(EM_DIAGRAM):   * Ensmbl12: Scoring Code of model 1 of 10;
1092414   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1092415   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1092416   +* TOOL: Extension Class;
MPRINT(EM_DIAGRAM):   * TOOL: Extension Class;
1092417   +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
1092418   +* NODE: FIMPORT;
MPRINT(EM_DIAGRAM):   * NODE: FIMPORT;
1092419   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1092420   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1092421   +* TOOL: Statistics Exploration;
MPRINT(EM_DIAGRAM):   * TOOL: Statistics Exploration;
1092422   +* TYPE: EXPLORE;
MPRINT(EM_DIAGRAM):   * TYPE: EXPLORE;
1092423   +* NODE: Stat;
MPRINT(EM_DIAGRAM):   * NODE: Stat;
1092424   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1092425   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1092426   +* TOOL: Filtering;
MPRINT(EM_DIAGRAM):   * TOOL: Filtering;
1092427   +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
1092428   +* NODE: Filter;
MPRINT(EM_DIAGRAM):   * NODE: Filter;
1092429   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1092430   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1092431   +* TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
MPRINT(EM_DIAGRAM):   * TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
1092432   +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
1092433   +* NODE: EMCODE4;
MPRINT(EM_DIAGRAM):   * NODE: EMCODE4;
1092434   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1092435   +
1092436   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1092437   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1092437  !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1092438   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1092439   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1092440   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1092441   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1092442   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
1092443   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1092444   +* TOOL: Transform;
MPRINT(EM_DIAGRAM):   * TOOL: Transform;
1092445   +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
1092446   +* NODE: Trans;
MPRINT(EM_DIAGRAM):   * NODE: Trans;
1092447   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1092448   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1092449   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1092450   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1092451   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1092452   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1092453   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
1092454   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1092455   +* TOOL: Partition Class;
MPRINT(EM_DIAGRAM):   * TOOL: Partition Class;
1092456   +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
1092457   +* NODE: Part;
MPRINT(EM_DIAGRAM):   * NODE: Part;
1092458   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1092459   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1092460   +* TOOL: Metadata Node;
MPRINT(EM_DIAGRAM):   * TOOL: Metadata Node;
1092461   +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
1092462   +* NODE: Meta3;
MPRINT(EM_DIAGRAM):   * NODE: Meta3;
1092463   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1092464   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1092465   +* TOOL: Regression;
MPRINT(EM_DIAGRAM):   * TOOL: Regression;
1092466   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1092467   +* NODE: Reg12;
MPRINT(EM_DIAGRAM):   * NODE: Reg12;
1092468   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1092469   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1092470   +*** begin scoring code for regression;
MPRINT(EM_DIAGRAM):   *** begin scoring code for regression;
1092471   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1092472   +
1092473   +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
1092474   +label _WARN_ = 'Warnings' ;
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings' ;
1092475   +
1092476   +length I_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length I_DepVar $ 12;
1092477   +label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1092478   +*** Target Values;
MPRINT(EM_DIAGRAM):   *** Target Values;
1092479   +array REG12DRF [2] $12 _temporary_ ('1' '0' );
MPRINT(EM_DIAGRAM):   array REG12DRF [2] $12 _temporary_ ('1' '0' );
1092480   +label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1092481   +format U_DepVar BEST.;
MPRINT(EM_DIAGRAM):   format U_DepVar BEST.;
1092482   +*** Unnormalized target values;
MPRINT(EM_DIAGRAM):   *** Unnormalized target values;
1092483   +ARRAY REG12DRU[2]  _TEMPORARY_ (1 0);
MPRINT(EM_DIAGRAM):   ARRAY REG12DRU[2] _TEMPORARY_ (1 0);
1092484   +
1092485   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1092486   +drop _Y ;
MPRINT(EM_DIAGRAM):   drop _Y ;
1092487   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1092488   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1092489   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1092490   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1092491   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1092492   +   _Y = .;
MPRINT(EM_DIAGRAM):   _Y = .;
1092493   +end;
MPRINT(EM_DIAGRAM):   end;
1092494   +else do;
MPRINT(EM_DIAGRAM):   else do;
1092495   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1092496   +      _Y = 1;
MPRINT(EM_DIAGRAM):   _Y = 1;
1092497   +   end;
MPRINT(EM_DIAGRAM):   end;
1092498   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1092499   +      _Y = 0;
MPRINT(EM_DIAGRAM):   _Y = 0;
1092500   +   end;
MPRINT(EM_DIAGRAM):   end;
1092501   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1092502   +      _Y = .;
MPRINT(EM_DIAGRAM):   _Y = .;
1092503   +   end;
MPRINT(EM_DIAGRAM):   end;
1092504   +end;
MPRINT(EM_DIAGRAM):   end;
1092505   +
1092506   +drop _DM_BAD;
MPRINT(EM_DIAGRAM):   drop _DM_BAD;
1092507   +_DM_BAD=0;
MPRINT(EM_DIAGRAM):   _DM_BAD=0;
1092508   +
1092509   +*** Check AcceptedCmpTotal for missing values ;
MPRINT(EM_DIAGRAM):   *** Check AcceptedCmpTotal for missing values ;
1092510   +if missing( AcceptedCmpTotal ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmpTotal ) then do;
1092511   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1092512   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1092513   +end;
MPRINT(EM_DIAGRAM):   end;
1092514   +
1092515   +*** Check Age for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Age for missing values ;
1092516   +if missing( Age ) then do;
MPRINT(EM_DIAGRAM):   if missing( Age ) then do;
1092517   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1092518   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1092519   +end;
MPRINT(EM_DIAGRAM):   end;
1092520   +
1092521   +*** Check Frq for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Frq for missing values ;
1092522   +if missing( Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( Frq ) then do;
1092523   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1092524   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1092525   +end;
MPRINT(EM_DIAGRAM):   end;
1092526   +
1092527   +*** Check Income for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Income for missing values ;
1092528   +if missing( Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( Income ) then do;
1092529   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1092530   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1092531   +end;
MPRINT(EM_DIAGRAM):   end;
1092532   +
1092533   +*** Check NumDealsPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumDealsPurchases for missing values ;
1092534   +if missing( NumDealsPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumDealsPurchases ) then do;
1092535   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1092536   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1092537   +end;
MPRINT(EM_DIAGRAM):   end;
1092538   +
1092539   +*** Check NumWebVisitsMonth for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumWebVisitsMonth for missing values ;
1092540   +if missing( NumWebVisitsMonth ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumWebVisitsMonth ) then do;
1092541   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1092542   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1092543   +end;
MPRINT(EM_DIAGRAM):   end;
1092544   +
1092545   +*** Check RMntFrq for missing values ;
MPRINT(EM_DIAGRAM):   *** Check RMntFrq for missing values ;
1092546   +if missing( RMntFrq ) then do;
MPRINT(EM_DIAGRAM):   if missing( RMntFrq ) then do;
1092547   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1092548   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1092549   +end;
MPRINT(EM_DIAGRAM):   end;
1092550   +
1092551   +*** Check Recency for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Recency for missing values ;
1092552   +if missing( Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( Recency ) then do;
1092553   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1092554   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1092555   +end;
MPRINT(EM_DIAGRAM):   end;
1092556   +
1092557   +*** Check Teenhome for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Teenhome for missing values ;
1092558   +if missing( Teenhome ) then do;
MPRINT(EM_DIAGRAM):   if missing( Teenhome ) then do;
1092559   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1092560   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1092561   +end;
MPRINT(EM_DIAGRAM):   end;
1092562   +
1092563   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1092564   +drop _3_0 ;
MPRINT(EM_DIAGRAM):   drop _3_0 ;
1092565   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1092566   +   _3_0 = .;
MPRINT(EM_DIAGRAM):   _3_0 = .;
1092567   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1092568   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1092569   +end;
MPRINT(EM_DIAGRAM):   end;
1092570   +else do;
MPRINT(EM_DIAGRAM):   else do;
1092571   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1092572   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1092573   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1092574   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1092575   +      _3_0 = 1;
MPRINT(EM_DIAGRAM):   _3_0 = 1;
1092576   +   end;
MPRINT(EM_DIAGRAM):   end;
1092577   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1092578   +      _3_0 = -1;
MPRINT(EM_DIAGRAM):   _3_0 = -1;
1092579   +   end;
MPRINT(EM_DIAGRAM):   end;
1092580   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1092581   +      _3_0 = .;
MPRINT(EM_DIAGRAM):   _3_0 = .;
1092582   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1092583   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1092584   +   end;
MPRINT(EM_DIAGRAM):   end;
1092585   +end;
MPRINT(EM_DIAGRAM):   end;
1092586   +
1092587   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1092588   +drop _4_0 ;
MPRINT(EM_DIAGRAM):   drop _4_0 ;
1092589   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1092590   +   _4_0 = .;
MPRINT(EM_DIAGRAM):   _4_0 = .;
1092591   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1092592   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1092593   +end;
MPRINT(EM_DIAGRAM):   end;
1092594   +else do;
MPRINT(EM_DIAGRAM):   else do;
1092595   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1092596   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1092597   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1092598   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1092599   +      _4_0 = 1;
MPRINT(EM_DIAGRAM):   _4_0 = 1;
1092600   +   end;
MPRINT(EM_DIAGRAM):   end;
1092601   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1092602   +      _4_0 = -1;
MPRINT(EM_DIAGRAM):   _4_0 = -1;
1092603   +   end;
MPRINT(EM_DIAGRAM):   end;
1092604   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1092605   +      _4_0 = .;
MPRINT(EM_DIAGRAM):   _4_0 = .;
1092606   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1092607   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1092608   +   end;
MPRINT(EM_DIAGRAM):   end;
1092609   +end;
MPRINT(EM_DIAGRAM):   end;
1092610   +
1092611   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1092612   +drop _9_0 _9_1 _9_2 _9_3 ;
MPRINT(EM_DIAGRAM):   drop _9_0 _9_1 _9_2 _9_3 ;
1092613   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1092614   +_9_0 = 0;
MPRINT(EM_DIAGRAM):   _9_0 = 0;
1092615   +_9_1 = 0;
MPRINT(EM_DIAGRAM):   _9_1 = 0;
1092616   +_9_2 = 0;
MPRINT(EM_DIAGRAM):   _9_2 = 0;
1092617   +_9_3 = 0;
MPRINT(EM_DIAGRAM):   _9_3 = 0;
1092618   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1092619   +   _9_0 = .;
MPRINT(EM_DIAGRAM):   _9_0 = .;
1092620   +   _9_1 = .;
MPRINT(EM_DIAGRAM):   _9_1 = .;
1092621   +   _9_2 = .;
MPRINT(EM_DIAGRAM):   _9_2 = .;
1092622   +   _9_3 = .;
MPRINT(EM_DIAGRAM):   _9_3 = .;
1092623   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1092624   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1092625   +end;
MPRINT(EM_DIAGRAM):   end;
1092626   +else do;
MPRINT(EM_DIAGRAM):   else do;
1092627   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1092628   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1092629   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1092630   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1092631   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1092632   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1092633   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1092634   +            _9_0 = 1;
MPRINT(EM_DIAGRAM):   _9_0 = 1;
1092635   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1092636   +         end;
MPRINT(EM_DIAGRAM):   end;
1092637   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1092638   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1092639   +               _9_1 = 1;
MPRINT(EM_DIAGRAM):   _9_1 = 1;
1092640   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1092641   +            end;
MPRINT(EM_DIAGRAM):   end;
1092642   +         end;
MPRINT(EM_DIAGRAM):   end;
1092643   +      end;
MPRINT(EM_DIAGRAM):   end;
1092644   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1092645   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1092646   +            _9_2 = 1;
MPRINT(EM_DIAGRAM):   _9_2 = 1;
1092647   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1092648   +         end;
MPRINT(EM_DIAGRAM):   end;
1092649   +      end;
MPRINT(EM_DIAGRAM):   end;
1092650   +   end;
MPRINT(EM_DIAGRAM):   end;
1092651   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1092652   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1092653   +         _9_3 = 1;
MPRINT(EM_DIAGRAM):   _9_3 = 1;
1092654   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1092655   +      end;
MPRINT(EM_DIAGRAM):   end;
1092656   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1092657   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1092658   +            _9_0 = -1;
MPRINT(EM_DIAGRAM):   _9_0 = -1;
1092659   +            _9_1 = -1;
MPRINT(EM_DIAGRAM):   _9_1 = -1;
1092660   +            _9_2 = -1;
MPRINT(EM_DIAGRAM):   _9_2 = -1;
1092661   +            _9_3 = -1;
MPRINT(EM_DIAGRAM):   _9_3 = -1;
1092662   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1092663   +         end;
MPRINT(EM_DIAGRAM):   end;
1092664   +      end;
MPRINT(EM_DIAGRAM):   end;
1092665   +   end;
MPRINT(EM_DIAGRAM):   end;
1092666   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1092667   +      _9_0 = .;
MPRINT(EM_DIAGRAM):   _9_0 = .;
1092668   +      _9_1 = .;
MPRINT(EM_DIAGRAM):   _9_1 = .;
1092669   +      _9_2 = .;
MPRINT(EM_DIAGRAM):   _9_2 = .;
1092670   +      _9_3 = .;
MPRINT(EM_DIAGRAM):   _9_3 = .;
1092671   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1092672   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1092673   +   end;
MPRINT(EM_DIAGRAM):   end;
1092674   +end;
MPRINT(EM_DIAGRAM):   end;
1092675   +
1092676   +*** If missing inputs, use averages;
MPRINT(EM_DIAGRAM):   *** If missing inputs, use averages;
1092677   +if _DM_BAD > 0 then do;
MPRINT(EM_DIAGRAM):   if _DM_BAD > 0 then do;
1092678   +   _P0 = 0.151221567;
MPRINT(EM_DIAGRAM):   _P0 = 0.151221567;
1092679   +   _P1 = 0.848778433;
MPRINT(EM_DIAGRAM):   _P1 = 0.848778433;
1092680   +   goto REG12DR1;
MPRINT(EM_DIAGRAM):   goto REG12DR1;
1092681   +end;
MPRINT(EM_DIAGRAM):   end;
1092682   +
1092683   +*** Compute Linear Predictor;
MPRINT(EM_DIAGRAM):   *** Compute Linear Predictor;
1092684   +drop _TEMP;
MPRINT(EM_DIAGRAM):   drop _TEMP;
1092685   +drop _LP0;
MPRINT(EM_DIAGRAM):   drop _LP0;
1092686   +_LP0 = 0;
MPRINT(EM_DIAGRAM):   _LP0 = 0;
1092687   +
1092688   +***  Effect: AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Effect: AcceptedCmp3 ;
1092689   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1092690   +_LP0 = _LP0 + (   -0.41254575292144) * _TEMP * _3_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.41254575292144) * _TEMP * _3_0;
1092691   +
1092692   +***  Effect: AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Effect: AcceptedCmp4 ;
1092693   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1092694   +_LP0 = _LP0 + (    0.34675190501967) * _TEMP * _4_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.34675190501967) * _TEMP * _4_0;
1092695   +
1092696   +***  Effect: AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   *** Effect: AcceptedCmpTotal ;
1092697   +_TEMP = AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   _TEMP = AcceptedCmpTotal ;
1092698   +_LP0 = _LP0 + (    1.80745311910799 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.80745311910799 * _TEMP);
1092699   +
1092700   +***  Effect: Age ;
MPRINT(EM_DIAGRAM):   *** Effect: Age ;
1092701   +_TEMP = Age ;
MPRINT(EM_DIAGRAM):   _TEMP = Age ;
1092702   +_LP0 = _LP0 + (   -0.01852391433447 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.01852391433447 * _TEMP);
1092703   +
1092704   +***  Effect: Frq ;
MPRINT(EM_DIAGRAM):   *** Effect: Frq ;
1092705   +_TEMP = Frq ;
MPRINT(EM_DIAGRAM):   _TEMP = Frq ;
1092706   +_LP0 = _LP0 + (   -0.05045980295154 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.05045980295154 * _TEMP);
1092707   +
1092708   +***  Effect: Income ;
MPRINT(EM_DIAGRAM):   *** Effect: Income ;
1092709   +_TEMP = Income ;
MPRINT(EM_DIAGRAM):   _TEMP = Income ;
1092710   +_LP0 = _LP0 + (     0.0000456777011 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.0000456777011 * _TEMP);
1092711   +
1092712   +***  Effect: Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Effect: Marital_Status ;
1092713   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1092714   +_LP0 = _LP0 + (    0.19470733105664) * _TEMP * _9_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.19470733105664) * _TEMP * _9_0;
1092715   +_LP0 = _LP0 + (   -0.66737124261283) * _TEMP * _9_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.66737124261283) * _TEMP * _9_1;
1092716   +_LP0 = _LP0 + (    0.47354458382979) * _TEMP * _9_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.47354458382979) * _TEMP * _9_2;
1092717   +_LP0 = _LP0 + (   -0.76484617755918) * _TEMP * _9_3;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.76484617755918) * _TEMP * _9_3;
1092718   +
1092719   +***  Effect: NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumDealsPurchases ;
1092720   +_TEMP = NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumDealsPurchases ;
1092721   +_LP0 = _LP0 + (    0.38683487817532 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.38683487817532 * _TEMP);
1092722   +
1092723   +***  Effect: NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   *** Effect: NumWebVisitsMonth ;
1092724   +_TEMP = NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   _TEMP = NumWebVisitsMonth ;
1092725   +_LP0 = _LP0 + (    0.30399773949187 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.30399773949187 * _TEMP);
1092726   +
1092727   +***  Effect: RMntFrq ;
MPRINT(EM_DIAGRAM):   *** Effect: RMntFrq ;
1092728   +_TEMP = RMntFrq ;
MPRINT(EM_DIAGRAM):   _TEMP = RMntFrq ;
1092729   +_LP0 = _LP0 + (    0.01122718563179 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.01122718563179 * _TEMP);
1092730   +
1092731   +***  Effect: Recency ;
MPRINT(EM_DIAGRAM):   *** Effect: Recency ;
1092732   +_TEMP = Recency ;
MPRINT(EM_DIAGRAM):   _TEMP = Recency ;
1092733   +_LP0 = _LP0 + (   -0.06483187112579 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.06483187112579 * _TEMP);
1092734   +
1092735   +***  Effect: Teenhome ;
MPRINT(EM_DIAGRAM):   *** Effect: Teenhome ;
1092736   +_TEMP = Teenhome ;
MPRINT(EM_DIAGRAM):   _TEMP = Teenhome ;
1092737   +_LP0 = _LP0 + (   -1.33693437973843 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.33693437973843 * _TEMP);
1092738   +
1092739   +*** Naive Posterior Probabilities;
MPRINT(EM_DIAGRAM):   *** Naive Posterior Probabilities;
1092740   +drop _MAXP _IY _P0 _P1;
MPRINT(EM_DIAGRAM):   drop _MAXP _IY _P0 _P1;
1092741   +_TEMP =    -3.46388239032287 + _LP0;
MPRINT(EM_DIAGRAM):   _TEMP = -3.46388239032287 + _LP0;
1092742   +if (_TEMP < 0) then do;
MPRINT(EM_DIAGRAM):   if (_TEMP < 0) then do;
1092743   +   _TEMP = exp(_TEMP);
MPRINT(EM_DIAGRAM):   _TEMP = exp(_TEMP);
1092744   +   _P0 = _TEMP / (1 + _TEMP);
MPRINT(EM_DIAGRAM):   _P0 = _TEMP / (1 + _TEMP);
1092745   +end;
MPRINT(EM_DIAGRAM):   end;
1092746   +else _P0 = 1 / (1 + exp(-_TEMP));
MPRINT(EM_DIAGRAM):   else _P0 = 1 / (1 + exp(-_TEMP));
1092747   +_P1 = 1.0 - _P0;
MPRINT(EM_DIAGRAM):   _P1 = 1.0 - _P0;
1092748   +
1092749   +REG12DR1:
1092750   +
1092751   +*** Residuals;
MPRINT(EM_DIAGRAM):   REG12DR1: *** Residuals;
1092752   +if (_Y = .) then do;
MPRINT(EM_DIAGRAM):   if (_Y = .) then do;
1092753   +   R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
1092754   +   R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
1092755   +end;
MPRINT(EM_DIAGRAM):   end;
1092756   +else do;
MPRINT(EM_DIAGRAM):   else do;
1092757   +    label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1092758   +    label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1092759   +   R_DepVar1 = - _P0;
MPRINT(EM_DIAGRAM):   R_DepVar1 = - _P0;
1092760   +   R_DepVar0 = - _P1;
MPRINT(EM_DIAGRAM):   R_DepVar0 = - _P1;
1092761   +   select( _Y );
MPRINT(EM_DIAGRAM):   select( _Y );
1092762   +      when (0)  R_DepVar1 = R_DepVar1 + 1;
MPRINT(EM_DIAGRAM):   when (0) R_DepVar1 = R_DepVar1 + 1;
1092763   +      when (1)  R_DepVar0 = R_DepVar0 + 1;
MPRINT(EM_DIAGRAM):   when (1) R_DepVar0 = R_DepVar0 + 1;
1092764   +   end;
MPRINT(EM_DIAGRAM):   end;
1092765   +end;
MPRINT(EM_DIAGRAM):   end;
1092766   +
1092767   +*** Posterior Probabilities and Predicted Level;
MPRINT(EM_DIAGRAM):   *** Posterior Probabilities and Predicted Level;
1092768   +label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1092769   +label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1092770   +P_DepVar1 = _P0;
MPRINT(EM_DIAGRAM):   P_DepVar1 = _P0;
1092771   +_MAXP = _P0;
MPRINT(EM_DIAGRAM):   _MAXP = _P0;
1092772   +_IY = 1;
MPRINT(EM_DIAGRAM):   _IY = 1;
1092773   +P_DepVar0 = _P1;
MPRINT(EM_DIAGRAM):   P_DepVar0 = _P1;
1092774   +if (_P1 >  _MAXP + 1E-8) then do;
MPRINT(EM_DIAGRAM):   if (_P1 > _MAXP + 1E-8) then do;
1092775   +   _MAXP = _P1;
MPRINT(EM_DIAGRAM):   _MAXP = _P1;
1092776   +   _IY = 2;
MPRINT(EM_DIAGRAM):   _IY = 2;
1092777   +end;
MPRINT(EM_DIAGRAM):   end;
1092778   +I_DepVar = REG12DRF[_IY];
MPRINT(EM_DIAGRAM):   I_DepVar = REG12DRF[_IY];
1092779   +U_DepVar = REG12DRU[_IY];
MPRINT(EM_DIAGRAM):   U_DepVar = REG12DRU[_IY];
1092780   +
1092781   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1092782   +***** end scoring code for regression;
MPRINT(EM_DIAGRAM):   ***** end scoring code for regression;
1092783   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1092784   +* Renaming variables for Reg12;
MPRINT(EM_DIAGRAM):   * Renaming variables for Reg12;
1092785   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1092786   +* Renaming Posterior variables for Reg12;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Reg12;
1092787   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1092788   +drop Reg12_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Reg12_P_DepVar1;
1092789   +Reg12_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Reg12_P_DepVar1 = P_DepVar1;
1092790   +drop Reg12_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Reg12_P_DepVar0;
1092791   +Reg12_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Reg12_P_DepVar0 = P_DepVar0;
1092792   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1092793   +* Renaming _WARN_ variable for Reg12;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Reg12;
1092794   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1092795   +length Reg12_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Reg12_WARN_ $4;
1092796   +drop Reg12_WARN_;
MPRINT(EM_DIAGRAM):   drop Reg12_WARN_;
1092797   +Reg12_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Reg12_WARN_ = _WARN_;
1092798   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1092799   +* Ensmbl12: Scoring Code of model 2 of 10;
MPRINT(EM_DIAGRAM):   * Ensmbl12: Scoring Code of model 2 of 10;
1092800   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1092801   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1092802   +* TOOL: Decision Tree;
MPRINT(EM_DIAGRAM):   * TOOL: Decision Tree;
1092803   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1092804   +* NODE: Tree6;
MPRINT(EM_DIAGRAM):   * NODE: Tree6;
1092805   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1092806   +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
1092807   +******             DECISION TREE SCORING CODE             ******;
MPRINT(EM_DIAGRAM):   ****** DECISION TREE SCORING CODE ******;
1092808   +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
1092809   +
1092810   +******         LENGTHS OF NEW CHARACTER VARIABLES         ******;
MPRINT(EM_DIAGRAM):   ****** LENGTHS OF NEW CHARACTER VARIABLES ******;
1092811   +LENGTH F_DepVar  $   12;
MPRINT(EM_DIAGRAM):   LENGTH F_DepVar $ 12;
1092812   +LENGTH I_DepVar  $   12;
MPRINT(EM_DIAGRAM):   LENGTH I_DepVar $ 12;
1092813   +LENGTH _WARN_  $    4;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $ 4;
1092814   +
1092815   +******              LABELS FOR NEW VARIABLES              ******;
MPRINT(EM_DIAGRAM):   ****** LABELS FOR NEW VARIABLES ******;
1092816   +LABEL _NODE_  = 'Node' ;
MPRINT(EM_DIAGRAM):   LABEL _NODE_ = 'Node' ;
1092817   +LABEL _LEAF_  = 'Leaf' ;
MPRINT(EM_DIAGRAM):   LABEL _LEAF_ = 'Leaf' ;
1092818   +LABEL P_DepVar0  = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   LABEL P_DepVar0 = 'Predicted: DepVar=0' ;
1092819   +LABEL P_DepVar1  = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   LABEL P_DepVar1 = 'Predicted: DepVar=1' ;
1092820   +LABEL Q_DepVar0  = 'Unadjusted P: DepVar=0' ;
MPRINT(EM_DIAGRAM):   LABEL Q_DepVar0 = 'Unadjusted P: DepVar=0' ;
1092821   +LABEL Q_DepVar1  = 'Unadjusted P: DepVar=1' ;
MPRINT(EM_DIAGRAM):   LABEL Q_DepVar1 = 'Unadjusted P: DepVar=1' ;
1092822   +LABEL V_DepVar0  = 'Validated: DepVar=0' ;
MPRINT(EM_DIAGRAM):   LABEL V_DepVar0 = 'Validated: DepVar=0' ;
1092823   +LABEL V_DepVar1  = 'Validated: DepVar=1' ;
MPRINT(EM_DIAGRAM):   LABEL V_DepVar1 = 'Validated: DepVar=1' ;
1092824   +LABEL R_DepVar0  = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   LABEL R_DepVar0 = 'Residual: DepVar=0' ;
1092825   +LABEL R_DepVar1  = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   LABEL R_DepVar1 = 'Residual: DepVar=1' ;
1092826   +LABEL F_DepVar  = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   LABEL F_DepVar = 'From: DepVar' ;
1092827   +LABEL I_DepVar  = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   LABEL I_DepVar = 'Into: DepVar' ;
1092828   +LABEL U_DepVar  = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   LABEL U_DepVar = 'Unnormalized Into: DepVar' ;
1092829   +LABEL _WARN_  = 'Warnings' ;
MPRINT(EM_DIAGRAM):   LABEL _WARN_ = 'Warnings' ;
1092830   +
1092831   +
1092832   +******      TEMPORARY VARIABLES FOR FORMATTED VALUES      ******;
MPRINT(EM_DIAGRAM):   ****** TEMPORARY VARIABLES FOR FORMATTED VALUES ******;
1092833   +LENGTH _ARBFMT_12 $     12; DROP _ARBFMT_12;
MPRINT(EM_DIAGRAM):   LENGTH _ARBFMT_12 $ 12;
MPRINT(EM_DIAGRAM):   DROP _ARBFMT_12;
1092834   +_ARBFMT_12 = ' '; /* Initialize to avoid warning. */
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = ' ';
1092835   +LENGTH _ARBFMT_8 $      8; DROP _ARBFMT_8;
MPRINT(EM_DIAGRAM):   LENGTH _ARBFMT_8 $ 8;
MPRINT(EM_DIAGRAM):   DROP _ARBFMT_8;
1092836   +_ARBFMT_8 = ' '; /* Initialize to avoid warning. */
MPRINT(EM_DIAGRAM):   _ARBFMT_8 = ' ';
1092837   +
1092838   +
1092839   +_ARBFMT_12 = PUT( DepVar , BEST.);
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( DepVar , BEST.);
1092840   + %DMNORMCP( _ARBFMT_12, F_DepVar );
MPRINT(DMNORMCP):   F_DepVar=dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1092841   +
1092842   +******             ASSIGN OBSERVATION TO NODE             ******;
MPRINT(EM_DIAGRAM):   ****** ASSIGN OBSERVATION TO NODE ******;
1092843   +IF  NOT MISSING(AcceptedCmpTotal ) AND
1092844   +                   0.5 <= AcceptedCmpTotal  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(AcceptedCmpTotal ) AND 0.5 <= AcceptedCmpTotal THEN DO;
1092845   +  IF  NOT MISSING(Recency ) AND
1092846   +    Recency  <                 38.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(Recency ) AND Recency < 38.5 THEN DO;
1092847   +    IF  NOT MISSING(AcceptedCmpTotal ) AND
1092848   +                       1.5 <= AcceptedCmpTotal  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(AcceptedCmpTotal ) AND 1.5 <= AcceptedCmpTotal THEN DO;
1092849   +      _NODE_  =                   13;
MPRINT(EM_DIAGRAM):   _NODE_ = 13;
1092850   +      _LEAF_  =                   11;
MPRINT(EM_DIAGRAM):   _LEAF_ = 11;
1092851   +      P_DepVar0  =     0.05263157894736;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.05263157894736;
1092852   +      P_DepVar1  =     0.94736842105263;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.94736842105263;
1092853   +      Q_DepVar0  =     0.05263157894736;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.05263157894736;
1092854   +      Q_DepVar1  =     0.94736842105263;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.94736842105263;
1092855   +      V_DepVar0  =                    0;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0;
1092856   +      V_DepVar1  =                    1;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 1;
1092857   +      I_DepVar  = '1' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '1' ;
1092858   +      U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1092859   +      END;
MPRINT(EM_DIAGRAM):   END;
1092860   +    ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1092861   +      _ARBFMT_8 = PUT( Marital_Status , $8.);
MPRINT(EM_DIAGRAM):   _ARBFMT_8 = PUT( Marital_Status , $8.);
1092862   +       %DMNORMIP( _ARBFMT_8);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
1092863   +      IF _ARBFMT_8 IN ('WIDOW' ,'DIVORCED' ,'SINGLE' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_8 IN ('WIDOW' ,'DIVORCED' ,'SINGLE' ) THEN DO;
1092864   +        _NODE_  =                   25;
MPRINT(EM_DIAGRAM):   _NODE_ = 25;
1092865   +        _LEAF_  =                   10;
MPRINT(EM_DIAGRAM):   _LEAF_ = 10;
1092866   +        P_DepVar0  =      0.2258064516129;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.2258064516129;
1092867   +        P_DepVar1  =     0.77419354838709;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.77419354838709;
1092868   +        Q_DepVar0  =      0.2258064516129;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.2258064516129;
1092869   +        Q_DepVar1  =     0.77419354838709;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.77419354838709;
1092870   +        V_DepVar0  =     0.41935483870967;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.41935483870967;
1092871   +        V_DepVar1  =     0.58064516129032;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.58064516129032;
1092872   +        I_DepVar  = '1' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '1' ;
1092873   +        U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1092874   +        END;
MPRINT(EM_DIAGRAM):   END;
1092875   +      ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1092876   +        IF  NOT MISSING(Kidhome ) AND
1092877   +                           0.5 <= Kidhome  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(Kidhome ) AND 0.5 <= Kidhome THEN DO;
1092878   +          _NODE_  =                   39;
MPRINT(EM_DIAGRAM):   _NODE_ = 39;
1092879   +          _LEAF_  =                    9;
MPRINT(EM_DIAGRAM):   _LEAF_ = 9;
1092880   +          P_DepVar0  =               0.3125;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.3125;
1092881   +          P_DepVar1  =               0.6875;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.6875;
1092882   +          Q_DepVar0  =               0.3125;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.3125;
1092883   +          Q_DepVar1  =               0.6875;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.6875;
1092884   +          V_DepVar0  =     0.23076923076923;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.23076923076923;
1092885   +          V_DepVar1  =     0.76923076923076;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.76923076923076;
1092886   +          I_DepVar  = '1' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '1' ;
1092887   +          U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1092888   +          END;
MPRINT(EM_DIAGRAM):   END;
1092889   +        ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1092890   +          IF  NOT MISSING(RFMstat ) AND
1092891   +                2448.04945054945 <= RFMstat  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(RFMstat ) AND 2448.04945054945 <= RFMstat THEN DO;
1092892   +            _NODE_  =                   51;
MPRINT(EM_DIAGRAM):   _NODE_ = 51;
1092893   +            _LEAF_  =                    8;
MPRINT(EM_DIAGRAM):   _LEAF_ = 8;
1092894   +            P_DepVar0  =     0.23529411764705;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.23529411764705;
1092895   +            P_DepVar1  =     0.76470588235294;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.76470588235294;
1092896   +            Q_DepVar0  =     0.23529411764705;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.23529411764705;
1092897   +            Q_DepVar1  =     0.76470588235294;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.76470588235294;
1092898   +            V_DepVar0  =     0.42857142857142;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.42857142857142;
1092899   +            V_DepVar1  =     0.57142857142857;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.57142857142857;
1092900   +            I_DepVar  = '1' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '1' ;
1092901   +            U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1092902   +            END;
MPRINT(EM_DIAGRAM):   END;
1092903   +          ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1092904   +            _NODE_  =                   50;
MPRINT(EM_DIAGRAM):   _NODE_ = 50;
1092905   +            _LEAF_  =                    7;
MPRINT(EM_DIAGRAM):   _LEAF_ = 7;
1092906   +            P_DepVar0  =      0.8076923076923;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.8076923076923;
1092907   +            P_DepVar1  =     0.19230769230769;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.19230769230769;
1092908   +            Q_DepVar0  =      0.8076923076923;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.8076923076923;
1092909   +            Q_DepVar1  =     0.19230769230769;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.19230769230769;
1092910   +            V_DepVar0  =     0.78260869565217;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.78260869565217;
1092911   +            V_DepVar1  =     0.21739130434782;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.21739130434782;
1092912   +            I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
1092913   +            U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1092914   +            END;
MPRINT(EM_DIAGRAM):   END;
1092915   +          END;
MPRINT(EM_DIAGRAM):   END;
1092916   +        END;
MPRINT(EM_DIAGRAM):   END;
1092917   +      END;
MPRINT(EM_DIAGRAM):   END;
1092918   +    END;
MPRINT(EM_DIAGRAM):   END;
1092919   +  ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1092920   +    IF  NOT MISSING(AcceptedCmpTotal ) AND
1092921   +                       2.5 <= AcceptedCmpTotal  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(AcceptedCmpTotal ) AND 2.5 <= AcceptedCmpTotal THEN DO;
1092922   +      _NODE_  =                   15;
MPRINT(EM_DIAGRAM):   _NODE_ = 15;
1092923   +      _LEAF_  =                   13;
MPRINT(EM_DIAGRAM):   _LEAF_ = 13;
1092924   +      P_DepVar0  =      0.3103448275862;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.3103448275862;
1092925   +      P_DepVar1  =     0.68965517241379;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.68965517241379;
1092926   +      Q_DepVar0  =      0.3103448275862;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.3103448275862;
1092927   +      Q_DepVar1  =     0.68965517241379;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.68965517241379;
1092928   +      V_DepVar0  =     0.33333333333333;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.33333333333333;
1092929   +      V_DepVar1  =     0.66666666666666;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.66666666666666;
1092930   +      I_DepVar  = '1' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '1' ;
1092931   +      U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1092932   +      END;
MPRINT(EM_DIAGRAM):   END;
1092933   +    ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1092934   +      _NODE_  =                   14;
MPRINT(EM_DIAGRAM):   _NODE_ = 14;
1092935   +      _LEAF_  =                   12;
MPRINT(EM_DIAGRAM):   _LEAF_ = 12;
1092936   +      P_DepVar0  =     0.82562277580071;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.82562277580071;
1092937   +      P_DepVar1  =     0.17437722419928;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.17437722419928;
1092938   +      Q_DepVar0  =     0.82562277580071;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.82562277580071;
1092939   +      Q_DepVar1  =     0.17437722419928;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.17437722419928;
1092940   +      V_DepVar0  =     0.81818181818181;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.81818181818181;
1092941   +      V_DepVar1  =     0.18181818181818;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.18181818181818;
1092942   +      I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
1092943   +      U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1092944   +      END;
MPRINT(EM_DIAGRAM):   END;
1092945   +    END;
MPRINT(EM_DIAGRAM):   END;
1092946   +  END;
MPRINT(EM_DIAGRAM):   END;
1092947   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1092948   +  IF  NOT MISSING(Recency ) AND
1092949   +    Recency  <                 32.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(Recency ) AND Recency < 32.5 THEN DO;
1092950   +    IF  NOT MISSING(NumDealsPurchases ) AND
1092951   +                       5.5 <= NumDealsPurchases  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(NumDealsPurchases ) AND 5.5 <= NumDealsPurchases THEN DO;
1092952   +      IF  NOT MISSING(Frq ) AND
1092953   +        Frq  <                 13.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(Frq ) AND Frq < 13.5 THEN DO;
1092954   +        _NODE_  =                   18;
MPRINT(EM_DIAGRAM):   _NODE_ = 18;
1092955   +        _LEAF_  =                    3;
MPRINT(EM_DIAGRAM):   _LEAF_ = 3;
1092956   +        P_DepVar0  =     0.06666666666666;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.06666666666666;
1092957   +        P_DepVar1  =     0.93333333333333;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.93333333333333;
1092958   +        Q_DepVar0  =     0.06666666666666;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.06666666666666;
1092959   +        Q_DepVar1  =     0.93333333333333;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.93333333333333;
1092960   +        V_DepVar0  =                  0.2;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.2;
1092961   +        V_DepVar1  =                  0.8;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.8;
1092962   +        I_DepVar  = '1' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '1' ;
1092963   +        U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1092964   +        END;
MPRINT(EM_DIAGRAM):   END;
1092965   +      ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1092966   +        IF  NOT MISSING(RFMstat ) AND
1092967   +              1513.63146551724 <= RFMstat  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(RFMstat ) AND 1513.63146551724 <= RFMstat THEN DO;
1092968   +          _NODE_  =                   35;
MPRINT(EM_DIAGRAM):   _NODE_ = 35;
1092969   +          _LEAF_  =                    5;
MPRINT(EM_DIAGRAM):   _LEAF_ = 5;
1092970   +          P_DepVar0  =     0.16666666666666;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.16666666666666;
1092971   +          P_DepVar1  =     0.83333333333333;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.83333333333333;
1092972   +          Q_DepVar0  =     0.16666666666666;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.16666666666666;
1092973   +          Q_DepVar1  =     0.83333333333333;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.83333333333333;
1092974   +          V_DepVar0  =                 0.25;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.25;
1092975   +          V_DepVar1  =                 0.75;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.75;
1092976   +          I_DepVar  = '1' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '1' ;
1092977   +          U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1092978   +          END;
MPRINT(EM_DIAGRAM):   END;
1092979   +        ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1092980   +          _NODE_  =                   34;
MPRINT(EM_DIAGRAM):   _NODE_ = 34;
1092981   +          _LEAF_  =                    4;
MPRINT(EM_DIAGRAM):   _LEAF_ = 4;
1092982   +          P_DepVar0  =                0.875;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.875;
1092983   +          P_DepVar1  =                0.125;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.125;
1092984   +          Q_DepVar0  =                0.875;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.875;
1092985   +          Q_DepVar1  =                0.125;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.125;
1092986   +          V_DepVar0  =                  0.7;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.7;
1092987   +          V_DepVar1  =                  0.3;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.3;
1092988   +          I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
1092989   +          U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1092990   +          END;
MPRINT(EM_DIAGRAM):   END;
1092991   +        END;
MPRINT(EM_DIAGRAM):   END;
1092992   +      END;
MPRINT(EM_DIAGRAM):   END;
1092993   +    ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1092994   +      IF  NOT MISSING(RFMstat ) AND
1092995   +            5150.39285714285 <= RFMstat  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(RFMstat ) AND 5150.39285714285 <= RFMstat THEN DO;
1092996   +        _NODE_  =                   17;
MPRINT(EM_DIAGRAM):   _NODE_ = 17;
1092997   +        _LEAF_  =                    2;
MPRINT(EM_DIAGRAM):   _LEAF_ = 2;
1092998   +        P_DepVar0  =     0.38888888888888;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.38888888888888;
1092999   +        P_DepVar1  =     0.61111111111111;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.61111111111111;
1093000   +        Q_DepVar0  =     0.38888888888888;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.38888888888888;
1093001   +        Q_DepVar1  =     0.61111111111111;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.61111111111111;
1093002   +        V_DepVar0  =     0.41666666666666;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.41666666666666;
1093003   +        V_DepVar1  =     0.58333333333333;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.58333333333333;
1093004   +        I_DepVar  = '1' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '1' ;
1093005   +        U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1093006   +        END;
MPRINT(EM_DIAGRAM):   END;
1093007   +      ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1093008   +        _NODE_  =                   16;
MPRINT(EM_DIAGRAM):   _NODE_ = 16;
1093009   +        _LEAF_  =                    1;
MPRINT(EM_DIAGRAM):   _LEAF_ = 1;
1093010   +        P_DepVar0  =     0.84547069271758;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84547069271758;
1093011   +        P_DepVar1  =     0.15452930728241;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15452930728241;
1093012   +        Q_DepVar0  =     0.84547069271758;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.84547069271758;
1093013   +        Q_DepVar1  =     0.15452930728241;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.15452930728241;
1093014   +        V_DepVar0  =     0.81673306772908;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.81673306772908;
1093015   +        V_DepVar1  =     0.18326693227091;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.18326693227091;
1093016   +        I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
1093017   +        U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1093018   +        END;
MPRINT(EM_DIAGRAM):   END;
1093019   +      END;
MPRINT(EM_DIAGRAM):   END;
1093020   +    END;
MPRINT(EM_DIAGRAM):   END;
1093021   +  ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1093022   +    _NODE_  =                    5;
MPRINT(EM_DIAGRAM):   _NODE_ = 5;
1093023   +    _LEAF_  =                    6;
MPRINT(EM_DIAGRAM):   _LEAF_ = 6;
1093024   +    P_DepVar0  =     0.98042414355628;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.98042414355628;
1093025   +    P_DepVar1  =     0.01957585644371;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.01957585644371;
1093026   +    Q_DepVar0  =     0.98042414355628;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.98042414355628;
1093027   +    Q_DepVar1  =     0.01957585644371;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.01957585644371;
1093028   +    V_DepVar0  =     0.98795180722891;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.98795180722891;
1093029   +    V_DepVar1  =     0.01204819277108;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.01204819277108;
1093030   +    I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
1093031   +    U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1093032   +    END;
MPRINT(EM_DIAGRAM):   END;
1093033   +  END;
MPRINT(EM_DIAGRAM):   END;
1093034   +
1093035   +*****  RESIDUALS R_ *************;
MPRINT(EM_DIAGRAM):   ***** RESIDUALS R_ *************;
1093036   +IF  F_DepVar  NE '0'
1093037   +AND F_DepVar  NE '1'  THEN DO;
MPRINT(EM_DIAGRAM):   IF F_DepVar NE '0' AND F_DepVar NE '1' THEN DO;
1093038   +        R_DepVar0  = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
1093039   +        R_DepVar1  = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
1093040   + END;
MPRINT(EM_DIAGRAM):   END;
1093041   + ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1093042   +       R_DepVar0  =  -P_DepVar0 ;
MPRINT(EM_DIAGRAM):   R_DepVar0 = -P_DepVar0 ;
1093043   +       R_DepVar1  =  -P_DepVar1 ;
MPRINT(EM_DIAGRAM):   R_DepVar1 = -P_DepVar1 ;
1093044   +       SELECT( F_DepVar  );
MPRINT(EM_DIAGRAM):   SELECT( F_DepVar );
1093045   +          WHEN( '0'  ) R_DepVar0  = R_DepVar0  +1;
MPRINT(EM_DIAGRAM):   WHEN( '0' ) R_DepVar0 = R_DepVar0 +1;
1093046   +          WHEN( '1'  ) R_DepVar1  = R_DepVar1  +1;
MPRINT(EM_DIAGRAM):   WHEN( '1' ) R_DepVar1 = R_DepVar1 +1;
1093047   +       END;
MPRINT(EM_DIAGRAM):   END;
1093048   + END;
MPRINT(EM_DIAGRAM):   END;
1093049   +
1093050   +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
1093051   +******          END OF DECISION TREE SCORING CODE         ******;
MPRINT(EM_DIAGRAM):   ****** END OF DECISION TREE SCORING CODE ******;
1093052   +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
1093053   +drop _LEAF_;
MPRINT(EM_DIAGRAM):   drop _LEAF_;
1093054   +* Renaming variables for Tree6;
MPRINT(EM_DIAGRAM):   * Renaming variables for Tree6;
1093055   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1093056   +* Renaming Posterior variables for Tree6;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Tree6;
1093057   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1093058   +drop Tree6_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Tree6_P_DepVar1;
1093059   +Tree6_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Tree6_P_DepVar1 = P_DepVar1;
1093060   +drop Tree6_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Tree6_P_DepVar0;
1093061   +Tree6_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Tree6_P_DepVar0 = P_DepVar0;
1093062   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1093063   +* Renaming _WARN_ variable for Tree6;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Tree6;
1093064   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1093065   +length Tree6_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Tree6_WARN_ $4;
1093066   +drop Tree6_WARN_;
MPRINT(EM_DIAGRAM):   drop Tree6_WARN_;
1093067   +Tree6_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Tree6_WARN_ = _WARN_;
1093068   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1093069   +* Ensmbl12: Scoring Code of model 3 of 10;
MPRINT(EM_DIAGRAM):   * Ensmbl12: Scoring Code of model 3 of 10;
1093070   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1093071   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1093072   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
1093073   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1093074   +* NODE: Neural39;
MPRINT(EM_DIAGRAM):   * NODE: Neural39;
1093075   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1093076   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1093077   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1093078   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1093079   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1093080   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1093081   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1093082   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1093083   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1093084   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1093085   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1093086   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1093087   +LENGTH _WARN_ $4
1093088   +      F_DepVar  $ 12
1093089   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1093090   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1093091   +
1093092   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1093093   +
1093094   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1093095   +
1093096   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1093097   +
1093098   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1093099   +
1093100   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1093101   +
1093102   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1093103   +
1093104   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1093105   +
1093106   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1093107   +
1093108   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1093109   +
1093110   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1093111   +
1093112   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1093113   +
1093114   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1093115   +
1093116   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1093117   +
1093118   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1093119   +
1093120   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1093121   +
1093122   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1093123   +
1093124   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1093125   +
1093126   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1093127   +
1093128   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1093129   +
1093130   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1093131   +
1093132   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1093133   +
1093134   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1093135   +
1093136   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1093137   +
1093138   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1093139   +
1093140   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1093141   +
1093142   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1093143   +
1093144   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1093145   +
1093146   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1093147   +
1093148   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1093149   +
1093150   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1093151   +
1093152   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1093153   +
1093154   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1093155   +
1093156   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1093157   +
1093158   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1093159   +
1093160   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1093161   +
1093162   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1093163   +
1093164   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1093165   +
1093166   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1093167   +
1093168   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1093169   +
1093170   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1093171   +
1093172   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1093173   +
1093174   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1093175   +
1093176   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1093177   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1093178   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1093179   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1093180   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1093181   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1093182   +end;
MPRINT(EM_DIAGRAM):   end;
1093183   +else do;
MPRINT(EM_DIAGRAM):   else do;
1093184   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1093185   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1093186   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1093187   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1093188   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1093189   +   end;
MPRINT(EM_DIAGRAM):   end;
1093190   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1093191   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1093192   +   end;
MPRINT(EM_DIAGRAM):   end;
1093193   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1093194   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1093195   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1093196   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1093197   +   end;
MPRINT(EM_DIAGRAM):   end;
1093198   +end;
MPRINT(EM_DIAGRAM):   end;
1093199   +
1093200   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1093201   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1093202   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1093203   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1093204   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1093205   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1093206   +end;
MPRINT(EM_DIAGRAM):   end;
1093207   +else do;
MPRINT(EM_DIAGRAM):   else do;
1093208   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1093209   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1093210   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1093211   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1093212   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1093213   +   end;
MPRINT(EM_DIAGRAM):   end;
1093214   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1093215   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1093216   +   end;
MPRINT(EM_DIAGRAM):   end;
1093217   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1093218   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1093219   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1093220   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1093221   +   end;
MPRINT(EM_DIAGRAM):   end;
1093222   +end;
MPRINT(EM_DIAGRAM):   end;
1093223   +
1093224   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1093225   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1093226   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1093227   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1093228   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1093229   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1093230   +end;
MPRINT(EM_DIAGRAM):   end;
1093231   +else do;
MPRINT(EM_DIAGRAM):   else do;
1093232   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1093233   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1093234   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1093235   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1093236   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1093237   +   end;
MPRINT(EM_DIAGRAM):   end;
1093238   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1093239   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1093240   +   end;
MPRINT(EM_DIAGRAM):   end;
1093241   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1093242   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1093243   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1093244   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1093245   +   end;
MPRINT(EM_DIAGRAM):   end;
1093246   +end;
MPRINT(EM_DIAGRAM):   end;
1093247   +
1093248   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1093249   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1093250   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1093251   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1093252   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1093253   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1093254   +end;
MPRINT(EM_DIAGRAM):   end;
1093255   +else do;
MPRINT(EM_DIAGRAM):   else do;
1093256   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1093257   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1093258   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1093259   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1093260   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1093261   +   end;
MPRINT(EM_DIAGRAM):   end;
1093262   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1093263   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1093264   +   end;
MPRINT(EM_DIAGRAM):   end;
1093265   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1093266   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1093267   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1093268   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1093269   +   end;
MPRINT(EM_DIAGRAM):   end;
1093270   +end;
MPRINT(EM_DIAGRAM):   end;
1093271   +
1093272   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1093273   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1093274   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1093275   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1093276   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1093277   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1093278   +end;
MPRINT(EM_DIAGRAM):   end;
1093279   +else do;
MPRINT(EM_DIAGRAM):   else do;
1093280   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1093281   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1093282   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1093283   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1093284   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1093285   +   end;
MPRINT(EM_DIAGRAM):   end;
1093286   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1093287   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1093288   +   end;
MPRINT(EM_DIAGRAM):   end;
1093289   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1093290   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1093291   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1093292   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1093293   +   end;
MPRINT(EM_DIAGRAM):   end;
1093294   +end;
MPRINT(EM_DIAGRAM):   end;
1093295   +
1093296   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1093297   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1093298   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1093299   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1093300   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1093301   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1093302   +end;
MPRINT(EM_DIAGRAM):   end;
1093303   +else do;
MPRINT(EM_DIAGRAM):   else do;
1093304   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1093305   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1093306   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1093307   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1093308   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1093309   +   end;
MPRINT(EM_DIAGRAM):   end;
1093310   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1093311   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1093312   +   end;
MPRINT(EM_DIAGRAM):   end;
1093313   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1093314   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1093315   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1093316   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1093317   +   end;
MPRINT(EM_DIAGRAM):   end;
1093318   +end;
MPRINT(EM_DIAGRAM):   end;
1093319   +
1093320   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1093321   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1093322   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1093323   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1093324   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1093325   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1093326   +end;
MPRINT(EM_DIAGRAM):   end;
1093327   +else do;
MPRINT(EM_DIAGRAM):   else do;
1093328   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1093329   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1093330   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1093331   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1093332   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1093333   +   end;
MPRINT(EM_DIAGRAM):   end;
1093334   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1093335   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1093336   +   end;
MPRINT(EM_DIAGRAM):   end;
1093337   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1093338   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1093339   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1093340   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1093341   +   end;
MPRINT(EM_DIAGRAM):   end;
1093342   +end;
MPRINT(EM_DIAGRAM):   end;
1093343   +
1093344   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1093345   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
1093346   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1093347   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1093348   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1093349   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1093350   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1093351   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1093352   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1093353   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1093354   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1093355   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1093356   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1093357   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1093358   +end;
MPRINT(EM_DIAGRAM):   end;
1093359   +else do;
MPRINT(EM_DIAGRAM):   else do;
1093360   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1093361   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1093362   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1093363   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1093364   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1093365   +   end;
MPRINT(EM_DIAGRAM):   end;
1093366   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1093367   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1093368   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1093369   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1093370   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1093371   +   end;
MPRINT(EM_DIAGRAM):   end;
1093372   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1093373   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1093374   +   end;
MPRINT(EM_DIAGRAM):   end;
1093375   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1093376   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1093377   +   end;
MPRINT(EM_DIAGRAM):   end;
1093378   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1093379   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1093380   +   end;
MPRINT(EM_DIAGRAM):   end;
1093381   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1093382   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1093383   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1093384   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1093385   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1093386   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1093387   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1093388   +   end;
MPRINT(EM_DIAGRAM):   end;
1093389   +end;
MPRINT(EM_DIAGRAM):   end;
1093390   +
1093391   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1093392   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1093393   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
1093394   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1093395   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1093396   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1093397   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1093398   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1093399   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1093400   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1093401   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1093402   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1093403   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1093404   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1093405   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1093406   +end;
MPRINT(EM_DIAGRAM):   end;
1093407   +else do;
MPRINT(EM_DIAGRAM):   else do;
1093408   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1093409   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1093410   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1093411   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1093412   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1093413   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1093414   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1093415   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1093416   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1093417   +         end;
MPRINT(EM_DIAGRAM):   end;
1093418   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1093419   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1093420   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1093421   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1093422   +            end;
MPRINT(EM_DIAGRAM):   end;
1093423   +         end;
MPRINT(EM_DIAGRAM):   end;
1093424   +      end;
MPRINT(EM_DIAGRAM):   end;
1093425   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1093426   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1093427   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1093428   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1093429   +         end;
MPRINT(EM_DIAGRAM):   end;
1093430   +      end;
MPRINT(EM_DIAGRAM):   end;
1093431   +   end;
MPRINT(EM_DIAGRAM):   end;
1093432   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1093433   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1093434   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1093435   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1093436   +      end;
MPRINT(EM_DIAGRAM):   end;
1093437   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1093438   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1093439   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1093440   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1093441   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1093442   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1093443   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1093444   +         end;
MPRINT(EM_DIAGRAM):   end;
1093445   +      end;
MPRINT(EM_DIAGRAM):   end;
1093446   +   end;
MPRINT(EM_DIAGRAM):   end;
1093447   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1093448   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1093449   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1093450   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1093451   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1093452   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1093453   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1093454   +   end;
MPRINT(EM_DIAGRAM):   end;
1093455   +end;
MPRINT(EM_DIAGRAM):   end;
1093456   +
1093457   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1093458   +*** Checking missing input Interval
1093459   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1093460   +
1093461   +IF NMISS(
1093462   +   AcceptedCmpTotal ,
1093463   +   Age ,
1093464   +   Frq ,
1093465   +   Income ,
1093466   +   Kidhome ,
1093467   +   MntFishProducts ,
1093468   +   MntFruits ,
1093469   +   MntGoldProds ,
1093470   +   MntSweetProducts ,
1093471   +   MonthsAsCustomer ,
1093472   +   NumDealsPurchases ,
1093473   +   NumWebVisitsMonth ,
1093474   +   RFMstat ,
1093475   +   RMntFrq ,
1093476   +   Recency ,
1093477   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , 
MntFishProducts , MntFruits , MntGoldProds , MntSweetProducts , MonthsAsCustomer , 
NumDealsPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , Teenhome ) THEN DO;
1093478   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1093479   +
1093480   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1093481   +END;
MPRINT(EM_DIAGRAM):   END;
1093482   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1093483   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1093484   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1093485   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1093486   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1093487   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1093488   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1093489   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1093490   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1093491   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1093492   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1093493   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1093494   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1093495   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1093496   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1093497   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1093498   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1093499   +   S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
1093500   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
1093501   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1093502   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1093503   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1093504   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1093505   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1093506   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1093507   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1093508   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1093509   +END;
MPRINT(EM_DIAGRAM):   END;
1093510   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1093511   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1093512   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1093513   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1093514   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1093515   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1093516   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1093517   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1093518   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1093519   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1093520   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1093521   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1093522   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1093523   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1093524   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1093525   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1093526   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1093527   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1093528   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1093529   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1093530   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1093531   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1093532   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1093533   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1093534   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1093535   +   ELSE S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
1093536   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
1093537   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1093538   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1093539   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1093540   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1093541   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1093542   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1093543   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1093544   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1093545   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1093546   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1093547   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1093548   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1093549   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1093550   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1093551   +END;
MPRINT(EM_DIAGRAM):   END;
1093552   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1093553   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1093554   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1093555   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1093556   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1093557   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1093558   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1093559   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1093560   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1093561   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1093562   +   H11  =    -0.61879380889194 * S_AcceptedCmpTotal  +    -0.09795242603477 *
1093563   +        S_Age  +     0.36103250822255 * S_Frq  +     0.08899052794394 *
1093564   +        S_Income  +     0.25564250606874 * S_Kidhome
1093565   +          +    -0.02786629817134 * S_MntFishProducts
1093566   +          +     0.13529614728112 * S_MntFruits  +     0.19622442891821 *
1093567   +        S_MntGoldProds  +     0.14107929478218 * S_MntSweetProducts
1093568   +          +    -0.29199173107007 * S_MonthsAsCustomer
1093569   +          +    -0.59759788962473 * S_NumDealsPurchases
1093570   +          +     -0.3788422274482 * S_NumWebVisitsMonth
1093571   +          +    -0.06743318112874 * S_RFMstat  +      0.2833264895355 *
1093572   +        S_RMntFrq  +     0.70854972350771 * S_Recency
1093573   +          +     0.11936327488967 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = -0.61879380889194 * S_AcceptedCmpTotal + -0.09795242603477 * S_Age 
+ 0.36103250822255 * S_Frq + 0.08899052794394 * S_Income + 0.25564250606874 * S_Kidhome + 
-0.02786629817134 * S_MntFishProducts + 0.13529614728112 * S_MntFruits + 0.19622442891821 * 
S_MntGoldProds + 0.14107929478218 * S_MntSweetProducts + -0.29199173107007 * 
S_MonthsAsCustomer + -0.59759788962473 * S_NumDealsPurchases + -0.3788422274482 * 
S_NumWebVisitsMonth + -0.06743318112874 * S_RFMstat + 0.2833264895355 * S_RMntFrq + 
0.70854972350771 * S_Recency + 0.11936327488967 * S_Teenhome ;
1093574   +   H12  =    -0.18766983828727 * S_AcceptedCmpTotal  +       0.517042669033 *
1093575   +        S_Age  +     1.02262972068559 * S_Frq  +     0.38007459198406 *
1093576   +        S_Income  +     0.07328887474153 * S_Kidhome
1093577   +          +    -0.23284570213322 * S_MntFishProducts
1093578   +          +     0.02838864374624 * S_MntFruits  +    -0.07574618602845 *
1093579   +        S_MntGoldProds  +    -0.41131707239504 * S_MntSweetProducts
1093580   +          +     0.29669594858185 * S_MonthsAsCustomer
1093581   +          +    -0.51220833966596 * S_NumDealsPurchases
1093582   +          +    -0.72293271444385 * S_NumWebVisitsMonth
1093583   +          +    -0.20562458645044 * S_RFMstat  +    -0.52495075768839 *
1093584   +        S_RMntFrq  +      1.0795232419354 * S_Recency
1093585   +          +    -0.18997953891579 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -0.18766983828727 * S_AcceptedCmpTotal + 0.517042669033 * S_Age + 
1.02262972068559 * S_Frq + 0.38007459198406 * S_Income + 0.07328887474153 * S_Kidhome + 
-0.23284570213322 * S_MntFishProducts + 0.02838864374624 * S_MntFruits + -0.07574618602845 * 
S_MntGoldProds + -0.41131707239504 * S_MntSweetProducts + 0.29669594858185 * 
S_MonthsAsCustomer + -0.51220833966596 * S_NumDealsPurchases + -0.72293271444385 * 
S_NumWebVisitsMonth + -0.20562458645044 * S_RFMstat + -0.52495075768839 * S_RMntFrq + 
1.0795232419354 * S_Recency + -0.18997953891579 * S_Teenhome ;
1093586   +   H13  =    -0.49159501579895 * S_AcceptedCmpTotal  +    -0.16293971978781 *
1093587   +        S_Age  +    -0.02977525702894 * S_Frq  +    -0.78728568889664 *
1093588   +        S_Income  +    -0.68209910558389 * S_Kidhome
1093589   +          +     0.23366174254474 * S_MntFishProducts
1093590   +          +    -0.08764688950673 * S_MntFruits  +    -0.38895649975347 *
1093591   +        S_MntGoldProds  +     0.02270546080284 * S_MntSweetProducts
1093592   +          +    -0.05759532204753 * S_MonthsAsCustomer
1093593   +          +    -0.30170163047261 * S_NumDealsPurchases
1093594   +          +    -0.57711437834603 * S_NumWebVisitsMonth
1093595   +          +    -0.09851659878757 * S_RFMstat  +    -0.20102310575519 *
1093596   +        S_RMntFrq  +     0.80994896921796 * S_Recency
1093597   +          +     0.32766576826101 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = -0.49159501579895 * S_AcceptedCmpTotal + -0.16293971978781 * S_Age 
+ -0.02977525702894 * S_Frq + -0.78728568889664 * S_Income + -0.68209910558389 * S_Kidhome + 
0.23366174254474 * S_MntFishProducts + -0.08764688950673 * S_MntFruits + -0.38895649975347 * 
S_MntGoldProds + 0.02270546080284 * S_MntSweetProducts + -0.05759532204753 * 
S_MonthsAsCustomer + -0.30170163047261 * S_NumDealsPurchases + -0.57711437834603 * 
S_NumWebVisitsMonth + -0.09851659878757 * S_RFMstat + -0.20102310575519 * S_RMntFrq + 
0.80994896921796 * S_Recency + 0.32766576826101 * S_Teenhome ;
1093598   +   H14  =    -0.11122937165995 * S_AcceptedCmpTotal  +     0.06859829254058 *
1093599   +        S_Age  +    -0.60966071706708 * S_Frq  +    -1.00949681880427 *
1093600   +        S_Income  +     0.67855138873039 * S_Kidhome
1093601   +          +    -0.05297743313476 * S_MntFishProducts
1093602   +          +     0.21613302257797 * S_MntFruits  +     0.03843790921347 *
1093603   +        S_MntGoldProds  +     0.25543771093558 * S_MntSweetProducts
1093604   +          +    -0.15817861274553 * S_MonthsAsCustomer
1093605   +          +     0.25133066233725 * S_NumDealsPurchases
1093606   +          +     0.08802636187267 * S_NumWebVisitsMonth
1093607   +          +    -0.04637957487976 * S_RFMstat  +    -0.31656429052936 *
1093608   +        S_RMntFrq  +      0.7228272496527 * S_Recency
1093609   +          +     0.58629319995218 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = -0.11122937165995 * S_AcceptedCmpTotal + 0.06859829254058 * S_Age 
+ -0.60966071706708 * S_Frq + -1.00949681880427 * S_Income + 0.67855138873039 * S_Kidhome + 
-0.05297743313476 * S_MntFishProducts + 0.21613302257797 * S_MntFruits + 0.03843790921347 * 
S_MntGoldProds + 0.25543771093558 * S_MntSweetProducts + -0.15817861274553 * 
S_MonthsAsCustomer + 0.25133066233725 * S_NumDealsPurchases + 0.08802636187267 * 
S_NumWebVisitsMonth + -0.04637957487976 * S_RFMstat + -0.31656429052936 * S_RMntFrq + 
0.7228272496527 * S_Recency + 0.58629319995218 * S_Teenhome ;
1093610   +   H11  = H11  +     0.23190135069025 * AcceptedCmp10
1093611   +          +     0.04686213078143 * AcceptedCmp20  +     0.17662818955575 *
1093612   +        AcceptedCmp30  +     0.03498741067378 * AcceptedCmp40
1093613   +          +     0.61042747626768 * AcceptedCmp50  +    -0.12810871081838 *
1093614   +        Complain0  +     0.03047400476944 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.23190135069025 * AcceptedCmp10 + 0.04686213078143 * 
AcceptedCmp20 + 0.17662818955575 * AcceptedCmp30 + 0.03498741067378 * AcceptedCmp40 + 
0.61042747626768 * AcceptedCmp50 + -0.12810871081838 * Complain0 + 0.03047400476944 * 
HigherEducationBinary0 ;
1093615   +   H12  = H12  +     0.53873807658752 * AcceptedCmp10
1093616   +          +     0.29840055428915 * AcceptedCmp20  +     0.52740574468702 *
1093617   +        AcceptedCmp30  +     0.27242279016627 * AcceptedCmp40
1093618   +          +     0.07126269343217 * AcceptedCmp50  +    -0.14631570192286 *
1093619   +        Complain0  +     0.16629352334811 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.53873807658752 * AcceptedCmp10 + 0.29840055428915 * 
AcceptedCmp20 + 0.52740574468702 * AcceptedCmp30 + 0.27242279016627 * AcceptedCmp40 + 
0.07126269343217 * AcceptedCmp50 + -0.14631570192286 * Complain0 + 0.16629352334811 * 
HigherEducationBinary0 ;
1093620   +   H13  = H13  +     0.09118941740461 * AcceptedCmp10
1093621   +          +     0.04178457860358 * AcceptedCmp20  +     0.48487479920901 *
1093622   +        AcceptedCmp30  +    -0.80910928087974 * AcceptedCmp40
1093623   +          +      0.4667831985075 * AcceptedCmp50  +    -0.29601289494349 *
1093624   +        Complain0  +     0.10690006738431 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.09118941740461 * AcceptedCmp10 + 0.04178457860358 * 
AcceptedCmp20 + 0.48487479920901 * AcceptedCmp30 + -0.80910928087974 * AcceptedCmp40 + 
0.4667831985075 * AcceptedCmp50 + -0.29601289494349 * Complain0 + 0.10690006738431 * 
HigherEducationBinary0 ;
1093625   +   H14  = H14  +     0.21382858049752 * AcceptedCmp10
1093626   +          +     0.12652392800261 * AcceptedCmp20  +     0.30403608200617 *
1093627   +        AcceptedCmp30  +     0.51966382166521 * AcceptedCmp40
1093628   +          +    -0.14518145187533 * AcceptedCmp50  +     0.27045295957801 *
1093629   +        Complain0  +    -0.49307163723406 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.21382858049752 * AcceptedCmp10 + 0.12652392800261 * 
AcceptedCmp20 + 0.30403608200617 * AcceptedCmp30 + 0.51966382166521 * AcceptedCmp40 + 
-0.14518145187533 * AcceptedCmp50 + 0.27045295957801 * Complain0 + -0.49307163723406 * 
HigherEducationBinary0 ;
1093630   +   H11  = H11  +    -0.15292649085097 * Education2n_Cycle
1093631   +          +     0.00016605452926 * EducationBasic  +    -0.04208965271063 *
1093632   +        EducationGraduation  +    -0.05433922630608 * EducationMaster
1093633   +          +      0.0528075343138 * Marital_StatusDivorced
1093634   +          +    -0.08269844855231 * Marital_StatusMarried
1093635   +          +     0.43411839786169 * Marital_StatusSingle
1093636   +          +     0.38324605489754 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.15292649085097 * Education2n_Cycle + 0.00016605452926 * 
EducationBasic + -0.04208965271063 * EducationGraduation + -0.05433922630608 * EducationMaster 
+ 0.0528075343138 * Marital_StatusDivorced + -0.08269844855231 * Marital_StatusMarried + 
0.43411839786169 * Marital_StatusSingle + 0.38324605489754 * Marital_StatusTogether ;
1093637   +   H12  = H12  +      0.3082578019648 * Education2n_Cycle
1093638   +          +    -0.01380127751108 * EducationBasic  +    -0.11076736066311 *
1093639   +        EducationGraduation  +     -0.1586948328241 * EducationMaster
1093640   +          +    -0.12842912869907 * Marital_StatusDivorced
1093641   +          +     0.11838814754642 * Marital_StatusMarried
1093642   +          +     0.01184261900927 * Marital_StatusSingle
1093643   +          +     0.14066273070318 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.3082578019648 * Education2n_Cycle + -0.01380127751108 * 
EducationBasic + -0.11076736066311 * EducationGraduation + -0.1586948328241 * EducationMaster 
+ -0.12842912869907 * Marital_StatusDivorced + 0.11838814754642 * Marital_StatusMarried + 
0.01184261900927 * Marital_StatusSingle + 0.14066273070318 * Marital_StatusTogether ;
1093644   +   H13  = H13  +     0.02861254390946 * Education2n_Cycle
1093645   +          +      0.4349807830691 * EducationBasic  +    -0.31346964692246 *
1093646   +        EducationGraduation  +      0.0620488761517 * EducationMaster
1093647   +          +    -0.22110722201709 * Marital_StatusDivorced
1093648   +          +      0.1355339029843 * Marital_StatusMarried
1093649   +          +    -0.33157273596382 * Marital_StatusSingle
1093650   +          +    -0.19725820483372 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.02861254390946 * Education2n_Cycle + 0.4349807830691 * 
EducationBasic + -0.31346964692246 * EducationGraduation + 0.0620488761517 * EducationMaster + 
-0.22110722201709 * Marital_StatusDivorced + 0.1355339029843 * Marital_StatusMarried + 
-0.33157273596382 * Marital_StatusSingle + -0.19725820483372 * Marital_StatusTogether ;
1093651   +   H14  = H14  +    -0.15196350137644 * Education2n_Cycle
1093652   +          +     0.11143610044897 * EducationBasic  +    -0.23356442851658 *
1093653   +        EducationGraduation  +     0.26881272673711 * EducationMaster
1093654   +          +    -0.21663247467797 * Marital_StatusDivorced
1093655   +          +     1.11468603898508 * Marital_StatusMarried
1093656   +          +    -0.84252388146943 * Marital_StatusSingle
1093657   +          +     0.91707021954171 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.15196350137644 * Education2n_Cycle + 0.11143610044897 * 
EducationBasic + -0.23356442851658 * EducationGraduation + 0.26881272673711 * EducationMaster 
+ -0.21663247467797 * Marital_StatusDivorced + 1.11468603898508 * Marital_StatusMarried + 
-0.84252388146943 * Marital_StatusSingle + 0.91707021954171 * Marital_StatusTogether ;
1093658   +   H11  =     0.69752617990443 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 0.69752617990443 + H11 ;
1093659   +   H12  =     0.88932226025287 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.88932226025287 + H12 ;
1093660   +   H13  =    -0.23351093325425 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.23351093325425 + H13 ;
1093661   +   H14  =      1.5565991209041 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 1.5565991209041 + H14 ;
1093662   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1093663   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1093664   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1093665   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1093666   +END;
MPRINT(EM_DIAGRAM):   END;
1093667   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1093668   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1093669   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1093670   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1093671   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1093672   +END;
MPRINT(EM_DIAGRAM):   END;
1093673   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1093674   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1093675   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1093676   +
1093677   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1093678   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1093679   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1093680   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1093681   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1093682   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1093683   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1093684   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1093685   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1093686   +end;
MPRINT(EM_DIAGRAM):   end;
1093687   +else do;
MPRINT(EM_DIAGRAM):   else do;
1093688   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1093689   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1093690   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1093691   +   end;
MPRINT(EM_DIAGRAM):   end;
1093692   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1093693   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1093694   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1093695   +   end;
MPRINT(EM_DIAGRAM):   end;
1093696   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1093697   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1093698   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1093699   +   end;
MPRINT(EM_DIAGRAM):   end;
1093700   +end;
MPRINT(EM_DIAGRAM):   end;
1093701   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1093702   +   P_DepVar1  =    -1.10683009838286 * H11  +    -1.85294488833715 * H12
1093703   +          +    -2.73624761150933 * H13  +    -2.51103548718704 * H14 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.10683009838286 * H11 + -1.85294488833715 * H12 + 
-2.73624761150933 * H13 + -2.51103548718704 * H14 ;
1093704   +   P_DepVar1  =    -0.86309949021709 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.86309949021709 + P_DepVar1 ;
1093705   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1093706   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1093707   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1093708   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1093709   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1093710   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1093711   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1093712   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1093713   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1093714   +END;
MPRINT(EM_DIAGRAM):   END;
1093715   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1093716   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1093717   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1093718   +END;
MPRINT(EM_DIAGRAM):   END;
1093719   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1093720   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1093721   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1093722   +END;
MPRINT(EM_DIAGRAM):   END;
1093723   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1093724   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1093725   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1093726   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1093727   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1093728   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1093729   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1093730   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1093731   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1093732   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1093733   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1093734   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1093735   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1093736   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1093737   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1093738   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1093739   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1093740   +END;
MPRINT(EM_DIAGRAM):   END;
1093741   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1093742   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1093743   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1093744   +drop
1093745   +H11
1093746   +H12
1093747   +H13
1093748   +H14
1093749   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 ;
1093750   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1093751   +* Renaming variables for Neural39;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural39;
1093752   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1093753   +* Renaming Posterior variables for Neural39;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural39;
1093754   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1093755   +drop Neural39_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural39_P_DepVar1;
1093756   +Neural39_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural39_P_DepVar1 = P_DepVar1;
1093757   +drop Neural39_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural39_P_DepVar0;
1093758   +Neural39_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural39_P_DepVar0 = P_DepVar0;
1093759   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1093760   +* Renaming _WARN_ variable for Neural39;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural39;
1093761   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1093762   +length Neural39_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural39_WARN_ $4;
1093763   +drop Neural39_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural39_WARN_;
1093764   +Neural39_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural39_WARN_ = _WARN_;
1093765   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1093766   +* Ensmbl12: Scoring Code of model 4 of 10;
MPRINT(EM_DIAGRAM):   * Ensmbl12: Scoring Code of model 4 of 10;
1093767   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1093768   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1093769   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
1093770   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1093771   +* NODE: Neural42;
MPRINT(EM_DIAGRAM):   * NODE: Neural42;
1093772   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1093773   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1093774   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1093775   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1093776   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1093777   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1093778   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1093779   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1093780   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1093781   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1093782   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1093783   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1093784   +LENGTH _WARN_ $4
1093785   +      F_DepVar  $ 12
1093786   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1093787   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1093788   +
1093789   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1093790   +
1093791   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1093792   +
1093793   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1093794   +
1093795   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1093796   +
1093797   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1093798   +
1093799   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1093800   +
1093801   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1093802   +
1093803   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1093804   +
1093805   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1093806   +
1093807   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1093808   +
1093809   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1093810   +
1093811   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1093812   +
1093813   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1093814   +
1093815   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1093816   +
1093817   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1093818   +
1093819   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1093820   +
1093821   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1093822   +
1093823   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1093824   +
1093825   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1093826   +
1093827   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1093828   +
1093829   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1093830   +
1093831   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1093832   +
1093833   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1093834   +
1093835   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1093836   +
1093837   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1093838   +
1093839   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1093840   +
1093841   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1093842   +
1093843   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1093844   +
1093845   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1093846   +
1093847   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1093848   +
1093849   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1093850   +
1093851   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1093852   +
1093853   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1093854   +
1093855   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1093856   +
1093857   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1093858   +
1093859   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1093860   +
1093861   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1093862   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1093863   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1093864   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1093865   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1093866   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1093867   +end;
MPRINT(EM_DIAGRAM):   end;
1093868   +else do;
MPRINT(EM_DIAGRAM):   else do;
1093869   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1093870   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1093871   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1093872   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1093873   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1093874   +   end;
MPRINT(EM_DIAGRAM):   end;
1093875   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1093876   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1093877   +   end;
MPRINT(EM_DIAGRAM):   end;
1093878   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1093879   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1093880   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1093881   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1093882   +   end;
MPRINT(EM_DIAGRAM):   end;
1093883   +end;
MPRINT(EM_DIAGRAM):   end;
1093884   +
1093885   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1093886   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1093887   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1093888   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1093889   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1093890   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1093891   +end;
MPRINT(EM_DIAGRAM):   end;
1093892   +else do;
MPRINT(EM_DIAGRAM):   else do;
1093893   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1093894   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1093895   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1093896   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1093897   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1093898   +   end;
MPRINT(EM_DIAGRAM):   end;
1093899   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1093900   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1093901   +   end;
MPRINT(EM_DIAGRAM):   end;
1093902   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1093903   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1093904   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1093905   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1093906   +   end;
MPRINT(EM_DIAGRAM):   end;
1093907   +end;
MPRINT(EM_DIAGRAM):   end;
1093908   +
1093909   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1093910   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1093911   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1093912   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1093913   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1093914   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1093915   +end;
MPRINT(EM_DIAGRAM):   end;
1093916   +else do;
MPRINT(EM_DIAGRAM):   else do;
1093917   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1093918   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1093919   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1093920   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1093921   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1093922   +   end;
MPRINT(EM_DIAGRAM):   end;
1093923   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1093924   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1093925   +   end;
MPRINT(EM_DIAGRAM):   end;
1093926   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1093927   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1093928   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1093929   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1093930   +   end;
MPRINT(EM_DIAGRAM):   end;
1093931   +end;
MPRINT(EM_DIAGRAM):   end;
1093932   +
1093933   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1093934   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1093935   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1093936   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1093937   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1093938   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1093939   +end;
MPRINT(EM_DIAGRAM):   end;
1093940   +else do;
MPRINT(EM_DIAGRAM):   else do;
1093941   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1093942   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1093943   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1093944   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1093945   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1093946   +   end;
MPRINT(EM_DIAGRAM):   end;
1093947   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1093948   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1093949   +   end;
MPRINT(EM_DIAGRAM):   end;
1093950   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1093951   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1093952   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1093953   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1093954   +   end;
MPRINT(EM_DIAGRAM):   end;
1093955   +end;
MPRINT(EM_DIAGRAM):   end;
1093956   +
1093957   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1093958   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1093959   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1093960   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1093961   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1093962   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1093963   +end;
MPRINT(EM_DIAGRAM):   end;
1093964   +else do;
MPRINT(EM_DIAGRAM):   else do;
1093965   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1093966   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1093967   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1093968   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1093969   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1093970   +   end;
MPRINT(EM_DIAGRAM):   end;
1093971   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1093972   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1093973   +   end;
MPRINT(EM_DIAGRAM):   end;
1093974   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1093975   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1093976   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1093977   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1093978   +   end;
MPRINT(EM_DIAGRAM):   end;
1093979   +end;
MPRINT(EM_DIAGRAM):   end;
1093980   +
1093981   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1093982   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1093983   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1093984   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1093985   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1093986   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1093987   +end;
MPRINT(EM_DIAGRAM):   end;
1093988   +else do;
MPRINT(EM_DIAGRAM):   else do;
1093989   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1093990   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1093991   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1093992   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1093993   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1093994   +   end;
MPRINT(EM_DIAGRAM):   end;
1093995   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1093996   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1093997   +   end;
MPRINT(EM_DIAGRAM):   end;
1093998   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1093999   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1094000   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1094001   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1094002   +   end;
MPRINT(EM_DIAGRAM):   end;
1094003   +end;
MPRINT(EM_DIAGRAM):   end;
1094004   +
1094005   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1094006   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1094007   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1094008   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1094009   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1094010   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1094011   +end;
MPRINT(EM_DIAGRAM):   end;
1094012   +else do;
MPRINT(EM_DIAGRAM):   else do;
1094013   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1094014   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1094015   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1094016   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1094017   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1094018   +   end;
MPRINT(EM_DIAGRAM):   end;
1094019   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1094020   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1094021   +   end;
MPRINT(EM_DIAGRAM):   end;
1094022   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1094023   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1094024   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1094025   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1094026   +   end;
MPRINT(EM_DIAGRAM):   end;
1094027   +end;
MPRINT(EM_DIAGRAM):   end;
1094028   +
1094029   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1094030   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
1094031   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1094032   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1094033   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1094034   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1094035   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1094036   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1094037   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1094038   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1094039   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1094040   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1094041   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1094042   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1094043   +end;
MPRINT(EM_DIAGRAM):   end;
1094044   +else do;
MPRINT(EM_DIAGRAM):   else do;
1094045   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1094046   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1094047   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1094048   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1094049   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1094050   +   end;
MPRINT(EM_DIAGRAM):   end;
1094051   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1094052   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1094053   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1094054   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1094055   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1094056   +   end;
MPRINT(EM_DIAGRAM):   end;
1094057   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1094058   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1094059   +   end;
MPRINT(EM_DIAGRAM):   end;
1094060   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1094061   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1094062   +   end;
MPRINT(EM_DIAGRAM):   end;
1094063   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1094064   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1094065   +   end;
MPRINT(EM_DIAGRAM):   end;
1094066   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1094067   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1094068   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1094069   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1094070   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1094071   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1094072   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1094073   +   end;
MPRINT(EM_DIAGRAM):   end;
1094074   +end;
MPRINT(EM_DIAGRAM):   end;
1094075   +
1094076   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1094077   +*** Checking missing input Interval
1094078   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1094079   +
1094080   +IF NMISS(
1094081   +   AcceptedCmpTotal ,
1094082   +   Age ,
1094083   +   Frq ,
1094084   +   Income ,
1094085   +   Kidhome ,
1094086   +   Mnt ,
1094087   +   MntFishProducts ,
1094088   +   MntFruits ,
1094089   +   MntGoldProds ,
1094090   +   MntSweetProducts ,
1094091   +   MonthsAsCustomer ,
1094092   +   NumDealsPurchases ,
1094093   +   NumWebVisitsMonth ,
1094094   +   RFMstat ,
1094095   +   RMntFrq ,
1094096   +   Recency ,
1094097   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntSweetProducts , MonthsAsCustomer , 
NumDealsPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , Teenhome ) THEN DO;
1094098   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1094099   +
1094100   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1094101   +END;
MPRINT(EM_DIAGRAM):   END;
1094102   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1094103   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1094104   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1094105   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1094106   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1094107   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1094108   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1094109   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1094110   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1094111   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1094112   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1094113   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1094114   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1094115   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1094116   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1094117   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1094118   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1094119   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1094120   +   S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
1094121   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
1094122   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1094123   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1094124   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1094125   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1094126   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1094127   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1094128   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1094129   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1094130   +END;
MPRINT(EM_DIAGRAM):   END;
1094131   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1094132   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1094133   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1094134   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1094135   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1094136   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1094137   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1094138   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1094139   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1094140   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1094141   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1094142   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1094143   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1094144   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1094145   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1094146   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1094147   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1094148   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1094149   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1094150   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1094151   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1094152   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1094153   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1094154   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1094155   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1094156   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1094157   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1094158   +   ELSE S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
1094159   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
1094160   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1094161   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1094162   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1094163   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1094164   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1094165   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1094166   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1094167   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1094168   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1094169   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1094170   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1094171   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1094172   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1094173   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1094174   +END;
MPRINT(EM_DIAGRAM):   END;
1094175   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1094176   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1094177   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1094178   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1094179   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1094180   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1094181   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1094182   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1094183   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1094184   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1094185   +   H11  =       0.143162011359 * S_AcceptedCmpTotal  +    -0.01147578601065 *
1094186   +        S_Age  +    -0.05169955507594 * S_Frq  +      0.0608752061961 *
1094187   +        S_Income  +    -0.00693057472767 * S_Kidhome
1094188   +          +     0.05071822608697 * S_Mnt  +    -0.00418474163671 *
1094189   +        S_MntFishProducts  +    -0.00868585259854 * S_MntFruits
1094190   +          +     0.00371185422632 * S_MntGoldProds  +    -0.00953369321279 *
1094191   +        S_MntSweetProducts  +     0.00364165525253 * S_MonthsAsCustomer
1094192   +          +     0.04099251994623 * S_NumDealsPurchases
1094193   +          +     0.03811258944826 * S_NumWebVisitsMonth
1094194   +          +     0.01010786402462 * S_RFMstat  +    -0.01356300667842 *
1094195   +        S_RMntFrq  +     -0.0946537245815 * S_Recency
1094196   +          +    -0.04221477681001 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.143162011359 * S_AcceptedCmpTotal + -0.01147578601065 * S_Age + 
-0.05169955507594 * S_Frq + 0.0608752061961 * S_Income + -0.00693057472767 * S_Kidhome + 
0.05071822608697 * S_Mnt + -0.00418474163671 * S_MntFishProducts + -0.00868585259854 * 
S_MntFruits + 0.00371185422632 * S_MntGoldProds + -0.00953369321279 * S_MntSweetProducts + 
0.00364165525253 * S_MonthsAsCustomer + 0.04099251994623 * S_NumDealsPurchases + 
0.03811258944826 * S_NumWebVisitsMonth + 0.01010786402462 * S_RFMstat + -0.01356300667842 * 
S_RMntFrq + -0.0946537245815 * S_Recency + -0.04221477681001 * S_Teenhome ;
1094197   +   H11  = H11  +     0.05665985483083 * AcceptedCmp10
1094198   +          +     0.07738044644174 * AcceptedCmp20  +     0.03664267575532 *
1094199   +        AcceptedCmp30  +     0.07960267580286 * AcceptedCmp40
1094200   +          +     0.05680904334063 * AcceptedCmp50  +     0.03195731295007 *
1094201   +        Complain0  +     0.02227933507918 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.05665985483083 * AcceptedCmp10 + 0.07738044644174 * 
AcceptedCmp20 + 0.03664267575532 * AcceptedCmp30 + 0.07960267580286 * AcceptedCmp40 + 
0.05680904334063 * AcceptedCmp50 + 0.03195731295007 * Complain0 + 0.02227933507918 * 
HigherEducationBinary0 ;
1094202   +   H11  = H11  +     -0.0196308800544 * Education2n_Cycle
1094203   +          +    -0.03243102288942 * EducationBasic  +     0.03338744363865 *
1094204   +        EducationGraduation  +      0.0055581758102 * EducationMaster ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.0196308800544 * Education2n_Cycle + -0.03243102288942 * 
EducationBasic + 0.03338744363865 * EducationGraduation + 0.0055581758102 * EducationMaster ;
1094205   +   H11  =     0.00486262152917 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 0.00486262152917 + H11 ;
1094206   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1094207   +END;
MPRINT(EM_DIAGRAM):   END;
1094208   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1094209   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1094210   +END;
MPRINT(EM_DIAGRAM):   END;
1094211   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1094212   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1094213   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1094214   +
1094215   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1094216   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1094217   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1094218   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1094219   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1094220   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1094221   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1094222   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1094223   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1094224   +end;
MPRINT(EM_DIAGRAM):   end;
1094225   +else do;
MPRINT(EM_DIAGRAM):   else do;
1094226   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1094227   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1094228   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1094229   +   end;
MPRINT(EM_DIAGRAM):   end;
1094230   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1094231   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1094232   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1094233   +   end;
MPRINT(EM_DIAGRAM):   end;
1094234   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1094235   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1094236   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1094237   +   end;
MPRINT(EM_DIAGRAM):   end;
1094238   +end;
MPRINT(EM_DIAGRAM):   end;
1094239   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1094240   +   P_DepVar1  =     21.3591691048455 * H11 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 21.3591691048455 * H11 ;
1094241   +   P_DepVar1  =    -9.58357245308623 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -9.58357245308623 + P_DepVar1 ;
1094242   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1094243   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1094244   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1094245   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1094246   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1094247   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1094248   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1094249   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1094250   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1094251   +END;
MPRINT(EM_DIAGRAM):   END;
1094252   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1094253   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1094254   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1094255   +END;
MPRINT(EM_DIAGRAM):   END;
1094256   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1094257   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1094258   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1094259   +END;
MPRINT(EM_DIAGRAM):   END;
1094260   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1094261   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1094262   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1094263   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1094264   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1094265   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1094266   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1094267   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1094268   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1094269   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1094270   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1094271   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1094272   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1094273   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1094274   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1094275   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1094276   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1094277   +END;
MPRINT(EM_DIAGRAM):   END;
1094278   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1094279   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1094280   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1094281   +drop
1094282   +H11
1094283   +;
MPRINT(EM_DIAGRAM):   drop H11 ;
1094284   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1094285   +* Renaming variables for Neural42;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural42;
1094286   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1094287   +* Renaming Posterior variables for Neural42;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural42;
1094288   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1094289   +drop Neural42_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural42_P_DepVar1;
1094290   +Neural42_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural42_P_DepVar1 = P_DepVar1;
1094291   +drop Neural42_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural42_P_DepVar0;
1094292   +Neural42_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural42_P_DepVar0 = P_DepVar0;
1094293   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1094294   +* Renaming _WARN_ variable for Neural42;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural42;
1094295   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1094296   +length Neural42_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural42_WARN_ $4;
1094297   +drop Neural42_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural42_WARN_;
1094298   +Neural42_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural42_WARN_ = _WARN_;
1094299   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1094300   +* Ensmbl12: Scoring Code of model 5 of 10;
MPRINT(EM_DIAGRAM):   * Ensmbl12: Scoring Code of model 5 of 10;
1094301   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1094302   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1094303   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
1094304   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1094305   +* NODE: Neural37;
MPRINT(EM_DIAGRAM):   * NODE: Neural37;
1094306   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1094307   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1094308   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1094309   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1094310   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1094311   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1094312   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1094313   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1094314   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1094315   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1094316   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1094317   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1094318   +LENGTH _WARN_ $4
1094319   +      F_DepVar  $ 12
1094320   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1094321   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1094322   +
1094323   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1094324   +
1094325   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1094326   +
1094327   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1094328   +
1094329   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1094330   +
1094331   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1094332   +
1094333   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1094334   +
1094335   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1094336   +
1094337   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1094338   +
1094339   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1094340   +
1094341   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1094342   +
1094343   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1094344   +
1094345   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1094346   +
1094347   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1094348   +
1094349   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1094350   +
1094351   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1094352   +
1094353   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1094354   +
1094355   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1094356   +
1094357   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1094358   +
1094359   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1094360   +
1094361   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1094362   +
1094363   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1094364   +
1094365   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1094366   +
1094367   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1094368   +
1094369   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1094370   +
1094371   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1094372   +
1094373   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1094374   +
1094375   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1094376   +
1094377   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1094378   +
1094379   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1094380   +
1094381   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1094382   +
1094383   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1094384   +
1094385   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1094386   +
1094387   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1094388   +
1094389   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1094390   +
1094391   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1094392   +
1094393   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1094394   +
1094395   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1094396   +
1094397   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1094398   +
1094399   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1094400   +
1094401   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1094402   +
1094403   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1094404   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1094405   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1094406   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1094407   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1094408   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1094409   +end;
MPRINT(EM_DIAGRAM):   end;
1094410   +else do;
MPRINT(EM_DIAGRAM):   else do;
1094411   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1094412   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1094413   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1094414   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1094415   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1094416   +   end;
MPRINT(EM_DIAGRAM):   end;
1094417   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1094418   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1094419   +   end;
MPRINT(EM_DIAGRAM):   end;
1094420   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1094421   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1094422   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1094423   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1094424   +   end;
MPRINT(EM_DIAGRAM):   end;
1094425   +end;
MPRINT(EM_DIAGRAM):   end;
1094426   +
1094427   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1094428   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1094429   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1094430   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1094431   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1094432   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1094433   +end;
MPRINT(EM_DIAGRAM):   end;
1094434   +else do;
MPRINT(EM_DIAGRAM):   else do;
1094435   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1094436   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1094437   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1094438   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1094439   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1094440   +   end;
MPRINT(EM_DIAGRAM):   end;
1094441   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1094442   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1094443   +   end;
MPRINT(EM_DIAGRAM):   end;
1094444   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1094445   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1094446   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1094447   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1094448   +   end;
MPRINT(EM_DIAGRAM):   end;
1094449   +end;
MPRINT(EM_DIAGRAM):   end;
1094450   +
1094451   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1094452   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1094453   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1094454   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1094455   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1094456   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1094457   +end;
MPRINT(EM_DIAGRAM):   end;
1094458   +else do;
MPRINT(EM_DIAGRAM):   else do;
1094459   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1094460   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1094461   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1094462   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1094463   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1094464   +   end;
MPRINT(EM_DIAGRAM):   end;
1094465   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1094466   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1094467   +   end;
MPRINT(EM_DIAGRAM):   end;
1094468   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1094469   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1094470   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1094471   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1094472   +   end;
MPRINT(EM_DIAGRAM):   end;
1094473   +end;
MPRINT(EM_DIAGRAM):   end;
1094474   +
1094475   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1094476   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1094477   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1094478   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1094479   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1094480   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1094481   +end;
MPRINT(EM_DIAGRAM):   end;
1094482   +else do;
MPRINT(EM_DIAGRAM):   else do;
1094483   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1094484   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1094485   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1094486   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1094487   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1094488   +   end;
MPRINT(EM_DIAGRAM):   end;
1094489   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1094490   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1094491   +   end;
MPRINT(EM_DIAGRAM):   end;
1094492   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1094493   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1094494   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1094495   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1094496   +   end;
MPRINT(EM_DIAGRAM):   end;
1094497   +end;
MPRINT(EM_DIAGRAM):   end;
1094498   +
1094499   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1094500   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1094501   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1094502   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1094503   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1094504   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1094505   +end;
MPRINT(EM_DIAGRAM):   end;
1094506   +else do;
MPRINT(EM_DIAGRAM):   else do;
1094507   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1094508   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1094509   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1094510   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1094511   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1094512   +   end;
MPRINT(EM_DIAGRAM):   end;
1094513   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1094514   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1094515   +   end;
MPRINT(EM_DIAGRAM):   end;
1094516   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1094517   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1094518   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1094519   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1094520   +   end;
MPRINT(EM_DIAGRAM):   end;
1094521   +end;
MPRINT(EM_DIAGRAM):   end;
1094522   +
1094523   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1094524   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1094525   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1094526   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1094527   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1094528   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1094529   +end;
MPRINT(EM_DIAGRAM):   end;
1094530   +else do;
MPRINT(EM_DIAGRAM):   else do;
1094531   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1094532   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1094533   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1094534   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1094535   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1094536   +   end;
MPRINT(EM_DIAGRAM):   end;
1094537   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1094538   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1094539   +   end;
MPRINT(EM_DIAGRAM):   end;
1094540   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1094541   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1094542   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1094543   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1094544   +   end;
MPRINT(EM_DIAGRAM):   end;
1094545   +end;
MPRINT(EM_DIAGRAM):   end;
1094546   +
1094547   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1094548   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1094549   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1094550   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1094551   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1094552   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1094553   +end;
MPRINT(EM_DIAGRAM):   end;
1094554   +else do;
MPRINT(EM_DIAGRAM):   else do;
1094555   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1094556   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1094557   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1094558   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1094559   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1094560   +   end;
MPRINT(EM_DIAGRAM):   end;
1094561   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1094562   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1094563   +   end;
MPRINT(EM_DIAGRAM):   end;
1094564   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1094565   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1094566   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1094567   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1094568   +   end;
MPRINT(EM_DIAGRAM):   end;
1094569   +end;
MPRINT(EM_DIAGRAM):   end;
1094570   +
1094571   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1094572   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
1094573   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1094574   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1094575   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1094576   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1094577   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1094578   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1094579   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1094580   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1094581   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1094582   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1094583   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1094584   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1094585   +end;
MPRINT(EM_DIAGRAM):   end;
1094586   +else do;
MPRINT(EM_DIAGRAM):   else do;
1094587   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1094588   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1094589   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1094590   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1094591   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1094592   +   end;
MPRINT(EM_DIAGRAM):   end;
1094593   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1094594   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1094595   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1094596   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1094597   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1094598   +   end;
MPRINT(EM_DIAGRAM):   end;
1094599   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1094600   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1094601   +   end;
MPRINT(EM_DIAGRAM):   end;
1094602   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1094603   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1094604   +   end;
MPRINT(EM_DIAGRAM):   end;
1094605   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1094606   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1094607   +   end;
MPRINT(EM_DIAGRAM):   end;
1094608   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1094609   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1094610   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1094611   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1094612   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1094613   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1094614   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1094615   +   end;
MPRINT(EM_DIAGRAM):   end;
1094616   +end;
MPRINT(EM_DIAGRAM):   end;
1094617   +
1094618   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1094619   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1094620   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
1094621   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1094622   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1094623   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1094624   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1094625   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1094626   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1094627   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1094628   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1094629   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1094630   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1094631   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1094632   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1094633   +end;
MPRINT(EM_DIAGRAM):   end;
1094634   +else do;
MPRINT(EM_DIAGRAM):   else do;
1094635   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1094636   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1094637   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1094638   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1094639   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1094640   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1094641   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1094642   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1094643   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1094644   +         end;
MPRINT(EM_DIAGRAM):   end;
1094645   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1094646   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1094647   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1094648   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1094649   +            end;
MPRINT(EM_DIAGRAM):   end;
1094650   +         end;
MPRINT(EM_DIAGRAM):   end;
1094651   +      end;
MPRINT(EM_DIAGRAM):   end;
1094652   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1094653   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1094654   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1094655   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1094656   +         end;
MPRINT(EM_DIAGRAM):   end;
1094657   +      end;
MPRINT(EM_DIAGRAM):   end;
1094658   +   end;
MPRINT(EM_DIAGRAM):   end;
1094659   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1094660   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1094661   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1094662   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1094663   +      end;
MPRINT(EM_DIAGRAM):   end;
1094664   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1094665   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1094666   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1094667   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1094668   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1094669   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1094670   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1094671   +         end;
MPRINT(EM_DIAGRAM):   end;
1094672   +      end;
MPRINT(EM_DIAGRAM):   end;
1094673   +   end;
MPRINT(EM_DIAGRAM):   end;
1094674   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1094675   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1094676   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1094677   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1094678   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1094679   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1094680   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1094681   +   end;
MPRINT(EM_DIAGRAM):   end;
1094682   +end;
MPRINT(EM_DIAGRAM):   end;
1094683   +
1094684   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1094685   +*** Checking missing input Interval
1094686   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1094687   +
1094688   +IF NMISS(
1094689   +   AcceptedCmpTotal ,
1094690   +   Age ,
1094691   +   Frq ,
1094692   +   Income ,
1094693   +   Kidhome ,
1094694   +   MntFishProducts ,
1094695   +   MntFruits ,
1094696   +   MntGoldProds ,
1094697   +   MntSweetProducts ,
1094698   +   MonthsAsCustomer ,
1094699   +   NumDealsPurchases ,
1094700   +   NumWebVisitsMonth ,
1094701   +   RFMstat ,
1094702   +   RMntFrq ,
1094703   +   Recency ,
1094704   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , 
MntFishProducts , MntFruits , MntGoldProds , MntSweetProducts , MonthsAsCustomer , 
NumDealsPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , Teenhome ) THEN DO;
1094705   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1094706   +
1094707   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1094708   +END;
MPRINT(EM_DIAGRAM):   END;
1094709   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1094710   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1094711   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1094712   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1094713   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1094714   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1094715   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1094716   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1094717   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1094718   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1094719   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1094720   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1094721   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1094722   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1094723   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1094724   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1094725   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1094726   +   S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
1094727   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
1094728   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1094729   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1094730   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1094731   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1094732   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1094733   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1094734   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1094735   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1094736   +END;
MPRINT(EM_DIAGRAM):   END;
1094737   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1094738   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1094739   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1094740   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1094741   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1094742   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1094743   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1094744   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1094745   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1094746   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1094747   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1094748   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1094749   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1094750   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1094751   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1094752   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1094753   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1094754   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1094755   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1094756   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1094757   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1094758   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1094759   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1094760   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1094761   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1094762   +   ELSE S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
1094763   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
1094764   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1094765   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1094766   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1094767   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1094768   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1094769   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1094770   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1094771   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1094772   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1094773   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1094774   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1094775   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1094776   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1094777   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1094778   +END;
MPRINT(EM_DIAGRAM):   END;
1094779   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1094780   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1094781   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1094782   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1094783   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1094784   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1094785   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1094786   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1094787   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1094788   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1094789   +   H11  =     0.00529231235481 * S_AcceptedCmpTotal  +      0.0343326832257 *
1094790   +        S_Age  +    -0.05203541829299 * S_Frq  +    -0.45089409751085 *
1094791   +        S_Income  +     0.21434017685167 * S_Kidhome
1094792   +          +    -0.00245095061163 * S_MntFishProducts
1094793   +          +     0.05045649639793 * S_MntFruits  +     0.00647541618092 *
1094794   +        S_MntGoldProds  +     0.05644685811145 * S_MntSweetProducts
1094795   +          +     -0.0436897985886 * S_MonthsAsCustomer
1094796   +          +    -0.11066147452589 * S_NumDealsPurchases
1094797   +          +    -0.15815826211613 * S_NumWebVisitsMonth
1094798   +          +    -0.02488895787197 * S_RFMstat  +    -0.07848372303852 *
1094799   +        S_RMntFrq  +     0.44584112602611 * S_Recency
1094800   +          +     0.31802924624272 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.00529231235481 * S_AcceptedCmpTotal + 0.0343326832257 * S_Age + 
-0.05203541829299 * S_Frq + -0.45089409751085 * S_Income + 0.21434017685167 * S_Kidhome + 
-0.00245095061163 * S_MntFishProducts + 0.05045649639793 * S_MntFruits + 0.00647541618092 * 
S_MntGoldProds + 0.05644685811145 * S_MntSweetProducts + -0.0436897985886 * S_MonthsAsCustomer 
+ -0.11066147452589 * S_NumDealsPurchases + -0.15815826211613 * S_NumWebVisitsMonth + 
-0.02488895787197 * S_RFMstat + -0.07848372303852 * S_RMntFrq + 0.44584112602611 * S_Recency + 
0.31802924624272 * S_Teenhome ;
1094801   +   H12  =    -0.10209163274452 * S_AcceptedCmpTotal  +     0.11827354067819 *
1094802   +        S_Age  +     1.40350663058769 * S_Frq  +     0.61315172399898 *
1094803   +        S_Income  +    -0.34676303560555 * S_Kidhome
1094804   +          +    -0.19666313381749 * S_MntFishProducts
1094805   +          +     0.02049419497141 * S_MntFruits  +    -0.20582738219797 *
1094806   +        S_MntGoldProds  +    -0.07237052620156 * S_MntSweetProducts
1094807   +          +     0.11921399006499 * S_MonthsAsCustomer
1094808   +          +    -0.67623098057964 * S_NumDealsPurchases
1094809   +          +    -0.59190965073948 * S_NumWebVisitsMonth
1094810   +          +    -0.20613596895241 * S_RFMstat  +    -0.32007172204835 *
1094811   +        S_RMntFrq  +     0.69616846305831 * S_Recency
1094812   +          +     -0.3023019033387 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -0.10209163274452 * S_AcceptedCmpTotal + 0.11827354067819 * S_Age 
+ 1.40350663058769 * S_Frq + 0.61315172399898 * S_Income + -0.34676303560555 * S_Kidhome + 
-0.19666313381749 * S_MntFishProducts + 0.02049419497141 * S_MntFruits + -0.20582738219797 * 
S_MntGoldProds + -0.07237052620156 * S_MntSweetProducts + 0.11921399006499 * 
S_MonthsAsCustomer + -0.67623098057964 * S_NumDealsPurchases + -0.59190965073948 * 
S_NumWebVisitsMonth + -0.20613596895241 * S_RFMstat + -0.32007172204835 * S_RMntFrq + 
0.69616846305831 * S_Recency + -0.3023019033387 * S_Teenhome ;
1094813   +   H11  = H11  +     0.19876934538613 * AcceptedCmp10
1094814   +          +     0.18951634162327 * AcceptedCmp20  +     0.24251361227823 *
1094815   +        AcceptedCmp30  +     0.16680588614581 * AcceptedCmp40
1094816   +          +     0.15217121708385 * AcceptedCmp50  +    -0.06185934853348 *
1094817   +        Complain0  +    -0.02156128066423 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.19876934538613 * AcceptedCmp10 + 0.18951634162327 * 
AcceptedCmp20 + 0.24251361227823 * AcceptedCmp30 + 0.16680588614581 * AcceptedCmp40 + 
0.15217121708385 * AcceptedCmp50 + -0.06185934853348 * Complain0 + -0.02156128066423 * 
HigherEducationBinary0 ;
1094818   +   H12  = H12  +     0.42936838873103 * AcceptedCmp10
1094819   +          +     0.31531206230129 * AcceptedCmp20  +     0.61595858080275 *
1094820   +        AcceptedCmp30  +    -0.02848071087974 * AcceptedCmp40
1094821   +          +     0.26463885464849 * AcceptedCmp50  +    -0.25408897937456 *
1094822   +        Complain0  +     0.37165308117925 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.42936838873103 * AcceptedCmp10 + 0.31531206230129 * 
AcceptedCmp20 + 0.61595858080275 * AcceptedCmp30 + -0.02848071087974 * AcceptedCmp40 + 
0.26463885464849 * AcceptedCmp50 + -0.25408897937456 * Complain0 + 0.37165308117925 * 
HigherEducationBinary0 ;
1094823   +   H11  = H11  +    -0.06004623502296 * Education2n_Cycle
1094824   +          +    -0.14055981460472 * EducationBasic  +    -0.02226325005028 *
1094825   +        EducationGraduation  +     0.17382426297237 * EducationMaster
1094826   +          +    -0.09599098826432 * Marital_StatusDivorced
1094827   +          +     0.29380773989654 * Marital_StatusMarried
1094828   +          +    -0.24344588832351 * Marital_StatusSingle
1094829   +          +     0.26861619886367 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.06004623502296 * Education2n_Cycle + -0.14055981460472 * 
EducationBasic + -0.02226325005028 * EducationGraduation + 0.17382426297237 * EducationMaster 
+ -0.09599098826432 * Marital_StatusDivorced + 0.29380773989654 * Marital_StatusMarried + 
-0.24344588832351 * Marital_StatusSingle + 0.26861619886367 * Marital_StatusTogether ;
1094830   +   H12  = H12  +    -0.05553559517027 * Education2n_Cycle
1094831   +          +     0.10110187812592 * EducationBasic  +    -0.01454720780814 *
1094832   +        EducationGraduation  +    -0.23207789950977 * EducationMaster
1094833   +          +    -0.18210246138549 * Marital_StatusDivorced
1094834   +          +    -0.33707503901978 * Marital_StatusMarried
1094835   +          +     0.45975144433549 * Marital_StatusSingle
1094836   +          +    -0.30223475265715 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.05553559517027 * Education2n_Cycle + 0.10110187812592 * 
EducationBasic + -0.01454720780814 * EducationGraduation + -0.23207789950977 * EducationMaster 
+ -0.18210246138549 * Marital_StatusDivorced + -0.33707503901978 * Marital_StatusMarried + 
0.45975144433549 * Marital_StatusSingle + -0.30223475265715 * Marital_StatusTogether ;
1094837   +   H11  =    -0.01761609034495 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -0.01761609034495 + H11 ;
1094838   +   H12  =     1.54520059814945 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 1.54520059814945 + H12 ;
1094839   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1094840   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1094841   +END;
MPRINT(EM_DIAGRAM):   END;
1094842   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1094843   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1094844   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1094845   +END;
MPRINT(EM_DIAGRAM):   END;
1094846   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1094847   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1094848   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1094849   +
1094850   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1094851   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1094852   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1094853   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1094854   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1094855   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1094856   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1094857   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1094858   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1094859   +end;
MPRINT(EM_DIAGRAM):   end;
1094860   +else do;
MPRINT(EM_DIAGRAM):   else do;
1094861   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1094862   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1094863   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1094864   +   end;
MPRINT(EM_DIAGRAM):   end;
1094865   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1094866   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1094867   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1094868   +   end;
MPRINT(EM_DIAGRAM):   end;
1094869   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1094870   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1094871   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1094872   +   end;
MPRINT(EM_DIAGRAM):   end;
1094873   +end;
MPRINT(EM_DIAGRAM):   end;
1094874   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1094875   +   P_DepVar1  =    -5.00819716007083 * H11  +    -2.90644970096905 * H12 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -5.00819716007083 * H11 + -2.90644970096905 * H12 ;
1094876   +   P_DepVar1  =     0.91635286006129 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.91635286006129 + P_DepVar1 ;
1094877   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1094878   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1094879   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1094880   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1094881   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1094882   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1094883   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1094884   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1094885   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1094886   +END;
MPRINT(EM_DIAGRAM):   END;
1094887   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1094888   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1094889   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1094890   +END;
MPRINT(EM_DIAGRAM):   END;
1094891   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1094892   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1094893   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1094894   +END;
MPRINT(EM_DIAGRAM):   END;
1094895   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1094896   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1094897   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1094898   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1094899   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1094900   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1094901   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1094902   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1094903   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1094904   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1094905   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1094906   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1094907   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1094908   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1094909   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1094910   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1094911   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1094912   +END;
MPRINT(EM_DIAGRAM):   END;
1094913   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1094914   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1094915   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1094916   +drop
1094917   +H11
1094918   +H12
1094919   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 ;
1094920   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1094921   +* Renaming variables for Neural37;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural37;
1094922   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1094923   +* Renaming Posterior variables for Neural37;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural37;
1094924   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1094925   +drop Neural37_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural37_P_DepVar1;
1094926   +Neural37_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural37_P_DepVar1 = P_DepVar1;
1094927   +drop Neural37_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural37_P_DepVar0;
1094928   +Neural37_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural37_P_DepVar0 = P_DepVar0;
1094929   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1094930   +* Renaming _WARN_ variable for Neural37;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural37;
1094931   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1094932   +length Neural37_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural37_WARN_ $4;
1094933   +drop Neural37_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural37_WARN_;
1094934   +Neural37_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural37_WARN_ = _WARN_;
1094935   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1094936   +* Ensmbl12: Scoring Code of model 6 of 10;
MPRINT(EM_DIAGRAM):   * Ensmbl12: Scoring Code of model 6 of 10;
1094937   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1094938   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1094939   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
1094940   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1094941   +* NODE: Neural38;
MPRINT(EM_DIAGRAM):   * NODE: Neural38;
1094942   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1094943   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1094944   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1094945   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1094946   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1094947   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1094948   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1094949   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1094950   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1094951   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1094952   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1094953   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1094954   +LENGTH _WARN_ $4
1094955   +      F_DepVar  $ 12
1094956   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1094957   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1094958   +
1094959   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1094960   +
1094961   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1094962   +
1094963   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1094964   +
1094965   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1094966   +
1094967   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1094968   +
1094969   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1094970   +
1094971   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1094972   +
1094973   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1094974   +
1094975   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1094976   +
1094977   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1094978   +
1094979   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1094980   +
1094981   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1094982   +
1094983   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1094984   +
1094985   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1094986   +
1094987   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1094988   +
1094989   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1094990   +
1094991   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1094992   +
1094993   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1094994   +
1094995   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1094996   +
1094997   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1094998   +
1094999   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1095000   +
1095001   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1095002   +
1095003   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1095004   +
1095005   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1095006   +
1095007   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1095008   +
1095009   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1095010   +
1095011   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1095012   +
1095013   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1095014   +
1095015   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1095016   +
1095017   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1095018   +
1095019   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1095020   +
1095021   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1095022   +
1095023   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1095024   +
1095025   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1095026   +
1095027   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1095028   +
1095029   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1095030   +
1095031   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1095032   +
1095033   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1095034   +
1095035   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1095036   +
1095037   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1095038   +
1095039   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1095040   +
1095041   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1095042   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1095043   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1095044   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1095045   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1095046   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1095047   +end;
MPRINT(EM_DIAGRAM):   end;
1095048   +else do;
MPRINT(EM_DIAGRAM):   else do;
1095049   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1095050   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1095051   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1095052   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1095053   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1095054   +   end;
MPRINT(EM_DIAGRAM):   end;
1095055   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1095056   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1095057   +   end;
MPRINT(EM_DIAGRAM):   end;
1095058   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1095059   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1095060   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1095061   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1095062   +   end;
MPRINT(EM_DIAGRAM):   end;
1095063   +end;
MPRINT(EM_DIAGRAM):   end;
1095064   +
1095065   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1095066   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1095067   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1095068   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1095069   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1095070   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1095071   +end;
MPRINT(EM_DIAGRAM):   end;
1095072   +else do;
MPRINT(EM_DIAGRAM):   else do;
1095073   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1095074   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1095075   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1095076   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1095077   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1095078   +   end;
MPRINT(EM_DIAGRAM):   end;
1095079   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1095080   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1095081   +   end;
MPRINT(EM_DIAGRAM):   end;
1095082   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1095083   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1095084   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1095085   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1095086   +   end;
MPRINT(EM_DIAGRAM):   end;
1095087   +end;
MPRINT(EM_DIAGRAM):   end;
1095088   +
1095089   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1095090   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1095091   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1095092   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1095093   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1095094   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1095095   +end;
MPRINT(EM_DIAGRAM):   end;
1095096   +else do;
MPRINT(EM_DIAGRAM):   else do;
1095097   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1095098   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1095099   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1095100   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1095101   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1095102   +   end;
MPRINT(EM_DIAGRAM):   end;
1095103   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1095104   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1095105   +   end;
MPRINT(EM_DIAGRAM):   end;
1095106   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1095107   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1095108   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1095109   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1095110   +   end;
MPRINT(EM_DIAGRAM):   end;
1095111   +end;
MPRINT(EM_DIAGRAM):   end;
1095112   +
1095113   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1095114   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1095115   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1095116   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1095117   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1095118   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1095119   +end;
MPRINT(EM_DIAGRAM):   end;
1095120   +else do;
MPRINT(EM_DIAGRAM):   else do;
1095121   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1095122   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1095123   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1095124   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1095125   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1095126   +   end;
MPRINT(EM_DIAGRAM):   end;
1095127   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1095128   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1095129   +   end;
MPRINT(EM_DIAGRAM):   end;
1095130   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1095131   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1095132   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1095133   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1095134   +   end;
MPRINT(EM_DIAGRAM):   end;
1095135   +end;
MPRINT(EM_DIAGRAM):   end;
1095136   +
1095137   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1095138   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1095139   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1095140   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1095141   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1095142   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1095143   +end;
MPRINT(EM_DIAGRAM):   end;
1095144   +else do;
MPRINT(EM_DIAGRAM):   else do;
1095145   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1095146   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1095147   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1095148   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1095149   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1095150   +   end;
MPRINT(EM_DIAGRAM):   end;
1095151   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1095152   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1095153   +   end;
MPRINT(EM_DIAGRAM):   end;
1095154   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1095155   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1095156   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1095157   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1095158   +   end;
MPRINT(EM_DIAGRAM):   end;
1095159   +end;
MPRINT(EM_DIAGRAM):   end;
1095160   +
1095161   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1095162   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1095163   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1095164   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1095165   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1095166   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1095167   +end;
MPRINT(EM_DIAGRAM):   end;
1095168   +else do;
MPRINT(EM_DIAGRAM):   else do;
1095169   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1095170   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1095171   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1095172   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1095173   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1095174   +   end;
MPRINT(EM_DIAGRAM):   end;
1095175   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1095176   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1095177   +   end;
MPRINT(EM_DIAGRAM):   end;
1095178   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1095179   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1095180   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1095181   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1095182   +   end;
MPRINT(EM_DIAGRAM):   end;
1095183   +end;
MPRINT(EM_DIAGRAM):   end;
1095184   +
1095185   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1095186   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1095187   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1095188   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1095189   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1095190   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1095191   +end;
MPRINT(EM_DIAGRAM):   end;
1095192   +else do;
MPRINT(EM_DIAGRAM):   else do;
1095193   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1095194   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1095195   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1095196   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1095197   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1095198   +   end;
MPRINT(EM_DIAGRAM):   end;
1095199   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1095200   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1095201   +   end;
MPRINT(EM_DIAGRAM):   end;
1095202   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1095203   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1095204   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1095205   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1095206   +   end;
MPRINT(EM_DIAGRAM):   end;
1095207   +end;
MPRINT(EM_DIAGRAM):   end;
1095208   +
1095209   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1095210   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
1095211   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1095212   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1095213   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1095214   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1095215   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1095216   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1095217   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1095218   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1095219   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1095220   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1095221   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1095222   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1095223   +end;
MPRINT(EM_DIAGRAM):   end;
1095224   +else do;
MPRINT(EM_DIAGRAM):   else do;
1095225   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1095226   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1095227   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1095228   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1095229   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1095230   +   end;
MPRINT(EM_DIAGRAM):   end;
1095231   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1095232   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1095233   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1095234   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1095235   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1095236   +   end;
MPRINT(EM_DIAGRAM):   end;
1095237   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1095238   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1095239   +   end;
MPRINT(EM_DIAGRAM):   end;
1095240   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1095241   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1095242   +   end;
MPRINT(EM_DIAGRAM):   end;
1095243   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1095244   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1095245   +   end;
MPRINT(EM_DIAGRAM):   end;
1095246   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1095247   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1095248   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1095249   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1095250   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1095251   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1095252   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1095253   +   end;
MPRINT(EM_DIAGRAM):   end;
1095254   +end;
MPRINT(EM_DIAGRAM):   end;
1095255   +
1095256   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1095257   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1095258   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
1095259   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1095260   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1095261   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1095262   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1095263   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1095264   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1095265   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1095266   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1095267   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1095268   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1095269   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1095270   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1095271   +end;
MPRINT(EM_DIAGRAM):   end;
1095272   +else do;
MPRINT(EM_DIAGRAM):   else do;
1095273   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1095274   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1095275   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1095276   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1095277   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1095278   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1095279   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1095280   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1095281   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1095282   +         end;
MPRINT(EM_DIAGRAM):   end;
1095283   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1095284   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1095285   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1095286   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1095287   +            end;
MPRINT(EM_DIAGRAM):   end;
1095288   +         end;
MPRINT(EM_DIAGRAM):   end;
1095289   +      end;
MPRINT(EM_DIAGRAM):   end;
1095290   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1095291   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1095292   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1095293   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1095294   +         end;
MPRINT(EM_DIAGRAM):   end;
1095295   +      end;
MPRINT(EM_DIAGRAM):   end;
1095296   +   end;
MPRINT(EM_DIAGRAM):   end;
1095297   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1095298   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1095299   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1095300   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1095301   +      end;
MPRINT(EM_DIAGRAM):   end;
1095302   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1095303   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1095304   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1095305   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1095306   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1095307   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1095308   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1095309   +         end;
MPRINT(EM_DIAGRAM):   end;
1095310   +      end;
MPRINT(EM_DIAGRAM):   end;
1095311   +   end;
MPRINT(EM_DIAGRAM):   end;
1095312   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1095313   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1095314   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1095315   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1095316   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1095317   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1095318   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1095319   +   end;
MPRINT(EM_DIAGRAM):   end;
1095320   +end;
MPRINT(EM_DIAGRAM):   end;
1095321   +
1095322   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1095323   +*** Checking missing input Interval
1095324   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1095325   +
1095326   +IF NMISS(
1095327   +   AcceptedCmpTotal ,
1095328   +   Age ,
1095329   +   Frq ,
1095330   +   Income ,
1095331   +   Kidhome ,
1095332   +   MntFishProducts ,
1095333   +   MntFruits ,
1095334   +   MntGoldProds ,
1095335   +   MntSweetProducts ,
1095336   +   MonthsAsCustomer ,
1095337   +   NumDealsPurchases ,
1095338   +   NumWebVisitsMonth ,
1095339   +   RFMstat ,
1095340   +   RMntFrq ,
1095341   +   Recency ,
1095342   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , 
MntFishProducts , MntFruits , MntGoldProds , MntSweetProducts , MonthsAsCustomer , 
NumDealsPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , Teenhome ) THEN DO;
1095343   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1095344   +
1095345   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1095346   +END;
MPRINT(EM_DIAGRAM):   END;
1095347   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1095348   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1095349   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1095350   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1095351   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1095352   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1095353   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1095354   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1095355   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1095356   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1095357   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1095358   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1095359   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1095360   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1095361   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1095362   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1095363   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1095364   +   S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
1095365   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
1095366   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1095367   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1095368   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1095369   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1095370   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1095371   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1095372   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1095373   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1095374   +END;
MPRINT(EM_DIAGRAM):   END;
1095375   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1095376   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1095377   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1095378   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1095379   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1095380   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1095381   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1095382   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1095383   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1095384   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1095385   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1095386   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1095387   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1095388   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1095389   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1095390   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1095391   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1095392   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1095393   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1095394   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1095395   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1095396   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1095397   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1095398   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1095399   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1095400   +   ELSE S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
1095401   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
1095402   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1095403   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1095404   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1095405   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1095406   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1095407   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1095408   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1095409   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1095410   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1095411   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1095412   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1095413   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1095414   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1095415   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1095416   +END;
MPRINT(EM_DIAGRAM):   END;
1095417   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1095418   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1095419   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1095420   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1095421   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1095422   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1095423   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1095424   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1095425   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1095426   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1095427   +   H11  =    -0.05939653438507 * S_AcceptedCmpTotal  +    -0.03097621866927 *
1095428   +        S_Age  +     0.38549836561373 * S_Frq  +     0.04529710170514 *
1095429   +        S_Income  +    -0.29829037747286 * S_Kidhome
1095430   +          +    -0.18720823453547 * S_MntFishProducts
1095431   +          +    -0.21050293648727 * S_MntFruits  +    -0.17024743813518 *
1095432   +        S_MntGoldProds  +     0.06568676148572 * S_MntSweetProducts
1095433   +          +    -0.06646294977493 * S_MonthsAsCustomer
1095434   +          +    -0.37026551859537 * S_NumDealsPurchases
1095435   +          +    -0.14222086870703 * S_NumWebVisitsMonth
1095436   +          +    -0.13771028020173 * S_RFMstat  +    -0.18058593739947 *
1095437   +        S_RMntFrq  +     0.16089693413185 * S_Recency
1095438   +          +    -0.09296281260919 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = -0.05939653438507 * S_AcceptedCmpTotal + -0.03097621866927 * S_Age 
+ 0.38549836561373 * S_Frq + 0.04529710170514 * S_Income + -0.29829037747286 * S_Kidhome + 
-0.18720823453547 * S_MntFishProducts + -0.21050293648727 * S_MntFruits + -0.17024743813518 * 
S_MntGoldProds + 0.06568676148572 * S_MntSweetProducts + -0.06646294977493 * 
S_MonthsAsCustomer + -0.37026551859537 * S_NumDealsPurchases + -0.14222086870703 * 
S_NumWebVisitsMonth + -0.13771028020173 * S_RFMstat + -0.18058593739947 * S_RMntFrq + 
0.16089693413185 * S_Recency + -0.09296281260919 * S_Teenhome ;
1095439   +   H12  =    -1.07525876494597 * S_AcceptedCmpTotal  +     0.17274493487957 *
1095440   +        S_Age  +     1.31699360143525 * S_Frq  +      0.8506314580981 *
1095441   +        S_Income  +    -0.83201267605135 * S_Kidhome
1095442   +          +    -0.09483355610222 * S_MntFishProducts
1095443   +          +    -0.31816096382562 * S_MntFruits  +    -0.18054381770991 *
1095444   +        S_MntGoldProds  +     0.05267776627167 * S_MntSweetProducts
1095445   +          +     0.36008195182034 * S_MonthsAsCustomer
1095446   +          +    -0.13663022832818 * S_NumDealsPurchases
1095447   +          +    -0.43055337001488 * S_NumWebVisitsMonth
1095448   +          +    -0.20985567596746 * S_RFMstat  +     0.29271762840275 *
1095449   +        S_RMntFrq  +    -0.13626348763752 * S_Recency
1095450   +          +    -0.85691575464107 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -1.07525876494597 * S_AcceptedCmpTotal + 0.17274493487957 * S_Age 
+ 1.31699360143525 * S_Frq + 0.8506314580981 * S_Income + -0.83201267605135 * S_Kidhome + 
-0.09483355610222 * S_MntFishProducts + -0.31816096382562 * S_MntFruits + -0.18054381770991 * 
S_MntGoldProds + 0.05267776627167 * S_MntSweetProducts + 0.36008195182034 * S_MonthsAsCustomer 
+ -0.13663022832818 * S_NumDealsPurchases + -0.43055337001488 * S_NumWebVisitsMonth + 
-0.20985567596746 * S_RFMstat + 0.29271762840275 * S_RMntFrq + -0.13626348763752 * S_Recency + 
-0.85691575464107 * S_Teenhome ;
1095451   +   H13  =    -0.17967871499719 * S_AcceptedCmpTotal  +      0.1189238919833 *
1095452   +        S_Age  +      0.2812438420035 * S_Frq  +    -0.19278826529363 *
1095453   +        S_Income  +     0.25780281448124 * S_Kidhome
1095454   +          +     0.04440164182166 * S_MntFishProducts
1095455   +          +     0.04221733494133 * S_MntFruits  +     0.00772772044315 *
1095456   +        S_MntGoldProds  +     0.03211863452879 * S_MntSweetProducts
1095457   +          +     0.11601256317603 * S_MonthsAsCustomer
1095458   +          +    -0.06382091961731 * S_NumDealsPurchases
1095459   +          +    -0.31707488359351 * S_NumWebVisitsMonth
1095460   +          +    -0.03315899689257 * S_RFMstat  +      0.1166714754638 *
1095461   +        S_RMntFrq  +     0.39922359779347 * S_Recency
1095462   +          +     0.12723983872652 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = -0.17967871499719 * S_AcceptedCmpTotal + 0.1189238919833 * S_Age + 
0.2812438420035 * S_Frq + -0.19278826529363 * S_Income + 0.25780281448124 * S_Kidhome + 
0.04440164182166 * S_MntFishProducts + 0.04221733494133 * S_MntFruits + 0.00772772044315 * 
S_MntGoldProds + 0.03211863452879 * S_MntSweetProducts + 0.11601256317603 * S_MonthsAsCustomer 
+ -0.06382091961731 * S_NumDealsPurchases + -0.31707488359351 * S_NumWebVisitsMonth + 
-0.03315899689257 * S_RFMstat + 0.1166714754638 * S_RMntFrq + 0.39922359779347 * S_Recency + 
0.12723983872652 * S_Teenhome ;
1095463   +   H11  = H11  +     1.30972442853005 * AcceptedCmp10
1095464   +          +      -0.107725040763 * AcceptedCmp20  +      0.1632298365033 *
1095465   +        AcceptedCmp30  +    -0.04285993483605 * AcceptedCmp40
1095466   +          +     0.27424410998159 * AcceptedCmp50  +     0.13223002478852 *
1095467   +        Complain0  +       0.148007066302 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 1.30972442853005 * AcceptedCmp10 + -0.107725040763 * 
AcceptedCmp20 + 0.1632298365033 * AcceptedCmp30 + -0.04285993483605 * AcceptedCmp40 + 
0.27424410998159 * AcceptedCmp50 + 0.13223002478852 * Complain0 + 0.148007066302 * 
HigherEducationBinary0 ;
1095468   +   H12  = H12  +     0.43127584437858 * AcceptedCmp10
1095469   +          +    -0.45791405760753 * AcceptedCmp20  +    -0.99939161573095 *
1095470   +        AcceptedCmp30  +    -1.19828550777192 * AcceptedCmp40
1095471   +          +    -0.01213030081313 * AcceptedCmp50  +    -0.13910242772434 *
1095472   +        Complain0  +     0.30067707265993 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.43127584437858 * AcceptedCmp10 + -0.45791405760753 * 
AcceptedCmp20 + -0.99939161573095 * AcceptedCmp30 + -1.19828550777192 * AcceptedCmp40 + 
-0.01213030081313 * AcceptedCmp50 + -0.13910242772434 * Complain0 + 0.30067707265993 * 
HigherEducationBinary0 ;
1095473   +   H13  = H13  +    -0.11762761348562 * AcceptedCmp10
1095474   +          +      0.2189277190916 * AcceptedCmp20  +     0.04353030554468 *
1095475   +        AcceptedCmp30  +    -0.03987223536277 * AcceptedCmp40
1095476   +          +     0.15029448487681 * AcceptedCmp50  +      -0.117886738648 *
1095477   +        Complain0  +    -0.01645100634446 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.11762761348562 * AcceptedCmp10 + 0.2189277190916 * 
AcceptedCmp20 + 0.04353030554468 * AcceptedCmp30 + -0.03987223536277 * AcceptedCmp40 + 
0.15029448487681 * AcceptedCmp50 + -0.117886738648 * Complain0 + -0.01645100634446 * 
HigherEducationBinary0 ;
1095478   +   H11  = H11  +     0.16808351038824 * Education2n_Cycle
1095479   +          +    -0.29249243891567 * EducationBasic  +     0.02800261669472 *
1095480   +        EducationGraduation  +    -0.22350316846433 * EducationMaster
1095481   +          +     0.18754186259114 * Marital_StatusDivorced
1095482   +          +    -0.11988223819284 * Marital_StatusMarried
1095483   +          +    -0.02283707816223 * Marital_StatusSingle
1095484   +          +     -0.1005355792805 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.16808351038824 * Education2n_Cycle + -0.29249243891567 * 
EducationBasic + 0.02800261669472 * EducationGraduation + -0.22350316846433 * EducationMaster 
+ 0.18754186259114 * Marital_StatusDivorced + -0.11988223819284 * Marital_StatusMarried + 
-0.02283707816223 * Marital_StatusSingle + -0.1005355792805 * Marital_StatusTogether ;
1095485   +   H12  = H12  +    -0.12807098247021 * Education2n_Cycle
1095486   +          +     0.23889287012189 * EducationBasic  +     0.10996477979775 *
1095487   +        EducationGraduation  +    -0.24880728981933 * EducationMaster
1095488   +          +    -0.28983318463941 * Marital_StatusDivorced
1095489   +          +    -0.74851149560881 * Marital_StatusMarried
1095490   +          +      0.7618336919202 * Marital_StatusSingle
1095491   +          +    -0.81079042586509 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.12807098247021 * Education2n_Cycle + 0.23889287012189 * 
EducationBasic + 0.10996477979775 * EducationGraduation + -0.24880728981933 * EducationMaster 
+ -0.28983318463941 * Marital_StatusDivorced + -0.74851149560881 * Marital_StatusMarried + 
0.7618336919202 * Marital_StatusSingle + -0.81079042586509 * Marital_StatusTogether ;
1095492   +   H13  = H13  +    -0.26305004071484 * Education2n_Cycle
1095493   +          +     0.28231626292259 * EducationBasic  +    -0.07308832725307 *
1095494   +        EducationGraduation  +     0.20925521527006 * EducationMaster
1095495   +          +    -0.33639004627791 * Marital_StatusDivorced
1095496   +          +     0.12327415586833 * Marital_StatusMarried
1095497   +          +      0.0060971946845 * Marital_StatusSingle
1095498   +          +     0.09875322175475 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.26305004071484 * Education2n_Cycle + 0.28231626292259 * 
EducationBasic + -0.07308832725307 * EducationGraduation + 0.20925521527006 * EducationMaster 
+ -0.33639004627791 * Marital_StatusDivorced + 0.12327415586833 * Marital_StatusMarried + 
0.0060971946845 * Marital_StatusSingle + 0.09875322175475 * Marital_StatusTogether ;
1095499   +   H11  =    -1.17886598743906 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -1.17886598743906 + H11 ;
1095500   +   H12  =    -0.91184279928765 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -0.91184279928765 + H12 ;
1095501   +   H13  =    -0.12019399765604 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.12019399765604 + H13 ;
1095502   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1095503   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1095504   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1095505   +END;
MPRINT(EM_DIAGRAM):   END;
1095506   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1095507   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1095508   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1095509   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1095510   +END;
MPRINT(EM_DIAGRAM):   END;
1095511   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1095512   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1095513   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1095514   +
1095515   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1095516   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1095517   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1095518   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1095519   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1095520   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1095521   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1095522   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1095523   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1095524   +end;
MPRINT(EM_DIAGRAM):   end;
1095525   +else do;
MPRINT(EM_DIAGRAM):   else do;
1095526   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1095527   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1095528   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1095529   +   end;
MPRINT(EM_DIAGRAM):   end;
1095530   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1095531   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1095532   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1095533   +   end;
MPRINT(EM_DIAGRAM):   end;
1095534   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1095535   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1095536   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1095537   +   end;
MPRINT(EM_DIAGRAM):   end;
1095538   +end;
MPRINT(EM_DIAGRAM):   end;
1095539   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1095540   +   P_DepVar1  =    -5.25940615604579 * H11  +     5.20640516145161 * H12
1095541   +          +    -6.47403374532058 * H13 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -5.25940615604579 * H11 + 5.20640516145161 * H12 + 
-6.47403374532058 * H13 ;
1095542   +   P_DepVar1  =    -0.12049819292714 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.12049819292714 + P_DepVar1 ;
1095543   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1095544   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1095545   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1095546   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1095547   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1095548   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1095549   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1095550   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1095551   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1095552   +END;
MPRINT(EM_DIAGRAM):   END;
1095553   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1095554   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1095555   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1095556   +END;
MPRINT(EM_DIAGRAM):   END;
1095557   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1095558   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1095559   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1095560   +END;
MPRINT(EM_DIAGRAM):   END;
1095561   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1095562   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1095563   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1095564   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1095565   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1095566   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1095567   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1095568   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1095569   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1095570   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1095571   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1095572   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1095573   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1095574   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1095575   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1095576   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1095577   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1095578   +END;
MPRINT(EM_DIAGRAM):   END;
1095579   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1095580   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1095581   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1095582   +drop
1095583   +H11
1095584   +H12
1095585   +H13
1095586   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 ;
1095587   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1095588   +* Renaming variables for Neural38;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural38;
1095589   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1095590   +* Renaming Posterior variables for Neural38;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural38;
1095591   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1095592   +drop Neural38_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural38_P_DepVar1;
1095593   +Neural38_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural38_P_DepVar1 = P_DepVar1;
1095594   +drop Neural38_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural38_P_DepVar0;
1095595   +Neural38_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural38_P_DepVar0 = P_DepVar0;
1095596   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1095597   +* Renaming _WARN_ variable for Neural38;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural38;
1095598   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1095599   +length Neural38_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural38_WARN_ $4;
1095600   +drop Neural38_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural38_WARN_;
1095601   +Neural38_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural38_WARN_ = _WARN_;
1095602   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1095603   +* Ensmbl12: Scoring Code of model 7 of 10;
MPRINT(EM_DIAGRAM):   * Ensmbl12: Scoring Code of model 7 of 10;
1095604   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1095605   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1095606   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
1095607   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1095608   +* NODE: Neural40;
MPRINT(EM_DIAGRAM):   * NODE: Neural40;
1095609   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1095610   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1095611   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1095612   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1095613   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1095614   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1095615   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1095616   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1095617   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1095618   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1095619   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1095620   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1095621   +LENGTH _WARN_ $4
1095622   +      F_DepVar  $ 12
1095623   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1095624   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1095625   +
1095626   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1095627   +
1095628   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1095629   +
1095630   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1095631   +
1095632   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1095633   +
1095634   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1095635   +
1095636   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1095637   +
1095638   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1095639   +
1095640   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1095641   +
1095642   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1095643   +
1095644   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1095645   +
1095646   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1095647   +
1095648   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1095649   +
1095650   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1095651   +
1095652   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1095653   +
1095654   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1095655   +
1095656   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1095657   +
1095658   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1095659   +
1095660   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1095661   +
1095662   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1095663   +
1095664   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1095665   +
1095666   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1095667   +
1095668   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1095669   +
1095670   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1095671   +
1095672   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1095673   +
1095674   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1095675   +
1095676   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1095677   +
1095678   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1095679   +
1095680   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1095681   +
1095682   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1095683   +
1095684   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1095685   +
1095686   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1095687   +
1095688   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1095689   +
1095690   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1095691   +
1095692   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1095693   +
1095694   +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
1095695   +
1095696   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1095697   +
1095698   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1095699   +
1095700   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1095701   +
1095702   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1095703   +
1095704   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1095705   +
1095706   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1095707   +
1095708   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1095709   +
1095710   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1095711   +
1095712   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1095713   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1095714   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1095715   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1095716   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1095717   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1095718   +end;
MPRINT(EM_DIAGRAM):   end;
1095719   +else do;
MPRINT(EM_DIAGRAM):   else do;
1095720   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1095721   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1095722   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1095723   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1095724   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1095725   +   end;
MPRINT(EM_DIAGRAM):   end;
1095726   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1095727   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1095728   +   end;
MPRINT(EM_DIAGRAM):   end;
1095729   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1095730   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1095731   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1095732   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1095733   +   end;
MPRINT(EM_DIAGRAM):   end;
1095734   +end;
MPRINT(EM_DIAGRAM):   end;
1095735   +
1095736   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1095737   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1095738   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1095739   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1095740   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1095741   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1095742   +end;
MPRINT(EM_DIAGRAM):   end;
1095743   +else do;
MPRINT(EM_DIAGRAM):   else do;
1095744   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1095745   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1095746   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1095747   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1095748   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1095749   +   end;
MPRINT(EM_DIAGRAM):   end;
1095750   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1095751   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1095752   +   end;
MPRINT(EM_DIAGRAM):   end;
1095753   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1095754   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1095755   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1095756   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1095757   +   end;
MPRINT(EM_DIAGRAM):   end;
1095758   +end;
MPRINT(EM_DIAGRAM):   end;
1095759   +
1095760   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1095761   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1095762   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1095763   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1095764   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1095765   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1095766   +end;
MPRINT(EM_DIAGRAM):   end;
1095767   +else do;
MPRINT(EM_DIAGRAM):   else do;
1095768   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1095769   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1095770   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1095771   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1095772   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1095773   +   end;
MPRINT(EM_DIAGRAM):   end;
1095774   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1095775   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1095776   +   end;
MPRINT(EM_DIAGRAM):   end;
1095777   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1095778   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1095779   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1095780   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1095781   +   end;
MPRINT(EM_DIAGRAM):   end;
1095782   +end;
MPRINT(EM_DIAGRAM):   end;
1095783   +
1095784   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1095785   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1095786   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1095787   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1095788   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1095789   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1095790   +end;
MPRINT(EM_DIAGRAM):   end;
1095791   +else do;
MPRINT(EM_DIAGRAM):   else do;
1095792   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1095793   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1095794   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1095795   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1095796   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1095797   +   end;
MPRINT(EM_DIAGRAM):   end;
1095798   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1095799   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1095800   +   end;
MPRINT(EM_DIAGRAM):   end;
1095801   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1095802   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1095803   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1095804   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1095805   +   end;
MPRINT(EM_DIAGRAM):   end;
1095806   +end;
MPRINT(EM_DIAGRAM):   end;
1095807   +
1095808   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1095809   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1095810   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1095811   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1095812   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1095813   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1095814   +end;
MPRINT(EM_DIAGRAM):   end;
1095815   +else do;
MPRINT(EM_DIAGRAM):   else do;
1095816   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1095817   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1095818   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1095819   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1095820   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1095821   +   end;
MPRINT(EM_DIAGRAM):   end;
1095822   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1095823   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1095824   +   end;
MPRINT(EM_DIAGRAM):   end;
1095825   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1095826   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1095827   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1095828   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1095829   +   end;
MPRINT(EM_DIAGRAM):   end;
1095830   +end;
MPRINT(EM_DIAGRAM):   end;
1095831   +
1095832   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1095833   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1095834   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1095835   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1095836   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1095837   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1095838   +end;
MPRINT(EM_DIAGRAM):   end;
1095839   +else do;
MPRINT(EM_DIAGRAM):   else do;
1095840   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1095841   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1095842   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1095843   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1095844   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1095845   +   end;
MPRINT(EM_DIAGRAM):   end;
1095846   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1095847   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1095848   +   end;
MPRINT(EM_DIAGRAM):   end;
1095849   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1095850   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1095851   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1095852   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1095853   +   end;
MPRINT(EM_DIAGRAM):   end;
1095854   +end;
MPRINT(EM_DIAGRAM):   end;
1095855   +
1095856   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1095857   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1095858   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1095859   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1095860   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1095861   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1095862   +end;
MPRINT(EM_DIAGRAM):   end;
1095863   +else do;
MPRINT(EM_DIAGRAM):   else do;
1095864   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1095865   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1095866   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1095867   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1095868   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1095869   +   end;
MPRINT(EM_DIAGRAM):   end;
1095870   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1095871   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1095872   +   end;
MPRINT(EM_DIAGRAM):   end;
1095873   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1095874   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1095875   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1095876   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1095877   +   end;
MPRINT(EM_DIAGRAM):   end;
1095878   +end;
MPRINT(EM_DIAGRAM):   end;
1095879   +
1095880   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1095881   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
1095882   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1095883   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1095884   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1095885   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1095886   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1095887   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1095888   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1095889   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1095890   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1095891   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1095892   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1095893   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1095894   +end;
MPRINT(EM_DIAGRAM):   end;
1095895   +else do;
MPRINT(EM_DIAGRAM):   else do;
1095896   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1095897   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1095898   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1095899   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1095900   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1095901   +   end;
MPRINT(EM_DIAGRAM):   end;
1095902   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1095903   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1095904   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1095905   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1095906   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1095907   +   end;
MPRINT(EM_DIAGRAM):   end;
1095908   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1095909   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1095910   +   end;
MPRINT(EM_DIAGRAM):   end;
1095911   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1095912   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1095913   +   end;
MPRINT(EM_DIAGRAM):   end;
1095914   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1095915   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1095916   +   end;
MPRINT(EM_DIAGRAM):   end;
1095917   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1095918   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1095919   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1095920   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1095921   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1095922   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1095923   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1095924   +   end;
MPRINT(EM_DIAGRAM):   end;
1095925   +end;
MPRINT(EM_DIAGRAM):   end;
1095926   +
1095927   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1095928   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1095929   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
1095930   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1095931   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1095932   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1095933   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1095934   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1095935   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1095936   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1095937   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1095938   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1095939   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1095940   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1095941   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1095942   +end;
MPRINT(EM_DIAGRAM):   end;
1095943   +else do;
MPRINT(EM_DIAGRAM):   else do;
1095944   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1095945   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1095946   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1095947   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1095948   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1095949   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1095950   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1095951   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1095952   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1095953   +         end;
MPRINT(EM_DIAGRAM):   end;
1095954   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1095955   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1095956   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1095957   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1095958   +            end;
MPRINT(EM_DIAGRAM):   end;
1095959   +         end;
MPRINT(EM_DIAGRAM):   end;
1095960   +      end;
MPRINT(EM_DIAGRAM):   end;
1095961   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1095962   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1095963   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1095964   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1095965   +         end;
MPRINT(EM_DIAGRAM):   end;
1095966   +      end;
MPRINT(EM_DIAGRAM):   end;
1095967   +   end;
MPRINT(EM_DIAGRAM):   end;
1095968   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1095969   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1095970   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1095971   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1095972   +      end;
MPRINT(EM_DIAGRAM):   end;
1095973   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1095974   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1095975   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1095976   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1095977   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1095978   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1095979   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1095980   +         end;
MPRINT(EM_DIAGRAM):   end;
1095981   +      end;
MPRINT(EM_DIAGRAM):   end;
1095982   +   end;
MPRINT(EM_DIAGRAM):   end;
1095983   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1095984   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1095985   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1095986   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1095987   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1095988   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1095989   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1095990   +   end;
MPRINT(EM_DIAGRAM):   end;
1095991   +end;
MPRINT(EM_DIAGRAM):   end;
1095992   +
1095993   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1095994   +*** Checking missing input Interval
1095995   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1095996   +
1095997   +IF NMISS(
1095998   +   AcceptedCmpTotal ,
1095999   +   Age ,
1096000   +   Frq ,
1096001   +   Income ,
1096002   +   Kidhome ,
1096003   +   MntFishProducts ,
1096004   +   MntFruits ,
1096005   +   MntGoldProds ,
1096006   +   MntSweetProducts ,
1096007   +   MonthsAsCustomer ,
1096008   +   NumDealsPurchases ,
1096009   +   NumWebVisitsMonth ,
1096010   +   RFMstat ,
1096011   +   RMntFrq ,
1096012   +   Recency ,
1096013   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , 
MntFishProducts , MntFruits , MntGoldProds , MntSweetProducts , MonthsAsCustomer , 
NumDealsPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , Teenhome ) THEN DO;
1096014   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1096015   +
1096016   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1096017   +END;
MPRINT(EM_DIAGRAM):   END;
1096018   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1096019   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1096020   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1096021   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1096022   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1096023   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1096024   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1096025   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1096026   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1096027   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1096028   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1096029   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1096030   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1096031   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1096032   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1096033   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1096034   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1096035   +   S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
1096036   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
1096037   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1096038   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1096039   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1096040   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1096041   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1096042   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1096043   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1096044   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1096045   +END;
MPRINT(EM_DIAGRAM):   END;
1096046   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1096047   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1096048   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1096049   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1096050   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1096051   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1096052   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1096053   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1096054   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1096055   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1096056   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1096057   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1096058   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1096059   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1096060   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1096061   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1096062   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1096063   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1096064   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1096065   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1096066   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1096067   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1096068   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1096069   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1096070   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1096071   +   ELSE S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
1096072   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
1096073   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1096074   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1096075   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1096076   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1096077   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1096078   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1096079   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1096080   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1096081   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1096082   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1096083   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1096084   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1096085   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1096086   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1096087   +END;
MPRINT(EM_DIAGRAM):   END;
1096088   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1096089   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1096090   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1096091   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1096092   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1096093   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1096094   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1096095   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1096096   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1096097   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1096098   +   H11  =      0.0175934799517 * S_AcceptedCmpTotal  +     0.05885450913465 *
1096099   +        S_Age  +    -0.17194721523787 * S_Frq  +    -0.82356228294539 *
1096100   +        S_Income  +     0.39869341630865 * S_Kidhome
1096101   +          +    -0.04263586382867 * S_MntFishProducts
1096102   +          +     0.02697365132515 * S_MntFruits  +     0.04818007940845 *
1096103   +        S_MntGoldProds  +      0.1933390486387 * S_MntSweetProducts
1096104   +          +    -0.14308588367026 * S_MonthsAsCustomer
1096105   +          +    -0.01053346972758 * S_NumDealsPurchases
1096106   +          +    -0.02308351901024 * S_NumWebVisitsMonth
1096107   +          +     0.00403225397753 * S_RFMstat  +    -0.21691316840182 *
1096108   +        S_RMntFrq  +     0.53938373050534 * S_Recency
1096109   +          +     0.55541282723709 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.0175934799517 * S_AcceptedCmpTotal + 0.05885450913465 * S_Age + 
-0.17194721523787 * S_Frq + -0.82356228294539 * S_Income + 0.39869341630865 * S_Kidhome + 
-0.04263586382867 * S_MntFishProducts + 0.02697365132515 * S_MntFruits + 0.04818007940845 * 
S_MntGoldProds + 0.1933390486387 * S_MntSweetProducts + -0.14308588367026 * S_MonthsAsCustomer 
+ -0.01053346972758 * S_NumDealsPurchases + -0.02308351901024 * S_NumWebVisitsMonth + 
0.00403225397753 * S_RFMstat + -0.21691316840182 * S_RMntFrq + 0.53938373050534 * S_Recency + 
0.55541282723709 * S_Teenhome ;
1096110   +   H12  =    -0.31735811206172 * S_AcceptedCmpTotal  +    -0.13976815294846 *
1096111   +        S_Age  +    -0.11928757030551 * S_Frq  +    -0.03597478449162 *
1096112   +        S_Income  +     0.31514301668626 * S_Kidhome
1096113   +          +    -0.05723808748191 * S_MntFishProducts
1096114   +          +     0.04545715816601 * S_MntFruits  +     0.19006209866265 *
1096115   +        S_MntGoldProds  +     0.34690576354698 * S_MntSweetProducts
1096116   +          +    -0.48738730918684 * S_MonthsAsCustomer
1096117   +          +     0.31545795225489 * S_NumDealsPurchases
1096118   +          +     0.24686603252864 * S_NumWebVisitsMonth
1096119   +          +     0.29857007170218 * S_RFMstat  +    -0.01009427724752 *
1096120   +        S_RMntFrq  +    -0.48894693883774 * S_Recency
1096121   +          +    -0.32384426712368 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -0.31735811206172 * S_AcceptedCmpTotal + -0.13976815294846 * S_Age 
+ -0.11928757030551 * S_Frq + -0.03597478449162 * S_Income + 0.31514301668626 * S_Kidhome + 
-0.05723808748191 * S_MntFishProducts + 0.04545715816601 * S_MntFruits + 0.19006209866265 * 
S_MntGoldProds + 0.34690576354698 * S_MntSweetProducts + -0.48738730918684 * 
S_MonthsAsCustomer + 0.31545795225489 * S_NumDealsPurchases + 0.24686603252864 * 
S_NumWebVisitsMonth + 0.29857007170218 * S_RFMstat + -0.01009427724752 * S_RMntFrq + 
-0.48894693883774 * S_Recency + -0.32384426712368 * S_Teenhome ;
1096122   +   H13  =    -0.67705794412683 * S_AcceptedCmpTotal  +     -0.1538815804864 *
1096123   +        S_Age  +    -0.32580272740463 * S_Frq  +    -0.42829033761305 *
1096124   +        S_Income  +    -0.48452563006855 * S_Kidhome
1096125   +          +      0.1638851163007 * S_MntFishProducts
1096126   +          +      0.0664068987141 * S_MntFruits  +    -0.54942999951449 *
1096127   +        S_MntGoldProds  +    -0.03119903843323 * S_MntSweetProducts
1096128   +          +    -0.09008316729574 * S_MonthsAsCustomer
1096129   +          +    -0.45452883452999 * S_NumDealsPurchases
1096130   +          +    -0.51499533680205 * S_NumWebVisitsMonth
1096131   +          +    -0.31380282266424 * S_RFMstat  +    -0.49525143192723 *
1096132   +        S_RMntFrq  +     0.78729387300328 * S_Recency
1096133   +          +    -0.00915408985389 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = -0.67705794412683 * S_AcceptedCmpTotal + -0.1538815804864 * S_Age 
+ -0.32580272740463 * S_Frq + -0.42829033761305 * S_Income + -0.48452563006855 * S_Kidhome + 
0.1638851163007 * S_MntFishProducts + 0.0664068987141 * S_MntFruits + -0.54942999951449 * 
S_MntGoldProds + -0.03119903843323 * S_MntSweetProducts + -0.09008316729574 * 
S_MonthsAsCustomer + -0.45452883452999 * S_NumDealsPurchases + -0.51499533680205 * 
S_NumWebVisitsMonth + -0.31380282266424 * S_RFMstat + -0.49525143192723 * S_RMntFrq + 
0.78729387300328 * S_Recency + -0.00915408985389 * S_Teenhome ;
1096134   +   H14  =     0.38318271090494 * S_AcceptedCmpTotal  +     0.06739638561066 *
1096135   +        S_Age  +     0.06912614028701 * S_Frq  +     0.14095220260271 *
1096136   +        S_Income  +    -0.62959343200613 * S_Kidhome
1096137   +          +    -0.08953561593231 * S_MntFishProducts
1096138   +          +    -0.17218233364246 * S_MntFruits  +    -0.00637076803669 *
1096139   +        S_MntGoldProds  +    -0.30194599011284 * S_MntSweetProducts
1096140   +          +    -0.04786752357029 * S_MonthsAsCustomer
1096141   +          +     0.01658790214447 * S_NumDealsPurchases
1096142   +          +     0.60508225698649 * S_NumWebVisitsMonth
1096143   +          +     0.24353060507938 * S_RFMstat  +    -0.16860031884486 *
1096144   +        S_RMntFrq  +    -0.74371082820398 * S_Recency
1096145   +          +    -0.33551735128078 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = 0.38318271090494 * S_AcceptedCmpTotal + 0.06739638561066 * S_Age + 
0.06912614028701 * S_Frq + 0.14095220260271 * S_Income + -0.62959343200613 * S_Kidhome + 
-0.08953561593231 * S_MntFishProducts + -0.17218233364246 * S_MntFruits + -0.00637076803669 * 
S_MntGoldProds + -0.30194599011284 * S_MntSweetProducts + -0.04786752357029 * 
S_MonthsAsCustomer + 0.01658790214447 * S_NumDealsPurchases + 0.60508225698649 * 
S_NumWebVisitsMonth + 0.24353060507938 * S_RFMstat + -0.16860031884486 * S_RMntFrq + 
-0.74371082820398 * S_Recency + -0.33551735128078 * S_Teenhome ;
1096146   +   H15  =    -0.33857166416401 * S_AcceptedCmpTotal  +     0.16520608022036 *
1096147   +        S_Age  +     0.94641603263172 * S_Frq  +     0.27973805141234 *
1096148   +        S_Income  +    -0.02417847760857 * S_Kidhome
1096149   +          +    -0.15499190740194 * S_MntFishProducts
1096150   +          +     0.06053779821593 * S_MntFruits  +     0.01880479324025 *
1096151   +        S_MntGoldProds  +    -0.12339726666832 * S_MntSweetProducts
1096152   +          +     0.03507116553703 * S_MonthsAsCustomer
1096153   +          +    -0.55190381693021 * S_NumDealsPurchases
1096154   +          +    -0.59332657995985 * S_NumWebVisitsMonth
1096155   +          +    -0.06593374840561 * S_RFMstat  +     -0.1695910963416 *
1096156   +        S_RMntFrq  +     0.67557246434122 * S_Recency
1096157   +          +    -0.18658362303394 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H15 = -0.33857166416401 * S_AcceptedCmpTotal + 0.16520608022036 * S_Age 
+ 0.94641603263172 * S_Frq + 0.27973805141234 * S_Income + -0.02417847760857 * S_Kidhome + 
-0.15499190740194 * S_MntFishProducts + 0.06053779821593 * S_MntFruits + 0.01880479324025 * 
S_MntGoldProds + -0.12339726666832 * S_MntSweetProducts + 0.03507116553703 * 
S_MonthsAsCustomer + -0.55190381693021 * S_NumDealsPurchases + -0.59332657995985 * 
S_NumWebVisitsMonth + -0.06593374840561 * S_RFMstat + -0.1695910963416 * S_RMntFrq + 
0.67557246434122 * S_Recency + -0.18658362303394 * S_Teenhome ;
1096158   +   H11  = H11  +     0.33421746514492 * AcceptedCmp10
1096159   +          +     0.40665603760529 * AcceptedCmp20  +     0.31091046539166 *
1096160   +        AcceptedCmp30  +     0.31067810471417 * AcceptedCmp40
1096161   +          +     0.23230606314386 * AcceptedCmp50  +     0.16336773428886 *
1096162   +        Complain0  +    -0.30987882500611 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.33421746514492 * AcceptedCmp10 + 0.40665603760529 * 
AcceptedCmp20 + 0.31091046539166 * AcceptedCmp30 + 0.31067810471417 * AcceptedCmp40 + 
0.23230606314386 * AcceptedCmp50 + 0.16336773428886 * Complain0 + -0.30987882500611 * 
HigherEducationBinary0 ;
1096163   +   H12  = H12  +     0.15837463939449 * AcceptedCmp10
1096164   +          +    -0.01452684677445 * AcceptedCmp20  +    -0.18194082864383 *
1096165   +        AcceptedCmp30  +     0.10656170173016 * AcceptedCmp40
1096166   +          +     0.27710912124072 * AcceptedCmp50  +     0.21438736172214 *
1096167   +        Complain0  +      0.2669951422121 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.15837463939449 * AcceptedCmp10 + -0.01452684677445 * 
AcceptedCmp20 + -0.18194082864383 * AcceptedCmp30 + 0.10656170173016 * AcceptedCmp40 + 
0.27710912124072 * AcceptedCmp50 + 0.21438736172214 * Complain0 + 0.2669951422121 * 
HigherEducationBinary0 ;
1096168   +   H13  = H13  +    -0.11101425179048 * AcceptedCmp10
1096169   +          +    -0.13751555879468 * AcceptedCmp20  +     0.15733527433639 *
1096170   +        AcceptedCmp30  +    -0.09214109408136 * AcceptedCmp40
1096171   +          +     0.20478673178439 * AcceptedCmp50  +    -0.28890027497717 *
1096172   +        Complain0  +     0.12242984309847 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.11101425179048 * AcceptedCmp10 + -0.13751555879468 * 
AcceptedCmp20 + 0.15733527433639 * AcceptedCmp30 + -0.09214109408136 * AcceptedCmp40 + 
0.20478673178439 * AcceptedCmp50 + -0.28890027497717 * Complain0 + 0.12242984309847 * 
HigherEducationBinary0 ;
1096173   +   H14  = H14  +     0.23187291622457 * AcceptedCmp10
1096174   +          +    -0.00683976547266 * AcceptedCmp20  +    -0.31710598764248 *
1096175   +        AcceptedCmp30  +     0.01758514221597 * AcceptedCmp40
1096176   +          +     0.01100509244187 * AcceptedCmp50  +     0.18584999296157 *
1096177   +        Complain0  +     0.02524550049258 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.23187291622457 * AcceptedCmp10 + -0.00683976547266 * 
AcceptedCmp20 + -0.31710598764248 * AcceptedCmp30 + 0.01758514221597 * AcceptedCmp40 + 
0.01100509244187 * AcceptedCmp50 + 0.18584999296157 * Complain0 + 0.02524550049258 * 
HigherEducationBinary0 ;
1096178   +   H15  = H15  +     0.53220831693924 * AcceptedCmp10
1096179   +          +     0.01983211122446 * AcceptedCmp20  +      0.4704897795251 *
1096180   +        AcceptedCmp30  +    -0.05798671810245 * AcceptedCmp40
1096181   +          +      0.2900384423652 * AcceptedCmp50  +     0.05796705496261 *
1096182   +        Complain0  +     0.17745347141736 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.53220831693924 * AcceptedCmp10 + 0.01983211122446 * 
AcceptedCmp20 + 0.4704897795251 * AcceptedCmp30 + -0.05798671810245 * AcceptedCmp40 + 
0.2900384423652 * AcceptedCmp50 + 0.05796705496261 * Complain0 + 0.17745347141736 * 
HigherEducationBinary0 ;
1096183   +   H11  = H11  +     0.02871001640043 * Education2n_Cycle
1096184   +          +    -0.13470776546868 * EducationBasic  +    -0.09722995474504 *
1096185   +        EducationGraduation  +     0.23764107317064 * EducationMaster
1096186   +          +    -0.41654638301737 * Marital_StatusDivorced
1096187   +          +     0.65956207700583 * Marital_StatusMarried
1096188   +          +    -0.52573042887166 * Marital_StatusSingle
1096189   +          +     0.70466028872575 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.02871001640043 * Education2n_Cycle + -0.13470776546868 * 
EducationBasic + -0.09722995474504 * EducationGraduation + 0.23764107317064 * EducationMaster 
+ -0.41654638301737 * Marital_StatusDivorced + 0.65956207700583 * Marital_StatusMarried + 
-0.52573042887166 * Marital_StatusSingle + 0.70466028872575 * Marital_StatusTogether ;
1096190   +   H12  = H12  +    -0.18219729356622 * Education2n_Cycle
1096191   +          +    -0.04034334204744 * EducationBasic  +     0.26266153233615 *
1096192   +        EducationGraduation  +     0.04617834975571 * EducationMaster
1096193   +          +    -0.32313846862799 * Marital_StatusDivorced
1096194   +          +     0.15910539009887 * Marital_StatusMarried
1096195   +          +     0.28781821946114 * Marital_StatusSingle
1096196   +          +    -0.31451367898445 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.18219729356622 * Education2n_Cycle + -0.04034334204744 * 
EducationBasic + 0.26266153233615 * EducationGraduation + 0.04617834975571 * EducationMaster + 
-0.32313846862799 * Marital_StatusDivorced + 0.15910539009887 * Marital_StatusMarried + 
0.28781821946114 * Marital_StatusSingle + -0.31451367898445 * Marital_StatusTogether ;
1096197   +   H13  = H13  +     0.03267721493849 * Education2n_Cycle
1096198   +          +     0.16906837093601 * EducationBasic  +    -0.24874822218195 *
1096199   +        EducationGraduation  +    -0.16815820019721 * EducationMaster
1096200   +          +    -0.06481096024989 * Marital_StatusDivorced
1096201   +          +    -0.01184060710261 * Marital_StatusMarried
1096202   +          +    -0.04932258474026 * Marital_StatusSingle
1096203   +          +     -0.1515388053958 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.03267721493849 * Education2n_Cycle + 0.16906837093601 * 
EducationBasic + -0.24874822218195 * EducationGraduation + -0.16815820019721 * EducationMaster 
+ -0.06481096024989 * Marital_StatusDivorced + -0.01184060710261 * Marital_StatusMarried + 
-0.04932258474026 * Marital_StatusSingle + -0.1515388053958 * Marital_StatusTogether ;
1096204   +   H14  = H14  +     0.04382537081818 * Education2n_Cycle
1096205   +          +     0.09896945976445 * EducationBasic  +      0.2410849324915 *
1096206   +        EducationGraduation  +    -0.17878202935912 * EducationMaster
1096207   +          +      0.2062190716357 * Marital_StatusDivorced
1096208   +          +      -0.523160668609 * Marital_StatusMarried
1096209   +          +     0.50687401816278 * Marital_StatusSingle
1096210   +          +    -0.14896192891933 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.04382537081818 * Education2n_Cycle + 0.09896945976445 * 
EducationBasic + 0.2410849324915 * EducationGraduation + -0.17878202935912 * EducationMaster + 
0.2062190716357 * Marital_StatusDivorced + -0.523160668609 * Marital_StatusMarried + 
0.50687401816278 * Marital_StatusSingle + -0.14896192891933 * Marital_StatusTogether ;
1096211   +   H15  = H15  +    -0.08178258730533 * Education2n_Cycle
1096212   +          +      0.2352291498146 * EducationBasic  +     0.00142061419661 *
1096213   +        EducationGraduation  +      0.0248100493803 * EducationMaster
1096214   +          +     -0.1386176879533 * Marital_StatusDivorced
1096215   +          +    -0.17611433777439 * Marital_StatusMarried
1096216   +          +     0.09908348348999 * Marital_StatusSingle
1096217   +          +     0.03642332762739 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + -0.08178258730533 * Education2n_Cycle + 0.2352291498146 * 
EducationBasic + 0.00142061419661 * EducationGraduation + 0.0248100493803 * EducationMaster + 
-0.1386176879533 * Marital_StatusDivorced + -0.17611433777439 * Marital_StatusMarried + 
0.09908348348999 * Marital_StatusSingle + 0.03642332762739 * Marital_StatusTogether ;
1096218   +   H11  =     0.45628072516851 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 0.45628072516851 + H11 ;
1096219   +   H12  =    -0.95695553300305 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -0.95695553300305 + H12 ;
1096220   +   H13  =    -0.44156518168947 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.44156518168947 + H13 ;
1096221   +   H14  =      0.5435213841731 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 0.5435213841731 + H14 ;
1096222   +   H15  =     0.82816554742793 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = 0.82816554742793 + H15 ;
1096223   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1096224   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1096225   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1096226   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1096227   +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
1096228   +END;
MPRINT(EM_DIAGRAM):   END;
1096229   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1096230   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1096231   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1096232   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1096233   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1096234   +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
1096235   +END;
MPRINT(EM_DIAGRAM):   END;
1096236   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1096237   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1096238   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1096239   +
1096240   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1096241   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1096242   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1096243   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1096244   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1096245   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1096246   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1096247   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1096248   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1096249   +end;
MPRINT(EM_DIAGRAM):   end;
1096250   +else do;
MPRINT(EM_DIAGRAM):   else do;
1096251   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1096252   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1096253   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1096254   +   end;
MPRINT(EM_DIAGRAM):   end;
1096255   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1096256   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1096257   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1096258   +   end;
MPRINT(EM_DIAGRAM):   end;
1096259   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1096260   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1096261   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1096262   +   end;
MPRINT(EM_DIAGRAM):   end;
1096263   +end;
MPRINT(EM_DIAGRAM):   end;
1096264   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1096265   +   P_DepVar1  =    -3.08501570662701 * H11  +     0.89180279281701 * H12
1096266   +          +    -2.65199906073292 * H13  +     1.47191997336768 * H14
1096267   +          +     -1.9303334635002 * H15 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.08501570662701 * H11 + 0.89180279281701 * H12 + 
-2.65199906073292 * H13 + 1.47191997336768 * H14 + -1.9303334635002 * H15 ;
1096268   +   P_DepVar1  =    -1.84416627670626 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.84416627670626 + P_DepVar1 ;
1096269   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1096270   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1096271   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1096272   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1096273   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1096274   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1096275   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1096276   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1096277   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1096278   +END;
MPRINT(EM_DIAGRAM):   END;
1096279   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1096280   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1096281   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1096282   +END;
MPRINT(EM_DIAGRAM):   END;
1096283   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1096284   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1096285   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1096286   +END;
MPRINT(EM_DIAGRAM):   END;
1096287   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1096288   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1096289   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1096290   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1096291   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1096292   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1096293   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1096294   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1096295   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1096296   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1096297   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1096298   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1096299   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1096300   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1096301   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1096302   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1096303   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1096304   +END;
MPRINT(EM_DIAGRAM):   END;
1096305   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1096306   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1096307   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1096308   +drop
1096309   +H11
1096310   +H12
1096311   +H13
1096312   +H14
1096313   +H15
1096314   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 ;
1096315   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1096316   +* Renaming variables for Neural40;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural40;
1096317   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1096318   +* Renaming Posterior variables for Neural40;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural40;
1096319   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1096320   +drop Neural40_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural40_P_DepVar1;
1096321   +Neural40_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural40_P_DepVar1 = P_DepVar1;
1096322   +drop Neural40_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural40_P_DepVar0;
1096323   +Neural40_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural40_P_DepVar0 = P_DepVar0;
1096324   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1096325   +* Renaming _WARN_ variable for Neural40;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural40;
1096326   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1096327   +length Neural40_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural40_WARN_ $4;
1096328   +drop Neural40_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural40_WARN_;
1096329   +Neural40_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural40_WARN_ = _WARN_;
1096330   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1096331   +* Ensmbl12: Scoring Code of model 8 of 10;
MPRINT(EM_DIAGRAM):   * Ensmbl12: Scoring Code of model 8 of 10;
1096332   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1096333   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1096334   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
1096335   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1096336   +* NODE: Neural41;
MPRINT(EM_DIAGRAM):   * NODE: Neural41;
1096337   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1096338   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1096339   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1096340   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1096341   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1096342   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1096343   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1096344   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1096345   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1096346   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1096347   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1096348   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1096349   +LENGTH _WARN_ $4
1096350   +      F_DepVar  $ 12
1096351   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1096352   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1096353   +
1096354   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1096355   +
1096356   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1096357   +
1096358   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1096359   +
1096360   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1096361   +
1096362   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1096363   +
1096364   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1096365   +
1096366   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1096367   +
1096368   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1096369   +
1096370   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1096371   +
1096372   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1096373   +
1096374   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1096375   +
1096376   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1096377   +
1096378   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1096379   +
1096380   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1096381   +
1096382   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1096383   +
1096384   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1096385   +
1096386   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1096387   +
1096388   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
The SAS System

MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1096389   +
1096390   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1096391   +
1096392   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1096393   +
1096394   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1096395   +
1096396   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1096397   +
1096398   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1096399   +
1096400   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1096401   +
1096402   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1096403   +
1096404   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1096405   +
1096406   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1096407   +
1096408   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1096409   +
1096410   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1096411   +
1096412   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1096413   +
1096414   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1096415   +
1096416   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1096417   +
1096418   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1096419   +
1096420   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1096421   +
1096422   +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
1096423   +
1096424   +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
1096425   +
1096426   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1096427   +
1096428   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1096429   +
1096430   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1096431   +
1096432   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1096433   +
1096434   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1096435   +
1096436   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1096437   +
1096438   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1096439   +
1096440   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1096441   +
1096442   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1096443   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1096444   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1096445   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1096446   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1096447   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1096448   +end;
MPRINT(EM_DIAGRAM):   end;
1096449   +else do;
MPRINT(EM_DIAGRAM):   else do;
1096450   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1096451   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1096452   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1096453   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1096454   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1096455   +   end;
MPRINT(EM_DIAGRAM):   end;
1096456   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1096457   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1096458   +   end;
MPRINT(EM_DIAGRAM):   end;
1096459   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1096460   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1096461   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1096462   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1096463   +   end;
MPRINT(EM_DIAGRAM):   end;
1096464   +end;
MPRINT(EM_DIAGRAM):   end;
1096465   +
1096466   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1096467   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1096468   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1096469   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1096470   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1096471   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1096472   +end;
MPRINT(EM_DIAGRAM):   end;
1096473   +else do;
MPRINT(EM_DIAGRAM):   else do;
1096474   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1096475   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1096476   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1096477   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1096478   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1096479   +   end;
MPRINT(EM_DIAGRAM):   end;
1096480   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1096481   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1096482   +   end;
MPRINT(EM_DIAGRAM):   end;
1096483   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1096484   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1096485   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1096486   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1096487   +   end;
MPRINT(EM_DIAGRAM):   end;
1096488   +end;
MPRINT(EM_DIAGRAM):   end;
1096489   +
1096490   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1096491   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1096492   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1096493   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1096494   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1096495   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1096496   +end;
MPRINT(EM_DIAGRAM):   end;
1096497   +else do;
MPRINT(EM_DIAGRAM):   else do;
1096498   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1096499   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1096500   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1096501   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1096502   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1096503   +   end;
MPRINT(EM_DIAGRAM):   end;
1096504   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1096505   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1096506   +   end;
MPRINT(EM_DIAGRAM):   end;
1096507   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1096508   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1096509   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1096510   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1096511   +   end;
MPRINT(EM_DIAGRAM):   end;
1096512   +end;
MPRINT(EM_DIAGRAM):   end;
1096513   +
1096514   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1096515   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1096516   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1096517   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1096518   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1096519   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1096520   +end;
MPRINT(EM_DIAGRAM):   end;
1096521   +else do;
MPRINT(EM_DIAGRAM):   else do;
1096522   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1096523   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1096524   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1096525   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1096526   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1096527   +   end;
MPRINT(EM_DIAGRAM):   end;
1096528   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1096529   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1096530   +   end;
MPRINT(EM_DIAGRAM):   end;
1096531   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1096532   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1096533   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1096534   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1096535   +   end;
MPRINT(EM_DIAGRAM):   end;
1096536   +end;
MPRINT(EM_DIAGRAM):   end;
1096537   +
1096538   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1096539   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1096540   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1096541   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1096542   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1096543   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1096544   +end;
MPRINT(EM_DIAGRAM):   end;
1096545   +else do;
MPRINT(EM_DIAGRAM):   else do;
1096546   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1096547   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1096548   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1096549   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1096550   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1096551   +   end;
MPRINT(EM_DIAGRAM):   end;
1096552   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1096553   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1096554   +   end;
MPRINT(EM_DIAGRAM):   end;
1096555   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1096556   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1096557   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1096558   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1096559   +   end;
MPRINT(EM_DIAGRAM):   end;
1096560   +end;
MPRINT(EM_DIAGRAM):   end;
1096561   +
1096562   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1096563   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1096564   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1096565   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1096566   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1096567   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1096568   +end;
MPRINT(EM_DIAGRAM):   end;
1096569   +else do;
MPRINT(EM_DIAGRAM):   else do;
1096570   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1096571   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1096572   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1096573   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1096574   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1096575   +   end;
MPRINT(EM_DIAGRAM):   end;
1096576   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1096577   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1096578   +   end;
MPRINT(EM_DIAGRAM):   end;
1096579   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1096580   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1096581   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1096582   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1096583   +   end;
MPRINT(EM_DIAGRAM):   end;
1096584   +end;
MPRINT(EM_DIAGRAM):   end;
1096585   +
1096586   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1096587   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1096588   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1096589   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1096590   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1096591   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1096592   +end;
MPRINT(EM_DIAGRAM):   end;
1096593   +else do;
MPRINT(EM_DIAGRAM):   else do;
1096594   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1096595   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1096596   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1096597   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1096598   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1096599   +   end;
MPRINT(EM_DIAGRAM):   end;
1096600   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1096601   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1096602   +   end;
MPRINT(EM_DIAGRAM):   end;
1096603   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1096604   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1096605   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1096606   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1096607   +   end;
MPRINT(EM_DIAGRAM):   end;
1096608   +end;
MPRINT(EM_DIAGRAM):   end;
1096609   +
1096610   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1096611   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
1096612   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1096613   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1096614   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1096615   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1096616   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1096617   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1096618   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1096619   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1096620   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1096621   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1096622   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1096623   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1096624   +end;
MPRINT(EM_DIAGRAM):   end;
1096625   +else do;
MPRINT(EM_DIAGRAM):   else do;
1096626   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1096627   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1096628   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1096629   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1096630   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1096631   +   end;
MPRINT(EM_DIAGRAM):   end;
1096632   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1096633   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1096634   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1096635   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1096636   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1096637   +   end;
MPRINT(EM_DIAGRAM):   end;
1096638   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1096639   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1096640   +   end;
MPRINT(EM_DIAGRAM):   end;
1096641   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1096642   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1096643   +   end;
MPRINT(EM_DIAGRAM):   end;
1096644   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1096645   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1096646   +   end;
MPRINT(EM_DIAGRAM):   end;
1096647   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1096648   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1096649   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1096650   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1096651   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1096652   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1096653   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1096654   +   end;
MPRINT(EM_DIAGRAM):   end;
1096655   +end;
MPRINT(EM_DIAGRAM):   end;
1096656   +
1096657   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1096658   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1096659   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
1096660   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1096661   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1096662   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1096663   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1096664   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1096665   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1096666   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1096667   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1096668   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1096669   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1096670   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1096671   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1096672   +end;
MPRINT(EM_DIAGRAM):   end;
1096673   +else do;
MPRINT(EM_DIAGRAM):   else do;
1096674   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1096675   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1096676   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1096677   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1096678   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1096679   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1096680   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1096681   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1096682   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1096683   +         end;
MPRINT(EM_DIAGRAM):   end;
1096684   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1096685   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1096686   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1096687   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1096688   +            end;
MPRINT(EM_DIAGRAM):   end;
1096689   +         end;
MPRINT(EM_DIAGRAM):   end;
1096690   +      end;
MPRINT(EM_DIAGRAM):   end;
1096691   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1096692   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1096693   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1096694   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1096695   +         end;
MPRINT(EM_DIAGRAM):   end;
1096696   +      end;
MPRINT(EM_DIAGRAM):   end;
1096697   +   end;
MPRINT(EM_DIAGRAM):   end;
1096698   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1096699   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1096700   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1096701   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1096702   +      end;
MPRINT(EM_DIAGRAM):   end;
1096703   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1096704   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1096705   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1096706   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1096707   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1096708   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1096709   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1096710   +         end;
MPRINT(EM_DIAGRAM):   end;
1096711   +      end;
MPRINT(EM_DIAGRAM):   end;
1096712   +   end;
MPRINT(EM_DIAGRAM):   end;
1096713   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1096714   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1096715   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1096716   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1096717   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1096718   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1096719   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1096720   +   end;
MPRINT(EM_DIAGRAM):   end;
1096721   +end;
MPRINT(EM_DIAGRAM):   end;
1096722   +
1096723   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1096724   +*** Checking missing input Interval
1096725   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1096726   +
1096727   +IF NMISS(
1096728   +   AcceptedCmpTotal ,
1096729   +   Age ,
1096730   +   Frq ,
1096731   +   Income ,
1096732   +   Kidhome ,
1096733   +   MntFishProducts ,
1096734   +   MntFruits ,
1096735   +   MntGoldProds ,
1096736   +   MntSweetProducts ,
1096737   +   MonthsAsCustomer ,
1096738   +   NumDealsPurchases ,
1096739   +   NumWebVisitsMonth ,
1096740   +   RFMstat ,
1096741   +   RMntFrq ,
1096742   +   Recency ,
1096743   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , 
MntFishProducts , MntFruits , MntGoldProds , MntSweetProducts , MonthsAsCustomer , 
NumDealsPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , Teenhome ) THEN DO;
1096744   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1096745   +
1096746   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1096747   +END;
MPRINT(EM_DIAGRAM):   END;
1096748   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1096749   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1096750   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1096751   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1096752   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1096753   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1096754   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1096755   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1096756   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1096757   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1096758   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1096759   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1096760   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1096761   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1096762   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1096763   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1096764   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1096765   +   S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
1096766   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
1096767   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1096768   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1096769   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1096770   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1096771   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1096772   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1096773   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1096774   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1096775   +END;
MPRINT(EM_DIAGRAM):   END;
1096776   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1096777   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1096778   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1096779   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1096780   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1096781   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1096782   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1096783   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1096784   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1096785   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1096786   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1096787   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1096788   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1096789   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1096790   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1096791   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1096792   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1096793   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1096794   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1096795   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1096796   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1096797   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1096798   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1096799   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1096800   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1096801   +   ELSE S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
1096802   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
1096803   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1096804   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1096805   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1096806   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1096807   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1096808   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1096809   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1096810   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1096811   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1096812   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1096813   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1096814   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1096815   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1096816   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1096817   +END;
MPRINT(EM_DIAGRAM):   END;
1096818   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1096819   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1096820   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1096821   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1096822   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1096823   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1096824   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1096825   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1096826   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1096827   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1096828   +   H11  =     0.00008202203841 * S_AcceptedCmpTotal  +    -0.13126483592154 *
1096829   +        S_Age  +    -0.18503379491116 * S_Frq  +      0.0037482920266 *
1096830   +        S_Income  +    -0.52684337240504 * S_Kidhome
1096831   +          +     0.07835956947085 * S_MntFishProducts
1096832   +          +    -0.04668308882455 * S_MntFruits  +     0.05311471984852 *
1096833   +        S_MntGoldProds  +    -0.39576933150762 * S_MntSweetProducts
1096834   +          +    -0.44463888327841 * S_MonthsAsCustomer
1096835   +          +    -0.20310227710644 * S_NumDealsPurchases
1096836   +          +     0.06594467408568 * S_NumWebVisitsMonth
1096837   +          +      0.1351556470497 * S_RFMstat  +    -0.29446460505048 *
1096838   +        S_RMntFrq  +    -0.68878207173764 * S_Recency
1096839   +          +    -0.29241927123525 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.00008202203841 * S_AcceptedCmpTotal + -0.13126483592154 * S_Age 
+ -0.18503379491116 * S_Frq + 0.0037482920266 * S_Income + -0.52684337240504 * S_Kidhome + 
0.07835956947085 * S_MntFishProducts + -0.04668308882455 * S_MntFruits + 0.05311471984852 * 
S_MntGoldProds + -0.39576933150762 * S_MntSweetProducts + -0.44463888327841 * 
S_MonthsAsCustomer + -0.20310227710644 * S_NumDealsPurchases + 0.06594467408568 * 
S_NumWebVisitsMonth + 0.1351556470497 * S_RFMstat + -0.29446460505048 * S_RMntFrq + 
-0.68878207173764 * S_Recency + -0.29241927123525 * S_Teenhome ;
1096840   +   H12  =     0.38864749644126 * S_AcceptedCmpTotal  +    -0.01077611135972 *
1096841   +        S_Age  +     0.24187074268223 * S_Frq  +     0.64180191864108 *
1096842   +        S_Income  +     0.91025818069308 * S_Kidhome
1096843   +          +     0.26585860774761 * S_MntFishProducts
1096844   +          +     -0.3087386188037 * S_MntFruits  +     0.14643568534568 *
1096845   +        S_MntGoldProds  +     0.23763200275034 * S_MntSweetProducts
1096846   +          +    -0.12421403342454 * S_MonthsAsCustomer
1096847   +          +     0.66931066909347 * S_NumDealsPurchases
1096848   +          +     0.35050056776957 * S_NumWebVisitsMonth
1096849   +          +     0.16127659142199 * S_RFMstat  +     0.04112742589329 *
1096850   +        S_RMntFrq  +    -0.83075146355987 * S_Recency
1096851   +          +    -0.37723917156575 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = 0.38864749644126 * S_AcceptedCmpTotal + -0.01077611135972 * S_Age 
+ 0.24187074268223 * S_Frq + 0.64180191864108 * S_Income + 0.91025818069308 * S_Kidhome + 
0.26585860774761 * S_MntFishProducts + -0.3087386188037 * S_MntFruits + 0.14643568534568 * 
S_MntGoldProds + 0.23763200275034 * S_MntSweetProducts + -0.12421403342454 * 
S_MonthsAsCustomer + 0.66931066909347 * S_NumDealsPurchases + 0.35050056776957 * 
S_NumWebVisitsMonth + 0.16127659142199 * S_RFMstat + 0.04112742589329 * S_RMntFrq + 
-0.83075146355987 * S_Recency + -0.37723917156575 * S_Teenhome ;
1096852   +   H13  =     0.02339384767281 * S_AcceptedCmpTotal  +    -0.17700567590774 *
1096853   +        S_Age  +    -0.38060509731554 * S_Frq  +    -0.86026143079344 *
1096854   +        S_Income  +     0.63027536562783 * S_Kidhome
1096855   +          +     0.15303249164566 * S_MntFishProducts
1096856   +          +    -0.04780128957622 * S_MntFruits  +    -0.02064261038049 *
1096857   +        S_MntGoldProds  +     0.26238383938455 * S_MntSweetProducts
1096858   +          +    -0.21006970062531 * S_MonthsAsCustomer
1096859   +          +      0.2955774677605 * S_NumDealsPurchases
1096860   +          +    -0.15769947513958 * S_NumWebVisitsMonth
1096861   +          +    -0.02874776268384 * S_RFMstat  +     -0.3955429869434 *
1096862   +        S_RMntFrq  +      0.3744122250079 * S_Recency
1096863   +          +     0.58295521976226 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = 0.02339384767281 * S_AcceptedCmpTotal + -0.17700567590774 * S_Age 
+ -0.38060509731554 * S_Frq + -0.86026143079344 * S_Income + 0.63027536562783 * S_Kidhome + 
0.15303249164566 * S_MntFishProducts + -0.04780128957622 * S_MntFruits + -0.02064261038049 * 
S_MntGoldProds + 0.26238383938455 * S_MntSweetProducts + -0.21006970062531 * 
S_MonthsAsCustomer + 0.2955774677605 * S_NumDealsPurchases + -0.15769947513958 * 
S_NumWebVisitsMonth + -0.02874776268384 * S_RFMstat + -0.3955429869434 * S_RMntFrq + 
0.3744122250079 * S_Recency + 0.58295521976226 * S_Teenhome ;
1096864   +   H14  =    -0.22800152627721 * S_AcceptedCmpTotal  +     0.27991667815594 *
1096865   +        S_Age  +     0.89001922321833 * S_Frq  +     0.17467731177386 *
1096866   +        S_Income  +    -0.00985947331416 * S_Kidhome
1096867   +          +    -0.27114701164817 * S_MntFishProducts
1096868   +          +     0.32554392037328 * S_MntFruits  +     0.06705670808471 *
1096869   +        S_MntGoldProds  +     -0.3590087223323 * S_MntSweetProducts
1096870   +          +    -0.02702818828921 * S_MonthsAsCustomer
1096871   +          +    -0.63381188911946 * S_NumDealsPurchases
1096872   +          +    -0.86143000704363 * S_NumWebVisitsMonth
1096873   +          +    -0.16788755655818 * S_RFMstat  +    -0.09712800982817 *
1096874   +        S_RMntFrq  +     0.61892338869919 * S_Recency
1096875   +          +    -0.21544816860839 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = -0.22800152627721 * S_AcceptedCmpTotal + 0.27991667815594 * S_Age 
+ 0.89001922321833 * S_Frq + 0.17467731177386 * S_Income + -0.00985947331416 * S_Kidhome + 
-0.27114701164817 * S_MntFishProducts + 0.32554392037328 * S_MntFruits + 0.06705670808471 * 
S_MntGoldProds + -0.3590087223323 * S_MntSweetProducts + -0.02702818828921 * 
S_MonthsAsCustomer + -0.63381188911946 * S_NumDealsPurchases + -0.86143000704363 * 
S_NumWebVisitsMonth + -0.16788755655818 * S_RFMstat + -0.09712800982817 * S_RMntFrq + 
0.61892338869919 * S_Recency + -0.21544816860839 * S_Teenhome ;
1096876   +   H15  =      0.0846389232492 * S_AcceptedCmpTotal  +    -0.03933692648164 *
1096877   +        S_Age  +     0.26004669807852 * S_Frq  +     0.30306661543325 *
1096878   +        S_Income  +    -0.24206929946772 * S_Kidhome
1096879   +          +    -0.19039689229491 * S_MntFishProducts
1096880   +          +    -0.22957509816007 * S_MntFruits  +    -0.35006912387254 *
1096881   +        S_MntGoldProds  +    -0.02737135204648 * S_MntSweetProducts
1096882   +          +     0.03815221487927 * S_MonthsAsCustomer
1096883   +          +    -0.43579024169696 * S_NumDealsPurchases
1096884   +          +    -0.27796253880432 * S_NumWebVisitsMonth
1096885   +          +     0.15010895791429 * S_RFMstat  +     0.24377797912725 *
1096886   +        S_RMntFrq  +     0.50547916383425 * S_Recency
1096887   +          +    -0.22622962943787 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H15 = 0.0846389232492 * S_AcceptedCmpTotal + -0.03933692648164 * S_Age + 
0.26004669807852 * S_Frq + 0.30306661543325 * S_Income + -0.24206929946772 * S_Kidhome + 
-0.19039689229491 * S_MntFishProducts + -0.22957509816007 * S_MntFruits + -0.35006912387254 * 
S_MntGoldProds + -0.02737135204648 * S_MntSweetProducts + 0.03815221487927 * 
S_MonthsAsCustomer + -0.43579024169696 * S_NumDealsPurchases + -0.27796253880432 * 
S_NumWebVisitsMonth + 0.15010895791429 * S_RFMstat + 0.24377797912725 * S_RMntFrq + 
0.50547916383425 * S_Recency + -0.22622962943787 * S_Teenhome ;
1096888   +   H16  =     0.03788304209102 * S_AcceptedCmpTotal  +    -0.27022676521755 *
1096889   +        S_Age  +    -0.17480141247917 * S_Frq  +     0.53345624791204 *
1096890   +        S_Income  +    -0.25736924536467 * S_Kidhome
1096891   +          +    -0.04400855145817 * S_MntFishProducts
1096892   +          +    -0.06651358259718 * S_MntFruits  +     -0.0117104183032 *
1096893   +        S_MntGoldProds  +    -0.02790266219853 * S_MntSweetProducts
1096894   +          +     0.00265986106691 * S_MonthsAsCustomer
1096895   +          +     0.27331919080312 * S_NumDealsPurchases
1096896   +          +     0.22836119952787 * S_NumWebVisitsMonth
1096897   +          +     0.09245783028838 * S_RFMstat  +     0.10223459152488 *
1096898   +        S_RMntFrq  +    -0.90398250269857 * S_Recency
1096899   +          +     -0.2621421532112 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H16 = 0.03788304209102 * S_AcceptedCmpTotal + -0.27022676521755 * S_Age 
+ -0.17480141247917 * S_Frq + 0.53345624791204 * S_Income + -0.25736924536467 * S_Kidhome + 
-0.04400855145817 * S_MntFishProducts + -0.06651358259718 * S_MntFruits + -0.0117104183032 * 
S_MntGoldProds + -0.02790266219853 * S_MntSweetProducts + 0.00265986106691 * 
S_MonthsAsCustomer + 0.27331919080312 * S_NumDealsPurchases + 0.22836119952787 * 
S_NumWebVisitsMonth + 0.09245783028838 * S_RFMstat + 0.10223459152488 * S_RMntFrq + 
-0.90398250269857 * S_Recency + -0.2621421532112 * S_Teenhome ;
1096900   +   H11  = H11  +     0.24155985997122 * AcceptedCmp10
1096901   +          +     0.02727843300562 * AcceptedCmp20  +     0.05990453920581 *
1096902   +        AcceptedCmp30  +    -0.43469138041411 * AcceptedCmp40
1096903   +          +     0.00076050589964 * AcceptedCmp50  +     0.43307119233671 *
1096904   +        Complain0  +     0.23242177664865 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.24155985997122 * AcceptedCmp10 + 0.02727843300562 * 
AcceptedCmp20 + 0.05990453920581 * AcceptedCmp30 + -0.43469138041411 * AcceptedCmp40 + 
0.00076050589964 * AcceptedCmp50 + 0.43307119233671 * Complain0 + 0.23242177664865 * 
HigherEducationBinary0 ;
1096905   +   H12  = H12  +     0.04034689771488 * AcceptedCmp10
1096906   +          +    -0.01358747117911 * AcceptedCmp20  +    -0.29883922116453 *
1096907   +        AcceptedCmp30  +     0.58794258522438 * AcceptedCmp40
1096908   +          +    -0.40659406037079 * AcceptedCmp50  +     0.59068991602469 *
1096909   +        Complain0  +     -0.3122461557933 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.04034689771488 * AcceptedCmp10 + -0.01358747117911 * 
AcceptedCmp20 + -0.29883922116453 * AcceptedCmp30 + 0.58794258522438 * AcceptedCmp40 + 
-0.40659406037079 * AcceptedCmp50 + 0.59068991602469 * Complain0 + -0.3122461557933 * 
HigherEducationBinary0 ;
1096910   +   H13  = H13  +     0.49941486221932 * AcceptedCmp10
1096911   +          +     0.42891153022885 * AcceptedCmp20  +     0.28744085742243 *
1096912   +        AcceptedCmp30  +     0.54657253664873 * AcceptedCmp40
1096913   +          +     0.10655487579255 * AcceptedCmp50  +     0.11223153893952 *
1096914   +        Complain0  +    -0.44704943665138 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.49941486221932 * AcceptedCmp10 + 0.42891153022885 * 
AcceptedCmp20 + 0.28744085742243 * AcceptedCmp30 + 0.54657253664873 * AcceptedCmp40 + 
0.10655487579255 * AcceptedCmp50 + 0.11223153893952 * Complain0 + -0.44704943665138 * 
HigherEducationBinary0 ;
1096915   +   H14  = H14  +     0.70510583713907 * AcceptedCmp10
1096916   +          +     0.04052111261969 * AcceptedCmp20  +     0.76301816100625 *
1096917   +        AcceptedCmp30  +     0.09753552533639 * AcceptedCmp40
1096918   +          +     0.40999088454383 * AcceptedCmp50  +     0.19278448059725 *
1096919   +        Complain0  +     0.09127136236268 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.70510583713907 * AcceptedCmp10 + 0.04052111261969 * 
AcceptedCmp20 + 0.76301816100625 * AcceptedCmp30 + 0.09753552533639 * AcceptedCmp40 + 
0.40999088454383 * AcceptedCmp50 + 0.19278448059725 * Complain0 + 0.09127136236268 * 
HigherEducationBinary0 ;
1096920   +   H15  = H15  +     0.30535300313392 * AcceptedCmp10
1096921   +          +    -0.01605332227631 * AcceptedCmp20  +     0.09278623651632 *
1096922   +        AcceptedCmp30  +     0.03468239765482 * AcceptedCmp40
1096923   +          +     0.19720723485806 * AcceptedCmp50  +    -0.32364247007443 *
1096924   +        Complain0  +    -0.20695533150084 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.30535300313392 * AcceptedCmp10 + -0.01605332227631 * 
AcceptedCmp20 + 0.09278623651632 * AcceptedCmp30 + 0.03468239765482 * AcceptedCmp40 + 
0.19720723485806 * AcceptedCmp50 + -0.32364247007443 * Complain0 + -0.20695533150084 * 
HigherEducationBinary0 ;
1096925   +   H16  = H16  +    -0.19354253973215 * AcceptedCmp10
1096926   +          +     0.01566685138596 * AcceptedCmp20  +    -0.28250218144785 *
1096927   +        AcceptedCmp30  +    -0.13118265240955 * AcceptedCmp40
1096928   +          +    -0.03808858956936 * AcceptedCmp50  +    -0.19850701105147 *
1096929   +        Complain0  +     0.14297616111345 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H16 = H16 + -0.19354253973215 * AcceptedCmp10 + 0.01566685138596 * 
AcceptedCmp20 + -0.28250218144785 * AcceptedCmp30 + -0.13118265240955 * AcceptedCmp40 + 
-0.03808858956936 * AcceptedCmp50 + -0.19850701105147 * Complain0 + 0.14297616111345 * 
HigherEducationBinary0 ;
1096930   +   H11  = H11  +     0.05082493200436 * Education2n_Cycle
1096931   +          +    -0.08192239267323 * EducationBasic  +    -0.01445849926378 *
1096932   +        EducationGraduation  +     0.01459143816519 * EducationMaster
1096933   +          +     0.12502276672336 * Marital_StatusDivorced
1096934   +          +    -0.02606508453741 * Marital_StatusMarried
1096935   +          +      0.0418850245266 * Marital_StatusSingle
1096936   +          +     0.02050996572132 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.05082493200436 * Education2n_Cycle + -0.08192239267323 * 
EducationBasic + -0.01445849926378 * EducationGraduation + 0.01459143816519 * EducationMaster 
+ 0.12502276672336 * Marital_StatusDivorced + -0.02606508453741 * Marital_StatusMarried + 
0.0418850245266 * Marital_StatusSingle + 0.02050996572132 * Marital_StatusTogether ;
1096937   +   H12  = H12  +     -0.1900759238575 * Education2n_Cycle
1096938   +          +     0.13535241443003 * EducationBasic  +    -0.00199771592906 *
1096939   +        EducationGraduation  +     0.00476193515914 * EducationMaster
1096940   +          +      0.1943860669795 * Marital_StatusDivorced
1096941   +          +     -0.1529596261268 * Marital_StatusMarried
1096942   +          +     0.24187461301348 * Marital_StatusSingle
1096943   +          +     0.09157538589749 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.1900759238575 * Education2n_Cycle + 0.13535241443003 * 
EducationBasic + -0.00199771592906 * EducationGraduation + 0.00476193515914 * EducationMaster 
+ 0.1943860669795 * Marital_StatusDivorced + -0.1529596261268 * Marital_StatusMarried + 
0.24187461301348 * Marital_StatusSingle + 0.09157538589749 * Marital_StatusTogether ;
1096944   +   H13  = H13  +     0.02140936656506 * Education2n_Cycle
1096945   +          +     0.05845427475503 * EducationBasic  +    -0.44298208278895 *
1096946   +        EducationGraduation  +     0.17149477011717 * EducationMaster
1096947   +          +    -0.19677652422622 * Marital_StatusDivorced
1096948   +          +     0.75897106429478 * Marital_StatusMarried
1096949   +          +    -0.66692260284833 * Marital_StatusSingle
1096950   +          +     0.58287349221333 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.02140936656506 * Education2n_Cycle + 0.05845427475503 * 
EducationBasic + -0.44298208278895 * EducationGraduation + 0.17149477011717 * EducationMaster 
+ -0.19677652422622 * Marital_StatusDivorced + 0.75897106429478 * Marital_StatusMarried + 
-0.66692260284833 * Marital_StatusSingle + 0.58287349221333 * Marital_StatusTogether ;
1096951   +   H14  = H14  +     0.18801855635785 * Education2n_Cycle
1096952   +          +    -0.06231007239836 * EducationBasic  +    -0.26915940640311 *
1096953   +        EducationGraduation  +    -0.30689797876717 * EducationMaster
1096954   +          +    -0.18964222971122 * Marital_StatusDivorced
1096955   +          +    -0.15222045956879 * Marital_StatusMarried
1096956   +          +     0.15455795695595 * Marital_StatusSingle
1096957   +          +    -0.04060840399479 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.18801855635785 * Education2n_Cycle + -0.06231007239836 * 
EducationBasic + -0.26915940640311 * EducationGraduation + -0.30689797876717 * EducationMaster 
+ -0.18964222971122 * Marital_StatusDivorced + -0.15222045956879 * Marital_StatusMarried + 
0.15455795695595 * Marital_StatusSingle + -0.04060840399479 * Marital_StatusTogether ;
1096958   +   H15  = H15  +    -0.12131367369042 * Education2n_Cycle
1096959   +          +     0.20547688844423 * EducationBasic  +     0.04965529549437 *
1096960   +        EducationGraduation  +    -0.21811990669176 * EducationMaster
1096961   +          +    -0.10122776921995 * Marital_StatusDivorced
1096962   +          +     0.14126755564161 * Marital_StatusMarried
1096963   +          +    -0.18463644418978 * Marital_StatusSingle
1096964   +          +     0.23071597384519 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + -0.12131367369042 * Education2n_Cycle + 0.20547688844423 * 
EducationBasic + 0.04965529549437 * EducationGraduation + -0.21811990669176 * EducationMaster 
+ -0.10122776921995 * Marital_StatusDivorced + 0.14126755564161 * Marital_StatusMarried + 
-0.18463644418978 * Marital_StatusSingle + 0.23071597384519 * Marital_StatusTogether ;
1096965   +   H16  = H16  +     0.02961881390411 * Education2n_Cycle
1096966   +          +    -0.46228434914367 * EducationBasic  +    -0.08513280071643 *
1096967   +        EducationGraduation  +    -0.20159542694386 * EducationMaster
1096968   +          +     0.05009431660662 * Marital_StatusDivorced
1096969   +          +    -0.38407798045329 * Marital_StatusMarried
1096970   +          +      0.3035257398654 * Marital_StatusSingle
1096971   +          +    -0.27725923319119 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.02961881390411 * Education2n_Cycle + -0.46228434914367 * 
EducationBasic + -0.08513280071643 * EducationGraduation + -0.20159542694386 * EducationMaster 
+ 0.05009431660662 * Marital_StatusDivorced + -0.38407798045329 * Marital_StatusMarried + 
0.3035257398654 * Marital_StatusSingle + -0.27725923319119 * Marital_StatusTogether ;
1096972   +   H11  =      1.3960587011002 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 1.3960587011002 + H11 ;
1096973   +   H12  =     0.18947019063375 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.18947019063375 + H12 ;
1096974   +   H13  =     0.55907472867898 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = 0.55907472867898 + H13 ;
1096975   +   H14  =     0.28336290184268 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 0.28336290184268 + H14 ;
1096976   +   H15  =     1.08919536550159 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = 1.08919536550159 + H15 ;
1096977   +   H16  =    -0.22538308534609 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = -0.22538308534609 + H16 ;
1096978   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1096979   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1096980   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1096981   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1096982   +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
1096983   +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
1096984   +END;
MPRINT(EM_DIAGRAM):   END;
1096985   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1096986   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1096987   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1096988   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1096989   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1096990   +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
1096991   +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
1096992   +END;
MPRINT(EM_DIAGRAM):   END;
1096993   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1096994   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1096995   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1096996   +
1096997   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1096998   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1096999   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1097000   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1097001   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1097002   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1097003   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1097004   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1097005   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1097006   +end;
MPRINT(EM_DIAGRAM):   end;
1097007   +else do;
MPRINT(EM_DIAGRAM):   else do;
1097008   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1097009   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1097010   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1097011   +   end;
MPRINT(EM_DIAGRAM):   end;
1097012   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1097013   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1097014   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1097015   +   end;
MPRINT(EM_DIAGRAM):   end;
1097016   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1097017   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1097018   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1097019   +   end;
MPRINT(EM_DIAGRAM):   end;
1097020   +end;
MPRINT(EM_DIAGRAM):   end;
1097021   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1097022   +   P_DepVar1  =      1.1921632715983 * H11  +     2.38386446186622 * H12
1097023   +          +    -2.42409896638067 * H13  +    -2.19084949788904 * H14
1097024   +          +      -0.380575449439 * H15  +     1.17350595805971 * H16 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 1.1921632715983 * H11 + 2.38386446186622 * H12 + 
-2.42409896638067 * H13 + -2.19084949788904 * H14 + -0.380575449439 * H15 + 1.17350595805971 * 
H16 ;
1097025   +   P_DepVar1  =    -1.70154799161574 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.70154799161574 + P_DepVar1 ;
1097026   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1097027   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1097028   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1097029   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1097030   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1097031   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1097032   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1097033   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1097034   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1097035   +END;
MPRINT(EM_DIAGRAM):   END;
1097036   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1097037   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1097038   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1097039   +END;
MPRINT(EM_DIAGRAM):   END;
1097040   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1097041   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1097042   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1097043   +END;
MPRINT(EM_DIAGRAM):   END;
1097044   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1097045   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1097046   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1097047   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1097048   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1097049   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1097050   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1097051   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1097052   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1097053   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1097054   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1097055   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1097056   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1097057   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1097058   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1097059   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1097060   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1097061   +END;
MPRINT(EM_DIAGRAM):   END;
1097062   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1097063   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1097064   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1097065   +drop
1097066   +H11
1097067   +H12
1097068   +H13
1097069   +H14
1097070   +H15
1097071   +H16
1097072   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 ;
1097073   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1097074   +* Renaming variables for Neural41;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural41;
1097075   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1097076   +* Renaming Posterior variables for Neural41;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural41;
1097077   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1097078   +drop Neural41_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural41_P_DepVar1;
1097079   +Neural41_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural41_P_DepVar1 = P_DepVar1;
1097080   +drop Neural41_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural41_P_DepVar0;
1097081   +Neural41_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural41_P_DepVar0 = P_DepVar0;
1097082   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1097083   +* Renaming _WARN_ variable for Neural41;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural41;
1097084   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1097085   +length Neural41_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural41_WARN_ $4;
1097086   +drop Neural41_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural41_WARN_;
1097087   +Neural41_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural41_WARN_ = _WARN_;
1097088   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1097089   +* Ensmbl12: Scoring Code of model 9 of 10;
MPRINT(EM_DIAGRAM):   * Ensmbl12: Scoring Code of model 9 of 10;
1097090   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1097091   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1097092   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
1097093   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1097094   +* NODE: Neural36;
MPRINT(EM_DIAGRAM):   * NODE: Neural36;
1097095   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1097096   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1097097   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1097098   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1097099   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1097100   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1097101   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1097102   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1097103   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1097104   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1097105   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1097106   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1097107   +LENGTH _WARN_ $4
1097108   +      F_DepVar  $ 12
1097109   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1097110   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1097111   +
1097112   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1097113   +
1097114   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1097115   +
1097116   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1097117   +
1097118   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1097119   +
1097120   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1097121   +
1097122   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1097123   +
1097124   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1097125   +
1097126   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1097127   +
1097128   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1097129   +
1097130   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1097131   +
1097132   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1097133   +
1097134   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1097135   +
1097136   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1097137   +
1097138   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1097139   +
1097140   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1097141   +
1097142   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1097143   +
1097144   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1097145   +
1097146   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1097147   +
1097148   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1097149   +
1097150   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1097151   +
1097152   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1097153   +
1097154   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1097155   +
1097156   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1097157   +
1097158   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1097159   +
1097160   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1097161   +
1097162   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1097163   +
1097164   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1097165   +
1097166   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1097167   +
1097168   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1097169   +
1097170   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1097171   +
1097172   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1097173   +
1097174   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1097175   +
1097176   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1097177   +
1097178   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1097179   +
1097180   +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
1097181   +
1097182   +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
1097183   +
1097184   +      label H17 = 'Hidden: H1=7' ;
MPRINT(EM_DIAGRAM):   label H17 = 'Hidden: H1=7' ;
1097185   +
1097186   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1097187   +
1097188   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1097189   +
1097190   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1097191   +
1097192   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1097193   +
1097194   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1097195   +
1097196   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1097197   +
1097198   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1097199   +
1097200   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1097201   +
1097202   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1097203   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1097204   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1097205   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1097206   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1097207   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1097208   +end;
MPRINT(EM_DIAGRAM):   end;
1097209   +else do;
MPRINT(EM_DIAGRAM):   else do;
1097210   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1097211   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1097212   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1097213   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1097214   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1097215   +   end;
MPRINT(EM_DIAGRAM):   end;
1097216   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1097217   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1097218   +   end;
MPRINT(EM_DIAGRAM):   end;
1097219   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1097220   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1097221   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1097222   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1097223   +   end;
MPRINT(EM_DIAGRAM):   end;
1097224   +end;
MPRINT(EM_DIAGRAM):   end;
1097225   +
1097226   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1097227   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1097228   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1097229   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1097230   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1097231   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1097232   +end;
MPRINT(EM_DIAGRAM):   end;
1097233   +else do;
MPRINT(EM_DIAGRAM):   else do;
1097234   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1097235   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1097236   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1097237   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1097238   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1097239   +   end;
MPRINT(EM_DIAGRAM):   end;
1097240   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1097241   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1097242   +   end;
MPRINT(EM_DIAGRAM):   end;
1097243   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1097244   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1097245   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1097246   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1097247   +   end;
MPRINT(EM_DIAGRAM):   end;
1097248   +end;
MPRINT(EM_DIAGRAM):   end;
1097249   +
1097250   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1097251   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1097252   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1097253   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1097254   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1097255   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1097256   +end;
MPRINT(EM_DIAGRAM):   end;
1097257   +else do;
MPRINT(EM_DIAGRAM):   else do;
1097258   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1097259   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1097260   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1097261   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1097262   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1097263   +   end;
MPRINT(EM_DIAGRAM):   end;
1097264   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1097265   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1097266   +   end;
MPRINT(EM_DIAGRAM):   end;
1097267   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1097268   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1097269   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1097270   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1097271   +   end;
MPRINT(EM_DIAGRAM):   end;
1097272   +end;
MPRINT(EM_DIAGRAM):   end;
1097273   +
1097274   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1097275   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1097276   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1097277   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1097278   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1097279   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1097280   +end;
MPRINT(EM_DIAGRAM):   end;
1097281   +else do;
MPRINT(EM_DIAGRAM):   else do;
1097282   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1097283   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1097284   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1097285   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1097286   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1097287   +   end;
MPRINT(EM_DIAGRAM):   end;
1097288   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1097289   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1097290   +   end;
MPRINT(EM_DIAGRAM):   end;
1097291   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1097292   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1097293   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1097294   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1097295   +   end;
MPRINT(EM_DIAGRAM):   end;
1097296   +end;
MPRINT(EM_DIAGRAM):   end;
1097297   +
1097298   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1097299   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1097300   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1097301   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1097302   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1097303   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1097304   +end;
MPRINT(EM_DIAGRAM):   end;
1097305   +else do;
MPRINT(EM_DIAGRAM):   else do;
1097306   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1097307   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1097308   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1097309   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1097310   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1097311   +   end;
MPRINT(EM_DIAGRAM):   end;
1097312   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1097313   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1097314   +   end;
MPRINT(EM_DIAGRAM):   end;
1097315   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1097316   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1097317   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1097318   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1097319   +   end;
MPRINT(EM_DIAGRAM):   end;
1097320   +end;
MPRINT(EM_DIAGRAM):   end;
1097321   +
1097322   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1097323   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1097324   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1097325   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1097326   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1097327   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1097328   +end;
MPRINT(EM_DIAGRAM):   end;
1097329   +else do;
MPRINT(EM_DIAGRAM):   else do;
1097330   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1097331   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1097332   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1097333   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1097334   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1097335   +   end;
MPRINT(EM_DIAGRAM):   end;
1097336   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1097337   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1097338   +   end;
MPRINT(EM_DIAGRAM):   end;
1097339   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1097340   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1097341   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1097342   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1097343   +   end;
MPRINT(EM_DIAGRAM):   end;
1097344   +end;
MPRINT(EM_DIAGRAM):   end;
1097345   +
1097346   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1097347   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1097348   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1097349   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1097350   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1097351   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1097352   +end;
MPRINT(EM_DIAGRAM):   end;
1097353   +else do;
MPRINT(EM_DIAGRAM):   else do;
1097354   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1097355   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1097356   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1097357   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1097358   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1097359   +   end;
MPRINT(EM_DIAGRAM):   end;
1097360   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1097361   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1097362   +   end;
MPRINT(EM_DIAGRAM):   end;
1097363   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1097364   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1097365   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1097366   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1097367   +   end;
MPRINT(EM_DIAGRAM):   end;
1097368   +end;
MPRINT(EM_DIAGRAM):   end;
1097369   +
1097370   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1097371   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
1097372   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1097373   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1097374   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1097375   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1097376   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1097377   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1097378   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1097379   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1097380   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1097381   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1097382   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1097383   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1097384   +end;
MPRINT(EM_DIAGRAM):   end;
1097385   +else do;
MPRINT(EM_DIAGRAM):   else do;
1097386   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1097387   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1097388   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1097389   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1097390   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1097391   +   end;
MPRINT(EM_DIAGRAM):   end;
1097392   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1097393   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1097394   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1097395   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1097396   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1097397   +   end;
MPRINT(EM_DIAGRAM):   end;
1097398   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1097399   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1097400   +   end;
MPRINT(EM_DIAGRAM):   end;
1097401   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1097402   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1097403   +   end;
MPRINT(EM_DIAGRAM):   end;
1097404   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1097405   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1097406   +   end;
MPRINT(EM_DIAGRAM):   end;
1097407   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1097408   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1097409   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1097410   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1097411   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1097412   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1097413   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1097414   +   end;
MPRINT(EM_DIAGRAM):   end;
1097415   +end;
MPRINT(EM_DIAGRAM):   end;
1097416   +
1097417   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1097418   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1097419   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
1097420   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1097421   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1097422   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1097423   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1097424   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1097425   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1097426   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1097427   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1097428   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1097429   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1097430   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1097431   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1097432   +end;
MPRINT(EM_DIAGRAM):   end;
1097433   +else do;
MPRINT(EM_DIAGRAM):   else do;
1097434   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1097435   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1097436   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1097437   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1097438   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1097439   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1097440   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1097441   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1097442   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1097443   +         end;
MPRINT(EM_DIAGRAM):   end;
1097444   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1097445   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1097446   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1097447   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1097448   +            end;
MPRINT(EM_DIAGRAM):   end;
1097449   +         end;
MPRINT(EM_DIAGRAM):   end;
1097450   +      end;
MPRINT(EM_DIAGRAM):   end;
1097451   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1097452   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1097453   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1097454   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1097455   +         end;
MPRINT(EM_DIAGRAM):   end;
1097456   +      end;
MPRINT(EM_DIAGRAM):   end;
1097457   +   end;
MPRINT(EM_DIAGRAM):   end;
1097458   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1097459   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1097460   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1097461   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1097462   +      end;
MPRINT(EM_DIAGRAM):   end;
1097463   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1097464   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1097465   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1097466   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1097467   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1097468   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1097469   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1097470   +         end;
MPRINT(EM_DIAGRAM):   end;
1097471   +      end;
MPRINT(EM_DIAGRAM):   end;
1097472   +   end;
MPRINT(EM_DIAGRAM):   end;
1097473   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1097474   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1097475   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1097476   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1097477   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1097478   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1097479   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1097480   +   end;
MPRINT(EM_DIAGRAM):   end;
1097481   +end;
MPRINT(EM_DIAGRAM):   end;
1097482   +
1097483   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1097484   +*** Checking missing input Interval
1097485   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1097486   +
1097487   +IF NMISS(
1097488   +   AcceptedCmpTotal ,
1097489   +   Age ,
1097490   +   Frq ,
1097491   +   Income ,
1097492   +   Kidhome ,
1097493   +   MntFishProducts ,
1097494   +   MntFruits ,
1097495   +   MntGoldProds ,
1097496   +   MntSweetProducts ,
1097497   +   MonthsAsCustomer ,
1097498   +   NumDealsPurchases ,
1097499   +   NumWebVisitsMonth ,
1097500   +   RFMstat ,
1097501   +   RMntFrq ,
1097502   +   Recency ,
1097503   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , 
MntFishProducts , MntFruits , MntGoldProds , MntSweetProducts , MonthsAsCustomer , 
NumDealsPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , Teenhome ) THEN DO;
1097504   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1097505   +
1097506   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1097507   +END;
MPRINT(EM_DIAGRAM):   END;
1097508   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1097509   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1097510   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1097511   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1097512   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1097513   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1097514   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1097515   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1097516   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1097517   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1097518   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1097519   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1097520   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1097521   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1097522   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1097523   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1097524   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1097525   +   S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
1097526   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
1097527   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1097528   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1097529   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1097530   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1097531   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1097532   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1097533   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1097534   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1097535   +END;
MPRINT(EM_DIAGRAM):   END;
1097536   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1097537   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1097538   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1097539   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1097540   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1097541   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1097542   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1097543   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1097544   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1097545   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1097546   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1097547   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1097548   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1097549   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1097550   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1097551   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1097552   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1097553   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1097554   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1097555   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1097556   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1097557   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1097558   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1097559   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1097560   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1097561   +   ELSE S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
1097562   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
1097563   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1097564   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1097565   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1097566   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1097567   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1097568   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1097569   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1097570   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1097571   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1097572   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1097573   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1097574   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1097575   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1097576   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1097577   +END;
MPRINT(EM_DIAGRAM):   END;
1097578   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1097579   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1097580   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1097581   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1097582   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1097583   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1097584   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1097585   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1097586   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1097587   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1097588   +   H11  =     0.36102409886134 * S_AcceptedCmpTotal  +     0.13395156650326 *
1097589   +        S_Age  +    -0.24538302428059 * S_Frq  +    -0.11572058197557 *
1097590   +        S_Income  +     0.21790378443814 * S_Kidhome
1097591   +          +    -0.08134586316395 * S_MntFishProducts
1097592   +          +     -0.2688648060203 * S_MntFruits  +    -0.25880035211038 *
1097593   +        S_MntGoldProds  +     0.07531502626045 * S_MntSweetProducts
1097594   +          +     0.21726816930291 * S_MonthsAsCustomer
1097595   +          +    -0.21824241156847 * S_NumDealsPurchases
1097596   +          +     0.07727563921761 * S_NumWebVisitsMonth
1097597   +          +     0.09027808324069 * S_RFMstat  +     -0.0189462843628 *
1097598   +        S_RMntFrq  +     0.15658915596853 * S_Recency
1097599   +          +     0.18680606168417 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.36102409886134 * S_AcceptedCmpTotal + 0.13395156650326 * S_Age + 
-0.24538302428059 * S_Frq + -0.11572058197557 * S_Income + 0.21790378443814 * S_Kidhome + 
-0.08134586316395 * S_MntFishProducts + -0.2688648060203 * S_MntFruits + -0.25880035211038 * 
S_MntGoldProds + 0.07531502626045 * S_MntSweetProducts + 0.21726816930291 * S_MonthsAsCustomer 
+ -0.21824241156847 * S_NumDealsPurchases + 0.07727563921761 * S_NumWebVisitsMonth + 
0.09027808324069 * S_RFMstat + -0.0189462843628 * S_RMntFrq + 0.15658915596853 * S_Recency + 
0.18680606168417 * S_Teenhome ;
1097600   +   H12  =    -0.50461866181934 * S_AcceptedCmpTotal  +     0.01266437730767 *
1097601   +        S_Age  +     0.02534169432751 * S_Frq  +    -0.89441458532035 *
1097602   +        S_Income  +    -0.51036141680293 * S_Kidhome
1097603   +          +     0.10879858722875 * S_MntFishProducts
1097604   +          +    -0.05639987269313 * S_MntFruits  +    -0.43702228668285 *
1097605   +        S_MntGoldProds  +     0.18909754042399 * S_MntSweetProducts
1097606   +          +    -0.11392977531374 * S_MonthsAsCustomer
1097607   +          +     -0.5318843752274 * S_NumDealsPurchases
1097608   +          +    -0.65796537312585 * S_NumWebVisitsMonth
1097609   +          +    -0.29571612685484 * S_RFMstat  +     -0.0801458884647 *
1097610   +        S_RMntFrq  +     0.73429478940872 * S_Recency
1097611   +          +     0.28950334189528 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -0.50461866181934 * S_AcceptedCmpTotal + 0.01266437730767 * S_Age 
+ 0.02534169432751 * S_Frq + -0.89441458532035 * S_Income + -0.51036141680293 * S_Kidhome + 
0.10879858722875 * S_MntFishProducts + -0.05639987269313 * S_MntFruits + -0.43702228668285 * 
S_MntGoldProds + 0.18909754042399 * S_MntSweetProducts + -0.11392977531374 * 
S_MonthsAsCustomer + -0.5318843752274 * S_NumDealsPurchases + -0.65796537312585 * 
S_NumWebVisitsMonth + -0.29571612685484 * S_RFMstat + -0.0801458884647 * S_RMntFrq + 
0.73429478940872 * S_Recency + 0.28950334189528 * S_Teenhome ;
1097612   +   H13  =    -0.22612994964695 * S_AcceptedCmpTotal  +     0.04392639924073 *
1097613   +        S_Age  +     0.32974877429932 * S_Frq  +    -0.26990824722212 *
1097614   +        S_Income  +     0.59254092901621 * S_Kidhome
1097615   +          +    -0.20448500725841 * S_MntFishProducts
1097616   +          +     0.09904900315476 * S_MntFruits  +     0.33085368683805 *
1097617   +        S_MntGoldProds  +     0.19272280339022 * S_MntSweetProducts
1097618   +          +     0.75084411765835 * S_MonthsAsCustomer
1097619   +          +     -0.0387146296237 * S_NumDealsPurchases
1097620   +          +    -0.28387522584505 * S_NumWebVisitsMonth
1097621   +          +    -0.15204072409221 * S_RFMstat  +     0.09340123133096 *
1097622   +        S_RMntFrq  +     0.82636976290684 * S_Recency
1097623   +          +     0.37810091232378 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = -0.22612994964695 * S_AcceptedCmpTotal + 0.04392639924073 * S_Age 
+ 0.32974877429932 * S_Frq + -0.26990824722212 * S_Income + 0.59254092901621 * S_Kidhome + 
-0.20448500725841 * S_MntFishProducts + 0.09904900315476 * S_MntFruits + 0.33085368683805 * 
S_MntGoldProds + 0.19272280339022 * S_MntSweetProducts + 0.75084411765835 * S_MonthsAsCustomer 
+ -0.0387146296237 * S_NumDealsPurchases + -0.28387522584505 * S_NumWebVisitsMonth + 
-0.15204072409221 * S_RFMstat + 0.09340123133096 * S_RMntFrq + 0.82636976290684 * S_Recency + 
0.37810091232378 * S_Teenhome ;
1097624   +   H14  =    -0.30228547708859 * S_AcceptedCmpTotal  +     0.03241560550242 *
1097625   +        S_Age  +     0.84298653991521 * S_Frq  +     0.08457309547848 *
1097626   +        S_Income  +    -0.00122834275949 * S_Kidhome
1097627   +          +    -0.27566379985337 * S_MntFishProducts
1097628   +          +     0.22439349557664 * S_MntFruits  +     -0.2238462316234 *
1097629   +        S_MntGoldProds  +     0.10162320730644 * S_MntSweetProducts
1097630   +          +    -0.04164317708211 * S_MonthsAsCustomer
1097631   +          +    -0.69362879353268 * S_NumDealsPurchases
1097632   +          +    -0.42590146496797 * S_NumWebVisitsMonth
1097633   +          +    -0.14963136795323 * S_RFMstat  +    -0.12684701620224 *
1097634   +        S_RMntFrq  +     0.84758472963267 * S_Recency
1097635   +          +     0.11712588251204 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = -0.30228547708859 * S_AcceptedCmpTotal + 0.03241560550242 * S_Age 
+ 0.84298653991521 * S_Frq + 0.08457309547848 * S_Income + -0.00122834275949 * S_Kidhome + 
-0.27566379985337 * S_MntFishProducts + 0.22439349557664 * S_MntFruits + -0.2238462316234 * 
S_MntGoldProds + 0.10162320730644 * S_MntSweetProducts + -0.04164317708211 * 
S_MonthsAsCustomer + -0.69362879353268 * S_NumDealsPurchases + -0.42590146496797 * 
S_NumWebVisitsMonth + -0.14963136795323 * S_RFMstat + -0.12684701620224 * S_RMntFrq + 
0.84758472963267 * S_Recency + 0.11712588251204 * S_Teenhome ;
1097636   +   H15  =    -0.07826142783822 * S_AcceptedCmpTotal  +     0.02869519269506 *
1097637   +        S_Age  +     0.47709626753648 * S_Frq  +     0.77626478438802 *
1097638   +        S_Income  +    -0.52116533001423 * S_Kidhome
1097639   +          +     -0.0164127050263 * S_MntFishProducts
1097640   +          +    -0.21044074963391 * S_MntFruits  +    -0.01106715629962 *
1097641   +        S_MntGoldProds  +    -0.04742180634458 * S_MntSweetProducts
1097642   +          +     0.24190773546087 * S_MonthsAsCustomer
1097643   +          +    -0.20709839635746 * S_NumDealsPurchases
1097644   +          +    -0.03892039672539 * S_NumWebVisitsMonth
1097645   +          +     0.01844174922581 * S_RFMstat  +     0.33852543335405 *
1097646   +        S_RMntFrq  +    -0.44935213795722 * S_Recency
1097647   +          +     -0.6298368435821 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H15 = -0.07826142783822 * S_AcceptedCmpTotal + 0.02869519269506 * S_Age 
+ 0.47709626753648 * S_Frq + 0.77626478438802 * S_Income + -0.52116533001423 * S_Kidhome + 
-0.0164127050263 * S_MntFishProducts + -0.21044074963391 * S_MntFruits + -0.01106715629962 * 
S_MntGoldProds + -0.04742180634458 * S_MntSweetProducts + 0.24190773546087 * 
S_MonthsAsCustomer + -0.20709839635746 * S_NumDealsPurchases + -0.03892039672539 * 
S_NumWebVisitsMonth + 0.01844174922581 * S_RFMstat + 0.33852543335405 * S_RMntFrq + 
-0.44935213795722 * S_Recency + -0.6298368435821 * S_Teenhome ;
1097648   +   H16  =    -0.38278200147216 * S_AcceptedCmpTotal  +     0.10976543329989 *
1097649   +        S_Age  +    -0.17634499366273 * S_Frq  +    -0.00464219628456 *
1097650   +        S_Income  +     0.02656798188894 * S_Kidhome
1097651   +          +     0.30126647035438 * S_MntFishProducts
1097652   +          +    -0.15329042297108 * S_MntFruits  +     0.34485619618635 *
1097653   +        S_MntGoldProds  +    -0.02131109278943 * S_MntSweetProducts
1097654   +          +     0.02225077975252 * S_MonthsAsCustomer
1097655   +          +    -0.25574607065737 * S_NumDealsPurchases
1097656   +          +    -0.17649073415066 * S_NumWebVisitsMonth
1097657   +          +    -0.05940264496746 * S_RFMstat  +    -0.10060551243835 *
1097658   +        S_RMntFrq  +    -0.26823576982436 * S_Recency
1097659   +          +    -0.02089829217347 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H16 = -0.38278200147216 * S_AcceptedCmpTotal + 0.10976543329989 * S_Age 
+ -0.17634499366273 * S_Frq + -0.00464219628456 * S_Income + 0.02656798188894 * S_Kidhome + 
0.30126647035438 * S_MntFishProducts + -0.15329042297108 * S_MntFruits + 0.34485619618635 * 
S_MntGoldProds + -0.02131109278943 * S_MntSweetProducts + 0.02225077975252 * 
S_MonthsAsCustomer + -0.25574607065737 * S_NumDealsPurchases + -0.17649073415066 * 
S_NumWebVisitsMonth + -0.05940264496746 * S_RFMstat + -0.10060551243835 * S_RMntFrq + 
-0.26823576982436 * S_Recency + -0.02089829217347 * S_Teenhome ;
1097660   +   H17  =     0.19294816663728 * S_AcceptedCmpTotal  +    -0.36492507147362 *
1097661   +        S_Age  +     -0.5026822541815 * S_Frq  +    -0.48143237402929 *
1097662   +        S_Income  +     0.24859715564668 * S_Kidhome
1097663   +          +    -0.25170385966484 * S_MntFishProducts
1097664   +          +     0.32613161868695 * S_MntFruits  +     0.13394374893255 *
1097665   +        S_MntGoldProds  +     0.48416151380913 * S_MntSweetProducts
1097666   +          +     0.05219342683802 * S_MonthsAsCustomer
1097667   +          +     0.43291262348863 * S_NumDealsPurchases
1097668   +          +     0.56350506449265 * S_NumWebVisitsMonth
1097669   +          +     0.07050038692379 * S_RFMstat  +     0.09321760948671 *
1097670   +        S_RMntFrq  +      -0.582152401129 * S_Recency
1097671   +          +     0.37123217787922 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H17 = 0.19294816663728 * S_AcceptedCmpTotal + -0.36492507147362 * S_Age 
+ -0.5026822541815 * S_Frq + -0.48143237402929 * S_Income + 0.24859715564668 * S_Kidhome + 
-0.25170385966484 * S_MntFishProducts + 0.32613161868695 * S_MntFruits + 0.13394374893255 * 
S_MntGoldProds + 0.48416151380913 * S_MntSweetProducts + 0.05219342683802 * S_MonthsAsCustomer 
+ 0.43291262348863 * S_NumDealsPurchases + 0.56350506449265 * S_NumWebVisitsMonth + 
0.07050038692379 * S_RFMstat + 0.09321760948671 * S_RMntFrq + -0.582152401129 * S_Recency + 
0.37123217787922 * S_Teenhome ;
1097672   +   H11  = H11  +     0.19124500210188 * AcceptedCmp10
1097673   +          +    -0.07164186578541 * AcceptedCmp20  +     0.21783016367597 *
1097674   +        AcceptedCmp30  +     0.21148394728435 * AcceptedCmp40
1097675   +          +    -0.03026880266191 * AcceptedCmp50  +    -0.07201946966594 *
1097676   +        Complain0  +     0.01809478462337 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.19124500210188 * AcceptedCmp10 + -0.07164186578541 * 
AcceptedCmp20 + 0.21783016367597 * AcceptedCmp30 + 0.21148394728435 * AcceptedCmp40 + 
-0.03026880266191 * AcceptedCmp50 + -0.07201946966594 * Complain0 + 0.01809478462337 * 
HigherEducationBinary0 ;
1097677   +   H12  = H12  +    -0.08224648561215 * AcceptedCmp10
1097678   +          +    -0.04262229291512 * AcceptedCmp20  +     0.31730600734378 *
1097679   +        AcceptedCmp30  +    -0.50103336510524 * AcceptedCmp40
1097680   +          +     0.14654032457963 * AcceptedCmp50  +     -0.3081029727525 *
1097681   +        Complain0  +     0.33420373179467 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.08224648561215 * AcceptedCmp10 + -0.04262229291512 * 
AcceptedCmp20 + 0.31730600734378 * AcceptedCmp30 + -0.50103336510524 * AcceptedCmp40 + 
0.14654032457963 * AcceptedCmp50 + -0.3081029727525 * Complain0 + 0.33420373179467 * 
HigherEducationBinary0 ;
1097682   +   H13  = H13  +     -0.2675286852338 * AcceptedCmp10
1097683   +          +     0.00293684627092 * AcceptedCmp20  +     0.17042784679702 *
1097684   +        AcceptedCmp30  +    -0.03300348487228 * AcceptedCmp40
1097685   +          +     0.18139562224546 * AcceptedCmp50  +     -0.5876653777255 *
1097686   +        Complain0  +      -0.348312724013 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.2675286852338 * AcceptedCmp10 + 0.00293684627092 * 
AcceptedCmp20 + 0.17042784679702 * AcceptedCmp30 + -0.03300348487228 * AcceptedCmp40 + 
0.18139562224546 * AcceptedCmp50 + -0.5876653777255 * Complain0 + -0.348312724013 * 
HigherEducationBinary0 ;
1097687   +   H14  = H14  +     0.62345895952335 * AcceptedCmp10
1097688   +          +     0.06420128732689 * AcceptedCmp20  +     0.32944172885024 *
1097689   +        AcceptedCmp30  +    -0.04719511461619 * AcceptedCmp40
1097690   +          +     0.61833640682482 * AcceptedCmp50  +     -0.0006656764006 *
1097691   +        Complain0  +    -0.12356778452039 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.62345895952335 * AcceptedCmp10 + 0.06420128732689 * 
AcceptedCmp20 + 0.32944172885024 * AcceptedCmp30 + -0.04719511461619 * AcceptedCmp40 + 
0.61833640682482 * AcceptedCmp50 + -0.0006656764006 * Complain0 + -0.12356778452039 * 
HigherEducationBinary0 ;
1097692   +   H15  = H15  +    -0.43202592233127 * AcceptedCmp10
1097693   +          +    -0.35346067325701 * AcceptedCmp20  +    -0.29446055239371 *
1097694   +        AcceptedCmp30  +     -0.6355060868005 * AcceptedCmp40
1097695   +          +     0.08763000125481 * AcceptedCmp50  +    -0.55439066852712 *
1097696   +        Complain0  +     0.37078134908454 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + -0.43202592233127 * AcceptedCmp10 + -0.35346067325701 * 
AcceptedCmp20 + -0.29446055239371 * AcceptedCmp30 + -0.6355060868005 * AcceptedCmp40 + 
0.08763000125481 * AcceptedCmp50 + -0.55439066852712 * Complain0 + 0.37078134908454 * 
HigherEducationBinary0 ;
1097697   +   H16  = H16  +    -0.10522820178908 * AcceptedCmp10
1097698   +          +     0.20645125728354 * AcceptedCmp20  +     0.34040121966792 *
1097699   +        AcceptedCmp30  +    -0.02259616994399 * AcceptedCmp40
1097700   +          +    -0.22123397523195 * AcceptedCmp50  +    -0.37258892216723 *
1097701   +        Complain0  +     0.14107103807235 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H16 = H16 + -0.10522820178908 * AcceptedCmp10 + 0.20645125728354 * 
AcceptedCmp20 + 0.34040121966792 * AcceptedCmp30 + -0.02259616994399 * AcceptedCmp40 + 
-0.22123397523195 * AcceptedCmp50 + -0.37258892216723 * Complain0 + 0.14107103807235 * 
HigherEducationBinary0 ;
1097702   +   H17  = H17  +    -0.09096203784003 * AcceptedCmp10
1097703   +          +    -0.04735484605229 * AcceptedCmp20  +     -0.4485810761844 *
1097704   +        AcceptedCmp30  +     0.10362320405529 * AcceptedCmp40
1097705   +          +    -0.05214433990448 * AcceptedCmp50  +    -0.19339827696554 *
1097706   +        Complain0  +    -0.21246690264814 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H17 = H17 + -0.09096203784003 * AcceptedCmp10 + -0.04735484605229 * 
AcceptedCmp20 + -0.4485810761844 * AcceptedCmp30 + 0.10362320405529 * AcceptedCmp40 + 
-0.05214433990448 * AcceptedCmp50 + -0.19339827696554 * Complain0 + -0.21246690264814 * 
HigherEducationBinary0 ;
1097707   +   H11  = H11  +    -0.16759278562529 * Education2n_Cycle
1097708   +          +    -0.31449574789464 * EducationBasic  +     0.13281408830843 *
1097709   +        EducationGraduation  +      0.0199258483942 * EducationMaster
1097710   +          +     0.03245181998921 * Marital_StatusDivorced
1097711   +          +     0.29722741247663 * Marital_StatusMarried
1097712   +          +    -0.05683085497262 * Marital_StatusSingle
1097713   +          +     0.27914630307932 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.16759278562529 * Education2n_Cycle + -0.31449574789464 * 
EducationBasic + 0.13281408830843 * EducationGraduation + 0.0199258483942 * EducationMaster + 
0.03245181998921 * Marital_StatusDivorced + 0.29722741247663 * Marital_StatusMarried + 
-0.05683085497262 * Marital_StatusSingle + 0.27914630307932 * Marital_StatusTogether ;
1097714   +   H12  = H12  +    -0.10709422401859 * Education2n_Cycle
1097715   +          +     0.25457515905931 * EducationBasic  +    -0.26018740430941 *
1097716   +        EducationGraduation  +     0.05808954602972 * EducationMaster
1097717   +          +    -0.13095826187081 * Marital_StatusDivorced
1097718   +          +     0.29509760197193 * Marital_StatusMarried
1097719   +          +    -0.21019918550166 * Marital_StatusSingle
1097720   +          +     0.12557122666089 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.10709422401859 * Education2n_Cycle + 0.25457515905931 * 
EducationBasic + -0.26018740430941 * EducationGraduation + 0.05808954602972 * EducationMaster 
+ -0.13095826187081 * Marital_StatusDivorced + 0.29509760197193 * Marital_StatusMarried + 
-0.21019918550166 * Marital_StatusSingle + 0.12557122666089 * Marital_StatusTogether ;
1097721   +   H13  = H13  +     0.16189957128414 * Education2n_Cycle
1097722   +          +    -0.08593025695878 * EducationBasic  +     0.11065463845302 *
1097723   +        EducationGraduation  +    -0.23434271231945 * EducationMaster
1097724   +          +     0.03746692643939 * Marital_StatusDivorced
1097725   +          +     0.03482798841727 * Marital_StatusMarried
1097726   +          +     0.16645207250571 * Marital_StatusSingle
1097727   +          +    -0.40169040281111 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.16189957128414 * Education2n_Cycle + -0.08593025695878 * 
EducationBasic + 0.11065463845302 * EducationGraduation + -0.23434271231945 * EducationMaster 
+ 0.03746692643939 * Marital_StatusDivorced + 0.03482798841727 * Marital_StatusMarried + 
0.16645207250571 * Marital_StatusSingle + -0.40169040281111 * Marital_StatusTogether ;
1097728   +   H14  = H14  +      0.0929589076858 * Education2n_Cycle
1097729   +          +     0.17576896755796 * EducationBasic  +    -0.08548079761525 *
1097730   +        EducationGraduation  +     -0.0086494793343 * EducationMaster
1097731   +          +     -0.0753971504765 * Marital_StatusDivorced
1097732   +          +     0.20446719655724 * Marital_StatusMarried
1097733   +          +     0.21472836757686 * Marital_StatusSingle
1097734   +          +     0.25097210445128 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.0929589076858 * Education2n_Cycle + 0.17576896755796 * 
EducationBasic + -0.08548079761525 * EducationGraduation + -0.0086494793343 * EducationMaster 
+ -0.0753971504765 * Marital_StatusDivorced + 0.20446719655724 * Marital_StatusMarried + 
0.21472836757686 * Marital_StatusSingle + 0.25097210445128 * Marital_StatusTogether ;
1097735   +   H15  = H15  +     0.05613706593293 * Education2n_Cycle
1097736   +          +     0.15733773983498 * EducationBasic  +     0.18710928885666 *
1097737   +        EducationGraduation  +    -0.40226962940436 * EducationMaster
1097738   +          +     0.16191937298215 * Marital_StatusDivorced
1097739   +          +    -0.81780658848614 * Marital_StatusMarried
1097740   +          +     0.84981159748349 * Marital_StatusSingle
1097741   +          +    -0.81246154443713 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.05613706593293 * Education2n_Cycle + 0.15733773983498 * 
EducationBasic + 0.18710928885666 * EducationGraduation + -0.40226962940436 * EducationMaster 
+ 0.16191937298215 * Marital_StatusDivorced + -0.81780658848614 * Marital_StatusMarried + 
0.84981159748349 * Marital_StatusSingle + -0.81246154443713 * Marital_StatusTogether ;
1097742   +   H16  = H16  +    -0.15143146742513 * Education2n_Cycle
1097743   +          +    -0.32039616194876 * EducationBasic  +     0.14759493683433 *
1097744   +        EducationGraduation  +    -0.24148020292763 * EducationMaster
1097745   +          +    -0.01766312280073 * Marital_StatusDivorced
1097746   +          +     0.04455346003394 * Marital_StatusMarried
1097747   +          +    -0.05433982251127 * Marital_StatusSingle
1097748   +          +     0.07585750304293 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H16 = H16 + -0.15143146742513 * Education2n_Cycle + -0.32039616194876 * 
EducationBasic + 0.14759493683433 * EducationGraduation + -0.24148020292763 * EducationMaster 
+ -0.01766312280073 * Marital_StatusDivorced + 0.04455346003394 * Marital_StatusMarried + 
-0.05433982251127 * Marital_StatusSingle + 0.07585750304293 * Marital_StatusTogether ;
1097749   +   H17  = H17  +    -0.18844639887236 * Education2n_Cycle
1097750   +          +     0.31793429928185 * EducationBasic  +     0.21885580860665 *
1097751   +        EducationGraduation  +      0.1367538666381 * EducationMaster
1097752   +          +        0.22905595967 * Marital_StatusDivorced
1097753   +          +      0.1024998677695 * Marital_StatusMarried
1097754   +          +    -0.07752101768018 * Marital_StatusSingle
1097755   +          +    -0.19408218868635 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H17 = H17 + -0.18844639887236 * Education2n_Cycle + 0.31793429928185 * 
EducationBasic + 0.21885580860665 * EducationGraduation + 0.1367538666381 * EducationMaster + 
0.22905595967 * Marital_StatusDivorced + 0.1024998677695 * Marital_StatusMarried + 
-0.07752101768018 * Marital_StatusSingle + -0.19408218868635 * Marital_StatusTogether ;
1097756   +   H11  =     1.31548476078312 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 1.31548476078312 + H11 ;
1097757   +   H12  =     0.20389286508203 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.20389286508203 + H12 ;
1097758   +   H13  =    -0.77820109969785 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.77820109969785 + H13 ;
1097759   +   H14  =     0.85462770897247 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 0.85462770897247 + H14 ;
1097760   +   H15  =    -0.15190484788676 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = -0.15190484788676 + H15 ;
1097761   +   H16  =     -0.7146854381659 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = -0.7146854381659 + H16 ;
1097762   +   H17  =    -1.06220893322882 + H17 ;
MPRINT(EM_DIAGRAM):   H17 = -1.06220893322882 + H17 ;
1097763   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1097764   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1097765   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1097766   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1097767   +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
1097768   +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
1097769   +   H17  = TANH(H17 );
MPRINT(EM_DIAGRAM):   H17 = TANH(H17 );
1097770   +END;
MPRINT(EM_DIAGRAM):   END;
1097771   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1097772   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1097773   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1097774   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1097775   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1097776   +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
1097777   +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
1097778   +   H17  = .;
MPRINT(EM_DIAGRAM):   H17 = .;
1097779   +END;
MPRINT(EM_DIAGRAM):   END;
1097780   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1097781   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1097782   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1097783   +
1097784   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1097785   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1097786   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1097787   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1097788   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1097789   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1097790   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1097791   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1097792   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1097793   +end;
MPRINT(EM_DIAGRAM):   end;
1097794   +else do;
MPRINT(EM_DIAGRAM):   else do;
1097795   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1097796   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1097797   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1097798   +   end;
MPRINT(EM_DIAGRAM):   end;
1097799   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1097800   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1097801   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1097802   +   end;
MPRINT(EM_DIAGRAM):   end;
1097803   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1097804   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1097805   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1097806   +   end;
MPRINT(EM_DIAGRAM):   end;
1097807   +end;
MPRINT(EM_DIAGRAM):   end;
1097808   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1097809   +   P_DepVar1  =    -0.11628699177184 * H11  +    -2.70843270240794 * H12
1097810   +          +    -1.81814079406916 * H13  +    -1.84852165774564 * H14
1097811   +          +     2.53533827620448 * H15  +    -0.20106950795136 * H16
1097812   +          +     1.26058098194871 * H17 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.11628699177184 * H11 + -2.70843270240794 * H12 + 
-1.81814079406916 * H13 + -1.84852165774564 * H14 + 2.53533827620448 * H15 + -0.20106950795136 
* H16 + 1.26058098194871 * H17 ;
1097813   +   P_DepVar1  =    -1.66152267043508 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.66152267043508 + P_DepVar1 ;
1097814   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1097815   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1097816   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1097817   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1097818   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1097819   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1097820   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1097821   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1097822   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1097823   +END;
MPRINT(EM_DIAGRAM):   END;
1097824   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1097825   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1097826   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1097827   +END;
MPRINT(EM_DIAGRAM):   END;
1097828   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1097829   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1097830   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1097831   +END;
MPRINT(EM_DIAGRAM):   END;
1097832   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1097833   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1097834   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1097835   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1097836   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1097837   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1097838   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1097839   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1097840   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1097841   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1097842   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1097843   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1097844   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1097845   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1097846   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1097847   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1097848   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1097849   +END;
MPRINT(EM_DIAGRAM):   END;
1097850   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1097851   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1097852   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1097853   +drop
1097854   +H11
1097855   +H12
1097856   +H13
1097857   +H14
1097858   +H15
1097859   +H16
1097860   +H17
1097861   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 H17 ;
1097862   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1097863   +* Renaming variables for Neural36;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural36;
1097864   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1097865   +* Renaming Posterior variables for Neural36;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural36;
1097866   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1097867   +drop Neural36_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural36_P_DepVar1;
1097868   +Neural36_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural36_P_DepVar1 = P_DepVar1;
1097869   +drop Neural36_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural36_P_DepVar0;
1097870   +Neural36_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural36_P_DepVar0 = P_DepVar0;
1097871   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1097872   +* Renaming _WARN_ variable for Neural36;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural36;
1097873   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1097874   +length Neural36_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural36_WARN_ $4;
1097875   +drop Neural36_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural36_WARN_;
1097876   +Neural36_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural36_WARN_ = _WARN_;
1097877   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1097878   +* Ensmbl12: Scoring Code of model 10 of 10;
MPRINT(EM_DIAGRAM):   * Ensmbl12: Scoring Code of model 10 of 10;
1097879   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1097880   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1097881   +* TOOL: Regression;
MPRINT(EM_DIAGRAM):   * TOOL: Regression;
1097882   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1097883   +* NODE: Reg11;
MPRINT(EM_DIAGRAM):   * NODE: Reg11;
1097884   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1097885   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1097886   +*** begin scoring code for regression;
MPRINT(EM_DIAGRAM):   *** begin scoring code for regression;
1097887   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1097888   +
1097889   +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
1097890   +label _WARN_ = 'Warnings' ;
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings' ;
1097891   +
1097892   +length I_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length I_DepVar $ 12;
1097893   +label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1097894   +*** Target Values;
MPRINT(EM_DIAGRAM):   *** Target Values;
1097895   +array REG11DRF [2] $12 _temporary_ ('1' '0' );
MPRINT(EM_DIAGRAM):   array REG11DRF [2] $12 _temporary_ ('1' '0' );
1097896   +label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1097897   +format U_DepVar BEST.;
MPRINT(EM_DIAGRAM):   format U_DepVar BEST.;
1097898   +*** Unnormalized target values;
MPRINT(EM_DIAGRAM):   *** Unnormalized target values;
1097899   +ARRAY REG11DRU[2]  _TEMPORARY_ (1 0);
MPRINT(EM_DIAGRAM):   ARRAY REG11DRU[2] _TEMPORARY_ (1 0);
1097900   +
1097901   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1097902   +drop _Y ;
MPRINT(EM_DIAGRAM):   drop _Y ;
1097903   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1097904   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1097905   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1097906   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1097907   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1097908   +   _Y = .;
MPRINT(EM_DIAGRAM):   _Y = .;
1097909   +end;
MPRINT(EM_DIAGRAM):   end;
1097910   +else do;
MPRINT(EM_DIAGRAM):   else do;
1097911   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1097912   +      _Y = 1;
MPRINT(EM_DIAGRAM):   _Y = 1;
1097913   +   end;
MPRINT(EM_DIAGRAM):   end;
1097914   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1097915   +      _Y = 0;
MPRINT(EM_DIAGRAM):   _Y = 0;
1097916   +   end;
MPRINT(EM_DIAGRAM):   end;
1097917   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1097918   +      _Y = .;
MPRINT(EM_DIAGRAM):   _Y = .;
1097919   +   end;
MPRINT(EM_DIAGRAM):   end;
1097920   +end;
MPRINT(EM_DIAGRAM):   end;
1097921   +
1097922   +drop _DM_BAD;
MPRINT(EM_DIAGRAM):   drop _DM_BAD;
1097923   +_DM_BAD=0;
MPRINT(EM_DIAGRAM):   _DM_BAD=0;
1097924   +
1097925   +*** Check AcceptedCmpTotal for missing values ;
MPRINT(EM_DIAGRAM):   *** Check AcceptedCmpTotal for missing values ;
1097926   +if missing( AcceptedCmpTotal ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmpTotal ) then do;
1097927   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1097928   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1097929   +end;
MPRINT(EM_DIAGRAM):   end;
1097930   +
1097931   +*** Check Age for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Age for missing values ;
1097932   +if missing( Age ) then do;
MPRINT(EM_DIAGRAM):   if missing( Age ) then do;
1097933   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1097934   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1097935   +end;
MPRINT(EM_DIAGRAM):   end;
1097936   +
1097937   +*** Check Frq for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Frq for missing values ;
1097938   +if missing( Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( Frq ) then do;
1097939   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1097940   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1097941   +end;
MPRINT(EM_DIAGRAM):   end;
1097942   +
1097943   +*** Check Income for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Income for missing values ;
1097944   +if missing( Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( Income ) then do;
1097945   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1097946   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1097947   +end;
MPRINT(EM_DIAGRAM):   end;
1097948   +
1097949   +*** Check NumDealsPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumDealsPurchases for missing values ;
1097950   +if missing( NumDealsPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumDealsPurchases ) then do;
1097951   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1097952   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1097953   +end;
MPRINT(EM_DIAGRAM):   end;
1097954   +
1097955   +*** Check NumWebVisitsMonth for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumWebVisitsMonth for missing values ;
1097956   +if missing( NumWebVisitsMonth ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumWebVisitsMonth ) then do;
1097957   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1097958   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1097959   +end;
MPRINT(EM_DIAGRAM):   end;
1097960   +
1097961   +*** Check RFMstat for missing values ;
MPRINT(EM_DIAGRAM):   *** Check RFMstat for missing values ;
1097962   +if missing( RFMstat ) then do;
MPRINT(EM_DIAGRAM):   if missing( RFMstat ) then do;
1097963   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1097964   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1097965   +end;
MPRINT(EM_DIAGRAM):   end;
1097966   +
1097967   +*** Check RMntFrq for missing values ;
MPRINT(EM_DIAGRAM):   *** Check RMntFrq for missing values ;
1097968   +if missing( RMntFrq ) then do;
MPRINT(EM_DIAGRAM):   if missing( RMntFrq ) then do;
1097969   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1097970   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1097971   +end;
MPRINT(EM_DIAGRAM):   end;
1097972   +
1097973   +*** Check Recency for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Recency for missing values ;
1097974   +if missing( Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( Recency ) then do;
1097975   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1097976   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1097977   +end;
MPRINT(EM_DIAGRAM):   end;
1097978   +
1097979   +*** Check Teenhome for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Teenhome for missing values ;
1097980   +if missing( Teenhome ) then do;
MPRINT(EM_DIAGRAM):   if missing( Teenhome ) then do;
1097981   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1097982   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1097983   +end;
MPRINT(EM_DIAGRAM):   end;
1097984   +
1097985   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1097986   +drop _3_0 ;
MPRINT(EM_DIAGRAM):   drop _3_0 ;
1097987   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1097988   +   _3_0 = .;
MPRINT(EM_DIAGRAM):   _3_0 = .;
1097989   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1097990   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1097991   +end;
MPRINT(EM_DIAGRAM):   end;
1097992   +else do;
MPRINT(EM_DIAGRAM):   else do;
1097993   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1097994   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1097995   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1097996   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1097997   +      _3_0 = 1;
MPRINT(EM_DIAGRAM):   _3_0 = 1;
1097998   +   end;
MPRINT(EM_DIAGRAM):   end;
1097999   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1098000   +      _3_0 = -1;
MPRINT(EM_DIAGRAM):   _3_0 = -1;
1098001   +   end;
MPRINT(EM_DIAGRAM):   end;
1098002   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1098003   +      _3_0 = .;
MPRINT(EM_DIAGRAM):   _3_0 = .;
1098004   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1098005   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1098006   +   end;
MPRINT(EM_DIAGRAM):   end;
1098007   +end;
MPRINT(EM_DIAGRAM):   end;
1098008   +
1098009   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1098010   +drop _4_0 ;
MPRINT(EM_DIAGRAM):   drop _4_0 ;
1098011   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1098012   +   _4_0 = .;
MPRINT(EM_DIAGRAM):   _4_0 = .;
1098013   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1098014   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1098015   +end;
MPRINT(EM_DIAGRAM):   end;
1098016   +else do;
MPRINT(EM_DIAGRAM):   else do;
1098017   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1098018   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1098019   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1098020   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1098021   +      _4_0 = 1;
MPRINT(EM_DIAGRAM):   _4_0 = 1;
1098022   +   end;
MPRINT(EM_DIAGRAM):   end;
1098023   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1098024   +      _4_0 = -1;
MPRINT(EM_DIAGRAM):   _4_0 = -1;
1098025   +   end;
MPRINT(EM_DIAGRAM):   end;
1098026   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1098027   +      _4_0 = .;
MPRINT(EM_DIAGRAM):   _4_0 = .;
1098028   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1098029   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1098030   +   end;
MPRINT(EM_DIAGRAM):   end;
1098031   +end;
MPRINT(EM_DIAGRAM):   end;
1098032   +
1098033   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1098034   +drop _9_0 _9_1 _9_2 _9_3 ;
MPRINT(EM_DIAGRAM):   drop _9_0 _9_1 _9_2 _9_3 ;
1098035   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1098036   +_9_0 = 0;
MPRINT(EM_DIAGRAM):   _9_0 = 0;
1098037   +_9_1 = 0;
MPRINT(EM_DIAGRAM):   _9_1 = 0;
1098038   +_9_2 = 0;
MPRINT(EM_DIAGRAM):   _9_2 = 0;
1098039   +_9_3 = 0;
MPRINT(EM_DIAGRAM):   _9_3 = 0;
1098040   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1098041   +   _9_0 = .;
MPRINT(EM_DIAGRAM):   _9_0 = .;
1098042   +   _9_1 = .;
MPRINT(EM_DIAGRAM):   _9_1 = .;
1098043   +   _9_2 = .;
MPRINT(EM_DIAGRAM):   _9_2 = .;
1098044   +   _9_3 = .;
MPRINT(EM_DIAGRAM):   _9_3 = .;
1098045   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1098046   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1098047   +end;
MPRINT(EM_DIAGRAM):   end;
1098048   +else do;
MPRINT(EM_DIAGRAM):   else do;
1098049   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1098050   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1098051   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1098052   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1098053   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1098054   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1098055   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1098056   +            _9_0 = 1;
MPRINT(EM_DIAGRAM):   _9_0 = 1;
1098057   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1098058   +         end;
MPRINT(EM_DIAGRAM):   end;
1098059   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1098060   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1098061   +               _9_1 = 1;
MPRINT(EM_DIAGRAM):   _9_1 = 1;
1098062   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1098063   +            end;
MPRINT(EM_DIAGRAM):   end;
1098064   +         end;
MPRINT(EM_DIAGRAM):   end;
1098065   +      end;
MPRINT(EM_DIAGRAM):   end;
1098066   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1098067   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1098068   +            _9_2 = 1;
MPRINT(EM_DIAGRAM):   _9_2 = 1;
1098069   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1098070   +         end;
MPRINT(EM_DIAGRAM):   end;
1098071   +      end;
MPRINT(EM_DIAGRAM):   end;
1098072   +   end;
MPRINT(EM_DIAGRAM):   end;
1098073   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1098074   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1098075   +         _9_3 = 1;
MPRINT(EM_DIAGRAM):   _9_3 = 1;
1098076   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1098077   +      end;
MPRINT(EM_DIAGRAM):   end;
1098078   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1098079   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1098080   +            _9_0 = -1;
MPRINT(EM_DIAGRAM):   _9_0 = -1;
1098081   +            _9_1 = -1;
MPRINT(EM_DIAGRAM):   _9_1 = -1;
1098082   +            _9_2 = -1;
MPRINT(EM_DIAGRAM):   _9_2 = -1;
1098083   +            _9_3 = -1;
MPRINT(EM_DIAGRAM):   _9_3 = -1;
1098084   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1098085   +         end;
MPRINT(EM_DIAGRAM):   end;
1098086   +      end;
MPRINT(EM_DIAGRAM):   end;
1098087   +   end;
MPRINT(EM_DIAGRAM):   end;
1098088   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1098089   +      _9_0 = .;
MPRINT(EM_DIAGRAM):   _9_0 = .;
1098090   +      _9_1 = .;
MPRINT(EM_DIAGRAM):   _9_1 = .;
1098091   +      _9_2 = .;
MPRINT(EM_DIAGRAM):   _9_2 = .;
1098092   +      _9_3 = .;
MPRINT(EM_DIAGRAM):   _9_3 = .;
1098093   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1098094   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1098095   +   end;
MPRINT(EM_DIAGRAM):   end;
1098096   +end;
MPRINT(EM_DIAGRAM):   end;
1098097   +
1098098   +*** If missing inputs, use averages;
MPRINT(EM_DIAGRAM):   *** If missing inputs, use averages;
1098099   +if _DM_BAD > 0 then do;
MPRINT(EM_DIAGRAM):   if _DM_BAD > 0 then do;
1098100   +   _P0 = 0.151221567;
MPRINT(EM_DIAGRAM):   _P0 = 0.151221567;
1098101   +   _P1 = 0.848778433;
MPRINT(EM_DIAGRAM):   _P1 = 0.848778433;
1098102   +   goto REG11DR1;
MPRINT(EM_DIAGRAM):   goto REG11DR1;
1098103   +end;
MPRINT(EM_DIAGRAM):   end;
1098104   +
1098105   +*** Compute Linear Predictor;
MPRINT(EM_DIAGRAM):   *** Compute Linear Predictor;
1098106   +drop _TEMP;
MPRINT(EM_DIAGRAM):   drop _TEMP;
1098107   +drop _LP0;
MPRINT(EM_DIAGRAM):   drop _LP0;
1098108   +_LP0 = 0;
MPRINT(EM_DIAGRAM):   _LP0 = 0;
1098109   +
1098110   +***  Effect: AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Effect: AcceptedCmp3 ;
1098111   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1098112   +_LP0 = _LP0 + (   -0.21402292491598) * _TEMP * _3_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.21402292491598) * _TEMP * _3_0;
1098113   +
1098114   +***  Effect: AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Effect: AcceptedCmp4 ;
1098115   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1098116   +_LP0 = _LP0 + (    0.20181176396468) * _TEMP * _4_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.20181176396468) * _TEMP * _4_0;
1098117   +
1098118   +***  Effect: AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   *** Effect: AcceptedCmpTotal ;
1098119   +_TEMP = AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   _TEMP = AcceptedCmpTotal ;
1098120   +_LP0 = _LP0 + (    1.01331254975906 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.01331254975906 * _TEMP);
1098121   +
1098122   +***  Effect: Age ;
MPRINT(EM_DIAGRAM):   *** Effect: Age ;
1098123   +_TEMP = Age ;
MPRINT(EM_DIAGRAM):   _TEMP = Age ;
1098124   +_LP0 = _LP0 + (   -0.00968312823761 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.00968312823761 * _TEMP);
1098125   +
1098126   +***  Effect: Frq ;
MPRINT(EM_DIAGRAM):   *** Effect: Frq ;
1098127   +_TEMP = Frq ;
MPRINT(EM_DIAGRAM):   _TEMP = Frq ;
1098128   +_LP0 = _LP0 + (   -0.03456417718144 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.03456417718144 * _TEMP);
1098129   +
1098130   +***  Effect: Income ;
MPRINT(EM_DIAGRAM):   *** Effect: Income ;
1098131   +_TEMP = Income ;
MPRINT(EM_DIAGRAM):   _TEMP = Income ;
1098132   +_LP0 = _LP0 + (    0.00002539988923 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00002539988923 * _TEMP);
1098133   +
1098134   +***  Effect: Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Effect: Marital_Status ;
1098135   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1098136   +_LP0 = _LP0 + (    0.11081046192241) * _TEMP * _9_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.11081046192241) * _TEMP * _9_0;
1098137   +_LP0 = _LP0 + (   -0.36385893866909) * _TEMP * _9_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.36385893866909) * _TEMP * _9_1;
1098138   +_LP0 = _LP0 + (    0.25486771612086) * _TEMP * _9_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.25486771612086) * _TEMP * _9_2;
1098139   +_LP0 = _LP0 + (   -0.40515143447522) * _TEMP * _9_3;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.40515143447522) * _TEMP * _9_3;
1098140   +
1098141   +***  Effect: NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumDealsPurchases ;
1098142   +_TEMP = NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumDealsPurchases ;
1098143   +_LP0 = _LP0 + (    0.21113804572457 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.21113804572457 * _TEMP);
1098144   +
1098145   +***  Effect: NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   *** Effect: NumWebVisitsMonth ;
1098146   +_TEMP = NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   _TEMP = NumWebVisitsMonth ;
1098147   +_LP0 = _LP0 + (    0.17412114550604 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.17412114550604 * _TEMP);
1098148   +
1098149   +***  Effect: RFMstat ;
MPRINT(EM_DIAGRAM):   *** Effect: RFMstat ;
1098150   +_TEMP = RFMstat ;
MPRINT(EM_DIAGRAM):   _TEMP = RFMstat ;
1098151   +_LP0 = _LP0 + (    0.00006841011087 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00006841011087 * _TEMP);
1098152   +
1098153   +***  Effect: RMntFrq ;
MPRINT(EM_DIAGRAM):   *** Effect: RMntFrq ;
1098154   +_TEMP = RMntFrq ;
MPRINT(EM_DIAGRAM):   _TEMP = RMntFrq ;
1098155   +_LP0 = _LP0 + (    0.00529455452809 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00529455452809 * _TEMP);
1098156   +
1098157   +***  Effect: Recency ;
MPRINT(EM_DIAGRAM):   *** Effect: Recency ;
1098158   +_TEMP = Recency ;
MPRINT(EM_DIAGRAM):   _TEMP = Recency ;
1098159   +_LP0 = _LP0 + (   -0.03257124268465 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.03257124268465 * _TEMP);
1098160   +
1098161   +***  Effect: Teenhome ;
MPRINT(EM_DIAGRAM):   *** Effect: Teenhome ;
1098162   +_TEMP = Teenhome ;
MPRINT(EM_DIAGRAM):   _TEMP = Teenhome ;
1098163   +_LP0 = _LP0 + (   -0.71325798797505 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.71325798797505 * _TEMP);
1098164   +
1098165   +*** Naive Posterior Probabilities;
MPRINT(EM_DIAGRAM):   *** Naive Posterior Probabilities;
1098166   +drop _MAXP _IY _P0 _P1;
MPRINT(EM_DIAGRAM):   drop _MAXP _IY _P0 _P1;
1098167   +_P0 = probnorm((   -2.04830407754231) + _LP0);
MPRINT(EM_DIAGRAM):   _P0 = probnorm(( -2.04830407754231) + _LP0);
1098168   +_P1 = 1.0 - _P0;
MPRINT(EM_DIAGRAM):   _P1 = 1.0 - _P0;
1098169   +
1098170   +REG11DR1:
1098171   +
1098172   +*** Residuals;
MPRINT(EM_DIAGRAM):   REG11DR1: *** Residuals;
1098173   +if (_Y = .) then do;
MPRINT(EM_DIAGRAM):   if (_Y = .) then do;
1098174   +   R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
1098175   +   R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
1098176   +end;
MPRINT(EM_DIAGRAM):   end;
1098177   +else do;
MPRINT(EM_DIAGRAM):   else do;
1098178   +    label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1098179   +    label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1098180   +   R_DepVar1 = - _P0;
MPRINT(EM_DIAGRAM):   R_DepVar1 = - _P0;
1098181   +   R_DepVar0 = - _P1;
MPRINT(EM_DIAGRAM):   R_DepVar0 = - _P1;
1098182   +   select( _Y );
MPRINT(EM_DIAGRAM):   select( _Y );
1098183   +      when (0)  R_DepVar1 = R_DepVar1 + 1;
MPRINT(EM_DIAGRAM):   when (0) R_DepVar1 = R_DepVar1 + 1;
1098184   +      when (1)  R_DepVar0 = R_DepVar0 + 1;
MPRINT(EM_DIAGRAM):   when (1) R_DepVar0 = R_DepVar0 + 1;
1098185   +   end;
MPRINT(EM_DIAGRAM):   end;
1098186   +end;
MPRINT(EM_DIAGRAM):   end;
1098187   +
1098188   +*** Posterior Probabilities and Predicted Level;
MPRINT(EM_DIAGRAM):   *** Posterior Probabilities and Predicted Level;
1098189   +label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1098190   +label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1098191   +P_DepVar1 = _P0;
MPRINT(EM_DIAGRAM):   P_DepVar1 = _P0;
1098192   +_MAXP = _P0;
MPRINT(EM_DIAGRAM):   _MAXP = _P0;
1098193   +_IY = 1;
MPRINT(EM_DIAGRAM):   _IY = 1;
1098194   +P_DepVar0 = _P1;
MPRINT(EM_DIAGRAM):   P_DepVar0 = _P1;
1098195   +if (_P1 >  _MAXP + 1E-8) then do;
MPRINT(EM_DIAGRAM):   if (_P1 > _MAXP + 1E-8) then do;
1098196   +   _MAXP = _P1;
MPRINT(EM_DIAGRAM):   _MAXP = _P1;
1098197   +   _IY = 2;
MPRINT(EM_DIAGRAM):   _IY = 2;
1098198   +end;
MPRINT(EM_DIAGRAM):   end;
1098199   +I_DepVar = REG11DRF[_IY];
MPRINT(EM_DIAGRAM):   I_DepVar = REG11DRF[_IY];
1098200   +U_DepVar = REG11DRU[_IY];
MPRINT(EM_DIAGRAM):   U_DepVar = REG11DRU[_IY];
1098201   +
1098202   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1098203   +***** end scoring code for regression;
MPRINT(EM_DIAGRAM):   ***** end scoring code for regression;
1098204   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1098205   +* Renaming variables for Reg11;
MPRINT(EM_DIAGRAM):   * Renaming variables for Reg11;
1098206   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1098207   +* Renaming Posterior variables for Reg11;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Reg11;
1098208   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1098209   +drop Reg11_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Reg11_P_DepVar1;
1098210   +Reg11_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Reg11_P_DepVar1 = P_DepVar1;
1098211   +drop Reg11_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Reg11_P_DepVar0;
1098212   +Reg11_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Reg11_P_DepVar0 = P_DepVar0;
1098213   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1098214   +* Renaming _WARN_ variable for Reg11;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Reg11;
1098215   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1098216   +length Reg11_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Reg11_WARN_ $4;
1098217   +drop Reg11_WARN_;
MPRINT(EM_DIAGRAM):   drop Reg11_WARN_;
1098218   +Reg11_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Reg11_WARN_ = _WARN_;
1098219   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1098220   +* Ensmbl12: Average Posteriors of 10 models;
MPRINT(EM_DIAGRAM):   * Ensmbl12: Average Posteriors of 10 models;
1098221   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1098222   +P_DepVar1 = (
1098223   +Reg12_P_DepVar1 +
1098224   +Tree6_P_DepVar1 +
1098225   +Neural39_P_DepVar1 +
1098226   +Neural42_P_DepVar1 +
1098227   +Neural37_P_DepVar1 +
1098228   +Neural38_P_DepVar1 +
1098229   +Neural40_P_DepVar1 +
1098230   +Neural41_P_DepVar1 +
1098231   +Neural36_P_DepVar1 +
1098232   +Reg11_P_DepVar1
1098233   +)/10;
MPRINT(EM_DIAGRAM):   P_DepVar1 = ( Reg12_P_DepVar1 + Tree6_P_DepVar1 + Neural39_P_DepVar1 + 
Neural42_P_DepVar1 + Neural37_P_DepVar1 + Neural38_P_DepVar1 + Neural40_P_DepVar1 + 
Neural41_P_DepVar1 + Neural36_P_DepVar1 + Reg11_P_DepVar1 )/10;
1098234   +P_DepVar0 = (
1098235   +Reg12_P_DepVar0 +
1098236   +Tree6_P_DepVar0 +
1098237   +Neural39_P_DepVar0 +
1098238   +Neural42_P_DepVar0 +
1098239   +Neural37_P_DepVar0 +
1098240   +Neural38_P_DepVar0 +
1098241   +Neural40_P_DepVar0 +
1098242   +Neural41_P_DepVar0 +
1098243   +Neural36_P_DepVar0 +
1098244   +Reg11_P_DepVar0
1098245   +)/10;
MPRINT(EM_DIAGRAM):   P_DepVar0 = ( Reg12_P_DepVar0 + Tree6_P_DepVar0 + Neural39_P_DepVar0 + 
Neural42_P_DepVar0 + Neural37_P_DepVar0 + Neural38_P_DepVar0 + Neural40_P_DepVar0 + 
Neural41_P_DepVar0 + Neural36_P_DepVar0 + Reg11_P_DepVar0 )/10;
1098246   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1098247   +* Ensmbl12: Computing Classification Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl12: Computing Classification Vars;
1098248   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1098249   +length I_DepVar $32;
MPRINT(EM_DIAGRAM):   length I_DepVar $32;
WARNING: Length of character variable I_DepVar has already been set. 
         Use the LENGTH statement as the very first statement in the DATA STEP to declare the 
         length of a character variable.
1098250   +label I_DepVar = 'Into: DepVar';
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar';
1098251   +length _format $200;
MPRINT(EM_DIAGRAM):   length _format $200;
1098252   +drop _format;
MPRINT(EM_DIAGRAM):   drop _format;
1098253   +_format= ' ';
MPRINT(EM_DIAGRAM):   _format= ' ';
1098254   +_p_= 0;
MPRINT(EM_DIAGRAM):   _p_= 0;
1098255   +drop _p_;
MPRINT(EM_DIAGRAM):   drop _p_;
1098256   +if P_DepVar1 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar1 > _p_ then do;
1098257   +_p_= P_DepVar1;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar1;
1098258   +_format= '1';
MPRINT(EM_DIAGRAM):   _format= '1';
1098259   +end;
MPRINT(EM_DIAGRAM):   end;
1098260   +if P_DepVar0 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar0 > _p_ then do;
1098261   +_p_= P_DepVar0;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar0;
1098262   +_format= '0';
MPRINT(EM_DIAGRAM):   _format= '0';
1098263   +end;
MPRINT(EM_DIAGRAM):   end;
1098264   +%DMNORMCP(_format,I_DepVar);
MPRINT(DMNORMCP):   I_DepVar=dmnorm(_format,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1098265   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1098266   +* Ensmbl12: Producing Unformatted variable;
MPRINT(EM_DIAGRAM):   * Ensmbl12: Producing Unformatted variable;
1098267   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1098268   +label U_DepVar = "Unnormalized Into: DepVar";
MPRINT(EM_DIAGRAM):   label U_DepVar = "Unnormalized Into: DepVar";
1098269   +if I_DepVar = '1' then U_DepVar = 1;
MPRINT(EM_DIAGRAM):   if I_DepVar = '1' then U_DepVar = 1;
1098270   +else
1098271   +if I_DepVar = '0' then U_DepVar = 0;
MPRINT(EM_DIAGRAM):   else if I_DepVar = '0' then U_DepVar = 0;
1098272   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1098273   +* Ensmbl12: Computing _WARN_ Variable;
MPRINT(EM_DIAGRAM):   * Ensmbl12: Computing _WARN_ Variable;
1098274   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1098275   +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
1098276   +label _WARN_ = 'Warnings';
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings';
1098277   +_WARN_ = '';
MPRINT(EM_DIAGRAM):   _WARN_ = '';
1098278   +if index(REG12_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(REG12_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 
1, 1) ='M';
1098279   +if index(REG12_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(REG12_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 
2, 1) ='U';
1098280   +if index(REG12_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(REG12_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 
3, 1) ='P';
1098281   +if index(REG12_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(REG12_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 
4, 1) ='C';
1098282   +if index(TREE6_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(TREE6_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 
1, 1) ='M';
1098283   +if index(TREE6_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(TREE6_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 
2, 1) ='U';
1098284   +if index(TREE6_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(TREE6_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 
3, 1) ='P';
1098285   +if index(TREE6_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(TREE6_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 
4, 1) ='C';
1098286   +if index(NEURAL39_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M'
1098286  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL39_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
1098287   +if index(NEURAL39_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U'
1098287  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL39_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
1098288   +if index(NEURAL39_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P'
1098288  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL39_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
1098289   +if index(NEURAL39_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C'
1098289  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL39_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
1098290   +if index(NEURAL42_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M'
1098290  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL42_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
1098291   +if index(NEURAL42_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U'
1098291  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL42_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
1098292   +if index(NEURAL42_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P'
1098292  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL42_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
1098293   +if index(NEURAL42_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C'
1098293  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL42_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
1098294   +if index(NEURAL37_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M'
1098294  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL37_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
1098295   +if index(NEURAL37_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U'
1098295  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL37_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
1098296   +if index(NEURAL37_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P'
1098296  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL37_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
1098297   +if index(NEURAL37_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C'
1098297  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL37_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
1098298   +if index(NEURAL38_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M'
1098298  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL38_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
1098299   +if index(NEURAL38_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U'
1098299  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL38_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
1098300   +if index(NEURAL38_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P'
1098300  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL38_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
1098301   +if index(NEURAL38_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C'
1098301  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL38_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
1098302   +if index(NEURAL40_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M'
1098302  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL40_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
1098303   +if index(NEURAL40_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U'
1098303  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL40_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
1098304   +if index(NEURAL40_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P'
1098304  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL40_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
1098305   +if index(NEURAL40_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C'
1098305  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL40_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
1098306   +if index(NEURAL41_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M'
1098306  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL41_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
1098307   +if index(NEURAL41_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U'
1098307  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL41_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
1098308   +if index(NEURAL41_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P'
1098308  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL41_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
1098309   +if index(NEURAL41_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C'
1098309  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL41_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
1098310   +if index(NEURAL36_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M'
1098310  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL36_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
1098311   +if index(NEURAL36_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U'
1098311  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL36_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
1098312   +if index(NEURAL36_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P'
1098312  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL36_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
1098313   +if index(NEURAL36_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C'
1098313  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL36_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
1098314   +if index(REG11_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(REG11_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 
1, 1) ='M';
1098315   +if index(REG11_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(REG11_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 
2, 1) ='U';
1098316   +if index(REG11_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(REG11_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 
3, 1) ='P';
1098317   +if index(REG11_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(REG11_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 
4, 1) ='C';
1098318   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1098319   +* Ensmbl12: Computing Residual Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl12: Computing Residual Vars;
1098320   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1098321   +if
1098322   +F_DepVar NE '1'
1098323   +AND F_DepVar NE '0'
1098324   +then do;
MPRINT(EM_DIAGRAM):   if F_DepVar NE '1' AND F_DepVar NE '0' then do;
1098325   +R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
1098326   +R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
1098327   +end;
MPRINT(EM_DIAGRAM):   end;
1098328   +else do;
MPRINT(EM_DIAGRAM):   else do;
1098329   +R_DepVar1 = -P_DepVar1;
MPRINT(EM_DIAGRAM):   R_DepVar1 = -P_DepVar1;
1098330   +R_DepVar0 = -P_DepVar0;
MPRINT(EM_DIAGRAM):   R_DepVar0 = -P_DepVar0;
1098331   +SELECT(F_DepVar);
MPRINT(EM_DIAGRAM):   SELECT(F_DepVar);
1098332   +WHEN('1') R_DepVar1 = R_DepVar1 +1;
MPRINT(EM_DIAGRAM):   WHEN('1') R_DepVar1 = R_DepVar1 +1;
1098333   +WHEN('0') R_DepVar0 = R_DepVar0 +1;
MPRINT(EM_DIAGRAM):   WHEN('0') R_DepVar0 = R_DepVar0 +1;
1098334   +OTHERWISE;
MPRINT(EM_DIAGRAM):   OTHERWISE;
1098335   +END;
MPRINT(EM_DIAGRAM):   END;
1098336   +END;
MPRINT(EM_DIAGRAM):   END;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1098337    run;

NOTE: DATA STEP view saved on file EMWS8.ENSMBL12_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.REG12_VALIDATE.VIEW used (Total process time):
      real time           0.18 seconds
      cpu time            0.18 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.20 seconds
      cpu time            0.20 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1098338    quit;
1098339    filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
MPRINT(EM_DIAGRAM):   
MPRINT(CALFITSTATSNOMINAL):   data _tmpTrainFitTable(keep=_TARGET_ _ASE_ _DIV_ _MAX_ _NOBS_ 
_RASE_ _SSE_ _DISF_ _MISC_ _WRONG_ rename=(_TARGET_=TARGET));
MPRINT(CALFITSTATSNOMINAL):   set EMWS8.Ensmbl12_TRAIN end=eof;
MPRINT(CALFITSTATSNOMINAL):   length _TARGET_ $32;
MPRINT(CALFITSTATSNOMINAL):   length _ASE_ _DIV_ _MAX_ _NOBS_ _RASE_ _SSE_ _DISF_ _MISC_ 
_WRONG_ 8;
MPRINT(CALFITSTATSNOMINAL):   label _TARGET_ = "Train: Target Variable" _NOBS_= "Train: Sum of 
Frequencies" _SSE_= "Train: Sum of Squared Errors" _MAX_= "Train: Maximum Absolute Error" 
_DIV_ = "Train: Divisor for ASE" _WRONG_= "Train: Number of Wrong Classifications" _DISF_= 
"Train: Frequency of Classified Cases" _MISC_= "Train: Misclassification Rate" _ASE_ = "Train: 
Average Squared Error" _RASE_ = "Train: Root Average Squared Error";
MPRINT(CALFITSTATSNOMINAL):   retain _TARGET_ _WRONG_ _DIV_ _MAX_ _SSE_ _DISF_ _MISC_ _ASE_ 
_RASE_ ;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar1 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar1)*(R_DepVar1);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar1));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar0 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar0)*(R_DepVar0);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar0));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if F_DepVar ne "" then do;
MPRINT(CALFITSTATSNOMINAL):   _DISF_+ 1;
MPRINT(CALFITSTATSNOMINAL):   _WRONG_+(F_DepVar ne I_DepVar);
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if eof then do;
MPRINT(CALFITSTATSNOMINAL):   _TARGET_ = "DepVar";
MPRINT(CALFITSTATSNOMINAL):   _MAX = 0;
MPRINT(CALFITSTATSNOMINAL):   if _DISF_ ne 0 then do;
MPRINT(CALFITSTATSNOMINAL):   _MISC_=_WRONG_/_DISF_;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   _NOBS_ = _DIV_/2;
MPRINT(CALFITSTATSNOMINAL):   _ASE_=_SSE_/_DIV_;
MPRINT(CALFITSTATSNOMINAL):   _RASE_=sqrt(_ASE_);
MPRINT(CALFITSTATSNOMINAL):   output;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl12_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set _tmpTrainFitTable;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   
MPRINT(CALFITSTATSNOMINAL):   data _tmpValidFitTable(keep=_TARGET_ _ASE_ _DIV_ _MAX_ _NOBS_ 
_RASE_ _SSE_ _DISF_ _MISC_ _WRONG_ rename=(_TARGET_=TARGET));
MPRINT(CALFITSTATSNOMINAL):   set EMWS8.Ensmbl12_VALIDATE end=eof;
MPRINT(CALFITSTATSNOMINAL):   length _TARGET_ $32;
MPRINT(CALFITSTATSNOMINAL):   length _ASE_ _DIV_ _MAX_ _NOBS_ _RASE_ _SSE_ _DISF_ _MISC_ 
_WRONG_ 8;
MPRINT(CALFITSTATSNOMINAL):   label _TARGET_ = "Valid: Target Variable" _NOBS_= "Valid: Sum of 
Frequencies" _SSE_= "Valid: Sum of Squared Errors" _MAX_= "Valid: Maximum Absolute Error" 
_DIV_ = "Valid: Divisor for ASE" _WRONG_= "Valid: Number of Wrong Classifications" _DISF_= 
"Valid: Frequency of Classified Cases" _MISC_= "Valid: Misclassification Rate" _ASE_ = "Valid: 
Average Squared Error" _RASE_ = "Valid: Root Average Squared Error";
MPRINT(CALFITSTATSNOMINAL):   retain _TARGET_ _WRONG_ _DIV_ _MAX_ _SSE_ _DISF_ _MISC_ _ASE_ 
_RASE_ ;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar1 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar1)*(R_DepVar1);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar1));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar0 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar0)*(R_DepVar0);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar0));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if F_DepVar ne "" then do;
MPRINT(CALFITSTATSNOMINAL):   _DISF_+ 1;
MPRINT(CALFITSTATSNOMINAL):   _WRONG_+(F_DepVar ne I_DepVar);
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if eof then do;
MPRINT(CALFITSTATSNOMINAL):   _TARGET_ = "DepVar";
MPRINT(CALFITSTATSNOMINAL):   _MAX = 0;
MPRINT(CALFITSTATSNOMINAL):   if _DISF_ ne 0 then do;
MPRINT(CALFITSTATSNOMINAL):   _MISC_=_WRONG_/_DISF_;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   _NOBS_ = _DIV_/2;
MPRINT(CALFITSTATSNOMINAL):   _ASE_=_SSE_/_DIV_;
MPRINT(CALFITSTATSNOMINAL):   _RASE_=sqrt(_ASE_);
MPRINT(CALFITSTATSNOMINAL):   output;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data _tmpdata_(DROP= TARGET);
MPRINT(EM_DIAGRAM):   set _tmpValidFitTable;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _tmpdata_;
MPRINT(EM_DIAGRAM):   set _tmpdata_;
MPRINT(EM_DIAGRAM):   rename _ASE_=_VASE_;
MPRINT(EM_DIAGRAM):   rename _DIV_=_VDIV_;
MPRINT(EM_DIAGRAM):   rename _MAX_=_VMAX_;
MPRINT(EM_DIAGRAM):   rename _NOBS_=_VNOBS_;
MPRINT(EM_DIAGRAM):   rename _RASE_=_VRASE_;
MPRINT(EM_DIAGRAM):   rename _SSE_=_VSSE_;
MPRINT(EM_DIAGRAM):   rename _DISF_=_VDISF_;
MPRINT(EM_DIAGRAM):   rename _MISC_=_VMISC_;
MPRINT(EM_DIAGRAM):   rename _WRONG_=_VWRONG_;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl12_EMOUTFIT;
MPRINT(EM_DIAGRAM):   merge EMWS8.Ensmbl12_EMOUTFIT _tmpdata_;
MPRINT(EM_DIAGRAM):   run;
1098399    filename _pref
1098399  ! "C:\\predictive-models-project\Workspaces\EMWS8\Reg12\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Reg12\EMPUBLISHSCORE.sas";
1098400    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1098401    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Reg12\EMPUBLISHSCORE.sas.
1098402   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1098403   +*** begin scoring code for regression;
MPRINT(EM_DIAGRAM):   *** begin scoring code for regression;
1098404   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1098405   +
1098406   +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
1098407   +label _WARN_ = 'Warnings' ;
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings' ;
1098408   +
1098409   +length I_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length I_DepVar $ 12;
1098410   +label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1098411   +*** Target Values;
MPRINT(EM_DIAGRAM):   *** Target Values;
1098412   +array REG12DRF [2] $12 _temporary_ ('1' '0' );
MPRINT(EM_DIAGRAM):   array REG12DRF [2] $12 _temporary_ ('1' '0' );
1098413   +label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1098414   +format U_DepVar BEST.;
MPRINT(EM_DIAGRAM):   format U_DepVar BEST.;
1098415   +*** Unnormalized target values;
MPRINT(EM_DIAGRAM):   *** Unnormalized target values;
1098416   +ARRAY REG12DRU[2]  _TEMPORARY_ (1 0);
MPRINT(EM_DIAGRAM):   ARRAY REG12DRU[2] _TEMPORARY_ (1 0);
1098417   +
1098418   +drop _DM_BAD;
MPRINT(EM_DIAGRAM):   drop _DM_BAD;
1098419   +_DM_BAD=0;
MPRINT(EM_DIAGRAM):   _DM_BAD=0;
1098420   +
1098421   +*** Check AcceptedCmpTotal for missing values ;
MPRINT(EM_DIAGRAM):   *** Check AcceptedCmpTotal for missing values ;
1098422   +if missing( AcceptedCmpTotal ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmpTotal ) then do;
1098423   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1098424   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1098425   +end;
MPRINT(EM_DIAGRAM):   end;
1098426   +
1098427   +*** Check Age for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Age for missing values ;
1098428   +if missing( Age ) then do;
MPRINT(EM_DIAGRAM):   if missing( Age ) then do;
1098429   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1098430   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1098431   +end;
MPRINT(EM_DIAGRAM):   end;
1098432   +
1098433   +*** Check Frq for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Frq for missing values ;
1098434   +if missing( Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( Frq ) then do;
1098435   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1098436   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1098437   +end;
MPRINT(EM_DIAGRAM):   end;
1098438   +
1098439   +*** Check Income for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Income for missing values ;
1098440   +if missing( Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( Income ) then do;
1098441   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1098442   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1098443   +end;
MPRINT(EM_DIAGRAM):   end;
1098444   +
1098445   +*** Check NumDealsPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumDealsPurchases for missing values ;
1098446   +if missing( NumDealsPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumDealsPurchases ) then do;
1098447   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1098448   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1098449   +end;
MPRINT(EM_DIAGRAM):   end;
1098450   +
1098451   +*** Check NumWebVisitsMonth for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumWebVisitsMonth for missing values ;
1098452   +if missing( NumWebVisitsMonth ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumWebVisitsMonth ) then do;
1098453   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1098454   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1098455   +end;
MPRINT(EM_DIAGRAM):   end;
1098456   +
1098457   +*** Check RMntFrq for missing values ;
MPRINT(EM_DIAGRAM):   *** Check RMntFrq for missing values ;
1098458   +if missing( RMntFrq ) then do;
MPRINT(EM_DIAGRAM):   if missing( RMntFrq ) then do;
1098459   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1098460   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1098461   +end;
MPRINT(EM_DIAGRAM):   end;
1098462   +
1098463   +*** Check Recency for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Recency for missing values ;
1098464   +if missing( Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( Recency ) then do;
1098465   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1098466   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1098467   +end;
MPRINT(EM_DIAGRAM):   end;
1098468   +
1098469   +*** Check Teenhome for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Teenhome for missing values ;
1098470   +if missing( Teenhome ) then do;
MPRINT(EM_DIAGRAM):   if missing( Teenhome ) then do;
1098471   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1098472   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1098473   +end;
MPRINT(EM_DIAGRAM):   end;
1098474   +
1098475   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1098476   +drop _3_0 ;
MPRINT(EM_DIAGRAM):   drop _3_0 ;
1098477   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1098478   +   _3_0 = .;
MPRINT(EM_DIAGRAM):   _3_0 = .;
1098479   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1098480   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1098481   +end;
MPRINT(EM_DIAGRAM):   end;
1098482   +else do;
MPRINT(EM_DIAGRAM):   else do;
1098483   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1098484   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1098485   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1098486   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1098487   +      _3_0 = 1;
MPRINT(EM_DIAGRAM):   _3_0 = 1;
1098488   +   end;
MPRINT(EM_DIAGRAM):   end;
1098489   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1098490   +      _3_0 = -1;
MPRINT(EM_DIAGRAM):   _3_0 = -1;
1098491   +   end;
MPRINT(EM_DIAGRAM):   end;
1098492   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1098493   +      _3_0 = .;
MPRINT(EM_DIAGRAM):   _3_0 = .;
1098494   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1098495   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1098496   +   end;
MPRINT(EM_DIAGRAM):   end;
1098497   +end;
MPRINT(EM_DIAGRAM):   end;
1098498   +
1098499   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1098500   +drop _4_0 ;
MPRINT(EM_DIAGRAM):   drop _4_0 ;
1098501   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1098502   +   _4_0 = .;
MPRINT(EM_DIAGRAM):   _4_0 = .;
1098503   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1098504   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1098505   +end;
MPRINT(EM_DIAGRAM):   end;
1098506   +else do;
MPRINT(EM_DIAGRAM):   else do;
1098507   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1098508   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1098509   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1098510   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1098511   +      _4_0 = 1;
MPRINT(EM_DIAGRAM):   _4_0 = 1;
1098512   +   end;
MPRINT(EM_DIAGRAM):   end;
1098513   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1098514   +      _4_0 = -1;
MPRINT(EM_DIAGRAM):   _4_0 = -1;
1098515   +   end;
MPRINT(EM_DIAGRAM):   end;
1098516   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1098517   +      _4_0 = .;
MPRINT(EM_DIAGRAM):   _4_0 = .;
1098518   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1098519   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1098520   +   end;
MPRINT(EM_DIAGRAM):   end;
1098521   +end;
MPRINT(EM_DIAGRAM):   end;
1098522   +
1098523   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1098524   +drop _9_0 _9_1 _9_2 _9_3 ;
MPRINT(EM_DIAGRAM):   drop _9_0 _9_1 _9_2 _9_3 ;
1098525   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1098526   +_9_0 = 0;
MPRINT(EM_DIAGRAM):   _9_0 = 0;
1098527   +_9_1 = 0;
MPRINT(EM_DIAGRAM):   _9_1 = 0;
1098528   +_9_2 = 0;
MPRINT(EM_DIAGRAM):   _9_2 = 0;
1098529   +_9_3 = 0;
MPRINT(EM_DIAGRAM):   _9_3 = 0;
1098530   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1098531   +   _9_0 = .;
MPRINT(EM_DIAGRAM):   _9_0 = .;
1098532   +   _9_1 = .;
MPRINT(EM_DIAGRAM):   _9_1 = .;
1098533   +   _9_2 = .;
MPRINT(EM_DIAGRAM):   _9_2 = .;
1098534   +   _9_3 = .;
MPRINT(EM_DIAGRAM):   _9_3 = .;
1098535   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1098536   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1098537   +end;
MPRINT(EM_DIAGRAM):   end;
1098538   +else do;
MPRINT(EM_DIAGRAM):   else do;
1098539   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1098540   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1098541   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1098542   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1098543   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1098544   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1098545   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1098546   +            _9_0 = 1;
MPRINT(EM_DIAGRAM):   _9_0 = 1;
1098547   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1098548   +         end;
MPRINT(EM_DIAGRAM):   end;
1098549   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1098550   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1098551   +               _9_1 = 1;
MPRINT(EM_DIAGRAM):   _9_1 = 1;
1098552   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1098553   +            end;
MPRINT(EM_DIAGRAM):   end;
1098554   +         end;
MPRINT(EM_DIAGRAM):   end;
1098555   +      end;
MPRINT(EM_DIAGRAM):   end;
1098556   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1098557   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1098558   +            _9_2 = 1;
MPRINT(EM_DIAGRAM):   _9_2 = 1;
1098559   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1098560   +         end;
MPRINT(EM_DIAGRAM):   end;
1098561   +      end;
MPRINT(EM_DIAGRAM):   end;
1098562   +   end;
MPRINT(EM_DIAGRAM):   end;
1098563   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1098564   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1098565   +         _9_3 = 1;
MPRINT(EM_DIAGRAM):   _9_3 = 1;
1098566   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1098567   +      end;
MPRINT(EM_DIAGRAM):   end;
1098568   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1098569   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1098570   +            _9_0 = -1;
MPRINT(EM_DIAGRAM):   _9_0 = -1;
1098571   +            _9_1 = -1;
MPRINT(EM_DIAGRAM):   _9_1 = -1;
1098572   +            _9_2 = -1;
MPRINT(EM_DIAGRAM):   _9_2 = -1;
1098573   +            _9_3 = -1;
MPRINT(EM_DIAGRAM):   _9_3 = -1;
1098574   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1098575   +         end;
MPRINT(EM_DIAGRAM):   end;
1098576   +      end;
MPRINT(EM_DIAGRAM):   end;
1098577   +   end;
MPRINT(EM_DIAGRAM):   end;
1098578   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1098579   +      _9_0 = .;
MPRINT(EM_DIAGRAM):   _9_0 = .;
1098580   +      _9_1 = .;
MPRINT(EM_DIAGRAM):   _9_1 = .;
1098581   +      _9_2 = .;
MPRINT(EM_DIAGRAM):   _9_2 = .;
1098582   +      _9_3 = .;
MPRINT(EM_DIAGRAM):   _9_3 = .;
1098583   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1098584   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1098585   +   end;
MPRINT(EM_DIAGRAM):   end;
1098586   +end;
MPRINT(EM_DIAGRAM):   end;
1098587   +
1098588   +*** If missing inputs, use averages;
MPRINT(EM_DIAGRAM):   *** If missing inputs, use averages;
1098589   +if _DM_BAD > 0 then do;
MPRINT(EM_DIAGRAM):   if _DM_BAD > 0 then do;
1098590   +   _P0 = 0.151221567;
MPRINT(EM_DIAGRAM):   _P0 = 0.151221567;
1098591   +   _P1 = 0.848778433;
MPRINT(EM_DIAGRAM):   _P1 = 0.848778433;
1098592   +   goto REG12DR1;
MPRINT(EM_DIAGRAM):   goto REG12DR1;
1098593   +end;
MPRINT(EM_DIAGRAM):   end;
1098594   +
1098595   +*** Compute Linear Predictor;
MPRINT(EM_DIAGRAM):   *** Compute Linear Predictor;
1098596   +drop _TEMP;
MPRINT(EM_DIAGRAM):   drop _TEMP;
1098597   +drop _LP0;
MPRINT(EM_DIAGRAM):   drop _LP0;
1098598   +_LP0 = 0;
MPRINT(EM_DIAGRAM):   _LP0 = 0;
1098599   +
1098600   +***  Effect: AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Effect: AcceptedCmp3 ;
1098601   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1098602   +_LP0 = _LP0 + (   -0.41254575292144) * _TEMP * _3_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.41254575292144) * _TEMP * _3_0;
1098603   +
1098604   +***  Effect: AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Effect: AcceptedCmp4 ;
1098605   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1098606   +_LP0 = _LP0 + (    0.34675190501967) * _TEMP * _4_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.34675190501967) * _TEMP * _4_0;
1098607   +
1098608   +***  Effect: AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   *** Effect: AcceptedCmpTotal ;
1098609   +_TEMP = AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   _TEMP = AcceptedCmpTotal ;
1098610   +_LP0 = _LP0 + (    1.80745311910799 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.80745311910799 * _TEMP);
1098611   +
1098612   +***  Effect: Age ;
MPRINT(EM_DIAGRAM):   *** Effect: Age ;
1098613   +_TEMP = Age ;
MPRINT(EM_DIAGRAM):   _TEMP = Age ;
1098614   +_LP0 = _LP0 + (   -0.01852391433447 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.01852391433447 * _TEMP);
1098615   +
1098616   +***  Effect: Frq ;
MPRINT(EM_DIAGRAM):   *** Effect: Frq ;
1098617   +_TEMP = Frq ;
MPRINT(EM_DIAGRAM):   _TEMP = Frq ;
1098618   +_LP0 = _LP0 + (   -0.05045980295154 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.05045980295154 * _TEMP);
1098619   +
1098620   +***  Effect: Income ;
MPRINT(EM_DIAGRAM):   *** Effect: Income ;
1098621   +_TEMP = Income ;
MPRINT(EM_DIAGRAM):   _TEMP = Income ;
1098622   +_LP0 = _LP0 + (     0.0000456777011 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.0000456777011 * _TEMP);
1098623   +
1098624   +***  Effect: Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Effect: Marital_Status ;
1098625   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1098626   +_LP0 = _LP0 + (    0.19470733105664) * _TEMP * _9_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.19470733105664) * _TEMP * _9_0;
1098627   +_LP0 = _LP0 + (   -0.66737124261283) * _TEMP * _9_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.66737124261283) * _TEMP * _9_1;
1098628   +_LP0 = _LP0 + (    0.47354458382979) * _TEMP * _9_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.47354458382979) * _TEMP * _9_2;
1098629   +_LP0 = _LP0 + (   -0.76484617755918) * _TEMP * _9_3;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.76484617755918) * _TEMP * _9_3;
1098630   +
1098631   +***  Effect: NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumDealsPurchases ;
1098632   +_TEMP = NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumDealsPurchases ;
1098633   +_LP0 = _LP0 + (    0.38683487817532 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.38683487817532 * _TEMP);
1098634   +
1098635   +***  Effect: NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   *** Effect: NumWebVisitsMonth ;
1098636   +_TEMP = NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   _TEMP = NumWebVisitsMonth ;
1098637   +_LP0 = _LP0 + (    0.30399773949187 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.30399773949187 * _TEMP);
1098638   +
1098639   +***  Effect: RMntFrq ;
MPRINT(EM_DIAGRAM):   *** Effect: RMntFrq ;
1098640   +_TEMP = RMntFrq ;
MPRINT(EM_DIAGRAM):   _TEMP = RMntFrq ;
1098641   +_LP0 = _LP0 + (    0.01122718563179 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.01122718563179 * _TEMP);
1098642   +
1098643   +***  Effect: Recency ;
MPRINT(EM_DIAGRAM):   *** Effect: Recency ;
1098644   +_TEMP = Recency ;
MPRINT(EM_DIAGRAM):   _TEMP = Recency ;
1098645   +_LP0 = _LP0 + (   -0.06483187112579 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.06483187112579 * _TEMP);
1098646   +
1098647   +***  Effect: Teenhome ;
MPRINT(EM_DIAGRAM):   *** Effect: Teenhome ;
1098648   +_TEMP = Teenhome ;
MPRINT(EM_DIAGRAM):   _TEMP = Teenhome ;
1098649   +_LP0 = _LP0 + (   -1.33693437973843 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.33693437973843 * _TEMP);
1098650   +
1098651   +*** Naive Posterior Probabilities;
MPRINT(EM_DIAGRAM):   *** Naive Posterior Probabilities;
1098652   +drop _MAXP _IY _P0 _P1;
MPRINT(EM_DIAGRAM):   drop _MAXP _IY _P0 _P1;
1098653   +_TEMP =    -3.46388239032287 + _LP0;
MPRINT(EM_DIAGRAM):   _TEMP = -3.46388239032287 + _LP0;
1098654   +if (_TEMP < 0) then do;
MPRINT(EM_DIAGRAM):   if (_TEMP < 0) then do;
1098655   +   _TEMP = exp(_TEMP);
MPRINT(EM_DIAGRAM):   _TEMP = exp(_TEMP);
1098656   +   _P0 = _TEMP / (1 + _TEMP);
MPRINT(EM_DIAGRAM):   _P0 = _TEMP / (1 + _TEMP);
1098657   +end;
MPRINT(EM_DIAGRAM):   end;
1098658   +else _P0 = 1 / (1 + exp(-_TEMP));
MPRINT(EM_DIAGRAM):   else _P0 = 1 / (1 + exp(-_TEMP));
1098659   +_P1 = 1.0 - _P0;
MPRINT(EM_DIAGRAM):   _P1 = 1.0 - _P0;
1098660   +
1098661   +REG12DR1:
1098662   +
1098663   +
1098664   +*** Posterior Probabilities and Predicted Level;
MPRINT(EM_DIAGRAM):   REG12DR1: *** Posterior Probabilities and Predicted Level;
1098665   +label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1098666   +label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1098667   +P_DepVar1 = _P0;
MPRINT(EM_DIAGRAM):   P_DepVar1 = _P0;
1098668   +_MAXP = _P0;
MPRINT(EM_DIAGRAM):   _MAXP = _P0;
1098669   +_IY = 1;
MPRINT(EM_DIAGRAM):   _IY = 1;
1098670   +P_DepVar0 = _P1;
MPRINT(EM_DIAGRAM):   P_DepVar0 = _P1;
1098671   +if (_P1 >  _MAXP + 1E-8) then do;
MPRINT(EM_DIAGRAM):   if (_P1 > _MAXP + 1E-8) then do;
1098672   +   _MAXP = _P1;
MPRINT(EM_DIAGRAM):   _MAXP = _P1;
1098673   +   _IY = 2;
MPRINT(EM_DIAGRAM):   _IY = 2;
1098674   +end;
MPRINT(EM_DIAGRAM):   end;
1098675   +I_DepVar = REG12DRF[_IY];
MPRINT(EM_DIAGRAM):   I_DepVar = REG12DRF[_IY];
1098676   +U_DepVar = REG12DRU[_IY];
MPRINT(EM_DIAGRAM):   U_DepVar = REG12DRU[_IY];
1098677   +
1098678   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1098679   +***** end scoring code for regression;
MPRINT(EM_DIAGRAM):   ***** end scoring code for regression;
1098680   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1098681    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1098682    quit;
1098683    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1098684    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1098685    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1098686    retain ID 2 Node "Reg12";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Reg12";
1098687    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1098688    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 380 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 380 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1098689    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1098690    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1098691    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 380 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 380 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1098692    proc sort data=EMWS8.Reg12_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Reg12_variableset out=_temp2(keep=NAME CREATOR);
1098693    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1098694    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.REG12_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1098695    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1098696    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1098697    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1098698    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1098699    proc contents data=EMWS8.Reg12_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Reg12_train out=_meta(keep=NAME) noprint;
1098700    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

1098701    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1098702    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1098703    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 53 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1098704    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1098705    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1098706    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1098707    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 53 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1098708    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1098709    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1098709  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 180 rows and 5 columns.

1098710    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1098711    proc append base=EMWS8.Ensmbl12_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl12_FCMP data=_tempx;
1098712    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL12_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 180 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL12_FCMP has 180 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1098713    filename _pref
1098713  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
1098714    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1098715    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
1098716   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1098717   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1098718   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1098719   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1098720   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1098721   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1098722    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1098723    quit;
1098724    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1098725    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1098726    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1098727    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
1098728    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1098729    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1098730    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1098731    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1098732    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1098733    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
1098734    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1098735    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1098736    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1098737    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1098738    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1098739    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1098740    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
1098741    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

1098742    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1098743    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1098744    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1098745    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1098746    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1098747    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1098748    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1098749    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1098750    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1098750  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

1098751    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1098752    proc append base=EMWS8.Ensmbl12_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl12_FCMP data=_tempx;
1098753    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL12_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL12_FCMP has 184 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1098754    filename _pref
1098754  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
1098755    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1098756    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
1098757   +
1098758   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1098759   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1098759  !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1098760   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1098761   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1098762   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1098763   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1098764   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1098765    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1098766    quit;
1098767    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1098768    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1098769    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1098770    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
1098771    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1098772    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1098773    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1098774    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1098775    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1098776    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
1098777    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1098778    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1098779    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1098780    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1098781    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1098782    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1098783    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
1098784    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1098785    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1098786    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1098787    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1098788    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1098789    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1098790    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1098791    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1098792    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1098793    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1098793  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

1098794    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1098795    proc append base=EMWS8.Ensmbl12_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl12_FCMP data=_tempx;
1098796    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL12_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL12_FCMP has 223 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1098797    filename _pref
1098797  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
1098798    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1098799    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
1098800   +
1098801   +
1098802   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
1098803   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
1098804   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
1098805   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
1098806   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
1098807   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1098808   +
1098809   +
1098810   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
1098811   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
1098812   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
1098813   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
1098814   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
1098815   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1098816   +
1098817   +
1098818   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
1098819   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
1098820   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
1098821   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
1098822   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
1098823   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1098824   +
1098825   +
1098826   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
1098827   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
1098828   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
1098829   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
1098830   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
1098831   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1098832   +
1098833   +
1098834   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
1098835   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
1098836   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
1098837   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
1098838   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
1098839   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1098840   +
1098841   +
1098842   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
1098843   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
1098844   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
1098845   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
1098846   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
1098847   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1098848   +
1098849   +
1098850   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
1098851   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
1098852   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
1098853   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
1098854   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
1098855   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1098856   +
1098857   +
1098858   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
1098859   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
1098860   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
1098861   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
1098862   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
1098863   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1098864   +if
1098865   +_FILTERNORM1 not in ( '.')
1098866   + and
1098867   +_FILTERNORM2 not in ( '.')
1098868   + and
1098869   +_FILTERNORM3 not in ( '.')
1098870   + and
1098871   +_FILTERNORM4 not in ( '.')
1098872   + and
1098873   +_FILTERNORM5 not in ( '.')
1098874   + and
1098875   +_FILTERNORM6 not in ( '.')
1098876   + and
1098877   +_FILTERNORM7 not in ( ' ')
1098878   + and
1098879   +_FILTERNORM8 not in ( ' ')
1098880   +and
1098881   +( Dt_Customer ne .)
1098882   +and ( Income ne . and (Income<=107000))
1098883   +and ( Kidhome ne .)
1098884   +and ( MntFishProducts ne .)
1098885   +and ( MntFruits ne .)
1098886   +and ( MntGoldProds ne .)
1098887   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
1098888   +and ( MntSweetProducts ne .)
1098889   +and ( MntWines ne .)
1098890   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
1098891   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
1098892   +and ( NumStorePurchases ne .)
1098893   +and ( NumWebPurchases ne .)
1098894   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
1098895   +and ( Recency ne .)
1098896   +and ( Teenhome ne .)
1098897   +and ( Year_Birth ne .)
1098898   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
1098899   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
1098900   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
1098901   +end;
MPRINT(EM_DIAGRAM):   end;
1098902   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
1098903   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1098904    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1098905    quit;
1098906    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1098907    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1098908    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1098909    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
1098910    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1098911    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1098912    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1098913    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1098914    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1098915    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
1098916    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1098917    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1098918    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1098919    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1098920    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1098921    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1098922    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
1098923    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

1098924    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1098925    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1098926    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1098927    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1098928    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1098929    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1098930    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1098931    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1098932    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1098932  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

1098933    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1098934    proc append base=EMWS8.Ensmbl12_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl12_FCMP data=_tempx;
1098935    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL12_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL12_FCMP has 289 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1098936    %macro varDept(fcmpdata=,id=);
1098937    %global nobs&id scoreFlag&id;
1098938    %let scoreFlag&id = 0;
1098939    %if &id=1 or ^&fcmpStart %then %do;
1098940    proc sort data=&fcmpdata out=_temp&id nodupkey;
1098941    by NAME;
1098942    where id=&id and LHS in( %let j=1;
1098943    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
1098944    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
1098945    "&var" %let j = %eval(&j+1);
1098946    %end;
1098947    );
1098948    run;
1098949    %let dsid = %sysfunc(open(_temp&id));
1098950    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1098951    %let dsid = %sysfunc(close(&dsid));
1098952    %if &&nobs&id %then %do;
1098953    %let scoreFlag&id = 1;
1098954    %let fcmpStart = 1;
1098955    %end;
1098956    %else %let fcmpStart = 0;
1098957    %end;
1098958    %else %do;
1098959    proc sort data=&fcmpdata out=_tempid;
1098960    where id=&id;
1098961    by LHS;
1098962    run;
1098963    %let dsid = %sysfunc(open(_tempid));
1098964    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1098965    %let dsid = %sysfunc(close(&dsid));
1098966    %if ^&&nobs&id %then %do;
1098967    proc datasets lib=work nolist;
1098968    delete _tempid;
1098969    run;
1098970    quit;
1098971    %end;
1098972    %else %do;
1098973    data _tempAll;
1098974    set %let j=%eval(&id-1);
1098975    %do x=1 %to &j;
1098976    %if &&nobs&x %then %do;
1098977    _temp&x %end;
1098978    %end;
1098979    ;
1098980    run;
1098981    proc sql;
1098982    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
1098982  ! work._tempid p2 where p.name=p2.lhs;
1098983    quit;
1098984    data _temp&id;
1098985    set _temp&id;
1098986    where LHS ne '' and NAME ne '' and Node ne '';
1098987    run;
1098988    proc datasets lib=work nolist;
1098989    delete _tempAll;
1098990    run;
1098991    %let dsid = %sysfunc(open(_temp&id));
1098992    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1098993    %let dsid = %sysfunc(close(&dsid));
1098994    %if ^&&nobs&id %then %do;
1098995    proc datasets lib=work nolist;
1098996    delete _temp&id;
1098997    run;
1098998    quit;
1098999    %end;
1099000    %else %do;
1099001    %let scoreFlag&id = 1;
1099002    data _temp&id;
1099003    set _temp&id;
1099004    where LHS ne NAME and node ne '';
1099005    run;
1099006    %let dsid = %sysfunc(open(_temp&id));
1099007    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1099008    %let dsid = %sysfunc(close(&dsid));
1099009    %if ^&&nobs&id %then %do;
1099010    proc datasets lib=work nolist;
1099011    delete _temp&id;
1099012    run;
1099013    quit;
1099014    %end;
1099015    %else %do;
1099016    proc sort data=_temp&id nodupkey;
1099017    by LHS NAME;
1099018    run;
1099019    %end;
1099020    %end;
1099021    %end;
1099022    %end;
1099023    %mend varDept;
1099024    %macro optCode(outdata=fcmpdata);
1099025    %global fcmpStart;
1099026    %let fcmpStart = 0;
1099027    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
1099028    %let NumNodes=9;
1099029    %do k=1 %to &NumNodes;
1099030    %vardept(fcmpdata=&outdata, id=&k);
1099031    %end;
1099032    %mend optCode;
1099033    %optcode(outData=EMWS8.Ensmbl12_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl12_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL12_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl12_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 48 observations read from the data set EMWS8.ENSMBL12_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 36 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 12 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl12_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL12_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl12_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL12_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl12_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL12_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 12 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 12 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp5;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP5 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl12_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL12_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 12 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 12 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 20 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 20 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 20 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 20 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 20 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 20 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 20 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl12_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL12_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 12 observations read from the data set WORK._TEMP2.
NOTE: There were 20 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 32 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl12_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL12_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl12_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL12_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

1099034    filename _pref
1099034  ! "C:\\predictive-models-project\Workspaces\EMWS8\Tree6\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Tree6\EMPUBLISHSCORE.sas";
1099035    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1099036    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Tree6\EMPUBLISHSCORE.sas.
1099037   +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
1099038   +******             DECISION TREE SCORING CODE             ******;
MPRINT(EM_DIAGRAM):   ****** DECISION TREE SCORING CODE ******;
1099039   +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
1099040   +
1099041   +******         LENGTHS OF NEW CHARACTER VARIABLES         ******;
MPRINT(EM_DIAGRAM):   ****** LENGTHS OF NEW CHARACTER VARIABLES ******;
1099042   +LENGTH I_DepVar  $   12;
MPRINT(EM_DIAGRAM):   LENGTH I_DepVar $ 12;
1099043   +LENGTH _WARN_  $    4;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $ 4;
1099044   +
1099045   +******              LABELS FOR NEW VARIABLES              ******;
MPRINT(EM_DIAGRAM):   ****** LABELS FOR NEW VARIABLES ******;
1099046   +LABEL _NODE_  = 'Node' ;
MPRINT(EM_DIAGRAM):   LABEL _NODE_ = 'Node' ;
1099047   +LABEL _LEAF_  = 'Leaf' ;
MPRINT(EM_DIAGRAM):   LABEL _LEAF_ = 'Leaf' ;
1099048   +LABEL P_DepVar0  = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   LABEL P_DepVar0 = 'Predicted: DepVar=0' ;
1099049   +LABEL P_DepVar1  = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   LABEL P_DepVar1 = 'Predicted: DepVar=1' ;
1099050   +LABEL Q_DepVar0  = 'Unadjusted P: DepVar=0' ;
MPRINT(EM_DIAGRAM):   LABEL Q_DepVar0 = 'Unadjusted P: DepVar=0' ;
1099051   +LABEL Q_DepVar1  = 'Unadjusted P: DepVar=1' ;
MPRINT(EM_DIAGRAM):   LABEL Q_DepVar1 = 'Unadjusted P: DepVar=1' ;
1099052   +LABEL V_DepVar0  = 'Validated: DepVar=0' ;
MPRINT(EM_DIAGRAM):   LABEL V_DepVar0 = 'Validated: DepVar=0' ;
1099053   +LABEL V_DepVar1  = 'Validated: DepVar=1' ;
MPRINT(EM_DIAGRAM):   LABEL V_DepVar1 = 'Validated: DepVar=1' ;
1099054   +LABEL I_DepVar  = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   LABEL I_DepVar = 'Into: DepVar' ;
1099055   +LABEL U_DepVar  = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   LABEL U_DepVar = 'Unnormalized Into: DepVar' ;
1099056   +LABEL _WARN_  = 'Warnings' ;
MPRINT(EM_DIAGRAM):   LABEL _WARN_ = 'Warnings' ;
1099057   +
1099058   +
1099059   +******      TEMPORARY VARIABLES FOR FORMATTED VALUES      ******;
MPRINT(EM_DIAGRAM):   ****** TEMPORARY VARIABLES FOR FORMATTED VALUES ******;
1099060   +LENGTH _ARBFMT_12 $     12; DROP _ARBFMT_12;
MPRINT(EM_DIAGRAM):   LENGTH _ARBFMT_12 $ 12;
MPRINT(EM_DIAGRAM):   DROP _ARBFMT_12;
1099061   +_ARBFMT_12 = ' '; /* Initialize to avoid warning. */
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = ' ';
1099062   +LENGTH _ARBFMT_8 $      8; DROP _ARBFMT_8;
MPRINT(EM_DIAGRAM):   /* Initialize to avoid warning. */ LENGTH _ARBFMT_8 $ 8;
MPRINT(EM_DIAGRAM):   DROP _ARBFMT_8;
1099063   +_ARBFMT_8 = ' '; /* Initialize to avoid warning. */
MPRINT(EM_DIAGRAM):   _ARBFMT_8 = ' ';
1099064   +
1099065   +
1099066   +******             ASSIGN OBSERVATION TO NODE             ******;
MPRINT(EM_DIAGRAM):   /* Initialize to avoid warning. */ ****** ASSIGN OBSERVATION TO NODE 
******;
1099067   +IF  NOT MISSING(AcceptedCmpTotal ) AND
1099068   +                   0.5 <= AcceptedCmpTotal  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(AcceptedCmpTotal ) AND 0.5 <= AcceptedCmpTotal THEN DO;
1099069   +  IF  NOT MISSING(Recency ) AND
1099070   +    Recency  <                 38.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(Recency ) AND Recency < 38.5 THEN DO;
1099071   +    IF  NOT MISSING(AcceptedCmpTotal ) AND
1099072   +                       1.5 <= AcceptedCmpTotal  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(AcceptedCmpTotal ) AND 1.5 <= AcceptedCmpTotal THEN DO;
1099073   +      _NODE_  =                   13;
MPRINT(EM_DIAGRAM):   _NODE_ = 13;
1099074   +      _LEAF_  =                   11;
MPRINT(EM_DIAGRAM):   _LEAF_ = 11;
1099075   +      P_DepVar0  =     0.05263157894736;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.05263157894736;
1099076   +      P_DepVar1  =     0.94736842105263;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.94736842105263;
1099077   +      Q_DepVar0  =     0.05263157894736;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.05263157894736;
1099078   +      Q_DepVar1  =     0.94736842105263;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.94736842105263;
1099079   +      V_DepVar0  =                    0;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0;
1099080   +      V_DepVar1  =                    1;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 1;
1099081   +      I_DepVar  = '1' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '1' ;
1099082   +      U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1099083   +      END;
MPRINT(EM_DIAGRAM):   END;
1099084   +    ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1099085   +      _ARBFMT_8 = PUT( Marital_Status , $8.);
MPRINT(EM_DIAGRAM):   _ARBFMT_8 = PUT( Marital_Status , $8.);
1099086   +       %DMNORMIP( _ARBFMT_8);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
1099087   +      IF _ARBFMT_8 IN ('WIDOW' ,'DIVORCED' ,'SINGLE' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_8 IN ('WIDOW' ,'DIVORCED' ,'SINGLE' ) THEN DO;
1099088   +        _NODE_  =                   25;
MPRINT(EM_DIAGRAM):   _NODE_ = 25;
1099089   +        _LEAF_  =                   10;
MPRINT(EM_DIAGRAM):   _LEAF_ = 10;
1099090   +        P_DepVar0  =      0.2258064516129;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.2258064516129;
1099091   +        P_DepVar1  =     0.77419354838709;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.77419354838709;
1099092   +        Q_DepVar0  =      0.2258064516129;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.2258064516129;
1099093   +        Q_DepVar1  =     0.77419354838709;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.77419354838709;
1099094   +        V_DepVar0  =     0.41935483870967;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.41935483870967;
1099095   +        V_DepVar1  =     0.58064516129032;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.58064516129032;
1099096   +        I_DepVar  = '1' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '1' ;
1099097   +        U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1099098   +        END;
MPRINT(EM_DIAGRAM):   END;
1099099   +      ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1099100   +        IF  NOT MISSING(Kidhome ) AND
1099101   +                           0.5 <= Kidhome  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(Kidhome ) AND 0.5 <= Kidhome THEN DO;
1099102   +          _NODE_  =                   39;
MPRINT(EM_DIAGRAM):   _NODE_ = 39;
1099103   +          _LEAF_  =                    9;
MPRINT(EM_DIAGRAM):   _LEAF_ = 9;
1099104   +          P_DepVar0  =               0.3125;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.3125;
1099105   +          P_DepVar1  =               0.6875;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.6875;
1099106   +          Q_DepVar0  =               0.3125;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.3125;
1099107   +          Q_DepVar1  =               0.6875;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.6875;
1099108   +          V_DepVar0  =     0.23076923076923;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.23076923076923;
1099109   +          V_DepVar1  =     0.76923076923076;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.76923076923076;
1099110   +          I_DepVar  = '1' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '1' ;
1099111   +          U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1099112   +          END;
MPRINT(EM_DIAGRAM):   END;
1099113   +        ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1099114   +          IF  NOT MISSING(RFMstat ) AND
1099115   +                2448.04945054945 <= RFMstat  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(RFMstat ) AND 2448.04945054945 <= RFMstat THEN DO;
1099116   +            _NODE_  =                   51;
MPRINT(EM_DIAGRAM):   _NODE_ = 51;
1099117   +            _LEAF_  =                    8;
MPRINT(EM_DIAGRAM):   _LEAF_ = 8;
1099118   +            P_DepVar0  =     0.23529411764705;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.23529411764705;
1099119   +            P_DepVar1  =     0.76470588235294;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.76470588235294;
1099120   +            Q_DepVar0  =     0.23529411764705;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.23529411764705;
1099121   +            Q_DepVar1  =     0.76470588235294;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.76470588235294;
1099122   +            V_DepVar0  =     0.42857142857142;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.42857142857142;
1099123   +            V_DepVar1  =     0.57142857142857;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.57142857142857;
1099124   +            I_DepVar  = '1' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '1' ;
1099125   +            U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1099126   +            END;
MPRINT(EM_DIAGRAM):   END;
1099127   +          ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1099128   +            _NODE_  =                   50;
MPRINT(EM_DIAGRAM):   _NODE_ = 50;
1099129   +            _LEAF_  =                    7;
MPRINT(EM_DIAGRAM):   _LEAF_ = 7;
1099130   +            P_DepVar0  =      0.8076923076923;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.8076923076923;
1099131   +            P_DepVar1  =     0.19230769230769;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.19230769230769;
1099132   +            Q_DepVar0  =      0.8076923076923;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.8076923076923;
1099133   +            Q_DepVar1  =     0.19230769230769;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.19230769230769;
1099134   +            V_DepVar0  =     0.78260869565217;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.78260869565217;
1099135   +            V_DepVar1  =     0.21739130434782;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.21739130434782;
1099136   +            I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
1099137   +            U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1099138   +            END;
MPRINT(EM_DIAGRAM):   END;
1099139   +          END;
MPRINT(EM_DIAGRAM):   END;
1099140   +        END;
MPRINT(EM_DIAGRAM):   END;
1099141   +      END;
MPRINT(EM_DIAGRAM):   END;
1099142   +    END;
MPRINT(EM_DIAGRAM):   END;
1099143   +  ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1099144   +    IF  NOT MISSING(AcceptedCmpTotal ) AND
1099145   +                       2.5 <= AcceptedCmpTotal  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(AcceptedCmpTotal ) AND 2.5 <= AcceptedCmpTotal THEN DO;
1099146   +      _NODE_  =                   15;
MPRINT(EM_DIAGRAM):   _NODE_ = 15;
1099147   +      _LEAF_  =                   13;
MPRINT(EM_DIAGRAM):   _LEAF_ = 13;
1099148   +      P_DepVar0  =      0.3103448275862;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.3103448275862;
1099149   +      P_DepVar1  =     0.68965517241379;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.68965517241379;
1099150   +      Q_DepVar0  =      0.3103448275862;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.3103448275862;
1099151   +      Q_DepVar1  =     0.68965517241379;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.68965517241379;
1099152   +      V_DepVar0  =     0.33333333333333;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.33333333333333;
1099153   +      V_DepVar1  =     0.66666666666666;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.66666666666666;
1099154   +      I_DepVar  = '1' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '1' ;
1099155   +      U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1099156   +      END;
MPRINT(EM_DIAGRAM):   END;
1099157   +    ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1099158   +      _NODE_  =                   14;
MPRINT(EM_DIAGRAM):   _NODE_ = 14;
1099159   +      _LEAF_  =                   12;
MPRINT(EM_DIAGRAM):   _LEAF_ = 12;
1099160   +      P_DepVar0  =     0.82562277580071;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.82562277580071;
1099161   +      P_DepVar1  =     0.17437722419928;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.17437722419928;
1099162   +      Q_DepVar0  =     0.82562277580071;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.82562277580071;
1099163   +      Q_DepVar1  =     0.17437722419928;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.17437722419928;
1099164   +      V_DepVar0  =     0.81818181818181;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.81818181818181;
1099165   +      V_DepVar1  =     0.18181818181818;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.18181818181818;
1099166   +      I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
1099167   +      U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1099168   +      END;
MPRINT(EM_DIAGRAM):   END;
1099169   +    END;
MPRINT(EM_DIAGRAM):   END;
1099170   +  END;
MPRINT(EM_DIAGRAM):   END;
1099171   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1099172   +  IF  NOT MISSING(Recency ) AND
1099173   +    Recency  <                 32.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(Recency ) AND Recency < 32.5 THEN DO;
1099174   +    IF  NOT MISSING(NumDealsPurchases ) AND
1099175   +                       5.5 <= NumDealsPurchases  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(NumDealsPurchases ) AND 5.5 <= NumDealsPurchases THEN DO;
1099176   +      IF  NOT MISSING(Frq ) AND
1099177   +        Frq  <                 13.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(Frq ) AND Frq < 13.5 THEN DO;
1099178   +        _NODE_  =                   18;
MPRINT(EM_DIAGRAM):   _NODE_ = 18;
1099179   +        _LEAF_  =                    3;
MPRINT(EM_DIAGRAM):   _LEAF_ = 3;
1099180   +        P_DepVar0  =     0.06666666666666;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.06666666666666;
1099181   +        P_DepVar1  =     0.93333333333333;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.93333333333333;
1099182   +        Q_DepVar0  =     0.06666666666666;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.06666666666666;
1099183   +        Q_DepVar1  =     0.93333333333333;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.93333333333333;
1099184   +        V_DepVar0  =                  0.2;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.2;
1099185   +        V_DepVar1  =                  0.8;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.8;
1099186   +        I_DepVar  = '1' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '1' ;
1099187   +        U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1099188   +        END;
MPRINT(EM_DIAGRAM):   END;
1099189   +      ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1099190   +        IF  NOT MISSING(RFMstat ) AND
1099191   +              1513.63146551724 <= RFMstat  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(RFMstat ) AND 1513.63146551724 <= RFMstat THEN DO;
1099192   +          _NODE_  =                   35;
MPRINT(EM_DIAGRAM):   _NODE_ = 35;
1099193   +          _LEAF_  =                    5;
MPRINT(EM_DIAGRAM):   _LEAF_ = 5;
1099194   +          P_DepVar0  =     0.16666666666666;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.16666666666666;
1099195   +          P_DepVar1  =     0.83333333333333;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.83333333333333;
1099196   +          Q_DepVar0  =     0.16666666666666;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.16666666666666;
1099197   +          Q_DepVar1  =     0.83333333333333;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.83333333333333;
1099198   +          V_DepVar0  =                 0.25;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.25;
1099199   +          V_DepVar1  =                 0.75;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.75;
1099200   +          I_DepVar  = '1' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '1' ;
1099201   +          U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1099202   +          END;
MPRINT(EM_DIAGRAM):   END;
1099203   +        ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1099204   +          _NODE_  =                   34;
MPRINT(EM_DIAGRAM):   _NODE_ = 34;
1099205   +          _LEAF_  =                    4;
MPRINT(EM_DIAGRAM):   _LEAF_ = 4;
1099206   +          P_DepVar0  =                0.875;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.875;
1099207   +          P_DepVar1  =                0.125;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.125;
1099208   +          Q_DepVar0  =                0.875;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.875;
1099209   +          Q_DepVar1  =                0.125;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.125;
1099210   +          V_DepVar0  =                  0.7;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.7;
1099211   +          V_DepVar1  =                  0.3;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.3;
1099212   +          I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
1099213   +          U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1099214   +          END;
MPRINT(EM_DIAGRAM):   END;
1099215   +        END;
MPRINT(EM_DIAGRAM):   END;
1099216   +      END;
MPRINT(EM_DIAGRAM):   END;
1099217   +    ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1099218   +      IF  NOT MISSING(RFMstat ) AND
1099219   +            5150.39285714285 <= RFMstat  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(RFMstat ) AND 5150.39285714285 <= RFMstat THEN DO;
1099220   +        _NODE_  =                   17;
MPRINT(EM_DIAGRAM):   _NODE_ = 17;
1099221   +        _LEAF_  =                    2;
MPRINT(EM_DIAGRAM):   _LEAF_ = 2;
1099222   +        P_DepVar0  =     0.38888888888888;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.38888888888888;
1099223   +        P_DepVar1  =     0.61111111111111;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.61111111111111;
1099224   +        Q_DepVar0  =     0.38888888888888;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.38888888888888;
1099225   +        Q_DepVar1  =     0.61111111111111;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.61111111111111;
1099226   +        V_DepVar0  =     0.41666666666666;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.41666666666666;
1099227   +        V_DepVar1  =     0.58333333333333;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.58333333333333;
1099228   +        I_DepVar  = '1' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '1' ;
1099229   +        U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1099230   +        END;
MPRINT(EM_DIAGRAM):   END;
1099231   +      ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1099232   +        _NODE_  =                   16;
MPRINT(EM_DIAGRAM):   _NODE_ = 16;
1099233   +        _LEAF_  =                    1;
MPRINT(EM_DIAGRAM):   _LEAF_ = 1;
1099234   +        P_DepVar0  =     0.84547069271758;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84547069271758;
1099235   +        P_DepVar1  =     0.15452930728241;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15452930728241;
1099236   +        Q_DepVar0  =     0.84547069271758;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.84547069271758;
1099237   +        Q_DepVar1  =     0.15452930728241;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.15452930728241;
1099238   +        V_DepVar0  =     0.81673306772908;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.81673306772908;
1099239   +        V_DepVar1  =     0.18326693227091;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.18326693227091;
1099240   +        I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
1099241   +        U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1099242   +        END;
MPRINT(EM_DIAGRAM):   END;
1099243   +      END;
MPRINT(EM_DIAGRAM):   END;
1099244   +    END;
MPRINT(EM_DIAGRAM):   END;
1099245   +  ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1099246   +    _NODE_  =                    5;
MPRINT(EM_DIAGRAM):   _NODE_ = 5;
1099247   +    _LEAF_  =                    6;
MPRINT(EM_DIAGRAM):   _LEAF_ = 6;
1099248   +    P_DepVar0  =     0.98042414355628;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.98042414355628;
1099249   +    P_DepVar1  =     0.01957585644371;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.01957585644371;
1099250   +    Q_DepVar0  =     0.98042414355628;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.98042414355628;
1099251   +    Q_DepVar1  =     0.01957585644371;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.01957585644371;
1099252   +    V_DepVar0  =     0.98795180722891;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.98795180722891;
1099253   +    V_DepVar1  =     0.01204819277108;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.01204819277108;
1099254   +    I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
1099255   +    U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1099256   +    END;
MPRINT(EM_DIAGRAM):   END;
1099257   +  END;
MPRINT(EM_DIAGRAM):   END;
1099258   +
1099259   +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
1099260   +******          END OF DECISION TREE SCORING CODE         ******;
MPRINT(EM_DIAGRAM):   ****** END OF DECISION TREE SCORING CODE ******;
1099261   +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
1099262   +drop _LEAF_;
MPRINT(EM_DIAGRAM):   drop _LEAF_;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1099263    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1099264    quit;
1099265    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1099266    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1099267    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1099268    retain ID 2 Node "Tree6";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Tree6";
1099269    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1099270    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 83 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 83 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1099271    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1099272    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1099273    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 83 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 83 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1099274    proc sort data=EMWS8.Tree6_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Tree6_variableset out=_temp2(keep=NAME CREATOR);
1099275    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1099276    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.TREE6_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1099277    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1099278    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1099279    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1099280    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1099281    proc contents data=EMWS8.Tree6_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Tree6_train out=_meta(keep=NAME) noprint;
1099282    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 58 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

1099283    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1099284    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1099285    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 58 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 58 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1099286    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1099287    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1099288    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1099289    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 58 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 58 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1099290    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1099291    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1099291  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 73 rows and 5 columns.

1099292    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1099293    proc append base=EMWS8.Ensmbl12_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl12_FCMP data=_tempx;
1099294    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL12_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 73 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL12_FCMP has 73 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1099295    filename _pref
1099295  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
1099296    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1099297    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
1099298   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1099299   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1099300   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1099301   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1099302   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1099303   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1099304    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1099305    quit;
1099306    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1099307    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1099308    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1099309    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
1099310    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1099311    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1099312    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1099313    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1099314    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1099315    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
1099316    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1099317    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1099318    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1099319    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1099320    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1099321    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1099322    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
1099323    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

1099324    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1099325    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1099326    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1099327    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1099328    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1099329    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1099330    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1099331    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1099332    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1099332  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

1099333    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1099334    proc append base=EMWS8.Ensmbl12_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl12_FCMP data=_tempx;
1099335    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL12_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL12_FCMP has 77 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1099336    filename _pref
1099336  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
1099337    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1099338    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
1099339   +
1099340   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1099341   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1099341  !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1099342   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1099343   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1099344   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1099345   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1099346   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1099347    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1099348    quit;
1099349    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1099350    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1099351    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1099352    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
1099353    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1099354    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1099355    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1099356    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1099357    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1099358    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
1099359    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1099360    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1099361    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1099362    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1099363    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1099364    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1099365    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
1099366    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1099367    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1099368    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1099369    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1099370    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1099371    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1099372    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1099373    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1099374    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1099375    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1099375  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

1099376    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1099377    proc append base=EMWS8.Ensmbl12_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl12_FCMP data=_tempx;
1099378    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL12_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL12_FCMP has 116 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1099379    filename _pref
1099379  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
1099380    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1099381    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
1099382   +
1099383   +
1099384   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
1099385   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
1099386   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
1099387   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
1099388   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
1099389   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1099390   +
1099391   +
1099392   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
1099393   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
1099394   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
1099395   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
1099396   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
1099397   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1099398   +
1099399   +
1099400   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
1099401   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
1099402   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
1099403   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
1099404   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
1099405   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1099406   +
1099407   +
1099408   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
1099409   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
1099410   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
1099411   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
1099412   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
1099413   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1099414   +
1099415   +
1099416   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
1099417   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
1099418   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
1099419   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
1099420   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
1099421   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1099422   +
1099423   +
1099424   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
1099425   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
1099426   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
1099427   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
1099428   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
1099429   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1099430   +
1099431   +
1099432   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
1099433   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
1099434   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
1099435   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
1099436   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
1099437   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1099438   +
1099439   +
1099440   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
1099441   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
1099442   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
1099443   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
1099444   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
1099445   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1099446   +if
1099447   +_FILTERNORM1 not in ( '.')
1099448   + and
1099449   +_FILTERNORM2 not in ( '.')
1099450   + and
1099451   +_FILTERNORM3 not in ( '.')
1099452   + and
1099453   +_FILTERNORM4 not in ( '.')
1099454   + and
1099455   +_FILTERNORM5 not in ( '.')
1099456   + and
1099457   +_FILTERNORM6 not in ( '.')
1099458   + and
1099459   +_FILTERNORM7 not in ( ' ')
1099460   + and
1099461   +_FILTERNORM8 not in ( ' ')
1099462   +and
1099463   +( Dt_Customer ne .)
1099464   +and ( Income ne . and (Income<=107000))
1099465   +and ( Kidhome ne .)
1099466   +and ( MntFishProducts ne .)
1099467   +and ( MntFruits ne .)
1099468   +and ( MntGoldProds ne .)
1099469   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
1099470   +and ( MntSweetProducts ne .)
1099471   +and ( MntWines ne .)
1099472   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
1099473   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
1099474   +and ( NumStorePurchases ne .)
1099475   +and ( NumWebPurchases ne .)
1099476   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
1099477   +and ( Recency ne .)
1099478   +and ( Teenhome ne .)
1099479   +and ( Year_Birth ne .)
1099480   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
1099481   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
1099482   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
1099483   +end;
MPRINT(EM_DIAGRAM):   end;
1099484   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
1099485   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1099486    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1099487    quit;
1099488    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1099489    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1099490    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1099491    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
1099492    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1099493    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1099494    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1099495    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1099496    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1099497    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
1099498    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1099499    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1099500    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1099501    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1099502    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1099503    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1099504    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
1099505    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

1099506    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1099507    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1099508    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1099509    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1099510    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1099511    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1099512    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1099513    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1099514    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1099514  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

1099515    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1099516    proc append base=EMWS8.Ensmbl12_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl12_FCMP data=_tempx;
1099517    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL12_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL12_FCMP has 182 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1099518    %macro varDept(fcmpdata=,id=);
1099519    %global nobs&id scoreFlag&id;
1099520    %let scoreFlag&id = 0;
1099521    %if &id=1 or ^&fcmpStart %then %do;
1099522    proc sort data=&fcmpdata out=_temp&id nodupkey;
1099523    by NAME;
1099524    where id=&id and LHS in( %let j=1;
1099525    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
1099526    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
1099527    "&var" %let j = %eval(&j+1);
1099528    %end;
1099529    );
1099530    run;
1099531    %let dsid = %sysfunc(open(_temp&id));
1099532    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1099533    %let dsid = %sysfunc(close(&dsid));
1099534    %if &&nobs&id %then %do;
1099535    %let scoreFlag&id = 1;
1099536    %let fcmpStart = 1;
1099537    %end;
1099538    %else %let fcmpStart = 0;
1099539    %end;
1099540    %else %do;
1099541    proc sort data=&fcmpdata out=_tempid;
1099542    where id=&id;
1099543    by LHS;
1099544    run;
1099545    %let dsid = %sysfunc(open(_tempid));
1099546    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1099547    %let dsid = %sysfunc(close(&dsid));
1099548    %if ^&&nobs&id %then %do;
1099549    proc datasets lib=work nolist;
1099550    delete _tempid;
1099551    run;
1099552    quit;
1099553    %end;
1099554    %else %do;
1099555    data _tempAll;
1099556    set %let j=%eval(&id-1);
1099557    %do x=1 %to &j;
1099558    %if &&nobs&x %then %do;
1099559    _temp&x %end;
1099560    %end;
1099561    ;
1099562    run;
1099563    proc sql;
1099564    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
1099564  ! work._tempid p2 where p.name=p2.lhs;
1099565    quit;
1099566    data _temp&id;
1099567    set _temp&id;
1099568    where LHS ne '' and NAME ne '' and Node ne '';
1099569    run;
1099570    proc datasets lib=work nolist;
1099571    delete _tempAll;
1099572    run;
1099573    %let dsid = %sysfunc(open(_temp&id));
1099574    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1099575    %let dsid = %sysfunc(close(&dsid));
1099576    %if ^&&nobs&id %then %do;
1099577    proc datasets lib=work nolist;
1099578    delete _temp&id;
1099579    run;
1099580    quit;
1099581    %end;
1099582    %else %do;
1099583    %let scoreFlag&id = 1;
1099584    data _temp&id;
1099585    set _temp&id;
1099586    where LHS ne NAME and node ne '';
1099587    run;
1099588    %let dsid = %sysfunc(open(_temp&id));
1099589    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1099590    %let dsid = %sysfunc(close(&dsid));
1099591    %if ^&&nobs&id %then %do;
1099592    proc datasets lib=work nolist;
1099593    delete _temp&id;
1099594    run;
1099595    quit;
1099596    %end;
1099597    %else %do;
1099598    proc sort data=_temp&id nodupkey;
1099599    by LHS NAME;
1099600    run;
1099601    %end;
1099602    %end;
1099603    %end;
1099604    %end;
1099605    %mend varDept;
1099606    %macro optCode(outdata=fcmpdata);
1099607    %global fcmpStart;
1099608    %let fcmpStart = 0;
1099609    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
1099610    %let NumNodes=9;
1099611    %do k=1 %to &NumNodes;
1099612    %vardept(fcmpdata=&outdata, id=&k);
1099613    %end;
1099614    %mend optCode;
1099615    %optcode(outData=EMWS8.Ensmbl12_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl12_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL12_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl12_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 21 observations read from the data set EMWS8.ENSMBL12_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 14 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 7 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl12_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL12_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl12_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL12_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl12_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL12_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 7 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 7 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp5;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP5 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl12_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL12_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 7 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 7 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 20 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 20 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 20 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 20 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 20 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 20 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 20 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl12_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL12_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 7 observations read from the data set WORK._TEMP2.
NOTE: There were 20 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 27 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl12_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL12_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl12_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL12_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

1099616    filename _pref
1099616  ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural39\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural39\EMPUBLISHSCORE.sas";
1099617    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1099618    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Neural39\EMPUBLISHSCORE.sas.
1099619   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1099620   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1099621   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1099622   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1099623   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1099624   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1099625   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1099626   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1099627   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1099628   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1099629   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1099630   +LENGTH _WARN_ $4
1099631   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
1099632   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1099633   +
1099634   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1099635   +
1099636   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1099637   +
1099638   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1099639   +
1099640   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1099641   +
1099642   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1099643   +
1099644   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1099645   +
1099646   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1099647   +
1099648   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1099649   +
1099650   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1099651   +
1099652   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1099653   +
1099654   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1099655   +
1099656   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1099657   +
1099658   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1099659   +
1099660   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1099661   +
1099662   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1099663   +
1099664   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1099665   +
1099666   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1099667   +
1099668   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1099669   +
1099670   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1099671   +
1099672   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1099673   +
1099674   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1099675   +
1099676   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1099677   +
1099678   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1099679   +
1099680   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1099681   +
1099682   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1099683   +
1099684   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1099685   +
1099686   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1099687   +
1099688   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1099689   +
1099690   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1099691   +
1099692   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1099693   +
1099694   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1099695   +
1099696   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1099697   +
1099698   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1099699   +
1099700   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1099701   +
1099702   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1099703   +
1099704   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1099705   +
1099706   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1099707   +
1099708   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1099709   +
1099710   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1099711   +
1099712   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1099713   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1099714   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1099715   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1099716   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1099717   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1099718   +end;
MPRINT(EM_DIAGRAM):   end;
1099719   +else do;
MPRINT(EM_DIAGRAM):   else do;
1099720   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1099721   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1099722   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1099723   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1099724   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1099725   +   end;
MPRINT(EM_DIAGRAM):   end;
1099726   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1099727   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1099728   +   end;
MPRINT(EM_DIAGRAM):   end;
1099729   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1099730   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1099731   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1099732   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1099733   +   end;
MPRINT(EM_DIAGRAM):   end;
1099734   +end;
MPRINT(EM_DIAGRAM):   end;
1099735   +
1099736   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1099737   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1099738   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1099739   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1099740   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1099741   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1099742   +end;
MPRINT(EM_DIAGRAM):   end;
1099743   +else do;
MPRINT(EM_DIAGRAM):   else do;
1099744   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1099745   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1099746   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1099747   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1099748   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1099749   +   end;
MPRINT(EM_DIAGRAM):   end;
1099750   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1099751   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1099752   +   end;
MPRINT(EM_DIAGRAM):   end;
1099753   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1099754   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1099755   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1099756   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1099757   +   end;
MPRINT(EM_DIAGRAM):   end;
1099758   +end;
MPRINT(EM_DIAGRAM):   end;
1099759   +
1099760   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1099761   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1099762   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1099763   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1099764   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1099765   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1099766   +end;
MPRINT(EM_DIAGRAM):   end;
1099767   +else do;
MPRINT(EM_DIAGRAM):   else do;
1099768   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1099769   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1099770   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1099771   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1099772   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1099773   +   end;
MPRINT(EM_DIAGRAM):   end;
1099774   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1099775   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1099776   +   end;
MPRINT(EM_DIAGRAM):   end;
1099777   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1099778   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1099779   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1099780   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1099781   +   end;
MPRINT(EM_DIAGRAM):   end;
1099782   +end;
MPRINT(EM_DIAGRAM):   end;
1099783   +
1099784   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1099785   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1099786   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1099787   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1099788   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1099789   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1099790   +end;
MPRINT(EM_DIAGRAM):   end;
1099791   +else do;
MPRINT(EM_DIAGRAM):   else do;
1099792   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1099793   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1099794   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1099795   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1099796   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1099797   +   end;
MPRINT(EM_DIAGRAM):   end;
1099798   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1099799   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1099800   +   end;
MPRINT(EM_DIAGRAM):   end;
1099801   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1099802   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1099803   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1099804   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1099805   +   end;
MPRINT(EM_DIAGRAM):   end;
1099806   +end;
MPRINT(EM_DIAGRAM):   end;
1099807   +
1099808   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1099809   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1099810   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1099811   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1099812   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1099813   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1099814   +end;
MPRINT(EM_DIAGRAM):   end;
1099815   +else do;
MPRINT(EM_DIAGRAM):   else do;
1099816   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1099817   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1099818   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1099819   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1099820   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1099821   +   end;
MPRINT(EM_DIAGRAM):   end;
1099822   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1099823   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1099824   +   end;
MPRINT(EM_DIAGRAM):   end;
1099825   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1099826   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1099827   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1099828   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1099829   +   end;
MPRINT(EM_DIAGRAM):   end;
1099830   +end;
MPRINT(EM_DIAGRAM):   end;
1099831   +
1099832   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1099833   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1099834   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1099835   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1099836   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1099837   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1099838   +end;
MPRINT(EM_DIAGRAM):   end;
1099839   +else do;
MPRINT(EM_DIAGRAM):   else do;
1099840   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1099841   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1099842   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1099843   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1099844   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1099845   +   end;
MPRINT(EM_DIAGRAM):   end;
1099846   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1099847   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1099848   +   end;
MPRINT(EM_DIAGRAM):   end;
1099849   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1099850   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1099851   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1099852   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1099853   +   end;
MPRINT(EM_DIAGRAM):   end;
1099854   +end;
MPRINT(EM_DIAGRAM):   end;
1099855   +
1099856   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1099857   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1099858   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1099859   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1099860   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1099861   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1099862   +end;
MPRINT(EM_DIAGRAM):   end;
1099863   +else do;
MPRINT(EM_DIAGRAM):   else do;
1099864   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1099865   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1099866   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1099867   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1099868   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1099869   +   end;
MPRINT(EM_DIAGRAM):   end;
1099870   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1099871   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1099872   +   end;
MPRINT(EM_DIAGRAM):   end;
1099873   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1099874   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1099875   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1099876   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1099877   +   end;
MPRINT(EM_DIAGRAM):   end;
1099878   +end;
MPRINT(EM_DIAGRAM):   end;
1099879   +
1099880   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1099881   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
1099882   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1099883   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1099884   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1099885   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1099886   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1099887   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1099888   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1099889   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1099890   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1099891   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1099892   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1099893   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1099894   +end;
MPRINT(EM_DIAGRAM):   end;
1099895   +else do;
MPRINT(EM_DIAGRAM):   else do;
1099896   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1099897   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1099898   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1099899   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1099900   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1099901   +   end;
MPRINT(EM_DIAGRAM):   end;
1099902   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1099903   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1099904   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1099905   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1099906   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1099907   +   end;
MPRINT(EM_DIAGRAM):   end;
1099908   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1099909   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1099910   +   end;
MPRINT(EM_DIAGRAM):   end;
1099911   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1099912   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1099913   +   end;
MPRINT(EM_DIAGRAM):   end;
1099914   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1099915   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1099916   +   end;
MPRINT(EM_DIAGRAM):   end;
1099917   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1099918   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1099919   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1099920   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1099921   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1099922   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1099923   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1099924   +   end;
MPRINT(EM_DIAGRAM):   end;
1099925   +end;
MPRINT(EM_DIAGRAM):   end;
1099926   +
1099927   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1099928   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1099929   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
1099930   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1099931   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1099932   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1099933   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1099934   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1099935   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1099936   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1099937   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1099938   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1099939   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1099940   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1099941   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1099942   +end;
MPRINT(EM_DIAGRAM):   end;
1099943   +else do;
MPRINT(EM_DIAGRAM):   else do;
1099944   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1099945   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1099946   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1099947   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1099948   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1099949   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1099950   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1099951   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1099952   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1099953   +         end;
MPRINT(EM_DIAGRAM):   end;
1099954   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1099955   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1099956   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1099957   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1099958   +            end;
MPRINT(EM_DIAGRAM):   end;
1099959   +         end;
MPRINT(EM_DIAGRAM):   end;
1099960   +      end;
MPRINT(EM_DIAGRAM):   end;
1099961   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1099962   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1099963   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1099964   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1099965   +         end;
MPRINT(EM_DIAGRAM):   end;
1099966   +      end;
MPRINT(EM_DIAGRAM):   end;
1099967   +   end;
MPRINT(EM_DIAGRAM):   end;
1099968   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1099969   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1099970   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1099971   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1099972   +      end;
MPRINT(EM_DIAGRAM):   end;
1099973   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1099974   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1099975   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1099976   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1099977   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1099978   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1099979   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1099980   +         end;
MPRINT(EM_DIAGRAM):   end;
1099981   +      end;
MPRINT(EM_DIAGRAM):   end;
1099982   +   end;
MPRINT(EM_DIAGRAM):   end;
1099983   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1099984   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1099985   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1099986   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1099987   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1099988   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1099989   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1099990   +   end;
MPRINT(EM_DIAGRAM):   end;
1099991   +end;
MPRINT(EM_DIAGRAM):   end;
1099992   +
1099993   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1099994   +*** Checking missing input Interval
1099995   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1099996   +
1099997   +IF NMISS(
1099998   +   AcceptedCmpTotal ,
1099999   +   Age ,
1100000   +   Frq ,
1100001   +   Income ,
1100002   +   Kidhome ,
1100003   +   MntFishProducts ,
1100004   +   MntFruits ,
1100005   +   MntGoldProds ,
1100006   +   MntSweetProducts ,
1100007   +   MonthsAsCustomer ,
1100008   +   NumDealsPurchases ,
1100009   +   NumWebVisitsMonth ,
1100010   +   RFMstat ,
1100011   +   RMntFrq ,
1100012   +   Recency ,
1100013   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , 
MntFishProducts , MntFruits , MntGoldProds , MntSweetProducts , MonthsAsCustomer , 
NumDealsPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , Teenhome ) THEN DO;
1100014   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1100015   +
1100016   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1100017   +END;
MPRINT(EM_DIAGRAM):   END;
1100018   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1100019   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1100020   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1100021   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1100022   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1100023   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1100024   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1100025   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1100026   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1100027   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1100028   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1100029   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1100030   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1100031   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1100032   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1100033   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1100034   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1100035   +   S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
1100036   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
1100037   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1100038   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1100039   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1100040   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1100041   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1100042   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1100043   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1100044   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1100045   +END;
MPRINT(EM_DIAGRAM):   END;
1100046   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1100047   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1100048   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1100049   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1100050   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1100051   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1100052   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1100053   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1100054   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1100055   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1100056   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1100057   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1100058   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1100059   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1100060   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1100061   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1100062   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1100063   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1100064   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1100065   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1100066   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1100067   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1100068   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1100069   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1100070   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1100071   +   ELSE S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
1100072   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
1100073   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1100074   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1100075   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1100076   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1100077   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1100078   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1100079   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1100080   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1100081   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1100082   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1100083   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1100084   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1100085   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1100086   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1100087   +END;
MPRINT(EM_DIAGRAM):   END;
1100088   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1100089   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1100090   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1100091   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1100092   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1100093   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1100094   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1100095   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1100096   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1100097   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1100098   +   H11  =    -0.61879380889194 * S_AcceptedCmpTotal  +    -0.09795242603477 *
1100099   +        S_Age  +     0.36103250822255 * S_Frq  +     0.08899052794394 *
1100100   +        S_Income  +     0.25564250606874 * S_Kidhome
1100101   +          +    -0.02786629817134 * S_MntFishProducts
1100102   +          +     0.13529614728112 * S_MntFruits  +     0.19622442891821 *
1100103   +        S_MntGoldProds  +     0.14107929478218 * S_MntSweetProducts
1100104   +          +    -0.29199173107007 * S_MonthsAsCustomer
1100105   +          +    -0.59759788962473 * S_NumDealsPurchases
1100106   +          +     -0.3788422274482 * S_NumWebVisitsMonth
1100107   +          +    -0.06743318112874 * S_RFMstat  +      0.2833264895355 *
1100108   +        S_RMntFrq  +     0.70854972350771 * S_Recency
1100109   +          +     0.11936327488967 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = -0.61879380889194 * S_AcceptedCmpTotal + -0.09795242603477 * S_Age 
+ 0.36103250822255 * S_Frq + 0.08899052794394 * S_Income + 0.25564250606874 * S_Kidhome + 
-0.02786629817134 * S_MntFishProducts + 0.13529614728112 * S_MntFruits + 0.19622442891821 * 
S_MntGoldProds + 0.14107929478218 * S_MntSweetProducts + -0.29199173107007 * 
S_MonthsAsCustomer + -0.59759788962473 * S_NumDealsPurchases + -0.3788422274482 * 
S_NumWebVisitsMonth + -0.06743318112874 * S_RFMstat + 0.2833264895355 * S_RMntFrq + 
0.70854972350771 * S_Recency + 0.11936327488967 * S_Teenhome ;
1100110   +   H12  =    -0.18766983828727 * S_AcceptedCmpTotal  +       0.517042669033 *
1100111   +        S_Age  +     1.02262972068559 * S_Frq  +     0.38007459198406 *
1100112   +        S_Income  +     0.07328887474153 * S_Kidhome
1100113   +          +    -0.23284570213322 * S_MntFishProducts
1100114   +          +     0.02838864374624 * S_MntFruits  +    -0.07574618602845 *
1100115   +        S_MntGoldProds  +    -0.41131707239504 * S_MntSweetProducts
1100116   +          +     0.29669594858185 * S_MonthsAsCustomer
1100117   +          +    -0.51220833966596 * S_NumDealsPurchases
1100118   +          +    -0.72293271444385 * S_NumWebVisitsMonth
1100119   +          +    -0.20562458645044 * S_RFMstat  +    -0.52495075768839 *
1100120   +        S_RMntFrq  +      1.0795232419354 * S_Recency
1100121   +          +    -0.18997953891579 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -0.18766983828727 * S_AcceptedCmpTotal + 0.517042669033 * S_Age + 
1.02262972068559 * S_Frq + 0.38007459198406 * S_Income + 0.07328887474153 * S_Kidhome + 
-0.23284570213322 * S_MntFishProducts + 0.02838864374624 * S_MntFruits + -0.07574618602845 * 
S_MntGoldProds + -0.41131707239504 * S_MntSweetProducts + 0.29669594858185 * 
S_MonthsAsCustomer + -0.51220833966596 * S_NumDealsPurchases + -0.72293271444385 * 
S_NumWebVisitsMonth + -0.20562458645044 * S_RFMstat + -0.52495075768839 * S_RMntFrq + 
1.0795232419354 * S_Recency + -0.18997953891579 * S_Teenhome ;
1100122   +   H13  =    -0.49159501579895 * S_AcceptedCmpTotal  +    -0.16293971978781 *
1100123   +        S_Age  +    -0.02977525702894 * S_Frq  +    -0.78728568889664 *
1100124   +        S_Income  +    -0.68209910558389 * S_Kidhome
1100125   +          +     0.23366174254474 * S_MntFishProducts
1100126   +          +    -0.08764688950673 * S_MntFruits  +    -0.38895649975347 *
1100127   +        S_MntGoldProds  +     0.02270546080284 * S_MntSweetProducts
1100128   +          +    -0.05759532204753 * S_MonthsAsCustomer
1100129   +          +    -0.30170163047261 * S_NumDealsPurchases
1100130   +          +    -0.57711437834603 * S_NumWebVisitsMonth
1100131   +          +    -0.09851659878757 * S_RFMstat  +    -0.20102310575519 *
1100132   +        S_RMntFrq  +     0.80994896921796 * S_Recency
1100133   +          +     0.32766576826101 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = -0.49159501579895 * S_AcceptedCmpTotal + -0.16293971978781 * S_Age 
+ -0.02977525702894 * S_Frq + -0.78728568889664 * S_Income + -0.68209910558389 * S_Kidhome + 
0.23366174254474 * S_MntFishProducts + -0.08764688950673 * S_MntFruits + -0.38895649975347 * 
S_MntGoldProds + 0.02270546080284 * S_MntSweetProducts + -0.05759532204753 * 
S_MonthsAsCustomer + -0.30170163047261 * S_NumDealsPurchases + -0.57711437834603 * 
S_NumWebVisitsMonth + -0.09851659878757 * S_RFMstat + -0.20102310575519 * S_RMntFrq + 
0.80994896921796 * S_Recency + 0.32766576826101 * S_Teenhome ;
1100134   +   H14  =    -0.11122937165995 * S_AcceptedCmpTotal  +     0.06859829254058 *
1100135   +        S_Age  +    -0.60966071706708 * S_Frq  +    -1.00949681880427 *
1100136   +        S_Income  +     0.67855138873039 * S_Kidhome
1100137   +          +    -0.05297743313476 * S_MntFishProducts
1100138   +          +     0.21613302257797 * S_MntFruits  +     0.03843790921347 *
1100139   +        S_MntGoldProds  +     0.25543771093558 * S_MntSweetProducts
1100140   +          +    -0.15817861274553 * S_MonthsAsCustomer
1100141   +          +     0.25133066233725 * S_NumDealsPurchases
1100142   +          +     0.08802636187267 * S_NumWebVisitsMonth
1100143   +          +    -0.04637957487976 * S_RFMstat  +    -0.31656429052936 *
1100144   +        S_RMntFrq  +      0.7228272496527 * S_Recency
1100145   +          +     0.58629319995218 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = -0.11122937165995 * S_AcceptedCmpTotal + 0.06859829254058 * S_Age 
+ -0.60966071706708 * S_Frq + -1.00949681880427 * S_Income + 0.67855138873039 * S_Kidhome + 
-0.05297743313476 * S_MntFishProducts + 0.21613302257797 * S_MntFruits + 0.03843790921347 * 
S_MntGoldProds + 0.25543771093558 * S_MntSweetProducts + -0.15817861274553 * 
S_MonthsAsCustomer + 0.25133066233725 * S_NumDealsPurchases + 0.08802636187267 * 
S_NumWebVisitsMonth + -0.04637957487976 * S_RFMstat + -0.31656429052936 * S_RMntFrq + 
0.7228272496527 * S_Recency + 0.58629319995218 * S_Teenhome ;
1100146   +   H11  = H11  +     0.23190135069025 * AcceptedCmp10
1100147   +          +     0.04686213078143 * AcceptedCmp20  +     0.17662818955575 *
1100148   +        AcceptedCmp30  +     0.03498741067378 * AcceptedCmp40
1100149   +          +     0.61042747626768 * AcceptedCmp50  +    -0.12810871081838 *
1100150   +        Complain0  +     0.03047400476944 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.23190135069025 * AcceptedCmp10 + 0.04686213078143 * 
AcceptedCmp20 + 0.17662818955575 * AcceptedCmp30 + 0.03498741067378 * AcceptedCmp40 + 
0.61042747626768 * AcceptedCmp50 + -0.12810871081838 * Complain0 + 0.03047400476944 * 
HigherEducationBinary0 ;
1100151   +   H12  = H12  +     0.53873807658752 * AcceptedCmp10
1100152   +          +     0.29840055428915 * AcceptedCmp20  +     0.52740574468702 *
1100153   +        AcceptedCmp30  +     0.27242279016627 * AcceptedCmp40
1100154   +          +     0.07126269343217 * AcceptedCmp50  +    -0.14631570192286 *
1100155   +        Complain0  +     0.16629352334811 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.53873807658752 * AcceptedCmp10 + 0.29840055428915 * 
AcceptedCmp20 + 0.52740574468702 * AcceptedCmp30 + 0.27242279016627 * AcceptedCmp40 + 
0.07126269343217 * AcceptedCmp50 + -0.14631570192286 * Complain0 + 0.16629352334811 * 
HigherEducationBinary0 ;
1100156   +   H13  = H13  +     0.09118941740461 * AcceptedCmp10
1100157   +          +     0.04178457860358 * AcceptedCmp20  +     0.48487479920901 *
1100158   +        AcceptedCmp30  +    -0.80910928087974 * AcceptedCmp40
1100159   +          +      0.4667831985075 * AcceptedCmp50  +    -0.29601289494349 *
1100160   +        Complain0  +     0.10690006738431 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.09118941740461 * AcceptedCmp10 + 0.04178457860358 * 
AcceptedCmp20 + 0.48487479920901 * AcceptedCmp30 + -0.80910928087974 * AcceptedCmp40 + 
0.4667831985075 * AcceptedCmp50 + -0.29601289494349 * Complain0 + 0.10690006738431 * 
HigherEducationBinary0 ;
1100161   +   H14  = H14  +     0.21382858049752 * AcceptedCmp10
1100162   +          +     0.12652392800261 * AcceptedCmp20  +     0.30403608200617 *
1100163   +        AcceptedCmp30  +     0.51966382166521 * AcceptedCmp40
1100164   +          +    -0.14518145187533 * AcceptedCmp50  +     0.27045295957801 *
1100165   +        Complain0  +    -0.49307163723406 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.21382858049752 * AcceptedCmp10 + 0.12652392800261 * 
AcceptedCmp20 + 0.30403608200617 * AcceptedCmp30 + 0.51966382166521 * AcceptedCmp40 + 
-0.14518145187533 * AcceptedCmp50 + 0.27045295957801 * Complain0 + -0.49307163723406 * 
HigherEducationBinary0 ;
1100166   +   H11  = H11  +    -0.15292649085097 * Education2n_Cycle
1100167   +          +     0.00016605452926 * EducationBasic  +    -0.04208965271063 *
1100168   +        EducationGraduation  +    -0.05433922630608 * EducationMaster
1100169   +          +      0.0528075343138 * Marital_StatusDivorced
1100170   +          +    -0.08269844855231 * Marital_StatusMarried
1100171   +          +     0.43411839786169 * Marital_StatusSingle
1100172   +          +     0.38324605489754 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.15292649085097 * Education2n_Cycle + 0.00016605452926 * 
EducationBasic + -0.04208965271063 * EducationGraduation + -0.05433922630608 * EducationMaster 
+ 0.0528075343138 * Marital_StatusDivorced + -0.08269844855231 * Marital_StatusMarried + 
0.43411839786169 * Marital_StatusSingle + 0.38324605489754 * Marital_StatusTogether ;
1100173   +   H12  = H12  +      0.3082578019648 * Education2n_Cycle
1100174   +          +    -0.01380127751108 * EducationBasic  +    -0.11076736066311 *
1100175   +        EducationGraduation  +     -0.1586948328241 * EducationMaster
1100176   +          +    -0.12842912869907 * Marital_StatusDivorced
1100177   +          +     0.11838814754642 * Marital_StatusMarried
1100178   +          +     0.01184261900927 * Marital_StatusSingle
1100179   +          +     0.14066273070318 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.3082578019648 * Education2n_Cycle + -0.01380127751108 * 
EducationBasic + -0.11076736066311 * EducationGraduation + -0.1586948328241 * EducationMaster 
+ -0.12842912869907 * Marital_StatusDivorced + 0.11838814754642 * Marital_StatusMarried + 
0.01184261900927 * Marital_StatusSingle + 0.14066273070318 * Marital_StatusTogether ;
1100180   +   H13  = H13  +     0.02861254390946 * Education2n_Cycle
1100181   +          +      0.4349807830691 * EducationBasic  +    -0.31346964692246 *
1100182   +        EducationGraduation  +      0.0620488761517 * EducationMaster
1100183   +          +    -0.22110722201709 * Marital_StatusDivorced
1100184   +          +      0.1355339029843 * Marital_StatusMarried
1100185   +          +    -0.33157273596382 * Marital_StatusSingle
1100186   +          +    -0.19725820483372 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.02861254390946 * Education2n_Cycle + 0.4349807830691 * 
EducationBasic + -0.31346964692246 * EducationGraduation + 0.0620488761517 * EducationMaster + 
-0.22110722201709 * Marital_StatusDivorced + 0.1355339029843 * Marital_StatusMarried + 
-0.33157273596382 * Marital_StatusSingle + -0.19725820483372 * Marital_StatusTogether ;
1100187   +   H14  = H14  +    -0.15196350137644 * Education2n_Cycle
1100188   +          +     0.11143610044897 * EducationBasic  +    -0.23356442851658 *
1100189   +        EducationGraduation  +     0.26881272673711 * EducationMaster
1100190   +          +    -0.21663247467797 * Marital_StatusDivorced
1100191   +          +     1.11468603898508 * Marital_StatusMarried
1100192   +          +    -0.84252388146943 * Marital_StatusSingle
1100193   +          +     0.91707021954171 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.15196350137644 * Education2n_Cycle + 0.11143610044897 * 
EducationBasic + -0.23356442851658 * EducationGraduation + 0.26881272673711 * EducationMaster 
+ -0.21663247467797 * Marital_StatusDivorced + 1.11468603898508 * Marital_StatusMarried + 
-0.84252388146943 * Marital_StatusSingle + 0.91707021954171 * Marital_StatusTogether ;
1100194   +   H11  =     0.69752617990443 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 0.69752617990443 + H11 ;
1100195   +   H12  =     0.88932226025287 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.88932226025287 + H12 ;
1100196   +   H13  =    -0.23351093325425 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.23351093325425 + H13 ;
1100197   +   H14  =      1.5565991209041 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 1.5565991209041 + H14 ;
1100198   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1100199   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1100200   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1100201   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1100202   +END;
MPRINT(EM_DIAGRAM):   END;
1100203   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1100204   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1100205   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1100206   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1100207   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1100208   +END;
MPRINT(EM_DIAGRAM):   END;
1100209   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1100210   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1100211   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1100212   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1100213   +   P_DepVar1  =    -1.10683009838286 * H11  +    -1.85294488833715 * H12
1100214   +          +    -2.73624761150933 * H13  +    -2.51103548718704 * H14 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.10683009838286 * H11 + -1.85294488833715 * H12 + 
-2.73624761150933 * H13 + -2.51103548718704 * H14 ;
1100215   +   P_DepVar1  =    -0.86309949021709 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.86309949021709 + P_DepVar1 ;
1100216   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1100217   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1100218   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1100219   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1100220   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1100221   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1100222   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1100223   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1100224   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1100225   +END;
MPRINT(EM_DIAGRAM):   END;
1100226   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1100227   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1100228   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1100229   +END;
MPRINT(EM_DIAGRAM):   END;
1100230   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1100231   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1100232   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1100233   +END;
MPRINT(EM_DIAGRAM):   END;
1100234   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1100235   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1100236   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1100237   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1100238   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1100239   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1100240   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1100241   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1100242   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1100243   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1100244   +END;
MPRINT(EM_DIAGRAM):   END;
1100245   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1100246   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1100247   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1100248   +drop
1100249   +H11
1100250   +H12
1100251   +H13
1100252   +H14
1100253   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 ;
1100254   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1100255    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1100256    quit;
1100257    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1100258    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1100259    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1100260    retain ID 2 Node "Neural39";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Neural39";
1100261    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1100262    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1891 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 1891 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1100263    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1100264    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1100265    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1891 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 1891 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1100266    proc sort data=EMWS8.Neural39_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Neural39_variableset out=_temp2(keep=NAME CREATOR);
1100267    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1100268    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.NEURAL39_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1100269    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1100270    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1100271    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1100272    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1100273    proc contents data=EMWS8.Neural39_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Neural39_train out=_meta(keep=NAME) noprint;
1100274    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

1100275    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1100276    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1100277    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 53 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1100278    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1100279    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1100280    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1100281    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 53 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1100282    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1100283    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1100283  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 987 rows and 5 columns.

1100284    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1100285    proc append base=EMWS8.Ensmbl12_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl12_FCMP data=_tempx;
1100286    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL12_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 987 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL12_FCMP has 987 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1100287    filename _pref
1100287  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
1100288    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1100289    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
1100290   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1100291   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1100292   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1100293   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1100294   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1100295   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1100296    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1100297    quit;
1100298    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1100299    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1100300    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1100301    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
1100302    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1100303    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1100304    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1100305    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1100306    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1100307    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
1100308    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1100309    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1100310    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1100311    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1100312    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1100313    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1100314    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
1100315    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

1100316    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1100317    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1100318    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1100319    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1100320    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1100321    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1100322    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1100323    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1100324    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1100324  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

1100325    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1100326    proc append base=EMWS8.Ensmbl12_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl12_FCMP data=_tempx;
1100327    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL12_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL12_FCMP has 991 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1100328    filename _pref
1100328  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
1100329    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1100330    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
1100331   +
1100332   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1100333   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1100333  !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1100334   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1100335   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1100336   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1100337   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1100338   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1100339    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1100340    quit;
1100341    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1100342    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1100343    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1100344    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
1100345    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1100346    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1100347    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1100348    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1100349    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1100350    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
1100351    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1100352    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1100353    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1100354    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1100355    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1100356    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1100357    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
1100358    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1100359    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1100360    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1100361    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1100362    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1100363    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1100364    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1100365    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1100366    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1100367    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1100367  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

1100368    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1100369    proc append base=EMWS8.Ensmbl12_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl12_FCMP data=_tempx;
1100370    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL12_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL12_FCMP has 1030 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1100371    filename _pref
1100371  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
1100372    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1100373    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
1100374   +
1100375   +
1100376   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
1100377   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
1100378   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
1100379   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
1100380   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
1100381   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1100382   +
1100383   +
1100384   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
1100385   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
1100386   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
1100387   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
1100388   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
1100389   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1100390   +
1100391   +
1100392   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
1100393   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
1100394   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
1100395   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
1100396   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
1100397   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1100398   +
1100399   +
1100400   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
1100401   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
1100402   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
1100403   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
1100404   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
1100405   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1100406   +
1100407   +
1100408   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
1100409   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
1100410   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
1100411   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
1100412   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
1100413   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1100414   +
1100415   +
1100416   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
1100417   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
1100418   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
1100419   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
1100420   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
1100421   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1100422   +
1100423   +
1100424   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
1100425   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
1100426   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
1100427   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
1100428   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
1100429   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1100430   +
1100431   +
1100432   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
1100433   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
1100434   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
1100435   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
1100436   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
1100437   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1100438   +if
1100439   +_FILTERNORM1 not in ( '.')
1100440   + and
1100441   +_FILTERNORM2 not in ( '.')
1100442   + and
1100443   +_FILTERNORM3 not in ( '.')
1100444   + and
1100445   +_FILTERNORM4 not in ( '.')
1100446   + and
1100447   +_FILTERNORM5 not in ( '.')
1100448   + and
1100449   +_FILTERNORM6 not in ( '.')
1100450   + and
1100451   +_FILTERNORM7 not in ( ' ')
1100452   + and
1100453   +_FILTERNORM8 not in ( ' ')
1100454   +and
1100455   +( Dt_Customer ne .)
1100456   +and ( Income ne . and (Income<=107000))
1100457   +and ( Kidhome ne .)
1100458   +and ( MntFishProducts ne .)
1100459   +and ( MntFruits ne .)
1100460   +and ( MntGoldProds ne .)
1100461   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
1100462   +and ( MntSweetProducts ne .)
1100463   +and ( MntWines ne .)
1100464   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
1100465   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
1100466   +and ( NumStorePurchases ne .)
1100467   +and ( NumWebPurchases ne .)
1100468   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
1100469   +and ( Recency ne .)
1100470   +and ( Teenhome ne .)
1100471   +and ( Year_Birth ne .)
1100472   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
1100473   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
1100474   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
1100475   +end;
MPRINT(EM_DIAGRAM):   end;
1100476   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
1100477   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1100478    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1100479    quit;
1100480    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1100481    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1100482    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1100483    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
1100484    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1100485    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1100486    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1100487    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1100488    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1100489    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
1100490    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1100491    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1100492    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1100493    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1100494    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1100495    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1100496    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
1100497    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

1100498    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1100499    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1100500    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1100501    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1100502    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1100503    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1100504    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1100505    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1100506    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1100506  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

1100507    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1100508    proc append base=EMWS8.Ensmbl12_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl12_FCMP data=_tempx;
1100509    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL12_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL12_FCMP has 1096 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1100510    %macro varDept(fcmpdata=,id=);
1100511    %global nobs&id scoreFlag&id;
1100512    %let scoreFlag&id = 0;
1100513    %if &id=1 or ^&fcmpStart %then %do;
1100514    proc sort data=&fcmpdata out=_temp&id nodupkey;
1100515    by NAME;
1100516    where id=&id and LHS in( %let j=1;
1100517    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
1100518    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
1100519    "&var" %let j = %eval(&j+1);
1100520    %end;
1100521    );
1100522    run;
1100523    %let dsid = %sysfunc(open(_temp&id));
1100524    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1100525    %let dsid = %sysfunc(close(&dsid));
1100526    %if &&nobs&id %then %do;
1100527    %let scoreFlag&id = 1;
1100528    %let fcmpStart = 1;
1100529    %end;
1100530    %else %let fcmpStart = 0;
1100531    %end;
1100532    %else %do;
1100533    proc sort data=&fcmpdata out=_tempid;
1100534    where id=&id;
1100535    by LHS;
1100536    run;
1100537    %let dsid = %sysfunc(open(_tempid));
1100538    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1100539    %let dsid = %sysfunc(close(&dsid));
1100540    %if ^&&nobs&id %then %do;
1100541    proc datasets lib=work nolist;
1100542    delete _tempid;
1100543    run;
1100544    quit;
1100545    %end;
1100546    %else %do;
1100547    data _tempAll;
1100548    set %let j=%eval(&id-1);
1100549    %do x=1 %to &j;
1100550    %if &&nobs&x %then %do;
1100551    _temp&x %end;
1100552    %end;
1100553    ;
1100554    run;
1100555    proc sql;
1100556    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
1100556  ! work._tempid p2 where p.name=p2.lhs;
1100557    quit;
1100558    data _temp&id;
1100559    set _temp&id;
1100560    where LHS ne '' and NAME ne '' and Node ne '';
1100561    run;
1100562    proc datasets lib=work nolist;
1100563    delete _tempAll;
1100564    run;
1100565    %let dsid = %sysfunc(open(_temp&id));
1100566    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1100567    %let dsid = %sysfunc(close(&dsid));
1100568    %if ^&&nobs&id %then %do;
1100569    proc datasets lib=work nolist;
1100570    delete _temp&id;
1100571    run;
1100572    quit;
1100573    %end;
1100574    %else %do;
1100575    %let scoreFlag&id = 1;
1100576    data _temp&id;
1100577    set _temp&id;
1100578    where LHS ne NAME and node ne '';
1100579    run;
1100580    %let dsid = %sysfunc(open(_temp&id));
1100581    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1100582    %let dsid = %sysfunc(close(&dsid));
1100583    %if ^&&nobs&id %then %do;
1100584    proc datasets lib=work nolist;
1100585    delete _temp&id;
1100586    run;
1100587    quit;
1100588    %end;
1100589    %else %do;
1100590    proc sort data=_temp&id nodupkey;
1100591    by LHS NAME;
1100592    run;
1100593    %end;
1100594    %end;
1100595    %end;
1100596    %end;
1100597    %mend varDept;
1100598    %macro optCode(outdata=fcmpdata);
1100599    %global fcmpStart;
1100600    %let fcmpStart = 0;
1100601    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
1100602    %let NumNodes=9;
1100603    %do k=1 %to &NumNodes;
1100604    %vardept(fcmpdata=&outdata, id=&k);
1100605    %end;
1100606    %mend optCode;
1100607    %optcode(outData=EMWS8.Ensmbl12_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl12_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL12_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl12_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 106 observations read from the data set EMWS8.ENSMBL12_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 79 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 27 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl12_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL12_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl12_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL12_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl12_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL12_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 27 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 2 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl12_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL12_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 29 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 33 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 33 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 33 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 33 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl12_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL12_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: There were 33 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 62 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl12_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL12_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl12_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL12_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
The SAS System

      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

1100608    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
1100609    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1100610    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
1100611    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1100612    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
1100613    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1100614    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
1100615    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1100616    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1100617    create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
1100617  ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 2 rows and 3 columns.

1100618    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1100619    data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
1100620    set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
1100621    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 2 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 2 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1100622    filename _pref
1100622  ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural42\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural42\EMPUBLISHSCORE.sas";
1100623    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1100624    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Neural42\EMPUBLISHSCORE.sas.
1100625   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1100626   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1100627   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1100628   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1100629   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1100630   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1100631   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1100632   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1100633   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1100634   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1100635   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1100636   +LENGTH _WARN_ $4
1100637   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
1100638   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1100639   +
1100640   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1100641   +
1100642   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1100643   +
1100644   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1100645   +
1100646   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1100647   +
1100648   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1100649   +
1100650   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1100651   +
1100652   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1100653   +
1100654   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1100655   +
1100656   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1100657   +
1100658   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1100659   +
1100660   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1100661   +
1100662   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1100663   +
1100664   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1100665   +
1100666   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1100667   +
1100668   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1100669   +
1100670   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1100671   +
1100672   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1100673   +
1100674   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1100675   +
1100676   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1100677   +
1100678   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1100679   +
1100680   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1100681   +
1100682   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1100683   +
1100684   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1100685   +
1100686   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1100687   +
1100688   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1100689   +
1100690   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1100691   +
1100692   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1100693   +
1100694   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1100695   +
1100696   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1100697   +
1100698   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1100699   +
1100700   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1100701   +
1100702   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1100703   +
1100704   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1100705   +
1100706   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1100707   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1100708   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1100709   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1100710   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1100711   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1100712   +end;
MPRINT(EM_DIAGRAM):   end;
1100713   +else do;
MPRINT(EM_DIAGRAM):   else do;
1100714   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1100715   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1100716   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1100717   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1100718   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1100719   +   end;
MPRINT(EM_DIAGRAM):   end;
1100720   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1100721   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1100722   +   end;
MPRINT(EM_DIAGRAM):   end;
1100723   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1100724   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1100725   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1100726   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1100727   +   end;
MPRINT(EM_DIAGRAM):   end;
1100728   +end;
MPRINT(EM_DIAGRAM):   end;
1100729   +
1100730   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1100731   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1100732   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1100733   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1100734   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1100735   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1100736   +end;
MPRINT(EM_DIAGRAM):   end;
1100737   +else do;
MPRINT(EM_DIAGRAM):   else do;
1100738   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1100739   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1100740   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1100741   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1100742   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1100743   +   end;
MPRINT(EM_DIAGRAM):   end;
1100744   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1100745   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1100746   +   end;
MPRINT(EM_DIAGRAM):   end;
1100747   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1100748   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1100749   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1100750   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1100751   +   end;
MPRINT(EM_DIAGRAM):   end;
1100752   +end;
MPRINT(EM_DIAGRAM):   end;
1100753   +
1100754   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1100755   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1100756   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1100757   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1100758   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1100759   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1100760   +end;
MPRINT(EM_DIAGRAM):   end;
1100761   +else do;
MPRINT(EM_DIAGRAM):   else do;
1100762   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1100763   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1100764   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1100765   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1100766   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1100767   +   end;
MPRINT(EM_DIAGRAM):   end;
1100768   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1100769   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1100770   +   end;
MPRINT(EM_DIAGRAM):   end;
1100771   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1100772   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1100773   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1100774   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1100775   +   end;
MPRINT(EM_DIAGRAM):   end;
1100776   +end;
MPRINT(EM_DIAGRAM):   end;
1100777   +
1100778   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1100779   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1100780   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1100781   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1100782   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1100783   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1100784   +end;
MPRINT(EM_DIAGRAM):   end;
1100785   +else do;
MPRINT(EM_DIAGRAM):   else do;
1100786   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1100787   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1100788   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1100789   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1100790   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1100791   +   end;
MPRINT(EM_DIAGRAM):   end;
1100792   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1100793   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1100794   +   end;
MPRINT(EM_DIAGRAM):   end;
1100795   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1100796   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1100797   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1100798   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1100799   +   end;
MPRINT(EM_DIAGRAM):   end;
1100800   +end;
MPRINT(EM_DIAGRAM):   end;
1100801   +
1100802   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1100803   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1100804   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1100805   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1100806   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1100807   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1100808   +end;
MPRINT(EM_DIAGRAM):   end;
1100809   +else do;
MPRINT(EM_DIAGRAM):   else do;
1100810   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1100811   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1100812   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1100813   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1100814   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1100815   +   end;
MPRINT(EM_DIAGRAM):   end;
1100816   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1100817   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1100818   +   end;
MPRINT(EM_DIAGRAM):   end;
1100819   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1100820   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1100821   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1100822   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1100823   +   end;
MPRINT(EM_DIAGRAM):   end;
1100824   +end;
MPRINT(EM_DIAGRAM):   end;
1100825   +
1100826   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1100827   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1100828   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1100829   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1100830   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1100831   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1100832   +end;
MPRINT(EM_DIAGRAM):   end;
1100833   +else do;
MPRINT(EM_DIAGRAM):   else do;
1100834   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1100835   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1100836   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1100837   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1100838   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1100839   +   end;
MPRINT(EM_DIAGRAM):   end;
1100840   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1100841   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1100842   +   end;
MPRINT(EM_DIAGRAM):   end;
1100843   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1100844   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1100845   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1100846   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1100847   +   end;
MPRINT(EM_DIAGRAM):   end;
1100848   +end;
MPRINT(EM_DIAGRAM):   end;
1100849   +
1100850   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1100851   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1100852   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1100853   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1100854   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1100855   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1100856   +end;
MPRINT(EM_DIAGRAM):   end;
1100857   +else do;
MPRINT(EM_DIAGRAM):   else do;
1100858   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1100859   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1100860   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1100861   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1100862   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1100863   +   end;
MPRINT(EM_DIAGRAM):   end;
1100864   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1100865   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1100866   +   end;
MPRINT(EM_DIAGRAM):   end;
1100867   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1100868   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1100869   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1100870   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1100871   +   end;
MPRINT(EM_DIAGRAM):   end;
1100872   +end;
MPRINT(EM_DIAGRAM):   end;
1100873   +
1100874   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1100875   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
1100876   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1100877   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1100878   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1100879   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1100880   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1100881   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1100882   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1100883   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1100884   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1100885   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1100886   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1100887   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1100888   +end;
MPRINT(EM_DIAGRAM):   end;
1100889   +else do;
MPRINT(EM_DIAGRAM):   else do;
1100890   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1100891   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1100892   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1100893   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1100894   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1100895   +   end;
MPRINT(EM_DIAGRAM):   end;
1100896   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1100897   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1100898   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1100899   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1100900   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1100901   +   end;
MPRINT(EM_DIAGRAM):   end;
1100902   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1100903   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1100904   +   end;
MPRINT(EM_DIAGRAM):   end;
1100905   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1100906   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1100907   +   end;
MPRINT(EM_DIAGRAM):   end;
1100908   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1100909   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1100910   +   end;
MPRINT(EM_DIAGRAM):   end;
1100911   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1100912   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1100913   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1100914   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1100915   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1100916   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1100917   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1100918   +   end;
MPRINT(EM_DIAGRAM):   end;
1100919   +end;
MPRINT(EM_DIAGRAM):   end;
1100920   +
1100921   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1100922   +*** Checking missing input Interval
1100923   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1100924   +
1100925   +IF NMISS(
1100926   +   AcceptedCmpTotal ,
1100927   +   Age ,
1100928   +   Frq ,
1100929   +   Income ,
1100930   +   Kidhome ,
1100931   +   Mnt ,
1100932   +   MntFishProducts ,
1100933   +   MntFruits ,
1100934   +   MntGoldProds ,
1100935   +   MntSweetProducts ,
1100936   +   MonthsAsCustomer ,
1100937   +   NumDealsPurchases ,
1100938   +   NumWebVisitsMonth ,
1100939   +   RFMstat ,
1100940   +   RMntFrq ,
1100941   +   Recency ,
1100942   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntSweetProducts , MonthsAsCustomer , 
NumDealsPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , Teenhome ) THEN DO;
1100943   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1100944   +
1100945   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1100946   +END;
MPRINT(EM_DIAGRAM):   END;
1100947   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1100948   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1100949   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1100950   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1100951   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1100952   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1100953   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1100954   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1100955   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1100956   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1100957   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1100958   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1100959   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1100960   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1100961   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1100962   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1100963   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1100964   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1100965   +   S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
1100966   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
1100967   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1100968   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1100969   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1100970   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1100971   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1100972   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1100973   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1100974   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1100975   +END;
MPRINT(EM_DIAGRAM):   END;
1100976   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1100977   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1100978   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1100979   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1100980   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1100981   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1100982   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1100983   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1100984   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1100985   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1100986   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1100987   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1100988   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1100989   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1100990   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1100991   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1100992   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1100993   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1100994   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1100995   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1100996   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1100997   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1100998   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1100999   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1101000   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1101001   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1101002   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1101003   +   ELSE S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
1101004   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
1101005   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1101006   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1101007   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1101008   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1101009   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1101010   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1101011   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1101012   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1101013   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1101014   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1101015   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1101016   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1101017   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1101018   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1101019   +END;
MPRINT(EM_DIAGRAM):   END;
1101020   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1101021   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1101022   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1101023   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1101024   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1101025   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1101026   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1101027   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1101028   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1101029   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1101030   +   H11  =       0.143162011359 * S_AcceptedCmpTotal  +    -0.01147578601065 *
1101031   +        S_Age  +    -0.05169955507594 * S_Frq  +      0.0608752061961 *
1101032   +        S_Income  +    -0.00693057472767 * S_Kidhome
1101033   +          +     0.05071822608697 * S_Mnt  +    -0.00418474163671 *
1101034   +        S_MntFishProducts  +    -0.00868585259854 * S_MntFruits
1101035   +          +     0.00371185422632 * S_MntGoldProds  +    -0.00953369321279 *
1101036   +        S_MntSweetProducts  +     0.00364165525253 * S_MonthsAsCustomer
1101037   +          +     0.04099251994623 * S_NumDealsPurchases
1101038   +          +     0.03811258944826 * S_NumWebVisitsMonth
1101039   +          +     0.01010786402462 * S_RFMstat  +    -0.01356300667842 *
1101040   +        S_RMntFrq  +     -0.0946537245815 * S_Recency
1101041   +          +    -0.04221477681001 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.143162011359 * S_AcceptedCmpTotal + -0.01147578601065 * S_Age + 
-0.05169955507594 * S_Frq + 0.0608752061961 * S_Income + -0.00693057472767 * S_Kidhome + 
0.05071822608697 * S_Mnt + -0.00418474163671 * S_MntFishProducts + -0.00868585259854 * 
S_MntFruits + 0.00371185422632 * S_MntGoldProds + -0.00953369321279 * S_MntSweetProducts + 
0.00364165525253 * S_MonthsAsCustomer + 0.04099251994623 * S_NumDealsPurchases + 
0.03811258944826 * S_NumWebVisitsMonth + 0.01010786402462 * S_RFMstat + -0.01356300667842 * 
S_RMntFrq + -0.0946537245815 * S_Recency + -0.04221477681001 * S_Teenhome ;
1101042   +   H11  = H11  +     0.05665985483083 * AcceptedCmp10
1101043   +          +     0.07738044644174 * AcceptedCmp20  +     0.03664267575532 *
1101044   +        AcceptedCmp30  +     0.07960267580286 * AcceptedCmp40
1101045   +          +     0.05680904334063 * AcceptedCmp50  +     0.03195731295007 *
1101046   +        Complain0  +     0.02227933507918 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.05665985483083 * AcceptedCmp10 + 0.07738044644174 * 
AcceptedCmp20 + 0.03664267575532 * AcceptedCmp30 + 0.07960267580286 * AcceptedCmp40 + 
0.05680904334063 * AcceptedCmp50 + 0.03195731295007 * Complain0 + 0.02227933507918 * 
HigherEducationBinary0 ;
1101047   +   H11  = H11  +     -0.0196308800544 * Education2n_Cycle
1101048   +          +    -0.03243102288942 * EducationBasic  +     0.03338744363865 *
1101049   +        EducationGraduation  +      0.0055581758102 * EducationMaster ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.0196308800544 * Education2n_Cycle + -0.03243102288942 * 
EducationBasic + 0.03338744363865 * EducationGraduation + 0.0055581758102 * EducationMaster ;
1101050   +   H11  =     0.00486262152917 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 0.00486262152917 + H11 ;
1101051   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1101052   +END;
MPRINT(EM_DIAGRAM):   END;
1101053   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1101054   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1101055   +END;
MPRINT(EM_DIAGRAM):   END;
1101056   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1101057   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1101058   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1101059   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1101060   +   P_DepVar1  =     21.3591691048455 * H11 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 21.3591691048455 * H11 ;
1101061   +   P_DepVar1  =    -9.58357245308623 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -9.58357245308623 + P_DepVar1 ;
1101062   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1101063   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1101064   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1101065   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1101066   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1101067   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1101068   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1101069   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1101070   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1101071   +END;
MPRINT(EM_DIAGRAM):   END;
1101072   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1101073   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1101074   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1101075   +END;
MPRINT(EM_DIAGRAM):   END;
1101076   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1101077   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1101078   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1101079   +END;
MPRINT(EM_DIAGRAM):   END;
1101080   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1101081   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1101082   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1101083   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1101084   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1101085   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1101086   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1101087   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1101088   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1101089   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1101090   +END;
MPRINT(EM_DIAGRAM):   END;
1101091   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1101092   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1101093   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1101094   +drop
1101095   +H11
1101096   +;
MPRINT(EM_DIAGRAM):   drop H11 ;
1101097   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1101098    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1101099    quit;
1101100    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1101101    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1101102    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1101103    retain ID 2 Node "Neural42";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Neural42";
1101104    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1101105    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1370 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 1370 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1101106    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1101107    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1101108    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1370 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 1370 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1101109    proc sort data=EMWS8.Neural42_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Neural42_variableset out=_temp2(keep=NAME CREATOR);
1101110    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1101111    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.NEURAL42_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1101112    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1101113    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1101114    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1101115    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1101116    proc contents data=EMWS8.Neural42_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Neural42_train out=_meta(keep=NAME) noprint;
1101117    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

1101118    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1101119    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1101120    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 53 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1101121    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1101122    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1101123    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1101124    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 53 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1101125    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1101126    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1101126  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 856 rows and 5 columns.

1101127    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1101128    proc append base=EMWS8.Ensmbl12_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl12_FCMP data=_tempx;
1101129    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL12_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 856 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL12_FCMP has 856 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1101130    filename _pref
1101130  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
1101131    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1101132    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
1101133   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1101134   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1101135   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1101136   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1101137   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1101138   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1101139    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.63 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1101140    quit;
1101141    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1101142    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1101143    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1101144    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
1101145    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1101146    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1101147    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1101148    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1101149    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1101150    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
1101151    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1101152    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1101153    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1101154    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1101155    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1101156    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1101157    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
1101158    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

1101159    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1101160    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1101161    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1101162    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1101163    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1101164    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1101165    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1101166    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1101167    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1101167  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

1101168    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1101169    proc append base=EMWS8.Ensmbl12_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl12_FCMP data=_tempx;
1101170    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL12_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL12_FCMP has 860 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1101171    filename _pref
1101171  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
1101172    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1101173    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
1101174   +
1101175   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1101176   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1101176  !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1101177   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1101178   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1101179   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1101180   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1101181   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1101182    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1101183    quit;
1101184    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1101185    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1101186    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1101187    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
1101188    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1101189    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.03 seconds
      

1101190    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1101191    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1101192    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1101193    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
1101194    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1101195    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1101196    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1101197    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1101198    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1101199    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1101200    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
1101201    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1101202    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1101203    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1101204    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1101205    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1101206    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1101207    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1101208    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1101209    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1101210    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1101210  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

1101211    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1101212    proc append base=EMWS8.Ensmbl12_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl12_FCMP data=_tempx;
1101213    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL12_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL12_FCMP has 899 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1101214    filename _pref
1101214  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
1101215    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1101216    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
1101217   +
1101218   +
1101219   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
1101220   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
1101221   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
1101222   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
1101223   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
1101224   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1101225   +
1101226   +
1101227   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
1101228   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
1101229   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
1101230   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
1101231   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
1101232   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1101233   +
1101234   +
1101235   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
1101236   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
1101237   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
1101238   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
1101239   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
1101240   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1101241   +
1101242   +
1101243   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
1101244   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
1101245   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
1101246   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
1101247   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
1101248   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1101249   +
1101250   +
1101251   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
1101252   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
1101253   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
1101254   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
1101255   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
1101256   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1101257   +
1101258   +
1101259   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
1101260   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
1101261   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
1101262   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
1101263   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
1101264   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1101265   +
1101266   +
1101267   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
1101268   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
1101269   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
1101270   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
1101271   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
1101272   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1101273   +
1101274   +
1101275   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
1101276   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
1101277   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
1101278   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
1101279   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
1101280   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1101281   +if
1101282   +_FILTERNORM1 not in ( '.')
1101283   + and
1101284   +_FILTERNORM2 not in ( '.')
1101285   + and
1101286   +_FILTERNORM3 not in ( '.')
1101287   + and
1101288   +_FILTERNORM4 not in ( '.')
1101289   + and
1101290   +_FILTERNORM5 not in ( '.')
1101291   + and
1101292   +_FILTERNORM6 not in ( '.')
1101293   + and
1101294   +_FILTERNORM7 not in ( ' ')
1101295   + and
1101296   +_FILTERNORM8 not in ( ' ')
1101297   +and
1101298   +( Dt_Customer ne .)
1101299   +and ( Income ne . and (Income<=107000))
1101300   +and ( Kidhome ne .)
1101301   +and ( MntFishProducts ne .)
1101302   +and ( MntFruits ne .)
1101303   +and ( MntGoldProds ne .)
1101304   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
1101305   +and ( MntSweetProducts ne .)
1101306   +and ( MntWines ne .)
1101307   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
1101308   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
1101309   +and ( NumStorePurchases ne .)
1101310   +and ( NumWebPurchases ne .)
1101311   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
1101312   +and ( Recency ne .)
1101313   +and ( Teenhome ne .)
1101314   +and ( Year_Birth ne .)
1101315   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
1101316   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
1101317   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
1101318   +end;
MPRINT(EM_DIAGRAM):   end;
1101319   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
1101320   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1101321    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1101322    quit;
1101323    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1101324    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1101325    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1101326    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
1101327    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1101328    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1101329    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1101330    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1101331    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1101332    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
1101333    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1101334    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1101335    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1101336    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1101337    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1101338    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1101339    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
1101340    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

1101341    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1101342    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1101343    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1101344    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1101345    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1101346    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1101347    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1101348    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1101349    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1101349  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

1101350    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1101351    proc append base=EMWS8.Ensmbl12_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl12_FCMP data=_tempx;
1101352    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL12_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL12_FCMP has 965 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1101353    %macro varDept(fcmpdata=,id=);
1101354    %global nobs&id scoreFlag&id;
1101355    %let scoreFlag&id = 0;
1101356    %if &id=1 or ^&fcmpStart %then %do;
1101357    proc sort data=&fcmpdata out=_temp&id nodupkey;
1101358    by NAME;
1101359    where id=&id and LHS in( %let j=1;
1101360    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
1101361    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
1101362    "&var" %let j = %eval(&j+1);
1101363    %end;
1101364    );
1101365    run;
1101366    %let dsid = %sysfunc(open(_temp&id));
1101367    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1101368    %let dsid = %sysfunc(close(&dsid));
1101369    %if &&nobs&id %then %do;
1101370    %let scoreFlag&id = 1;
1101371    %let fcmpStart = 1;
1101372    %end;
1101373    %else %let fcmpStart = 0;
1101374    %end;
1101375    %else %do;
1101376    proc sort data=&fcmpdata out=_tempid;
1101377    where id=&id;
1101378    by LHS;
1101379    run;
1101380    %let dsid = %sysfunc(open(_tempid));
1101381    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1101382    %let dsid = %sysfunc(close(&dsid));
1101383    %if ^&&nobs&id %then %do;
1101384    proc datasets lib=work nolist;
1101385    delete _tempid;
1101386    run;
1101387    quit;
1101388    %end;
1101389    %else %do;
1101390    data _tempAll;
1101391    set %let j=%eval(&id-1);
1101392    %do x=1 %to &j;
1101393    %if &&nobs&x %then %do;
1101394    _temp&x %end;
1101395    %end;
1101396    ;
1101397    run;
1101398    proc sql;
1101399    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
1101399  ! work._tempid p2 where p.name=p2.lhs;
1101400    quit;
1101401    data _temp&id;
1101402    set _temp&id;
1101403    where LHS ne '' and NAME ne '' and Node ne '';
1101404    run;
1101405    proc datasets lib=work nolist;
1101406    delete _tempAll;
1101407    run;
1101408    %let dsid = %sysfunc(open(_temp&id));
1101409    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1101410    %let dsid = %sysfunc(close(&dsid));
1101411    %if ^&&nobs&id %then %do;
1101412    proc datasets lib=work nolist;
1101413    delete _temp&id;
1101414    run;
1101415    quit;
1101416    %end;
1101417    %else %do;
1101418    %let scoreFlag&id = 1;
1101419    data _temp&id;
1101420    set _temp&id;
1101421    where LHS ne NAME and node ne '';
1101422    run;
1101423    %let dsid = %sysfunc(open(_temp&id));
1101424    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1101425    %let dsid = %sysfunc(close(&dsid));
1101426    %if ^&&nobs&id %then %do;
1101427    proc datasets lib=work nolist;
1101428    delete _temp&id;
1101429    run;
1101430    quit;
1101431    %end;
1101432    %else %do;
1101433    proc sort data=_temp&id nodupkey;
1101434    by LHS NAME;
1101435    run;
1101436    %end;
1101437    %end;
1101438    %end;
1101439    %end;
1101440    %mend varDept;
1101441    %macro optCode(outdata=fcmpdata);
1101442    %global fcmpStart;
1101443    %let fcmpStart = 0;
1101444    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
1101445    %let NumNodes=9;
1101446    %do k=1 %to &NumNodes;
1101447    %vardept(fcmpdata=&outdata, id=&k);
1101448    %end;
1101449    %mend optCode;
1101450    %optcode(outData=EMWS8.Ensmbl12_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl12_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL12_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl12_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 106 observations read from the data set EMWS8.ENSMBL12_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 79 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 27 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl12_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL12_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl12_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL12_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl12_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL12_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 27 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 2 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl12_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL12_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 29 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 39 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl12_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL12_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 68 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl12_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL12_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl12_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL12_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

1101451    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
1101452    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1101453    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
1101454    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1101455    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
1101456    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1101457    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
1101458    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1101459    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1101460    create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
1101460  ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 2 rows and 3 columns.

1101461    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1101462    data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
1101463    set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
1101464    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 2 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 2 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1101465    filename _pref
1101465  ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural37\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural37\EMPUBLISHSCORE.sas";
1101466    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1101467    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Neural37\EMPUBLISHSCORE.sas.
1101468   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1101469   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1101470   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1101471   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1101472   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1101473   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1101474   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1101475   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1101476   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1101477   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1101478   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1101479   +LENGTH _WARN_ $4
1101480   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
1101481   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1101482   +
1101483   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1101484   +
1101485   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1101486   +
1101487   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1101488   +
1101489   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1101490   +
1101491   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1101492   +
1101493   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1101494   +
1101495   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1101496   +
1101497   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1101498   +
1101499   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1101500   +
1101501   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1101502   +
1101503   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1101504   +
1101505   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1101506   +
1101507   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1101508   +
1101509   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1101510   +
1101511   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1101512   +
1101513   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1101514   +
1101515   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1101516   +
1101517   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1101518   +
1101519   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1101520   +
1101521   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1101522   +
1101523   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1101524   +
1101525   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1101526   +
1101527   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1101528   +
1101529   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1101530   +
1101531   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1101532   +
1101533   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1101534   +
1101535   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1101536   +
1101537   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1101538   +
1101539   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1101540   +
1101541   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1101542   +
1101543   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1101544   +
1101545   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1101546   +
1101547   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1101548   +
1101549   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1101550   +
1101551   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1101552   +
1101553   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1101554   +
1101555   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1101556   +
1101557   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1101558   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1101559   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1101560   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1101561   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1101562   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1101563   +end;
MPRINT(EM_DIAGRAM):   end;
1101564   +else do;
MPRINT(EM_DIAGRAM):   else do;
1101565   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1101566   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1101567   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1101568   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1101569   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1101570   +   end;
MPRINT(EM_DIAGRAM):   end;
1101571   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1101572   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1101573   +   end;
MPRINT(EM_DIAGRAM):   end;
1101574   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1101575   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1101576   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1101577   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1101578   +   end;
MPRINT(EM_DIAGRAM):   end;
1101579   +end;
MPRINT(EM_DIAGRAM):   end;
1101580   +
1101581   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1101582   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1101583   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1101584   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1101585   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1101586   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1101587   +end;
MPRINT(EM_DIAGRAM):   end;
1101588   +else do;
MPRINT(EM_DIAGRAM):   else do;
1101589   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1101590   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1101591   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1101592   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1101593   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1101594   +   end;
MPRINT(EM_DIAGRAM):   end;
1101595   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1101596   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1101597   +   end;
MPRINT(EM_DIAGRAM):   end;
1101598   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1101599   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1101600   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1101601   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1101602   +   end;
MPRINT(EM_DIAGRAM):   end;
1101603   +end;
MPRINT(EM_DIAGRAM):   end;
1101604   +
1101605   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1101606   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1101607   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1101608   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1101609   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1101610   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1101611   +end;
MPRINT(EM_DIAGRAM):   end;
1101612   +else do;
MPRINT(EM_DIAGRAM):   else do;
1101613   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1101614   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1101615   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1101616   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1101617   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1101618   +   end;
MPRINT(EM_DIAGRAM):   end;
1101619   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1101620   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1101621   +   end;
MPRINT(EM_DIAGRAM):   end;
1101622   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1101623   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1101624   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1101625   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1101626   +   end;
MPRINT(EM_DIAGRAM):   end;
1101627   +end;
MPRINT(EM_DIAGRAM):   end;
1101628   +
1101629   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1101630   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1101631   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1101632   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1101633   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1101634   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1101635   +end;
MPRINT(EM_DIAGRAM):   end;
1101636   +else do;
MPRINT(EM_DIAGRAM):   else do;
1101637   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1101638   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1101639   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1101640   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1101641   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1101642   +   end;
MPRINT(EM_DIAGRAM):   end;
1101643   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1101644   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1101645   +   end;
MPRINT(EM_DIAGRAM):   end;
1101646   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1101647   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1101648   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1101649   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1101650   +   end;
MPRINT(EM_DIAGRAM):   end;
1101651   +end;
MPRINT(EM_DIAGRAM):   end;
1101652   +
1101653   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1101654   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1101655   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1101656   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1101657   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1101658   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1101659   +end;
MPRINT(EM_DIAGRAM):   end;
1101660   +else do;
MPRINT(EM_DIAGRAM):   else do;
1101661   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1101662   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1101663   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1101664   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1101665   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1101666   +   end;
MPRINT(EM_DIAGRAM):   end;
1101667   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1101668   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1101669   +   end;
MPRINT(EM_DIAGRAM):   end;
1101670   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1101671   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1101672   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1101673   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1101674   +   end;
MPRINT(EM_DIAGRAM):   end;
1101675   +end;
MPRINT(EM_DIAGRAM):   end;
1101676   +
1101677   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1101678   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1101679   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1101680   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1101681   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1101682   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1101683   +end;
MPRINT(EM_DIAGRAM):   end;
1101684   +else do;
MPRINT(EM_DIAGRAM):   else do;
1101685   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1101686   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1101687   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1101688   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1101689   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1101690   +   end;
MPRINT(EM_DIAGRAM):   end;
1101691   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1101692   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1101693   +   end;
MPRINT(EM_DIAGRAM):   end;
1101694   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1101695   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1101696   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1101697   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1101698   +   end;
MPRINT(EM_DIAGRAM):   end;
1101699   +end;
MPRINT(EM_DIAGRAM):   end;
1101700   +
1101701   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1101702   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1101703   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1101704   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1101705   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1101706   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1101707   +end;
MPRINT(EM_DIAGRAM):   end;
1101708   +else do;
MPRINT(EM_DIAGRAM):   else do;
1101709   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1101710   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1101711   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1101712   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1101713   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1101714   +   end;
MPRINT(EM_DIAGRAM):   end;
1101715   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1101716   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1101717   +   end;
MPRINT(EM_DIAGRAM):   end;
1101718   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1101719   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1101720   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1101721   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1101722   +   end;
MPRINT(EM_DIAGRAM):   end;
1101723   +end;
MPRINT(EM_DIAGRAM):   end;
1101724   +
1101725   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1101726   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
1101727   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1101728   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1101729   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1101730   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1101731   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1101732   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1101733   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1101734   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1101735   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1101736   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1101737   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1101738   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1101739   +end;
MPRINT(EM_DIAGRAM):   end;
1101740   +else do;
MPRINT(EM_DIAGRAM):   else do;
1101741   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1101742   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1101743   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1101744   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1101745   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1101746   +   end;
MPRINT(EM_DIAGRAM):   end;
1101747   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1101748   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1101749   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1101750   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1101751   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1101752   +   end;
MPRINT(EM_DIAGRAM):   end;
1101753   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1101754   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1101755   +   end;
MPRINT(EM_DIAGRAM):   end;
1101756   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1101757   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1101758   +   end;
MPRINT(EM_DIAGRAM):   end;
1101759   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1101760   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1101761   +   end;
MPRINT(EM_DIAGRAM):   end;
1101762   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1101763   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1101764   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1101765   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1101766   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1101767   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1101768   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1101769   +   end;
MPRINT(EM_DIAGRAM):   end;
1101770   +end;
MPRINT(EM_DIAGRAM):   end;
1101771   +
1101772   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1101773   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1101774   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
1101775   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1101776   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1101777   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1101778   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1101779   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1101780   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1101781   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1101782   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1101783   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1101784   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1101785   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1101786   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1101787   +end;
MPRINT(EM_DIAGRAM):   end;
1101788   +else do;
MPRINT(EM_DIAGRAM):   else do;
1101789   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1101790   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1101791   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1101792   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1101793   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1101794   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1101795   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1101796   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1101797   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1101798   +         end;
MPRINT(EM_DIAGRAM):   end;
1101799   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1101800   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1101801   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1101802   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1101803   +            end;
MPRINT(EM_DIAGRAM):   end;
1101804   +         end;
MPRINT(EM_DIAGRAM):   end;
1101805   +      end;
MPRINT(EM_DIAGRAM):   end;
1101806   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1101807   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1101808   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1101809   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1101810   +         end;
MPRINT(EM_DIAGRAM):   end;
1101811   +      end;
MPRINT(EM_DIAGRAM):   end;
1101812   +   end;
MPRINT(EM_DIAGRAM):   end;
1101813   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1101814   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1101815   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1101816   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1101817   +      end;
MPRINT(EM_DIAGRAM):   end;
1101818   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1101819   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1101820   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1101821   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1101822   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1101823   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1101824   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1101825   +         end;
MPRINT(EM_DIAGRAM):   end;
1101826   +      end;
MPRINT(EM_DIAGRAM):   end;
1101827   +   end;
MPRINT(EM_DIAGRAM):   end;
1101828   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1101829   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1101830   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1101831   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1101832   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1101833   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1101834   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1101835   +   end;
MPRINT(EM_DIAGRAM):   end;
1101836   +end;
MPRINT(EM_DIAGRAM):   end;
1101837   +
1101838   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1101839   +*** Checking missing input Interval
1101840   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1101841   +
1101842   +IF NMISS(
1101843   +   AcceptedCmpTotal ,
1101844   +   Age ,
1101845   +   Frq ,
1101846   +   Income ,
1101847   +   Kidhome ,
1101848   +   MntFishProducts ,
1101849   +   MntFruits ,
1101850   +   MntGoldProds ,
1101851   +   MntSweetProducts ,
1101852   +   MonthsAsCustomer ,
1101853   +   NumDealsPurchases ,
1101854   +   NumWebVisitsMonth ,
1101855   +   RFMstat ,
1101856   +   RMntFrq ,
1101857   +   Recency ,
1101858   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , 
MntFishProducts , MntFruits , MntGoldProds , MntSweetProducts , MonthsAsCustomer , 
NumDealsPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , Teenhome ) THEN DO;
1101859   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1101860   +
1101861   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1101862   +END;
MPRINT(EM_DIAGRAM):   END;
1101863   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1101864   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1101865   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1101866   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1101867   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1101868   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1101869   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1101870   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1101871   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1101872   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1101873   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1101874   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1101875   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1101876   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1101877   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1101878   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1101879   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1101880   +   S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
1101881   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
1101882   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1101883   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1101884   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1101885   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1101886   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1101887   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1101888   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1101889   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1101890   +END;
MPRINT(EM_DIAGRAM):   END;
1101891   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1101892   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1101893   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1101894   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1101895   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1101896   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1101897   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1101898   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1101899   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1101900   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1101901   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1101902   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1101903   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1101904   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1101905   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1101906   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1101907   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1101908   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1101909   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1101910   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1101911   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1101912   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1101913   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1101914   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1101915   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1101916   +   ELSE S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
1101917   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
1101918   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1101919   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1101920   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1101921   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1101922   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1101923   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1101924   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1101925   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1101926   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1101927   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1101928   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1101929   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1101930   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1101931   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1101932   +END;
MPRINT(EM_DIAGRAM):   END;
1101933   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1101934   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1101935   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1101936   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1101937   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1101938   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1101939   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1101940   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1101941   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1101942   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1101943   +   H11  =     0.00529231235481 * S_AcceptedCmpTotal  +      0.0343326832257 *
1101944   +        S_Age  +    -0.05203541829299 * S_Frq  +    -0.45089409751085 *
1101945   +        S_Income  +     0.21434017685167 * S_Kidhome
1101946   +          +    -0.00245095061163 * S_MntFishProducts
1101947   +          +     0.05045649639793 * S_MntFruits  +     0.00647541618092 *
1101948   +        S_MntGoldProds  +     0.05644685811145 * S_MntSweetProducts
1101949   +          +     -0.0436897985886 * S_MonthsAsCustomer
1101950   +          +    -0.11066147452589 * S_NumDealsPurchases
1101951   +          +    -0.15815826211613 * S_NumWebVisitsMonth
1101952   +          +    -0.02488895787197 * S_RFMstat  +    -0.07848372303852 *
1101953   +        S_RMntFrq  +     0.44584112602611 * S_Recency
1101954   +          +     0.31802924624272 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.00529231235481 * S_AcceptedCmpTotal + 0.0343326832257 * S_Age + 
-0.05203541829299 * S_Frq + -0.45089409751085 * S_Income + 0.21434017685167 * S_Kidhome + 
-0.00245095061163 * S_MntFishProducts + 0.05045649639793 * S_MntFruits + 0.00647541618092 * 
S_MntGoldProds + 0.05644685811145 * S_MntSweetProducts + -0.0436897985886 * S_MonthsAsCustomer 
+ -0.11066147452589 * S_NumDealsPurchases + -0.15815826211613 * S_NumWebVisitsMonth + 
-0.02488895787197 * S_RFMstat + -0.07848372303852 * S_RMntFrq + 0.44584112602611 * S_Recency + 
0.31802924624272 * S_Teenhome ;
1101955   +   H12  =    -0.10209163274452 * S_AcceptedCmpTotal  +     0.11827354067819 *
1101956   +        S_Age  +     1.40350663058769 * S_Frq  +     0.61315172399898 *
1101957   +        S_Income  +    -0.34676303560555 * S_Kidhome
1101958   +          +    -0.19666313381749 * S_MntFishProducts
1101959   +          +     0.02049419497141 * S_MntFruits  +    -0.20582738219797 *
1101960   +        S_MntGoldProds  +    -0.07237052620156 * S_MntSweetProducts
1101961   +          +     0.11921399006499 * S_MonthsAsCustomer
1101962   +          +    -0.67623098057964 * S_NumDealsPurchases
1101963   +          +    -0.59190965073948 * S_NumWebVisitsMonth
1101964   +          +    -0.20613596895241 * S_RFMstat  +    -0.32007172204835 *
1101965   +        S_RMntFrq  +     0.69616846305831 * S_Recency
1101966   +          +     -0.3023019033387 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -0.10209163274452 * S_AcceptedCmpTotal + 0.11827354067819 * S_Age 
+ 1.40350663058769 * S_Frq + 0.61315172399898 * S_Income + -0.34676303560555 * S_Kidhome + 
-0.19666313381749 * S_MntFishProducts + 0.02049419497141 * S_MntFruits + -0.20582738219797 * 
S_MntGoldProds + -0.07237052620156 * S_MntSweetProducts + 0.11921399006499 * 
S_MonthsAsCustomer + -0.67623098057964 * S_NumDealsPurchases + -0.59190965073948 * 
S_NumWebVisitsMonth + -0.20613596895241 * S_RFMstat + -0.32007172204835 * S_RMntFrq + 
0.69616846305831 * S_Recency + -0.3023019033387 * S_Teenhome ;
1101967   +   H11  = H11  +     0.19876934538613 * AcceptedCmp10
1101968   +          +     0.18951634162327 * AcceptedCmp20  +     0.24251361227823 *
1101969   +        AcceptedCmp30  +     0.16680588614581 * AcceptedCmp40
1101970   +          +     0.15217121708385 * AcceptedCmp50  +    -0.06185934853348 *
1101971   +        Complain0  +    -0.02156128066423 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.19876934538613 * AcceptedCmp10 + 0.18951634162327 * 
AcceptedCmp20 + 0.24251361227823 * AcceptedCmp30 + 0.16680588614581 * AcceptedCmp40 + 
0.15217121708385 * AcceptedCmp50 + -0.06185934853348 * Complain0 + -0.02156128066423 * 
HigherEducationBinary0 ;
1101972   +   H12  = H12  +     0.42936838873103 * AcceptedCmp10
1101973   +          +     0.31531206230129 * AcceptedCmp20  +     0.61595858080275 *
1101974   +        AcceptedCmp30  +    -0.02848071087974 * AcceptedCmp40
1101975   +          +     0.26463885464849 * AcceptedCmp50  +    -0.25408897937456 *
1101976   +        Complain0  +     0.37165308117925 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.42936838873103 * AcceptedCmp10 + 0.31531206230129 * 
AcceptedCmp20 + 0.61595858080275 * AcceptedCmp30 + -0.02848071087974 * AcceptedCmp40 + 
0.26463885464849 * AcceptedCmp50 + -0.25408897937456 * Complain0 + 0.37165308117925 * 
HigherEducationBinary0 ;
1101977   +   H11  = H11  +    -0.06004623502296 * Education2n_Cycle
1101978   +          +    -0.14055981460472 * EducationBasic  +    -0.02226325005028 *
1101979   +        EducationGraduation  +     0.17382426297237 * EducationMaster
1101980   +          +    -0.09599098826432 * Marital_StatusDivorced
1101981   +          +     0.29380773989654 * Marital_StatusMarried
1101982   +          +    -0.24344588832351 * Marital_StatusSingle
1101983   +          +     0.26861619886367 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.06004623502296 * Education2n_Cycle + -0.14055981460472 * 
EducationBasic + -0.02226325005028 * EducationGraduation + 0.17382426297237 * EducationMaster 
+ -0.09599098826432 * Marital_StatusDivorced + 0.29380773989654 * Marital_StatusMarried + 
-0.24344588832351 * Marital_StatusSingle + 0.26861619886367 * Marital_StatusTogether ;
1101984   +   H12  = H12  +    -0.05553559517027 * Education2n_Cycle
1101985   +          +     0.10110187812592 * EducationBasic  +    -0.01454720780814 *
1101986   +        EducationGraduation  +    -0.23207789950977 * EducationMaster
1101987   +          +    -0.18210246138549 * Marital_StatusDivorced
1101988   +          +    -0.33707503901978 * Marital_StatusMarried
1101989   +          +     0.45975144433549 * Marital_StatusSingle
1101990   +          +    -0.30223475265715 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.05553559517027 * Education2n_Cycle + 0.10110187812592 * 
EducationBasic + -0.01454720780814 * EducationGraduation + -0.23207789950977 * EducationMaster 
+ -0.18210246138549 * Marital_StatusDivorced + -0.33707503901978 * Marital_StatusMarried + 
0.45975144433549 * Marital_StatusSingle + -0.30223475265715 * Marital_StatusTogether ;
1101991   +   H11  =    -0.01761609034495 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -0.01761609034495 + H11 ;
1101992   +   H12  =     1.54520059814945 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 1.54520059814945 + H12 ;
1101993   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1101994   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1101995   +END;
MPRINT(EM_DIAGRAM):   END;
1101996   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1101997   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1101998   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1101999   +END;
MPRINT(EM_DIAGRAM):   END;
1102000   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1102001   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1102002   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1102003   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1102004   +   P_DepVar1  =    -5.00819716007083 * H11  +    -2.90644970096905 * H12 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -5.00819716007083 * H11 + -2.90644970096905 * H12 ;
1102005   +   P_DepVar1  =     0.91635286006129 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.91635286006129 + P_DepVar1 ;
1102006   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1102007   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1102008   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1102009   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1102010   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1102011   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1102012   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1102013   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1102014   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1102015   +END;
MPRINT(EM_DIAGRAM):   END;
1102016   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1102017   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1102018   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1102019   +END;
MPRINT(EM_DIAGRAM):   END;
1102020   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1102021   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1102022   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1102023   +END;
MPRINT(EM_DIAGRAM):   END;
1102024   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1102025   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1102026   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1102027   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1102028   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1102029   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1102030   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1102031   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1102032   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1102033   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1102034   +END;
MPRINT(EM_DIAGRAM):   END;
1102035   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1102036   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1102037   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1102038   +drop
1102039   +H11
1102040   +H12
1102041   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 ;
1102042   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1102043    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1102044    quit;
1102045    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1102046    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1102047    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1102048    retain ID 2 Node "Neural37";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Neural37";
1102049    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1102050    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1599 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 1599 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1102051    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1102052    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1102053    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1599 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 1599 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1102054    proc sort data=EMWS8.Neural37_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Neural37_variableset out=_temp2(keep=NAME CREATOR);
1102055    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1102056    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.NEURAL37_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1102057    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1102058    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1102059    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1102060    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1102061    proc contents data=EMWS8.Neural37_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Neural37_train out=_meta(keep=NAME) noprint;
1102062    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

1102063    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1102064    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1102065    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 53 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1102066    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1102067    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1102068    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1102069    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 53 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1102070    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1102071    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1102071  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 887 rows and 5 columns.

1102072    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1102073    proc append base=EMWS8.Ensmbl12_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl12_FCMP data=_tempx;
1102074    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL12_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 887 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL12_FCMP has 887 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1102075    filename _pref
1102075  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
1102076    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1102077    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
1102078   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1102079   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1102080   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1102081   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1102082   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1102083   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1102084    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1102085    quit;
1102086    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1102087    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1102088    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1102089    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
1102090    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1102091    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1102092    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1102093    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1102094    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1102095    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
1102096    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1102097    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1102098    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1102099    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1102100    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1102101    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1102102    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
1102103    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

1102104    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1102105    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1102106    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1102107    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1102108    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1102109    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1102110    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1102111    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1102112    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1102112  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

1102113    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1102114    proc append base=EMWS8.Ensmbl12_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl12_FCMP data=_tempx;
1102115    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL12_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL12_FCMP has 891 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1102116    filename _pref
1102116  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
1102117    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1102118    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
1102119   +
1102120   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1102121   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1102121  !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1102122   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1102123   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1102124   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1102125   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1102126   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1102127    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1102128    quit;
1102129    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1102130    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1102131    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1102132    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
1102133    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1102134    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1102135    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1102136    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1102137    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1102138    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
1102139    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1102140    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1102141    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1102142    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1102143    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1102144    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1102145    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
1102146    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1102147    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1102148    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1102149    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1102150    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1102151    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1102152    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1102153    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1102154    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1102155    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1102155  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

1102156    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1102157    proc append base=EMWS8.Ensmbl12_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl12_FCMP data=_tempx;
1102158    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL12_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL12_FCMP has 930 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1102159    filename _pref
1102159  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
1102160    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1102161    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
1102162   +
1102163   +
1102164   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
1102165   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
1102166   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
1102167   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
1102168   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
1102169   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1102170   +
1102171   +
1102172   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
1102173   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
1102174   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
1102175   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
1102176   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
1102177   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1102178   +
1102179   +
1102180   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
1102181   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
1102182   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
1102183   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
1102184   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
1102185   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1102186   +
1102187   +
1102188   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
1102189   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
1102190   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
1102191   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
1102192   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
1102193   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1102194   +
1102195   +
1102196   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
1102197   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
1102198   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
1102199   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
1102200   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
1102201   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1102202   +
1102203   +
1102204   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
1102205   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
1102206   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
1102207   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
1102208   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
1102209   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1102210   +
1102211   +
1102212   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
1102213   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
1102214   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
1102215   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
1102216   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
1102217   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1102218   +
1102219   +
1102220   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
1102221   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
1102222   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
1102223   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
1102224   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
1102225   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1102226   +if
1102227   +_FILTERNORM1 not in ( '.')
1102228   + and
1102229   +_FILTERNORM2 not in ( '.')
1102230   + and
1102231   +_FILTERNORM3 not in ( '.')
1102232   + and
1102233   +_FILTERNORM4 not in ( '.')
1102234   + and
1102235   +_FILTERNORM5 not in ( '.')
1102236   + and
1102237   +_FILTERNORM6 not in ( '.')
1102238   + and
1102239   +_FILTERNORM7 not in ( ' ')
1102240   + and
1102241   +_FILTERNORM8 not in ( ' ')
1102242   +and
1102243   +( Dt_Customer ne .)
1102244   +and ( Income ne . and (Income<=107000))
1102245   +and ( Kidhome ne .)
1102246   +and ( MntFishProducts ne .)
1102247   +and ( MntFruits ne .)
1102248   +and ( MntGoldProds ne .)
1102249   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
1102250   +and ( MntSweetProducts ne .)
1102251   +and ( MntWines ne .)
1102252   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
1102253   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
1102254   +and ( NumStorePurchases ne .)
1102255   +and ( NumWebPurchases ne .)
1102256   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
1102257   +and ( Recency ne .)
1102258   +and ( Teenhome ne .)
1102259   +and ( Year_Birth ne .)
1102260   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
1102261   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
1102262   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
1102263   +end;
MPRINT(EM_DIAGRAM):   end;
1102264   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
1102265   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1102266    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1102267    quit;
1102268    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1102269    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1102270    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1102271    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
1102272    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1102273    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1102274    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1102275    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1102276    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1102277    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
1102278    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1102279    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1102280    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1102281    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1102282    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1102283    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1102284    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
1102285    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

1102286    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1102287    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1102288    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1102289    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1102290    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1102291    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1102292    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1102293    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1102294    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1102294  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

1102295    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1102296    proc append base=EMWS8.Ensmbl12_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl12_FCMP data=_tempx;
1102297    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL12_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL12_FCMP has 996 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1102298    %macro varDept(fcmpdata=,id=);
1102299    %global nobs&id scoreFlag&id;
1102300    %let scoreFlag&id = 0;
1102301    %if &id=1 or ^&fcmpStart %then %do;
1102302    proc sort data=&fcmpdata out=_temp&id nodupkey;
1102303    by NAME;
1102304    where id=&id and LHS in( %let j=1;
1102305    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
1102306    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
1102307    "&var" %let j = %eval(&j+1);
1102308    %end;
1102309    );
1102310    run;
1102311    %let dsid = %sysfunc(open(_temp&id));
1102312    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1102313    %let dsid = %sysfunc(close(&dsid));
1102314    %if &&nobs&id %then %do;
1102315    %let scoreFlag&id = 1;
1102316    %let fcmpStart = 1;
1102317    %end;
1102318    %else %let fcmpStart = 0;
1102319    %end;
1102320    %else %do;
1102321    proc sort data=&fcmpdata out=_tempid;
1102322    where id=&id;
1102323    by LHS;
1102324    run;
1102325    %let dsid = %sysfunc(open(_tempid));
1102326    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1102327    %let dsid = %sysfunc(close(&dsid));
1102328    %if ^&&nobs&id %then %do;
1102329    proc datasets lib=work nolist;
1102330    delete _tempid;
1102331    run;
1102332    quit;
1102333    %end;
1102334    %else %do;
1102335    data _tempAll;
1102336    set %let j=%eval(&id-1);
1102337    %do x=1 %to &j;
1102338    %if &&nobs&x %then %do;
1102339    _temp&x %end;
1102340    %end;
1102341    ;
1102342    run;
1102343    proc sql;
1102344    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
1102344  ! work._tempid p2 where p.name=p2.lhs;
1102345    quit;
1102346    data _temp&id;
1102347    set _temp&id;
1102348    where LHS ne '' and NAME ne '' and Node ne '';
1102349    run;
1102350    proc datasets lib=work nolist;
1102351    delete _tempAll;
1102352    run;
1102353    %let dsid = %sysfunc(open(_temp&id));
1102354    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1102355    %let dsid = %sysfunc(close(&dsid));
1102356    %if ^&&nobs&id %then %do;
1102357    proc datasets lib=work nolist;
1102358    delete _temp&id;
1102359    run;
1102360    quit;
1102361    %end;
1102362    %else %do;
1102363    %let scoreFlag&id = 1;
1102364    data _temp&id;
1102365    set _temp&id;
1102366    where LHS ne NAME and node ne '';
1102367    run;
1102368    %let dsid = %sysfunc(open(_temp&id));
1102369    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1102370    %let dsid = %sysfunc(close(&dsid));
1102371    %if ^&&nobs&id %then %do;
1102372    proc datasets lib=work nolist;
1102373    delete _temp&id;
1102374    run;
1102375    quit;
1102376    %end;
1102377    %else %do;
1102378    proc sort data=_temp&id nodupkey;
1102379    by LHS NAME;
1102380    run;
1102381    %end;
1102382    %end;
1102383    %end;
1102384    %end;
1102385    %mend varDept;
1102386    %macro optCode(outdata=fcmpdata);
1102387    %global fcmpStart;
1102388    %let fcmpStart = 0;
1102389    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
1102390    %let NumNodes=9;
1102391    %do k=1 %to &NumNodes;
1102392    %vardept(fcmpdata=&outdata, id=&k);
1102393    %end;
1102394    %mend optCode;
1102395    %optcode(outData=EMWS8.Ensmbl12_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl12_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL12_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl12_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 106 observations read from the data set EMWS8.ENSMBL12_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 79 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 27 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl12_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL12_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl12_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL12_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl12_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL12_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 27 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 2 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl12_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL12_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 29 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 33 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 33 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 33 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 33 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl12_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL12_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: There were 33 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 62 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl12_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL12_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl12_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL12_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

1102396    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
1102397    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1102398    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
1102399    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1102400    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
1102401    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1102402    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
1102403    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1102404    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1102405    create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
1102405  ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 2 rows and 3 columns.

1102406    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1102407    data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
1102408    set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
1102409    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 2 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 2 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1102410    filename _pref
1102410  ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural38\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural38\EMPUBLISHSCORE.sas";
1102411    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1102412    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Neural38\EMPUBLISHSCORE.sas.
1102413   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1102414   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1102415   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1102416   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1102417   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1102418   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1102419   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1102420   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1102421   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1102422   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1102423   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1102424   +LENGTH _WARN_ $4
1102425   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
1102426   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1102427   +
1102428   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1102429   +
1102430   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1102431   +
1102432   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1102433   +
1102434   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1102435   +
1102436   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1102437   +
1102438   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1102439   +
1102440   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1102441   +
1102442   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1102443   +
1102444   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1102445   +
1102446   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1102447   +
1102448   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1102449   +
1102450   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1102451   +
1102452   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1102453   +
1102454   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1102455   +
1102456   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1102457   +
1102458   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1102459   +
1102460   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1102461   +
1102462   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1102463   +
1102464   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1102465   +
1102466   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1102467   +
1102468   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1102469   +
1102470   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1102471   +
1102472   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1102473   +
1102474   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1102475   +
1102476   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1102477   +
1102478   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1102479   +
1102480   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1102481   +
1102482   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1102483   +
1102484   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1102485   +
1102486   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1102487   +
1102488   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1102489   +
1102490   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1102491   +
1102492   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1102493   +
1102494   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1102495   +
1102496   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1102497   +
1102498   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1102499   +
1102500   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1102501   +
1102502   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1102503   +
1102504   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1102505   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1102506   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1102507   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1102508   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1102509   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1102510   +end;
MPRINT(EM_DIAGRAM):   end;
1102511   +else do;
MPRINT(EM_DIAGRAM):   else do;
1102512   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1102513   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1102514   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1102515   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1102516   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1102517   +   end;
MPRINT(EM_DIAGRAM):   end;
1102518   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1102519   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1102520   +   end;
MPRINT(EM_DIAGRAM):   end;
1102521   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1102522   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1102523   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1102524   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1102525   +   end;
MPRINT(EM_DIAGRAM):   end;
1102526   +end;
MPRINT(EM_DIAGRAM):   end;
1102527   +
1102528   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1102529   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1102530   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1102531   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1102532   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1102533   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1102534   +end;
MPRINT(EM_DIAGRAM):   end;
1102535   +else do;
MPRINT(EM_DIAGRAM):   else do;
1102536   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1102537   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1102538   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1102539   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1102540   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1102541   +   end;
MPRINT(EM_DIAGRAM):   end;
1102542   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1102543   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1102544   +   end;
MPRINT(EM_DIAGRAM):   end;
1102545   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1102546   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1102547   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1102548   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1102549   +   end;
MPRINT(EM_DIAGRAM):   end;
1102550   +end;
MPRINT(EM_DIAGRAM):   end;
1102551   +
1102552   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1102553   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1102554   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1102555   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1102556   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1102557   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1102558   +end;
MPRINT(EM_DIAGRAM):   end;
1102559   +else do;
MPRINT(EM_DIAGRAM):   else do;
1102560   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1102561   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1102562   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1102563   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1102564   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1102565   +   end;
MPRINT(EM_DIAGRAM):   end;
1102566   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1102567   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1102568   +   end;
MPRINT(EM_DIAGRAM):   end;
1102569   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1102570   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1102571   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1102572   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1102573   +   end;
MPRINT(EM_DIAGRAM):   end;
1102574   +end;
MPRINT(EM_DIAGRAM):   end;
1102575   +
1102576   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1102577   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1102578   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1102579   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1102580   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1102581   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1102582   +end;
MPRINT(EM_DIAGRAM):   end;
1102583   +else do;
MPRINT(EM_DIAGRAM):   else do;
1102584   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1102585   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1102586   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1102587   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1102588   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1102589   +   end;
MPRINT(EM_DIAGRAM):   end;
1102590   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1102591   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1102592   +   end;
MPRINT(EM_DIAGRAM):   end;
1102593   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1102594   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1102595   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1102596   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1102597   +   end;
MPRINT(EM_DIAGRAM):   end;
1102598   +end;
MPRINT(EM_DIAGRAM):   end;
1102599   +
1102600   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1102601   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1102602   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1102603   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1102604   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1102605   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1102606   +end;
MPRINT(EM_DIAGRAM):   end;
1102607   +else do;
MPRINT(EM_DIAGRAM):   else do;
1102608   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1102609   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1102610   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1102611   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1102612   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1102613   +   end;
MPRINT(EM_DIAGRAM):   end;
1102614   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1102615   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1102616   +   end;
MPRINT(EM_DIAGRAM):   end;
1102617   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1102618   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1102619   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1102620   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1102621   +   end;
MPRINT(EM_DIAGRAM):   end;
1102622   +end;
MPRINT(EM_DIAGRAM):   end;
1102623   +
1102624   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1102625   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1102626   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1102627   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1102628   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1102629   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1102630   +end;
MPRINT(EM_DIAGRAM):   end;
1102631   +else do;
MPRINT(EM_DIAGRAM):   else do;
1102632   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1102633   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1102634   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1102635   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1102636   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1102637   +   end;
MPRINT(EM_DIAGRAM):   end;
1102638   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1102639   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1102640   +   end;
MPRINT(EM_DIAGRAM):   end;
1102641   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1102642   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1102643   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1102644   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1102645   +   end;
MPRINT(EM_DIAGRAM):   end;
1102646   +end;
MPRINT(EM_DIAGRAM):   end;
1102647   +
1102648   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1102649   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1102650   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1102651   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1102652   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1102653   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1102654   +end;
MPRINT(EM_DIAGRAM):   end;
1102655   +else do;
MPRINT(EM_DIAGRAM):   else do;
1102656   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1102657   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1102658   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1102659   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1102660   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1102661   +   end;
MPRINT(EM_DIAGRAM):   end;
1102662   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1102663   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1102664   +   end;
MPRINT(EM_DIAGRAM):   end;
1102665   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1102666   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1102667   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1102668   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1102669   +   end;
MPRINT(EM_DIAGRAM):   end;
1102670   +end;
MPRINT(EM_DIAGRAM):   end;
1102671   +
1102672   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1102673   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
1102674   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1102675   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1102676   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1102677   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1102678   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1102679   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1102680   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1102681   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1102682   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1102683   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1102684   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1102685   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1102686   +end;
MPRINT(EM_DIAGRAM):   end;
1102687   +else do;
MPRINT(EM_DIAGRAM):   else do;
1102688   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1102689   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1102690   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1102691   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1102692   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1102693   +   end;
MPRINT(EM_DIAGRAM):   end;
1102694   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1102695   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1102696   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1102697   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1102698   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1102699   +   end;
MPRINT(EM_DIAGRAM):   end;
1102700   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1102701   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1102702   +   end;
MPRINT(EM_DIAGRAM):   end;
1102703   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1102704   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1102705   +   end;
MPRINT(EM_DIAGRAM):   end;
1102706   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1102707   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1102708   +   end;
MPRINT(EM_DIAGRAM):   end;
1102709   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1102710   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1102711   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1102712   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1102713   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1102714   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1102715   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1102716   +   end;
MPRINT(EM_DIAGRAM):   end;
1102717   +end;
MPRINT(EM_DIAGRAM):   end;
1102718   +
1102719   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1102720   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1102721   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
1102722   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1102723   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1102724   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1102725   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1102726   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1102727   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1102728   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1102729   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1102730   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1102731   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1102732   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1102733   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1102734   +end;
MPRINT(EM_DIAGRAM):   end;
1102735   +else do;
MPRINT(EM_DIAGRAM):   else do;
1102736   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1102737   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1102738   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1102739   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1102740   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1102741   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1102742   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1102743   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1102744   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1102745   +         end;
MPRINT(EM_DIAGRAM):   end;
1102746   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1102747   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1102748   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1102749   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1102750   +            end;
MPRINT(EM_DIAGRAM):   end;
1102751   +         end;
MPRINT(EM_DIAGRAM):   end;
1102752   +      end;
MPRINT(EM_DIAGRAM):   end;
1102753   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1102754   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1102755   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1102756   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1102757   +         end;
MPRINT(EM_DIAGRAM):   end;
1102758   +      end;
MPRINT(EM_DIAGRAM):   end;
1102759   +   end;
MPRINT(EM_DIAGRAM):   end;
1102760   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1102761   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1102762   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1102763   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1102764   +      end;
MPRINT(EM_DIAGRAM):   end;
1102765   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1102766   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1102767   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1102768   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1102769   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1102770   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1102771   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1102772   +         end;
MPRINT(EM_DIAGRAM):   end;
1102773   +      end;
MPRINT(EM_DIAGRAM):   end;
1102774   +   end;
MPRINT(EM_DIAGRAM):   end;
1102775   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1102776   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1102777   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1102778   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1102779   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1102780   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1102781   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1102782   +   end;
MPRINT(EM_DIAGRAM):   end;
1102783   +end;
MPRINT(EM_DIAGRAM):   end;
1102784   +
1102785   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1102786   +*** Checking missing input Interval
1102787   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1102788   +
1102789   +IF NMISS(
1102790   +   AcceptedCmpTotal ,
1102791   +   Age ,
1102792   +   Frq ,
1102793   +   Income ,
1102794   +   Kidhome ,
1102795   +   MntFishProducts ,
1102796   +   MntFruits ,
1102797   +   MntGoldProds ,
1102798   +   MntSweetProducts ,
1102799   +   MonthsAsCustomer ,
1102800   +   NumDealsPurchases ,
1102801   +   NumWebVisitsMonth ,
1102802   +   RFMstat ,
1102803   +   RMntFrq ,
1102804   +   Recency ,
1102805   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , 
MntFishProducts , MntFruits , MntGoldProds , MntSweetProducts , MonthsAsCustomer , 
NumDealsPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , Teenhome ) THEN DO;
1102806   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1102807   +
1102808   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1102809   +END;
MPRINT(EM_DIAGRAM):   END;
1102810   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1102811   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1102812   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1102813   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1102814   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1102815   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1102816   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1102817   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1102818   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1102819   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1102820   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1102821   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1102822   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1102823   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1102824   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1102825   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1102826   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1102827   +   S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
1102828   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
1102829   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1102830   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1102831   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1102832   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1102833   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1102834   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1102835   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1102836   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1102837   +END;
MPRINT(EM_DIAGRAM):   END;
1102838   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1102839   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1102840   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1102841   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1102842   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1102843   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1102844   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1102845   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1102846   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1102847   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1102848   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1102849   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1102850   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1102851   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1102852   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1102853   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1102854   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1102855   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1102856   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1102857   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1102858   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1102859   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1102860   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1102861   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1102862   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1102863   +   ELSE S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
1102864   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
1102865   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1102866   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1102867   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1102868   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1102869   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1102870   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1102871   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1102872   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1102873   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1102874   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1102875   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1102876   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1102877   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1102878   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1102879   +END;
MPRINT(EM_DIAGRAM):   END;
1102880   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1102881   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1102882   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1102883   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1102884   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1102885   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1102886   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1102887   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1102888   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1102889   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1102890   +   H11  =    -0.05939653438507 * S_AcceptedCmpTotal  +    -0.03097621866927 *
1102891   +        S_Age  +     0.38549836561373 * S_Frq  +     0.04529710170514 *
1102892   +        S_Income  +    -0.29829037747286 * S_Kidhome
1102893   +          +    -0.18720823453547 * S_MntFishProducts
1102894   +          +    -0.21050293648727 * S_MntFruits  +    -0.17024743813518 *
1102895   +        S_MntGoldProds  +     0.06568676148572 * S_MntSweetProducts
1102896   +          +    -0.06646294977493 * S_MonthsAsCustomer
1102897   +          +    -0.37026551859537 * S_NumDealsPurchases
1102898   +          +    -0.14222086870703 * S_NumWebVisitsMonth
1102899   +          +    -0.13771028020173 * S_RFMstat  +    -0.18058593739947 *
1102900   +        S_RMntFrq  +     0.16089693413185 * S_Recency
1102901   +          +    -0.09296281260919 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = -0.05939653438507 * S_AcceptedCmpTotal + -0.03097621866927 * S_Age 
+ 0.38549836561373 * S_Frq + 0.04529710170514 * S_Income + -0.29829037747286 * S_Kidhome + 
-0.18720823453547 * S_MntFishProducts + -0.21050293648727 * S_MntFruits + -0.17024743813518 * 
S_MntGoldProds + 0.06568676148572 * S_MntSweetProducts + -0.06646294977493 * 
S_MonthsAsCustomer + -0.37026551859537 * S_NumDealsPurchases + -0.14222086870703 * 
S_NumWebVisitsMonth + -0.13771028020173 * S_RFMstat + -0.18058593739947 * S_RMntFrq + 
0.16089693413185 * S_Recency + -0.09296281260919 * S_Teenhome ;
1102902   +   H12  =    -1.07525876494597 * S_AcceptedCmpTotal  +     0.17274493487957 *
1102903   +        S_Age  +     1.31699360143525 * S_Frq  +      0.8506314580981 *
1102904   +        S_Income  +    -0.83201267605135 * S_Kidhome
1102905   +          +    -0.09483355610222 * S_MntFishProducts
1102906   +          +    -0.31816096382562 * S_MntFruits  +    -0.18054381770991 *
1102907   +        S_MntGoldProds  +     0.05267776627167 * S_MntSweetProducts
1102908   +          +     0.36008195182034 * S_MonthsAsCustomer
1102909   +          +    -0.13663022832818 * S_NumDealsPurchases
1102910   +          +    -0.43055337001488 * S_NumWebVisitsMonth
1102911   +          +    -0.20985567596746 * S_RFMstat  +     0.29271762840275 *
1102912   +        S_RMntFrq  +    -0.13626348763752 * S_Recency
1102913   +          +    -0.85691575464107 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -1.07525876494597 * S_AcceptedCmpTotal + 0.17274493487957 * S_Age 
+ 1.31699360143525 * S_Frq + 0.8506314580981 * S_Income + -0.83201267605135 * S_Kidhome + 
-0.09483355610222 * S_MntFishProducts + -0.31816096382562 * S_MntFruits + -0.18054381770991 * 
S_MntGoldProds + 0.05267776627167 * S_MntSweetProducts + 0.36008195182034 * S_MonthsAsCustomer 
+ -0.13663022832818 * S_NumDealsPurchases + -0.43055337001488 * S_NumWebVisitsMonth + 
-0.20985567596746 * S_RFMstat + 0.29271762840275 * S_RMntFrq + -0.13626348763752 * S_Recency + 
-0.85691575464107 * S_Teenhome ;
1102914   +   H13  =    -0.17967871499719 * S_AcceptedCmpTotal  +      0.1189238919833 *
1102915   +        S_Age  +      0.2812438420035 * S_Frq  +    -0.19278826529363 *
1102916   +        S_Income  +     0.25780281448124 * S_Kidhome
1102917   +          +     0.04440164182166 * S_MntFishProducts
1102918   +          +     0.04221733494133 * S_MntFruits  +     0.00772772044315 *
1102919   +        S_MntGoldProds  +     0.03211863452879 * S_MntSweetProducts
1102920   +          +     0.11601256317603 * S_MonthsAsCustomer
1102921   +          +    -0.06382091961731 * S_NumDealsPurchases
1102922   +          +    -0.31707488359351 * S_NumWebVisitsMonth
1102923   +          +    -0.03315899689257 * S_RFMstat  +      0.1166714754638 *
1102924   +        S_RMntFrq  +     0.39922359779347 * S_Recency
1102925   +          +     0.12723983872652 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = -0.17967871499719 * S_AcceptedCmpTotal + 0.1189238919833 * S_Age + 
0.2812438420035 * S_Frq + -0.19278826529363 * S_Income + 0.25780281448124 * S_Kidhome + 
0.04440164182166 * S_MntFishProducts + 0.04221733494133 * S_MntFruits + 0.00772772044315 * 
S_MntGoldProds + 0.03211863452879 * S_MntSweetProducts + 0.11601256317603 * S_MonthsAsCustomer 
+ -0.06382091961731 * S_NumDealsPurchases + -0.31707488359351 * S_NumWebVisitsMonth + 
-0.03315899689257 * S_RFMstat + 0.1166714754638 * S_RMntFrq + 0.39922359779347 * S_Recency + 
0.12723983872652 * S_Teenhome ;
1102926   +   H11  = H11  +     1.30972442853005 * AcceptedCmp10
1102927   +          +      -0.107725040763 * AcceptedCmp20  +      0.1632298365033 *
1102928   +        AcceptedCmp30  +    -0.04285993483605 * AcceptedCmp40
1102929   +          +     0.27424410998159 * AcceptedCmp50  +     0.13223002478852 *
1102930   +        Complain0  +       0.148007066302 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 1.30972442853005 * AcceptedCmp10 + -0.107725040763 * 
AcceptedCmp20 + 0.1632298365033 * AcceptedCmp30 + -0.04285993483605 * AcceptedCmp40 + 
0.27424410998159 * AcceptedCmp50 + 0.13223002478852 * Complain0 + 0.148007066302 * 
HigherEducationBinary0 ;
1102931   +   H12  = H12  +     0.43127584437858 * AcceptedCmp10
1102932   +          +    -0.45791405760753 * AcceptedCmp20  +    -0.99939161573095 *
1102933   +        AcceptedCmp30  +    -1.19828550777192 * AcceptedCmp40
1102934   +          +    -0.01213030081313 * AcceptedCmp50  +    -0.13910242772434 *
1102935   +        Complain0  +     0.30067707265993 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.43127584437858 * AcceptedCmp10 + -0.45791405760753 * 
AcceptedCmp20 + -0.99939161573095 * AcceptedCmp30 + -1.19828550777192 * AcceptedCmp40 + 
-0.01213030081313 * AcceptedCmp50 + -0.13910242772434 * Complain0 + 0.30067707265993 * 
HigherEducationBinary0 ;
1102936   +   H13  = H13  +    -0.11762761348562 * AcceptedCmp10
1102937   +          +      0.2189277190916 * AcceptedCmp20  +     0.04353030554468 *
1102938   +        AcceptedCmp30  +    -0.03987223536277 * AcceptedCmp40
1102939   +          +     0.15029448487681 * AcceptedCmp50  +      -0.117886738648 *
1102940   +        Complain0  +    -0.01645100634446 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.11762761348562 * AcceptedCmp10 + 0.2189277190916 * 
AcceptedCmp20 + 0.04353030554468 * AcceptedCmp30 + -0.03987223536277 * AcceptedCmp40 + 
0.15029448487681 * AcceptedCmp50 + -0.117886738648 * Complain0 + -0.01645100634446 * 
HigherEducationBinary0 ;
1102941   +   H11  = H11  +     0.16808351038824 * Education2n_Cycle
1102942   +          +    -0.29249243891567 * EducationBasic  +     0.02800261669472 *
1102943   +        EducationGraduation  +    -0.22350316846433 * EducationMaster
1102944   +          +     0.18754186259114 * Marital_StatusDivorced
1102945   +          +    -0.11988223819284 * Marital_StatusMarried
1102946   +          +    -0.02283707816223 * Marital_StatusSingle
1102947   +          +     -0.1005355792805 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.16808351038824 * Education2n_Cycle + -0.29249243891567 * 
EducationBasic + 0.02800261669472 * EducationGraduation + -0.22350316846433 * EducationMaster 
+ 0.18754186259114 * Marital_StatusDivorced + -0.11988223819284 * Marital_StatusMarried + 
-0.02283707816223 * Marital_StatusSingle + -0.1005355792805 * Marital_StatusTogether ;
1102948   +   H12  = H12  +    -0.12807098247021 * Education2n_Cycle
1102949   +          +     0.23889287012189 * EducationBasic  +     0.10996477979775 *
1102950   +        EducationGraduation  +    -0.24880728981933 * EducationMaster
1102951   +          +    -0.28983318463941 * Marital_StatusDivorced
1102952   +          +    -0.74851149560881 * Marital_StatusMarried
1102953   +          +      0.7618336919202 * Marital_StatusSingle
1102954   +          +    -0.81079042586509 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.12807098247021 * Education2n_Cycle + 0.23889287012189 * 
EducationBasic + 0.10996477979775 * EducationGraduation + -0.24880728981933 * EducationMaster 
+ -0.28983318463941 * Marital_StatusDivorced + -0.74851149560881 * Marital_StatusMarried + 
0.7618336919202 * Marital_StatusSingle + -0.81079042586509 * Marital_StatusTogether ;
1102955   +   H13  = H13  +    -0.26305004071484 * Education2n_Cycle
1102956   +          +     0.28231626292259 * EducationBasic  +    -0.07308832725307 *
1102957   +        EducationGraduation  +     0.20925521527006 * EducationMaster
1102958   +          +    -0.33639004627791 * Marital_StatusDivorced
1102959   +          +     0.12327415586833 * Marital_StatusMarried
1102960   +          +      0.0060971946845 * Marital_StatusSingle
1102961   +          +     0.09875322175475 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.26305004071484 * Education2n_Cycle + 0.28231626292259 * 
EducationBasic + -0.07308832725307 * EducationGraduation + 0.20925521527006 * EducationMaster 
+ -0.33639004627791 * Marital_StatusDivorced + 0.12327415586833 * Marital_StatusMarried + 
0.0060971946845 * Marital_StatusSingle + 0.09875322175475 * Marital_StatusTogether ;
1102962   +   H11  =    -1.17886598743906 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -1.17886598743906 + H11 ;
1102963   +   H12  =    -0.91184279928765 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -0.91184279928765 + H12 ;
1102964   +   H13  =    -0.12019399765604 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.12019399765604 + H13 ;
1102965   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1102966   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1102967   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1102968   +END;
MPRINT(EM_DIAGRAM):   END;
1102969   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1102970   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1102971   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1102972   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1102973   +END;
MPRINT(EM_DIAGRAM):   END;
1102974   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1102975   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1102976   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1102977   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1102978   +   P_DepVar1  =    -5.25940615604579 * H11  +     5.20640516145161 * H12
1102979   +          +    -6.47403374532058 * H13 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -5.25940615604579 * H11 + 5.20640516145161 * H12 + 
-6.47403374532058 * H13 ;
1102980   +   P_DepVar1  =    -0.12049819292714 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.12049819292714 + P_DepVar1 ;
1102981   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1102982   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1102983   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1102984   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1102985   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1102986   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1102987   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1102988   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1102989   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1102990   +END;
MPRINT(EM_DIAGRAM):   END;
1102991   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1102992   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1102993   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1102994   +END;
MPRINT(EM_DIAGRAM):   END;
1102995   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1102996   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1102997   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1102998   +END;
MPRINT(EM_DIAGRAM):   END;
1102999   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1103000   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1103001   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1103002   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1103003   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1103004   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1103005   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1103006   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1103007   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1103008   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1103009   +END;
MPRINT(EM_DIAGRAM):   END;
1103010   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1103011   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1103012   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1103013   +drop
1103014   +H11
1103015   +H12
1103016   +H13
1103017   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 ;
1103018   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1103019    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1103020    quit;
1103021    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1103022    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1103023    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1103024    retain ID 2 Node "Neural38";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Neural38";
1103025    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1103026    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1745 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 1745 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1103027    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1103028    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1103029    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1745 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 1745 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1103030    proc sort data=EMWS8.Neural38_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Neural38_variableset out=_temp2(keep=NAME CREATOR);
1103031    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1103032    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.NEURAL38_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1103033    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1103034    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1103035    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1103036    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1103037    proc contents data=EMWS8.Neural38_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Neural38_train out=_meta(keep=NAME) noprint;
1103038    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

1103039    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1103040    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1103041    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 53 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1103042    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1103043    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1103044    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1103045    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 53 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1103046    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1103047    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1103047  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 937 rows and 5 columns.

1103048    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1103049    proc append base=EMWS8.Ensmbl12_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl12_FCMP data=_tempx;
1103050    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL12_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 937 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL12_FCMP has 937 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1103051    filename _pref
1103051  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
1103052    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1103053    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
1103054   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1103055   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1103056   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1103057   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1103058   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1103059   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1103060    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1103061    quit;
1103062    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1103063    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1103064    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1103065    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
1103066    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1103067    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1103068    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1103069    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1103070    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1103071    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
1103072    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1103073    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1103074    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1103075    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1103076    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1103077    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1103078    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
1103079    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

1103080    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1103081    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1103082    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1103083    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1103084    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1103085    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1103086    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1103087    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1103088    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1103088  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

1103089    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1103090    proc append base=EMWS8.Ensmbl12_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl12_FCMP data=_tempx;
1103091    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL12_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL12_FCMP has 941 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1103092    filename _pref
1103092  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
1103093    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1103094    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
1103095   +
1103096   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1103097   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1103097  !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1103098   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1103099   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1103100   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1103101   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1103102   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1103103    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1103104    quit;
1103105    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1103106    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1103107    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1103108    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
1103109    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1103110    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1103111    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1103112    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1103113    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1103114    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
1103115    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1103116    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1103117    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1103118    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1103119    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1103120    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1103121    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
1103122    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1103123    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1103124    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1103125    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1103126    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1103127    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1103128    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1103129    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1103130    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1103131    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1103131  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

1103132    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1103133    proc append base=EMWS8.Ensmbl12_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl12_FCMP data=_tempx;
1103134    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL12_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL12_FCMP has 980 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1103135    filename _pref
1103135  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
1103136    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1103137    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
1103138   +
1103139   +
1103140   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
1103141   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
1103142   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
1103143   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
1103144   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
1103145   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1103146   +
1103147   +
1103148   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
1103149   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
1103150   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
1103151   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
1103152   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
1103153   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1103154   +
1103155   +
1103156   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
1103157   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
1103158   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
1103159   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
1103160   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
1103161   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1103162   +
1103163   +
1103164   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
1103165   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
1103166   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
1103167   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
1103168   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
1103169   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1103170   +
1103171   +
1103172   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
1103173   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
1103174   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
1103175   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
1103176   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
1103177   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1103178   +
1103179   +
1103180   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
1103181   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
1103182   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
1103183   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
1103184   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
1103185   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1103186   +
1103187   +
1103188   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
1103189   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
1103190   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
1103191   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
1103192   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
1103193   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1103194   +
1103195   +
1103196   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
1103197   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
1103198   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
1103199   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
1103200   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
1103201   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1103202   +if
1103203   +_FILTERNORM1 not in ( '.')
1103204   + and
1103205   +_FILTERNORM2 not in ( '.')
1103206   + and
1103207   +_FILTERNORM3 not in ( '.')
1103208   + and
1103209   +_FILTERNORM4 not in ( '.')
1103210   + and
1103211   +_FILTERNORM5 not in ( '.')
1103212   + and
1103213   +_FILTERNORM6 not in ( '.')
1103214   + and
1103215   +_FILTERNORM7 not in ( ' ')
1103216   + and
1103217   +_FILTERNORM8 not in ( ' ')
1103218   +and
1103219   +( Dt_Customer ne .)
1103220   +and ( Income ne . and (Income<=107000))
1103221   +and ( Kidhome ne .)
1103222   +and ( MntFishProducts ne .)
1103223   +and ( MntFruits ne .)
1103224   +and ( MntGoldProds ne .)
1103225   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
1103226   +and ( MntSweetProducts ne .)
1103227   +and ( MntWines ne .)
1103228   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
1103229   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
1103230   +and ( NumStorePurchases ne .)
1103231   +and ( NumWebPurchases ne .)
1103232   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
1103233   +and ( Recency ne .)
1103234   +and ( Teenhome ne .)
1103235   +and ( Year_Birth ne .)
1103236   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
1103237   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
1103238   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
1103239   +end;
MPRINT(EM_DIAGRAM):   end;
1103240   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
1103241   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1103242    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1103243    quit;
1103244    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1103245    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1103246    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1103247    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
1103248    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1103249    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1103250    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1103251    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1103252    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1103253    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
1103254    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1103255    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1103256    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1103257    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1103258    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1103259    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1103260    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
1103261    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

1103262    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1103263    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1103264    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1103265    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1103266    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1103267    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1103268    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1103269    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1103270    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1103270  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

1103271    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1103272    proc append base=EMWS8.Ensmbl12_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl12_FCMP data=_tempx;
1103273    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL12_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL12_FCMP has 1046 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1103274    %macro varDept(fcmpdata=,id=);
1103275    %global nobs&id scoreFlag&id;
1103276    %let scoreFlag&id = 0;
1103277    %if &id=1 or ^&fcmpStart %then %do;
1103278    proc sort data=&fcmpdata out=_temp&id nodupkey;
1103279    by NAME;
1103280    where id=&id and LHS in( %let j=1;
1103281    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
1103282    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
1103283    "&var" %let j = %eval(&j+1);
1103284    %end;
1103285    );
1103286    run;
1103287    %let dsid = %sysfunc(open(_temp&id));
1103288    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1103289    %let dsid = %sysfunc(close(&dsid));
1103290    %if &&nobs&id %then %do;
1103291    %let scoreFlag&id = 1;
1103292    %let fcmpStart = 1;
1103293    %end;
1103294    %else %let fcmpStart = 0;
1103295    %end;
1103296    %else %do;
1103297    proc sort data=&fcmpdata out=_tempid;
1103298    where id=&id;
1103299    by LHS;
1103300    run;
1103301    %let dsid = %sysfunc(open(_tempid));
1103302    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1103303    %let dsid = %sysfunc(close(&dsid));
1103304    %if ^&&nobs&id %then %do;
1103305    proc datasets lib=work nolist;
1103306    delete _tempid;
1103307    run;
1103308    quit;
1103309    %end;
1103310    %else %do;
1103311    data _tempAll;
1103312    set %let j=%eval(&id-1);
1103313    %do x=1 %to &j;
1103314    %if &&nobs&x %then %do;
1103315    _temp&x %end;
1103316    %end;
1103317    ;
1103318    run;
1103319    proc sql;
1103320    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
1103320  ! work._tempid p2 where p.name=p2.lhs;
1103321    quit;
1103322    data _temp&id;
1103323    set _temp&id;
1103324    where LHS ne '' and NAME ne '' and Node ne '';
1103325    run;
1103326    proc datasets lib=work nolist;
1103327    delete _tempAll;
1103328    run;
1103329    %let dsid = %sysfunc(open(_temp&id));
1103330    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1103331    %let dsid = %sysfunc(close(&dsid));
1103332    %if ^&&nobs&id %then %do;
1103333    proc datasets lib=work nolist;
1103334    delete _temp&id;
1103335    run;
1103336    quit;
1103337    %end;
1103338    %else %do;
1103339    %let scoreFlag&id = 1;
1103340    data _temp&id;
1103341    set _temp&id;
1103342    where LHS ne NAME and node ne '';
1103343    run;
1103344    %let dsid = %sysfunc(open(_temp&id));
1103345    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1103346    %let dsid = %sysfunc(close(&dsid));
1103347    %if ^&&nobs&id %then %do;
1103348    proc datasets lib=work nolist;
1103349    delete _temp&id;
1103350    run;
1103351    quit;
1103352    %end;
1103353    %else %do;
1103354    proc sort data=_temp&id nodupkey;
1103355    by LHS NAME;
1103356    run;
1103357    %end;
1103358    %end;
1103359    %end;
1103360    %end;
1103361    %mend varDept;
1103362    %macro optCode(outdata=fcmpdata);
1103363    %global fcmpStart;
1103364    %let fcmpStart = 0;
1103365    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
1103366    %let NumNodes=9;
1103367    %do k=1 %to &NumNodes;
1103368    %vardept(fcmpdata=&outdata, id=&k);
1103369    %end;
1103370    %mend optCode;
1103371    %optcode(outData=EMWS8.Ensmbl12_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl12_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL12_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl12_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 106 observations read from the data set EMWS8.ENSMBL12_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 79 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 27 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl12_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL12_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl12_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL12_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl12_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL12_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 27 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 2 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl12_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL12_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 29 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 33 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 33 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 33 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 33 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl12_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL12_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: There were 33 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 62 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl12_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL12_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl12_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL12_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

1103372    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
1103373    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1103374    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
1103375    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1103376    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
1103377    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1103378    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
1103379    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1103380    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1103381    create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
1103381  ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 2 rows and 3 columns.

1103382    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1103383    data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
1103384    set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
1103385    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 2 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 2 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1103386    filename _pref
1103386  ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural40\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural40\EMPUBLISHSCORE.sas";
1103387    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1103388    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Neural40\EMPUBLISHSCORE.sas.
1103389   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1103390   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1103391   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1103392   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1103393   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1103394   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1103395   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1103396   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1103397   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1103398   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1103399   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1103400   +LENGTH _WARN_ $4
1103401   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
1103402   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1103403   +
1103404   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1103405   +
1103406   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1103407   +
1103408   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1103409   +
1103410   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1103411   +
1103412   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1103413   +
1103414   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1103415   +
1103416   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1103417   +
1103418   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1103419   +
1103420   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1103421   +
1103422   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1103423   +
1103424   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1103425   +
1103426   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1103427   +
1103428   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1103429   +
1103430   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1103431   +
1103432   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1103433   +
1103434   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1103435   +
1103436   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1103437   +
1103438   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1103439   +
1103440   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1103441   +
1103442   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1103443   +
1103444   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1103445   +
1103446   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1103447   +
1103448   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1103449   +
1103450   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1103451   +
1103452   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1103453   +
1103454   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1103455   +
1103456   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1103457   +
1103458   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1103459   +
1103460   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1103461   +
1103462   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1103463   +
1103464   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1103465   +
1103466   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1103467   +
1103468   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1103469   +
1103470   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1103471   +
1103472   +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
1103473   +
1103474   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1103475   +
1103476   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1103477   +
1103478   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1103479   +
1103480   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1103481   +
1103482   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1103483   +
1103484   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1103485   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1103486   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1103487   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1103488   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1103489   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1103490   +end;
MPRINT(EM_DIAGRAM):   end;
1103491   +else do;
MPRINT(EM_DIAGRAM):   else do;
1103492   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1103493   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1103494   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1103495   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1103496   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1103497   +   end;
MPRINT(EM_DIAGRAM):   end;
1103498   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1103499   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1103500   +   end;
MPRINT(EM_DIAGRAM):   end;
1103501   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1103502   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1103503   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1103504   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1103505   +   end;
MPRINT(EM_DIAGRAM):   end;
1103506   +end;
MPRINT(EM_DIAGRAM):   end;
1103507   +
1103508   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1103509   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1103510   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1103511   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1103512   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1103513   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1103514   +end;
MPRINT(EM_DIAGRAM):   end;
1103515   +else do;
MPRINT(EM_DIAGRAM):   else do;
1103516   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1103517   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1103518   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1103519   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1103520   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1103521   +   end;
MPRINT(EM_DIAGRAM):   end;
1103522   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1103523   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1103524   +   end;
MPRINT(EM_DIAGRAM):   end;
1103525   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1103526   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1103527   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1103528   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1103529   +   end;
MPRINT(EM_DIAGRAM):   end;
1103530   +end;
MPRINT(EM_DIAGRAM):   end;
1103531   +
1103532   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1103533   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1103534   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1103535   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1103536   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1103537   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1103538   +end;
MPRINT(EM_DIAGRAM):   end;
1103539   +else do;
MPRINT(EM_DIAGRAM):   else do;
1103540   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1103541   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1103542   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1103543   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1103544   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1103545   +   end;
MPRINT(EM_DIAGRAM):   end;
1103546   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1103547   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1103548   +   end;
MPRINT(EM_DIAGRAM):   end;
1103549   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1103550   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1103551   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1103552   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1103553   +   end;
MPRINT(EM_DIAGRAM):   end;
1103554   +end;
MPRINT(EM_DIAGRAM):   end;
1103555   +
1103556   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1103557   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1103558   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1103559   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1103560   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1103561   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1103562   +end;
MPRINT(EM_DIAGRAM):   end;
1103563   +else do;
MPRINT(EM_DIAGRAM):   else do;
1103564   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1103565   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1103566   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1103567   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1103568   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1103569   +   end;
MPRINT(EM_DIAGRAM):   end;
1103570   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1103571   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1103572   +   end;
MPRINT(EM_DIAGRAM):   end;
1103573   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1103574   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1103575   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1103576   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1103577   +   end;
MPRINT(EM_DIAGRAM):   end;
1103578   +end;
MPRINT(EM_DIAGRAM):   end;
1103579   +
1103580   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1103581   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1103582   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1103583   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1103584   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1103585   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1103586   +end;
MPRINT(EM_DIAGRAM):   end;
1103587   +else do;
MPRINT(EM_DIAGRAM):   else do;
1103588   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1103589   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1103590   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1103591   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1103592   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1103593   +   end;
MPRINT(EM_DIAGRAM):   end;
1103594   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1103595   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1103596   +   end;
MPRINT(EM_DIAGRAM):   end;
1103597   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1103598   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1103599   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1103600   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1103601   +   end;
MPRINT(EM_DIAGRAM):   end;
1103602   +end;
MPRINT(EM_DIAGRAM):   end;
1103603   +
1103604   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1103605   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1103606   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1103607   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1103608   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1103609   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1103610   +end;
MPRINT(EM_DIAGRAM):   end;
1103611   +else do;
MPRINT(EM_DIAGRAM):   else do;
1103612   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1103613   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1103614   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1103615   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1103616   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1103617   +   end;
MPRINT(EM_DIAGRAM):   end;
1103618   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1103619   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1103620   +   end;
MPRINT(EM_DIAGRAM):   end;
1103621   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1103622   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1103623   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1103624   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1103625   +   end;
MPRINT(EM_DIAGRAM):   end;
1103626   +end;
MPRINT(EM_DIAGRAM):   end;
1103627   +
1103628   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1103629   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1103630   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1103631   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1103632   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1103633   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1103634   +end;
MPRINT(EM_DIAGRAM):   end;
1103635   +else do;
MPRINT(EM_DIAGRAM):   else do;
1103636   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1103637   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1103638   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1103639   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1103640   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1103641   +   end;
MPRINT(EM_DIAGRAM):   end;
1103642   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1103643   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1103644   +   end;
MPRINT(EM_DIAGRAM):   end;
1103645   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1103646   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1103647   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1103648   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1103649   +   end;
MPRINT(EM_DIAGRAM):   end;
1103650   +end;
MPRINT(EM_DIAGRAM):   end;
1103651   +
1103652   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1103653   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
1103654   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1103655   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1103656   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1103657   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1103658   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1103659   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1103660   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1103661   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1103662   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1103663   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1103664   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1103665   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1103666   +end;
MPRINT(EM_DIAGRAM):   end;
1103667   +else do;
MPRINT(EM_DIAGRAM):   else do;
1103668   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1103669   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1103670   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1103671   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1103672   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1103673   +   end;
MPRINT(EM_DIAGRAM):   end;
1103674   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1103675   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1103676   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1103677   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1103678   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1103679   +   end;
MPRINT(EM_DIAGRAM):   end;
1103680   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1103681   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1103682   +   end;
MPRINT(EM_DIAGRAM):   end;
1103683   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1103684   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1103685   +   end;
MPRINT(EM_DIAGRAM):   end;
1103686   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1103687   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1103688   +   end;
MPRINT(EM_DIAGRAM):   end;
1103689   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1103690   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1103691   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1103692   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1103693   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1103694   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1103695   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1103696   +   end;
MPRINT(EM_DIAGRAM):   end;
1103697   +end;
MPRINT(EM_DIAGRAM):   end;
1103698   +
1103699   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1103700   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1103701   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
1103702   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1103703   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1103704   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1103705   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1103706   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1103707   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1103708   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1103709   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1103710   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1103711   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1103712   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1103713   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1103714   +end;
MPRINT(EM_DIAGRAM):   end;
1103715   +else do;
MPRINT(EM_DIAGRAM):   else do;
1103716   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1103717   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1103718   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1103719   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1103720   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1103721   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1103722   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1103723   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1103724   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1103725   +         end;
MPRINT(EM_DIAGRAM):   end;
1103726   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1103727   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1103728   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1103729   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1103730   +            end;
MPRINT(EM_DIAGRAM):   end;
1103731   +         end;
MPRINT(EM_DIAGRAM):   end;
1103732   +      end;
MPRINT(EM_DIAGRAM):   end;
1103733   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1103734   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1103735   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1103736   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1103737   +         end;
MPRINT(EM_DIAGRAM):   end;
1103738   +      end;
MPRINT(EM_DIAGRAM):   end;
1103739   +   end;
MPRINT(EM_DIAGRAM):   end;
1103740   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1103741   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1103742   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1103743   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1103744   +      end;
MPRINT(EM_DIAGRAM):   end;
1103745   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1103746   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1103747   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1103748   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1103749   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1103750   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1103751   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1103752   +         end;
MPRINT(EM_DIAGRAM):   end;
1103753   +      end;
MPRINT(EM_DIAGRAM):   end;
1103754   +   end;
MPRINT(EM_DIAGRAM):   end;
1103755   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1103756   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1103757   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1103758   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1103759   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1103760   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1103761   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1103762   +   end;
MPRINT(EM_DIAGRAM):   end;
1103763   +end;
MPRINT(EM_DIAGRAM):   end;
1103764   +
1103765   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1103766   +*** Checking missing input Interval
1103767   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1103768   +
1103769   +IF NMISS(
1103770   +   AcceptedCmpTotal ,
1103771   +   Age ,
1103772   +   Frq ,
1103773   +   Income ,
1103774   +   Kidhome ,
1103775   +   MntFishProducts ,
1103776   +   MntFruits ,
1103777   +   MntGoldProds ,
1103778   +   MntSweetProducts ,
1103779   +   MonthsAsCustomer ,
1103780   +   NumDealsPurchases ,
1103781   +   NumWebVisitsMonth ,
1103782   +   RFMstat ,
1103783   +   RMntFrq ,
1103784   +   Recency ,
1103785   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , 
MntFishProducts , MntFruits , MntGoldProds , MntSweetProducts , MonthsAsCustomer , 
NumDealsPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , Teenhome ) THEN DO;
1103786   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1103787   +
1103788   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1103789   +END;
MPRINT(EM_DIAGRAM):   END;
1103790   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1103791   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1103792   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1103793   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1103794   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1103795   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1103796   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1103797   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1103798   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1103799   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1103800   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1103801   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1103802   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1103803   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1103804   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1103805   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1103806   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1103807   +   S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
1103808   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
1103809   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1103810   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1103811   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1103812   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1103813   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1103814   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1103815   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1103816   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1103817   +END;
MPRINT(EM_DIAGRAM):   END;
1103818   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1103819   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1103820   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1103821   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1103822   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1103823   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1103824   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1103825   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1103826   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1103827   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1103828   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1103829   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1103830   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1103831   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1103832   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1103833   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1103834   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1103835   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1103836   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1103837   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1103838   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1103839   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1103840   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1103841   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1103842   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1103843   +   ELSE S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
1103844   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
1103845   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1103846   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1103847   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1103848   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1103849   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1103850   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1103851   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1103852   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1103853   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1103854   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1103855   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1103856   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1103857   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1103858   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1103859   +END;
MPRINT(EM_DIAGRAM):   END;
1103860   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1103861   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1103862   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1103863   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1103864   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1103865   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1103866   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1103867   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1103868   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1103869   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1103870   +   H11  =      0.0175934799517 * S_AcceptedCmpTotal  +     0.05885450913465 *
1103871   +        S_Age  +    -0.17194721523787 * S_Frq  +    -0.82356228294539 *
1103872   +        S_Income  +     0.39869341630865 * S_Kidhome
1103873   +          +    -0.04263586382867 * S_MntFishProducts
1103874   +          +     0.02697365132515 * S_MntFruits  +     0.04818007940845 *
1103875   +        S_MntGoldProds  +      0.1933390486387 * S_MntSweetProducts
1103876   +          +    -0.14308588367026 * S_MonthsAsCustomer
1103877   +          +    -0.01053346972758 * S_NumDealsPurchases
1103878   +          +    -0.02308351901024 * S_NumWebVisitsMonth
1103879   +          +     0.00403225397753 * S_RFMstat  +    -0.21691316840182 *
1103880   +        S_RMntFrq  +     0.53938373050534 * S_Recency
1103881   +          +     0.55541282723709 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.0175934799517 * S_AcceptedCmpTotal + 0.05885450913465 * S_Age + 
-0.17194721523787 * S_Frq + -0.82356228294539 * S_Income + 0.39869341630865 * S_Kidhome + 
-0.04263586382867 * S_MntFishProducts + 0.02697365132515 * S_MntFruits + 0.04818007940845 * 
S_MntGoldProds + 0.1933390486387 * S_MntSweetProducts + -0.14308588367026 * S_MonthsAsCustomer 
+ -0.01053346972758 * S_NumDealsPurchases + -0.02308351901024 * S_NumWebVisitsMonth + 
0.00403225397753 * S_RFMstat + -0.21691316840182 * S_RMntFrq + 0.53938373050534 * S_Recency + 
0.55541282723709 * S_Teenhome ;
1103882   +   H12  =    -0.31735811206172 * S_AcceptedCmpTotal  +    -0.13976815294846 *
1103883   +        S_Age  +    -0.11928757030551 * S_Frq  +    -0.03597478449162 *
1103884   +        S_Income  +     0.31514301668626 * S_Kidhome
1103885   +          +    -0.05723808748191 * S_MntFishProducts
1103886   +          +     0.04545715816601 * S_MntFruits  +     0.19006209866265 *
1103887   +        S_MntGoldProds  +     0.34690576354698 * S_MntSweetProducts
1103888   +          +    -0.48738730918684 * S_MonthsAsCustomer
1103889   +          +     0.31545795225489 * S_NumDealsPurchases
1103890   +          +     0.24686603252864 * S_NumWebVisitsMonth
1103891   +          +     0.29857007170218 * S_RFMstat  +    -0.01009427724752 *
1103892   +        S_RMntFrq  +    -0.48894693883774 * S_Recency
1103893   +          +    -0.32384426712368 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -0.31735811206172 * S_AcceptedCmpTotal + -0.13976815294846 * S_Age 
+ -0.11928757030551 * S_Frq + -0.03597478449162 * S_Income + 0.31514301668626 * S_Kidhome + 
-0.05723808748191 * S_MntFishProducts + 0.04545715816601 * S_MntFruits + 0.19006209866265 * 
S_MntGoldProds + 0.34690576354698 * S_MntSweetProducts + -0.48738730918684 * 
S_MonthsAsCustomer + 0.31545795225489 * S_NumDealsPurchases + 0.24686603252864 * 
S_NumWebVisitsMonth + 0.29857007170218 * S_RFMstat + -0.01009427724752 * S_RMntFrq + 
-0.48894693883774 * S_Recency + -0.32384426712368 * S_Teenhome ;
1103894   +   H13  =    -0.67705794412683 * S_AcceptedCmpTotal  +     -0.1538815804864 *
1103895   +        S_Age  +    -0.32580272740463 * S_Frq  +    -0.42829033761305 *
1103896   +        S_Income  +    -0.48452563006855 * S_Kidhome
1103897   +          +      0.1638851163007 * S_MntFishProducts
1103898   +          +      0.0664068987141 * S_MntFruits  +    -0.54942999951449 *
1103899   +        S_MntGoldProds  +    -0.03119903843323 * S_MntSweetProducts
1103900   +          +    -0.09008316729574 * S_MonthsAsCustomer
1103901   +          +    -0.45452883452999 * S_NumDealsPurchases
1103902   +          +    -0.51499533680205 * S_NumWebVisitsMonth
1103903   +          +    -0.31380282266424 * S_RFMstat  +    -0.49525143192723 *
1103904   +        S_RMntFrq  +     0.78729387300328 * S_Recency
1103905   +          +    -0.00915408985389 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = -0.67705794412683 * S_AcceptedCmpTotal + -0.1538815804864 * S_Age 
+ -0.32580272740463 * S_Frq + -0.42829033761305 * S_Income + -0.48452563006855 * S_Kidhome + 
0.1638851163007 * S_MntFishProducts + 0.0664068987141 * S_MntFruits + -0.54942999951449 * 
S_MntGoldProds + -0.03119903843323 * S_MntSweetProducts + -0.09008316729574 * 
S_MonthsAsCustomer + -0.45452883452999 * S_NumDealsPurchases + -0.51499533680205 * 
S_NumWebVisitsMonth + -0.31380282266424 * S_RFMstat + -0.49525143192723 * S_RMntFrq + 
0.78729387300328 * S_Recency + -0.00915408985389 * S_Teenhome ;
1103906   +   H14  =     0.38318271090494 * S_AcceptedCmpTotal  +     0.06739638561066 *
1103907   +        S_Age  +     0.06912614028701 * S_Frq  +     0.14095220260271 *
1103908   +        S_Income  +    -0.62959343200613 * S_Kidhome
1103909   +          +    -0.08953561593231 * S_MntFishProducts
1103910   +          +    -0.17218233364246 * S_MntFruits  +    -0.00637076803669 *
1103911   +        S_MntGoldProds  +    -0.30194599011284 * S_MntSweetProducts
1103912   +          +    -0.04786752357029 * S_MonthsAsCustomer
1103913   +          +     0.01658790214447 * S_NumDealsPurchases
1103914   +          +     0.60508225698649 * S_NumWebVisitsMonth
1103915   +          +     0.24353060507938 * S_RFMstat  +    -0.16860031884486 *
1103916   +        S_RMntFrq  +    -0.74371082820398 * S_Recency
1103917   +          +    -0.33551735128078 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = 0.38318271090494 * S_AcceptedCmpTotal + 0.06739638561066 * S_Age + 
0.06912614028701 * S_Frq + 0.14095220260271 * S_Income + -0.62959343200613 * S_Kidhome + 
-0.08953561593231 * S_MntFishProducts + -0.17218233364246 * S_MntFruits + -0.00637076803669 * 
S_MntGoldProds + -0.30194599011284 * S_MntSweetProducts + -0.04786752357029 * 
S_MonthsAsCustomer + 0.01658790214447 * S_NumDealsPurchases + 0.60508225698649 * 
S_NumWebVisitsMonth + 0.24353060507938 * S_RFMstat + -0.16860031884486 * S_RMntFrq + 
-0.74371082820398 * S_Recency + -0.33551735128078 * S_Teenhome ;
1103918   +   H15  =    -0.33857166416401 * S_AcceptedCmpTotal  +     0.16520608022036 *
1103919   +        S_Age  +     0.94641603263172 * S_Frq  +     0.27973805141234 *
1103920   +        S_Income  +    -0.02417847760857 * S_Kidhome
1103921   +          +    -0.15499190740194 * S_MntFishProducts
1103922   +          +     0.06053779821593 * S_MntFruits  +     0.01880479324025 *
1103923   +        S_MntGoldProds  +    -0.12339726666832 * S_MntSweetProducts
1103924   +          +     0.03507116553703 * S_MonthsAsCustomer
1103925   +          +    -0.55190381693021 * S_NumDealsPurchases
1103926   +          +    -0.59332657995985 * S_NumWebVisitsMonth
1103927   +          +    -0.06593374840561 * S_RFMstat  +     -0.1695910963416 *
1103928   +        S_RMntFrq  +     0.67557246434122 * S_Recency
1103929   +          +    -0.18658362303394 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H15 = -0.33857166416401 * S_AcceptedCmpTotal + 0.16520608022036 * S_Age 
+ 0.94641603263172 * S_Frq + 0.27973805141234 * S_Income + -0.02417847760857 * S_Kidhome + 
-0.15499190740194 * S_MntFishProducts + 0.06053779821593 * S_MntFruits + 0.01880479324025 * 
S_MntGoldProds + -0.12339726666832 * S_MntSweetProducts + 0.03507116553703 * 
S_MonthsAsCustomer + -0.55190381693021 * S_NumDealsPurchases + -0.59332657995985 * 
S_NumWebVisitsMonth + -0.06593374840561 * S_RFMstat + -0.1695910963416 * S_RMntFrq + 
0.67557246434122 * S_Recency + -0.18658362303394 * S_Teenhome ;
1103930   +   H11  = H11  +     0.33421746514492 * AcceptedCmp10
1103931   +          +     0.40665603760529 * AcceptedCmp20  +     0.31091046539166 *
1103932   +        AcceptedCmp30  +     0.31067810471417 * AcceptedCmp40
1103933   +          +     0.23230606314386 * AcceptedCmp50  +     0.16336773428886 *
1103934   +        Complain0  +    -0.30987882500611 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.33421746514492 * AcceptedCmp10 + 0.40665603760529 * 
AcceptedCmp20 + 0.31091046539166 * AcceptedCmp30 + 0.31067810471417 * AcceptedCmp40 + 
0.23230606314386 * AcceptedCmp50 + 0.16336773428886 * Complain0 + -0.30987882500611 * 
HigherEducationBinary0 ;
1103935   +   H12  = H12  +     0.15837463939449 * AcceptedCmp10
1103936   +          +    -0.01452684677445 * AcceptedCmp20  +    -0.18194082864383 *
1103937   +        AcceptedCmp30  +     0.10656170173016 * AcceptedCmp40
1103938   +          +     0.27710912124072 * AcceptedCmp50  +     0.21438736172214 *
1103939   +        Complain0  +      0.2669951422121 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.15837463939449 * AcceptedCmp10 + -0.01452684677445 * 
AcceptedCmp20 + -0.18194082864383 * AcceptedCmp30 + 0.10656170173016 * AcceptedCmp40 + 
0.27710912124072 * AcceptedCmp50 + 0.21438736172214 * Complain0 + 0.2669951422121 * 
HigherEducationBinary0 ;
1103940   +   H13  = H13  +    -0.11101425179048 * AcceptedCmp10
1103941   +          +    -0.13751555879468 * AcceptedCmp20  +     0.15733527433639 *
1103942   +        AcceptedCmp30  +    -0.09214109408136 * AcceptedCmp40
1103943   +          +     0.20478673178439 * AcceptedCmp50  +    -0.28890027497717 *
1103944   +        Complain0  +     0.12242984309847 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.11101425179048 * AcceptedCmp10 + -0.13751555879468 * 
AcceptedCmp20 + 0.15733527433639 * AcceptedCmp30 + -0.09214109408136 * AcceptedCmp40 + 
0.20478673178439 * AcceptedCmp50 + -0.28890027497717 * Complain0 + 0.12242984309847 * 
HigherEducationBinary0 ;
1103945   +   H14  = H14  +     0.23187291622457 * AcceptedCmp10
1103946   +          +    -0.00683976547266 * AcceptedCmp20  +    -0.31710598764248 *
1103947   +        AcceptedCmp30  +     0.01758514221597 * AcceptedCmp40
1103948   +          +     0.01100509244187 * AcceptedCmp50  +     0.18584999296157 *
1103949   +        Complain0  +     0.02524550049258 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.23187291622457 * AcceptedCmp10 + -0.00683976547266 * 
AcceptedCmp20 + -0.31710598764248 * AcceptedCmp30 + 0.01758514221597 * AcceptedCmp40 + 
0.01100509244187 * AcceptedCmp50 + 0.18584999296157 * Complain0 + 0.02524550049258 * 
HigherEducationBinary0 ;
1103950   +   H15  = H15  +     0.53220831693924 * AcceptedCmp10
1103951   +          +     0.01983211122446 * AcceptedCmp20  +      0.4704897795251 *
1103952   +        AcceptedCmp30  +    -0.05798671810245 * AcceptedCmp40
1103953   +          +      0.2900384423652 * AcceptedCmp50  +     0.05796705496261 *
1103954   +        Complain0  +     0.17745347141736 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.53220831693924 * AcceptedCmp10 + 0.01983211122446 * 
AcceptedCmp20 + 0.4704897795251 * AcceptedCmp30 + -0.05798671810245 * AcceptedCmp40 + 
0.2900384423652 * AcceptedCmp50 + 0.05796705496261 * Complain0 + 0.17745347141736 * 
HigherEducationBinary0 ;
1103955   +   H11  = H11  +     0.02871001640043 * Education2n_Cycle
1103956   +          +    -0.13470776546868 * EducationBasic  +    -0.09722995474504 *
1103957   +        EducationGraduation  +     0.23764107317064 * EducationMaster
1103958   +          +    -0.41654638301737 * Marital_StatusDivorced
1103959   +          +     0.65956207700583 * Marital_StatusMarried
1103960   +          +    -0.52573042887166 * Marital_StatusSingle
1103961   +          +     0.70466028872575 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.02871001640043 * Education2n_Cycle + -0.13470776546868 * 
EducationBasic + -0.09722995474504 * EducationGraduation + 0.23764107317064 * EducationMaster 
+ -0.41654638301737 * Marital_StatusDivorced + 0.65956207700583 * Marital_StatusMarried + 
-0.52573042887166 * Marital_StatusSingle + 0.70466028872575 * Marital_StatusTogether ;
1103962   +   H12  = H12  +    -0.18219729356622 * Education2n_Cycle
1103963   +          +    -0.04034334204744 * EducationBasic  +     0.26266153233615 *
1103964   +        EducationGraduation  +     0.04617834975571 * EducationMaster
1103965   +          +    -0.32313846862799 * Marital_StatusDivorced
1103966   +          +     0.15910539009887 * Marital_StatusMarried
1103967   +          +     0.28781821946114 * Marital_StatusSingle
1103968   +          +    -0.31451367898445 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.18219729356622 * Education2n_Cycle + -0.04034334204744 * 
EducationBasic + 0.26266153233615 * EducationGraduation + 0.04617834975571 * EducationMaster + 
-0.32313846862799 * Marital_StatusDivorced + 0.15910539009887 * Marital_StatusMarried + 
0.28781821946114 * Marital_StatusSingle + -0.31451367898445 * Marital_StatusTogether ;
1103969   +   H13  = H13  +     0.03267721493849 * Education2n_Cycle
1103970   +          +     0.16906837093601 * EducationBasic  +    -0.24874822218195 *
1103971   +        EducationGraduation  +    -0.16815820019721 * EducationMaster
1103972   +          +    -0.06481096024989 * Marital_StatusDivorced
1103973   +          +    -0.01184060710261 * Marital_StatusMarried
1103974   +          +    -0.04932258474026 * Marital_StatusSingle
1103975   +          +     -0.1515388053958 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.03267721493849 * Education2n_Cycle + 0.16906837093601 * 
EducationBasic + -0.24874822218195 * EducationGraduation + -0.16815820019721 * EducationMaster 
+ -0.06481096024989 * Marital_StatusDivorced + -0.01184060710261 * Marital_StatusMarried + 
-0.04932258474026 * Marital_StatusSingle + -0.1515388053958 * Marital_StatusTogether ;
1103976   +   H14  = H14  +     0.04382537081818 * Education2n_Cycle
1103977   +          +     0.09896945976445 * EducationBasic  +      0.2410849324915 *
1103978   +        EducationGraduation  +    -0.17878202935912 * EducationMaster
1103979   +          +      0.2062190716357 * Marital_StatusDivorced
1103980   +          +      -0.523160668609 * Marital_StatusMarried
1103981   +          +     0.50687401816278 * Marital_StatusSingle
1103982   +          +    -0.14896192891933 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.04382537081818 * Education2n_Cycle + 0.09896945976445 * 
EducationBasic + 0.2410849324915 * EducationGraduation + -0.17878202935912 * EducationMaster + 
0.2062190716357 * Marital_StatusDivorced + -0.523160668609 * Marital_StatusMarried + 
0.50687401816278 * Marital_StatusSingle + -0.14896192891933 * Marital_StatusTogether ;
1103983   +   H15  = H15  +    -0.08178258730533 * Education2n_Cycle
1103984   +          +      0.2352291498146 * EducationBasic  +     0.00142061419661 *
1103985   +        EducationGraduation  +      0.0248100493803 * EducationMaster
1103986   +          +     -0.1386176879533 * Marital_StatusDivorced
1103987   +          +    -0.17611433777439 * Marital_StatusMarried
1103988   +          +     0.09908348348999 * Marital_StatusSingle
1103989   +          +     0.03642332762739 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + -0.08178258730533 * Education2n_Cycle + 0.2352291498146 * 
EducationBasic + 0.00142061419661 * EducationGraduation + 0.0248100493803 * EducationMaster + 
-0.1386176879533 * Marital_StatusDivorced + -0.17611433777439 * Marital_StatusMarried + 
0.09908348348999 * Marital_StatusSingle + 0.03642332762739 * Marital_StatusTogether ;
1103990   +   H11  =     0.45628072516851 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 0.45628072516851 + H11 ;
1103991   +   H12  =    -0.95695553300305 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -0.95695553300305 + H12 ;
1103992   +   H13  =    -0.44156518168947 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.44156518168947 + H13 ;
1103993   +   H14  =      0.5435213841731 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 0.5435213841731 + H14 ;
1103994   +   H15  =     0.82816554742793 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = 0.82816554742793 + H15 ;
1103995   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1103996   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1103997   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1103998   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1103999   +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
1104000   +END;
MPRINT(EM_DIAGRAM):   END;
1104001   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1104002   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1104003   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1104004   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1104005   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1104006   +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
1104007   +END;
MPRINT(EM_DIAGRAM):   END;
1104008   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1104009   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1104010   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1104011   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1104012   +   P_DepVar1  =    -3.08501570662701 * H11  +     0.89180279281701 * H12
1104013   +          +    -2.65199906073292 * H13  +     1.47191997336768 * H14
1104014   +          +     -1.9303334635002 * H15 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.08501570662701 * H11 + 0.89180279281701 * H12 + 
-2.65199906073292 * H13 + 1.47191997336768 * H14 + -1.9303334635002 * H15 ;
1104015   +   P_DepVar1  =    -1.84416627670626 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.84416627670626 + P_DepVar1 ;
1104016   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1104017   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1104018   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1104019   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1104020   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1104021   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1104022   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1104023   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1104024   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1104025   +END;
MPRINT(EM_DIAGRAM):   END;
1104026   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1104027   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1104028   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1104029   +END;
MPRINT(EM_DIAGRAM):   END;
1104030   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1104031   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1104032   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1104033   +END;
MPRINT(EM_DIAGRAM):   END;
1104034   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1104035   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1104036   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1104037   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1104038   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1104039   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1104040   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1104041   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1104042   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1104043   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1104044   +END;
MPRINT(EM_DIAGRAM):   END;
1104045   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1104046   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1104047   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1104048   +drop
1104049   +H11
1104050   +H12
1104051   +H13
1104052   +H14
1104053   +H15
1104054   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 ;
1104055   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1104056    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1104057    quit;
1104058    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1104059    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1104060    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1104061    retain ID 2 Node "Neural40";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Neural40";
1104062    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1104063    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2037 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2037 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1104064    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1104065    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1104066    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2037 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2037 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1104067    proc sort data=EMWS8.Neural40_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Neural40_variableset out=_temp2(keep=NAME CREATOR);
1104068    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1104069    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.NEURAL40_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1104070    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1104071    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1104072    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1104073    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1104074    proc contents data=EMWS8.Neural40_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Neural40_train out=_meta(keep=NAME) noprint;
1104075    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

1104076    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1104077    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1104078    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 53 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1104079    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1104080    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1104081    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1104082    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 53 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1104083    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1104084    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1104084  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 1037 rows and 5 columns.

1104085    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1104086    proc append base=EMWS8.Ensmbl12_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl12_FCMP data=_tempx;
1104087    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL12_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 1037 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL12_FCMP has 1037 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1104088    filename _pref
1104088  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
1104089    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1104090    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
1104091   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1104092   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1104093   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1104094   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1104095   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1104096   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1104097    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1104098    quit;
1104099    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1104100    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1104101    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1104102    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
1104103    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1104104    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1104105    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1104106    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1104107    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1104108    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
1104109    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1104110    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1104111    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1104112    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1104113    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1104114    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1104115    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
1104116    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

1104117    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1104118    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1104119    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1104120    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1104121    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1104122    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1104123    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1104124    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1104125    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1104125  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

1104126    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1104127    proc append base=EMWS8.Ensmbl12_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl12_FCMP data=_tempx;
1104128    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL12_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL12_FCMP has 1041 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1104129    filename _pref
1104129  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
1104130    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1104131    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
1104132   +
1104133   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1104134   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1104134  !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1104135   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1104136   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1104137   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1104138   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1104139   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1104140    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1104141    quit;
1104142    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1104143    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1104144    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1104145    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
1104146    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1104147    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1104148    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1104149    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1104150    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1104151    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
1104152    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1104153    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1104154    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1104155    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1104156    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1104157    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1104158    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
1104159    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1104160    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1104161    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1104162    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1104163    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1104164    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1104165    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1104166    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1104167    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1104168    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1104168  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

1104169    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1104170    proc append base=EMWS8.Ensmbl12_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl12_FCMP data=_tempx;
1104171    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL12_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL12_FCMP has 1080 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1104172    filename _pref
1104172  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
1104173    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1104174    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
1104175   +
1104176   +
1104177   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
1104178   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
1104179   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
1104180   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
1104181   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
1104182   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1104183   +
1104184   +
1104185   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
1104186   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
1104187   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
1104188   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
1104189   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
1104190   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1104191   +
1104192   +
1104193   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
1104194   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
1104195   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
1104196   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
1104197   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
1104198   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1104199   +
1104200   +
1104201   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
1104202   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
1104203   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
1104204   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
1104205   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
1104206   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1104207   +
1104208   +
1104209   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
1104210   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
1104211   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
1104212   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
1104213   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
1104214   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1104215   +
1104216   +
1104217   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
1104218   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
1104219   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
1104220   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
1104221   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
1104222   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1104223   +
1104224   +
1104225   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
1104226   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
1104227   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
1104228   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
1104229   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
1104230   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1104231   +
1104232   +
1104233   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
1104234   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
1104235   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
1104236   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
1104237   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
1104238   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1104239   +if
1104240   +_FILTERNORM1 not in ( '.')
1104241   + and
1104242   +_FILTERNORM2 not in ( '.')
1104243   + and
1104244   +_FILTERNORM3 not in ( '.')
1104245   + and
1104246   +_FILTERNORM4 not in ( '.')
1104247   + and
1104248   +_FILTERNORM5 not in ( '.')
1104249   + and
1104250   +_FILTERNORM6 not in ( '.')
1104251   + and
1104252   +_FILTERNORM7 not in ( ' ')
1104253   + and
1104254   +_FILTERNORM8 not in ( ' ')
1104255   +and
1104256   +( Dt_Customer ne .)
1104257   +and ( Income ne . and (Income<=107000))
1104258   +and ( Kidhome ne .)
1104259   +and ( MntFishProducts ne .)
1104260   +and ( MntFruits ne .)
1104261   +and ( MntGoldProds ne .)
1104262   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
1104263   +and ( MntSweetProducts ne .)
1104264   +and ( MntWines ne .)
1104265   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
1104266   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
1104267   +and ( NumStorePurchases ne .)
1104268   +and ( NumWebPurchases ne .)
1104269   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
1104270   +and ( Recency ne .)
1104271   +and ( Teenhome ne .)
1104272   +and ( Year_Birth ne .)
1104273   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
1104274   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
1104275   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
1104276   +end;
MPRINT(EM_DIAGRAM):   end;
1104277   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
1104278   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1104279    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1104280    quit;
1104281    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1104282    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1104283    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1104284    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
1104285    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1104286    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1104287    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1104288    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1104289    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1104290    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
1104291    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1104292    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1104293    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1104294    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1104295    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1104296    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1104297    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
1104298    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

1104299    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1104300    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1104301    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1104302    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1104303    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1104304    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1104305    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1104306    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1104307    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1104307  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

1104308    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1104309    proc append base=EMWS8.Ensmbl12_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl12_FCMP data=_tempx;
1104310    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL12_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL12_FCMP has 1146 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1104311    %macro varDept(fcmpdata=,id=);
1104312    %global nobs&id scoreFlag&id;
1104313    %let scoreFlag&id = 0;
1104314    %if &id=1 or ^&fcmpStart %then %do;
1104315    proc sort data=&fcmpdata out=_temp&id nodupkey;
1104316    by NAME;
1104317    where id=&id and LHS in( %let j=1;
1104318    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
1104319    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
1104320    "&var" %let j = %eval(&j+1);
1104321    %end;
1104322    );
1104323    run;
1104324    %let dsid = %sysfunc(open(_temp&id));
1104325    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1104326    %let dsid = %sysfunc(close(&dsid));
1104327    %if &&nobs&id %then %do;
1104328    %let scoreFlag&id = 1;
1104329    %let fcmpStart = 1;
1104330    %end;
1104331    %else %let fcmpStart = 0;
1104332    %end;
1104333    %else %do;
1104334    proc sort data=&fcmpdata out=_tempid;
1104335    where id=&id;
1104336    by LHS;
1104337    run;
1104338    %let dsid = %sysfunc(open(_tempid));
1104339    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1104340    %let dsid = %sysfunc(close(&dsid));
1104341    %if ^&&nobs&id %then %do;
1104342    proc datasets lib=work nolist;
1104343    delete _tempid;
1104344    run;
1104345    quit;
1104346    %end;
1104347    %else %do;
1104348    data _tempAll;
1104349    set %let j=%eval(&id-1);
1104350    %do x=1 %to &j;
1104351    %if &&nobs&x %then %do;
1104352    _temp&x %end;
1104353    %end;
1104354    ;
1104355    run;
1104356    proc sql;
1104357    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
1104357  ! work._tempid p2 where p.name=p2.lhs;
1104358    quit;
1104359    data _temp&id;
1104360    set _temp&id;
1104361    where LHS ne '' and NAME ne '' and Node ne '';
1104362    run;
1104363    proc datasets lib=work nolist;
1104364    delete _tempAll;
1104365    run;
1104366    %let dsid = %sysfunc(open(_temp&id));
1104367    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1104368    %let dsid = %sysfunc(close(&dsid));
1104369    %if ^&&nobs&id %then %do;
1104370    proc datasets lib=work nolist;
1104371    delete _temp&id;
1104372    run;
1104373    quit;
1104374    %end;
1104375    %else %do;
1104376    %let scoreFlag&id = 1;
1104377    data _temp&id;
1104378    set _temp&id;
1104379    where LHS ne NAME and node ne '';
1104380    run;
1104381    %let dsid = %sysfunc(open(_temp&id));
1104382    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1104383    %let dsid = %sysfunc(close(&dsid));
1104384    %if ^&&nobs&id %then %do;
1104385    proc datasets lib=work nolist;
1104386    delete _temp&id;
1104387    run;
1104388    quit;
1104389    %end;
1104390    %else %do;
1104391    proc sort data=_temp&id nodupkey;
1104392    by LHS NAME;
1104393    run;
1104394    %end;
1104395    %end;
1104396    %end;
1104397    %end;
1104398    %mend varDept;
1104399    %macro optCode(outdata=fcmpdata);
1104400    %global fcmpStart;
1104401    %let fcmpStart = 0;
1104402    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
1104403    %let NumNodes=9;
1104404    %do k=1 %to &NumNodes;
1104405    %vardept(fcmpdata=&outdata, id=&k);
1104406    %end;
1104407    %mend optCode;
1104408    %optcode(outData=EMWS8.Ensmbl12_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl12_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL12_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl12_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 106 observations read from the data set EMWS8.ENSMBL12_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 79 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 27 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl12_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL12_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl12_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL12_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl12_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL12_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 27 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 2 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl12_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL12_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 29 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 33 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 33 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 33 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 33 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl12_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL12_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: There were 33 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 62 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl12_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL12_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl12_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL12_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
The SAS System

MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

1104409    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
1104410    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1104411    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
1104412    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1104413    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
1104414    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1104415    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
1104416    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1104417    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1104418    create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
1104418  ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 2 rows and 3 columns.

1104419    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1104420    data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
1104421    set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
1104422    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 2 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 2 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1104423    filename _pref
1104423  ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural41\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural41\EMPUBLISHSCORE.sas";
1104424    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1104425    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Neural41\EMPUBLISHSCORE.sas.
1104426   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1104427   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1104428   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1104429   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1104430   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1104431   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1104432   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1104433   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1104434   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1104435   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1104436   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1104437   +LENGTH _WARN_ $4
1104438   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
1104439   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1104440   +
1104441   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1104442   +
1104443   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1104444   +
1104445   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1104446   +
1104447   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1104448   +
1104449   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1104450   +
1104451   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1104452   +
1104453   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1104454   +
1104455   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1104456   +
1104457   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1104458   +
1104459   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1104460   +
1104461   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1104462   +
1104463   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1104464   +
1104465   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1104466   +
1104467   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1104468   +
1104469   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1104470   +
1104471   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1104472   +
1104473   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1104474   +
1104475   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1104476   +
1104477   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1104478   +
1104479   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1104480   +
1104481   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1104482   +
1104483   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1104484   +
1104485   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1104486   +
1104487   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1104488   +
1104489   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1104490   +
1104491   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1104492   +
1104493   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1104494   +
1104495   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1104496   +
1104497   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1104498   +
1104499   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1104500   +
1104501   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1104502   +
1104503   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1104504   +
1104505   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1104506   +
1104507   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1104508   +
1104509   +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
1104510   +
1104511   +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
1104512   +
1104513   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1104514   +
1104515   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1104516   +
1104517   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1104518   +
1104519   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1104520   +
1104521   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1104522   +
1104523   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1104524   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1104525   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1104526   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1104527   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1104528   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1104529   +end;
MPRINT(EM_DIAGRAM):   end;
1104530   +else do;
MPRINT(EM_DIAGRAM):   else do;
1104531   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1104532   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1104533   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1104534   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1104535   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1104536   +   end;
MPRINT(EM_DIAGRAM):   end;
1104537   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1104538   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1104539   +   end;
MPRINT(EM_DIAGRAM):   end;
1104540   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1104541   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1104542   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1104543   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1104544   +   end;
MPRINT(EM_DIAGRAM):   end;
1104545   +end;
MPRINT(EM_DIAGRAM):   end;
1104546   +
1104547   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1104548   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1104549   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1104550   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1104551   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1104552   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1104553   +end;
MPRINT(EM_DIAGRAM):   end;
1104554   +else do;
MPRINT(EM_DIAGRAM):   else do;
1104555   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1104556   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1104557   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1104558   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1104559   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1104560   +   end;
MPRINT(EM_DIAGRAM):   end;
1104561   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1104562   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1104563   +   end;
MPRINT(EM_DIAGRAM):   end;
1104564   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1104565   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1104566   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1104567   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1104568   +   end;
MPRINT(EM_DIAGRAM):   end;
1104569   +end;
MPRINT(EM_DIAGRAM):   end;
1104570   +
1104571   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1104572   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1104573   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1104574   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1104575   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1104576   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1104577   +end;
MPRINT(EM_DIAGRAM):   end;
1104578   +else do;
MPRINT(EM_DIAGRAM):   else do;
1104579   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1104580   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1104581   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1104582   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1104583   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1104584   +   end;
MPRINT(EM_DIAGRAM):   end;
1104585   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1104586   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1104587   +   end;
MPRINT(EM_DIAGRAM):   end;
1104588   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1104589   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1104590   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1104591   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1104592   +   end;
MPRINT(EM_DIAGRAM):   end;
1104593   +end;
MPRINT(EM_DIAGRAM):   end;
1104594   +
1104595   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1104596   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1104597   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1104598   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1104599   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1104600   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1104601   +end;
MPRINT(EM_DIAGRAM):   end;
1104602   +else do;
MPRINT(EM_DIAGRAM):   else do;
1104603   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1104604   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1104605   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1104606   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1104607   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1104608   +   end;
MPRINT(EM_DIAGRAM):   end;
1104609   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1104610   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1104611   +   end;
MPRINT(EM_DIAGRAM):   end;
1104612   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1104613   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1104614   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1104615   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1104616   +   end;
MPRINT(EM_DIAGRAM):   end;
1104617   +end;
MPRINT(EM_DIAGRAM):   end;
1104618   +
1104619   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1104620   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1104621   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1104622   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1104623   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1104624   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1104625   +end;
MPRINT(EM_DIAGRAM):   end;
1104626   +else do;
MPRINT(EM_DIAGRAM):   else do;
1104627   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1104628   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1104629   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1104630   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1104631   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1104632   +   end;
MPRINT(EM_DIAGRAM):   end;
1104633   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1104634   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1104635   +   end;
MPRINT(EM_DIAGRAM):   end;
1104636   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1104637   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1104638   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1104639   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1104640   +   end;
MPRINT(EM_DIAGRAM):   end;
1104641   +end;
MPRINT(EM_DIAGRAM):   end;
1104642   +
1104643   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1104644   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1104645   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1104646   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1104647   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1104648   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1104649   +end;
MPRINT(EM_DIAGRAM):   end;
1104650   +else do;
MPRINT(EM_DIAGRAM):   else do;
1104651   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1104652   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1104653   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1104654   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1104655   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1104656   +   end;
MPRINT(EM_DIAGRAM):   end;
1104657   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1104658   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1104659   +   end;
MPRINT(EM_DIAGRAM):   end;
1104660   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1104661   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1104662   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1104663   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1104664   +   end;
MPRINT(EM_DIAGRAM):   end;
1104665   +end;
MPRINT(EM_DIAGRAM):   end;
1104666   +
1104667   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1104668   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1104669   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1104670   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1104671   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1104672   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1104673   +end;
MPRINT(EM_DIAGRAM):   end;
1104674   +else do;
MPRINT(EM_DIAGRAM):   else do;
1104675   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1104676   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1104677   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1104678   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1104679   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1104680   +   end;
MPRINT(EM_DIAGRAM):   end;
1104681   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1104682   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1104683   +   end;
MPRINT(EM_DIAGRAM):   end;
1104684   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1104685   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1104686   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1104687   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1104688   +   end;
MPRINT(EM_DIAGRAM):   end;
1104689   +end;
MPRINT(EM_DIAGRAM):   end;
1104690   +
1104691   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1104692   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
1104693   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1104694   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1104695   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1104696   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1104697   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1104698   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1104699   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1104700   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1104701   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1104702   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1104703   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1104704   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1104705   +end;
MPRINT(EM_DIAGRAM):   end;
1104706   +else do;
MPRINT(EM_DIAGRAM):   else do;
1104707   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1104708   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1104709   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1104710   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1104711   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1104712   +   end;
MPRINT(EM_DIAGRAM):   end;
1104713   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1104714   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1104715   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1104716   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1104717   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1104718   +   end;
MPRINT(EM_DIAGRAM):   end;
1104719   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1104720   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1104721   +   end;
MPRINT(EM_DIAGRAM):   end;
1104722   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1104723   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1104724   +   end;
MPRINT(EM_DIAGRAM):   end;
1104725   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1104726   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1104727   +   end;
MPRINT(EM_DIAGRAM):   end;
1104728   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1104729   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1104730   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1104731   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1104732   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1104733   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1104734   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1104735   +   end;
MPRINT(EM_DIAGRAM):   end;
1104736   +end;
MPRINT(EM_DIAGRAM):   end;
1104737   +
1104738   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1104739   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1104740   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
1104741   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1104742   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1104743   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1104744   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1104745   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1104746   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1104747   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1104748   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1104749   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1104750   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1104751   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1104752   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1104753   +end;
MPRINT(EM_DIAGRAM):   end;
1104754   +else do;
MPRINT(EM_DIAGRAM):   else do;
1104755   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1104756   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1104757   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1104758   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1104759   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1104760   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1104761   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1104762   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1104763   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1104764   +         end;
MPRINT(EM_DIAGRAM):   end;
1104765   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1104766   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1104767   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1104768   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1104769   +            end;
MPRINT(EM_DIAGRAM):   end;
1104770   +         end;
MPRINT(EM_DIAGRAM):   end;
1104771   +      end;
MPRINT(EM_DIAGRAM):   end;
1104772   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1104773   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1104774   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1104775   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1104776   +         end;
MPRINT(EM_DIAGRAM):   end;
1104777   +      end;
MPRINT(EM_DIAGRAM):   end;
1104778   +   end;
MPRINT(EM_DIAGRAM):   end;
1104779   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1104780   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1104781   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1104782   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1104783   +      end;
MPRINT(EM_DIAGRAM):   end;
1104784   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1104785   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1104786   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1104787   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1104788   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1104789   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1104790   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1104791   +         end;
MPRINT(EM_DIAGRAM):   end;
1104792   +      end;
MPRINT(EM_DIAGRAM):   end;
1104793   +   end;
MPRINT(EM_DIAGRAM):   end;
1104794   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1104795   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1104796   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1104797   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1104798   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1104799   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1104800   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1104801   +   end;
MPRINT(EM_DIAGRAM):   end;
1104802   +end;
MPRINT(EM_DIAGRAM):   end;
1104803   +
1104804   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1104805   +*** Checking missing input Interval
1104806   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1104807   +
1104808   +IF NMISS(
1104809   +   AcceptedCmpTotal ,
1104810   +   Age ,
1104811   +   Frq ,
1104812   +   Income ,
1104813   +   Kidhome ,
1104814   +   MntFishProducts ,
1104815   +   MntFruits ,
1104816   +   MntGoldProds ,
1104817   +   MntSweetProducts ,
1104818   +   MonthsAsCustomer ,
1104819   +   NumDealsPurchases ,
1104820   +   NumWebVisitsMonth ,
1104821   +   RFMstat ,
1104822   +   RMntFrq ,
1104823   +   Recency ,
1104824   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , 
MntFishProducts , MntFruits , MntGoldProds , MntSweetProducts , MonthsAsCustomer , 
NumDealsPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , Teenhome ) THEN DO;
1104825   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1104826   +
1104827   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1104828   +END;
MPRINT(EM_DIAGRAM):   END;
1104829   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1104830   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1104831   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1104832   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1104833   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1104834   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1104835   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1104836   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1104837   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1104838   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1104839   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1104840   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1104841   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1104842   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1104843   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1104844   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1104845   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1104846   +   S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
1104847   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
1104848   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1104849   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1104850   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1104851   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1104852   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1104853   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1104854   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1104855   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1104856   +END;
MPRINT(EM_DIAGRAM):   END;
1104857   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1104858   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1104859   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1104860   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1104861   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1104862   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1104863   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1104864   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1104865   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1104866   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1104867   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1104868   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1104869   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1104870   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1104871   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1104872   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1104873   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1104874   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1104875   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1104876   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1104877   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1104878   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1104879   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1104880   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1104881   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1104882   +   ELSE S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
1104883   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
1104884   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1104885   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1104886   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1104887   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1104888   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1104889   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1104890   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1104891   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1104892   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1104893   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1104894   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1104895   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1104896   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1104897   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1104898   +END;
MPRINT(EM_DIAGRAM):   END;
1104899   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1104900   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1104901   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1104902   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1104903   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1104904   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1104905   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1104906   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1104907   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1104908   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1104909   +   H11  =     0.00008202203841 * S_AcceptedCmpTotal  +    -0.13126483592154 *
1104910   +        S_Age  +    -0.18503379491116 * S_Frq  +      0.0037482920266 *
1104911   +        S_Income  +    -0.52684337240504 * S_Kidhome
1104912   +          +     0.07835956947085 * S_MntFishProducts
1104913   +          +    -0.04668308882455 * S_MntFruits  +     0.05311471984852 *
1104914   +        S_MntGoldProds  +    -0.39576933150762 * S_MntSweetProducts
1104915   +          +    -0.44463888327841 * S_MonthsAsCustomer
1104916   +          +    -0.20310227710644 * S_NumDealsPurchases
1104917   +          +     0.06594467408568 * S_NumWebVisitsMonth
1104918   +          +      0.1351556470497 * S_RFMstat  +    -0.29446460505048 *
1104919   +        S_RMntFrq  +    -0.68878207173764 * S_Recency
1104920   +          +    -0.29241927123525 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.00008202203841 * S_AcceptedCmpTotal + -0.13126483592154 * S_Age 
+ -0.18503379491116 * S_Frq + 0.0037482920266 * S_Income + -0.52684337240504 * S_Kidhome + 
0.07835956947085 * S_MntFishProducts + -0.04668308882455 * S_MntFruits + 0.05311471984852 * 
S_MntGoldProds + -0.39576933150762 * S_MntSweetProducts + -0.44463888327841 * 
S_MonthsAsCustomer + -0.20310227710644 * S_NumDealsPurchases + 0.06594467408568 * 
S_NumWebVisitsMonth + 0.1351556470497 * S_RFMstat + -0.29446460505048 * S_RMntFrq + 
-0.68878207173764 * S_Recency + -0.29241927123525 * S_Teenhome ;
1104921   +   H12  =     0.38864749644126 * S_AcceptedCmpTotal  +    -0.01077611135972 *
1104922   +        S_Age  +     0.24187074268223 * S_Frq  +     0.64180191864108 *
1104923   +        S_Income  +     0.91025818069308 * S_Kidhome
1104924   +          +     0.26585860774761 * S_MntFishProducts
1104925   +          +     -0.3087386188037 * S_MntFruits  +     0.14643568534568 *
1104926   +        S_MntGoldProds  +     0.23763200275034 * S_MntSweetProducts
1104927   +          +    -0.12421403342454 * S_MonthsAsCustomer
1104928   +          +     0.66931066909347 * S_NumDealsPurchases
1104929   +          +     0.35050056776957 * S_NumWebVisitsMonth
1104930   +          +     0.16127659142199 * S_RFMstat  +     0.04112742589329 *
1104931   +        S_RMntFrq  +    -0.83075146355987 * S_Recency
1104932   +          +    -0.37723917156575 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = 0.38864749644126 * S_AcceptedCmpTotal + -0.01077611135972 * S_Age 
+ 0.24187074268223 * S_Frq + 0.64180191864108 * S_Income + 0.91025818069308 * S_Kidhome + 
0.26585860774761 * S_MntFishProducts + -0.3087386188037 * S_MntFruits + 0.14643568534568 * 
S_MntGoldProds + 0.23763200275034 * S_MntSweetProducts + -0.12421403342454 * 
S_MonthsAsCustomer + 0.66931066909347 * S_NumDealsPurchases + 0.35050056776957 * 
S_NumWebVisitsMonth + 0.16127659142199 * S_RFMstat + 0.04112742589329 * S_RMntFrq + 
-0.83075146355987 * S_Recency + -0.37723917156575 * S_Teenhome ;
1104933   +   H13  =     0.02339384767281 * S_AcceptedCmpTotal  +    -0.17700567590774 *
1104934   +        S_Age  +    -0.38060509731554 * S_Frq  +    -0.86026143079344 *
1104935   +        S_Income  +     0.63027536562783 * S_Kidhome
1104936   +          +     0.15303249164566 * S_MntFishProducts
1104937   +          +    -0.04780128957622 * S_MntFruits  +    -0.02064261038049 *
1104938   +        S_MntGoldProds  +     0.26238383938455 * S_MntSweetProducts
1104939   +          +    -0.21006970062531 * S_MonthsAsCustomer
1104940   +          +      0.2955774677605 * S_NumDealsPurchases
1104941   +          +    -0.15769947513958 * S_NumWebVisitsMonth
1104942   +          +    -0.02874776268384 * S_RFMstat  +     -0.3955429869434 *
1104943   +        S_RMntFrq  +      0.3744122250079 * S_Recency
1104944   +          +     0.58295521976226 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = 0.02339384767281 * S_AcceptedCmpTotal + -0.17700567590774 * S_Age 
+ -0.38060509731554 * S_Frq + -0.86026143079344 * S_Income + 0.63027536562783 * S_Kidhome + 
0.15303249164566 * S_MntFishProducts + -0.04780128957622 * S_MntFruits + -0.02064261038049 * 
S_MntGoldProds + 0.26238383938455 * S_MntSweetProducts + -0.21006970062531 * 
S_MonthsAsCustomer + 0.2955774677605 * S_NumDealsPurchases + -0.15769947513958 * 
S_NumWebVisitsMonth + -0.02874776268384 * S_RFMstat + -0.3955429869434 * S_RMntFrq + 
0.3744122250079 * S_Recency + 0.58295521976226 * S_Teenhome ;
1104945   +   H14  =    -0.22800152627721 * S_AcceptedCmpTotal  +     0.27991667815594 *
1104946   +        S_Age  +     0.89001922321833 * S_Frq  +     0.17467731177386 *
1104947   +        S_Income  +    -0.00985947331416 * S_Kidhome
1104948   +          +    -0.27114701164817 * S_MntFishProducts
1104949   +          +     0.32554392037328 * S_MntFruits  +     0.06705670808471 *
1104950   +        S_MntGoldProds  +     -0.3590087223323 * S_MntSweetProducts
1104951   +          +    -0.02702818828921 * S_MonthsAsCustomer
1104952   +          +    -0.63381188911946 * S_NumDealsPurchases
1104953   +          +    -0.86143000704363 * S_NumWebVisitsMonth
1104954   +          +    -0.16788755655818 * S_RFMstat  +    -0.09712800982817 *
1104955   +        S_RMntFrq  +     0.61892338869919 * S_Recency
1104956   +          +    -0.21544816860839 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = -0.22800152627721 * S_AcceptedCmpTotal + 0.27991667815594 * S_Age 
+ 0.89001922321833 * S_Frq + 0.17467731177386 * S_Income + -0.00985947331416 * S_Kidhome + 
-0.27114701164817 * S_MntFishProducts + 0.32554392037328 * S_MntFruits + 0.06705670808471 * 
S_MntGoldProds + -0.3590087223323 * S_MntSweetProducts + -0.02702818828921 * 
S_MonthsAsCustomer + -0.63381188911946 * S_NumDealsPurchases + -0.86143000704363 * 
S_NumWebVisitsMonth + -0.16788755655818 * S_RFMstat + -0.09712800982817 * S_RMntFrq + 
0.61892338869919 * S_Recency + -0.21544816860839 * S_Teenhome ;
1104957   +   H15  =      0.0846389232492 * S_AcceptedCmpTotal  +    -0.03933692648164 *
1104958   +        S_Age  +     0.26004669807852 * S_Frq  +     0.30306661543325 *
1104959   +        S_Income  +    -0.24206929946772 * S_Kidhome
1104960   +          +    -0.19039689229491 * S_MntFishProducts
1104961   +          +    -0.22957509816007 * S_MntFruits  +    -0.35006912387254 *
1104962   +        S_MntGoldProds  +    -0.02737135204648 * S_MntSweetProducts
1104963   +          +     0.03815221487927 * S_MonthsAsCustomer
1104964   +          +    -0.43579024169696 * S_NumDealsPurchases
1104965   +          +    -0.27796253880432 * S_NumWebVisitsMonth
1104966   +          +     0.15010895791429 * S_RFMstat  +     0.24377797912725 *
1104967   +        S_RMntFrq  +     0.50547916383425 * S_Recency
1104968   +          +    -0.22622962943787 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H15 = 0.0846389232492 * S_AcceptedCmpTotal + -0.03933692648164 * S_Age + 
0.26004669807852 * S_Frq + 0.30306661543325 * S_Income + -0.24206929946772 * S_Kidhome + 
-0.19039689229491 * S_MntFishProducts + -0.22957509816007 * S_MntFruits + -0.35006912387254 * 
S_MntGoldProds + -0.02737135204648 * S_MntSweetProducts + 0.03815221487927 * 
S_MonthsAsCustomer + -0.43579024169696 * S_NumDealsPurchases + -0.27796253880432 * 
S_NumWebVisitsMonth + 0.15010895791429 * S_RFMstat + 0.24377797912725 * S_RMntFrq + 
0.50547916383425 * S_Recency + -0.22622962943787 * S_Teenhome ;
1104969   +   H16  =     0.03788304209102 * S_AcceptedCmpTotal  +    -0.27022676521755 *
1104970   +        S_Age  +    -0.17480141247917 * S_Frq  +     0.53345624791204 *
1104971   +        S_Income  +    -0.25736924536467 * S_Kidhome
1104972   +          +    -0.04400855145817 * S_MntFishProducts
1104973   +          +    -0.06651358259718 * S_MntFruits  +     -0.0117104183032 *
1104974   +        S_MntGoldProds  +    -0.02790266219853 * S_MntSweetProducts
1104975   +          +     0.00265986106691 * S_MonthsAsCustomer
1104976   +          +     0.27331919080312 * S_NumDealsPurchases
1104977   +          +     0.22836119952787 * S_NumWebVisitsMonth
1104978   +          +     0.09245783028838 * S_RFMstat  +     0.10223459152488 *
1104979   +        S_RMntFrq  +    -0.90398250269857 * S_Recency
1104980   +          +     -0.2621421532112 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H16 = 0.03788304209102 * S_AcceptedCmpTotal + -0.27022676521755 * S_Age 
+ -0.17480141247917 * S_Frq + 0.53345624791204 * S_Income + -0.25736924536467 * S_Kidhome + 
-0.04400855145817 * S_MntFishProducts + -0.06651358259718 * S_MntFruits + -0.0117104183032 * 
S_MntGoldProds + -0.02790266219853 * S_MntSweetProducts + 0.00265986106691 * 
S_MonthsAsCustomer + 0.27331919080312 * S_NumDealsPurchases + 0.22836119952787 * 
S_NumWebVisitsMonth + 0.09245783028838 * S_RFMstat + 0.10223459152488 * S_RMntFrq + 
-0.90398250269857 * S_Recency + -0.2621421532112 * S_Teenhome ;
1104981   +   H11  = H11  +     0.24155985997122 * AcceptedCmp10
1104982   +          +     0.02727843300562 * AcceptedCmp20  +     0.05990453920581 *
1104983   +        AcceptedCmp30  +    -0.43469138041411 * AcceptedCmp40
1104984   +          +     0.00076050589964 * AcceptedCmp50  +     0.43307119233671 *
1104985   +        Complain0  +     0.23242177664865 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.24155985997122 * AcceptedCmp10 + 0.02727843300562 * 
AcceptedCmp20 + 0.05990453920581 * AcceptedCmp30 + -0.43469138041411 * AcceptedCmp40 + 
0.00076050589964 * AcceptedCmp50 + 0.43307119233671 * Complain0 + 0.23242177664865 * 
HigherEducationBinary0 ;
1104986   +   H12  = H12  +     0.04034689771488 * AcceptedCmp10
1104987   +          +    -0.01358747117911 * AcceptedCmp20  +    -0.29883922116453 *
1104988   +        AcceptedCmp30  +     0.58794258522438 * AcceptedCmp40
1104989   +          +    -0.40659406037079 * AcceptedCmp50  +     0.59068991602469 *
1104990   +        Complain0  +     -0.3122461557933 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.04034689771488 * AcceptedCmp10 + -0.01358747117911 * 
AcceptedCmp20 + -0.29883922116453 * AcceptedCmp30 + 0.58794258522438 * AcceptedCmp40 + 
-0.40659406037079 * AcceptedCmp50 + 0.59068991602469 * Complain0 + -0.3122461557933 * 
HigherEducationBinary0 ;
1104991   +   H13  = H13  +     0.49941486221932 * AcceptedCmp10
1104992   +          +     0.42891153022885 * AcceptedCmp20  +     0.28744085742243 *
1104993   +        AcceptedCmp30  +     0.54657253664873 * AcceptedCmp40
1104994   +          +     0.10655487579255 * AcceptedCmp50  +     0.11223153893952 *
1104995   +        Complain0  +    -0.44704943665138 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.49941486221932 * AcceptedCmp10 + 0.42891153022885 * 
AcceptedCmp20 + 0.28744085742243 * AcceptedCmp30 + 0.54657253664873 * AcceptedCmp40 + 
0.10655487579255 * AcceptedCmp50 + 0.11223153893952 * Complain0 + -0.44704943665138 * 
HigherEducationBinary0 ;
1104996   +   H14  = H14  +     0.70510583713907 * AcceptedCmp10
1104997   +          +     0.04052111261969 * AcceptedCmp20  +     0.76301816100625 *
1104998   +        AcceptedCmp30  +     0.09753552533639 * AcceptedCmp40
1104999   +          +     0.40999088454383 * AcceptedCmp50  +     0.19278448059725 *
1105000   +        Complain0  +     0.09127136236268 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.70510583713907 * AcceptedCmp10 + 0.04052111261969 * 
AcceptedCmp20 + 0.76301816100625 * AcceptedCmp30 + 0.09753552533639 * AcceptedCmp40 + 
0.40999088454383 * AcceptedCmp50 + 0.19278448059725 * Complain0 + 0.09127136236268 * 
HigherEducationBinary0 ;
1105001   +   H15  = H15  +     0.30535300313392 * AcceptedCmp10
1105002   +          +    -0.01605332227631 * AcceptedCmp20  +     0.09278623651632 *
1105003   +        AcceptedCmp30  +     0.03468239765482 * AcceptedCmp40
1105004   +          +     0.19720723485806 * AcceptedCmp50  +    -0.32364247007443 *
1105005   +        Complain0  +    -0.20695533150084 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.30535300313392 * AcceptedCmp10 + -0.01605332227631 * 
AcceptedCmp20 + 0.09278623651632 * AcceptedCmp30 + 0.03468239765482 * AcceptedCmp40 + 
0.19720723485806 * AcceptedCmp50 + -0.32364247007443 * Complain0 + -0.20695533150084 * 
HigherEducationBinary0 ;
1105006   +   H16  = H16  +    -0.19354253973215 * AcceptedCmp10
1105007   +          +     0.01566685138596 * AcceptedCmp20  +    -0.28250218144785 *
1105008   +        AcceptedCmp30  +    -0.13118265240955 * AcceptedCmp40
1105009   +          +    -0.03808858956936 * AcceptedCmp50  +    -0.19850701105147 *
1105010   +        Complain0  +     0.14297616111345 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H16 = H16 + -0.19354253973215 * AcceptedCmp10 + 0.01566685138596 * 
AcceptedCmp20 + -0.28250218144785 * AcceptedCmp30 + -0.13118265240955 * AcceptedCmp40 + 
-0.03808858956936 * AcceptedCmp50 + -0.19850701105147 * Complain0 + 0.14297616111345 * 
HigherEducationBinary0 ;
1105011   +   H11  = H11  +     0.05082493200436 * Education2n_Cycle
1105012   +          +    -0.08192239267323 * EducationBasic  +    -0.01445849926378 *
1105013   +        EducationGraduation  +     0.01459143816519 * EducationMaster
1105014   +          +     0.12502276672336 * Marital_StatusDivorced
1105015   +          +    -0.02606508453741 * Marital_StatusMarried
1105016   +          +      0.0418850245266 * Marital_StatusSingle
1105017   +          +     0.02050996572132 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.05082493200436 * Education2n_Cycle + -0.08192239267323 * 
EducationBasic + -0.01445849926378 * EducationGraduation + 0.01459143816519 * EducationMaster 
+ 0.12502276672336 * Marital_StatusDivorced + -0.02606508453741 * Marital_StatusMarried + 
0.0418850245266 * Marital_StatusSingle + 0.02050996572132 * Marital_StatusTogether ;
1105018   +   H12  = H12  +     -0.1900759238575 * Education2n_Cycle
1105019   +          +     0.13535241443003 * EducationBasic  +    -0.00199771592906 *
1105020   +        EducationGraduation  +     0.00476193515914 * EducationMaster
1105021   +          +      0.1943860669795 * Marital_StatusDivorced
1105022   +          +     -0.1529596261268 * Marital_StatusMarried
1105023   +          +     0.24187461301348 * Marital_StatusSingle
1105024   +          +     0.09157538589749 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.1900759238575 * Education2n_Cycle + 0.13535241443003 * 
EducationBasic + -0.00199771592906 * EducationGraduation + 0.00476193515914 * EducationMaster 
+ 0.1943860669795 * Marital_StatusDivorced + -0.1529596261268 * Marital_StatusMarried + 
0.24187461301348 * Marital_StatusSingle + 0.09157538589749 * Marital_StatusTogether ;
1105025   +   H13  = H13  +     0.02140936656506 * Education2n_Cycle
1105026   +          +     0.05845427475503 * EducationBasic  +    -0.44298208278895 *
1105027   +        EducationGraduation  +     0.17149477011717 * EducationMaster
1105028   +          +    -0.19677652422622 * Marital_StatusDivorced
1105029   +          +     0.75897106429478 * Marital_StatusMarried
1105030   +          +    -0.66692260284833 * Marital_StatusSingle
1105031   +          +     0.58287349221333 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.02140936656506 * Education2n_Cycle + 0.05845427475503 * 
EducationBasic + -0.44298208278895 * EducationGraduation + 0.17149477011717 * EducationMaster 
+ -0.19677652422622 * Marital_StatusDivorced + 0.75897106429478 * Marital_StatusMarried + 
-0.66692260284833 * Marital_StatusSingle + 0.58287349221333 * Marital_StatusTogether ;
1105032   +   H14  = H14  +     0.18801855635785 * Education2n_Cycle
1105033   +          +    -0.06231007239836 * EducationBasic  +    -0.26915940640311 *
1105034   +        EducationGraduation  +    -0.30689797876717 * EducationMaster
1105035   +          +    -0.18964222971122 * Marital_StatusDivorced
1105036   +          +    -0.15222045956879 * Marital_StatusMarried
1105037   +          +     0.15455795695595 * Marital_StatusSingle
1105038   +          +    -0.04060840399479 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.18801855635785 * Education2n_Cycle + -0.06231007239836 * 
EducationBasic + -0.26915940640311 * EducationGraduation + -0.30689797876717 * EducationMaster 
+ -0.18964222971122 * Marital_StatusDivorced + -0.15222045956879 * Marital_StatusMarried + 
0.15455795695595 * Marital_StatusSingle + -0.04060840399479 * Marital_StatusTogether ;
1105039   +   H15  = H15  +    -0.12131367369042 * Education2n_Cycle
1105040   +          +     0.20547688844423 * EducationBasic  +     0.04965529549437 *
1105041   +        EducationGraduation  +    -0.21811990669176 * EducationMaster
1105042   +          +    -0.10122776921995 * Marital_StatusDivorced
1105043   +          +     0.14126755564161 * Marital_StatusMarried
1105044   +          +    -0.18463644418978 * Marital_StatusSingle
1105045   +          +     0.23071597384519 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + -0.12131367369042 * Education2n_Cycle + 0.20547688844423 * 
EducationBasic + 0.04965529549437 * EducationGraduation + -0.21811990669176 * EducationMaster 
+ -0.10122776921995 * Marital_StatusDivorced + 0.14126755564161 * Marital_StatusMarried + 
-0.18463644418978 * Marital_StatusSingle + 0.23071597384519 * Marital_StatusTogether ;
1105046   +   H16  = H16  +     0.02961881390411 * Education2n_Cycle
1105047   +          +    -0.46228434914367 * EducationBasic  +    -0.08513280071643 *
1105048   +        EducationGraduation  +    -0.20159542694386 * EducationMaster
1105049   +          +     0.05009431660662 * Marital_StatusDivorced
1105050   +          +    -0.38407798045329 * Marital_StatusMarried
1105051   +          +      0.3035257398654 * Marital_StatusSingle
1105052   +          +    -0.27725923319119 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.02961881390411 * Education2n_Cycle + -0.46228434914367 * 
EducationBasic + -0.08513280071643 * EducationGraduation + -0.20159542694386 * EducationMaster 
+ 0.05009431660662 * Marital_StatusDivorced + -0.38407798045329 * Marital_StatusMarried + 
0.3035257398654 * Marital_StatusSingle + -0.27725923319119 * Marital_StatusTogether ;
1105053   +   H11  =      1.3960587011002 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 1.3960587011002 + H11 ;
1105054   +   H12  =     0.18947019063375 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.18947019063375 + H12 ;
1105055   +   H13  =     0.55907472867898 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = 0.55907472867898 + H13 ;
1105056   +   H14  =     0.28336290184268 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 0.28336290184268 + H14 ;
1105057   +   H15  =     1.08919536550159 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = 1.08919536550159 + H15 ;
1105058   +   H16  =    -0.22538308534609 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = -0.22538308534609 + H16 ;
1105059   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1105060   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1105061   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1105062   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1105063   +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
1105064   +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
1105065   +END;
MPRINT(EM_DIAGRAM):   END;
1105066   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1105067   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1105068   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1105069   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1105070   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1105071   +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
1105072   +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
1105073   +END;
MPRINT(EM_DIAGRAM):   END;
1105074   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1105075   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1105076   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1105077   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1105078   +   P_DepVar1  =      1.1921632715983 * H11  +     2.38386446186622 * H12
1105079   +          +    -2.42409896638067 * H13  +    -2.19084949788904 * H14
1105080   +          +      -0.380575449439 * H15  +     1.17350595805971 * H16 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 1.1921632715983 * H11 + 2.38386446186622 * H12 + 
-2.42409896638067 * H13 + -2.19084949788904 * H14 + -0.380575449439 * H15 + 1.17350595805971 * 
H16 ;
1105081   +   P_DepVar1  =    -1.70154799161574 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.70154799161574 + P_DepVar1 ;
1105082   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1105083   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1105084   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1105085   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1105086   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1105087   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1105088   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1105089   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1105090   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1105091   +END;
MPRINT(EM_DIAGRAM):   END;
1105092   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1105093   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1105094   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1105095   +END;
MPRINT(EM_DIAGRAM):   END;
1105096   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1105097   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1105098   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1105099   +END;
MPRINT(EM_DIAGRAM):   END;
1105100   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1105101   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1105102   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1105103   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1105104   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1105105   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1105106   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1105107   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1105108   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1105109   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1105110   +END;
MPRINT(EM_DIAGRAM):   END;
1105111   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1105112   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1105113   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1105114   +drop
1105115   +H11
1105116   +H12
1105117   +H13
1105118   +H14
1105119   +H15
1105120   +H16
1105121   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 ;
1105122   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1105123    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1105124    quit;
1105125    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1105126    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1105127    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1105128    retain ID 2 Node "Neural41";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Neural41";
1105129    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1105130    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2183 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2183 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1105131    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1105132    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1105133    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2183 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2183 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1105134    proc sort data=EMWS8.Neural41_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Neural41_variableset out=_temp2(keep=NAME CREATOR);
1105135    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1105136    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.NEURAL41_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1105137    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1105138    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1105139    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1105140    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1105141    proc contents data=EMWS8.Neural41_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Neural41_train out=_meta(keep=NAME) noprint;
1105142    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

1105143    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1105144    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1105145    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 53 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1105146    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1105147    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1105148    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1105149    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 53 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1105150    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1105151    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1105151  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 1087 rows and 5 columns.

1105152    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1105153    proc append base=EMWS8.Ensmbl12_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl12_FCMP data=_tempx;
1105154    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL12_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 1087 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL12_FCMP has 1087 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1105155    filename _pref
1105155  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
1105156    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1105157    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
1105158   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1105159   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1105160   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1105161   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1105162   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1105163   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1105164    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1105165    quit;
1105166    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1105167    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1105168    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1105169    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
1105170    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1105171    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1105172    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1105173    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1105174    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1105175    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
1105176    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1105177    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1105178    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1105179    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1105180    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1105181    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1105182    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
1105183    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.04 seconds
      

1105184    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1105185    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1105186    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1105187    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1105188    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1105189    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1105190    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1105191    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1105192    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1105192  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

1105193    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1105194    proc append base=EMWS8.Ensmbl12_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl12_FCMP data=_tempx;
1105195    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL12_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL12_FCMP has 1091 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1105196    filename _pref
1105196  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
1105197    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1105198    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
1105199   +
1105200   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1105201   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1105201  !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1105202   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1105203   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1105204   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1105205   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1105206   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1105207    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1105208    quit;
1105209    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1105210    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1105211    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1105212    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
1105213    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1105214    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1105215    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1105216    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1105217    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1105218    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
1105219    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1105220    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1105221    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1105222    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1105223    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1105224    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1105225    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
1105226    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1105227    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1105228    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1105229    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1105230    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1105231    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1105232    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1105233    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1105234    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1105235    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1105235  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

1105236    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1105237    proc append base=EMWS8.Ensmbl12_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl12_FCMP data=_tempx;
1105238    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL12_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL12_FCMP has 1130 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1105239    filename _pref
1105239  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
1105240    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1105241    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
1105242   +
1105243   +
1105244   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
1105245   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
1105246   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
1105247   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
1105248   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
1105249   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1105250   +
1105251   +
1105252   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
1105253   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
1105254   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
1105255   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
1105256   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
1105257   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1105258   +
1105259   +
1105260   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
1105261   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
1105262   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
1105263   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
1105264   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
1105265   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1105266   +
1105267   +
1105268   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
1105269   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
1105270   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
1105271   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
1105272   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
1105273   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1105274   +
1105275   +
1105276   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
1105277   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
1105278   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
1105279   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
1105280   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
1105281   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1105282   +
1105283   +
1105284   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
1105285   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
1105286   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
1105287   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
1105288   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
1105289   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1105290   +
1105291   +
1105292   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
1105293   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
1105294   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
1105295   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
1105296   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
1105297   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1105298   +
1105299   +
1105300   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
1105301   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
1105302   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
1105303   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
1105304   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
1105305   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1105306   +if
1105307   +_FILTERNORM1 not in ( '.')
1105308   + and
1105309   +_FILTERNORM2 not in ( '.')
1105310   + and
1105311   +_FILTERNORM3 not in ( '.')
1105312   + and
1105313   +_FILTERNORM4 not in ( '.')
1105314   + and
1105315   +_FILTERNORM5 not in ( '.')
1105316   + and
1105317   +_FILTERNORM6 not in ( '.')
1105318   + and
1105319   +_FILTERNORM7 not in ( ' ')
1105320   + and
1105321   +_FILTERNORM8 not in ( ' ')
1105322   +and
1105323   +( Dt_Customer ne .)
1105324   +and ( Income ne . and (Income<=107000))
1105325   +and ( Kidhome ne .)
1105326   +and ( MntFishProducts ne .)
1105327   +and ( MntFruits ne .)
1105328   +and ( MntGoldProds ne .)
1105329   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
1105330   +and ( MntSweetProducts ne .)
1105331   +and ( MntWines ne .)
1105332   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
1105333   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
1105334   +and ( NumStorePurchases ne .)
1105335   +and ( NumWebPurchases ne .)
1105336   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
1105337   +and ( Recency ne .)
1105338   +and ( Teenhome ne .)
1105339   +and ( Year_Birth ne .)
1105340   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
1105341   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
1105342   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
1105343   +end;
MPRINT(EM_DIAGRAM):   end;
1105344   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
1105345   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1105346    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1105347    quit;
1105348    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1105349    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1105350    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1105351    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
1105352    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1105353    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1105354    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1105355    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1105356    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1105357    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
1105358    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1105359    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1105360    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1105361    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1105362    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1105363    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1105364    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
1105365    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

1105366    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1105367    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1105368    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1105369    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1105370    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1105371    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1105372    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1105373    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1105374    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1105374  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

1105375    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1105376    proc append base=EMWS8.Ensmbl12_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl12_FCMP data=_tempx;
1105377    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL12_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL12_FCMP has 1196 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1105378    %macro varDept(fcmpdata=,id=);
1105379    %global nobs&id scoreFlag&id;
1105380    %let scoreFlag&id = 0;
1105381    %if &id=1 or ^&fcmpStart %then %do;
1105382    proc sort data=&fcmpdata out=_temp&id nodupkey;
1105383    by NAME;
1105384    where id=&id and LHS in( %let j=1;
1105385    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
1105386    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
1105387    "&var" %let j = %eval(&j+1);
1105388    %end;
1105389    );
1105390    run;
1105391    %let dsid = %sysfunc(open(_temp&id));
1105392    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1105393    %let dsid = %sysfunc(close(&dsid));
1105394    %if &&nobs&id %then %do;
1105395    %let scoreFlag&id = 1;
1105396    %let fcmpStart = 1;
1105397    %end;
1105398    %else %let fcmpStart = 0;
1105399    %end;
1105400    %else %do;
1105401    proc sort data=&fcmpdata out=_tempid;
1105402    where id=&id;
1105403    by LHS;
1105404    run;
1105405    %let dsid = %sysfunc(open(_tempid));
1105406    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1105407    %let dsid = %sysfunc(close(&dsid));
1105408    %if ^&&nobs&id %then %do;
1105409    proc datasets lib=work nolist;
1105410    delete _tempid;
1105411    run;
1105412    quit;
1105413    %end;
1105414    %else %do;
1105415    data _tempAll;
1105416    set %let j=%eval(&id-1);
1105417    %do x=1 %to &j;
1105418    %if &&nobs&x %then %do;
1105419    _temp&x %end;
1105420    %end;
1105421    ;
1105422    run;
1105423    proc sql;
1105424    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
1105424  ! work._tempid p2 where p.name=p2.lhs;
1105425    quit;
1105426    data _temp&id;
1105427    set _temp&id;
1105428    where LHS ne '' and NAME ne '' and Node ne '';
1105429    run;
1105430    proc datasets lib=work nolist;
1105431    delete _tempAll;
1105432    run;
1105433    %let dsid = %sysfunc(open(_temp&id));
1105434    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1105435    %let dsid = %sysfunc(close(&dsid));
1105436    %if ^&&nobs&id %then %do;
1105437    proc datasets lib=work nolist;
1105438    delete _temp&id;
1105439    run;
1105440    quit;
1105441    %end;
1105442    %else %do;
1105443    %let scoreFlag&id = 1;
1105444    data _temp&id;
1105445    set _temp&id;
1105446    where LHS ne NAME and node ne '';
1105447    run;
1105448    %let dsid = %sysfunc(open(_temp&id));
1105449    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1105450    %let dsid = %sysfunc(close(&dsid));
1105451    %if ^&&nobs&id %then %do;
1105452    proc datasets lib=work nolist;
1105453    delete _temp&id;
1105454    run;
1105455    quit;
1105456    %end;
1105457    %else %do;
1105458    proc sort data=_temp&id nodupkey;
1105459    by LHS NAME;
1105460    run;
1105461    %end;
1105462    %end;
1105463    %end;
1105464    %end;
1105465    %mend varDept;
1105466    %macro optCode(outdata=fcmpdata);
1105467    %global fcmpStart;
1105468    %let fcmpStart = 0;
1105469    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
1105470    %let NumNodes=9;
1105471    %do k=1 %to &NumNodes;
1105472    %vardept(fcmpdata=&outdata, id=&k);
1105473    %end;
1105474    %mend optCode;
1105475    %optcode(outData=EMWS8.Ensmbl12_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl12_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL12_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl12_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 106 observations read from the data set EMWS8.ENSMBL12_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 79 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 27 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl12_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL12_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl12_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL12_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl12_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL12_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 27 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 2 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl12_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL12_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 29 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 33 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 33 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 33 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 33 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl12_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL12_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: There were 33 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 62 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl12_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL12_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl12_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL12_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

1105476    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
1105477    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1105478    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
1105479    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1105480    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
1105481    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1105482    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
1105483    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1105484    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1105485    create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
1105485  ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 2 rows and 3 columns.

1105486    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

1105487    data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
1105488    set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
1105489    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 2 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 2 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1105490    filename _pref
1105490  ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural36\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural36\EMPUBLISHSCORE.sas";
1105491    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1105492    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Neural36\EMPUBLISHSCORE.sas.
1105493   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1105494   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1105495   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1105496   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1105497   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1105498   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1105499   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1105500   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1105501   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1105502   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1105503   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1105504   +LENGTH _WARN_ $4
1105505   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
1105506   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1105507   +
1105508   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1105509   +
1105510   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1105511   +
1105512   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1105513   +
1105514   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1105515   +
1105516   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1105517   +
1105518   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1105519   +
1105520   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1105521   +
1105522   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1105523   +
1105524   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1105525   +
1105526   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1105527   +
1105528   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1105529   +
1105530   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1105531   +
1105532   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1105533   +
1105534   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1105535   +
1105536   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1105537   +
1105538   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1105539   +
1105540   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1105541   +
1105542   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1105543   +
1105544   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1105545   +
1105546   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1105547   +
1105548   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1105549   +
1105550   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1105551   +
1105552   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1105553   +
1105554   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1105555   +
1105556   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1105557   +
1105558   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1105559   +
1105560   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1105561   +
1105562   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1105563   +
1105564   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1105565   +
1105566   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1105567   +
1105568   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1105569   +
1105570   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1105571   +
1105572   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1105573   +
1105574   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1105575   +
1105576   +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
1105577   +
1105578   +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
1105579   +
1105580   +      label H17 = 'Hidden: H1=7' ;
MPRINT(EM_DIAGRAM):   label H17 = 'Hidden: H1=7' ;
1105581   +
1105582   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1105583   +
1105584   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1105585   +
1105586   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1105587   +
1105588   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1105589   +
1105590   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1105591   +
1105592   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1105593   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1105594   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1105595   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1105596   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1105597   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1105598   +end;
MPRINT(EM_DIAGRAM):   end;
1105599   +else do;
MPRINT(EM_DIAGRAM):   else do;
1105600   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1105601   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1105602   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1105603   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1105604   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1105605   +   end;
MPRINT(EM_DIAGRAM):   end;
1105606   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1105607   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1105608   +   end;
MPRINT(EM_DIAGRAM):   end;
1105609   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1105610   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1105611   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1105612   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1105613   +   end;
MPRINT(EM_DIAGRAM):   end;
1105614   +end;
MPRINT(EM_DIAGRAM):   end;
1105615   +
1105616   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1105617   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1105618   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1105619   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1105620   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1105621   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1105622   +end;
MPRINT(EM_DIAGRAM):   end;
1105623   +else do;
MPRINT(EM_DIAGRAM):   else do;
1105624   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1105625   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1105626   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1105627   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1105628   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1105629   +   end;
MPRINT(EM_DIAGRAM):   end;
1105630   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1105631   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1105632   +   end;
MPRINT(EM_DIAGRAM):   end;
1105633   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1105634   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1105635   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1105636   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1105637   +   end;
MPRINT(EM_DIAGRAM):   end;
1105638   +end;
MPRINT(EM_DIAGRAM):   end;
1105639   +
1105640   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1105641   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1105642   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1105643   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1105644   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1105645   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1105646   +end;
MPRINT(EM_DIAGRAM):   end;
1105647   +else do;
MPRINT(EM_DIAGRAM):   else do;
1105648   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1105649   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1105650   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1105651   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1105652   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1105653   +   end;
MPRINT(EM_DIAGRAM):   end;
1105654   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1105655   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1105656   +   end;
MPRINT(EM_DIAGRAM):   end;
1105657   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1105658   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1105659   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1105660   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1105661   +   end;
MPRINT(EM_DIAGRAM):   end;
1105662   +end;
MPRINT(EM_DIAGRAM):   end;
1105663   +
1105664   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1105665   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1105666   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1105667   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1105668   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1105669   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1105670   +end;
MPRINT(EM_DIAGRAM):   end;
1105671   +else do;
MPRINT(EM_DIAGRAM):   else do;
1105672   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1105673   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1105674   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1105675   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1105676   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1105677   +   end;
MPRINT(EM_DIAGRAM):   end;
1105678   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1105679   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1105680   +   end;
MPRINT(EM_DIAGRAM):   end;
1105681   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1105682   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1105683   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1105684   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1105685   +   end;
MPRINT(EM_DIAGRAM):   end;
1105686   +end;
MPRINT(EM_DIAGRAM):   end;
1105687   +
1105688   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1105689   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1105690   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1105691   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1105692   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1105693   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1105694   +end;
MPRINT(EM_DIAGRAM):   end;
1105695   +else do;
MPRINT(EM_DIAGRAM):   else do;
1105696   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1105697   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1105698   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1105699   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1105700   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1105701   +   end;
MPRINT(EM_DIAGRAM):   end;
1105702   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1105703   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1105704   +   end;
MPRINT(EM_DIAGRAM):   end;
1105705   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1105706   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1105707   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1105708   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1105709   +   end;
MPRINT(EM_DIAGRAM):   end;
1105710   +end;
MPRINT(EM_DIAGRAM):   end;
1105711   +
1105712   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1105713   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1105714   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1105715   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1105716   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1105717   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1105718   +end;
MPRINT(EM_DIAGRAM):   end;
1105719   +else do;
MPRINT(EM_DIAGRAM):   else do;
1105720   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1105721   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1105722   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1105723   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1105724   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1105725   +   end;
MPRINT(EM_DIAGRAM):   end;
1105726   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1105727   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1105728   +   end;
MPRINT(EM_DIAGRAM):   end;
1105729   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1105730   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1105731   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1105732   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1105733   +   end;
MPRINT(EM_DIAGRAM):   end;
1105734   +end;
MPRINT(EM_DIAGRAM):   end;
1105735   +
1105736   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1105737   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1105738   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1105739   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1105740   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1105741   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1105742   +end;
MPRINT(EM_DIAGRAM):   end;
1105743   +else do;
MPRINT(EM_DIAGRAM):   else do;
1105744   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1105745   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1105746   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1105747   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1105748   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1105749   +   end;
MPRINT(EM_DIAGRAM):   end;
1105750   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1105751   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1105752   +   end;
MPRINT(EM_DIAGRAM):   end;
1105753   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1105754   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1105755   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1105756   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1105757   +   end;
MPRINT(EM_DIAGRAM):   end;
1105758   +end;
MPRINT(EM_DIAGRAM):   end;
1105759   +
1105760   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1105761   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
1105762   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1105763   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1105764   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1105765   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1105766   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1105767   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1105768   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1105769   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1105770   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1105771   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1105772   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1105773   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1105774   +end;
MPRINT(EM_DIAGRAM):   end;
1105775   +else do;
MPRINT(EM_DIAGRAM):   else do;
1105776   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1105777   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1105778   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1105779   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1105780   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1105781   +   end;
MPRINT(EM_DIAGRAM):   end;
1105782   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1105783   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1105784   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1105785   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1105786   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1105787   +   end;
MPRINT(EM_DIAGRAM):   end;
1105788   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1105789   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1105790   +   end;
MPRINT(EM_DIAGRAM):   end;
1105791   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1105792   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1105793   +   end;
MPRINT(EM_DIAGRAM):   end;
1105794   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1105795   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1105796   +   end;
MPRINT(EM_DIAGRAM):   end;
1105797   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1105798   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1105799   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1105800   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1105801   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1105802   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1105803   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1105804   +   end;
MPRINT(EM_DIAGRAM):   end;
1105805   +end;
MPRINT(EM_DIAGRAM):   end;
1105806   +
1105807   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1105808   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1105809   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
1105810   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1105811   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1105812   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1105813   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1105814   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1105815   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1105816   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1105817   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1105818   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1105819   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1105820   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1105821   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1105822   +end;
MPRINT(EM_DIAGRAM):   end;
1105823   +else do;
MPRINT(EM_DIAGRAM):   else do;
1105824   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1105825   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1105826   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1105827   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1105828   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1105829   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1105830   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1105831   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1105832   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1105833   +         end;
MPRINT(EM_DIAGRAM):   end;
1105834   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1105835   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1105836   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1105837   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1105838   +            end;
MPRINT(EM_DIAGRAM):   end;
1105839   +         end;
MPRINT(EM_DIAGRAM):   end;
1105840   +      end;
MPRINT(EM_DIAGRAM):   end;
1105841   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1105842   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1105843   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1105844   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1105845   +         end;
MPRINT(EM_DIAGRAM):   end;
1105846   +      end;
MPRINT(EM_DIAGRAM):   end;
1105847   +   end;
MPRINT(EM_DIAGRAM):   end;
1105848   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1105849   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1105850   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1105851   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1105852   +      end;
MPRINT(EM_DIAGRAM):   end;
1105853   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1105854   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1105855   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1105856   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1105857   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1105858   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1105859   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1105860   +         end;
MPRINT(EM_DIAGRAM):   end;
1105861   +      end;
MPRINT(EM_DIAGRAM):   end;
1105862   +   end;
MPRINT(EM_DIAGRAM):   end;
1105863   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1105864   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1105865   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1105866   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1105867   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1105868   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1105869   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1105870   +   end;
MPRINT(EM_DIAGRAM):   end;
1105871   +end;
MPRINT(EM_DIAGRAM):   end;
1105872   +
1105873   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1105874   +*** Checking missing input Interval
1105875   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1105876   +
1105877   +IF NMISS(
1105878   +   AcceptedCmpTotal ,
1105879   +   Age ,
1105880   +   Frq ,
1105881   +   Income ,
1105882   +   Kidhome ,
1105883   +   MntFishProducts ,
1105884   +   MntFruits ,
1105885   +   MntGoldProds ,
1105886   +   MntSweetProducts ,
1105887   +   MonthsAsCustomer ,
1105888   +   NumDealsPurchases ,
1105889   +   NumWebVisitsMonth ,
1105890   +   RFMstat ,
1105891   +   RMntFrq ,
1105892   +   Recency ,
1105893   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , 
MntFishProducts , MntFruits , MntGoldProds , MntSweetProducts , MonthsAsCustomer , 
NumDealsPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , Teenhome ) THEN DO;
1105894   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1105895   +
1105896   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1105897   +END;
MPRINT(EM_DIAGRAM):   END;
1105898   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1105899   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1105900   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1105901   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1105902   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1105903   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1105904   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1105905   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1105906   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1105907   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1105908   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1105909   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1105910   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1105911   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1105912   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1105913   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1105914   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1105915   +   S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
1105916   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
1105917   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1105918   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1105919   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1105920   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1105921   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1105922   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1105923   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1105924   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1105925   +END;
MPRINT(EM_DIAGRAM):   END;
1105926   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1105927   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1105928   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1105929   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1105930   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1105931   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1105932   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1105933   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1105934   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1105935   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1105936   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1105937   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1105938   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1105939   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1105940   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1105941   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1105942   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1105943   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1105944   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1105945   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1105946   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1105947   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1105948   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1105949   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1105950   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1105951   +   ELSE S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
1105952   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
1105953   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1105954   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1105955   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1105956   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1105957   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1105958   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1105959   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1105960   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1105961   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1105962   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1105963   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1105964   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1105965   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1105966   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1105967   +END;
MPRINT(EM_DIAGRAM):   END;
1105968   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1105969   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1105970   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1105971   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1105972   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1105973   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1105974   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1105975   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1105976   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1105977   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1105978   +   H11  =     0.36102409886134 * S_AcceptedCmpTotal  +     0.13395156650326 *
1105979   +        S_Age  +    -0.24538302428059 * S_Frq  +    -0.11572058197557 *
1105980   +        S_Income  +     0.21790378443814 * S_Kidhome
1105981   +          +    -0.08134586316395 * S_MntFishProducts
1105982   +          +     -0.2688648060203 * S_MntFruits  +    -0.25880035211038 *
1105983   +        S_MntGoldProds  +     0.07531502626045 * S_MntSweetProducts
1105984   +          +     0.21726816930291 * S_MonthsAsCustomer
1105985   +          +    -0.21824241156847 * S_NumDealsPurchases
1105986   +          +     0.07727563921761 * S_NumWebVisitsMonth
1105987   +          +     0.09027808324069 * S_RFMstat  +     -0.0189462843628 *
1105988   +        S_RMntFrq  +     0.15658915596853 * S_Recency
1105989   +          +     0.18680606168417 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.36102409886134 * S_AcceptedCmpTotal + 0.13395156650326 * S_Age + 
-0.24538302428059 * S_Frq + -0.11572058197557 * S_Income + 0.21790378443814 * S_Kidhome + 
-0.08134586316395 * S_MntFishProducts + -0.2688648060203 * S_MntFruits + -0.25880035211038 * 
S_MntGoldProds + 0.07531502626045 * S_MntSweetProducts + 0.21726816930291 * S_MonthsAsCustomer 
+ -0.21824241156847 * S_NumDealsPurchases + 0.07727563921761 * S_NumWebVisitsMonth + 
0.09027808324069 * S_RFMstat + -0.0189462843628 * S_RMntFrq + 0.15658915596853 * S_Recency + 
0.18680606168417 * S_Teenhome ;
1105990   +   H12  =    -0.50461866181934 * S_AcceptedCmpTotal  +     0.01266437730767 *
1105991   +        S_Age  +     0.02534169432751 * S_Frq  +    -0.89441458532035 *
1105992   +        S_Income  +    -0.51036141680293 * S_Kidhome
1105993   +          +     0.10879858722875 * S_MntFishProducts
1105994   +          +    -0.05639987269313 * S_MntFruits  +    -0.43702228668285 *
1105995   +        S_MntGoldProds  +     0.18909754042399 * S_MntSweetProducts
1105996   +          +    -0.11392977531374 * S_MonthsAsCustomer
1105997   +          +     -0.5318843752274 * S_NumDealsPurchases
1105998   +          +    -0.65796537312585 * S_NumWebVisitsMonth
1105999   +          +    -0.29571612685484 * S_RFMstat  +     -0.0801458884647 *
1106000   +        S_RMntFrq  +     0.73429478940872 * S_Recency
1106001   +          +     0.28950334189528 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -0.50461866181934 * S_AcceptedCmpTotal + 0.01266437730767 * S_Age 
+ 0.02534169432751 * S_Frq + -0.89441458532035 * S_Income + -0.51036141680293 * S_Kidhome + 
0.10879858722875 * S_MntFishProducts + -0.05639987269313 * S_MntFruits + -0.43702228668285 * 
S_MntGoldProds + 0.18909754042399 * S_MntSweetProducts + -0.11392977531374 * 
S_MonthsAsCustomer + -0.5318843752274 * S_NumDealsPurchases + -0.65796537312585 * 
S_NumWebVisitsMonth + -0.29571612685484 * S_RFMstat + -0.0801458884647 * S_RMntFrq + 
0.73429478940872 * S_Recency + 0.28950334189528 * S_Teenhome ;
1106002   +   H13  =    -0.22612994964695 * S_AcceptedCmpTotal  +     0.04392639924073 *
1106003   +        S_Age  +     0.32974877429932 * S_Frq  +    -0.26990824722212 *
1106004   +        S_Income  +     0.59254092901621 * S_Kidhome
1106005   +          +    -0.20448500725841 * S_MntFishProducts
1106006   +          +     0.09904900315476 * S_MntFruits  +     0.33085368683805 *
1106007   +        S_MntGoldProds  +     0.19272280339022 * S_MntSweetProducts
1106008   +          +     0.75084411765835 * S_MonthsAsCustomer
1106009   +          +     -0.0387146296237 * S_NumDealsPurchases
1106010   +          +    -0.28387522584505 * S_NumWebVisitsMonth
1106011   +          +    -0.15204072409221 * S_RFMstat  +     0.09340123133096 *
1106012   +        S_RMntFrq  +     0.82636976290684 * S_Recency
1106013   +          +     0.37810091232378 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = -0.22612994964695 * S_AcceptedCmpTotal + 0.04392639924073 * S_Age 
+ 0.32974877429932 * S_Frq + -0.26990824722212 * S_Income + 0.59254092901621 * S_Kidhome + 
-0.20448500725841 * S_MntFishProducts + 0.09904900315476 * S_MntFruits + 0.33085368683805 * 
S_MntGoldProds + 0.19272280339022 * S_MntSweetProducts + 0.75084411765835 * S_MonthsAsCustomer 
+ -0.0387146296237 * S_NumDealsPurchases + -0.28387522584505 * S_NumWebVisitsMonth + 
-0.15204072409221 * S_RFMstat + 0.09340123133096 * S_RMntFrq + 0.82636976290684 * S_Recency + 
0.37810091232378 * S_Teenhome ;
1106014   +   H14  =    -0.30228547708859 * S_AcceptedCmpTotal  +     0.03241560550242 *
1106015   +        S_Age  +     0.84298653991521 * S_Frq  +     0.08457309547848 *
1106016   +        S_Income  +    -0.00122834275949 * S_Kidhome
1106017   +          +    -0.27566379985337 * S_MntFishProducts
1106018   +          +     0.22439349557664 * S_MntFruits  +     -0.2238462316234 *
1106019   +        S_MntGoldProds  +     0.10162320730644 * S_MntSweetProducts
1106020   +          +    -0.04164317708211 * S_MonthsAsCustomer
1106021   +          +    -0.69362879353268 * S_NumDealsPurchases
1106022   +          +    -0.42590146496797 * S_NumWebVisitsMonth
1106023   +          +    -0.14963136795323 * S_RFMstat  +    -0.12684701620224 *
1106024   +        S_RMntFrq  +     0.84758472963267 * S_Recency
1106025   +          +     0.11712588251204 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = -0.30228547708859 * S_AcceptedCmpTotal + 0.03241560550242 * S_Age 
+ 0.84298653991521 * S_Frq + 0.08457309547848 * S_Income + -0.00122834275949 * S_Kidhome + 
-0.27566379985337 * S_MntFishProducts + 0.22439349557664 * S_MntFruits + -0.2238462316234 * 
S_MntGoldProds + 0.10162320730644 * S_MntSweetProducts + -0.04164317708211 * 
S_MonthsAsCustomer + -0.69362879353268 * S_NumDealsPurchases + -0.42590146496797 * 
S_NumWebVisitsMonth + -0.14963136795323 * S_RFMstat + -0.12684701620224 * S_RMntFrq + 
0.84758472963267 * S_Recency + 0.11712588251204 * S_Teenhome ;
1106026   +   H15  =    -0.07826142783822 * S_AcceptedCmpTotal  +     0.02869519269506 *
1106027   +        S_Age  +     0.47709626753648 * S_Frq  +     0.77626478438802 *
1106028   +        S_Income  +    -0.52116533001423 * S_Kidhome
1106029   +          +     -0.0164127050263 * S_MntFishProducts
1106030   +          +    -0.21044074963391 * S_MntFruits  +    -0.01106715629962 *
1106031   +        S_MntGoldProds  +    -0.04742180634458 * S_MntSweetProducts
1106032   +          +     0.24190773546087 * S_MonthsAsCustomer
1106033   +          +    -0.20709839635746 * S_NumDealsPurchases
1106034   +          +    -0.03892039672539 * S_NumWebVisitsMonth
1106035   +          +     0.01844174922581 * S_RFMstat  +     0.33852543335405 *
1106036   +        S_RMntFrq  +    -0.44935213795722 * S_Recency
1106037   +          +     -0.6298368435821 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H15 = -0.07826142783822 * S_AcceptedCmpTotal + 0.02869519269506 * S_Age 
+ 0.47709626753648 * S_Frq + 0.77626478438802 * S_Income + -0.52116533001423 * S_Kidhome + 
-0.0164127050263 * S_MntFishProducts + -0.21044074963391 * S_MntFruits + -0.01106715629962 * 
S_MntGoldProds + -0.04742180634458 * S_MntSweetProducts + 0.24190773546087 * 
S_MonthsAsCustomer + -0.20709839635746 * S_NumDealsPurchases + -0.03892039672539 * 
S_NumWebVisitsMonth + 0.01844174922581 * S_RFMstat + 0.33852543335405 * S_RMntFrq + 
-0.44935213795722 * S_Recency + -0.6298368435821 * S_Teenhome ;
1106038   +   H16  =    -0.38278200147216 * S_AcceptedCmpTotal  +     0.10976543329989 *
1106039   +        S_Age  +    -0.17634499366273 * S_Frq  +    -0.00464219628456 *
1106040   +        S_Income  +     0.02656798188894 * S_Kidhome
1106041   +          +     0.30126647035438 * S_MntFishProducts
1106042   +          +    -0.15329042297108 * S_MntFruits  +     0.34485619618635 *
1106043   +        S_MntGoldProds  +    -0.02131109278943 * S_MntSweetProducts
1106044   +          +     0.02225077975252 * S_MonthsAsCustomer
1106045   +          +    -0.25574607065737 * S_NumDealsPurchases
1106046   +          +    -0.17649073415066 * S_NumWebVisitsMonth
1106047   +          +    -0.05940264496746 * S_RFMstat  +    -0.10060551243835 *
1106048   +        S_RMntFrq  +    -0.26823576982436 * S_Recency
1106049   +          +    -0.02089829217347 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H16 = -0.38278200147216 * S_AcceptedCmpTotal + 0.10976543329989 * S_Age 
+ -0.17634499366273 * S_Frq + -0.00464219628456 * S_Income + 0.02656798188894 * S_Kidhome + 
0.30126647035438 * S_MntFishProducts + -0.15329042297108 * S_MntFruits + 0.34485619618635 * 
S_MntGoldProds + -0.02131109278943 * S_MntSweetProducts + 0.02225077975252 * 
S_MonthsAsCustomer + -0.25574607065737 * S_NumDealsPurchases + -0.17649073415066 * 
S_NumWebVisitsMonth + -0.05940264496746 * S_RFMstat + -0.10060551243835 * S_RMntFrq + 
-0.26823576982436 * S_Recency + -0.02089829217347 * S_Teenhome ;
1106050   +   H17  =     0.19294816663728 * S_AcceptedCmpTotal  +    -0.36492507147362 *
1106051   +        S_Age  +     -0.5026822541815 * S_Frq  +    -0.48143237402929 *
1106052   +        S_Income  +     0.24859715564668 * S_Kidhome
1106053   +          +    -0.25170385966484 * S_MntFishProducts
1106054   +          +     0.32613161868695 * S_MntFruits  +     0.13394374893255 *
1106055   +        S_MntGoldProds  +     0.48416151380913 * S_MntSweetProducts
1106056   +          +     0.05219342683802 * S_MonthsAsCustomer
1106057   +          +     0.43291262348863 * S_NumDealsPurchases
1106058   +          +     0.56350506449265 * S_NumWebVisitsMonth
1106059   +          +     0.07050038692379 * S_RFMstat  +     0.09321760948671 *
1106060   +        S_RMntFrq  +      -0.582152401129 * S_Recency
1106061   +          +     0.37123217787922 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H17 = 0.19294816663728 * S_AcceptedCmpTotal + -0.36492507147362 * S_Age 
+ -0.5026822541815 * S_Frq + -0.48143237402929 * S_Income + 0.24859715564668 * S_Kidhome + 
-0.25170385966484 * S_MntFishProducts + 0.32613161868695 * S_MntFruits + 0.13394374893255 * 
S_MntGoldProds + 0.48416151380913 * S_MntSweetProducts + 0.05219342683802 * S_MonthsAsCustomer 
+ 0.43291262348863 * S_NumDealsPurchases + 0.56350506449265 * S_NumWebVisitsMonth + 
0.07050038692379 * S_RFMstat + 0.09321760948671 * S_RMntFrq + -0.582152401129 * S_Recency + 
0.37123217787922 * S_Teenhome ;
1106062   +   H11  = H11  +     0.19124500210188 * AcceptedCmp10
1106063   +          +    -0.07164186578541 * AcceptedCmp20  +     0.21783016367597 *
1106064   +        AcceptedCmp30  +     0.21148394728435 * AcceptedCmp40
1106065   +          +    -0.03026880266191 * AcceptedCmp50  +    -0.07201946966594 *
1106066   +        Complain0  +     0.01809478462337 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.19124500210188 * AcceptedCmp10 + -0.07164186578541 * 
AcceptedCmp20 + 0.21783016367597 * AcceptedCmp30 + 0.21148394728435 * AcceptedCmp40 + 
-0.03026880266191 * AcceptedCmp50 + -0.07201946966594 * Complain0 + 0.01809478462337 * 
HigherEducationBinary0 ;
1106067   +   H12  = H12  +    -0.08224648561215 * AcceptedCmp10
1106068   +          +    -0.04262229291512 * AcceptedCmp20  +     0.31730600734378 *
1106069   +        AcceptedCmp30  +    -0.50103336510524 * AcceptedCmp40
1106070   +          +     0.14654032457963 * AcceptedCmp50  +     -0.3081029727525 *
1106071   +        Complain0  +     0.33420373179467 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.08224648561215 * AcceptedCmp10 + -0.04262229291512 * 
AcceptedCmp20 + 0.31730600734378 * AcceptedCmp30 + -0.50103336510524 * AcceptedCmp40 + 
0.14654032457963 * AcceptedCmp50 + -0.3081029727525 * Complain0 + 0.33420373179467 * 
HigherEducationBinary0 ;
1106072   +   H13  = H13  +     -0.2675286852338 * AcceptedCmp10
1106073   +          +     0.00293684627092 * AcceptedCmp20  +     0.17042784679702 *
1106074   +        AcceptedCmp30  +    -0.03300348487228 * AcceptedCmp40
1106075   +          +     0.18139562224546 * AcceptedCmp50  +     -0.5876653777255 *
1106076   +        Complain0  +      -0.348312724013 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.2675286852338 * AcceptedCmp10 + 0.00293684627092 * 
AcceptedCmp20 + 0.17042784679702 * AcceptedCmp30 + -0.03300348487228 * AcceptedCmp40 + 
0.18139562224546 * AcceptedCmp50 + -0.5876653777255 * Complain0 + -0.348312724013 * 
HigherEducationBinary0 ;
1106077   +   H14  = H14  +     0.62345895952335 * AcceptedCmp10
1106078   +          +     0.06420128732689 * AcceptedCmp20  +     0.32944172885024 *
1106079   +        AcceptedCmp30  +    -0.04719511461619 * AcceptedCmp40
1106080   +          +     0.61833640682482 * AcceptedCmp50  +     -0.0006656764006 *
1106081   +        Complain0  +    -0.12356778452039 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.62345895952335 * AcceptedCmp10 + 0.06420128732689 * 
AcceptedCmp20 + 0.32944172885024 * AcceptedCmp30 + -0.04719511461619 * AcceptedCmp40 + 
0.61833640682482 * AcceptedCmp50 + -0.0006656764006 * Complain0 + -0.12356778452039 * 
HigherEducationBinary0 ;
1106082   +   H15  = H15  +    -0.43202592233127 * AcceptedCmp10
1106083   +          +    -0.35346067325701 * AcceptedCmp20  +    -0.29446055239371 *
1106084   +        AcceptedCmp30  +     -0.6355060868005 * AcceptedCmp40
1106085   +          +     0.08763000125481 * AcceptedCmp50  +    -0.55439066852712 *
1106086   +        Complain0  +     0.37078134908454 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + -0.43202592233127 * AcceptedCmp10 + -0.35346067325701 * 
AcceptedCmp20 + -0.29446055239371 * AcceptedCmp30 + -0.6355060868005 * AcceptedCmp40 + 
0.08763000125481 * AcceptedCmp50 + -0.55439066852712 * Complain0 + 0.37078134908454 * 
HigherEducationBinary0 ;
1106087   +   H16  = H16  +    -0.10522820178908 * AcceptedCmp10
1106088   +          +     0.20645125728354 * AcceptedCmp20  +     0.34040121966792 *
1106089   +        AcceptedCmp30  +    -0.02259616994399 * AcceptedCmp40
1106090   +          +    -0.22123397523195 * AcceptedCmp50  +    -0.37258892216723 *
1106091   +        Complain0  +     0.14107103807235 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H16 = H16 + -0.10522820178908 * AcceptedCmp10 + 0.20645125728354 * 
AcceptedCmp20 + 0.34040121966792 * AcceptedCmp30 + -0.02259616994399 * AcceptedCmp40 + 
-0.22123397523195 * AcceptedCmp50 + -0.37258892216723 * Complain0 + 0.14107103807235 * 
HigherEducationBinary0 ;
1106092   +   H17  = H17  +    -0.09096203784003 * AcceptedCmp10
1106093   +          +    -0.04735484605229 * AcceptedCmp20  +     -0.4485810761844 *
1106094   +        AcceptedCmp30  +     0.10362320405529 * AcceptedCmp40
1106095   +          +    -0.05214433990448 * AcceptedCmp50  +    -0.19339827696554 *
1106096   +        Complain0  +    -0.21246690264814 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H17 = H17 + -0.09096203784003 * AcceptedCmp10 + -0.04735484605229 * 
AcceptedCmp20 + -0.4485810761844 * AcceptedCmp30 + 0.10362320405529 * AcceptedCmp40 + 
-0.05214433990448 * AcceptedCmp50 + -0.19339827696554 * Complain0 + -0.21246690264814 * 
HigherEducationBinary0 ;
1106097   +   H11  = H11  +    -0.16759278562529 * Education2n_Cycle
1106098   +          +    -0.31449574789464 * EducationBasic  +     0.13281408830843 *
1106099   +        EducationGraduation  +      0.0199258483942 * EducationMaster
1106100   +          +     0.03245181998921 * Marital_StatusDivorced
1106101   +          +     0.29722741247663 * Marital_StatusMarried
1106102   +          +    -0.05683085497262 * Marital_StatusSingle
1106103   +          +     0.27914630307932 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.16759278562529 * Education2n_Cycle + -0.31449574789464 * 
EducationBasic + 0.13281408830843 * EducationGraduation + 0.0199258483942 * EducationMaster + 
0.03245181998921 * Marital_StatusDivorced + 0.29722741247663 * Marital_StatusMarried + 
-0.05683085497262 * Marital_StatusSingle + 0.27914630307932 * Marital_StatusTogether ;
1106104   +   H12  = H12  +    -0.10709422401859 * Education2n_Cycle
1106105   +          +     0.25457515905931 * EducationBasic  +    -0.26018740430941 *
1106106   +        EducationGraduation  +     0.05808954602972 * EducationMaster
1106107   +          +    -0.13095826187081 * Marital_StatusDivorced
1106108   +          +     0.29509760197193 * Marital_StatusMarried
1106109   +          +    -0.21019918550166 * Marital_StatusSingle
1106110   +          +     0.12557122666089 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.10709422401859 * Education2n_Cycle + 0.25457515905931 * 
EducationBasic + -0.26018740430941 * EducationGraduation + 0.05808954602972 * EducationMaster 
+ -0.13095826187081 * Marital_StatusDivorced + 0.29509760197193 * Marital_StatusMarried + 
-0.21019918550166 * Marital_StatusSingle + 0.12557122666089 * Marital_StatusTogether ;
1106111   +   H13  = H13  +     0.16189957128414 * Education2n_Cycle
1106112   +          +    -0.08593025695878 * EducationBasic  +     0.11065463845302 *
1106113   +        EducationGraduation  +    -0.23434271231945 * EducationMaster
1106114   +          +     0.03746692643939 * Marital_StatusDivorced
1106115   +          +     0.03482798841727 * Marital_StatusMarried
1106116   +          +     0.16645207250571 * Marital_StatusSingle
1106117   +          +    -0.40169040281111 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.16189957128414 * Education2n_Cycle + -0.08593025695878 * 
EducationBasic + 0.11065463845302 * EducationGraduation + -0.23434271231945 * EducationMaster 
+ 0.03746692643939 * Marital_StatusDivorced + 0.03482798841727 * Marital_StatusMarried + 
0.16645207250571 * Marital_StatusSingle + -0.40169040281111 * Marital_StatusTogether ;
1106118   +   H14  = H14  +      0.0929589076858 * Education2n_Cycle
1106119   +          +     0.17576896755796 * EducationBasic  +    -0.08548079761525 *
1106120   +        EducationGraduation  +     -0.0086494793343 * EducationMaster
1106121   +          +     -0.0753971504765 * Marital_StatusDivorced
1106122   +          +     0.20446719655724 * Marital_StatusMarried
1106123   +          +     0.21472836757686 * Marital_StatusSingle
1106124   +          +     0.25097210445128 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.0929589076858 * Education2n_Cycle + 0.17576896755796 * 
EducationBasic + -0.08548079761525 * EducationGraduation + -0.0086494793343 * EducationMaster 
+ -0.0753971504765 * Marital_StatusDivorced + 0.20446719655724 * Marital_StatusMarried + 
0.21472836757686 * Marital_StatusSingle + 0.25097210445128 * Marital_StatusTogether ;
1106125   +   H15  = H15  +     0.05613706593293 * Education2n_Cycle
1106126   +          +     0.15733773983498 * EducationBasic  +     0.18710928885666 *
1106127   +        EducationGraduation  +    -0.40226962940436 * EducationMaster
1106128   +          +     0.16191937298215 * Marital_StatusDivorced
1106129   +          +    -0.81780658848614 * Marital_StatusMarried
1106130   +          +     0.84981159748349 * Marital_StatusSingle
1106131   +          +    -0.81246154443713 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.05613706593293 * Education2n_Cycle + 0.15733773983498 * 
EducationBasic + 0.18710928885666 * EducationGraduation + -0.40226962940436 * EducationMaster 
+ 0.16191937298215 * Marital_StatusDivorced + -0.81780658848614 * Marital_StatusMarried + 
0.84981159748349 * Marital_StatusSingle + -0.81246154443713 * Marital_StatusTogether ;
1106132   +   H16  = H16  +    -0.15143146742513 * Education2n_Cycle
1106133   +          +    -0.32039616194876 * EducationBasic  +     0.14759493683433 *
1106134   +        EducationGraduation  +    -0.24148020292763 * EducationMaster
1106135   +          +    -0.01766312280073 * Marital_StatusDivorced
1106136   +          +     0.04455346003394 * Marital_StatusMarried
1106137   +          +    -0.05433982251127 * Marital_StatusSingle
1106138   +          +     0.07585750304293 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H16 = H16 + -0.15143146742513 * Education2n_Cycle + -0.32039616194876 * 
EducationBasic + 0.14759493683433 * EducationGraduation + -0.24148020292763 * EducationMaster 
+ -0.01766312280073 * Marital_StatusDivorced + 0.04455346003394 * Marital_StatusMarried + 
-0.05433982251127 * Marital_StatusSingle + 0.07585750304293 * Marital_StatusTogether ;
1106139   +   H17  = H17  +    -0.18844639887236 * Education2n_Cycle
1106140   +          +     0.31793429928185 * EducationBasic  +     0.21885580860665 *
1106141   +        EducationGraduation  +      0.1367538666381 * EducationMaster
1106142   +          +        0.22905595967 * Marital_StatusDivorced
1106143   +          +      0.1024998677695 * Marital_StatusMarried
1106144   +          +    -0.07752101768018 * Marital_StatusSingle
1106145   +          +    -0.19408218868635 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H17 = H17 + -0.18844639887236 * Education2n_Cycle + 0.31793429928185 * 
EducationBasic + 0.21885580860665 * EducationGraduation + 0.1367538666381 * EducationMaster + 
0.22905595967 * Marital_StatusDivorced + 0.1024998677695 * Marital_StatusMarried + 
-0.07752101768018 * Marital_StatusSingle + -0.19408218868635 * Marital_StatusTogether ;
1106146   +   H11  =     1.31548476078312 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 1.31548476078312 + H11 ;
1106147   +   H12  =     0.20389286508203 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.20389286508203 + H12 ;
1106148   +   H13  =    -0.77820109969785 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.77820109969785 + H13 ;
1106149   +   H14  =     0.85462770897247 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 0.85462770897247 + H14 ;
1106150   +   H15  =    -0.15190484788676 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = -0.15190484788676 + H15 ;
1106151   +   H16  =     -0.7146854381659 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = -0.7146854381659 + H16 ;
1106152   +   H17  =    -1.06220893322882 + H17 ;
MPRINT(EM_DIAGRAM):   H17 = -1.06220893322882 + H17 ;
1106153   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1106154   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1106155   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1106156   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1106157   +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
1106158   +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
1106159   +   H17  = TANH(H17 );
MPRINT(EM_DIAGRAM):   H17 = TANH(H17 );
1106160   +END;
MPRINT(EM_DIAGRAM):   END;
1106161   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1106162   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1106163   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1106164   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1106165   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1106166   +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
1106167   +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
1106168   +   H17  = .;
MPRINT(EM_DIAGRAM):   H17 = .;
1106169   +END;
MPRINT(EM_DIAGRAM):   END;
1106170   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1106171   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1106172   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1106173   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1106174   +   P_DepVar1  =    -0.11628699177184 * H11  +    -2.70843270240794 * H12
1106175   +          +    -1.81814079406916 * H13  +    -1.84852165774564 * H14
1106176   +          +     2.53533827620448 * H15  +    -0.20106950795136 * H16
1106177   +          +     1.26058098194871 * H17 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.11628699177184 * H11 + -2.70843270240794 * H12 + 
-1.81814079406916 * H13 + -1.84852165774564 * H14 + 2.53533827620448 * H15 + -0.20106950795136 
* H16 + 1.26058098194871 * H17 ;
1106178   +   P_DepVar1  =    -1.66152267043508 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.66152267043508 + P_DepVar1 ;
1106179   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1106180   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1106181   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1106182   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1106183   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1106184   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1106185   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1106186   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1106187   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1106188   +END;
MPRINT(EM_DIAGRAM):   END;
1106189   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1106190   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1106191   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1106192   +END;
MPRINT(EM_DIAGRAM):   END;
1106193   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1106194   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1106195   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1106196   +END;
MPRINT(EM_DIAGRAM):   END;
1106197   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1106198   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1106199   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1106200   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1106201   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1106202   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1106203   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1106204   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1106205   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1106206   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1106207   +END;
MPRINT(EM_DIAGRAM):   END;
1106208   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1106209   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1106210   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1106211   +drop
1106212   +H11
1106213   +H12
1106214   +H13
1106215   +H14
1106216   +H15
1106217   +H16
1106218   +H17
1106219   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 H17 ;
1106220   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1106221    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1106222    quit;
1106223    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1106224    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1106225    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1106226    retain ID 2 Node "Neural36";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Neural36";
1106227    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1106228    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2329 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2329 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1106229    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1106230    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1106231    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2329 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2329 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1106232    proc sort data=EMWS8.Neural36_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Neural36_variableset out=_temp2(keep=NAME CREATOR);
1106233    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1106234    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.NEURAL36_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.16 seconds
      cpu time            0.00 seconds
      

1106235    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1106236    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1106237    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1106238    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1106239    proc contents data=EMWS8.Neural36_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Neural36_train out=_meta(keep=NAME) noprint;
1106240    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

1106241    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1106242    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1106243    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 53 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1106244    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1106245    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1106246    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1106247    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 53 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1106248    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1106249    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1106249  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 1137 rows and 5 columns.

1106250    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1106251    proc append base=EMWS8.Ensmbl12_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl12_FCMP data=_tempx;
1106252    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL12_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 1137 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL12_FCMP has 1137 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1106253    filename _pref
1106253  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
1106254    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1106255    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
1106256   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1106257   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1106258   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1106259   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1106260   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1106261   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1106262    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1106263    quit;
1106264    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1106265    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1106266    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1106267    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
1106268    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1106269    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1106270    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1106271    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1106272    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1106273    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
1106274    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1106275    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1106276    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1106277    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1106278    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1106279    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1106280    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
1106281    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

1106282    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1106283    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1106284    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1106285    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1106286    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1106287    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1106288    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1106289    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1106290    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1106290  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

1106291    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1106292    proc append base=EMWS8.Ensmbl12_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl12_FCMP data=_tempx;
1106293    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL12_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL12_FCMP has 1141 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1106294    filename _pref
1106294  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
1106295    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1106296    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
1106297   +
1106298   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1106299   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1106299  !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1106300   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1106301   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1106302   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1106303   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1106304   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1106305    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1106306    quit;
1106307    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1106308    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1106309    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1106310    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
1106311    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1106312    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1106313    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1106314    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1106315    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1106316    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
1106317    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1106318    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1106319    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1106320    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1106321    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1106322    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1106323    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
1106324    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1106325    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1106326    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1106327    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1106328    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1106329    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1106330    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1106331    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1106332    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1106333    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1106333  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

1106334    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1106335    proc append base=EMWS8.Ensmbl12_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl12_FCMP data=_tempx;
1106336    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL12_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL12_FCMP has 1180 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1106337    filename _pref
1106337  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
1106338    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1106339    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
1106340   +
1106341   +
1106342   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
1106343   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
1106344   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
1106345   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
1106346   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
1106347   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1106348   +
1106349   +
1106350   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
1106351   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
1106352   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
1106353   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
1106354   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
1106355   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1106356   +
1106357   +
1106358   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
1106359   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
1106360   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
1106361   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
1106362   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
1106363   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1106364   +
1106365   +
1106366   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
1106367   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
1106368   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
1106369   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
1106370   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
1106371   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1106372   +
1106373   +
1106374   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
1106375   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
1106376   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
1106377   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
1106378   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
1106379   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1106380   +
1106381   +
1106382   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
1106383   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
1106384   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
1106385   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
1106386   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
1106387   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1106388   +
1106389   +
1106390   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
1106391   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
1106392   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
1106393   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
1106394   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
1106395   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1106396   +
1106397   +
1106398   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
1106399   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
1106400   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
1106401   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
1106402   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
1106403   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1106404   +if
1106405   +_FILTERNORM1 not in ( '.')
1106406   + and
1106407   +_FILTERNORM2 not in ( '.')
1106408   + and
1106409   +_FILTERNORM3 not in ( '.')
1106410   + and
1106411   +_FILTERNORM4 not in ( '.')
1106412   + and
1106413   +_FILTERNORM5 not in ( '.')
1106414   + and
1106415   +_FILTERNORM6 not in ( '.')
1106416   + and
1106417   +_FILTERNORM7 not in ( ' ')
1106418   + and
1106419   +_FILTERNORM8 not in ( ' ')
1106420   +and
1106421   +( Dt_Customer ne .)
1106422   +and ( Income ne . and (Income<=107000))
1106423   +and ( Kidhome ne .)
1106424   +and ( MntFishProducts ne .)
1106425   +and ( MntFruits ne .)
1106426   +and ( MntGoldProds ne .)
1106427   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
1106428   +and ( MntSweetProducts ne .)
1106429   +and ( MntWines ne .)
1106430   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
1106431   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
1106432   +and ( NumStorePurchases ne .)
1106433   +and ( NumWebPurchases ne .)
1106434   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
1106435   +and ( Recency ne .)
1106436   +and ( Teenhome ne .)
1106437   +and ( Year_Birth ne .)
1106438   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
1106439   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
1106440   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
1106441   +end;
MPRINT(EM_DIAGRAM):   end;
1106442   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
1106443   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1106444    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1106445    quit;
1106446    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1106447    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1106448    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1106449    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
1106450    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1106451    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1106452    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1106453    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1106454    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1106455    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
1106456    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1106457    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1106458    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1106459    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1106460    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1106461    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1106462    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
1106463    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

1106464    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1106465    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1106466    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1106467    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1106468    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1106469    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1106470    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1106471    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1106472    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1106472  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

1106473    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1106474    proc append base=EMWS8.Ensmbl12_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl12_FCMP data=_tempx;
1106475    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL12_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL12_FCMP has 1246 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1106476    %macro varDept(fcmpdata=,id=);
1106477    %global nobs&id scoreFlag&id;
1106478    %let scoreFlag&id = 0;
1106479    %if &id=1 or ^&fcmpStart %then %do;
1106480    proc sort data=&fcmpdata out=_temp&id nodupkey;
1106481    by NAME;
1106482    where id=&id and LHS in( %let j=1;
1106483    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
1106484    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
1106485    "&var" %let j = %eval(&j+1);
1106486    %end;
1106487    );
1106488    run;
1106489    %let dsid = %sysfunc(open(_temp&id));
1106490    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1106491    %let dsid = %sysfunc(close(&dsid));
1106492    %if &&nobs&id %then %do;
1106493    %let scoreFlag&id = 1;
1106494    %let fcmpStart = 1;
1106495    %end;
1106496    %else %let fcmpStart = 0;
1106497    %end;
1106498    %else %do;
1106499    proc sort data=&fcmpdata out=_tempid;
1106500    where id=&id;
1106501    by LHS;
1106502    run;
1106503    %let dsid = %sysfunc(open(_tempid));
1106504    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1106505    %let dsid = %sysfunc(close(&dsid));
1106506    %if ^&&nobs&id %then %do;
1106507    proc datasets lib=work nolist;
1106508    delete _tempid;
1106509    run;
1106510    quit;
1106511    %end;
1106512    %else %do;
1106513    data _tempAll;
1106514    set %let j=%eval(&id-1);
1106515    %do x=1 %to &j;
1106516    %if &&nobs&x %then %do;
1106517    _temp&x %end;
1106518    %end;
1106519    ;
1106520    run;
1106521    proc sql;
1106522    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
1106522  ! work._tempid p2 where p.name=p2.lhs;
1106523    quit;
1106524    data _temp&id;
1106525    set _temp&id;
1106526    where LHS ne '' and NAME ne '' and Node ne '';
1106527    run;
1106528    proc datasets lib=work nolist;
1106529    delete _tempAll;
1106530    run;
1106531    %let dsid = %sysfunc(open(_temp&id));
1106532    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1106533    %let dsid = %sysfunc(close(&dsid));
1106534    %if ^&&nobs&id %then %do;
1106535    proc datasets lib=work nolist;
1106536    delete _temp&id;
1106537    run;
1106538    quit;
1106539    %end;
1106540    %else %do;
1106541    %let scoreFlag&id = 1;
1106542    data _temp&id;
1106543    set _temp&id;
1106544    where LHS ne NAME and node ne '';
1106545    run;
1106546    %let dsid = %sysfunc(open(_temp&id));
1106547    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1106548    %let dsid = %sysfunc(close(&dsid));
1106549    %if ^&&nobs&id %then %do;
1106550    proc datasets lib=work nolist;
1106551    delete _temp&id;
1106552    run;
1106553    quit;
1106554    %end;
1106555    %else %do;
1106556    proc sort data=_temp&id nodupkey;
1106557    by LHS NAME;
1106558    run;
1106559    %end;
1106560    %end;
1106561    %end;
1106562    %end;
1106563    %mend varDept;
1106564    %macro optCode(outdata=fcmpdata);
1106565    %global fcmpStart;
1106566    %let fcmpStart = 0;
1106567    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
1106568    %let NumNodes=9;
1106569    %do k=1 %to &NumNodes;
1106570    %vardept(fcmpdata=&outdata, id=&k);
1106571    %end;
1106572    %mend optCode;
1106573    %optcode(outData=EMWS8.Ensmbl12_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl12_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL12_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl12_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 106 observations read from the data set EMWS8.ENSMBL12_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 79 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 27 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl12_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL12_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl12_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL12_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.07 seconds
      cpu time            0.06 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl12_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL12_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 27 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 2 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl12_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL12_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 29 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 33 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 33 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 33 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 33 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl12_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL12_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: There were 33 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 62 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl12_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL12_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl12_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL12_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

1106574    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
1106575    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1106576    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
1106577    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1106578    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
1106579    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1106580    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
1106581    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1106582    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1106583    create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
1106583  ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 2 rows and 3 columns.

1106584    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

1106585    data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
1106586    set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
1106587    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 2 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 2 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1106588    filename _pref
1106588  ! "C:\\predictive-models-project\Workspaces\EMWS8\Reg11\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Reg11\EMPUBLISHSCORE.sas";
1106589    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1106590    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Reg11\EMPUBLISHSCORE.sas.
1106591   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1106592   +*** begin scoring code for regression;
MPRINT(EM_DIAGRAM):   *** begin scoring code for regression;
1106593   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1106594   +
1106595   +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
1106596   +label _WARN_ = 'Warnings' ;
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings' ;
1106597   +
1106598   +length I_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length I_DepVar $ 12;
1106599   +label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1106600   +*** Target Values;
MPRINT(EM_DIAGRAM):   *** Target Values;
1106601   +array REG11DRF [2] $12 _temporary_ ('1' '0' );
MPRINT(EM_DIAGRAM):   array REG11DRF [2] $12 _temporary_ ('1' '0' );
1106602   +label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1106603   +format U_DepVar BEST.;
MPRINT(EM_DIAGRAM):   format U_DepVar BEST.;
1106604   +*** Unnormalized target values;
MPRINT(EM_DIAGRAM):   *** Unnormalized target values;
1106605   +ARRAY REG11DRU[2]  _TEMPORARY_ (1 0);
MPRINT(EM_DIAGRAM):   ARRAY REG11DRU[2] _TEMPORARY_ (1 0);
1106606   +
1106607   +drop _DM_BAD;
MPRINT(EM_DIAGRAM):   drop _DM_BAD;
1106608   +_DM_BAD=0;
MPRINT(EM_DIAGRAM):   _DM_BAD=0;
1106609   +
1106610   +*** Check AcceptedCmpTotal for missing values ;
MPRINT(EM_DIAGRAM):   *** Check AcceptedCmpTotal for missing values ;
1106611   +if missing( AcceptedCmpTotal ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmpTotal ) then do;
1106612   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1106613   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1106614   +end;
MPRINT(EM_DIAGRAM):   end;
1106615   +
1106616   +*** Check Age for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Age for missing values ;
1106617   +if missing( Age ) then do;
MPRINT(EM_DIAGRAM):   if missing( Age ) then do;
1106618   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1106619   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1106620   +end;
MPRINT(EM_DIAGRAM):   end;
1106621   +
1106622   +*** Check Frq for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Frq for missing values ;
1106623   +if missing( Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( Frq ) then do;
1106624   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1106625   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1106626   +end;
MPRINT(EM_DIAGRAM):   end;
1106627   +
1106628   +*** Check Income for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Income for missing values ;
1106629   +if missing( Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( Income ) then do;
1106630   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1106631   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1106632   +end;
MPRINT(EM_DIAGRAM):   end;
1106633   +
1106634   +*** Check NumDealsPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumDealsPurchases for missing values ;
1106635   +if missing( NumDealsPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumDealsPurchases ) then do;
1106636   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1106637   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1106638   +end;
MPRINT(EM_DIAGRAM):   end;
1106639   +
1106640   +*** Check NumWebVisitsMonth for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumWebVisitsMonth for missing values ;
1106641   +if missing( NumWebVisitsMonth ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumWebVisitsMonth ) then do;
1106642   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1106643   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1106644   +end;
MPRINT(EM_DIAGRAM):   end;
1106645   +
1106646   +*** Check RFMstat for missing values ;
MPRINT(EM_DIAGRAM):   *** Check RFMstat for missing values ;
1106647   +if missing( RFMstat ) then do;
MPRINT(EM_DIAGRAM):   if missing( RFMstat ) then do;
1106648   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1106649   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1106650   +end;
MPRINT(EM_DIAGRAM):   end;
1106651   +
1106652   +*** Check RMntFrq for missing values ;
MPRINT(EM_DIAGRAM):   *** Check RMntFrq for missing values ;
1106653   +if missing( RMntFrq ) then do;
MPRINT(EM_DIAGRAM):   if missing( RMntFrq ) then do;
1106654   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1106655   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1106656   +end;
MPRINT(EM_DIAGRAM):   end;
1106657   +
1106658   +*** Check Recency for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Recency for missing values ;
1106659   +if missing( Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( Recency ) then do;
1106660   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1106661   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1106662   +end;
MPRINT(EM_DIAGRAM):   end;
1106663   +
1106664   +*** Check Teenhome for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Teenhome for missing values ;
1106665   +if missing( Teenhome ) then do;
MPRINT(EM_DIAGRAM):   if missing( Teenhome ) then do;
1106666   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1106667   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1106668   +end;
MPRINT(EM_DIAGRAM):   end;
1106669   +
1106670   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1106671   +drop _3_0 ;
MPRINT(EM_DIAGRAM):   drop _3_0 ;
1106672   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1106673   +   _3_0 = .;
MPRINT(EM_DIAGRAM):   _3_0 = .;
1106674   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1106675   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1106676   +end;
MPRINT(EM_DIAGRAM):   end;
1106677   +else do;
MPRINT(EM_DIAGRAM):   else do;
1106678   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1106679   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1106680   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1106681   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1106682   +      _3_0 = 1;
MPRINT(EM_DIAGRAM):   _3_0 = 1;
1106683   +   end;
MPRINT(EM_DIAGRAM):   end;
1106684   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1106685   +      _3_0 = -1;
MPRINT(EM_DIAGRAM):   _3_0 = -1;
1106686   +   end;
MPRINT(EM_DIAGRAM):   end;
1106687   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1106688   +      _3_0 = .;
MPRINT(EM_DIAGRAM):   _3_0 = .;
1106689   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1106690   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1106691   +   end;
MPRINT(EM_DIAGRAM):   end;
1106692   +end;
MPRINT(EM_DIAGRAM):   end;
1106693   +
1106694   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1106695   +drop _4_0 ;
MPRINT(EM_DIAGRAM):   drop _4_0 ;
1106696   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1106697   +   _4_0 = .;
MPRINT(EM_DIAGRAM):   _4_0 = .;
1106698   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1106699   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1106700   +end;
MPRINT(EM_DIAGRAM):   end;
1106701   +else do;
MPRINT(EM_DIAGRAM):   else do;
1106702   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1106703   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1106704   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1106705   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1106706   +      _4_0 = 1;
MPRINT(EM_DIAGRAM):   _4_0 = 1;
1106707   +   end;
MPRINT(EM_DIAGRAM):   end;
1106708   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1106709   +      _4_0 = -1;
MPRINT(EM_DIAGRAM):   _4_0 = -1;
1106710   +   end;
MPRINT(EM_DIAGRAM):   end;
1106711   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1106712   +      _4_0 = .;
MPRINT(EM_DIAGRAM):   _4_0 = .;
1106713   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1106714   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1106715   +   end;
MPRINT(EM_DIAGRAM):   end;
1106716   +end;
MPRINT(EM_DIAGRAM):   end;
1106717   +
1106718   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1106719   +drop _9_0 _9_1 _9_2 _9_3 ;
MPRINT(EM_DIAGRAM):   drop _9_0 _9_1 _9_2 _9_3 ;
1106720   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1106721   +_9_0 = 0;
MPRINT(EM_DIAGRAM):   _9_0 = 0;
1106722   +_9_1 = 0;
MPRINT(EM_DIAGRAM):   _9_1 = 0;
1106723   +_9_2 = 0;
MPRINT(EM_DIAGRAM):   _9_2 = 0;
1106724   +_9_3 = 0;
MPRINT(EM_DIAGRAM):   _9_3 = 0;
1106725   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1106726   +   _9_0 = .;
MPRINT(EM_DIAGRAM):   _9_0 = .;
1106727   +   _9_1 = .;
MPRINT(EM_DIAGRAM):   _9_1 = .;
1106728   +   _9_2 = .;
MPRINT(EM_DIAGRAM):   _9_2 = .;
1106729   +   _9_3 = .;
MPRINT(EM_DIAGRAM):   _9_3 = .;
1106730   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1106731   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1106732   +end;
MPRINT(EM_DIAGRAM):   end;
1106733   +else do;
MPRINT(EM_DIAGRAM):   else do;
1106734   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1106735   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1106736   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1106737   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1106738   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1106739   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1106740   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1106741   +            _9_0 = 1;
MPRINT(EM_DIAGRAM):   _9_0 = 1;
1106742   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1106743   +         end;
MPRINT(EM_DIAGRAM):   end;
1106744   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1106745   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1106746   +               _9_1 = 1;
MPRINT(EM_DIAGRAM):   _9_1 = 1;
1106747   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1106748   +            end;
MPRINT(EM_DIAGRAM):   end;
1106749   +         end;
MPRINT(EM_DIAGRAM):   end;
1106750   +      end;
MPRINT(EM_DIAGRAM):   end;
1106751   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1106752   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1106753   +            _9_2 = 1;
MPRINT(EM_DIAGRAM):   _9_2 = 1;
1106754   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1106755   +         end;
MPRINT(EM_DIAGRAM):   end;
1106756   +      end;
MPRINT(EM_DIAGRAM):   end;
1106757   +   end;
MPRINT(EM_DIAGRAM):   end;
1106758   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1106759   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1106760   +         _9_3 = 1;
MPRINT(EM_DIAGRAM):   _9_3 = 1;
1106761   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1106762   +      end;
MPRINT(EM_DIAGRAM):   end;
1106763   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1106764   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1106765   +            _9_0 = -1;
MPRINT(EM_DIAGRAM):   _9_0 = -1;
1106766   +            _9_1 = -1;
MPRINT(EM_DIAGRAM):   _9_1 = -1;
1106767   +            _9_2 = -1;
MPRINT(EM_DIAGRAM):   _9_2 = -1;
1106768   +            _9_3 = -1;
MPRINT(EM_DIAGRAM):   _9_3 = -1;
1106769   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1106770   +         end;
MPRINT(EM_DIAGRAM):   end;
1106771   +      end;
MPRINT(EM_DIAGRAM):   end;
1106772   +   end;
MPRINT(EM_DIAGRAM):   end;
1106773   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1106774   +      _9_0 = .;
MPRINT(EM_DIAGRAM):   _9_0 = .;
1106775   +      _9_1 = .;
MPRINT(EM_DIAGRAM):   _9_1 = .;
1106776   +      _9_2 = .;
MPRINT(EM_DIAGRAM):   _9_2 = .;
1106777   +      _9_3 = .;
MPRINT(EM_DIAGRAM):   _9_3 = .;
1106778   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1106779   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1106780   +   end;
MPRINT(EM_DIAGRAM):   end;
1106781   +end;
MPRINT(EM_DIAGRAM):   end;
1106782   +
1106783   +*** If missing inputs, use averages;
MPRINT(EM_DIAGRAM):   *** If missing inputs, use averages;
1106784   +if _DM_BAD > 0 then do;
MPRINT(EM_DIAGRAM):   if _DM_BAD > 0 then do;
1106785   +   _P0 = 0.151221567;
MPRINT(EM_DIAGRAM):   _P0 = 0.151221567;
1106786   +   _P1 = 0.848778433;
MPRINT(EM_DIAGRAM):   _P1 = 0.848778433;
1106787   +   goto REG11DR1;
MPRINT(EM_DIAGRAM):   goto REG11DR1;
1106788   +end;
MPRINT(EM_DIAGRAM):   end;
1106789   +
1106790   +*** Compute Linear Predictor;
MPRINT(EM_DIAGRAM):   *** Compute Linear Predictor;
1106791   +drop _TEMP;
MPRINT(EM_DIAGRAM):   drop _TEMP;
1106792   +drop _LP0;
MPRINT(EM_DIAGRAM):   drop _LP0;
1106793   +_LP0 = 0;
MPRINT(EM_DIAGRAM):   _LP0 = 0;
1106794   +
1106795   +***  Effect: AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Effect: AcceptedCmp3 ;
1106796   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1106797   +_LP0 = _LP0 + (   -0.21402292491598) * _TEMP * _3_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.21402292491598) * _TEMP * _3_0;
1106798   +
1106799   +***  Effect: AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Effect: AcceptedCmp4 ;
1106800   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1106801   +_LP0 = _LP0 + (    0.20181176396468) * _TEMP * _4_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.20181176396468) * _TEMP * _4_0;
1106802   +
1106803   +***  Effect: AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   *** Effect: AcceptedCmpTotal ;
1106804   +_TEMP = AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   _TEMP = AcceptedCmpTotal ;
1106805   +_LP0 = _LP0 + (    1.01331254975906 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.01331254975906 * _TEMP);
1106806   +
1106807   +***  Effect: Age ;
MPRINT(EM_DIAGRAM):   *** Effect: Age ;
1106808   +_TEMP = Age ;
MPRINT(EM_DIAGRAM):   _TEMP = Age ;
1106809   +_LP0 = _LP0 + (   -0.00968312823761 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.00968312823761 * _TEMP);
1106810   +
1106811   +***  Effect: Frq ;
MPRINT(EM_DIAGRAM):   *** Effect: Frq ;
1106812   +_TEMP = Frq ;
MPRINT(EM_DIAGRAM):   _TEMP = Frq ;
1106813   +_LP0 = _LP0 + (   -0.03456417718144 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.03456417718144 * _TEMP);
1106814   +
1106815   +***  Effect: Income ;
MPRINT(EM_DIAGRAM):   *** Effect: Income ;
1106816   +_TEMP = Income ;
MPRINT(EM_DIAGRAM):   _TEMP = Income ;
1106817   +_LP0 = _LP0 + (    0.00002539988923 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00002539988923 * _TEMP);
1106818   +
1106819   +***  Effect: Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Effect: Marital_Status ;
1106820   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1106821   +_LP0 = _LP0 + (    0.11081046192241) * _TEMP * _9_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.11081046192241) * _TEMP * _9_0;
1106822   +_LP0 = _LP0 + (   -0.36385893866909) * _TEMP * _9_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.36385893866909) * _TEMP * _9_1;
1106823   +_LP0 = _LP0 + (    0.25486771612086) * _TEMP * _9_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.25486771612086) * _TEMP * _9_2;
1106824   +_LP0 = _LP0 + (   -0.40515143447522) * _TEMP * _9_3;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.40515143447522) * _TEMP * _9_3;
1106825   +
1106826   +***  Effect: NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumDealsPurchases ;
1106827   +_TEMP = NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumDealsPurchases ;
1106828   +_LP0 = _LP0 + (    0.21113804572457 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.21113804572457 * _TEMP);
1106829   +
1106830   +***  Effect: NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   *** Effect: NumWebVisitsMonth ;
1106831   +_TEMP = NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   _TEMP = NumWebVisitsMonth ;
1106832   +_LP0 = _LP0 + (    0.17412114550604 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.17412114550604 * _TEMP);
1106833   +
1106834   +***  Effect: RFMstat ;
MPRINT(EM_DIAGRAM):   *** Effect: RFMstat ;
1106835   +_TEMP = RFMstat ;
MPRINT(EM_DIAGRAM):   _TEMP = RFMstat ;
1106836   +_LP0 = _LP0 + (    0.00006841011087 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00006841011087 * _TEMP);
1106837   +
1106838   +***  Effect: RMntFrq ;
MPRINT(EM_DIAGRAM):   *** Effect: RMntFrq ;
1106839   +_TEMP = RMntFrq ;
MPRINT(EM_DIAGRAM):   _TEMP = RMntFrq ;
1106840   +_LP0 = _LP0 + (    0.00529455452809 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00529455452809 * _TEMP);
1106841   +
1106842   +***  Effect: Recency ;
MPRINT(EM_DIAGRAM):   *** Effect: Recency ;
1106843   +_TEMP = Recency ;
MPRINT(EM_DIAGRAM):   _TEMP = Recency ;
1106844   +_LP0 = _LP0 + (   -0.03257124268465 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.03257124268465 * _TEMP);
1106845   +
1106846   +***  Effect: Teenhome ;
MPRINT(EM_DIAGRAM):   *** Effect: Teenhome ;
1106847   +_TEMP = Teenhome ;
MPRINT(EM_DIAGRAM):   _TEMP = Teenhome ;
1106848   +_LP0 = _LP0 + (   -0.71325798797505 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.71325798797505 * _TEMP);
1106849   +
1106850   +*** Naive Posterior Probabilities;
MPRINT(EM_DIAGRAM):   *** Naive Posterior Probabilities;
1106851   +drop _MAXP _IY _P0 _P1;
MPRINT(EM_DIAGRAM):   drop _MAXP _IY _P0 _P1;
1106852   +_P0 = probnorm((   -2.04830407754231) + _LP0);
MPRINT(EM_DIAGRAM):   _P0 = probnorm(( -2.04830407754231) + _LP0);
1106853   +_P1 = 1.0 - _P0;
MPRINT(EM_DIAGRAM):   _P1 = 1.0 - _P0;
1106854   +
1106855   +REG11DR1:
1106856   +
1106857   +
1106858   +*** Posterior Probabilities and Predicted Level;
MPRINT(EM_DIAGRAM):   REG11DR1: *** Posterior Probabilities and Predicted Level;
1106859   +label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1106860   +label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1106861   +P_DepVar1 = _P0;
MPRINT(EM_DIAGRAM):   P_DepVar1 = _P0;
1106862   +_MAXP = _P0;
MPRINT(EM_DIAGRAM):   _MAXP = _P0;
1106863   +_IY = 1;
MPRINT(EM_DIAGRAM):   _IY = 1;
1106864   +P_DepVar0 = _P1;
MPRINT(EM_DIAGRAM):   P_DepVar0 = _P1;
1106865   +if (_P1 >  _MAXP + 1E-8) then do;
MPRINT(EM_DIAGRAM):   if (_P1 > _MAXP + 1E-8) then do;
1106866   +   _MAXP = _P1;
MPRINT(EM_DIAGRAM):   _MAXP = _P1;
1106867   +   _IY = 2;
MPRINT(EM_DIAGRAM):   _IY = 2;
1106868   +end;
MPRINT(EM_DIAGRAM):   end;
1106869   +I_DepVar = REG11DRF[_IY];
MPRINT(EM_DIAGRAM):   I_DepVar = REG11DRF[_IY];
1106870   +U_DepVar = REG11DRU[_IY];
MPRINT(EM_DIAGRAM):   U_DepVar = REG11DRU[_IY];
1106871   +
1106872   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1106873   +***** end scoring code for regression;
MPRINT(EM_DIAGRAM):   ***** end scoring code for regression;
1106874   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1106875    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1106876    quit;
1106877    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1106878    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1106879    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1106880    retain ID 2 Node "Reg11";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Reg11";
1106881    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1106882    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 342 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 342 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1106883    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1106884    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1106885    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 342 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 342 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1106886    proc sort data=EMWS8.Reg11_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Reg11_variableset out=_temp2(keep=NAME CREATOR);
1106887    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1106888    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.REG11_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1106889    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1106890    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1106891    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1106892    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1106893    proc contents data=EMWS8.Reg11_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Reg11_train out=_meta(keep=NAME) noprint;
1106894    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

1106895    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1106896    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1106897    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 53 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1106898    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1106899    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1106900    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1106901    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 53 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1106902    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1106903    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1106903  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 178 rows and 5 columns.

1106904    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1106905    proc append base=EMWS8.Ensmbl12_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl12_FCMP data=_tempx;
1106906    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL12_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 178 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL12_FCMP has 178 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1106907    filename _pref
1106907  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
1106908    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1106909    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
1106910   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1106911   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1106912   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1106913   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1106914   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1106915   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1106916    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1106917    quit;
1106918    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1106919    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1106920    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1106921    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
1106922    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1106923    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1106924    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1106925    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1106926    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1106927    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
1106928    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1106929    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1106930    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1106931    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1106932    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1106933    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1106934    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
1106935    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

1106936    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1106937    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1106938    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1106939    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1106940    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1106941    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1106942    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1106943    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1106944    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1106944  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

1106945    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1106946    proc append base=EMWS8.Ensmbl12_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl12_FCMP data=_tempx;
1106947    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL12_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL12_FCMP has 182 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1106948    filename _pref
1106948  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
1106949    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1106950    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
1106951   +
1106952   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1106953   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1106953  !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1106954   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1106955   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1106956   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1106957   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1106958   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1106959    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1106960    quit;
1106961    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1106962    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1106963    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1106964    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
1106965    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1106966    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1106967    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1106968    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1106969    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1106970    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
1106971    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1106972    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1106973    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1106974    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1106975    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1106976    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1106977    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
1106978    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1106979    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1106980    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1106981    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1106982    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1106983    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1106984    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1106985    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1106986    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1106987    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1106987  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

1106988    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1106989    proc append base=EMWS8.Ensmbl12_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl12_FCMP data=_tempx;
1106990    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL12_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL12_FCMP has 221 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1106991    filename _pref
1106991  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
1106992    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1106993    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
1106994   +
1106995   +
1106996   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
1106997   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
1106998   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
1106999   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
1107000   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
1107001   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1107002   +
1107003   +
1107004   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
1107005   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
1107006   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
1107007   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
1107008   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
1107009   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1107010   +
1107011   +
1107012   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
1107013   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
1107014   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
1107015   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
1107016   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
1107017   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1107018   +
1107019   +
1107020   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
1107021   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
1107022   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
1107023   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
1107024   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
1107025   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1107026   +
1107027   +
1107028   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
1107029   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
1107030   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
1107031   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
1107032   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
1107033   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1107034   +
1107035   +
1107036   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
1107037   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
1107038   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
1107039   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
1107040   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
1107041   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1107042   +
1107043   +
1107044   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
1107045   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
1107046   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
1107047   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
1107048   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
1107049   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1107050   +
1107051   +
1107052   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
1107053   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
1107054   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
1107055   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
1107056   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
1107057   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1107058   +if
1107059   +_FILTERNORM1 not in ( '.')
1107060   + and
1107061   +_FILTERNORM2 not in ( '.')
1107062   + and
1107063   +_FILTERNORM3 not in ( '.')
1107064   + and
1107065   +_FILTERNORM4 not in ( '.')
1107066   + and
1107067   +_FILTERNORM5 not in ( '.')
1107068   + and
1107069   +_FILTERNORM6 not in ( '.')
1107070   + and
1107071   +_FILTERNORM7 not in ( ' ')
1107072   + and
1107073   +_FILTERNORM8 not in ( ' ')
1107074   +and
1107075   +( Dt_Customer ne .)
1107076   +and ( Income ne . and (Income<=107000))
1107077   +and ( Kidhome ne .)
1107078   +and ( MntFishProducts ne .)
1107079   +and ( MntFruits ne .)
1107080   +and ( MntGoldProds ne .)
1107081   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
1107082   +and ( MntSweetProducts ne .)
1107083   +and ( MntWines ne .)
1107084   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
1107085   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
1107086   +and ( NumStorePurchases ne .)
1107087   +and ( NumWebPurchases ne .)
1107088   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
1107089   +and ( Recency ne .)
1107090   +and ( Teenhome ne .)
1107091   +and ( Year_Birth ne .)
1107092   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
1107093   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
1107094   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
1107095   +end;
MPRINT(EM_DIAGRAM):   end;
1107096   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
1107097   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1107098    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1107099    quit;
1107100    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1107101    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1107102    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1107103    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
1107104    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1107105    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1107106    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1107107    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1107108    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1107109    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
1107110    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1107111    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1107112    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1107113    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1107114    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1107115    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1107116    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
1107117    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

1107118    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1107119    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1107120    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1107121    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1107122    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1107123    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1107124    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1107125    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1107126    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1107126  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

1107127    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1107128    proc append base=EMWS8.Ensmbl12_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl12_FCMP data=_tempx;
1107129    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL12_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL12_FCMP has 287 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1107130    %macro varDept(fcmpdata=,id=);
1107131    %global nobs&id scoreFlag&id;
1107132    %let scoreFlag&id = 0;
1107133    %if &id=1 or ^&fcmpStart %then %do;
1107134    proc sort data=&fcmpdata out=_temp&id nodupkey;
1107135    by NAME;
1107136    where id=&id and LHS in( %let j=1;
1107137    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
1107138    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
1107139    "&var" %let j = %eval(&j+1);
1107140    %end;
1107141    );
1107142    run;
1107143    %let dsid = %sysfunc(open(_temp&id));
1107144    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1107145    %let dsid = %sysfunc(close(&dsid));
1107146    %if &&nobs&id %then %do;
1107147    %let scoreFlag&id = 1;
1107148    %let fcmpStart = 1;
1107149    %end;
1107150    %else %let fcmpStart = 0;
1107151    %end;
1107152    %else %do;
1107153    proc sort data=&fcmpdata out=_tempid;
1107154    where id=&id;
1107155    by LHS;
1107156    run;
1107157    %let dsid = %sysfunc(open(_tempid));
1107158    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1107159    %let dsid = %sysfunc(close(&dsid));
1107160    %if ^&&nobs&id %then %do;
1107161    proc datasets lib=work nolist;
1107162    delete _tempid;
1107163    run;
1107164    quit;
1107165    %end;
1107166    %else %do;
1107167    data _tempAll;
1107168    set %let j=%eval(&id-1);
1107169    %do x=1 %to &j;
1107170    %if &&nobs&x %then %do;
1107171    _temp&x %end;
1107172    %end;
1107173    ;
1107174    run;
1107175    proc sql;
1107176    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
1107176  ! work._tempid p2 where p.name=p2.lhs;
1107177    quit;
1107178    data _temp&id;
1107179    set _temp&id;
1107180    where LHS ne '' and NAME ne '' and Node ne '';
1107181    run;
1107182    proc datasets lib=work nolist;
1107183    delete _tempAll;
1107184    run;
1107185    %let dsid = %sysfunc(open(_temp&id));
1107186    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1107187    %let dsid = %sysfunc(close(&dsid));
1107188    %if ^&&nobs&id %then %do;
1107189    proc datasets lib=work nolist;
1107190    delete _temp&id;
1107191    run;
1107192    quit;
1107193    %end;
1107194    %else %do;
1107195    %let scoreFlag&id = 1;
1107196    data _temp&id;
1107197    set _temp&id;
1107198    where LHS ne NAME and node ne '';
1107199    run;
1107200    %let dsid = %sysfunc(open(_temp&id));
1107201    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1107202    %let dsid = %sysfunc(close(&dsid));
1107203    %if ^&&nobs&id %then %do;
1107204    proc datasets lib=work nolist;
1107205    delete _temp&id;
1107206    run;
1107207    quit;
1107208    %end;
1107209    %else %do;
1107210    proc sort data=_temp&id nodupkey;
1107211    by LHS NAME;
1107212    run;
1107213    %end;
1107214    %end;
1107215    %end;
1107216    %end;
1107217    %mend varDept;
1107218    %macro optCode(outdata=fcmpdata);
1107219    %global fcmpStart;
1107220    %let fcmpStart = 0;
1107221    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
1107222    %let NumNodes=9;
1107223    %do k=1 %to &NumNodes;
1107224    %vardept(fcmpdata=&outdata, id=&k);
1107225    %end;
1107226    %mend optCode;
1107227    %optcode(outData=EMWS8.Ensmbl12_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl12_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL12_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl12_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 52 observations read from the data set EMWS8.ENSMBL12_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 39 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 13 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl12_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL12_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl12_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL12_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl12_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL12_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 13 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 13 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp5;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP5 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl12_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL12_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 13 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 13 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 32 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 32 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 32 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 32 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 32 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 32 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 32 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl12_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL12_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 13 observations read from the data set WORK._TEMP2.
NOTE: There were 32 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 45 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl12_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL12_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl12_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL12_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

1107228    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
1107229    * Ensmbl12: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * Ensmbl12: Computing metadata for TRAIN data;
1107230    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;

NOTE: View EMWS8.ENSMBL12_TRAIN.VIEW used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
      
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta 
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl12\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS8.Ensmbl12_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS8.Ensmbl12_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS8.Ensmbl12_TRAIN out=WORK.M06GR1D8 noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M06GR1D8;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20 
INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M06GR1D8(keep=name type length label format formatl 
formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then format = strip(format)!!strip(put(formatl, 
best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, 
best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then informat = 
strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, 
best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M06GR1D8;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M06GR1D8;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M00FG548 NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M00FG548;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M00FG548;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3MX6CFM(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M00FG548;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M00FG548;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 
FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M00FG548;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" 
"MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" 
"QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" "YEAR" "YYMMDD" "YYMON" 
"YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" 
"EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) 
formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = 
"DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) 
formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" 
"NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" 
"SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = 
"DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then 
level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 
'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 
'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ 
('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 
'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 
'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M00FG548;
MPRINT(EMADVISECOLUMNS):   set WORK.M00FG548;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= 
"Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= 
"Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower limit" UPPERLIMIT= 
"Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= 
"Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Reg12_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Reg12_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl12_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT 
LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "Ensmbl12";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("DEPVAR") model = "Ensmbl12";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl12: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   if NAME in( "I_DepVar" "F_DepVar" "U_DepVar" "_WARN_" "P_DepVar1" 
"P_DepVar0" "R_DepVar1" "R_DepVar0" ) then CREATOR="Ensmbl12";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
1107542    data EMWS8.Ensmbl12_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS8.Ensmbl12_EMINFO;
1107543    length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
1107544    input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
1107545    cards;
MPRINT(EM_DIAGRAM):   cards;

NOTE: The data set EMWS8.ENSMBL12_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   run;
1107549    run;
1107550    proc sort data = EMWS8.Ensmbl12_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS8.Ensmbl12_EMINFO NOTHREADS;
1107551    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
1107552    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.ENSMBL12_EMINFO.
NOTE: The data set EMWS8.ENSMBL12_EMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1107553    proc sort data = EMWS8.Reg12_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.Reg12_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
1107554    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
1107555    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set EMWS8.REG12_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1107556    proc sort data = EMWS8.Ensmbl12_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS8.Ensmbl12_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
1107557    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
1107558    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 3 observations read from the data set EMWS8.ENSMBL12_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1107559    data EMWS8.Ensmbl12_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl12_EMINFO;
1107560    merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
1107561    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
1107562    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 3 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS8.ENSMBL12_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1107563    proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
1107564    delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
1107565    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
1107566    quit;
MPRINT(EM_DIAGRAM):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

NOTE: View EMWS8.ENSMBL12_TRAIN.VIEW used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
      
NOTE: View EMWS8.ENSMBL12_VALIDATE.VIEW used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
