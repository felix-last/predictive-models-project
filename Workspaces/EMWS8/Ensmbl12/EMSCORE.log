MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "19. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "17.29 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                19. April 2016
Time:                17.29 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O0MQHMN0 
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl12\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O0MQHMN0 new;
MPRINT(EM_DIAGRAM):   run;
1203691    filename emflow
1203691  ! "C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl12\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl12\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl12: Scoring NEURAL42_TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1203692    *------------------------------------------------------------*;
1203693    * Ensmbl12: Scoring NEURAL42_TRAIN data;
1203694    *------------------------------------------------------------*;
1203695    data EMWS8.Ensmbl12_TRAIN
1203696    / view=EMWS8.Ensmbl12_TRAIN
1203697    ;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl12_TRAIN / view=EMWS8.Ensmbl12_TRAIN ;
1203698    set EMWS8.Neural42_TRAIN
1203699    ;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural42_TRAIN ;
1203700    %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl12\EMFLOWSCORE.sas.
1203701   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1203702   +* Ensmbl12: Combine model for DepVar;
MPRINT(EM_DIAGRAM):   * Ensmbl12: Combine model for DepVar;
1203703   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1203704   +* Ensmbl12: Scoring Code of model 1 of 10;
MPRINT(EM_DIAGRAM):   * Ensmbl12: Scoring Code of model 1 of 10;
1203705   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1203706   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1203707   +* TOOL: Extension Class;
MPRINT(EM_DIAGRAM):   * TOOL: Extension Class;
1203708   +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
1203709   +* NODE: FIMPORT;
MPRINT(EM_DIAGRAM):   * NODE: FIMPORT;
1203710   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1203711   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1203712   +* TOOL: Statistics Exploration;
MPRINT(EM_DIAGRAM):   * TOOL: Statistics Exploration;
1203713   +* TYPE: EXPLORE;
MPRINT(EM_DIAGRAM):   * TYPE: EXPLORE;
1203714   +* NODE: Stat;
MPRINT(EM_DIAGRAM):   * NODE: Stat;
1203715   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1203716   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1203717   +* TOOL: Filtering;
MPRINT(EM_DIAGRAM):   * TOOL: Filtering;
1203718   +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
1203719   +* NODE: Filter;
MPRINT(EM_DIAGRAM):   * NODE: Filter;
1203720   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1203721   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1203722   +* TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
MPRINT(EM_DIAGRAM):   * TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
1203723   +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
1203724   +* NODE: EMCODE4;
MPRINT(EM_DIAGRAM):   * NODE: EMCODE4;
1203725   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1203726   +
1203727   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1203728   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1203728  !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1203729   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1203730   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1203731   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1203732   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1203733   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
1203734   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1203735   +* TOOL: Transform;
MPRINT(EM_DIAGRAM):   * TOOL: Transform;
1203736   +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
1203737   +* NODE: Trans;
MPRINT(EM_DIAGRAM):   * NODE: Trans;
1203738   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1203739   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1203740   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1203741   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1203742   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1203743   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1203744   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
1203745   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1203746   +* TOOL: Partition Class;
MPRINT(EM_DIAGRAM):   * TOOL: Partition Class;
1203747   +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
1203748   +* NODE: Part;
MPRINT(EM_DIAGRAM):   * NODE: Part;
1203749   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1203750   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1203751   +* TOOL: Metadata Node;
MPRINT(EM_DIAGRAM):   * TOOL: Metadata Node;
1203752   +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
1203753   +* NODE: Meta3;
MPRINT(EM_DIAGRAM):   * NODE: Meta3;
1203754   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1203755   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1203756   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
1203757   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1203758   +* NODE: Neural42;
MPRINT(EM_DIAGRAM):   * NODE: Neural42;
1203759   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1203760   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1203761   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1203762   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1203763   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1203764   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1203765   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1203766   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1203767   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1203768   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1203769   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1203770   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1203771   +LENGTH _WARN_ $4
1203772   +      F_DepVar  $ 12
1203773   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1203774   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1203775   +
1203776   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1203777   +
1203778   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1203779   +
1203780   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1203781   +
1203782   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1203783   +
1203784   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1203785   +
1203786   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1203787   +
1203788   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1203789   +
1203790   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1203791   +
1203792   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1203793   +
1203794   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1203795   +
1203796   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1203797   +
1203798   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1203799   +
1203800   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1203801   +
1203802   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1203803   +
1203804   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1203805   +
1203806   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1203807   +
1203808   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1203809   +
1203810   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1203811   +
1203812   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1203813   +
1203814   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1203815   +
1203816   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1203817   +
1203818   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1203819   +
1203820   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1203821   +
1203822   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1203823   +
1203824   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1203825   +
1203826   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1203827   +
1203828   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1203829   +
1203830   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1203831   +
1203832   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1203833   +
1203834   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1203835   +
1203836   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1203837   +
1203838   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1203839   +
1203840   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1203841   +
1203842   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1203843   +
1203844   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1203845   +
1203846   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1203847   +
1203848   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1203849   +
1203850   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1203851   +
1203852   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1203853   +
1203854   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1203855   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1203856   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1203857   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1203858   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1203859   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1203860   +end;
MPRINT(EM_DIAGRAM):   end;
1203861   +else do;
MPRINT(EM_DIAGRAM):   else do;
1203862   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1203863   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1203864   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1203865   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1203866   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1203867   +   end;
MPRINT(EM_DIAGRAM):   end;
1203868   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1203869   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1203870   +   end;
MPRINT(EM_DIAGRAM):   end;
1203871   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1203872   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1203873   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1203874   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1203875   +   end;
MPRINT(EM_DIAGRAM):   end;
1203876   +end;
MPRINT(EM_DIAGRAM):   end;
1203877   +
1203878   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1203879   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1203880   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1203881   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1203882   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1203883   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1203884   +end;
MPRINT(EM_DIAGRAM):   end;
1203885   +else do;
MPRINT(EM_DIAGRAM):   else do;
1203886   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1203887   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1203888   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1203889   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1203890   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1203891   +   end;
MPRINT(EM_DIAGRAM):   end;
1203892   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1203893   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1203894   +   end;
MPRINT(EM_DIAGRAM):   end;
1203895   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1203896   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1203897   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1203898   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1203899   +   end;
MPRINT(EM_DIAGRAM):   end;
1203900   +end;
MPRINT(EM_DIAGRAM):   end;
1203901   +
1203902   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1203903   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1203904   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1203905   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1203906   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1203907   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1203908   +end;
MPRINT(EM_DIAGRAM):   end;
1203909   +else do;
MPRINT(EM_DIAGRAM):   else do;
1203910   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1203911   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1203912   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1203913   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1203914   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1203915   +   end;
MPRINT(EM_DIAGRAM):   end;
1203916   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1203917   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1203918   +   end;
MPRINT(EM_DIAGRAM):   end;
1203919   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1203920   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1203921   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1203922   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1203923   +   end;
MPRINT(EM_DIAGRAM):   end;
1203924   +end;
MPRINT(EM_DIAGRAM):   end;
1203925   +
1203926   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1203927   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1203928   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1203929   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1203930   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1203931   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1203932   +end;
MPRINT(EM_DIAGRAM):   end;
1203933   +else do;
MPRINT(EM_DIAGRAM):   else do;
1203934   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1203935   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1203936   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1203937   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1203938   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1203939   +   end;
MPRINT(EM_DIAGRAM):   end;
1203940   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1203941   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1203942   +   end;
MPRINT(EM_DIAGRAM):   end;
1203943   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1203944   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1203945   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1203946   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1203947   +   end;
MPRINT(EM_DIAGRAM):   end;
1203948   +end;
MPRINT(EM_DIAGRAM):   end;
1203949   +
1203950   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1203951   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1203952   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1203953   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1203954   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1203955   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1203956   +end;
MPRINT(EM_DIAGRAM):   end;
1203957   +else do;
MPRINT(EM_DIAGRAM):   else do;
1203958   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1203959   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1203960   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1203961   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1203962   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1203963   +   end;
MPRINT(EM_DIAGRAM):   end;
1203964   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1203965   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1203966   +   end;
MPRINT(EM_DIAGRAM):   end;
1203967   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1203968   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1203969   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1203970   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1203971   +   end;
MPRINT(EM_DIAGRAM):   end;
1203972   +end;
MPRINT(EM_DIAGRAM):   end;
1203973   +
1203974   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1203975   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1203976   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1203977   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1203978   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1203979   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1203980   +end;
MPRINT(EM_DIAGRAM):   end;
1203981   +else do;
MPRINT(EM_DIAGRAM):   else do;
1203982   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1203983   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1203984   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1203985   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1203986   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1203987   +   end;
MPRINT(EM_DIAGRAM):   end;
1203988   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1203989   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1203990   +   end;
MPRINT(EM_DIAGRAM):   end;
1203991   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1203992   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1203993   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1203994   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1203995   +   end;
MPRINT(EM_DIAGRAM):   end;
1203996   +end;
MPRINT(EM_DIAGRAM):   end;
1203997   +
1203998   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1203999   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1204000   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1204001   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1204002   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1204003   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1204004   +end;
MPRINT(EM_DIAGRAM):   end;
1204005   +else do;
MPRINT(EM_DIAGRAM):   else do;
1204006   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1204007   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1204008   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1204009   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1204010   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1204011   +   end;
MPRINT(EM_DIAGRAM):   end;
1204012   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1204013   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1204014   +   end;
MPRINT(EM_DIAGRAM):   end;
1204015   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1204016   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1204017   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1204018   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1204019   +   end;
MPRINT(EM_DIAGRAM):   end;
1204020   +end;
MPRINT(EM_DIAGRAM):   end;
1204021   +
1204022   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1204023   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
1204024   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1204025   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1204026   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1204027   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1204028   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1204029   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1204030   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1204031   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1204032   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1204033   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1204034   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1204035   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1204036   +end;
MPRINT(EM_DIAGRAM):   end;
1204037   +else do;
MPRINT(EM_DIAGRAM):   else do;
1204038   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1204039   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1204040   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1204041   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1204042   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1204043   +   end;
MPRINT(EM_DIAGRAM):   end;
1204044   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1204045   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1204046   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1204047   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1204048   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1204049   +   end;
MPRINT(EM_DIAGRAM):   end;
1204050   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1204051   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1204052   +   end;
MPRINT(EM_DIAGRAM):   end;
1204053   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1204054   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1204055   +   end;
MPRINT(EM_DIAGRAM):   end;
1204056   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1204057   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1204058   +   end;
MPRINT(EM_DIAGRAM):   end;
1204059   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1204060   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1204061   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1204062   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1204063   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1204064   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1204065   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1204066   +   end;
MPRINT(EM_DIAGRAM):   end;
1204067   +end;
MPRINT(EM_DIAGRAM):   end;
1204068   +
1204069   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1204070   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1204071   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
1204072   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1204073   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1204074   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1204075   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1204076   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1204077   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1204078   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1204079   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1204080   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1204081   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1204082   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1204083   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1204084   +end;
MPRINT(EM_DIAGRAM):   end;
1204085   +else do;
MPRINT(EM_DIAGRAM):   else do;
1204086   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1204087   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1204088   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1204089   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1204090   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1204091   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1204092   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1204093   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1204094   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1204095   +         end;
MPRINT(EM_DIAGRAM):   end;
1204096   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1204097   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1204098   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1204099   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1204100   +            end;
MPRINT(EM_DIAGRAM):   end;
1204101   +         end;
MPRINT(EM_DIAGRAM):   end;
1204102   +      end;
MPRINT(EM_DIAGRAM):   end;
1204103   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1204104   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1204105   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1204106   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1204107   +         end;
MPRINT(EM_DIAGRAM):   end;
1204108   +      end;
MPRINT(EM_DIAGRAM):   end;
1204109   +   end;
MPRINT(EM_DIAGRAM):   end;
1204110   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1204111   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1204112   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1204113   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1204114   +      end;
MPRINT(EM_DIAGRAM):   end;
1204115   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1204116   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1204117   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1204118   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1204119   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1204120   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1204121   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1204122   +         end;
MPRINT(EM_DIAGRAM):   end;
1204123   +      end;
MPRINT(EM_DIAGRAM):   end;
1204124   +   end;
MPRINT(EM_DIAGRAM):   end;
1204125   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1204126   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1204127   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1204128   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1204129   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1204130   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1204131   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1204132   +   end;
MPRINT(EM_DIAGRAM):   end;
1204133   +end;
MPRINT(EM_DIAGRAM):   end;
1204134   +
1204135   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1204136   +*** Checking missing input Interval
1204137   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1204138   +
1204139   +IF NMISS(
1204140   +   AcceptedCmpTotal ,
1204141   +   Age ,
1204142   +   Frq ,
1204143   +   Income ,
1204144   +   Kidhome ,
1204145   +   MntFishProducts ,
1204146   +   MntFruits ,
1204147   +   MntGoldProds ,
1204148   +   MntSweetProducts ,
1204149   +   MonthsAsCustomer ,
1204150   +   NumDealsPurchases ,
1204151   +   NumWebVisitsMonth ,
1204152   +   RFMstat ,
1204153   +   RMntFrq ,
1204154   +   Recency ,
1204155   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , 
MntFishProducts , MntFruits , MntGoldProds , MntSweetProducts , MonthsAsCustomer , 
NumDealsPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , Teenhome ) THEN DO;
1204156   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1204157   +
1204158   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1204159   +END;
MPRINT(EM_DIAGRAM):   END;
1204160   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1204161   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1204162   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1204163   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1204164   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1204165   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1204166   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1204167   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1204168   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1204169   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1204170   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1204171   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1204172   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1204173   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1204174   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1204175   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1204176   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1204177   +   S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
1204178   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
1204179   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1204180   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1204181   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1204182   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1204183   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1204184   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1204185   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1204186   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1204187   +END;
MPRINT(EM_DIAGRAM):   END;
1204188   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1204189   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1204190   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1204191   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1204192   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1204193   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1204194   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1204195   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1204196   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1204197   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1204198   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1204199   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1204200   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1204201   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1204202   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1204203   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1204204   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1204205   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1204206   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1204207   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1204208   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1204209   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1204210   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1204211   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1204212   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1204213   +   ELSE S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
1204214   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
1204215   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1204216   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1204217   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1204218   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1204219   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1204220   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1204221   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1204222   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1204223   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1204224   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1204225   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1204226   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1204227   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1204228   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1204229   +END;
MPRINT(EM_DIAGRAM):   END;
1204230   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1204231   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1204232   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1204233   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1204234   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1204235   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1204236   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1204237   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1204238   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1204239   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1204240   +   H11  =     0.27578843014513 * S_AcceptedCmpTotal  +    -0.00809332778604 *
1204241   +        S_Age  +    -0.01616869766394 * S_Frq  +     0.03490362906378 *
1204242   +        S_Income  +    -0.00343804081842 * S_Kidhome
1204243   +          +    -0.00091866898176 * S_MntFishProducts
1204244   +          +    -0.00535373047967 * S_MntFruits  +     0.00104614400259 *
1204245   +        S_MntGoldProds  +    -0.00546951406519 * S_MntSweetProducts
1204246   +          +     0.00368892959186 * S_MonthsAsCustomer
1204247   +          +     0.02364421635033 * S_NumDealsPurchases
1204248   +          +     0.02217693794769 * S_NumWebVisitsMonth
1204249   +          +     0.00595053816856 * S_RFMstat  +     0.01189185855688 *
1204250   +        S_RMntFrq  +    -0.06052732570454 * S_Recency
1204251   +          +    -0.02711209639816 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.27578843014513 * S_AcceptedCmpTotal + -0.00809332778604 * S_Age 
+ -0.01616869766394 * S_Frq + 0.03490362906378 * S_Income + -0.00343804081842 * S_Kidhome + 
-0.00091866898176 * S_MntFishProducts + -0.00535373047967 * S_MntFruits + 0.00104614400259 * 
S_MntGoldProds + -0.00546951406519 * S_MntSweetProducts + 0.00368892959186 * 
S_MonthsAsCustomer + 0.02364421635033 * S_NumDealsPurchases + 0.02217693794769 * 
S_NumWebVisitsMonth + 0.00595053816856 * S_RFMstat + 0.01189185855688 * S_RMntFrq + 
-0.06052732570454 * S_Recency + -0.02711209639816 * S_Teenhome ;
1204252   +   H11  = H11  +     0.17309662130752 * AcceptedCmp10
1204253   +          +     0.18315939906666 * AcceptedCmp20  +     0.16105603567162 *
1204254   +        AcceptedCmp30  +     0.18820830601069 * AcceptedCmp40
1204255   +          +      0.1737861250554 * AcceptedCmp50  +     0.01851503167376 *
1204256   +        Complain0  +     0.13035163298518 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.17309662130752 * AcceptedCmp10 + 0.18315939906666 * 
AcceptedCmp20 + 0.16105603567162 * AcceptedCmp30 + 0.18820830601069 * AcceptedCmp40 + 
0.1737861250554 * AcceptedCmp50 + 0.01851503167376 * Complain0 + 0.13035163298518 * 
HigherEducationBinary0 ;
1204257   +   H11  = H11  +    -0.15299672533263 * Education2n_Cycle
1204258   +          +    -0.16014809431529 * EducationBasic  +     0.11508916289978 *
1204259   +        EducationGraduation  +     0.09635715378324 * EducationMaster
1204260   +          +     0.00839447082799 * Marital_StatusDivorced
1204261   +          +     -0.0238619770984 * Marital_StatusMarried
1204262   +          +     0.01543210213579 * Marital_StatusSingle
1204263   +          +    -0.02651821097459 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.15299672533263 * Education2n_Cycle + -0.16014809431529 * 
EducationBasic + 0.11508916289978 * EducationGraduation + 0.09635715378324 * EducationMaster + 
0.00839447082799 * Marital_StatusDivorced + -0.0238619770984 * Marital_StatusMarried + 
0.01543210213579 * Marital_StatusSingle + -0.02651821097459 * Marital_StatusTogether ;
1204264   +   H11  =    -0.75795359073107 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -0.75795359073107 + H11 ;
1204265   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1204266   +END;
MPRINT(EM_DIAGRAM):   END;
1204267   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1204268   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1204269   +END;
MPRINT(EM_DIAGRAM):   END;
1204270   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1204271   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1204272   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1204273   +
1204274   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1204275   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1204276   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1204277   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1204278   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1204279   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1204280   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1204281   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1204282   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1204283   +end;
MPRINT(EM_DIAGRAM):   end;
1204284   +else do;
MPRINT(EM_DIAGRAM):   else do;
1204285   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1204286   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1204287   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1204288   +   end;
MPRINT(EM_DIAGRAM):   end;
1204289   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1204290   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1204291   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1204292   +   end;
MPRINT(EM_DIAGRAM):   end;
1204293   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1204294   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1204295   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1204296   +   end;
MPRINT(EM_DIAGRAM):   end;
1204297   +end;
MPRINT(EM_DIAGRAM):   end;
1204298   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1204299   +   P_DepVar1  =     29.5716938262358 * H11 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 29.5716938262358 * H11 ;
1204300   +   P_DepVar1  =    -3.24800133013252 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.24800133013252 + P_DepVar1 ;
1204301   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1204302   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1204303   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1204304   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1204305   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1204306   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1204307   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1204308   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1204309   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1204310   +END;
MPRINT(EM_DIAGRAM):   END;
1204311   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1204312   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1204313   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1204314   +END;
MPRINT(EM_DIAGRAM):   END;
1204315   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1204316   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1204317   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1204318   +END;
MPRINT(EM_DIAGRAM):   END;
1204319   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1204320   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1204321   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1204322   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1204323   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1204324   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1204325   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1204326   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1204327   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1204328   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1204329   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1204330   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1204331   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1204332   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1204333   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1204334   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1204335   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1204336   +END;
MPRINT(EM_DIAGRAM):   END;
1204337   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1204338   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1204339   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1204340   +drop
1204341   +H11
1204342   +;
MPRINT(EM_DIAGRAM):   drop H11 ;
1204343   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1204344   +* Renaming variables for Neural42;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural42;
1204345   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1204346   +* Renaming Posterior variables for Neural42;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural42;
1204347   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1204348   +drop Neural42_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural42_P_DepVar1;
1204349   +Neural42_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural42_P_DepVar1 = P_DepVar1;
1204350   +drop Neural42_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural42_P_DepVar0;
1204351   +Neural42_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural42_P_DepVar0 = P_DepVar0;
1204352   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1204353   +* Renaming _WARN_ variable for Neural42;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural42;
1204354   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1204355   +length Neural42_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural42_WARN_ $4;
1204356   +drop Neural42_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural42_WARN_;
1204357   +Neural42_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural42_WARN_ = _WARN_;
1204358   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1204359   +* Ensmbl12: Scoring Code of model 2 of 10;
MPRINT(EM_DIAGRAM):   * Ensmbl12: Scoring Code of model 2 of 10;
1204360   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1204361   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1204362   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
1204363   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1204364   +* NODE: Neural37;
MPRINT(EM_DIAGRAM):   * NODE: Neural37;
1204365   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1204366   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1204367   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1204368   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1204369   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1204370   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1204371   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1204372   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1204373   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1204374   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1204375   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1204376   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1204377   +LENGTH _WARN_ $4
1204378   +      F_DepVar  $ 12
1204379   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1204380   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1204381   +
1204382   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1204383   +
1204384   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1204385   +
1204386   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1204387   +
1204388   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1204389   +
1204390   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1204391   +
1204392   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1204393   +
1204394   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1204395   +
1204396   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1204397   +
1204398   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1204399   +
1204400   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1204401   +
1204402   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1204403   +
1204404   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1204405   +
1204406   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1204407   +
1204408   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1204409   +
1204410   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1204411   +
1204412   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1204413   +
1204414   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1204415   +
1204416   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1204417   +
1204418   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1204419   +
1204420   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1204421   +
1204422   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1204423   +
1204424   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1204425   +
1204426   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1204427   +
1204428   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1204429   +
1204430   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1204431   +
1204432   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1204433   +
1204434   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1204435   +
1204436   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1204437   +
1204438   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1204439   +
1204440   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1204441   +
1204442   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1204443   +
1204444   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1204445   +
1204446   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1204447   +
1204448   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1204449   +
1204450   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1204451   +
1204452   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1204453   +
1204454   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1204455   +
1204456   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1204457   +
1204458   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1204459   +
1204460   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1204461   +
1204462   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1204463   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1204464   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1204465   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1204466   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1204467   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1204468   +end;
MPRINT(EM_DIAGRAM):   end;
1204469   +else do;
MPRINT(EM_DIAGRAM):   else do;
1204470   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1204471   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1204472   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1204473   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1204474   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1204475   +   end;
MPRINT(EM_DIAGRAM):   end;
1204476   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1204477   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1204478   +   end;
MPRINT(EM_DIAGRAM):   end;
1204479   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1204480   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1204481   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1204482   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1204483   +   end;
MPRINT(EM_DIAGRAM):   end;
1204484   +end;
MPRINT(EM_DIAGRAM):   end;
1204485   +
1204486   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1204487   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1204488   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1204489   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1204490   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1204491   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1204492   +end;
MPRINT(EM_DIAGRAM):   end;
1204493   +else do;
MPRINT(EM_DIAGRAM):   else do;
1204494   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1204495   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1204496   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1204497   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1204498   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1204499   +   end;
MPRINT(EM_DIAGRAM):   end;
1204500   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1204501   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1204502   +   end;
MPRINT(EM_DIAGRAM):   end;
1204503   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1204504   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1204505   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1204506   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1204507   +   end;
MPRINT(EM_DIAGRAM):   end;
1204508   +end;
MPRINT(EM_DIAGRAM):   end;
1204509   +
1204510   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1204511   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1204512   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1204513   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1204514   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1204515   +   _DM_BAD = 1;
The SAS System

MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1204516   +end;
MPRINT(EM_DIAGRAM):   end;
1204517   +else do;
MPRINT(EM_DIAGRAM):   else do;
1204518   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1204519   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1204520   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1204521   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1204522   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1204523   +   end;
MPRINT(EM_DIAGRAM):   end;
1204524   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1204525   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1204526   +   end;
MPRINT(EM_DIAGRAM):   end;
1204527   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1204528   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1204529   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1204530   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1204531   +   end;
MPRINT(EM_DIAGRAM):   end;
1204532   +end;
MPRINT(EM_DIAGRAM):   end;
1204533   +
1204534   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1204535   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1204536   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1204537   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1204538   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1204539   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1204540   +end;
MPRINT(EM_DIAGRAM):   end;
1204541   +else do;
MPRINT(EM_DIAGRAM):   else do;
1204542   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1204543   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1204544   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1204545   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1204546   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1204547   +   end;
MPRINT(EM_DIAGRAM):   end;
1204548   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1204549   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1204550   +   end;
MPRINT(EM_DIAGRAM):   end;
1204551   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1204552   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1204553   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1204554   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1204555   +   end;
MPRINT(EM_DIAGRAM):   end;
1204556   +end;
MPRINT(EM_DIAGRAM):   end;
1204557   +
1204558   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1204559   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1204560   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1204561   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1204562   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1204563   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1204564   +end;
MPRINT(EM_DIAGRAM):   end;
1204565   +else do;
MPRINT(EM_DIAGRAM):   else do;
1204566   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1204567   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1204568   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1204569   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1204570   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1204571   +   end;
MPRINT(EM_DIAGRAM):   end;
1204572   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1204573   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1204574   +   end;
MPRINT(EM_DIAGRAM):   end;
1204575   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1204576   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1204577   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1204578   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1204579   +   end;
MPRINT(EM_DIAGRAM):   end;
1204580   +end;
MPRINT(EM_DIAGRAM):   end;
1204581   +
1204582   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1204583   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1204584   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1204585   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1204586   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1204587   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1204588   +end;
MPRINT(EM_DIAGRAM):   end;
1204589   +else do;
MPRINT(EM_DIAGRAM):   else do;
1204590   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1204591   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1204592   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1204593   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1204594   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1204595   +   end;
MPRINT(EM_DIAGRAM):   end;
1204596   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1204597   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1204598   +   end;
MPRINT(EM_DIAGRAM):   end;
1204599   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1204600   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1204601   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1204602   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1204603   +   end;
MPRINT(EM_DIAGRAM):   end;
1204604   +end;
MPRINT(EM_DIAGRAM):   end;
1204605   +
1204606   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1204607   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1204608   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1204609   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1204610   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1204611   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1204612   +end;
MPRINT(EM_DIAGRAM):   end;
1204613   +else do;
MPRINT(EM_DIAGRAM):   else do;
1204614   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1204615   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1204616   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1204617   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1204618   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1204619   +   end;
MPRINT(EM_DIAGRAM):   end;
1204620   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1204621   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1204622   +   end;
MPRINT(EM_DIAGRAM):   end;
1204623   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1204624   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1204625   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1204626   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1204627   +   end;
MPRINT(EM_DIAGRAM):   end;
1204628   +end;
MPRINT(EM_DIAGRAM):   end;
1204629   +
1204630   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1204631   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
1204632   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1204633   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1204634   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1204635   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1204636   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1204637   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1204638   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1204639   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1204640   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1204641   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1204642   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1204643   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1204644   +end;
MPRINT(EM_DIAGRAM):   end;
1204645   +else do;
MPRINT(EM_DIAGRAM):   else do;
1204646   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1204647   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1204648   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1204649   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1204650   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1204651   +   end;
MPRINT(EM_DIAGRAM):   end;
1204652   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1204653   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1204654   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1204655   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1204656   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1204657   +   end;
MPRINT(EM_DIAGRAM):   end;
1204658   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1204659   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1204660   +   end;
MPRINT(EM_DIAGRAM):   end;
1204661   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1204662   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1204663   +   end;
MPRINT(EM_DIAGRAM):   end;
1204664   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1204665   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1204666   +   end;
MPRINT(EM_DIAGRAM):   end;
1204667   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1204668   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1204669   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1204670   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1204671   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1204672   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1204673   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1204674   +   end;
MPRINT(EM_DIAGRAM):   end;
1204675   +end;
MPRINT(EM_DIAGRAM):   end;
1204676   +
1204677   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1204678   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1204679   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
1204680   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1204681   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1204682   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1204683   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1204684   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1204685   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1204686   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1204687   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1204688   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1204689   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1204690   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1204691   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1204692   +end;
MPRINT(EM_DIAGRAM):   end;
1204693   +else do;
MPRINT(EM_DIAGRAM):   else do;
1204694   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1204695   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1204696   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1204697   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1204698   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1204699   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1204700   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1204701   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1204702   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1204703   +         end;
MPRINT(EM_DIAGRAM):   end;
1204704   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1204705   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1204706   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1204707   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1204708   +            end;
MPRINT(EM_DIAGRAM):   end;
1204709   +         end;
MPRINT(EM_DIAGRAM):   end;
1204710   +      end;
MPRINT(EM_DIAGRAM):   end;
1204711   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1204712   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1204713   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1204714   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1204715   +         end;
MPRINT(EM_DIAGRAM):   end;
1204716   +      end;
MPRINT(EM_DIAGRAM):   end;
1204717   +   end;
MPRINT(EM_DIAGRAM):   end;
1204718   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1204719   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1204720   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1204721   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1204722   +      end;
MPRINT(EM_DIAGRAM):   end;
1204723   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1204724   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1204725   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1204726   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1204727   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1204728   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1204729   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1204730   +         end;
MPRINT(EM_DIAGRAM):   end;
1204731   +      end;
MPRINT(EM_DIAGRAM):   end;
1204732   +   end;
MPRINT(EM_DIAGRAM):   end;
1204733   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1204734   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1204735   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1204736   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1204737   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1204738   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1204739   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1204740   +   end;
MPRINT(EM_DIAGRAM):   end;
1204741   +end;
MPRINT(EM_DIAGRAM):   end;
1204742   +
1204743   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1204744   +*** Checking missing input Interval
1204745   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1204746   +
1204747   +IF NMISS(
1204748   +   AcceptedCmpTotal ,
1204749   +   Age ,
1204750   +   Frq ,
1204751   +   Income ,
1204752   +   Kidhome ,
1204753   +   MntFishProducts ,
1204754   +   MntFruits ,
1204755   +   MntGoldProds ,
1204756   +   MntSweetProducts ,
1204757   +   MonthsAsCustomer ,
1204758   +   NumDealsPurchases ,
1204759   +   NumWebVisitsMonth ,
1204760   +   RFMstat ,
1204761   +   RMntFrq ,
1204762   +   Recency ,
1204763   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , 
MntFishProducts , MntFruits , MntGoldProds , MntSweetProducts , MonthsAsCustomer , 
NumDealsPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , Teenhome ) THEN DO;
1204764   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1204765   +
1204766   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1204767   +END;
MPRINT(EM_DIAGRAM):   END;
1204768   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1204769   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1204770   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1204771   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1204772   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1204773   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1204774   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1204775   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1204776   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1204777   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1204778   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1204779   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1204780   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1204781   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1204782   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1204783   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1204784   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1204785   +   S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
1204786   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
1204787   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1204788   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1204789   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1204790   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1204791   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1204792   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1204793   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1204794   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1204795   +END;
MPRINT(EM_DIAGRAM):   END;
1204796   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1204797   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1204798   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1204799   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1204800   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1204801   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1204802   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1204803   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1204804   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1204805   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1204806   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1204807   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1204808   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1204809   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1204810   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1204811   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1204812   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1204813   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1204814   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1204815   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1204816   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1204817   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1204818   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1204819   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1204820   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1204821   +   ELSE S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
1204822   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
1204823   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1204824   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1204825   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1204826   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1204827   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1204828   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1204829   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1204830   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1204831   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1204832   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1204833   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1204834   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1204835   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1204836   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1204837   +END;
MPRINT(EM_DIAGRAM):   END;
1204838   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1204839   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1204840   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1204841   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1204842   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1204843   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1204844   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1204845   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1204846   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1204847   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1204848   +   H11  =     0.00529231235481 * S_AcceptedCmpTotal  +      0.0343326832257 *
1204849   +        S_Age  +    -0.05203541829299 * S_Frq  +    -0.45089409751085 *
1204850   +        S_Income  +     0.21434017685167 * S_Kidhome
1204851   +          +    -0.00245095061163 * S_MntFishProducts
1204852   +          +     0.05045649639793 * S_MntFruits  +     0.00647541618092 *
1204853   +        S_MntGoldProds  +     0.05644685811145 * S_MntSweetProducts
1204854   +          +     -0.0436897985886 * S_MonthsAsCustomer
1204855   +          +    -0.11066147452589 * S_NumDealsPurchases
1204856   +          +    -0.15815826211613 * S_NumWebVisitsMonth
1204857   +          +    -0.02488895787197 * S_RFMstat  +    -0.07848372303852 *
1204858   +        S_RMntFrq  +     0.44584112602611 * S_Recency
1204859   +          +     0.31802924624272 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.00529231235481 * S_AcceptedCmpTotal + 0.0343326832257 * S_Age + 
-0.05203541829299 * S_Frq + -0.45089409751085 * S_Income + 0.21434017685167 * S_Kidhome + 
-0.00245095061163 * S_MntFishProducts + 0.05045649639793 * S_MntFruits + 0.00647541618092 * 
S_MntGoldProds + 0.05644685811145 * S_MntSweetProducts + -0.0436897985886 * S_MonthsAsCustomer 
+ -0.11066147452589 * S_NumDealsPurchases + -0.15815826211613 * S_NumWebVisitsMonth + 
-0.02488895787197 * S_RFMstat + -0.07848372303852 * S_RMntFrq + 0.44584112602611 * S_Recency + 
0.31802924624272 * S_Teenhome ;
1204860   +   H12  =    -0.10209163274452 * S_AcceptedCmpTotal  +     0.11827354067819 *
1204861   +        S_Age  +     1.40350663058769 * S_Frq  +     0.61315172399898 *
1204862   +        S_Income  +    -0.34676303560555 * S_Kidhome
1204863   +          +    -0.19666313381749 * S_MntFishProducts
1204864   +          +     0.02049419497141 * S_MntFruits  +    -0.20582738219797 *
1204865   +        S_MntGoldProds  +    -0.07237052620156 * S_MntSweetProducts
1204866   +          +     0.11921399006499 * S_MonthsAsCustomer
1204867   +          +    -0.67623098057964 * S_NumDealsPurchases
1204868   +          +    -0.59190965073948 * S_NumWebVisitsMonth
1204869   +          +    -0.20613596895241 * S_RFMstat  +    -0.32007172204835 *
1204870   +        S_RMntFrq  +     0.69616846305831 * S_Recency
1204871   +          +     -0.3023019033387 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -0.10209163274452 * S_AcceptedCmpTotal + 0.11827354067819 * S_Age 
+ 1.40350663058769 * S_Frq + 0.61315172399898 * S_Income + -0.34676303560555 * S_Kidhome + 
-0.19666313381749 * S_MntFishProducts + 0.02049419497141 * S_MntFruits + -0.20582738219797 * 
S_MntGoldProds + -0.07237052620156 * S_MntSweetProducts + 0.11921399006499 * 
S_MonthsAsCustomer + -0.67623098057964 * S_NumDealsPurchases + -0.59190965073948 * 
S_NumWebVisitsMonth + -0.20613596895241 * S_RFMstat + -0.32007172204835 * S_RMntFrq + 
0.69616846305831 * S_Recency + -0.3023019033387 * S_Teenhome ;
1204872   +   H11  = H11  +     0.19876934538613 * AcceptedCmp10
1204873   +          +     0.18951634162327 * AcceptedCmp20  +     0.24251361227823 *
1204874   +        AcceptedCmp30  +     0.16680588614581 * AcceptedCmp40
1204875   +          +     0.15217121708385 * AcceptedCmp50  +    -0.06185934853348 *
1204876   +        Complain0  +    -0.02156128066423 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.19876934538613 * AcceptedCmp10 + 0.18951634162327 * 
AcceptedCmp20 + 0.24251361227823 * AcceptedCmp30 + 0.16680588614581 * AcceptedCmp40 + 
0.15217121708385 * AcceptedCmp50 + -0.06185934853348 * Complain0 + -0.02156128066423 * 
HigherEducationBinary0 ;
1204877   +   H12  = H12  +     0.42936838873103 * AcceptedCmp10
1204878   +          +     0.31531206230129 * AcceptedCmp20  +     0.61595858080275 *
1204879   +        AcceptedCmp30  +    -0.02848071087974 * AcceptedCmp40
1204880   +          +     0.26463885464849 * AcceptedCmp50  +    -0.25408897937456 *
1204881   +        Complain0  +     0.37165308117925 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.42936838873103 * AcceptedCmp10 + 0.31531206230129 * 
AcceptedCmp20 + 0.61595858080275 * AcceptedCmp30 + -0.02848071087974 * AcceptedCmp40 + 
0.26463885464849 * AcceptedCmp50 + -0.25408897937456 * Complain0 + 0.37165308117925 * 
HigherEducationBinary0 ;
1204882   +   H11  = H11  +    -0.06004623502296 * Education2n_Cycle
1204883   +          +    -0.14055981460472 * EducationBasic  +    -0.02226325005028 *
1204884   +        EducationGraduation  +     0.17382426297237 * EducationMaster
1204885   +          +    -0.09599098826432 * Marital_StatusDivorced
1204886   +          +     0.29380773989654 * Marital_StatusMarried
1204887   +          +    -0.24344588832351 * Marital_StatusSingle
1204888   +          +     0.26861619886367 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.06004623502296 * Education2n_Cycle + -0.14055981460472 * 
EducationBasic + -0.02226325005028 * EducationGraduation + 0.17382426297237 * EducationMaster 
+ -0.09599098826432 * Marital_StatusDivorced + 0.29380773989654 * Marital_StatusMarried + 
-0.24344588832351 * Marital_StatusSingle + 0.26861619886367 * Marital_StatusTogether ;
1204889   +   H12  = H12  +    -0.05553559517027 * Education2n_Cycle
1204890   +          +     0.10110187812592 * EducationBasic  +    -0.01454720780814 *
1204891   +        EducationGraduation  +    -0.23207789950977 * EducationMaster
1204892   +          +    -0.18210246138549 * Marital_StatusDivorced
1204893   +          +    -0.33707503901978 * Marital_StatusMarried
1204894   +          +     0.45975144433549 * Marital_StatusSingle
1204895   +          +    -0.30223475265715 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.05553559517027 * Education2n_Cycle + 0.10110187812592 * 
EducationBasic + -0.01454720780814 * EducationGraduation + -0.23207789950977 * EducationMaster 
+ -0.18210246138549 * Marital_StatusDivorced + -0.33707503901978 * Marital_StatusMarried + 
0.45975144433549 * Marital_StatusSingle + -0.30223475265715 * Marital_StatusTogether ;
1204896   +   H11  =    -0.01761609034495 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -0.01761609034495 + H11 ;
1204897   +   H12  =     1.54520059814945 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 1.54520059814945 + H12 ;
1204898   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1204899   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1204900   +END;
MPRINT(EM_DIAGRAM):   END;
1204901   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1204902   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1204903   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1204904   +END;
MPRINT(EM_DIAGRAM):   END;
1204905   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1204906   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1204907   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1204908   +
1204909   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1204910   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1204911   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1204912   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1204913   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1204914   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1204915   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1204916   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1204917   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1204918   +end;
MPRINT(EM_DIAGRAM):   end;
1204919   +else do;
MPRINT(EM_DIAGRAM):   else do;
1204920   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1204921   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1204922   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1204923   +   end;
MPRINT(EM_DIAGRAM):   end;
1204924   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1204925   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1204926   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1204927   +   end;
MPRINT(EM_DIAGRAM):   end;
1204928   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1204929   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1204930   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1204931   +   end;
MPRINT(EM_DIAGRAM):   end;
1204932   +end;
MPRINT(EM_DIAGRAM):   end;
1204933   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1204934   +   P_DepVar1  =    -5.00819716007083 * H11  +    -2.90644970096905 * H12 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -5.00819716007083 * H11 + -2.90644970096905 * H12 ;
1204935   +   P_DepVar1  =     0.91635286006129 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.91635286006129 + P_DepVar1 ;
1204936   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1204937   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1204938   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1204939   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1204940   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1204941   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1204942   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1204943   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1204944   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1204945   +END;
MPRINT(EM_DIAGRAM):   END;
1204946   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1204947   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1204948   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1204949   +END;
MPRINT(EM_DIAGRAM):   END;
1204950   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1204951   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1204952   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1204953   +END;
MPRINT(EM_DIAGRAM):   END;
1204954   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1204955   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1204956   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1204957   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1204958   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1204959   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1204960   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1204961   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1204962   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1204963   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1204964   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1204965   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1204966   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1204967   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1204968   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1204969   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1204970   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1204971   +END;
MPRINT(EM_DIAGRAM):   END;
1204972   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1204973   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1204974   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1204975   +drop
1204976   +H11
1204977   +H12
1204978   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 ;
1204979   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1204980   +* Renaming variables for Neural37;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural37;
1204981   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1204982   +* Renaming Posterior variables for Neural37;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural37;
1204983   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1204984   +drop Neural37_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural37_P_DepVar1;
1204985   +Neural37_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural37_P_DepVar1 = P_DepVar1;
1204986   +drop Neural37_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural37_P_DepVar0;
1204987   +Neural37_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural37_P_DepVar0 = P_DepVar0;
1204988   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1204989   +* Renaming _WARN_ variable for Neural37;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural37;
1204990   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1204991   +length Neural37_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural37_WARN_ $4;
1204992   +drop Neural37_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural37_WARN_;
1204993   +Neural37_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural37_WARN_ = _WARN_;
1204994   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1204995   +* Ensmbl12: Scoring Code of model 3 of 10;
MPRINT(EM_DIAGRAM):   * Ensmbl12: Scoring Code of model 3 of 10;
1204996   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1204997   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1204998   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
1204999   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1205000   +* NODE: Neural38;
MPRINT(EM_DIAGRAM):   * NODE: Neural38;
1205001   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1205002   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1205003   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1205004   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1205005   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1205006   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1205007   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1205008   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1205009   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1205010   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1205011   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1205012   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1205013   +LENGTH _WARN_ $4
1205014   +      F_DepVar  $ 12
1205015   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1205016   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1205017   +
1205018   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1205019   +
1205020   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1205021   +
1205022   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1205023   +
1205024   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1205025   +
1205026   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1205027   +
1205028   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1205029   +
1205030   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1205031   +
1205032   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1205033   +
1205034   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1205035   +
1205036   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1205037   +
1205038   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1205039   +
1205040   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1205041   +
1205042   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1205043   +
1205044   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1205045   +
1205046   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1205047   +
1205048   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1205049   +
1205050   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1205051   +
1205052   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1205053   +
1205054   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1205055   +
1205056   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1205057   +
1205058   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1205059   +
1205060   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1205061   +
1205062   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1205063   +
1205064   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1205065   +
1205066   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1205067   +
1205068   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1205069   +
1205070   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1205071   +
1205072   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1205073   +
1205074   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1205075   +
1205076   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1205077   +
1205078   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1205079   +
1205080   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1205081   +
1205082   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1205083   +
1205084   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1205085   +
1205086   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1205087   +
1205088   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1205089   +
1205090   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1205091   +
1205092   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1205093   +
1205094   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1205095   +
1205096   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1205097   +
1205098   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1205099   +
1205100   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1205101   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1205102   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1205103   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1205104   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1205105   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1205106   +end;
MPRINT(EM_DIAGRAM):   end;
1205107   +else do;
MPRINT(EM_DIAGRAM):   else do;
1205108   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1205109   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1205110   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1205111   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1205112   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1205113   +   end;
MPRINT(EM_DIAGRAM):   end;
1205114   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1205115   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1205116   +   end;
MPRINT(EM_DIAGRAM):   end;
1205117   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1205118   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1205119   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1205120   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1205121   +   end;
MPRINT(EM_DIAGRAM):   end;
1205122   +end;
MPRINT(EM_DIAGRAM):   end;
1205123   +
1205124   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1205125   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1205126   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1205127   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1205128   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1205129   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1205130   +end;
MPRINT(EM_DIAGRAM):   end;
1205131   +else do;
MPRINT(EM_DIAGRAM):   else do;
1205132   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1205133   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1205134   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1205135   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1205136   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1205137   +   end;
MPRINT(EM_DIAGRAM):   end;
1205138   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1205139   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1205140   +   end;
MPRINT(EM_DIAGRAM):   end;
1205141   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1205142   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1205143   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1205144   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1205145   +   end;
MPRINT(EM_DIAGRAM):   end;
1205146   +end;
MPRINT(EM_DIAGRAM):   end;
1205147   +
1205148   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1205149   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1205150   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1205151   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1205152   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1205153   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1205154   +end;
MPRINT(EM_DIAGRAM):   end;
1205155   +else do;
MPRINT(EM_DIAGRAM):   else do;
1205156   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1205157   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1205158   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1205159   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1205160   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1205161   +   end;
MPRINT(EM_DIAGRAM):   end;
1205162   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1205163   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1205164   +   end;
MPRINT(EM_DIAGRAM):   end;
1205165   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1205166   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1205167   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1205168   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1205169   +   end;
MPRINT(EM_DIAGRAM):   end;
1205170   +end;
MPRINT(EM_DIAGRAM):   end;
1205171   +
1205172   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1205173   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1205174   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1205175   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1205176   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1205177   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1205178   +end;
MPRINT(EM_DIAGRAM):   end;
1205179   +else do;
MPRINT(EM_DIAGRAM):   else do;
1205180   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1205181   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1205182   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1205183   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1205184   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1205185   +   end;
MPRINT(EM_DIAGRAM):   end;
1205186   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1205187   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1205188   +   end;
MPRINT(EM_DIAGRAM):   end;
1205189   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1205190   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1205191   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1205192   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1205193   +   end;
MPRINT(EM_DIAGRAM):   end;
1205194   +end;
MPRINT(EM_DIAGRAM):   end;
1205195   +
1205196   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1205197   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1205198   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1205199   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1205200   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1205201   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1205202   +end;
MPRINT(EM_DIAGRAM):   end;
1205203   +else do;
MPRINT(EM_DIAGRAM):   else do;
1205204   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1205205   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1205206   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1205207   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1205208   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1205209   +   end;
MPRINT(EM_DIAGRAM):   end;
1205210   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1205211   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1205212   +   end;
MPRINT(EM_DIAGRAM):   end;
1205213   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1205214   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1205215   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1205216   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1205217   +   end;
MPRINT(EM_DIAGRAM):   end;
1205218   +end;
MPRINT(EM_DIAGRAM):   end;
1205219   +
1205220   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1205221   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1205222   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1205223   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1205224   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1205225   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1205226   +end;
MPRINT(EM_DIAGRAM):   end;
1205227   +else do;
MPRINT(EM_DIAGRAM):   else do;
1205228   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1205229   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1205230   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1205231   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1205232   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1205233   +   end;
MPRINT(EM_DIAGRAM):   end;
1205234   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1205235   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1205236   +   end;
MPRINT(EM_DIAGRAM):   end;
1205237   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1205238   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1205239   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1205240   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1205241   +   end;
MPRINT(EM_DIAGRAM):   end;
1205242   +end;
MPRINT(EM_DIAGRAM):   end;
1205243   +
1205244   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1205245   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1205246   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1205247   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1205248   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1205249   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1205250   +end;
MPRINT(EM_DIAGRAM):   end;
1205251   +else do;
MPRINT(EM_DIAGRAM):   else do;
1205252   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1205253   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1205254   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1205255   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1205256   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1205257   +   end;
MPRINT(EM_DIAGRAM):   end;
1205258   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1205259   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1205260   +   end;
MPRINT(EM_DIAGRAM):   end;
1205261   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1205262   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1205263   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1205264   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1205265   +   end;
MPRINT(EM_DIAGRAM):   end;
1205266   +end;
MPRINT(EM_DIAGRAM):   end;
1205267   +
1205268   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1205269   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
1205270   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1205271   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1205272   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1205273   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1205274   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1205275   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1205276   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1205277   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1205278   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1205279   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1205280   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1205281   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1205282   +end;
MPRINT(EM_DIAGRAM):   end;
1205283   +else do;
MPRINT(EM_DIAGRAM):   else do;
1205284   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1205285   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1205286   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1205287   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1205288   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1205289   +   end;
MPRINT(EM_DIAGRAM):   end;
1205290   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1205291   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1205292   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1205293   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1205294   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1205295   +   end;
MPRINT(EM_DIAGRAM):   end;
1205296   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1205297   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1205298   +   end;
MPRINT(EM_DIAGRAM):   end;
1205299   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1205300   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1205301   +   end;
MPRINT(EM_DIAGRAM):   end;
1205302   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1205303   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1205304   +   end;
MPRINT(EM_DIAGRAM):   end;
1205305   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1205306   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1205307   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1205308   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1205309   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1205310   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1205311   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1205312   +   end;
MPRINT(EM_DIAGRAM):   end;
1205313   +end;
MPRINT(EM_DIAGRAM):   end;
1205314   +
1205315   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1205316   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1205317   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
1205318   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1205319   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1205320   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1205321   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1205322   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1205323   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1205324   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1205325   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1205326   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1205327   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1205328   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1205329   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1205330   +end;
MPRINT(EM_DIAGRAM):   end;
1205331   +else do;
MPRINT(EM_DIAGRAM):   else do;
1205332   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1205333   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1205334   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1205335   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1205336   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1205337   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1205338   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1205339   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1205340   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1205341   +         end;
MPRINT(EM_DIAGRAM):   end;
1205342   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1205343   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1205344   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1205345   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1205346   +            end;
MPRINT(EM_DIAGRAM):   end;
1205347   +         end;
MPRINT(EM_DIAGRAM):   end;
1205348   +      end;
MPRINT(EM_DIAGRAM):   end;
1205349   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1205350   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1205351   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1205352   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1205353   +         end;
MPRINT(EM_DIAGRAM):   end;
1205354   +      end;
MPRINT(EM_DIAGRAM):   end;
1205355   +   end;
MPRINT(EM_DIAGRAM):   end;
1205356   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1205357   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1205358   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1205359   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1205360   +      end;
MPRINT(EM_DIAGRAM):   end;
1205361   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1205362   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1205363   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1205364   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1205365   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1205366   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1205367   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1205368   +         end;
MPRINT(EM_DIAGRAM):   end;
1205369   +      end;
MPRINT(EM_DIAGRAM):   end;
1205370   +   end;
MPRINT(EM_DIAGRAM):   end;
1205371   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1205372   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1205373   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1205374   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1205375   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1205376   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1205377   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1205378   +   end;
MPRINT(EM_DIAGRAM):   end;
1205379   +end;
MPRINT(EM_DIAGRAM):   end;
1205380   +
1205381   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1205382   +*** Checking missing input Interval
1205383   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1205384   +
1205385   +IF NMISS(
1205386   +   AcceptedCmpTotal ,
1205387   +   Age ,
1205388   +   Frq ,
1205389   +   Income ,
1205390   +   Kidhome ,
1205391   +   MntFishProducts ,
1205392   +   MntFruits ,
1205393   +   MntGoldProds ,
1205394   +   MntSweetProducts ,
1205395   +   MonthsAsCustomer ,
1205396   +   NumDealsPurchases ,
1205397   +   NumWebVisitsMonth ,
1205398   +   RFMstat ,
1205399   +   RMntFrq ,
1205400   +   Recency ,
1205401   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , 
MntFishProducts , MntFruits , MntGoldProds , MntSweetProducts , MonthsAsCustomer , 
NumDealsPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , Teenhome ) THEN DO;
1205402   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1205403   +
1205404   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1205405   +END;
MPRINT(EM_DIAGRAM):   END;
1205406   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1205407   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1205408   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1205409   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1205410   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1205411   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1205412   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1205413   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1205414   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1205415   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1205416   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1205417   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1205418   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1205419   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1205420   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1205421   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1205422   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1205423   +   S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
1205424   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
1205425   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1205426   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1205427   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1205428   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1205429   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1205430   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1205431   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1205432   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1205433   +END;
MPRINT(EM_DIAGRAM):   END;
1205434   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1205435   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1205436   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1205437   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1205438   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1205439   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1205440   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1205441   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1205442   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1205443   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1205444   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1205445   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1205446   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1205447   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1205448   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1205449   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1205450   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1205451   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1205452   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1205453   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1205454   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1205455   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1205456   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1205457   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1205458   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1205459   +   ELSE S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
1205460   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
1205461   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1205462   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1205463   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1205464   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1205465   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1205466   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1205467   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1205468   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1205469   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1205470   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1205471   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1205472   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1205473   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1205474   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1205475   +END;
MPRINT(EM_DIAGRAM):   END;
1205476   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1205477   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1205478   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1205479   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1205480   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1205481   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1205482   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1205483   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1205484   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1205485   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1205486   +   H11  =    -0.05939653438507 * S_AcceptedCmpTotal  +    -0.03097621866927 *
1205487   +        S_Age  +     0.38549836561373 * S_Frq  +     0.04529710170514 *
1205488   +        S_Income  +    -0.29829037747286 * S_Kidhome
1205489   +          +    -0.18720823453547 * S_MntFishProducts
1205490   +          +    -0.21050293648727 * S_MntFruits  +    -0.17024743813518 *
1205491   +        S_MntGoldProds  +     0.06568676148572 * S_MntSweetProducts
1205492   +          +    -0.06646294977493 * S_MonthsAsCustomer
1205493   +          +    -0.37026551859537 * S_NumDealsPurchases
1205494   +          +    -0.14222086870703 * S_NumWebVisitsMonth
1205495   +          +    -0.13771028020173 * S_RFMstat  +    -0.18058593739947 *
1205496   +        S_RMntFrq  +     0.16089693413185 * S_Recency
1205497   +          +    -0.09296281260919 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = -0.05939653438507 * S_AcceptedCmpTotal + -0.03097621866927 * S_Age 
+ 0.38549836561373 * S_Frq + 0.04529710170514 * S_Income + -0.29829037747286 * S_Kidhome + 
-0.18720823453547 * S_MntFishProducts + -0.21050293648727 * S_MntFruits + -0.17024743813518 * 
S_MntGoldProds + 0.06568676148572 * S_MntSweetProducts + -0.06646294977493 * 
S_MonthsAsCustomer + -0.37026551859537 * S_NumDealsPurchases + -0.14222086870703 * 
S_NumWebVisitsMonth + -0.13771028020173 * S_RFMstat + -0.18058593739947 * S_RMntFrq + 
0.16089693413185 * S_Recency + -0.09296281260919 * S_Teenhome ;
1205498   +   H12  =    -1.07525876494597 * S_AcceptedCmpTotal  +     0.17274493487957 *
1205499   +        S_Age  +     1.31699360143525 * S_Frq  +      0.8506314580981 *
1205500   +        S_Income  +    -0.83201267605135 * S_Kidhome
1205501   +          +    -0.09483355610222 * S_MntFishProducts
1205502   +          +    -0.31816096382562 * S_MntFruits  +    -0.18054381770991 *
1205503   +        S_MntGoldProds  +     0.05267776627167 * S_MntSweetProducts
1205504   +          +     0.36008195182034 * S_MonthsAsCustomer
1205505   +          +    -0.13663022832818 * S_NumDealsPurchases
1205506   +          +    -0.43055337001488 * S_NumWebVisitsMonth
1205507   +          +    -0.20985567596746 * S_RFMstat  +     0.29271762840275 *
1205508   +        S_RMntFrq  +    -0.13626348763752 * S_Recency
1205509   +          +    -0.85691575464107 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -1.07525876494597 * S_AcceptedCmpTotal + 0.17274493487957 * S_Age 
+ 1.31699360143525 * S_Frq + 0.8506314580981 * S_Income + -0.83201267605135 * S_Kidhome + 
-0.09483355610222 * S_MntFishProducts + -0.31816096382562 * S_MntFruits + -0.18054381770991 * 
S_MntGoldProds + 0.05267776627167 * S_MntSweetProducts + 0.36008195182034 * S_MonthsAsCustomer 
+ -0.13663022832818 * S_NumDealsPurchases + -0.43055337001488 * S_NumWebVisitsMonth + 
-0.20985567596746 * S_RFMstat + 0.29271762840275 * S_RMntFrq + -0.13626348763752 * S_Recency + 
-0.85691575464107 * S_Teenhome ;
1205510   +   H13  =    -0.17967871499719 * S_AcceptedCmpTotal  +      0.1189238919833 *
1205511   +        S_Age  +      0.2812438420035 * S_Frq  +    -0.19278826529363 *
1205512   +        S_Income  +     0.25780281448124 * S_Kidhome
1205513   +          +     0.04440164182166 * S_MntFishProducts
1205514   +          +     0.04221733494133 * S_MntFruits  +     0.00772772044315 *
1205515   +        S_MntGoldProds  +     0.03211863452879 * S_MntSweetProducts
1205516   +          +     0.11601256317603 * S_MonthsAsCustomer
1205517   +          +    -0.06382091961731 * S_NumDealsPurchases
1205518   +          +    -0.31707488359351 * S_NumWebVisitsMonth
1205519   +          +    -0.03315899689257 * S_RFMstat  +      0.1166714754638 *
1205520   +        S_RMntFrq  +     0.39922359779347 * S_Recency
1205521   +          +     0.12723983872652 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = -0.17967871499719 * S_AcceptedCmpTotal + 0.1189238919833 * S_Age + 
0.2812438420035 * S_Frq + -0.19278826529363 * S_Income + 0.25780281448124 * S_Kidhome + 
0.04440164182166 * S_MntFishProducts + 0.04221733494133 * S_MntFruits + 0.00772772044315 * 
S_MntGoldProds + 0.03211863452879 * S_MntSweetProducts + 0.11601256317603 * S_MonthsAsCustomer 
+ -0.06382091961731 * S_NumDealsPurchases + -0.31707488359351 * S_NumWebVisitsMonth + 
-0.03315899689257 * S_RFMstat + 0.1166714754638 * S_RMntFrq + 0.39922359779347 * S_Recency + 
0.12723983872652 * S_Teenhome ;
1205522   +   H11  = H11  +     1.30972442853005 * AcceptedCmp10
1205523   +          +      -0.107725040763 * AcceptedCmp20  +      0.1632298365033 *
1205524   +        AcceptedCmp30  +    -0.04285993483605 * AcceptedCmp40
1205525   +          +     0.27424410998159 * AcceptedCmp50  +     0.13223002478852 *
1205526   +        Complain0  +       0.148007066302 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 1.30972442853005 * AcceptedCmp10 + -0.107725040763 * 
AcceptedCmp20 + 0.1632298365033 * AcceptedCmp30 + -0.04285993483605 * AcceptedCmp40 + 
0.27424410998159 * AcceptedCmp50 + 0.13223002478852 * Complain0 + 0.148007066302 * 
HigherEducationBinary0 ;
1205527   +   H12  = H12  +     0.43127584437858 * AcceptedCmp10
1205528   +          +    -0.45791405760753 * AcceptedCmp20  +    -0.99939161573095 *
1205529   +        AcceptedCmp30  +    -1.19828550777192 * AcceptedCmp40
1205530   +          +    -0.01213030081313 * AcceptedCmp50  +    -0.13910242772434 *
1205531   +        Complain0  +     0.30067707265993 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.43127584437858 * AcceptedCmp10 + -0.45791405760753 * 
AcceptedCmp20 + -0.99939161573095 * AcceptedCmp30 + -1.19828550777192 * AcceptedCmp40 + 
-0.01213030081313 * AcceptedCmp50 + -0.13910242772434 * Complain0 + 0.30067707265993 * 
HigherEducationBinary0 ;
1205532   +   H13  = H13  +    -0.11762761348562 * AcceptedCmp10
1205533   +          +      0.2189277190916 * AcceptedCmp20  +     0.04353030554468 *
1205534   +        AcceptedCmp30  +    -0.03987223536277 * AcceptedCmp40
1205535   +          +     0.15029448487681 * AcceptedCmp50  +      -0.117886738648 *
1205536   +        Complain0  +    -0.01645100634446 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.11762761348562 * AcceptedCmp10 + 0.2189277190916 * 
AcceptedCmp20 + 0.04353030554468 * AcceptedCmp30 + -0.03987223536277 * AcceptedCmp40 + 
0.15029448487681 * AcceptedCmp50 + -0.117886738648 * Complain0 + -0.01645100634446 * 
HigherEducationBinary0 ;
1205537   +   H11  = H11  +     0.16808351038824 * Education2n_Cycle
1205538   +          +    -0.29249243891567 * EducationBasic  +     0.02800261669472 *
1205539   +        EducationGraduation  +    -0.22350316846433 * EducationMaster
1205540   +          +     0.18754186259114 * Marital_StatusDivorced
1205541   +          +    -0.11988223819284 * Marital_StatusMarried
1205542   +          +    -0.02283707816223 * Marital_StatusSingle
1205543   +          +     -0.1005355792805 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.16808351038824 * Education2n_Cycle + -0.29249243891567 * 
EducationBasic + 0.02800261669472 * EducationGraduation + -0.22350316846433 * EducationMaster 
+ 0.18754186259114 * Marital_StatusDivorced + -0.11988223819284 * Marital_StatusMarried + 
-0.02283707816223 * Marital_StatusSingle + -0.1005355792805 * Marital_StatusTogether ;
1205544   +   H12  = H12  +    -0.12807098247021 * Education2n_Cycle
1205545   +          +     0.23889287012189 * EducationBasic  +     0.10996477979775 *
1205546   +        EducationGraduation  +    -0.24880728981933 * EducationMaster
1205547   +          +    -0.28983318463941 * Marital_StatusDivorced
1205548   +          +    -0.74851149560881 * Marital_StatusMarried
1205549   +          +      0.7618336919202 * Marital_StatusSingle
1205550   +          +    -0.81079042586509 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.12807098247021 * Education2n_Cycle + 0.23889287012189 * 
EducationBasic + 0.10996477979775 * EducationGraduation + -0.24880728981933 * EducationMaster 
+ -0.28983318463941 * Marital_StatusDivorced + -0.74851149560881 * Marital_StatusMarried + 
0.7618336919202 * Marital_StatusSingle + -0.81079042586509 * Marital_StatusTogether ;
1205551   +   H13  = H13  +    -0.26305004071484 * Education2n_Cycle
1205552   +          +     0.28231626292259 * EducationBasic  +    -0.07308832725307 *
1205553   +        EducationGraduation  +     0.20925521527006 * EducationMaster
1205554   +          +    -0.33639004627791 * Marital_StatusDivorced
1205555   +          +     0.12327415586833 * Marital_StatusMarried
1205556   +          +      0.0060971946845 * Marital_StatusSingle
1205557   +          +     0.09875322175475 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.26305004071484 * Education2n_Cycle + 0.28231626292259 * 
EducationBasic + -0.07308832725307 * EducationGraduation + 0.20925521527006 * EducationMaster 
+ -0.33639004627791 * Marital_StatusDivorced + 0.12327415586833 * Marital_StatusMarried + 
0.0060971946845 * Marital_StatusSingle + 0.09875322175475 * Marital_StatusTogether ;
1205558   +   H11  =    -1.17886598743906 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -1.17886598743906 + H11 ;
1205559   +   H12  =    -0.91184279928765 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -0.91184279928765 + H12 ;
1205560   +   H13  =    -0.12019399765604 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.12019399765604 + H13 ;
1205561   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1205562   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1205563   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1205564   +END;
MPRINT(EM_DIAGRAM):   END;
1205565   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1205566   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1205567   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1205568   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1205569   +END;
MPRINT(EM_DIAGRAM):   END;
1205570   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1205571   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1205572   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1205573   +
1205574   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1205575   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1205576   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1205577   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1205578   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1205579   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1205580   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1205581   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1205582   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1205583   +end;
MPRINT(EM_DIAGRAM):   end;
1205584   +else do;
MPRINT(EM_DIAGRAM):   else do;
1205585   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1205586   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1205587   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1205588   +   end;
MPRINT(EM_DIAGRAM):   end;
1205589   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1205590   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1205591   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1205592   +   end;
MPRINT(EM_DIAGRAM):   end;
1205593   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1205594   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1205595   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1205596   +   end;
MPRINT(EM_DIAGRAM):   end;
1205597   +end;
MPRINT(EM_DIAGRAM):   end;
1205598   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1205599   +   P_DepVar1  =    -5.25940615604579 * H11  +     5.20640516145161 * H12
1205600   +          +    -6.47403374532058 * H13 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -5.25940615604579 * H11 + 5.20640516145161 * H12 + 
-6.47403374532058 * H13 ;
1205601   +   P_DepVar1  =    -0.12049819292714 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.12049819292714 + P_DepVar1 ;
1205602   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1205603   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1205604   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1205605   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1205606   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1205607   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1205608   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1205609   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1205610   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1205611   +END;
MPRINT(EM_DIAGRAM):   END;
1205612   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1205613   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1205614   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1205615   +END;
MPRINT(EM_DIAGRAM):   END;
1205616   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1205617   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1205618   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1205619   +END;
MPRINT(EM_DIAGRAM):   END;
1205620   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1205621   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1205622   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1205623   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1205624   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1205625   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1205626   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1205627   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1205628   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1205629   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1205630   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1205631   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1205632   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1205633   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1205634   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1205635   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1205636   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1205637   +END;
MPRINT(EM_DIAGRAM):   END;
1205638   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1205639   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1205640   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1205641   +drop
1205642   +H11
1205643   +H12
1205644   +H13
1205645   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 ;
1205646   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1205647   +* Renaming variables for Neural38;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural38;
1205648   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1205649   +* Renaming Posterior variables for Neural38;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural38;
1205650   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1205651   +drop Neural38_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural38_P_DepVar1;
1205652   +Neural38_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural38_P_DepVar1 = P_DepVar1;
1205653   +drop Neural38_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural38_P_DepVar0;
1205654   +Neural38_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural38_P_DepVar0 = P_DepVar0;
1205655   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1205656   +* Renaming _WARN_ variable for Neural38;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural38;
1205657   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1205658   +length Neural38_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural38_WARN_ $4;
1205659   +drop Neural38_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural38_WARN_;
1205660   +Neural38_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural38_WARN_ = _WARN_;
1205661   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1205662   +* Ensmbl12: Scoring Code of model 4 of 10;
MPRINT(EM_DIAGRAM):   * Ensmbl12: Scoring Code of model 4 of 10;
1205663   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1205664   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1205665   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
1205666   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1205667   +* NODE: Neural39;
MPRINT(EM_DIAGRAM):   * NODE: Neural39;
1205668   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1205669   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1205670   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1205671   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1205672   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1205673   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1205674   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1205675   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1205676   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1205677   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1205678   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1205679   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1205680   +LENGTH _WARN_ $4
1205681   +      F_DepVar  $ 12
1205682   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1205683   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1205684   +
1205685   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1205686   +
1205687   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1205688   +
1205689   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1205690   +
1205691   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1205692   +
1205693   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1205694   +
1205695   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1205696   +
1205697   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1205698   +
1205699   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1205700   +
1205701   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1205702   +
1205703   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1205704   +
1205705   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1205706   +
1205707   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1205708   +
1205709   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1205710   +
1205711   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1205712   +
1205713   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1205714   +
1205715   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1205716   +
1205717   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1205718   +
1205719   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1205720   +
1205721   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1205722   +
1205723   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1205724   +
1205725   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1205726   +
1205727   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1205728   +
1205729   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1205730   +
1205731   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1205732   +
1205733   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1205734   +
1205735   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1205736   +
1205737   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1205738   +
1205739   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1205740   +
1205741   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1205742   +
1205743   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1205744   +
1205745   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1205746   +
1205747   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1205748   +
1205749   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1205750   +
1205751   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1205752   +
1205753   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1205754   +
1205755   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1205756   +
1205757   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1205758   +
1205759   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1205760   +
1205761   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1205762   +
1205763   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1205764   +
1205765   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1205766   +
1205767   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1205768   +
1205769   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1205770   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1205771   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1205772   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1205773   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1205774   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1205775   +end;
MPRINT(EM_DIAGRAM):   end;
1205776   +else do;
MPRINT(EM_DIAGRAM):   else do;
1205777   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1205778   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1205779   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1205780   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1205781   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1205782   +   end;
MPRINT(EM_DIAGRAM):   end;
1205783   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1205784   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1205785   +   end;
MPRINT(EM_DIAGRAM):   end;
1205786   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1205787   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1205788   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1205789   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1205790   +   end;
MPRINT(EM_DIAGRAM):   end;
1205791   +end;
MPRINT(EM_DIAGRAM):   end;
1205792   +
1205793   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1205794   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1205795   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1205796   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1205797   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1205798   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1205799   +end;
MPRINT(EM_DIAGRAM):   end;
1205800   +else do;
MPRINT(EM_DIAGRAM):   else do;
1205801   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1205802   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1205803   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1205804   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1205805   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1205806   +   end;
MPRINT(EM_DIAGRAM):   end;
1205807   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1205808   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1205809   +   end;
MPRINT(EM_DIAGRAM):   end;
1205810   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1205811   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1205812   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1205813   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1205814   +   end;
MPRINT(EM_DIAGRAM):   end;
1205815   +end;
MPRINT(EM_DIAGRAM):   end;
1205816   +
1205817   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1205818   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1205819   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1205820   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1205821   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1205822   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1205823   +end;
MPRINT(EM_DIAGRAM):   end;
1205824   +else do;
MPRINT(EM_DIAGRAM):   else do;
1205825   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1205826   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1205827   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1205828   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1205829   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1205830   +   end;
MPRINT(EM_DIAGRAM):   end;
1205831   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1205832   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1205833   +   end;
MPRINT(EM_DIAGRAM):   end;
1205834   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1205835   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1205836   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1205837   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1205838   +   end;
MPRINT(EM_DIAGRAM):   end;
1205839   +end;
MPRINT(EM_DIAGRAM):   end;
1205840   +
1205841   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1205842   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1205843   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1205844   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1205845   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1205846   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1205847   +end;
MPRINT(EM_DIAGRAM):   end;
1205848   +else do;
MPRINT(EM_DIAGRAM):   else do;
1205849   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1205850   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1205851   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1205852   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1205853   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1205854   +   end;
MPRINT(EM_DIAGRAM):   end;
1205855   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1205856   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1205857   +   end;
MPRINT(EM_DIAGRAM):   end;
1205858   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1205859   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1205860   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1205861   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1205862   +   end;
MPRINT(EM_DIAGRAM):   end;
1205863   +end;
MPRINT(EM_DIAGRAM):   end;
1205864   +
1205865   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1205866   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1205867   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1205868   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1205869   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1205870   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1205871   +end;
MPRINT(EM_DIAGRAM):   end;
1205872   +else do;
MPRINT(EM_DIAGRAM):   else do;
1205873   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1205874   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1205875   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1205876   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1205877   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1205878   +   end;
MPRINT(EM_DIAGRAM):   end;
1205879   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1205880   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1205881   +   end;
MPRINT(EM_DIAGRAM):   end;
1205882   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1205883   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1205884   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1205885   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1205886   +   end;
MPRINT(EM_DIAGRAM):   end;
1205887   +end;
MPRINT(EM_DIAGRAM):   end;
1205888   +
1205889   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1205890   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1205891   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1205892   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1205893   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1205894   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1205895   +end;
MPRINT(EM_DIAGRAM):   end;
1205896   +else do;
MPRINT(EM_DIAGRAM):   else do;
1205897   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1205898   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1205899   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1205900   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1205901   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1205902   +   end;
MPRINT(EM_DIAGRAM):   end;
1205903   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1205904   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1205905   +   end;
MPRINT(EM_DIAGRAM):   end;
1205906   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1205907   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1205908   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1205909   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1205910   +   end;
MPRINT(EM_DIAGRAM):   end;
1205911   +end;
MPRINT(EM_DIAGRAM):   end;
1205912   +
1205913   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1205914   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1205915   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1205916   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1205917   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1205918   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1205919   +end;
MPRINT(EM_DIAGRAM):   end;
1205920   +else do;
MPRINT(EM_DIAGRAM):   else do;
1205921   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1205922   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1205923   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1205924   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1205925   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1205926   +   end;
MPRINT(EM_DIAGRAM):   end;
1205927   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1205928   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1205929   +   end;
MPRINT(EM_DIAGRAM):   end;
1205930   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1205931   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1205932   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1205933   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1205934   +   end;
MPRINT(EM_DIAGRAM):   end;
1205935   +end;
MPRINT(EM_DIAGRAM):   end;
1205936   +
1205937   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1205938   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
1205939   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1205940   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1205941   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1205942   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1205943   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1205944   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1205945   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1205946   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1205947   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1205948   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1205949   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1205950   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1205951   +end;
MPRINT(EM_DIAGRAM):   end;
1205952   +else do;
MPRINT(EM_DIAGRAM):   else do;
1205953   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1205954   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1205955   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1205956   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1205957   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1205958   +   end;
MPRINT(EM_DIAGRAM):   end;
1205959   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1205960   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1205961   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1205962   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1205963   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1205964   +   end;
MPRINT(EM_DIAGRAM):   end;
1205965   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1205966   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1205967   +   end;
MPRINT(EM_DIAGRAM):   end;
1205968   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1205969   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1205970   +   end;
MPRINT(EM_DIAGRAM):   end;
1205971   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1205972   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1205973   +   end;
MPRINT(EM_DIAGRAM):   end;
1205974   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1205975   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1205976   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1205977   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1205978   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1205979   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1205980   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1205981   +   end;
MPRINT(EM_DIAGRAM):   end;
1205982   +end;
MPRINT(EM_DIAGRAM):   end;
1205983   +
1205984   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1205985   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1205986   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
1205987   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1205988   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1205989   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1205990   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1205991   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1205992   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1205993   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1205994   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1205995   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1205996   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1205997   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1205998   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1205999   +end;
MPRINT(EM_DIAGRAM):   end;
1206000   +else do;
MPRINT(EM_DIAGRAM):   else do;
1206001   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1206002   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1206003   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1206004   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1206005   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1206006   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1206007   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1206008   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1206009   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1206010   +         end;
MPRINT(EM_DIAGRAM):   end;
1206011   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1206012   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1206013   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1206014   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1206015   +            end;
MPRINT(EM_DIAGRAM):   end;
1206016   +         end;
MPRINT(EM_DIAGRAM):   end;
1206017   +      end;
MPRINT(EM_DIAGRAM):   end;
1206018   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1206019   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1206020   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1206021   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1206022   +         end;
MPRINT(EM_DIAGRAM):   end;
1206023   +      end;
MPRINT(EM_DIAGRAM):   end;
1206024   +   end;
MPRINT(EM_DIAGRAM):   end;
1206025   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1206026   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1206027   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1206028   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1206029   +      end;
MPRINT(EM_DIAGRAM):   end;
1206030   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1206031   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1206032   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1206033   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1206034   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1206035   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1206036   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1206037   +         end;
MPRINT(EM_DIAGRAM):   end;
1206038   +      end;
MPRINT(EM_DIAGRAM):   end;
1206039   +   end;
MPRINT(EM_DIAGRAM):   end;
1206040   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1206041   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1206042   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1206043   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1206044   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1206045   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1206046   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1206047   +   end;
MPRINT(EM_DIAGRAM):   end;
1206048   +end;
MPRINT(EM_DIAGRAM):   end;
1206049   +
1206050   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1206051   +*** Checking missing input Interval
1206052   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1206053   +
1206054   +IF NMISS(
1206055   +   AcceptedCmpTotal ,
1206056   +   Age ,
1206057   +   Frq ,
1206058   +   Income ,
1206059   +   Kidhome ,
1206060   +   MntFishProducts ,
1206061   +   MntFruits ,
1206062   +   MntGoldProds ,
1206063   +   MntSweetProducts ,
1206064   +   MonthsAsCustomer ,
1206065   +   NumDealsPurchases ,
1206066   +   NumWebVisitsMonth ,
1206067   +   RFMstat ,
1206068   +   RMntFrq ,
1206069   +   Recency ,
1206070   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , 
MntFishProducts , MntFruits , MntGoldProds , MntSweetProducts , MonthsAsCustomer , 
NumDealsPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , Teenhome ) THEN DO;
1206071   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1206072   +
1206073   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1206074   +END;
MPRINT(EM_DIAGRAM):   END;
1206075   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1206076   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1206077   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1206078   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1206079   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1206080   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1206081   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1206082   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1206083   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1206084   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1206085   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1206086   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1206087   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1206088   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1206089   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1206090   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1206091   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1206092   +   S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
1206093   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
1206094   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1206095   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1206096   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1206097   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1206098   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1206099   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1206100   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1206101   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1206102   +END;
MPRINT(EM_DIAGRAM):   END;
1206103   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1206104   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1206105   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1206106   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1206107   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1206108   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1206109   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1206110   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1206111   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1206112   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1206113   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1206114   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1206115   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1206116   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1206117   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1206118   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1206119   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1206120   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1206121   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1206122   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1206123   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1206124   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1206125   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1206126   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1206127   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1206128   +   ELSE S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
1206129   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
1206130   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1206131   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1206132   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1206133   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1206134   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1206135   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1206136   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1206137   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1206138   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1206139   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1206140   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1206141   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1206142   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1206143   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1206144   +END;
MPRINT(EM_DIAGRAM):   END;
1206145   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1206146   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1206147   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1206148   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1206149   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1206150   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1206151   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1206152   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1206153   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1206154   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1206155   +   H11  =    -0.61879380889194 * S_AcceptedCmpTotal  +    -0.09795242603477 *
1206156   +        S_Age  +     0.36103250822255 * S_Frq  +     0.08899052794394 *
1206157   +        S_Income  +     0.25564250606874 * S_Kidhome
1206158   +          +    -0.02786629817134 * S_MntFishProducts
1206159   +          +     0.13529614728112 * S_MntFruits  +     0.19622442891821 *
1206160   +        S_MntGoldProds  +     0.14107929478218 * S_MntSweetProducts
1206161   +          +    -0.29199173107007 * S_MonthsAsCustomer
1206162   +          +    -0.59759788962473 * S_NumDealsPurchases
1206163   +          +     -0.3788422274482 * S_NumWebVisitsMonth
1206164   +          +    -0.06743318112874 * S_RFMstat  +      0.2833264895355 *
1206165   +        S_RMntFrq  +     0.70854972350771 * S_Recency
1206166   +          +     0.11936327488967 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = -0.61879380889194 * S_AcceptedCmpTotal + -0.09795242603477 * S_Age 
+ 0.36103250822255 * S_Frq + 0.08899052794394 * S_Income + 0.25564250606874 * S_Kidhome + 
-0.02786629817134 * S_MntFishProducts + 0.13529614728112 * S_MntFruits + 0.19622442891821 * 
S_MntGoldProds + 0.14107929478218 * S_MntSweetProducts + -0.29199173107007 * 
S_MonthsAsCustomer + -0.59759788962473 * S_NumDealsPurchases + -0.3788422274482 * 
S_NumWebVisitsMonth + -0.06743318112874 * S_RFMstat + 0.2833264895355 * S_RMntFrq + 
0.70854972350771 * S_Recency + 0.11936327488967 * S_Teenhome ;
1206167   +   H12  =    -0.18766983828727 * S_AcceptedCmpTotal  +       0.517042669033 *
1206168   +        S_Age  +     1.02262972068559 * S_Frq  +     0.38007459198406 *
1206169   +        S_Income  +     0.07328887474153 * S_Kidhome
1206170   +          +    -0.23284570213322 * S_MntFishProducts
1206171   +          +     0.02838864374624 * S_MntFruits  +    -0.07574618602845 *
1206172   +        S_MntGoldProds  +    -0.41131707239504 * S_MntSweetProducts
1206173   +          +     0.29669594858185 * S_MonthsAsCustomer
1206174   +          +    -0.51220833966596 * S_NumDealsPurchases
1206175   +          +    -0.72293271444385 * S_NumWebVisitsMonth
1206176   +          +    -0.20562458645044 * S_RFMstat  +    -0.52495075768839 *
1206177   +        S_RMntFrq  +      1.0795232419354 * S_Recency
1206178   +          +    -0.18997953891579 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -0.18766983828727 * S_AcceptedCmpTotal + 0.517042669033 * S_Age + 
1.02262972068559 * S_Frq + 0.38007459198406 * S_Income + 0.07328887474153 * S_Kidhome + 
-0.23284570213322 * S_MntFishProducts + 0.02838864374624 * S_MntFruits + -0.07574618602845 * 
S_MntGoldProds + -0.41131707239504 * S_MntSweetProducts + 0.29669594858185 * 
S_MonthsAsCustomer + -0.51220833966596 * S_NumDealsPurchases + -0.72293271444385 * 
S_NumWebVisitsMonth + -0.20562458645044 * S_RFMstat + -0.52495075768839 * S_RMntFrq + 
1.0795232419354 * S_Recency + -0.18997953891579 * S_Teenhome ;
1206179   +   H13  =    -0.49159501579895 * S_AcceptedCmpTotal  +    -0.16293971978781 *
1206180   +        S_Age  +    -0.02977525702894 * S_Frq  +    -0.78728568889664 *
1206181   +        S_Income  +    -0.68209910558389 * S_Kidhome
1206182   +          +     0.23366174254474 * S_MntFishProducts
1206183   +          +    -0.08764688950673 * S_MntFruits  +    -0.38895649975347 *
1206184   +        S_MntGoldProds  +     0.02270546080284 * S_MntSweetProducts
1206185   +          +    -0.05759532204753 * S_MonthsAsCustomer
1206186   +          +    -0.30170163047261 * S_NumDealsPurchases
1206187   +          +    -0.57711437834603 * S_NumWebVisitsMonth
1206188   +          +    -0.09851659878757 * S_RFMstat  +    -0.20102310575519 *
1206189   +        S_RMntFrq  +     0.80994896921796 * S_Recency
1206190   +          +     0.32766576826101 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = -0.49159501579895 * S_AcceptedCmpTotal + -0.16293971978781 * S_Age 
+ -0.02977525702894 * S_Frq + -0.78728568889664 * S_Income + -0.68209910558389 * S_Kidhome + 
0.23366174254474 * S_MntFishProducts + -0.08764688950673 * S_MntFruits + -0.38895649975347 * 
S_MntGoldProds + 0.02270546080284 * S_MntSweetProducts + -0.05759532204753 * 
S_MonthsAsCustomer + -0.30170163047261 * S_NumDealsPurchases + -0.57711437834603 * 
S_NumWebVisitsMonth + -0.09851659878757 * S_RFMstat + -0.20102310575519 * S_RMntFrq + 
0.80994896921796 * S_Recency + 0.32766576826101 * S_Teenhome ;
1206191   +   H14  =    -0.11122937165995 * S_AcceptedCmpTotal  +     0.06859829254058 *
1206192   +        S_Age  +    -0.60966071706708 * S_Frq  +    -1.00949681880427 *
1206193   +        S_Income  +     0.67855138873039 * S_Kidhome
1206194   +          +    -0.05297743313476 * S_MntFishProducts
1206195   +          +     0.21613302257797 * S_MntFruits  +     0.03843790921347 *
1206196   +        S_MntGoldProds  +     0.25543771093558 * S_MntSweetProducts
1206197   +          +    -0.15817861274553 * S_MonthsAsCustomer
1206198   +          +     0.25133066233725 * S_NumDealsPurchases
1206199   +          +     0.08802636187267 * S_NumWebVisitsMonth
1206200   +          +    -0.04637957487976 * S_RFMstat  +    -0.31656429052936 *
1206201   +        S_RMntFrq  +      0.7228272496527 * S_Recency
1206202   +          +     0.58629319995218 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = -0.11122937165995 * S_AcceptedCmpTotal + 0.06859829254058 * S_Age 
+ -0.60966071706708 * S_Frq + -1.00949681880427 * S_Income + 0.67855138873039 * S_Kidhome + 
-0.05297743313476 * S_MntFishProducts + 0.21613302257797 * S_MntFruits + 0.03843790921347 * 
S_MntGoldProds + 0.25543771093558 * S_MntSweetProducts + -0.15817861274553 * 
S_MonthsAsCustomer + 0.25133066233725 * S_NumDealsPurchases + 0.08802636187267 * 
S_NumWebVisitsMonth + -0.04637957487976 * S_RFMstat + -0.31656429052936 * S_RMntFrq + 
0.7228272496527 * S_Recency + 0.58629319995218 * S_Teenhome ;
1206203   +   H11  = H11  +     0.23190135069025 * AcceptedCmp10
1206204   +          +     0.04686213078143 * AcceptedCmp20  +     0.17662818955575 *
1206205   +        AcceptedCmp30  +     0.03498741067378 * AcceptedCmp40
1206206   +          +     0.61042747626768 * AcceptedCmp50  +    -0.12810871081838 *
1206207   +        Complain0  +     0.03047400476944 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.23190135069025 * AcceptedCmp10 + 0.04686213078143 * 
AcceptedCmp20 + 0.17662818955575 * AcceptedCmp30 + 0.03498741067378 * AcceptedCmp40 + 
0.61042747626768 * AcceptedCmp50 + -0.12810871081838 * Complain0 + 0.03047400476944 * 
HigherEducationBinary0 ;
1206208   +   H12  = H12  +     0.53873807658752 * AcceptedCmp10
1206209   +          +     0.29840055428915 * AcceptedCmp20  +     0.52740574468702 *
1206210   +        AcceptedCmp30  +     0.27242279016627 * AcceptedCmp40
1206211   +          +     0.07126269343217 * AcceptedCmp50  +    -0.14631570192286 *
1206212   +        Complain0  +     0.16629352334811 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.53873807658752 * AcceptedCmp10 + 0.29840055428915 * 
AcceptedCmp20 + 0.52740574468702 * AcceptedCmp30 + 0.27242279016627 * AcceptedCmp40 + 
0.07126269343217 * AcceptedCmp50 + -0.14631570192286 * Complain0 + 0.16629352334811 * 
HigherEducationBinary0 ;
1206213   +   H13  = H13  +     0.09118941740461 * AcceptedCmp10
1206214   +          +     0.04178457860358 * AcceptedCmp20  +     0.48487479920901 *
1206215   +        AcceptedCmp30  +    -0.80910928087974 * AcceptedCmp40
1206216   +          +      0.4667831985075 * AcceptedCmp50  +    -0.29601289494349 *
1206217   +        Complain0  +     0.10690006738431 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.09118941740461 * AcceptedCmp10 + 0.04178457860358 * 
AcceptedCmp20 + 0.48487479920901 * AcceptedCmp30 + -0.80910928087974 * AcceptedCmp40 + 
0.4667831985075 * AcceptedCmp50 + -0.29601289494349 * Complain0 + 0.10690006738431 * 
HigherEducationBinary0 ;
1206218   +   H14  = H14  +     0.21382858049752 * AcceptedCmp10
1206219   +          +     0.12652392800261 * AcceptedCmp20  +     0.30403608200617 *
1206220   +        AcceptedCmp30  +     0.51966382166521 * AcceptedCmp40
1206221   +          +    -0.14518145187533 * AcceptedCmp50  +     0.27045295957801 *
1206222   +        Complain0  +    -0.49307163723406 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.21382858049752 * AcceptedCmp10 + 0.12652392800261 * 
AcceptedCmp20 + 0.30403608200617 * AcceptedCmp30 + 0.51966382166521 * AcceptedCmp40 + 
-0.14518145187533 * AcceptedCmp50 + 0.27045295957801 * Complain0 + -0.49307163723406 * 
HigherEducationBinary0 ;
1206223   +   H11  = H11  +    -0.15292649085097 * Education2n_Cycle
1206224   +          +     0.00016605452926 * EducationBasic  +    -0.04208965271063 *
1206225   +        EducationGraduation  +    -0.05433922630608 * EducationMaster
1206226   +          +      0.0528075343138 * Marital_StatusDivorced
1206227   +          +    -0.08269844855231 * Marital_StatusMarried
1206228   +          +     0.43411839786169 * Marital_StatusSingle
1206229   +          +     0.38324605489754 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.15292649085097 * Education2n_Cycle + 0.00016605452926 * 
EducationBasic + -0.04208965271063 * EducationGraduation + -0.05433922630608 * EducationMaster 
+ 0.0528075343138 * Marital_StatusDivorced + -0.08269844855231 * Marital_StatusMarried + 
0.43411839786169 * Marital_StatusSingle + 0.38324605489754 * Marital_StatusTogether ;
1206230   +   H12  = H12  +      0.3082578019648 * Education2n_Cycle
1206231   +          +    -0.01380127751108 * EducationBasic  +    -0.11076736066311 *
1206232   +        EducationGraduation  +     -0.1586948328241 * EducationMaster
1206233   +          +    -0.12842912869907 * Marital_StatusDivorced
1206234   +          +     0.11838814754642 * Marital_StatusMarried
1206235   +          +     0.01184261900927 * Marital_StatusSingle
1206236   +          +     0.14066273070318 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.3082578019648 * Education2n_Cycle + -0.01380127751108 * 
EducationBasic + -0.11076736066311 * EducationGraduation + -0.1586948328241 * EducationMaster 
+ -0.12842912869907 * Marital_StatusDivorced + 0.11838814754642 * Marital_StatusMarried + 
0.01184261900927 * Marital_StatusSingle + 0.14066273070318 * Marital_StatusTogether ;
1206237   +   H13  = H13  +     0.02861254390946 * Education2n_Cycle
1206238   +          +      0.4349807830691 * EducationBasic  +    -0.31346964692246 *
1206239   +        EducationGraduation  +      0.0620488761517 * EducationMaster
1206240   +          +    -0.22110722201709 * Marital_StatusDivorced
1206241   +          +      0.1355339029843 * Marital_StatusMarried
1206242   +          +    -0.33157273596382 * Marital_StatusSingle
1206243   +          +    -0.19725820483372 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.02861254390946 * Education2n_Cycle + 0.4349807830691 * 
EducationBasic + -0.31346964692246 * EducationGraduation + 0.0620488761517 * EducationMaster + 
-0.22110722201709 * Marital_StatusDivorced + 0.1355339029843 * Marital_StatusMarried + 
-0.33157273596382 * Marital_StatusSingle + -0.19725820483372 * Marital_StatusTogether ;
1206244   +   H14  = H14  +    -0.15196350137644 * Education2n_Cycle
1206245   +          +     0.11143610044897 * EducationBasic  +    -0.23356442851658 *
1206246   +        EducationGraduation  +     0.26881272673711 * EducationMaster
1206247   +          +    -0.21663247467797 * Marital_StatusDivorced
1206248   +          +     1.11468603898508 * Marital_StatusMarried
1206249   +          +    -0.84252388146943 * Marital_StatusSingle
1206250   +          +     0.91707021954171 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.15196350137644 * Education2n_Cycle + 0.11143610044897 * 
EducationBasic + -0.23356442851658 * EducationGraduation + 0.26881272673711 * EducationMaster 
+ -0.21663247467797 * Marital_StatusDivorced + 1.11468603898508 * Marital_StatusMarried + 
-0.84252388146943 * Marital_StatusSingle + 0.91707021954171 * Marital_StatusTogether ;
1206251   +   H11  =     0.69752617990443 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 0.69752617990443 + H11 ;
1206252   +   H12  =     0.88932226025287 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.88932226025287 + H12 ;
1206253   +   H13  =    -0.23351093325425 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.23351093325425 + H13 ;
1206254   +   H14  =      1.5565991209041 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 1.5565991209041 + H14 ;
1206255   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1206256   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1206257   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1206258   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1206259   +END;
MPRINT(EM_DIAGRAM):   END;
1206260   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1206261   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1206262   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1206263   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1206264   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1206265   +END;
MPRINT(EM_DIAGRAM):   END;
1206266   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1206267   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1206268   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1206269   +
1206270   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1206271   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1206272   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1206273   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1206274   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1206275   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1206276   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1206277   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1206278   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1206279   +end;
MPRINT(EM_DIAGRAM):   end;
1206280   +else do;
MPRINT(EM_DIAGRAM):   else do;
1206281   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1206282   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1206283   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1206284   +   end;
MPRINT(EM_DIAGRAM):   end;
1206285   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1206286   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1206287   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1206288   +   end;
MPRINT(EM_DIAGRAM):   end;
1206289   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1206290   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1206291   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1206292   +   end;
MPRINT(EM_DIAGRAM):   end;
1206293   +end;
MPRINT(EM_DIAGRAM):   end;
1206294   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1206295   +   P_DepVar1  =    -1.10683009838286 * H11  +    -1.85294488833715 * H12
1206296   +          +    -2.73624761150933 * H13  +    -2.51103548718704 * H14 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.10683009838286 * H11 + -1.85294488833715 * H12 + 
-2.73624761150933 * H13 + -2.51103548718704 * H14 ;
1206297   +   P_DepVar1  =    -0.86309949021709 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.86309949021709 + P_DepVar1 ;
1206298   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1206299   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1206300   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1206301   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1206302   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1206303   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1206304   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1206305   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1206306   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1206307   +END;
MPRINT(EM_DIAGRAM):   END;
1206308   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1206309   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1206310   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1206311   +END;
MPRINT(EM_DIAGRAM):   END;
1206312   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1206313   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1206314   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1206315   +END;
MPRINT(EM_DIAGRAM):   END;
1206316   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1206317   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1206318   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1206319   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1206320   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1206321   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1206322   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1206323   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1206324   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1206325   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1206326   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1206327   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1206328   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1206329   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1206330   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1206331   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1206332   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1206333   +END;
MPRINT(EM_DIAGRAM):   END;
1206334   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1206335   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1206336   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1206337   +drop
1206338   +H11
1206339   +H12
1206340   +H13
1206341   +H14
1206342   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 ;
1206343   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1206344   +* Renaming variables for Neural39;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural39;
1206345   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1206346   +* Renaming Posterior variables for Neural39;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural39;
1206347   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1206348   +drop Neural39_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural39_P_DepVar1;
1206349   +Neural39_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural39_P_DepVar1 = P_DepVar1;
1206350   +drop Neural39_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural39_P_DepVar0;
1206351   +Neural39_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural39_P_DepVar0 = P_DepVar0;
1206352   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1206353   +* Renaming _WARN_ variable for Neural39;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural39;
1206354   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1206355   +length Neural39_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural39_WARN_ $4;
1206356   +drop Neural39_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural39_WARN_;
1206357   +Neural39_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural39_WARN_ = _WARN_;
1206358   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1206359   +* Ensmbl12: Scoring Code of model 5 of 10;
MPRINT(EM_DIAGRAM):   * Ensmbl12: Scoring Code of model 5 of 10;
1206360   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1206361   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1206362   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
1206363   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1206364   +* NODE: Neural40;
MPRINT(EM_DIAGRAM):   * NODE: Neural40;
1206365   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1206366   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1206367   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1206368   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1206369   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1206370   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1206371   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1206372   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1206373   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1206374   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1206375   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1206376   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1206377   +LENGTH _WARN_ $4
1206378   +      F_DepVar  $ 12
1206379   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1206380   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1206381   +
1206382   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1206383   +
1206384   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1206385   +
1206386   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1206387   +
1206388   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1206389   +
1206390   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1206391   +
1206392   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1206393   +
1206394   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1206395   +
1206396   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1206397   +
1206398   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1206399   +
1206400   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1206401   +
1206402   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1206403   +
1206404   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1206405   +
1206406   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1206407   +
1206408   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1206409   +
1206410   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1206411   +
1206412   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1206413   +
1206414   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1206415   +
1206416   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1206417   +
1206418   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1206419   +
1206420   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1206421   +
1206422   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1206423   +
1206424   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1206425   +
1206426   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1206427   +
1206428   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1206429   +
1206430   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1206431   +
1206432   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1206433   +
1206434   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1206435   +
1206436   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1206437   +
1206438   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1206439   +
1206440   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1206441   +
1206442   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1206443   +
1206444   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1206445   +
1206446   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1206447   +
1206448   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1206449   +
1206450   +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
1206451   +
1206452   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1206453   +
1206454   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1206455   +
1206456   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1206457   +
1206458   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1206459   +
1206460   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1206461   +
1206462   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1206463   +
1206464   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1206465   +
1206466   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1206467   +
1206468   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1206469   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1206470   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1206471   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1206472   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1206473   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1206474   +end;
MPRINT(EM_DIAGRAM):   end;
1206475   +else do;
MPRINT(EM_DIAGRAM):   else do;
1206476   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1206477   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1206478   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1206479   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1206480   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1206481   +   end;
MPRINT(EM_DIAGRAM):   end;
1206482   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1206483   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1206484   +   end;
MPRINT(EM_DIAGRAM):   end;
1206485   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1206486   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1206487   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1206488   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1206489   +   end;
MPRINT(EM_DIAGRAM):   end;
1206490   +end;
MPRINT(EM_DIAGRAM):   end;
1206491   +
1206492   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1206493   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1206494   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1206495   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1206496   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1206497   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1206498   +end;
MPRINT(EM_DIAGRAM):   end;
1206499   +else do;
MPRINT(EM_DIAGRAM):   else do;
1206500   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1206501   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1206502   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1206503   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1206504   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1206505   +   end;
MPRINT(EM_DIAGRAM):   end;
1206506   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1206507   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1206508   +   end;
MPRINT(EM_DIAGRAM):   end;
1206509   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1206510   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1206511   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1206512   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1206513   +   end;
MPRINT(EM_DIAGRAM):   end;
1206514   +end;
MPRINT(EM_DIAGRAM):   end;
1206515   +
1206516   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1206517   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1206518   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1206519   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1206520   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1206521   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1206522   +end;
MPRINT(EM_DIAGRAM):   end;
1206523   +else do;
MPRINT(EM_DIAGRAM):   else do;
1206524   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1206525   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1206526   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1206527   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1206528   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1206529   +   end;
MPRINT(EM_DIAGRAM):   end;
1206530   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1206531   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1206532   +   end;
MPRINT(EM_DIAGRAM):   end;
1206533   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1206534   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1206535   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1206536   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1206537   +   end;
MPRINT(EM_DIAGRAM):   end;
1206538   +end;
MPRINT(EM_DIAGRAM):   end;
1206539   +
1206540   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1206541   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1206542   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1206543   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1206544   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1206545   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1206546   +end;
MPRINT(EM_DIAGRAM):   end;
1206547   +else do;
MPRINT(EM_DIAGRAM):   else do;
1206548   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1206549   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1206550   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1206551   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1206552   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1206553   +   end;
MPRINT(EM_DIAGRAM):   end;
1206554   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1206555   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1206556   +   end;
MPRINT(EM_DIAGRAM):   end;
1206557   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1206558   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1206559   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1206560   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1206561   +   end;
MPRINT(EM_DIAGRAM):   end;
1206562   +end;
MPRINT(EM_DIAGRAM):   end;
1206563   +
1206564   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1206565   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1206566   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1206567   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1206568   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1206569   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1206570   +end;
MPRINT(EM_DIAGRAM):   end;
1206571   +else do;
MPRINT(EM_DIAGRAM):   else do;
1206572   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1206573   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1206574   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1206575   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1206576   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1206577   +   end;
MPRINT(EM_DIAGRAM):   end;
1206578   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1206579   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1206580   +   end;
MPRINT(EM_DIAGRAM):   end;
1206581   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1206582   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1206583   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1206584   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1206585   +   end;
MPRINT(EM_DIAGRAM):   end;
1206586   +end;
MPRINT(EM_DIAGRAM):   end;
1206587   +
1206588   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1206589   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1206590   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1206591   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1206592   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1206593   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1206594   +end;
MPRINT(EM_DIAGRAM):   end;
1206595   +else do;
MPRINT(EM_DIAGRAM):   else do;
1206596   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1206597   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1206598   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1206599   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1206600   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1206601   +   end;
MPRINT(EM_DIAGRAM):   end;
1206602   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1206603   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1206604   +   end;
MPRINT(EM_DIAGRAM):   end;
1206605   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1206606   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1206607   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1206608   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1206609   +   end;
MPRINT(EM_DIAGRAM):   end;
1206610   +end;
MPRINT(EM_DIAGRAM):   end;
1206611   +
1206612   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1206613   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1206614   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1206615   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1206616   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1206617   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1206618   +end;
MPRINT(EM_DIAGRAM):   end;
1206619   +else do;
MPRINT(EM_DIAGRAM):   else do;
1206620   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1206621   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1206622   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1206623   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1206624   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1206625   +   end;
MPRINT(EM_DIAGRAM):   end;
1206626   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1206627   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1206628   +   end;
MPRINT(EM_DIAGRAM):   end;
1206629   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1206630   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1206631   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1206632   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1206633   +   end;
MPRINT(EM_DIAGRAM):   end;
1206634   +end;
MPRINT(EM_DIAGRAM):   end;
1206635   +
1206636   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1206637   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
1206638   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1206639   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1206640   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1206641   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1206642   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1206643   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1206644   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1206645   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1206646   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1206647   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1206648   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1206649   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1206650   +end;
MPRINT(EM_DIAGRAM):   end;
1206651   +else do;
MPRINT(EM_DIAGRAM):   else do;
1206652   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1206653   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1206654   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1206655   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1206656   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1206657   +   end;
MPRINT(EM_DIAGRAM):   end;
1206658   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1206659   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1206660   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1206661   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1206662   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1206663   +   end;
MPRINT(EM_DIAGRAM):   end;
1206664   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1206665   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1206666   +   end;
MPRINT(EM_DIAGRAM):   end;
1206667   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1206668   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1206669   +   end;
MPRINT(EM_DIAGRAM):   end;
1206670   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1206671   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1206672   +   end;
MPRINT(EM_DIAGRAM):   end;
1206673   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1206674   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1206675   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1206676   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1206677   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1206678   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1206679   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1206680   +   end;
MPRINT(EM_DIAGRAM):   end;
1206681   +end;
MPRINT(EM_DIAGRAM):   end;
1206682   +
1206683   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1206684   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1206685   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
1206686   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1206687   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1206688   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1206689   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1206690   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1206691   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1206692   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1206693   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1206694   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1206695   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1206696   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1206697   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1206698   +end;
MPRINT(EM_DIAGRAM):   end;
1206699   +else do;
MPRINT(EM_DIAGRAM):   else do;
1206700   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1206701   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1206702   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1206703   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1206704   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1206705   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1206706   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1206707   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1206708   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1206709   +         end;
MPRINT(EM_DIAGRAM):   end;
1206710   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1206711   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1206712   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1206713   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1206714   +            end;
MPRINT(EM_DIAGRAM):   end;
1206715   +         end;
MPRINT(EM_DIAGRAM):   end;
1206716   +      end;
MPRINT(EM_DIAGRAM):   end;
1206717   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1206718   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1206719   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1206720   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1206721   +         end;
MPRINT(EM_DIAGRAM):   end;
1206722   +      end;
MPRINT(EM_DIAGRAM):   end;
1206723   +   end;
MPRINT(EM_DIAGRAM):   end;
1206724   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1206725   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1206726   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1206727   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1206728   +      end;
MPRINT(EM_DIAGRAM):   end;
1206729   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1206730   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1206731   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1206732   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1206733   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1206734   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1206735   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1206736   +         end;
MPRINT(EM_DIAGRAM):   end;
1206737   +      end;
MPRINT(EM_DIAGRAM):   end;
1206738   +   end;
MPRINT(EM_DIAGRAM):   end;
1206739   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1206740   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1206741   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1206742   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1206743   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1206744   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1206745   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1206746   +   end;
MPRINT(EM_DIAGRAM):   end;
1206747   +end;
MPRINT(EM_DIAGRAM):   end;
1206748   +
1206749   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1206750   +*** Checking missing input Interval
1206751   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1206752   +
1206753   +IF NMISS(
1206754   +   AcceptedCmpTotal ,
1206755   +   Age ,
1206756   +   Frq ,
1206757   +   Income ,
1206758   +   Kidhome ,
1206759   +   MntFishProducts ,
1206760   +   MntFruits ,
1206761   +   MntGoldProds ,
1206762   +   MntSweetProducts ,
1206763   +   MonthsAsCustomer ,
1206764   +   NumDealsPurchases ,
1206765   +   NumWebVisitsMonth ,
1206766   +   RFMstat ,
1206767   +   RMntFrq ,
1206768   +   Recency ,
1206769   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , 
MntFishProducts , MntFruits , MntGoldProds , MntSweetProducts , MonthsAsCustomer , 
NumDealsPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , Teenhome ) THEN DO;
1206770   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1206771   +
1206772   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1206773   +END;
MPRINT(EM_DIAGRAM):   END;
1206774   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1206775   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1206776   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1206777   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1206778   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1206779   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1206780   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1206781   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1206782   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1206783   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1206784   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1206785   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1206786   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1206787   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1206788   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1206789   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1206790   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1206791   +   S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
1206792   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
1206793   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1206794   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1206795   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1206796   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1206797   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1206798   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1206799   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1206800   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1206801   +END;
MPRINT(EM_DIAGRAM):   END;
1206802   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1206803   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1206804   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1206805   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1206806   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1206807   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1206808   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1206809   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1206810   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1206811   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1206812   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1206813   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1206814   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1206815   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1206816   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1206817   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1206818   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1206819   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1206820   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1206821   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1206822   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1206823   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1206824   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1206825   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1206826   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1206827   +   ELSE S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
1206828   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
1206829   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1206830   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1206831   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1206832   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1206833   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1206834   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1206835   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1206836   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1206837   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1206838   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1206839   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1206840   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1206841   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1206842   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1206843   +END;
MPRINT(EM_DIAGRAM):   END;
1206844   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1206845   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1206846   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1206847   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1206848   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1206849   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1206850   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1206851   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1206852   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1206853   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1206854   +   H11  =      0.0175934799517 * S_AcceptedCmpTotal  +     0.05885450913465 *
1206855   +        S_Age  +    -0.17194721523787 * S_Frq  +    -0.82356228294539 *
1206856   +        S_Income  +     0.39869341630865 * S_Kidhome
1206857   +          +    -0.04263586382867 * S_MntFishProducts
1206858   +          +     0.02697365132515 * S_MntFruits  +     0.04818007940845 *
1206859   +        S_MntGoldProds  +      0.1933390486387 * S_MntSweetProducts
1206860   +          +    -0.14308588367026 * S_MonthsAsCustomer
1206861   +          +    -0.01053346972758 * S_NumDealsPurchases
1206862   +          +    -0.02308351901024 * S_NumWebVisitsMonth
1206863   +          +     0.00403225397753 * S_RFMstat  +    -0.21691316840182 *
1206864   +        S_RMntFrq  +     0.53938373050534 * S_Recency
1206865   +          +     0.55541282723709 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.0175934799517 * S_AcceptedCmpTotal + 0.05885450913465 * S_Age + 
-0.17194721523787 * S_Frq + -0.82356228294539 * S_Income + 0.39869341630865 * S_Kidhome + 
-0.04263586382867 * S_MntFishProducts + 0.02697365132515 * S_MntFruits + 0.04818007940845 * 
S_MntGoldProds + 0.1933390486387 * S_MntSweetProducts + -0.14308588367026 * S_MonthsAsCustomer 
+ -0.01053346972758 * S_NumDealsPurchases + -0.02308351901024 * S_NumWebVisitsMonth + 
0.00403225397753 * S_RFMstat + -0.21691316840182 * S_RMntFrq + 0.53938373050534 * S_Recency + 
0.55541282723709 * S_Teenhome ;
1206866   +   H12  =    -0.31735811206172 * S_AcceptedCmpTotal  +    -0.13976815294846 *
1206867   +        S_Age  +    -0.11928757030551 * S_Frq  +    -0.03597478449162 *
1206868   +        S_Income  +     0.31514301668626 * S_Kidhome
1206869   +          +    -0.05723808748191 * S_MntFishProducts
1206870   +          +     0.04545715816601 * S_MntFruits  +     0.19006209866265 *
1206871   +        S_MntGoldProds  +     0.34690576354698 * S_MntSweetProducts
1206872   +          +    -0.48738730918684 * S_MonthsAsCustomer
1206873   +          +     0.31545795225489 * S_NumDealsPurchases
1206874   +          +     0.24686603252864 * S_NumWebVisitsMonth
1206875   +          +     0.29857007170218 * S_RFMstat  +    -0.01009427724752 *
1206876   +        S_RMntFrq  +    -0.48894693883774 * S_Recency
1206877   +          +    -0.32384426712368 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -0.31735811206172 * S_AcceptedCmpTotal + -0.13976815294846 * S_Age 
+ -0.11928757030551 * S_Frq + -0.03597478449162 * S_Income + 0.31514301668626 * S_Kidhome + 
-0.05723808748191 * S_MntFishProducts + 0.04545715816601 * S_MntFruits + 0.19006209866265 * 
S_MntGoldProds + 0.34690576354698 * S_MntSweetProducts + -0.48738730918684 * 
S_MonthsAsCustomer + 0.31545795225489 * S_NumDealsPurchases + 0.24686603252864 * 
S_NumWebVisitsMonth + 0.29857007170218 * S_RFMstat + -0.01009427724752 * S_RMntFrq + 
-0.48894693883774 * S_Recency + -0.32384426712368 * S_Teenhome ;
1206878   +   H13  =    -0.67705794412683 * S_AcceptedCmpTotal  +     -0.1538815804864 *
1206879   +        S_Age  +    -0.32580272740463 * S_Frq  +    -0.42829033761305 *
1206880   +        S_Income  +    -0.48452563006855 * S_Kidhome
1206881   +          +      0.1638851163007 * S_MntFishProducts
1206882   +          +      0.0664068987141 * S_MntFruits  +    -0.54942999951449 *
1206883   +        S_MntGoldProds  +    -0.03119903843323 * S_MntSweetProducts
1206884   +          +    -0.09008316729574 * S_MonthsAsCustomer
1206885   +          +    -0.45452883452999 * S_NumDealsPurchases
1206886   +          +    -0.51499533680205 * S_NumWebVisitsMonth
1206887   +          +    -0.31380282266424 * S_RFMstat  +    -0.49525143192723 *
1206888   +        S_RMntFrq  +     0.78729387300328 * S_Recency
1206889   +          +    -0.00915408985389 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = -0.67705794412683 * S_AcceptedCmpTotal + -0.1538815804864 * S_Age 
+ -0.32580272740463 * S_Frq + -0.42829033761305 * S_Income + -0.48452563006855 * S_Kidhome + 
0.1638851163007 * S_MntFishProducts + 0.0664068987141 * S_MntFruits + -0.54942999951449 * 
S_MntGoldProds + -0.03119903843323 * S_MntSweetProducts + -0.09008316729574 * 
S_MonthsAsCustomer + -0.45452883452999 * S_NumDealsPurchases + -0.51499533680205 * 
S_NumWebVisitsMonth + -0.31380282266424 * S_RFMstat + -0.49525143192723 * S_RMntFrq + 
0.78729387300328 * S_Recency + -0.00915408985389 * S_Teenhome ;
1206890   +   H14  =     0.38318271090494 * S_AcceptedCmpTotal  +     0.06739638561066 *
1206891   +        S_Age  +     0.06912614028701 * S_Frq  +     0.14095220260271 *
1206892   +        S_Income  +    -0.62959343200613 * S_Kidhome
1206893   +          +    -0.08953561593231 * S_MntFishProducts
1206894   +          +    -0.17218233364246 * S_MntFruits  +    -0.00637076803669 *
1206895   +        S_MntGoldProds  +    -0.30194599011284 * S_MntSweetProducts
1206896   +          +    -0.04786752357029 * S_MonthsAsCustomer
1206897   +          +     0.01658790214447 * S_NumDealsPurchases
1206898   +          +     0.60508225698649 * S_NumWebVisitsMonth
1206899   +          +     0.24353060507938 * S_RFMstat  +    -0.16860031884486 *
1206900   +        S_RMntFrq  +    -0.74371082820398 * S_Recency
1206901   +          +    -0.33551735128078 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = 0.38318271090494 * S_AcceptedCmpTotal + 0.06739638561066 * S_Age + 
0.06912614028701 * S_Frq + 0.14095220260271 * S_Income + -0.62959343200613 * S_Kidhome + 
-0.08953561593231 * S_MntFishProducts + -0.17218233364246 * S_MntFruits + -0.00637076803669 * 
S_MntGoldProds + -0.30194599011284 * S_MntSweetProducts + -0.04786752357029 * 
S_MonthsAsCustomer + 0.01658790214447 * S_NumDealsPurchases + 0.60508225698649 * 
S_NumWebVisitsMonth + 0.24353060507938 * S_RFMstat + -0.16860031884486 * S_RMntFrq + 
-0.74371082820398 * S_Recency + -0.33551735128078 * S_Teenhome ;
1206902   +   H15  =    -0.33857166416401 * S_AcceptedCmpTotal  +     0.16520608022036 *
1206903   +        S_Age  +     0.94641603263172 * S_Frq  +     0.27973805141234 *
1206904   +        S_Income  +    -0.02417847760857 * S_Kidhome
1206905   +          +    -0.15499190740194 * S_MntFishProducts
1206906   +          +     0.06053779821593 * S_MntFruits  +     0.01880479324025 *
1206907   +        S_MntGoldProds  +    -0.12339726666832 * S_MntSweetProducts
1206908   +          +     0.03507116553703 * S_MonthsAsCustomer
1206909   +          +    -0.55190381693021 * S_NumDealsPurchases
1206910   +          +    -0.59332657995985 * S_NumWebVisitsMonth
1206911   +          +    -0.06593374840561 * S_RFMstat  +     -0.1695910963416 *
1206912   +        S_RMntFrq  +     0.67557246434122 * S_Recency
1206913   +          +    -0.18658362303394 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H15 = -0.33857166416401 * S_AcceptedCmpTotal + 0.16520608022036 * S_Age 
+ 0.94641603263172 * S_Frq + 0.27973805141234 * S_Income + -0.02417847760857 * S_Kidhome + 
-0.15499190740194 * S_MntFishProducts + 0.06053779821593 * S_MntFruits + 0.01880479324025 * 
S_MntGoldProds + -0.12339726666832 * S_MntSweetProducts + 0.03507116553703 * 
S_MonthsAsCustomer + -0.55190381693021 * S_NumDealsPurchases + -0.59332657995985 * 
S_NumWebVisitsMonth + -0.06593374840561 * S_RFMstat + -0.1695910963416 * S_RMntFrq + 
0.67557246434122 * S_Recency + -0.18658362303394 * S_Teenhome ;
1206914   +   H11  = H11  +     0.33421746514492 * AcceptedCmp10
1206915   +          +     0.40665603760529 * AcceptedCmp20  +     0.31091046539166 *
1206916   +        AcceptedCmp30  +     0.31067810471417 * AcceptedCmp40
1206917   +          +     0.23230606314386 * AcceptedCmp50  +     0.16336773428886 *
1206918   +        Complain0  +    -0.30987882500611 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.33421746514492 * AcceptedCmp10 + 0.40665603760529 * 
AcceptedCmp20 + 0.31091046539166 * AcceptedCmp30 + 0.31067810471417 * AcceptedCmp40 + 
0.23230606314386 * AcceptedCmp50 + 0.16336773428886 * Complain0 + -0.30987882500611 * 
HigherEducationBinary0 ;
1206919   +   H12  = H12  +     0.15837463939449 * AcceptedCmp10
1206920   +          +    -0.01452684677445 * AcceptedCmp20  +    -0.18194082864383 *
1206921   +        AcceptedCmp30  +     0.10656170173016 * AcceptedCmp40
1206922   +          +     0.27710912124072 * AcceptedCmp50  +     0.21438736172214 *
1206923   +        Complain0  +      0.2669951422121 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.15837463939449 * AcceptedCmp10 + -0.01452684677445 * 
AcceptedCmp20 + -0.18194082864383 * AcceptedCmp30 + 0.10656170173016 * AcceptedCmp40 + 
0.27710912124072 * AcceptedCmp50 + 0.21438736172214 * Complain0 + 0.2669951422121 * 
HigherEducationBinary0 ;
1206924   +   H13  = H13  +    -0.11101425179048 * AcceptedCmp10
1206925   +          +    -0.13751555879468 * AcceptedCmp20  +     0.15733527433639 *
1206926   +        AcceptedCmp30  +    -0.09214109408136 * AcceptedCmp40
1206927   +          +     0.20478673178439 * AcceptedCmp50  +    -0.28890027497717 *
1206928   +        Complain0  +     0.12242984309847 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.11101425179048 * AcceptedCmp10 + -0.13751555879468 * 
AcceptedCmp20 + 0.15733527433639 * AcceptedCmp30 + -0.09214109408136 * AcceptedCmp40 + 
0.20478673178439 * AcceptedCmp50 + -0.28890027497717 * Complain0 + 0.12242984309847 * 
HigherEducationBinary0 ;
1206929   +   H14  = H14  +     0.23187291622457 * AcceptedCmp10
1206930   +          +    -0.00683976547266 * AcceptedCmp20  +    -0.31710598764248 *
1206931   +        AcceptedCmp30  +     0.01758514221597 * AcceptedCmp40
1206932   +          +     0.01100509244187 * AcceptedCmp50  +     0.18584999296157 *
1206933   +        Complain0  +     0.02524550049258 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.23187291622457 * AcceptedCmp10 + -0.00683976547266 * 
AcceptedCmp20 + -0.31710598764248 * AcceptedCmp30 + 0.01758514221597 * AcceptedCmp40 + 
0.01100509244187 * AcceptedCmp50 + 0.18584999296157 * Complain0 + 0.02524550049258 * 
HigherEducationBinary0 ;
1206934   +   H15  = H15  +     0.53220831693924 * AcceptedCmp10
1206935   +          +     0.01983211122446 * AcceptedCmp20  +      0.4704897795251 *
1206936   +        AcceptedCmp30  +    -0.05798671810245 * AcceptedCmp40
1206937   +          +      0.2900384423652 * AcceptedCmp50  +     0.05796705496261 *
1206938   +        Complain0  +     0.17745347141736 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.53220831693924 * AcceptedCmp10 + 0.01983211122446 * 
AcceptedCmp20 + 0.4704897795251 * AcceptedCmp30 + -0.05798671810245 * AcceptedCmp40 + 
0.2900384423652 * AcceptedCmp50 + 0.05796705496261 * Complain0 + 0.17745347141736 * 
HigherEducationBinary0 ;
1206939   +   H11  = H11  +     0.02871001640043 * Education2n_Cycle
1206940   +          +    -0.13470776546868 * EducationBasic  +    -0.09722995474504 *
1206941   +        EducationGraduation  +     0.23764107317064 * EducationMaster
1206942   +          +    -0.41654638301737 * Marital_StatusDivorced
1206943   +          +     0.65956207700583 * Marital_StatusMarried
1206944   +          +    -0.52573042887166 * Marital_StatusSingle
1206945   +          +     0.70466028872575 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.02871001640043 * Education2n_Cycle + -0.13470776546868 * 
EducationBasic + -0.09722995474504 * EducationGraduation + 0.23764107317064 * EducationMaster 
+ -0.41654638301737 * Marital_StatusDivorced + 0.65956207700583 * Marital_StatusMarried + 
-0.52573042887166 * Marital_StatusSingle + 0.70466028872575 * Marital_StatusTogether ;
1206946   +   H12  = H12  +    -0.18219729356622 * Education2n_Cycle
1206947   +          +    -0.04034334204744 * EducationBasic  +     0.26266153233615 *
1206948   +        EducationGraduation  +     0.04617834975571 * EducationMaster
1206949   +          +    -0.32313846862799 * Marital_StatusDivorced
1206950   +          +     0.15910539009887 * Marital_StatusMarried
1206951   +          +     0.28781821946114 * Marital_StatusSingle
1206952   +          +    -0.31451367898445 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.18219729356622 * Education2n_Cycle + -0.04034334204744 * 
EducationBasic + 0.26266153233615 * EducationGraduation + 0.04617834975571 * EducationMaster + 
-0.32313846862799 * Marital_StatusDivorced + 0.15910539009887 * Marital_StatusMarried + 
0.28781821946114 * Marital_StatusSingle + -0.31451367898445 * Marital_StatusTogether ;
1206953   +   H13  = H13  +     0.03267721493849 * Education2n_Cycle
1206954   +          +     0.16906837093601 * EducationBasic  +    -0.24874822218195 *
1206955   +        EducationGraduation  +    -0.16815820019721 * EducationMaster
1206956   +          +    -0.06481096024989 * Marital_StatusDivorced
1206957   +          +    -0.01184060710261 * Marital_StatusMarried
1206958   +          +    -0.04932258474026 * Marital_StatusSingle
1206959   +          +     -0.1515388053958 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.03267721493849 * Education2n_Cycle + 0.16906837093601 * 
EducationBasic + -0.24874822218195 * EducationGraduation + -0.16815820019721 * EducationMaster 
+ -0.06481096024989 * Marital_StatusDivorced + -0.01184060710261 * Marital_StatusMarried + 
-0.04932258474026 * Marital_StatusSingle + -0.1515388053958 * Marital_StatusTogether ;
1206960   +   H14  = H14  +     0.04382537081818 * Education2n_Cycle
1206961   +          +     0.09896945976445 * EducationBasic  +      0.2410849324915 *
1206962   +        EducationGraduation  +    -0.17878202935912 * EducationMaster
1206963   +          +      0.2062190716357 * Marital_StatusDivorced
1206964   +          +      -0.523160668609 * Marital_StatusMarried
1206965   +          +     0.50687401816278 * Marital_StatusSingle
1206966   +          +    -0.14896192891933 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.04382537081818 * Education2n_Cycle + 0.09896945976445 * 
EducationBasic + 0.2410849324915 * EducationGraduation + -0.17878202935912 * EducationMaster + 
0.2062190716357 * Marital_StatusDivorced + -0.523160668609 * Marital_StatusMarried + 
0.50687401816278 * Marital_StatusSingle + -0.14896192891933 * Marital_StatusTogether ;
1206967   +   H15  = H15  +    -0.08178258730533 * Education2n_Cycle
1206968   +          +      0.2352291498146 * EducationBasic  +     0.00142061419661 *
1206969   +        EducationGraduation  +      0.0248100493803 * EducationMaster
1206970   +          +     -0.1386176879533 * Marital_StatusDivorced
1206971   +          +    -0.17611433777439 * Marital_StatusMarried
1206972   +          +     0.09908348348999 * Marital_StatusSingle
1206973   +          +     0.03642332762739 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + -0.08178258730533 * Education2n_Cycle + 0.2352291498146 * 
EducationBasic + 0.00142061419661 * EducationGraduation + 0.0248100493803 * EducationMaster + 
-0.1386176879533 * Marital_StatusDivorced + -0.17611433777439 * Marital_StatusMarried + 
0.09908348348999 * Marital_StatusSingle + 0.03642332762739 * Marital_StatusTogether ;
1206974   +   H11  =     0.45628072516851 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 0.45628072516851 + H11 ;
1206975   +   H12  =    -0.95695553300305 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -0.95695553300305 + H12 ;
1206976   +   H13  =    -0.44156518168947 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.44156518168947 + H13 ;
1206977   +   H14  =      0.5435213841731 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 0.5435213841731 + H14 ;
1206978   +   H15  =     0.82816554742793 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = 0.82816554742793 + H15 ;
1206979   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1206980   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1206981   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1206982   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1206983   +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
1206984   +END;
MPRINT(EM_DIAGRAM):   END;
1206985   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1206986   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1206987   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1206988   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1206989   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1206990   +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
1206991   +END;
MPRINT(EM_DIAGRAM):   END;
1206992   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1206993   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1206994   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1206995   +
1206996   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1206997   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1206998   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1206999   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1207000   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1207001   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1207002   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1207003   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1207004   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1207005   +end;
MPRINT(EM_DIAGRAM):   end;
1207006   +else do;
MPRINT(EM_DIAGRAM):   else do;
1207007   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1207008   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1207009   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1207010   +   end;
MPRINT(EM_DIAGRAM):   end;
1207011   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1207012   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1207013   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1207014   +   end;
MPRINT(EM_DIAGRAM):   end;
1207015   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1207016   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1207017   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1207018   +   end;
MPRINT(EM_DIAGRAM):   end;
1207019   +end;
MPRINT(EM_DIAGRAM):   end;
1207020   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1207021   +   P_DepVar1  =    -3.08501570662701 * H11  +     0.89180279281701 * H12
1207022   +          +    -2.65199906073292 * H13  +     1.47191997336768 * H14
1207023   +          +     -1.9303334635002 * H15 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.08501570662701 * H11 + 0.89180279281701 * H12 + 
-2.65199906073292 * H13 + 1.47191997336768 * H14 + -1.9303334635002 * H15 ;
1207024   +   P_DepVar1  =    -1.84416627670626 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.84416627670626 + P_DepVar1 ;
1207025   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1207026   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1207027   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1207028   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1207029   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1207030   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1207031   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1207032   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1207033   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1207034   +END;
MPRINT(EM_DIAGRAM):   END;
1207035   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1207036   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1207037   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1207038   +END;
MPRINT(EM_DIAGRAM):   END;
1207039   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1207040   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1207041   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1207042   +END;
MPRINT(EM_DIAGRAM):   END;
1207043   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1207044   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1207045   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1207046   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1207047   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1207048   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1207049   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1207050   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1207051   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1207052   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1207053   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1207054   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1207055   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1207056   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1207057   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1207058   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1207059   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1207060   +END;
MPRINT(EM_DIAGRAM):   END;
1207061   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1207062   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1207063   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1207064   +drop
1207065   +H11
1207066   +H12
1207067   +H13
1207068   +H14
1207069   +H15
1207070   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 ;
1207071   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1207072   +* Renaming variables for Neural40;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural40;
1207073   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1207074   +* Renaming Posterior variables for Neural40;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural40;
1207075   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1207076   +drop Neural40_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural40_P_DepVar1;
1207077   +Neural40_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural40_P_DepVar1 = P_DepVar1;
1207078   +drop Neural40_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural40_P_DepVar0;
1207079   +Neural40_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural40_P_DepVar0 = P_DepVar0;
1207080   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1207081   +* Renaming _WARN_ variable for Neural40;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural40;
1207082   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1207083   +length Neural40_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural40_WARN_ $4;
1207084   +drop Neural40_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural40_WARN_;
1207085   +Neural40_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural40_WARN_ = _WARN_;
1207086   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1207087   +* Ensmbl12: Scoring Code of model 6 of 10;
MPRINT(EM_DIAGRAM):   * Ensmbl12: Scoring Code of model 6 of 10;
1207088   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1207089   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1207090   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
1207091   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1207092   +* NODE: Neural41;
MPRINT(EM_DIAGRAM):   * NODE: Neural41;
1207093   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1207094   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1207095   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1207096   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1207097   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1207098   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1207099   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1207100   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1207101   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1207102   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1207103   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1207104   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1207105   +LENGTH _WARN_ $4
1207106   +      F_DepVar  $ 12
1207107   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1207108   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1207109   +
1207110   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1207111   +
1207112   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1207113   +
1207114   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1207115   +
1207116   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1207117   +
1207118   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1207119   +
1207120   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1207121   +
1207122   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1207123   +
1207124   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1207125   +
1207126   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1207127   +
1207128   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1207129   +
1207130   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1207131   +
1207132   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1207133   +
1207134   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1207135   +
1207136   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1207137   +
1207138   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1207139   +
1207140   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1207141   +
1207142   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1207143   +
1207144   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1207145   +
1207146   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1207147   +
1207148   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1207149   +
1207150   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1207151   +
1207152   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1207153   +
1207154   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1207155   +
1207156   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1207157   +
1207158   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1207159   +
1207160   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1207161   +
1207162   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1207163   +
1207164   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1207165   +
1207166   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1207167   +
1207168   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1207169   +
1207170   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1207171   +
1207172   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1207173   +
1207174   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1207175   +
1207176   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1207177   +
1207178   +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
1207179   +
1207180   +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
1207181   +
1207182   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1207183   +
1207184   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1207185   +
1207186   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1207187   +
1207188   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1207189   +
1207190   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1207191   +
1207192   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1207193   +
1207194   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1207195   +
1207196   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1207197   +
1207198   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1207199   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1207200   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1207201   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1207202   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1207203   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1207204   +end;
MPRINT(EM_DIAGRAM):   end;
1207205   +else do;
MPRINT(EM_DIAGRAM):   else do;
1207206   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1207207   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1207208   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1207209   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1207210   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1207211   +   end;
MPRINT(EM_DIAGRAM):   end;
1207212   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1207213   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1207214   +   end;
MPRINT(EM_DIAGRAM):   end;
1207215   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1207216   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1207217   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1207218   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1207219   +   end;
MPRINT(EM_DIAGRAM):   end;
1207220   +end;
MPRINT(EM_DIAGRAM):   end;
1207221   +
1207222   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1207223   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1207224   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1207225   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1207226   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1207227   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1207228   +end;
MPRINT(EM_DIAGRAM):   end;
1207229   +else do;
MPRINT(EM_DIAGRAM):   else do;
1207230   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1207231   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1207232   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1207233   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1207234   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1207235   +   end;
MPRINT(EM_DIAGRAM):   end;
1207236   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1207237   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1207238   +   end;
MPRINT(EM_DIAGRAM):   end;
1207239   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1207240   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1207241   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1207242   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1207243   +   end;
MPRINT(EM_DIAGRAM):   end;
1207244   +end;
MPRINT(EM_DIAGRAM):   end;
1207245   +
1207246   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1207247   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1207248   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1207249   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1207250   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1207251   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1207252   +end;
MPRINT(EM_DIAGRAM):   end;
1207253   +else do;
MPRINT(EM_DIAGRAM):   else do;
1207254   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1207255   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1207256   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1207257   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1207258   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1207259   +   end;
MPRINT(EM_DIAGRAM):   end;
1207260   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1207261   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1207262   +   end;
MPRINT(EM_DIAGRAM):   end;
1207263   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1207264   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1207265   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1207266   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1207267   +   end;
MPRINT(EM_DIAGRAM):   end;
1207268   +end;
MPRINT(EM_DIAGRAM):   end;
1207269   +
1207270   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1207271   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1207272   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1207273   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1207274   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1207275   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1207276   +end;
MPRINT(EM_DIAGRAM):   end;
1207277   +else do;
MPRINT(EM_DIAGRAM):   else do;
1207278   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1207279   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1207280   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1207281   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1207282   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1207283   +   end;
MPRINT(EM_DIAGRAM):   end;
1207284   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1207285   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1207286   +   end;
MPRINT(EM_DIAGRAM):   end;
1207287   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1207288   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1207289   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1207290   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1207291   +   end;
MPRINT(EM_DIAGRAM):   end;
1207292   +end;
MPRINT(EM_DIAGRAM):   end;
1207293   +
1207294   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1207295   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1207296   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1207297   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1207298   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1207299   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1207300   +end;
MPRINT(EM_DIAGRAM):   end;
1207301   +else do;
MPRINT(EM_DIAGRAM):   else do;
1207302   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1207303   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1207304   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1207305   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1207306   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1207307   +   end;
MPRINT(EM_DIAGRAM):   end;
1207308   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1207309   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1207310   +   end;
MPRINT(EM_DIAGRAM):   end;
1207311   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1207312   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1207313   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1207314   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1207315   +   end;
MPRINT(EM_DIAGRAM):   end;
1207316   +end;
MPRINT(EM_DIAGRAM):   end;
1207317   +
1207318   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1207319   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1207320   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1207321   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1207322   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1207323   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1207324   +end;
MPRINT(EM_DIAGRAM):   end;
1207325   +else do;
MPRINT(EM_DIAGRAM):   else do;
1207326   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1207327   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1207328   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1207329   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1207330   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1207331   +   end;
MPRINT(EM_DIAGRAM):   end;
1207332   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1207333   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1207334   +   end;
MPRINT(EM_DIAGRAM):   end;
1207335   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1207336   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1207337   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1207338   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1207339   +   end;
MPRINT(EM_DIAGRAM):   end;
1207340   +end;
MPRINT(EM_DIAGRAM):   end;
1207341   +
1207342   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1207343   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1207344   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1207345   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1207346   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1207347   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1207348   +end;
MPRINT(EM_DIAGRAM):   end;
1207349   +else do;
MPRINT(EM_DIAGRAM):   else do;
1207350   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1207351   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1207352   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1207353   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1207354   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1207355   +   end;
MPRINT(EM_DIAGRAM):   end;
1207356   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1207357   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1207358   +   end;
MPRINT(EM_DIAGRAM):   end;
1207359   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1207360   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1207361   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1207362   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1207363   +   end;
MPRINT(EM_DIAGRAM):   end;
1207364   +end;
MPRINT(EM_DIAGRAM):   end;
1207365   +
1207366   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1207367   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
1207368   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1207369   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1207370   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1207371   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1207372   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1207373   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1207374   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1207375   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1207376   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1207377   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1207378   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1207379   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1207380   +end;
MPRINT(EM_DIAGRAM):   end;
1207381   +else do;
MPRINT(EM_DIAGRAM):   else do;
1207382   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1207383   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1207384   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1207385   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1207386   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1207387   +   end;
MPRINT(EM_DIAGRAM):   end;
1207388   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1207389   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1207390   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1207391   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1207392   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1207393   +   end;
MPRINT(EM_DIAGRAM):   end;
1207394   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1207395   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1207396   +   end;
MPRINT(EM_DIAGRAM):   end;
1207397   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1207398   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1207399   +   end;
MPRINT(EM_DIAGRAM):   end;
1207400   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1207401   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1207402   +   end;
MPRINT(EM_DIAGRAM):   end;
1207403   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1207404   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1207405   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1207406   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1207407   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1207408   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1207409   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1207410   +   end;
MPRINT(EM_DIAGRAM):   end;
1207411   +end;
MPRINT(EM_DIAGRAM):   end;
1207412   +
1207413   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1207414   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1207415   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
1207416   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1207417   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1207418   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1207419   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1207420   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1207421   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1207422   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1207423   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1207424   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1207425   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1207426   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1207427   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1207428   +end;
MPRINT(EM_DIAGRAM):   end;
1207429   +else do;
MPRINT(EM_DIAGRAM):   else do;
1207430   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1207431   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1207432   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1207433   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1207434   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1207435   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1207436   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1207437   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1207438   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1207439   +         end;
MPRINT(EM_DIAGRAM):   end;
1207440   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1207441   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1207442   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1207443   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1207444   +            end;
MPRINT(EM_DIAGRAM):   end;
1207445   +         end;
MPRINT(EM_DIAGRAM):   end;
1207446   +      end;
MPRINT(EM_DIAGRAM):   end;
1207447   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1207448   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1207449   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1207450   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1207451   +         end;
MPRINT(EM_DIAGRAM):   end;
1207452   +      end;
MPRINT(EM_DIAGRAM):   end;
1207453   +   end;
MPRINT(EM_DIAGRAM):   end;
1207454   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1207455   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1207456   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1207457   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1207458   +      end;
MPRINT(EM_DIAGRAM):   end;
1207459   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1207460   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1207461   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1207462   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1207463   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1207464   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1207465   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1207466   +         end;
MPRINT(EM_DIAGRAM):   end;
1207467   +      end;
MPRINT(EM_DIAGRAM):   end;
1207468   +   end;
MPRINT(EM_DIAGRAM):   end;
1207469   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1207470   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1207471   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1207472   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1207473   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1207474   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1207475   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1207476   +   end;
MPRINT(EM_DIAGRAM):   end;
1207477   +end;
MPRINT(EM_DIAGRAM):   end;
1207478   +
1207479   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1207480   +*** Checking missing input Interval
1207481   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1207482   +
1207483   +IF NMISS(
1207484   +   AcceptedCmpTotal ,
1207485   +   Age ,
1207486   +   Frq ,
1207487   +   Income ,
1207488   +   Kidhome ,
1207489   +   MntFishProducts ,
1207490   +   MntFruits ,
1207491   +   MntGoldProds ,
1207492   +   MntSweetProducts ,
1207493   +   MonthsAsCustomer ,
1207494   +   NumDealsPurchases ,
1207495   +   NumWebVisitsMonth ,
1207496   +   RFMstat ,
1207497   +   RMntFrq ,
1207498   +   Recency ,
1207499   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , 
MntFishProducts , MntFruits , MntGoldProds , MntSweetProducts , MonthsAsCustomer , 
NumDealsPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , Teenhome ) THEN DO;
1207500   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1207501   +
1207502   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1207503   +END;
MPRINT(EM_DIAGRAM):   END;
1207504   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1207505   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1207506   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1207507   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1207508   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1207509   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1207510   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1207511   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1207512   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1207513   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1207514   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1207515   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1207516   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1207517   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1207518   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1207519   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1207520   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1207521   +   S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
1207522   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
1207523   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1207524   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1207525   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1207526   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1207527   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1207528   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1207529   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1207530   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1207531   +END;
MPRINT(EM_DIAGRAM):   END;
1207532   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1207533   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1207534   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1207535   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1207536   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1207537   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1207538   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1207539   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1207540   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1207541   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1207542   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1207543   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1207544   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1207545   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1207546   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1207547   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1207548   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1207549   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1207550   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1207551   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1207552   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1207553   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1207554   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1207555   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1207556   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1207557   +   ELSE S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
1207558   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
1207559   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1207560   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1207561   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1207562   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1207563   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1207564   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1207565   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1207566   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1207567   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1207568   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1207569   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1207570   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1207571   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1207572   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1207573   +END;
MPRINT(EM_DIAGRAM):   END;
1207574   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1207575   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1207576   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1207577   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1207578   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1207579   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1207580   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1207581   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1207582   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1207583   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1207584   +   H11  =     0.00008202203841 * S_AcceptedCmpTotal  +    -0.13126483592154 *
1207585   +        S_Age  +    -0.18503379491116 * S_Frq  +      0.0037482920266 *
1207586   +        S_Income  +    -0.52684337240504 * S_Kidhome
1207587   +          +     0.07835956947085 * S_MntFishProducts
1207588   +          +    -0.04668308882455 * S_MntFruits  +     0.05311471984852 *
1207589   +        S_MntGoldProds  +    -0.39576933150762 * S_MntSweetProducts
1207590   +          +    -0.44463888327841 * S_MonthsAsCustomer
1207591   +          +    -0.20310227710644 * S_NumDealsPurchases
1207592   +          +     0.06594467408568 * S_NumWebVisitsMonth
1207593   +          +      0.1351556470497 * S_RFMstat  +    -0.29446460505048 *
1207594   +        S_RMntFrq  +    -0.68878207173764 * S_Recency
1207595   +          +    -0.29241927123525 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.00008202203841 * S_AcceptedCmpTotal + -0.13126483592154 * S_Age 
+ -0.18503379491116 * S_Frq + 0.0037482920266 * S_Income + -0.52684337240504 * S_Kidhome + 
0.07835956947085 * S_MntFishProducts + -0.04668308882455 * S_MntFruits + 0.05311471984852 * 
S_MntGoldProds + -0.39576933150762 * S_MntSweetProducts + -0.44463888327841 * 
S_MonthsAsCustomer + -0.20310227710644 * S_NumDealsPurchases + 0.06594467408568 * 
S_NumWebVisitsMonth + 0.1351556470497 * S_RFMstat + -0.29446460505048 * S_RMntFrq + 
-0.68878207173764 * S_Recency + -0.29241927123525 * S_Teenhome ;
1207596   +   H12  =     0.38864749644126 * S_AcceptedCmpTotal  +    -0.01077611135972 *
1207597   +        S_Age  +     0.24187074268223 * S_Frq  +     0.64180191864108 *
1207598   +        S_Income  +     0.91025818069308 * S_Kidhome
1207599   +          +     0.26585860774761 * S_MntFishProducts
1207600   +          +     -0.3087386188037 * S_MntFruits  +     0.14643568534568 *
1207601   +        S_MntGoldProds  +     0.23763200275034 * S_MntSweetProducts
1207602   +          +    -0.12421403342454 * S_MonthsAsCustomer
1207603   +          +     0.66931066909347 * S_NumDealsPurchases
1207604   +          +     0.35050056776957 * S_NumWebVisitsMonth
1207605   +          +     0.16127659142199 * S_RFMstat  +     0.04112742589329 *
1207606   +        S_RMntFrq  +    -0.83075146355987 * S_Recency
1207607   +          +    -0.37723917156575 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = 0.38864749644126 * S_AcceptedCmpTotal + -0.01077611135972 * S_Age 
+ 0.24187074268223 * S_Frq + 0.64180191864108 * S_Income + 0.91025818069308 * S_Kidhome + 
0.26585860774761 * S_MntFishProducts + -0.3087386188037 * S_MntFruits + 0.14643568534568 * 
S_MntGoldProds + 0.23763200275034 * S_MntSweetProducts + -0.12421403342454 * 
S_MonthsAsCustomer + 0.66931066909347 * S_NumDealsPurchases + 0.35050056776957 * 
S_NumWebVisitsMonth + 0.16127659142199 * S_RFMstat + 0.04112742589329 * S_RMntFrq + 
-0.83075146355987 * S_Recency + -0.37723917156575 * S_Teenhome ;
1207608   +   H13  =     0.02339384767281 * S_AcceptedCmpTotal  +    -0.17700567590774 *
1207609   +        S_Age  +    -0.38060509731554 * S_Frq  +    -0.86026143079344 *
1207610   +        S_Income  +     0.63027536562783 * S_Kidhome
1207611   +          +     0.15303249164566 * S_MntFishProducts
1207612   +          +    -0.04780128957622 * S_MntFruits  +    -0.02064261038049 *
1207613   +        S_MntGoldProds  +     0.26238383938455 * S_MntSweetProducts
1207614   +          +    -0.21006970062531 * S_MonthsAsCustomer
1207615   +          +      0.2955774677605 * S_NumDealsPurchases
1207616   +          +    -0.15769947513958 * S_NumWebVisitsMonth
1207617   +          +    -0.02874776268384 * S_RFMstat  +     -0.3955429869434 *
1207618   +        S_RMntFrq  +      0.3744122250079 * S_Recency
1207619   +          +     0.58295521976226 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = 0.02339384767281 * S_AcceptedCmpTotal + -0.17700567590774 * S_Age 
+ -0.38060509731554 * S_Frq + -0.86026143079344 * S_Income + 0.63027536562783 * S_Kidhome + 
0.15303249164566 * S_MntFishProducts + -0.04780128957622 * S_MntFruits + -0.02064261038049 * 
S_MntGoldProds + 0.26238383938455 * S_MntSweetProducts + -0.21006970062531 * 
S_MonthsAsCustomer + 0.2955774677605 * S_NumDealsPurchases + -0.15769947513958 * 
S_NumWebVisitsMonth + -0.02874776268384 * S_RFMstat + -0.3955429869434 * S_RMntFrq + 
0.3744122250079 * S_Recency + 0.58295521976226 * S_Teenhome ;
1207620   +   H14  =    -0.22800152627721 * S_AcceptedCmpTotal  +     0.27991667815594 *
1207621   +        S_Age  +     0.89001922321833 * S_Frq  +     0.17467731177386 *
1207622   +        S_Income  +    -0.00985947331416 * S_Kidhome
1207623   +          +    -0.27114701164817 * S_MntFishProducts
1207624   +          +     0.32554392037328 * S_MntFruits  +     0.06705670808471 *
1207625   +        S_MntGoldProds  +     -0.3590087223323 * S_MntSweetProducts
1207626   +          +    -0.02702818828921 * S_MonthsAsCustomer
1207627   +          +    -0.63381188911946 * S_NumDealsPurchases
1207628   +          +    -0.86143000704363 * S_NumWebVisitsMonth
1207629   +          +    -0.16788755655818 * S_RFMstat  +    -0.09712800982817 *
1207630   +        S_RMntFrq  +     0.61892338869919 * S_Recency
1207631   +          +    -0.21544816860839 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = -0.22800152627721 * S_AcceptedCmpTotal + 0.27991667815594 * S_Age 
+ 0.89001922321833 * S_Frq + 0.17467731177386 * S_Income + -0.00985947331416 * S_Kidhome + 
-0.27114701164817 * S_MntFishProducts + 0.32554392037328 * S_MntFruits + 0.06705670808471 * 
S_MntGoldProds + -0.3590087223323 * S_MntSweetProducts + -0.02702818828921 * 
S_MonthsAsCustomer + -0.63381188911946 * S_NumDealsPurchases + -0.86143000704363 * 
S_NumWebVisitsMonth + -0.16788755655818 * S_RFMstat + -0.09712800982817 * S_RMntFrq + 
0.61892338869919 * S_Recency + -0.21544816860839 * S_Teenhome ;
1207632   +   H15  =      0.0846389232492 * S_AcceptedCmpTotal  +    -0.03933692648164 *
1207633   +        S_Age  +     0.26004669807852 * S_Frq  +     0.30306661543325 *
1207634   +        S_Income  +    -0.24206929946772 * S_Kidhome
1207635   +          +    -0.19039689229491 * S_MntFishProducts
1207636   +          +    -0.22957509816007 * S_MntFruits  +    -0.35006912387254 *
1207637   +        S_MntGoldProds  +    -0.02737135204648 * S_MntSweetProducts
1207638   +          +     0.03815221487927 * S_MonthsAsCustomer
1207639   +          +    -0.43579024169696 * S_NumDealsPurchases
1207640   +          +    -0.27796253880432 * S_NumWebVisitsMonth
1207641   +          +     0.15010895791429 * S_RFMstat  +     0.24377797912725 *
1207642   +        S_RMntFrq  +     0.50547916383425 * S_Recency
1207643   +          +    -0.22622962943787 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H15 = 0.0846389232492 * S_AcceptedCmpTotal + -0.03933692648164 * S_Age + 
0.26004669807852 * S_Frq + 0.30306661543325 * S_Income + -0.24206929946772 * S_Kidhome + 
-0.19039689229491 * S_MntFishProducts + -0.22957509816007 * S_MntFruits + -0.35006912387254 * 
S_MntGoldProds + -0.02737135204648 * S_MntSweetProducts + 0.03815221487927 * 
S_MonthsAsCustomer + -0.43579024169696 * S_NumDealsPurchases + -0.27796253880432 * 
S_NumWebVisitsMonth + 0.15010895791429 * S_RFMstat + 0.24377797912725 * S_RMntFrq + 
0.50547916383425 * S_Recency + -0.22622962943787 * S_Teenhome ;
1207644   +   H16  =     0.03788304209102 * S_AcceptedCmpTotal  +    -0.27022676521755 *
1207645   +        S_Age  +    -0.17480141247917 * S_Frq  +     0.53345624791204 *
1207646   +        S_Income  +    -0.25736924536467 * S_Kidhome
1207647   +          +    -0.04400855145817 * S_MntFishProducts
1207648   +          +    -0.06651358259718 * S_MntFruits  +     -0.0117104183032 *
1207649   +        S_MntGoldProds  +    -0.02790266219853 * S_MntSweetProducts
1207650   +          +     0.00265986106691 * S_MonthsAsCustomer
1207651   +          +     0.27331919080312 * S_NumDealsPurchases
1207652   +          +     0.22836119952787 * S_NumWebVisitsMonth
1207653   +          +     0.09245783028838 * S_RFMstat  +     0.10223459152488 *
1207654   +        S_RMntFrq  +    -0.90398250269857 * S_Recency
1207655   +          +     -0.2621421532112 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H16 = 0.03788304209102 * S_AcceptedCmpTotal + -0.27022676521755 * S_Age 
+ -0.17480141247917 * S_Frq + 0.53345624791204 * S_Income + -0.25736924536467 * S_Kidhome + 
-0.04400855145817 * S_MntFishProducts + -0.06651358259718 * S_MntFruits + -0.0117104183032 * 
S_MntGoldProds + -0.02790266219853 * S_MntSweetProducts + 0.00265986106691 * 
S_MonthsAsCustomer + 0.27331919080312 * S_NumDealsPurchases + 0.22836119952787 * 
S_NumWebVisitsMonth + 0.09245783028838 * S_RFMstat + 0.10223459152488 * S_RMntFrq + 
-0.90398250269857 * S_Recency + -0.2621421532112 * S_Teenhome ;
1207656   +   H11  = H11  +     0.24155985997122 * AcceptedCmp10
1207657   +          +     0.02727843300562 * AcceptedCmp20  +     0.05990453920581 *
1207658   +        AcceptedCmp30  +    -0.43469138041411 * AcceptedCmp40
1207659   +          +     0.00076050589964 * AcceptedCmp50  +     0.43307119233671 *
1207660   +        Complain0  +     0.23242177664865 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.24155985997122 * AcceptedCmp10 + 0.02727843300562 * 
AcceptedCmp20 + 0.05990453920581 * AcceptedCmp30 + -0.43469138041411 * AcceptedCmp40 + 
0.00076050589964 * AcceptedCmp50 + 0.43307119233671 * Complain0 + 0.23242177664865 * 
HigherEducationBinary0 ;
1207661   +   H12  = H12  +     0.04034689771488 * AcceptedCmp10
1207662   +          +    -0.01358747117911 * AcceptedCmp20  +    -0.29883922116453 *
1207663   +        AcceptedCmp30  +     0.58794258522438 * AcceptedCmp40
1207664   +          +    -0.40659406037079 * AcceptedCmp50  +     0.59068991602469 *
1207665   +        Complain0  +     -0.3122461557933 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.04034689771488 * AcceptedCmp10 + -0.01358747117911 * 
AcceptedCmp20 + -0.29883922116453 * AcceptedCmp30 + 0.58794258522438 * AcceptedCmp40 + 
-0.40659406037079 * AcceptedCmp50 + 0.59068991602469 * Complain0 + -0.3122461557933 * 
HigherEducationBinary0 ;
1207666   +   H13  = H13  +     0.49941486221932 * AcceptedCmp10
1207667   +          +     0.42891153022885 * AcceptedCmp20  +     0.28744085742243 *
1207668   +        AcceptedCmp30  +     0.54657253664873 * AcceptedCmp40
1207669   +          +     0.10655487579255 * AcceptedCmp50  +     0.11223153893952 *
1207670   +        Complain0  +    -0.44704943665138 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.49941486221932 * AcceptedCmp10 + 0.42891153022885 * 
AcceptedCmp20 + 0.28744085742243 * AcceptedCmp30 + 0.54657253664873 * AcceptedCmp40 + 
0.10655487579255 * AcceptedCmp50 + 0.11223153893952 * Complain0 + -0.44704943665138 * 
HigherEducationBinary0 ;
1207671   +   H14  = H14  +     0.70510583713907 * AcceptedCmp10
1207672   +          +     0.04052111261969 * AcceptedCmp20  +     0.76301816100625 *
1207673   +        AcceptedCmp30  +     0.09753552533639 * AcceptedCmp40
1207674   +          +     0.40999088454383 * AcceptedCmp50  +     0.19278448059725 *
1207675   +        Complain0  +     0.09127136236268 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.70510583713907 * AcceptedCmp10 + 0.04052111261969 * 
AcceptedCmp20 + 0.76301816100625 * AcceptedCmp30 + 0.09753552533639 * AcceptedCmp40 + 
0.40999088454383 * AcceptedCmp50 + 0.19278448059725 * Complain0 + 0.09127136236268 * 
HigherEducationBinary0 ;
1207676   +   H15  = H15  +     0.30535300313392 * AcceptedCmp10
1207677   +          +    -0.01605332227631 * AcceptedCmp20  +     0.09278623651632 *
1207678   +        AcceptedCmp30  +     0.03468239765482 * AcceptedCmp40
1207679   +          +     0.19720723485806 * AcceptedCmp50  +    -0.32364247007443 *
1207680   +        Complain0  +    -0.20695533150084 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.30535300313392 * AcceptedCmp10 + -0.01605332227631 * 
AcceptedCmp20 + 0.09278623651632 * AcceptedCmp30 + 0.03468239765482 * AcceptedCmp40 + 
0.19720723485806 * AcceptedCmp50 + -0.32364247007443 * Complain0 + -0.20695533150084 * 
HigherEducationBinary0 ;
1207681   +   H16  = H16  +    -0.19354253973215 * AcceptedCmp10
1207682   +          +     0.01566685138596 * AcceptedCmp20  +    -0.28250218144785 *
1207683   +        AcceptedCmp30  +    -0.13118265240955 * AcceptedCmp40
1207684   +          +    -0.03808858956936 * AcceptedCmp50  +    -0.19850701105147 *
1207685   +        Complain0  +     0.14297616111345 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H16 = H16 + -0.19354253973215 * AcceptedCmp10 + 0.01566685138596 * 
AcceptedCmp20 + -0.28250218144785 * AcceptedCmp30 + -0.13118265240955 * AcceptedCmp40 + 
-0.03808858956936 * AcceptedCmp50 + -0.19850701105147 * Complain0 + 0.14297616111345 * 
HigherEducationBinary0 ;
1207686   +   H11  = H11  +     0.05082493200436 * Education2n_Cycle
1207687   +          +    -0.08192239267323 * EducationBasic  +    -0.01445849926378 *
1207688   +        EducationGraduation  +     0.01459143816519 * EducationMaster
1207689   +          +     0.12502276672336 * Marital_StatusDivorced
1207690   +          +    -0.02606508453741 * Marital_StatusMarried
1207691   +          +      0.0418850245266 * Marital_StatusSingle
1207692   +          +     0.02050996572132 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.05082493200436 * Education2n_Cycle + -0.08192239267323 * 
EducationBasic + -0.01445849926378 * EducationGraduation + 0.01459143816519 * EducationMaster 
+ 0.12502276672336 * Marital_StatusDivorced + -0.02606508453741 * Marital_StatusMarried + 
0.0418850245266 * Marital_StatusSingle + 0.02050996572132 * Marital_StatusTogether ;
1207693   +   H12  = H12  +     -0.1900759238575 * Education2n_Cycle
1207694   +          +     0.13535241443003 * EducationBasic  +    -0.00199771592906 *
1207695   +        EducationGraduation  +     0.00476193515914 * EducationMaster
1207696   +          +      0.1943860669795 * Marital_StatusDivorced
1207697   +          +     -0.1529596261268 * Marital_StatusMarried
1207698   +          +     0.24187461301348 * Marital_StatusSingle
1207699   +          +     0.09157538589749 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.1900759238575 * Education2n_Cycle + 0.13535241443003 * 
EducationBasic + -0.00199771592906 * EducationGraduation + 0.00476193515914 * EducationMaster 
+ 0.1943860669795 * Marital_StatusDivorced + -0.1529596261268 * Marital_StatusMarried + 
0.24187461301348 * Marital_StatusSingle + 0.09157538589749 * Marital_StatusTogether ;
1207700   +   H13  = H13  +     0.02140936656506 * Education2n_Cycle
1207701   +          +     0.05845427475503 * EducationBasic  +    -0.44298208278895 *
1207702   +        EducationGraduation  +     0.17149477011717 * EducationMaster
1207703   +          +    -0.19677652422622 * Marital_StatusDivorced
1207704   +          +     0.75897106429478 * Marital_StatusMarried
1207705   +          +    -0.66692260284833 * Marital_StatusSingle
1207706   +          +     0.58287349221333 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.02140936656506 * Education2n_Cycle + 0.05845427475503 * 
EducationBasic + -0.44298208278895 * EducationGraduation + 0.17149477011717 * EducationMaster 
+ -0.19677652422622 * Marital_StatusDivorced + 0.75897106429478 * Marital_StatusMarried + 
-0.66692260284833 * Marital_StatusSingle + 0.58287349221333 * Marital_StatusTogether ;
1207707   +   H14  = H14  +     0.18801855635785 * Education2n_Cycle
1207708   +          +    -0.06231007239836 * EducationBasic  +    -0.26915940640311 *
1207709   +        EducationGraduation  +    -0.30689797876717 * EducationMaster
1207710   +          +    -0.18964222971122 * Marital_StatusDivorced
1207711   +          +    -0.15222045956879 * Marital_StatusMarried
1207712   +          +     0.15455795695595 * Marital_StatusSingle
1207713   +          +    -0.04060840399479 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.18801855635785 * Education2n_Cycle + -0.06231007239836 * 
EducationBasic + -0.26915940640311 * EducationGraduation + -0.30689797876717 * EducationMaster 
+ -0.18964222971122 * Marital_StatusDivorced + -0.15222045956879 * Marital_StatusMarried + 
0.15455795695595 * Marital_StatusSingle + -0.04060840399479 * Marital_StatusTogether ;
1207714   +   H15  = H15  +    -0.12131367369042 * Education2n_Cycle
1207715   +          +     0.20547688844423 * EducationBasic  +     0.04965529549437 *
1207716   +        EducationGraduation  +    -0.21811990669176 * EducationMaster
1207717   +          +    -0.10122776921995 * Marital_StatusDivorced
1207718   +          +     0.14126755564161 * Marital_StatusMarried
1207719   +          +    -0.18463644418978 * Marital_StatusSingle
1207720   +          +     0.23071597384519 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + -0.12131367369042 * Education2n_Cycle + 0.20547688844423 * 
EducationBasic + 0.04965529549437 * EducationGraduation + -0.21811990669176 * EducationMaster 
+ -0.10122776921995 * Marital_StatusDivorced + 0.14126755564161 * Marital_StatusMarried + 
-0.18463644418978 * Marital_StatusSingle + 0.23071597384519 * Marital_StatusTogether ;
1207721   +   H16  = H16  +     0.02961881390411 * Education2n_Cycle
1207722   +          +    -0.46228434914367 * EducationBasic  +    -0.08513280071643 *
1207723   +        EducationGraduation  +    -0.20159542694386 * EducationMaster
1207724   +          +     0.05009431660662 * Marital_StatusDivorced
1207725   +          +    -0.38407798045329 * Marital_StatusMarried
1207726   +          +      0.3035257398654 * Marital_StatusSingle
1207727   +          +    -0.27725923319119 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.02961881390411 * Education2n_Cycle + -0.46228434914367 * 
EducationBasic + -0.08513280071643 * EducationGraduation + -0.20159542694386 * EducationMaster 
+ 0.05009431660662 * Marital_StatusDivorced + -0.38407798045329 * Marital_StatusMarried + 
0.3035257398654 * Marital_StatusSingle + -0.27725923319119 * Marital_StatusTogether ;
1207728   +   H11  =      1.3960587011002 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 1.3960587011002 + H11 ;
1207729   +   H12  =     0.18947019063375 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.18947019063375 + H12 ;
1207730   +   H13  =     0.55907472867898 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = 0.55907472867898 + H13 ;
1207731   +   H14  =     0.28336290184268 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 0.28336290184268 + H14 ;
1207732   +   H15  =     1.08919536550159 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = 1.08919536550159 + H15 ;
1207733   +   H16  =    -0.22538308534609 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = -0.22538308534609 + H16 ;
1207734   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1207735   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1207736   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1207737   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1207738   +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
1207739   +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
1207740   +END;
MPRINT(EM_DIAGRAM):   END;
1207741   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1207742   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1207743   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1207744   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1207745   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1207746   +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
1207747   +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
1207748   +END;
MPRINT(EM_DIAGRAM):   END;
1207749   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1207750   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1207751   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1207752   +
1207753   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1207754   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1207755   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1207756   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1207757   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1207758   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1207759   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1207760   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1207761   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1207762   +end;
MPRINT(EM_DIAGRAM):   end;
1207763   +else do;
MPRINT(EM_DIAGRAM):   else do;
1207764   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1207765   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1207766   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1207767   +   end;
MPRINT(EM_DIAGRAM):   end;
1207768   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1207769   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1207770   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1207771   +   end;
MPRINT(EM_DIAGRAM):   end;
1207772   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1207773   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1207774   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1207775   +   end;
MPRINT(EM_DIAGRAM):   end;
1207776   +end;
MPRINT(EM_DIAGRAM):   end;
1207777   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1207778   +   P_DepVar1  =      1.1921632715983 * H11  +     2.38386446186622 * H12
1207779   +          +    -2.42409896638067 * H13  +    -2.19084949788904 * H14
1207780   +          +      -0.380575449439 * H15  +     1.17350595805971 * H16 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 1.1921632715983 * H11 + 2.38386446186622 * H12 + 
-2.42409896638067 * H13 + -2.19084949788904 * H14 + -0.380575449439 * H15 + 1.17350595805971 * 
H16 ;
1207781   +   P_DepVar1  =    -1.70154799161574 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.70154799161574 + P_DepVar1 ;
1207782   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1207783   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1207784   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1207785   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1207786   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1207787   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1207788   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1207789   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1207790   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1207791   +END;
MPRINT(EM_DIAGRAM):   END;
1207792   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1207793   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1207794   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1207795   +END;
MPRINT(EM_DIAGRAM):   END;
1207796   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1207797   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1207798   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1207799   +END;
MPRINT(EM_DIAGRAM):   END;
1207800   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1207801   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1207802   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1207803   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1207804   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1207805   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1207806   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1207807   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1207808   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1207809   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1207810   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1207811   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1207812   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1207813   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1207814   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1207815   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1207816   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1207817   +END;
MPRINT(EM_DIAGRAM):   END;
1207818   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1207819   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1207820   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1207821   +drop
1207822   +H11
1207823   +H12
1207824   +H13
1207825   +H14
1207826   +H15
1207827   +H16
1207828   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 ;
1207829   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1207830   +* Renaming variables for Neural41;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural41;
1207831   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1207832   +* Renaming Posterior variables for Neural41;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural41;
1207833   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1207834   +drop Neural41_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural41_P_DepVar1;
1207835   +Neural41_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural41_P_DepVar1 = P_DepVar1;
1207836   +drop Neural41_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural41_P_DepVar0;
1207837   +Neural41_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural41_P_DepVar0 = P_DepVar0;
1207838   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1207839   +* Renaming _WARN_ variable for Neural41;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural41;
1207840   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1207841   +length Neural41_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural41_WARN_ $4;
1207842   +drop Neural41_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural41_WARN_;
1207843   +Neural41_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural41_WARN_ = _WARN_;
1207844   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1207845   +* Ensmbl12: Scoring Code of model 7 of 10;
MPRINT(EM_DIAGRAM):   * Ensmbl12: Scoring Code of model 7 of 10;
1207846   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1207847   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1207848   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
1207849   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1207850   +* NODE: Neural36;
MPRINT(EM_DIAGRAM):   * NODE: Neural36;
1207851   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1207852   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1207853   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1207854   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1207855   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1207856   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1207857   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1207858   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1207859   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1207860   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1207861   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1207862   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1207863   +LENGTH _WARN_ $4
1207864   +      F_DepVar  $ 12
1207865   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1207866   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1207867   +
1207868   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1207869   +
1207870   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1207871   +
1207872   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1207873   +
1207874   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1207875   +
1207876   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1207877   +
1207878   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1207879   +
1207880   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1207881   +
1207882   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1207883   +
1207884   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1207885   +
1207886   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1207887   +
1207888   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1207889   +
1207890   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1207891   +
1207892   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1207893   +
1207894   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1207895   +
1207896   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1207897   +
1207898   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1207899   +
1207900   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1207901   +
1207902   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1207903   +
1207904   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1207905   +
1207906   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1207907   +
1207908   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1207909   +
1207910   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1207911   +
1207912   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1207913   +
1207914   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1207915   +
1207916   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1207917   +
1207918   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1207919   +
1207920   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1207921   +
1207922   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1207923   +
1207924   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1207925   +
1207926   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1207927   +
1207928   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1207929   +
1207930   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1207931   +
1207932   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1207933   +
1207934   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1207935   +
1207936   +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
1207937   +
1207938   +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
1207939   +
1207940   +      label H17 = 'Hidden: H1=7' ;
MPRINT(EM_DIAGRAM):   label H17 = 'Hidden: H1=7' ;
1207941   +
1207942   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1207943   +
1207944   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1207945   +
1207946   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1207947   +
1207948   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1207949   +
1207950   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1207951   +
1207952   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1207953   +
1207954   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1207955   +
1207956   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1207957   +
1207958   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1207959   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1207960   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1207961   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1207962   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1207963   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1207964   +end;
MPRINT(EM_DIAGRAM):   end;
1207965   +else do;
MPRINT(EM_DIAGRAM):   else do;
1207966   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1207967   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1207968   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1207969   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1207970   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1207971   +   end;
MPRINT(EM_DIAGRAM):   end;
1207972   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1207973   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1207974   +   end;
MPRINT(EM_DIAGRAM):   end;
1207975   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1207976   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1207977   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1207978   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1207979   +   end;
MPRINT(EM_DIAGRAM):   end;
1207980   +end;
MPRINT(EM_DIAGRAM):   end;
1207981   +
1207982   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1207983   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1207984   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1207985   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1207986   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1207987   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1207988   +end;
MPRINT(EM_DIAGRAM):   end;
1207989   +else do;
MPRINT(EM_DIAGRAM):   else do;
1207990   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1207991   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1207992   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1207993   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1207994   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1207995   +   end;
MPRINT(EM_DIAGRAM):   end;
1207996   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1207997   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1207998   +   end;
MPRINT(EM_DIAGRAM):   end;
1207999   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1208000   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1208001   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1208002   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1208003   +   end;
MPRINT(EM_DIAGRAM):   end;
1208004   +end;
MPRINT(EM_DIAGRAM):   end;
1208005   +
1208006   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1208007   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1208008   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1208009   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1208010   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1208011   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1208012   +end;
MPRINT(EM_DIAGRAM):   end;
1208013   +else do;
MPRINT(EM_DIAGRAM):   else do;
1208014   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1208015   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1208016   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1208017   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1208018   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1208019   +   end;
MPRINT(EM_DIAGRAM):   end;
1208020   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1208021   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1208022   +   end;
MPRINT(EM_DIAGRAM):   end;
1208023   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1208024   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1208025   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1208026   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1208027   +   end;
MPRINT(EM_DIAGRAM):   end;
1208028   +end;
MPRINT(EM_DIAGRAM):   end;
1208029   +
1208030   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1208031   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1208032   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1208033   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1208034   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1208035   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1208036   +end;
MPRINT(EM_DIAGRAM):   end;
1208037   +else do;
MPRINT(EM_DIAGRAM):   else do;
1208038   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1208039   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1208040   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1208041   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1208042   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1208043   +   end;
MPRINT(EM_DIAGRAM):   end;
1208044   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1208045   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1208046   +   end;
MPRINT(EM_DIAGRAM):   end;
1208047   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1208048   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1208049   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1208050   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1208051   +   end;
MPRINT(EM_DIAGRAM):   end;
1208052   +end;
MPRINT(EM_DIAGRAM):   end;
1208053   +
1208054   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1208055   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1208056   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1208057   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1208058   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1208059   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1208060   +end;
MPRINT(EM_DIAGRAM):   end;
1208061   +else do;
MPRINT(EM_DIAGRAM):   else do;
1208062   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1208063   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1208064   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1208065   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1208066   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1208067   +   end;
MPRINT(EM_DIAGRAM):   end;
1208068   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1208069   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1208070   +   end;
MPRINT(EM_DIAGRAM):   end;
1208071   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1208072   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1208073   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1208074   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1208075   +   end;
MPRINT(EM_DIAGRAM):   end;
1208076   +end;
MPRINT(EM_DIAGRAM):   end;
1208077   +
1208078   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1208079   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1208080   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1208081   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1208082   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1208083   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1208084   +end;
MPRINT(EM_DIAGRAM):   end;
1208085   +else do;
MPRINT(EM_DIAGRAM):   else do;
1208086   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1208087   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1208088   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1208089   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1208090   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1208091   +   end;
MPRINT(EM_DIAGRAM):   end;
1208092   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1208093   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1208094   +   end;
MPRINT(EM_DIAGRAM):   end;
1208095   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1208096   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1208097   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1208098   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1208099   +   end;
MPRINT(EM_DIAGRAM):   end;
1208100   +end;
MPRINT(EM_DIAGRAM):   end;
1208101   +
1208102   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1208103   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1208104   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1208105   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1208106   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1208107   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1208108   +end;
MPRINT(EM_DIAGRAM):   end;
1208109   +else do;
MPRINT(EM_DIAGRAM):   else do;
1208110   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1208111   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1208112   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1208113   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1208114   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1208115   +   end;
MPRINT(EM_DIAGRAM):   end;
1208116   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1208117   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1208118   +   end;
MPRINT(EM_DIAGRAM):   end;
1208119   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1208120   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1208121   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1208122   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1208123   +   end;
MPRINT(EM_DIAGRAM):   end;
1208124   +end;
MPRINT(EM_DIAGRAM):   end;
1208125   +
1208126   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1208127   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
1208128   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1208129   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1208130   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1208131   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1208132   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1208133   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1208134   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1208135   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1208136   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1208137   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1208138   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1208139   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1208140   +end;
MPRINT(EM_DIAGRAM):   end;
1208141   +else do;
MPRINT(EM_DIAGRAM):   else do;
1208142   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1208143   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1208144   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1208145   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1208146   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1208147   +   end;
MPRINT(EM_DIAGRAM):   end;
1208148   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1208149   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1208150   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1208151   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1208152   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1208153   +   end;
MPRINT(EM_DIAGRAM):   end;
1208154   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1208155   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1208156   +   end;
MPRINT(EM_DIAGRAM):   end;
1208157   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1208158   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1208159   +   end;
MPRINT(EM_DIAGRAM):   end;
1208160   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1208161   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1208162   +   end;
MPRINT(EM_DIAGRAM):   end;
1208163   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1208164   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1208165   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1208166   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1208167   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1208168   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1208169   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1208170   +   end;
MPRINT(EM_DIAGRAM):   end;
1208171   +end;
MPRINT(EM_DIAGRAM):   end;
1208172   +
1208173   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1208174   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1208175   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
1208176   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1208177   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1208178   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1208179   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1208180   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1208181   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1208182   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1208183   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1208184   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1208185   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1208186   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1208187   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1208188   +end;
MPRINT(EM_DIAGRAM):   end;
1208189   +else do;
MPRINT(EM_DIAGRAM):   else do;
1208190   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1208191   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1208192   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1208193   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1208194   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1208195   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1208196   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1208197   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1208198   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1208199   +         end;
MPRINT(EM_DIAGRAM):   end;
1208200   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1208201   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1208202   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1208203   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1208204   +            end;
MPRINT(EM_DIAGRAM):   end;
1208205   +         end;
MPRINT(EM_DIAGRAM):   end;
1208206   +      end;
MPRINT(EM_DIAGRAM):   end;
1208207   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1208208   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1208209   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1208210   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1208211   +         end;
MPRINT(EM_DIAGRAM):   end;
1208212   +      end;
MPRINT(EM_DIAGRAM):   end;
1208213   +   end;
MPRINT(EM_DIAGRAM):   end;
1208214   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1208215   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1208216   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1208217   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1208218   +      end;
MPRINT(EM_DIAGRAM):   end;
1208219   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1208220   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1208221   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1208222   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1208223   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1208224   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1208225   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1208226   +         end;
MPRINT(EM_DIAGRAM):   end;
1208227   +      end;
MPRINT(EM_DIAGRAM):   end;
1208228   +   end;
MPRINT(EM_DIAGRAM):   end;
1208229   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1208230   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1208231   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1208232   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1208233   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1208234   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1208235   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1208236   +   end;
MPRINT(EM_DIAGRAM):   end;
1208237   +end;
MPRINT(EM_DIAGRAM):   end;
1208238   +
1208239   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1208240   +*** Checking missing input Interval
1208241   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1208242   +
1208243   +IF NMISS(
1208244   +   AcceptedCmpTotal ,
1208245   +   Age ,
1208246   +   Frq ,
1208247   +   Income ,
1208248   +   Kidhome ,
1208249   +   MntFishProducts ,
1208250   +   MntFruits ,
1208251   +   MntGoldProds ,
1208252   +   MntSweetProducts ,
1208253   +   MonthsAsCustomer ,
1208254   +   NumDealsPurchases ,
1208255   +   NumWebVisitsMonth ,
1208256   +   RFMstat ,
1208257   +   RMntFrq ,
1208258   +   Recency ,
1208259   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , 
MntFishProducts , MntFruits , MntGoldProds , MntSweetProducts , MonthsAsCustomer , 
NumDealsPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , Teenhome ) THEN DO;
1208260   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1208261   +
1208262   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1208263   +END;
MPRINT(EM_DIAGRAM):   END;
1208264   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1208265   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1208266   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1208267   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1208268   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1208269   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1208270   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1208271   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1208272   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1208273   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1208274   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1208275   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1208276   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1208277   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1208278   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1208279   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1208280   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1208281   +   S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
1208282   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
1208283   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1208284   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1208285   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1208286   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1208287   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1208288   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1208289   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1208290   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1208291   +END;
MPRINT(EM_DIAGRAM):   END;
1208292   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1208293   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1208294   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1208295   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1208296   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1208297   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1208298   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1208299   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1208300   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1208301   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1208302   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1208303   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1208304   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1208305   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1208306   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1208307   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1208308   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1208309   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1208310   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1208311   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1208312   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1208313   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1208314   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1208315   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1208316   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1208317   +   ELSE S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
1208318   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
1208319   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1208320   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1208321   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1208322   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1208323   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1208324   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1208325   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1208326   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1208327   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1208328   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1208329   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1208330   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1208331   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1208332   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1208333   +END;
MPRINT(EM_DIAGRAM):   END;
1208334   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1208335   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1208336   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1208337   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1208338   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1208339   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1208340   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1208341   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1208342   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1208343   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1208344   +   H11  =     0.36102409886134 * S_AcceptedCmpTotal  +     0.13395156650326 *
1208345   +        S_Age  +    -0.24538302428059 * S_Frq  +    -0.11572058197557 *
1208346   +        S_Income  +     0.21790378443814 * S_Kidhome
1208347   +          +    -0.08134586316395 * S_MntFishProducts
1208348   +          +     -0.2688648060203 * S_MntFruits  +    -0.25880035211038 *
1208349   +        S_MntGoldProds  +     0.07531502626045 * S_MntSweetProducts
1208350   +          +     0.21726816930291 * S_MonthsAsCustomer
1208351   +          +    -0.21824241156847 * S_NumDealsPurchases
1208352   +          +     0.07727563921761 * S_NumWebVisitsMonth
1208353   +          +     0.09027808324069 * S_RFMstat  +     -0.0189462843628 *
1208354   +        S_RMntFrq  +     0.15658915596853 * S_Recency
1208355   +          +     0.18680606168417 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.36102409886134 * S_AcceptedCmpTotal + 0.13395156650326 * S_Age + 
-0.24538302428059 * S_Frq + -0.11572058197557 * S_Income + 0.21790378443814 * S_Kidhome + 
-0.08134586316395 * S_MntFishProducts + -0.2688648060203 * S_MntFruits + -0.25880035211038 * 
S_MntGoldProds + 0.07531502626045 * S_MntSweetProducts + 0.21726816930291 * S_MonthsAsCustomer 
+ -0.21824241156847 * S_NumDealsPurchases + 0.07727563921761 * S_NumWebVisitsMonth + 
0.09027808324069 * S_RFMstat + -0.0189462843628 * S_RMntFrq + 0.15658915596853 * S_Recency + 
0.18680606168417 * S_Teenhome ;
1208356   +   H12  =    -0.50461866181934 * S_AcceptedCmpTotal  +     0.01266437730767 *
1208357   +        S_Age  +     0.02534169432751 * S_Frq  +    -0.89441458532035 *
1208358   +        S_Income  +    -0.51036141680293 * S_Kidhome
1208359   +          +     0.10879858722875 * S_MntFishProducts
1208360   +          +    -0.05639987269313 * S_MntFruits  +    -0.43702228668285 *
1208361   +        S_MntGoldProds  +     0.18909754042399 * S_MntSweetProducts
1208362   +          +    -0.11392977531374 * S_MonthsAsCustomer
1208363   +          +     -0.5318843752274 * S_NumDealsPurchases
1208364   +          +    -0.65796537312585 * S_NumWebVisitsMonth
1208365   +          +    -0.29571612685484 * S_RFMstat  +     -0.0801458884647 *
1208366   +        S_RMntFrq  +     0.73429478940872 * S_Recency
1208367   +          +     0.28950334189528 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -0.50461866181934 * S_AcceptedCmpTotal + 0.01266437730767 * S_Age 
+ 0.02534169432751 * S_Frq + -0.89441458532035 * S_Income + -0.51036141680293 * S_Kidhome + 
0.10879858722875 * S_MntFishProducts + -0.05639987269313 * S_MntFruits + -0.43702228668285 * 
S_MntGoldProds + 0.18909754042399 * S_MntSweetProducts + -0.11392977531374 * 
S_MonthsAsCustomer + -0.5318843752274 * S_NumDealsPurchases + -0.65796537312585 * 
S_NumWebVisitsMonth + -0.29571612685484 * S_RFMstat + -0.0801458884647 * S_RMntFrq + 
0.73429478940872 * S_Recency + 0.28950334189528 * S_Teenhome ;
1208368   +   H13  =    -0.22612994964695 * S_AcceptedCmpTotal  +     0.04392639924073 *
1208369   +        S_Age  +     0.32974877429932 * S_Frq  +    -0.26990824722212 *
1208370   +        S_Income  +     0.59254092901621 * S_Kidhome
1208371   +          +    -0.20448500725841 * S_MntFishProducts
1208372   +          +     0.09904900315476 * S_MntFruits  +     0.33085368683805 *
1208373   +        S_MntGoldProds  +     0.19272280339022 * S_MntSweetProducts
1208374   +          +     0.75084411765835 * S_MonthsAsCustomer
1208375   +          +     -0.0387146296237 * S_NumDealsPurchases
1208376   +          +    -0.28387522584505 * S_NumWebVisitsMonth
1208377   +          +    -0.15204072409221 * S_RFMstat  +     0.09340123133096 *
1208378   +        S_RMntFrq  +     0.82636976290684 * S_Recency
1208379   +          +     0.37810091232378 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = -0.22612994964695 * S_AcceptedCmpTotal + 0.04392639924073 * S_Age 
+ 0.32974877429932 * S_Frq + -0.26990824722212 * S_Income + 0.59254092901621 * S_Kidhome + 
-0.20448500725841 * S_MntFishProducts + 0.09904900315476 * S_MntFruits + 0.33085368683805 * 
S_MntGoldProds + 0.19272280339022 * S_MntSweetProducts + 0.75084411765835 * S_MonthsAsCustomer 
+ -0.0387146296237 * S_NumDealsPurchases + -0.28387522584505 * S_NumWebVisitsMonth + 
-0.15204072409221 * S_RFMstat + 0.09340123133096 * S_RMntFrq + 0.82636976290684 * S_Recency + 
0.37810091232378 * S_Teenhome ;
1208380   +   H14  =    -0.30228547708859 * S_AcceptedCmpTotal  +     0.03241560550242 *
1208381   +        S_Age  +     0.84298653991521 * S_Frq  +     0.08457309547848 *
1208382   +        S_Income  +    -0.00122834275949 * S_Kidhome
1208383   +          +    -0.27566379985337 * S_MntFishProducts
1208384   +          +     0.22439349557664 * S_MntFruits  +     -0.2238462316234 *
1208385   +        S_MntGoldProds  +     0.10162320730644 * S_MntSweetProducts
1208386   +          +    -0.04164317708211 * S_MonthsAsCustomer
1208387   +          +    -0.69362879353268 * S_NumDealsPurchases
1208388   +          +    -0.42590146496797 * S_NumWebVisitsMonth
1208389   +          +    -0.14963136795323 * S_RFMstat  +    -0.12684701620224 *
1208390   +        S_RMntFrq  +     0.84758472963267 * S_Recency
1208391   +          +     0.11712588251204 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = -0.30228547708859 * S_AcceptedCmpTotal + 0.03241560550242 * S_Age 
+ 0.84298653991521 * S_Frq + 0.08457309547848 * S_Income + -0.00122834275949 * S_Kidhome + 
-0.27566379985337 * S_MntFishProducts + 0.22439349557664 * S_MntFruits + -0.2238462316234 * 
S_MntGoldProds + 0.10162320730644 * S_MntSweetProducts + -0.04164317708211 * 
S_MonthsAsCustomer + -0.69362879353268 * S_NumDealsPurchases + -0.42590146496797 * 
S_NumWebVisitsMonth + -0.14963136795323 * S_RFMstat + -0.12684701620224 * S_RMntFrq + 
0.84758472963267 * S_Recency + 0.11712588251204 * S_Teenhome ;
1208392   +   H15  =    -0.07826142783822 * S_AcceptedCmpTotal  +     0.02869519269506 *
1208393   +        S_Age  +     0.47709626753648 * S_Frq  +     0.77626478438802 *
1208394   +        S_Income  +    -0.52116533001423 * S_Kidhome
1208395   +          +     -0.0164127050263 * S_MntFishProducts
1208396   +          +    -0.21044074963391 * S_MntFruits  +    -0.01106715629962 *
1208397   +        S_MntGoldProds  +    -0.04742180634458 * S_MntSweetProducts
1208398   +          +     0.24190773546087 * S_MonthsAsCustomer
1208399   +          +    -0.20709839635746 * S_NumDealsPurchases
1208400   +          +    -0.03892039672539 * S_NumWebVisitsMonth
1208401   +          +     0.01844174922581 * S_RFMstat  +     0.33852543335405 *
1208402   +        S_RMntFrq  +    -0.44935213795722 * S_Recency
1208403   +          +     -0.6298368435821 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H15 = -0.07826142783822 * S_AcceptedCmpTotal + 0.02869519269506 * S_Age 
+ 0.47709626753648 * S_Frq + 0.77626478438802 * S_Income + -0.52116533001423 * S_Kidhome + 
-0.0164127050263 * S_MntFishProducts + -0.21044074963391 * S_MntFruits + -0.01106715629962 * 
S_MntGoldProds + -0.04742180634458 * S_MntSweetProducts + 0.24190773546087 * 
S_MonthsAsCustomer + -0.20709839635746 * S_NumDealsPurchases + -0.03892039672539 * 
S_NumWebVisitsMonth + 0.01844174922581 * S_RFMstat + 0.33852543335405 * S_RMntFrq + 
-0.44935213795722 * S_Recency + -0.6298368435821 * S_Teenhome ;
1208404   +   H16  =    -0.38278200147216 * S_AcceptedCmpTotal  +     0.10976543329989 *
1208405   +        S_Age  +    -0.17634499366273 * S_Frq  +    -0.00464219628456 *
1208406   +        S_Income  +     0.02656798188894 * S_Kidhome
1208407   +          +     0.30126647035438 * S_MntFishProducts
1208408   +          +    -0.15329042297108 * S_MntFruits  +     0.34485619618635 *
1208409   +        S_MntGoldProds  +    -0.02131109278943 * S_MntSweetProducts
1208410   +          +     0.02225077975252 * S_MonthsAsCustomer
1208411   +          +    -0.25574607065737 * S_NumDealsPurchases
1208412   +          +    -0.17649073415066 * S_NumWebVisitsMonth
1208413   +          +    -0.05940264496746 * S_RFMstat  +    -0.10060551243835 *
1208414   +        S_RMntFrq  +    -0.26823576982436 * S_Recency
1208415   +          +    -0.02089829217347 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H16 = -0.38278200147216 * S_AcceptedCmpTotal + 0.10976543329989 * S_Age 
+ -0.17634499366273 * S_Frq + -0.00464219628456 * S_Income + 0.02656798188894 * S_Kidhome + 
0.30126647035438 * S_MntFishProducts + -0.15329042297108 * S_MntFruits + 0.34485619618635 * 
S_MntGoldProds + -0.02131109278943 * S_MntSweetProducts + 0.02225077975252 * 
S_MonthsAsCustomer + -0.25574607065737 * S_NumDealsPurchases + -0.17649073415066 * 
S_NumWebVisitsMonth + -0.05940264496746 * S_RFMstat + -0.10060551243835 * S_RMntFrq + 
-0.26823576982436 * S_Recency + -0.02089829217347 * S_Teenhome ;
1208416   +   H17  =     0.19294816663728 * S_AcceptedCmpTotal  +    -0.36492507147362 *
1208417   +        S_Age  +     -0.5026822541815 * S_Frq  +    -0.48143237402929 *
1208418   +        S_Income  +     0.24859715564668 * S_Kidhome
1208419   +          +    -0.25170385966484 * S_MntFishProducts
1208420   +          +     0.32613161868695 * S_MntFruits  +     0.13394374893255 *
1208421   +        S_MntGoldProds  +     0.48416151380913 * S_MntSweetProducts
1208422   +          +     0.05219342683802 * S_MonthsAsCustomer
1208423   +          +     0.43291262348863 * S_NumDealsPurchases
1208424   +          +     0.56350506449265 * S_NumWebVisitsMonth
1208425   +          +     0.07050038692379 * S_RFMstat  +     0.09321760948671 *
1208426   +        S_RMntFrq  +      -0.582152401129 * S_Recency
1208427   +          +     0.37123217787922 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H17 = 0.19294816663728 * S_AcceptedCmpTotal + -0.36492507147362 * S_Age 
+ -0.5026822541815 * S_Frq + -0.48143237402929 * S_Income + 0.24859715564668 * S_Kidhome + 
-0.25170385966484 * S_MntFishProducts + 0.32613161868695 * S_MntFruits + 0.13394374893255 * 
S_MntGoldProds + 0.48416151380913 * S_MntSweetProducts + 0.05219342683802 * S_MonthsAsCustomer 
+ 0.43291262348863 * S_NumDealsPurchases + 0.56350506449265 * S_NumWebVisitsMonth + 
0.07050038692379 * S_RFMstat + 0.09321760948671 * S_RMntFrq + -0.582152401129 * S_Recency + 
0.37123217787922 * S_Teenhome ;
1208428   +   H11  = H11  +     0.19124500210188 * AcceptedCmp10
1208429   +          +    -0.07164186578541 * AcceptedCmp20  +     0.21783016367597 *
1208430   +        AcceptedCmp30  +     0.21148394728435 * AcceptedCmp40
1208431   +          +    -0.03026880266191 * AcceptedCmp50  +    -0.07201946966594 *
1208432   +        Complain0  +     0.01809478462337 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.19124500210188 * AcceptedCmp10 + -0.07164186578541 * 
AcceptedCmp20 + 0.21783016367597 * AcceptedCmp30 + 0.21148394728435 * AcceptedCmp40 + 
-0.03026880266191 * AcceptedCmp50 + -0.07201946966594 * Complain0 + 0.01809478462337 * 
HigherEducationBinary0 ;
1208433   +   H12  = H12  +    -0.08224648561215 * AcceptedCmp10
1208434   +          +    -0.04262229291512 * AcceptedCmp20  +     0.31730600734378 *
1208435   +        AcceptedCmp30  +    -0.50103336510524 * AcceptedCmp40
1208436   +          +     0.14654032457963 * AcceptedCmp50  +     -0.3081029727525 *
1208437   +        Complain0  +     0.33420373179467 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.08224648561215 * AcceptedCmp10 + -0.04262229291512 * 
AcceptedCmp20 + 0.31730600734378 * AcceptedCmp30 + -0.50103336510524 * AcceptedCmp40 + 
0.14654032457963 * AcceptedCmp50 + -0.3081029727525 * Complain0 + 0.33420373179467 * 
HigherEducationBinary0 ;
1208438   +   H13  = H13  +     -0.2675286852338 * AcceptedCmp10
1208439   +          +     0.00293684627092 * AcceptedCmp20  +     0.17042784679702 *
1208440   +        AcceptedCmp30  +    -0.03300348487228 * AcceptedCmp40
1208441   +          +     0.18139562224546 * AcceptedCmp50  +     -0.5876653777255 *
1208442   +        Complain0  +      -0.348312724013 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.2675286852338 * AcceptedCmp10 + 0.00293684627092 * 
AcceptedCmp20 + 0.17042784679702 * AcceptedCmp30 + -0.03300348487228 * AcceptedCmp40 + 
0.18139562224546 * AcceptedCmp50 + -0.5876653777255 * Complain0 + -0.348312724013 * 
HigherEducationBinary0 ;
1208443   +   H14  = H14  +     0.62345895952335 * AcceptedCmp10
1208444   +          +     0.06420128732689 * AcceptedCmp20  +     0.32944172885024 *
1208445   +        AcceptedCmp30  +    -0.04719511461619 * AcceptedCmp40
1208446   +          +     0.61833640682482 * AcceptedCmp50  +     -0.0006656764006 *
1208447   +        Complain0  +    -0.12356778452039 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.62345895952335 * AcceptedCmp10 + 0.06420128732689 * 
AcceptedCmp20 + 0.32944172885024 * AcceptedCmp30 + -0.04719511461619 * AcceptedCmp40 + 
0.61833640682482 * AcceptedCmp50 + -0.0006656764006 * Complain0 + -0.12356778452039 * 
HigherEducationBinary0 ;
1208448   +   H15  = H15  +    -0.43202592233127 * AcceptedCmp10
1208449   +          +    -0.35346067325701 * AcceptedCmp20  +    -0.29446055239371 *
1208450   +        AcceptedCmp30  +     -0.6355060868005 * AcceptedCmp40
1208451   +          +     0.08763000125481 * AcceptedCmp50  +    -0.55439066852712 *
1208452   +        Complain0  +     0.37078134908454 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + -0.43202592233127 * AcceptedCmp10 + -0.35346067325701 * 
AcceptedCmp20 + -0.29446055239371 * AcceptedCmp30 + -0.6355060868005 * AcceptedCmp40 + 
0.08763000125481 * AcceptedCmp50 + -0.55439066852712 * Complain0 + 0.37078134908454 * 
HigherEducationBinary0 ;
1208453   +   H16  = H16  +    -0.10522820178908 * AcceptedCmp10
1208454   +          +     0.20645125728354 * AcceptedCmp20  +     0.34040121966792 *
1208455   +        AcceptedCmp30  +    -0.02259616994399 * AcceptedCmp40
1208456   +          +    -0.22123397523195 * AcceptedCmp50  +    -0.37258892216723 *
1208457   +        Complain0  +     0.14107103807235 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H16 = H16 + -0.10522820178908 * AcceptedCmp10 + 0.20645125728354 * 
AcceptedCmp20 + 0.34040121966792 * AcceptedCmp30 + -0.02259616994399 * AcceptedCmp40 + 
-0.22123397523195 * AcceptedCmp50 + -0.37258892216723 * Complain0 + 0.14107103807235 * 
HigherEducationBinary0 ;
1208458   +   H17  = H17  +    -0.09096203784003 * AcceptedCmp10
1208459   +          +    -0.04735484605229 * AcceptedCmp20  +     -0.4485810761844 *
1208460   +        AcceptedCmp30  +     0.10362320405529 * AcceptedCmp40
1208461   +          +    -0.05214433990448 * AcceptedCmp50  +    -0.19339827696554 *
1208462   +        Complain0  +    -0.21246690264814 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H17 = H17 + -0.09096203784003 * AcceptedCmp10 + -0.04735484605229 * 
AcceptedCmp20 + -0.4485810761844 * AcceptedCmp30 + 0.10362320405529 * AcceptedCmp40 + 
-0.05214433990448 * AcceptedCmp50 + -0.19339827696554 * Complain0 + -0.21246690264814 * 
HigherEducationBinary0 ;
1208463   +   H11  = H11  +    -0.16759278562529 * Education2n_Cycle
1208464   +          +    -0.31449574789464 * EducationBasic  +     0.13281408830843 *
1208465   +        EducationGraduation  +      0.0199258483942 * EducationMaster
1208466   +          +     0.03245181998921 * Marital_StatusDivorced
1208467   +          +     0.29722741247663 * Marital_StatusMarried
1208468   +          +    -0.05683085497262 * Marital_StatusSingle
1208469   +          +     0.27914630307932 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.16759278562529 * Education2n_Cycle + -0.31449574789464 * 
EducationBasic + 0.13281408830843 * EducationGraduation + 0.0199258483942 * EducationMaster + 
0.03245181998921 * Marital_StatusDivorced + 0.29722741247663 * Marital_StatusMarried + 
-0.05683085497262 * Marital_StatusSingle + 0.27914630307932 * Marital_StatusTogether ;
1208470   +   H12  = H12  +    -0.10709422401859 * Education2n_Cycle
1208471   +          +     0.25457515905931 * EducationBasic  +    -0.26018740430941 *
1208472   +        EducationGraduation  +     0.05808954602972 * EducationMaster
1208473   +          +    -0.13095826187081 * Marital_StatusDivorced
1208474   +          +     0.29509760197193 * Marital_StatusMarried
1208475   +          +    -0.21019918550166 * Marital_StatusSingle
1208476   +          +     0.12557122666089 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.10709422401859 * Education2n_Cycle + 0.25457515905931 * 
EducationBasic + -0.26018740430941 * EducationGraduation + 0.05808954602972 * EducationMaster 
+ -0.13095826187081 * Marital_StatusDivorced + 0.29509760197193 * Marital_StatusMarried + 
-0.21019918550166 * Marital_StatusSingle + 0.12557122666089 * Marital_StatusTogether ;
1208477   +   H13  = H13  +     0.16189957128414 * Education2n_Cycle
1208478   +          +    -0.08593025695878 * EducationBasic  +     0.11065463845302 *
1208479   +        EducationGraduation  +    -0.23434271231945 * EducationMaster
1208480   +          +     0.03746692643939 * Marital_StatusDivorced
1208481   +          +     0.03482798841727 * Marital_StatusMarried
1208482   +          +     0.16645207250571 * Marital_StatusSingle
1208483   +          +    -0.40169040281111 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.16189957128414 * Education2n_Cycle + -0.08593025695878 * 
EducationBasic + 0.11065463845302 * EducationGraduation + -0.23434271231945 * EducationMaster 
+ 0.03746692643939 * Marital_StatusDivorced + 0.03482798841727 * Marital_StatusMarried + 
0.16645207250571 * Marital_StatusSingle + -0.40169040281111 * Marital_StatusTogether ;
1208484   +   H14  = H14  +      0.0929589076858 * Education2n_Cycle
1208485   +          +     0.17576896755796 * EducationBasic  +    -0.08548079761525 *
1208486   +        EducationGraduation  +     -0.0086494793343 * EducationMaster
1208487   +          +     -0.0753971504765 * Marital_StatusDivorced
1208488   +          +     0.20446719655724 * Marital_StatusMarried
1208489   +          +     0.21472836757686 * Marital_StatusSingle
1208490   +          +     0.25097210445128 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.0929589076858 * Education2n_Cycle + 0.17576896755796 * 
EducationBasic + -0.08548079761525 * EducationGraduation + -0.0086494793343 * EducationMaster 
+ -0.0753971504765 * Marital_StatusDivorced + 0.20446719655724 * Marital_StatusMarried + 
0.21472836757686 * Marital_StatusSingle + 0.25097210445128 * Marital_StatusTogether ;
1208491   +   H15  = H15  +     0.05613706593293 * Education2n_Cycle
1208492   +          +     0.15733773983498 * EducationBasic  +     0.18710928885666 *
1208493   +        EducationGraduation  +    -0.40226962940436 * EducationMaster
1208494   +          +     0.16191937298215 * Marital_StatusDivorced
1208495   +          +    -0.81780658848614 * Marital_StatusMarried
1208496   +          +     0.84981159748349 * Marital_StatusSingle
1208497   +          +    -0.81246154443713 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.05613706593293 * Education2n_Cycle + 0.15733773983498 * 
EducationBasic + 0.18710928885666 * EducationGraduation + -0.40226962940436 * EducationMaster 
+ 0.16191937298215 * Marital_StatusDivorced + -0.81780658848614 * Marital_StatusMarried + 
0.84981159748349 * Marital_StatusSingle + -0.81246154443713 * Marital_StatusTogether ;
1208498   +   H16  = H16  +    -0.15143146742513 * Education2n_Cycle
1208499   +          +    -0.32039616194876 * EducationBasic  +     0.14759493683433 *
1208500   +        EducationGraduation  +    -0.24148020292763 * EducationMaster
1208501   +          +    -0.01766312280073 * Marital_StatusDivorced
1208502   +          +     0.04455346003394 * Marital_StatusMarried
1208503   +          +    -0.05433982251127 * Marital_StatusSingle
1208504   +          +     0.07585750304293 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H16 = H16 + -0.15143146742513 * Education2n_Cycle + -0.32039616194876 * 
EducationBasic + 0.14759493683433 * EducationGraduation + -0.24148020292763 * EducationMaster 
+ -0.01766312280073 * Marital_StatusDivorced + 0.04455346003394 * Marital_StatusMarried + 
-0.05433982251127 * Marital_StatusSingle + 0.07585750304293 * Marital_StatusTogether ;
1208505   +   H17  = H17  +    -0.18844639887236 * Education2n_Cycle
1208506   +          +     0.31793429928185 * EducationBasic  +     0.21885580860665 *
1208507   +        EducationGraduation  +      0.1367538666381 * EducationMaster
1208508   +          +        0.22905595967 * Marital_StatusDivorced
1208509   +          +      0.1024998677695 * Marital_StatusMarried
1208510   +          +    -0.07752101768018 * Marital_StatusSingle
1208511   +          +    -0.19408218868635 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H17 = H17 + -0.18844639887236 * Education2n_Cycle + 0.31793429928185 * 
EducationBasic + 0.21885580860665 * EducationGraduation + 0.1367538666381 * EducationMaster + 
0.22905595967 * Marital_StatusDivorced + 0.1024998677695 * Marital_StatusMarried + 
-0.07752101768018 * Marital_StatusSingle + -0.19408218868635 * Marital_StatusTogether ;
1208512   +   H11  =     1.31548476078312 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 1.31548476078312 + H11 ;
1208513   +   H12  =     0.20389286508203 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.20389286508203 + H12 ;
1208514   +   H13  =    -0.77820109969785 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.77820109969785 + H13 ;
1208515   +   H14  =     0.85462770897247 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 0.85462770897247 + H14 ;
1208516   +   H15  =    -0.15190484788676 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = -0.15190484788676 + H15 ;
1208517   +   H16  =     -0.7146854381659 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = -0.7146854381659 + H16 ;
1208518   +   H17  =    -1.06220893322882 + H17 ;
MPRINT(EM_DIAGRAM):   H17 = -1.06220893322882 + H17 ;
1208519   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1208520   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1208521   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1208522   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1208523   +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
1208524   +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
1208525   +   H17  = TANH(H17 );
MPRINT(EM_DIAGRAM):   H17 = TANH(H17 );
1208526   +END;
MPRINT(EM_DIAGRAM):   END;
1208527   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1208528   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1208529   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1208530   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1208531   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1208532   +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
1208533   +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
1208534   +   H17  = .;
MPRINT(EM_DIAGRAM):   H17 = .;
1208535   +END;
MPRINT(EM_DIAGRAM):   END;
1208536   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1208537   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1208538   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1208539   +
1208540   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1208541   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1208542   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1208543   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1208544   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1208545   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1208546   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1208547   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1208548   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1208549   +end;
MPRINT(EM_DIAGRAM):   end;
1208550   +else do;
MPRINT(EM_DIAGRAM):   else do;
1208551   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1208552   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1208553   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1208554   +   end;
MPRINT(EM_DIAGRAM):   end;
1208555   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1208556   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1208557   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1208558   +   end;
MPRINT(EM_DIAGRAM):   end;
1208559   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1208560   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1208561   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1208562   +   end;
MPRINT(EM_DIAGRAM):   end;
1208563   +end;
MPRINT(EM_DIAGRAM):   end;
1208564   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1208565   +   P_DepVar1  =    -0.11628699177184 * H11  +    -2.70843270240794 * H12
1208566   +          +    -1.81814079406916 * H13  +    -1.84852165774564 * H14
1208567   +          +     2.53533827620448 * H15  +    -0.20106950795136 * H16
1208568   +          +     1.26058098194871 * H17 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.11628699177184 * H11 + -2.70843270240794 * H12 + 
-1.81814079406916 * H13 + -1.84852165774564 * H14 + 2.53533827620448 * H15 + -0.20106950795136 
* H16 + 1.26058098194871 * H17 ;
1208569   +   P_DepVar1  =    -1.66152267043508 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.66152267043508 + P_DepVar1 ;
1208570   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1208571   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1208572   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1208573   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1208574   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1208575   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1208576   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1208577   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1208578   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1208579   +END;
MPRINT(EM_DIAGRAM):   END;
1208580   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1208581   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1208582   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1208583   +END;
MPRINT(EM_DIAGRAM):   END;
1208584   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1208585   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1208586   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1208587   +END;
MPRINT(EM_DIAGRAM):   END;
1208588   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1208589   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1208590   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1208591   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1208592   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1208593   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1208594   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1208595   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1208596   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1208597   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1208598   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1208599   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1208600   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1208601   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1208602   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1208603   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1208604   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1208605   +END;
MPRINT(EM_DIAGRAM):   END;
1208606   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1208607   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1208608   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1208609   +drop
1208610   +H11
1208611   +H12
1208612   +H13
1208613   +H14
1208614   +H15
1208615   +H16
1208616   +H17
1208617   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 H17 ;
1208618   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1208619   +* Renaming variables for Neural36;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural36;
1208620   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1208621   +* Renaming Posterior variables for Neural36;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural36;
1208622   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1208623   +drop Neural36_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural36_P_DepVar1;
1208624   +Neural36_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural36_P_DepVar1 = P_DepVar1;
1208625   +drop Neural36_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural36_P_DepVar0;
1208626   +Neural36_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural36_P_DepVar0 = P_DepVar0;
1208627   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1208628   +* Renaming _WARN_ variable for Neural36;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural36;
1208629   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1208630   +length Neural36_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural36_WARN_ $4;
1208631   +drop Neural36_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural36_WARN_;
1208632   +Neural36_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural36_WARN_ = _WARN_;
1208633   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1208634   +* Ensmbl12: Scoring Code of model 8 of 10;
MPRINT(EM_DIAGRAM):   * Ensmbl12: Scoring Code of model 8 of 10;
1208635   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1208636   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1208637   +* TOOL: Decision Tree;
MPRINT(EM_DIAGRAM):   * TOOL: Decision Tree;
1208638   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1208639   +* NODE: Tree6;
MPRINT(EM_DIAGRAM):   * NODE: Tree6;
1208640   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1208641   +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
1208642   +******             DECISION TREE SCORING CODE             ******;
MPRINT(EM_DIAGRAM):   ****** DECISION TREE SCORING CODE ******;
1208643   +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
1208644   +
1208645   +******         LENGTHS OF NEW CHARACTER VARIABLES         ******;
MPRINT(EM_DIAGRAM):   ****** LENGTHS OF NEW CHARACTER VARIABLES ******;
1208646   +LENGTH F_DepVar  $   12;
MPRINT(EM_DIAGRAM):   LENGTH F_DepVar $ 12;
1208647   +LENGTH I_DepVar  $   12;
MPRINT(EM_DIAGRAM):   LENGTH I_DepVar $ 12;
1208648   +LENGTH _WARN_  $    4;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $ 4;
1208649   +
1208650   +******              LABELS FOR NEW VARIABLES              ******;
MPRINT(EM_DIAGRAM):   ****** LABELS FOR NEW VARIABLES ******;
1208651   +LABEL _NODE_  = 'Node' ;
MPRINT(EM_DIAGRAM):   LABEL _NODE_ = 'Node' ;
1208652   +LABEL _LEAF_  = 'Leaf' ;
MPRINT(EM_DIAGRAM):   LABEL _LEAF_ = 'Leaf' ;
1208653   +LABEL P_DepVar0  = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   LABEL P_DepVar0 = 'Predicted: DepVar=0' ;
1208654   +LABEL P_DepVar1  = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   LABEL P_DepVar1 = 'Predicted: DepVar=1' ;
1208655   +LABEL Q_DepVar0  = 'Unadjusted P: DepVar=0' ;
MPRINT(EM_DIAGRAM):   LABEL Q_DepVar0 = 'Unadjusted P: DepVar=0' ;
1208656   +LABEL Q_DepVar1  = 'Unadjusted P: DepVar=1' ;
MPRINT(EM_DIAGRAM):   LABEL Q_DepVar1 = 'Unadjusted P: DepVar=1' ;
1208657   +LABEL V_DepVar0  = 'Validated: DepVar=0' ;
MPRINT(EM_DIAGRAM):   LABEL V_DepVar0 = 'Validated: DepVar=0' ;
1208658   +LABEL V_DepVar1  = 'Validated: DepVar=1' ;
MPRINT(EM_DIAGRAM):   LABEL V_DepVar1 = 'Validated: DepVar=1' ;
1208659   +LABEL R_DepVar0  = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   LABEL R_DepVar0 = 'Residual: DepVar=0' ;
1208660   +LABEL R_DepVar1  = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   LABEL R_DepVar1 = 'Residual: DepVar=1' ;
1208661   +LABEL F_DepVar  = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   LABEL F_DepVar = 'From: DepVar' ;
1208662   +LABEL I_DepVar  = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   LABEL I_DepVar = 'Into: DepVar' ;
1208663   +LABEL U_DepVar  = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   LABEL U_DepVar = 'Unnormalized Into: DepVar' ;
1208664   +LABEL _WARN_  = 'Warnings' ;
MPRINT(EM_DIAGRAM):   LABEL _WARN_ = 'Warnings' ;
1208665   +
1208666   +
1208667   +******      TEMPORARY VARIABLES FOR FORMATTED VALUES      ******;
MPRINT(EM_DIAGRAM):   ****** TEMPORARY VARIABLES FOR FORMATTED VALUES ******;
1208668   +LENGTH _ARBFMT_12 $     12; DROP _ARBFMT_12;
MPRINT(EM_DIAGRAM):   LENGTH _ARBFMT_12 $ 12;
MPRINT(EM_DIAGRAM):   DROP _ARBFMT_12;
1208669   +_ARBFMT_12 = ' '; /* Initialize to avoid warning. */
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = ' ';
1208670   +LENGTH _ARBFMT_8 $      8; DROP _ARBFMT_8;
MPRINT(EM_DIAGRAM):   LENGTH _ARBFMT_8 $ 8;
MPRINT(EM_DIAGRAM):   DROP _ARBFMT_8;
1208671   +_ARBFMT_8 = ' '; /* Initialize to avoid warning. */
MPRINT(EM_DIAGRAM):   _ARBFMT_8 = ' ';
1208672   +
1208673   +
1208674   +_ARBFMT_12 = PUT( DepVar , BEST.);
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( DepVar , BEST.);
1208675   + %DMNORMCP( _ARBFMT_12, F_DepVar );
MPRINT(DMNORMCP):   F_DepVar=dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1208676   +
1208677   +******             ASSIGN OBSERVATION TO NODE             ******;
MPRINT(EM_DIAGRAM):   ****** ASSIGN OBSERVATION TO NODE ******;
1208678   +IF  NOT MISSING(AcceptedCmpTotal ) AND
1208679   +                   0.5 <= AcceptedCmpTotal  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(AcceptedCmpTotal ) AND 0.5 <= AcceptedCmpTotal THEN DO;
1208680   +  IF  NOT MISSING(Recency ) AND
1208681   +    Recency  <                 38.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(Recency ) AND Recency < 38.5 THEN DO;
1208682   +    IF  NOT MISSING(AcceptedCmpTotal ) AND
1208683   +                       1.5 <= AcceptedCmpTotal  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(AcceptedCmpTotal ) AND 1.5 <= AcceptedCmpTotal THEN DO;
1208684   +      _NODE_  =                   13;
MPRINT(EM_DIAGRAM):   _NODE_ = 13;
1208685   +      _LEAF_  =                   11;
MPRINT(EM_DIAGRAM):   _LEAF_ = 11;
1208686   +      P_DepVar0  =     0.05263157894736;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.05263157894736;
1208687   +      P_DepVar1  =     0.94736842105263;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.94736842105263;
1208688   +      Q_DepVar0  =     0.05263157894736;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.05263157894736;
1208689   +      Q_DepVar1  =     0.94736842105263;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.94736842105263;
1208690   +      V_DepVar0  =                    0;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0;
1208691   +      V_DepVar1  =                    1;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 1;
1208692   +      I_DepVar  = '1' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '1' ;
1208693   +      U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1208694   +      END;
MPRINT(EM_DIAGRAM):   END;
1208695   +    ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1208696   +      _ARBFMT_8 = PUT( Marital_Status , $8.);
MPRINT(EM_DIAGRAM):   _ARBFMT_8 = PUT( Marital_Status , $8.);
1208697   +       %DMNORMIP( _ARBFMT_8);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
1208698   +      IF _ARBFMT_8 IN ('WIDOW' ,'DIVORCED' ,'SINGLE' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_8 IN ('WIDOW' ,'DIVORCED' ,'SINGLE' ) THEN DO;
1208699   +        _NODE_  =                   25;
MPRINT(EM_DIAGRAM):   _NODE_ = 25;
1208700   +        _LEAF_  =                   10;
MPRINT(EM_DIAGRAM):   _LEAF_ = 10;
1208701   +        P_DepVar0  =      0.2258064516129;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.2258064516129;
1208702   +        P_DepVar1  =     0.77419354838709;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.77419354838709;
1208703   +        Q_DepVar0  =      0.2258064516129;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.2258064516129;
1208704   +        Q_DepVar1  =     0.77419354838709;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.77419354838709;
1208705   +        V_DepVar0  =     0.41935483870967;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.41935483870967;
1208706   +        V_DepVar1  =     0.58064516129032;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.58064516129032;
1208707   +        I_DepVar  = '1' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '1' ;
1208708   +        U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1208709   +        END;
MPRINT(EM_DIAGRAM):   END;
1208710   +      ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1208711   +        IF  NOT MISSING(Kidhome ) AND
1208712   +                           0.5 <= Kidhome  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(Kidhome ) AND 0.5 <= Kidhome THEN DO;
1208713   +          _NODE_  =                   39;
MPRINT(EM_DIAGRAM):   _NODE_ = 39;
1208714   +          _LEAF_  =                    9;
MPRINT(EM_DIAGRAM):   _LEAF_ = 9;
1208715   +          P_DepVar0  =               0.3125;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.3125;
1208716   +          P_DepVar1  =               0.6875;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.6875;
1208717   +          Q_DepVar0  =               0.3125;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.3125;
1208718   +          Q_DepVar1  =               0.6875;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.6875;
1208719   +          V_DepVar0  =     0.23076923076923;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.23076923076923;
1208720   +          V_DepVar1  =     0.76923076923076;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.76923076923076;
1208721   +          I_DepVar  = '1' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '1' ;
1208722   +          U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1208723   +          END;
MPRINT(EM_DIAGRAM):   END;
1208724   +        ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1208725   +          IF  NOT MISSING(RFMstat ) AND
1208726   +                2448.04945054945 <= RFMstat  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(RFMstat ) AND 2448.04945054945 <= RFMstat THEN DO;
1208727   +            _NODE_  =                   51;
MPRINT(EM_DIAGRAM):   _NODE_ = 51;
1208728   +            _LEAF_  =                    8;
MPRINT(EM_DIAGRAM):   _LEAF_ = 8;
1208729   +            P_DepVar0  =     0.23529411764705;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.23529411764705;
1208730   +            P_DepVar1  =     0.76470588235294;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.76470588235294;
1208731   +            Q_DepVar0  =     0.23529411764705;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.23529411764705;
1208732   +            Q_DepVar1  =     0.76470588235294;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.76470588235294;
1208733   +            V_DepVar0  =     0.42857142857142;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.42857142857142;
1208734   +            V_DepVar1  =     0.57142857142857;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.57142857142857;
1208735   +            I_DepVar  = '1' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '1' ;
1208736   +            U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1208737   +            END;
MPRINT(EM_DIAGRAM):   END;
1208738   +          ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1208739   +            _NODE_  =                   50;
MPRINT(EM_DIAGRAM):   _NODE_ = 50;
1208740   +            _LEAF_  =                    7;
MPRINT(EM_DIAGRAM):   _LEAF_ = 7;
1208741   +            P_DepVar0  =      0.8076923076923;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.8076923076923;
1208742   +            P_DepVar1  =     0.19230769230769;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.19230769230769;
1208743   +            Q_DepVar0  =      0.8076923076923;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.8076923076923;
1208744   +            Q_DepVar1  =     0.19230769230769;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.19230769230769;
1208745   +            V_DepVar0  =     0.78260869565217;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.78260869565217;
1208746   +            V_DepVar1  =     0.21739130434782;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.21739130434782;
1208747   +            I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
1208748   +            U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1208749   +            END;
MPRINT(EM_DIAGRAM):   END;
1208750   +          END;
MPRINT(EM_DIAGRAM):   END;
1208751   +        END;
MPRINT(EM_DIAGRAM):   END;
1208752   +      END;
MPRINT(EM_DIAGRAM):   END;
1208753   +    END;
MPRINT(EM_DIAGRAM):   END;
1208754   +  ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1208755   +    IF  NOT MISSING(AcceptedCmpTotal ) AND
1208756   +                       2.5 <= AcceptedCmpTotal  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(AcceptedCmpTotal ) AND 2.5 <= AcceptedCmpTotal THEN DO;
1208757   +      _NODE_  =                   15;
MPRINT(EM_DIAGRAM):   _NODE_ = 15;
1208758   +      _LEAF_  =                   13;
MPRINT(EM_DIAGRAM):   _LEAF_ = 13;
1208759   +      P_DepVar0  =      0.3103448275862;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.3103448275862;
1208760   +      P_DepVar1  =     0.68965517241379;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.68965517241379;
1208761   +      Q_DepVar0  =      0.3103448275862;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.3103448275862;
1208762   +      Q_DepVar1  =     0.68965517241379;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.68965517241379;
1208763   +      V_DepVar0  =     0.33333333333333;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.33333333333333;
1208764   +      V_DepVar1  =     0.66666666666666;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.66666666666666;
1208765   +      I_DepVar  = '1' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '1' ;
1208766   +      U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1208767   +      END;
MPRINT(EM_DIAGRAM):   END;
1208768   +    ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1208769   +      _NODE_  =                   14;
MPRINT(EM_DIAGRAM):   _NODE_ = 14;
1208770   +      _LEAF_  =                   12;
MPRINT(EM_DIAGRAM):   _LEAF_ = 12;
1208771   +      P_DepVar0  =     0.82562277580071;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.82562277580071;
1208772   +      P_DepVar1  =     0.17437722419928;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.17437722419928;
1208773   +      Q_DepVar0  =     0.82562277580071;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.82562277580071;
1208774   +      Q_DepVar1  =     0.17437722419928;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.17437722419928;
1208775   +      V_DepVar0  =     0.81818181818181;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.81818181818181;
1208776   +      V_DepVar1  =     0.18181818181818;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.18181818181818;
1208777   +      I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
1208778   +      U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1208779   +      END;
MPRINT(EM_DIAGRAM):   END;
1208780   +    END;
MPRINT(EM_DIAGRAM):   END;
1208781   +  END;
MPRINT(EM_DIAGRAM):   END;
1208782   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1208783   +  IF  NOT MISSING(Recency ) AND
1208784   +    Recency  <                 32.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(Recency ) AND Recency < 32.5 THEN DO;
1208785   +    IF  NOT MISSING(NumDealsPurchases ) AND
1208786   +                       5.5 <= NumDealsPurchases  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(NumDealsPurchases ) AND 5.5 <= NumDealsPurchases THEN DO;
1208787   +      IF  NOT MISSING(Frq ) AND
1208788   +        Frq  <                 13.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(Frq ) AND Frq < 13.5 THEN DO;
1208789   +        _NODE_  =                   18;
MPRINT(EM_DIAGRAM):   _NODE_ = 18;
1208790   +        _LEAF_  =                    3;
MPRINT(EM_DIAGRAM):   _LEAF_ = 3;
1208791   +        P_DepVar0  =     0.06666666666666;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.06666666666666;
1208792   +        P_DepVar1  =     0.93333333333333;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.93333333333333;
1208793   +        Q_DepVar0  =     0.06666666666666;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.06666666666666;
1208794   +        Q_DepVar1  =     0.93333333333333;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.93333333333333;
1208795   +        V_DepVar0  =                  0.2;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.2;
1208796   +        V_DepVar1  =                  0.8;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.8;
1208797   +        I_DepVar  = '1' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '1' ;
1208798   +        U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1208799   +        END;
MPRINT(EM_DIAGRAM):   END;
1208800   +      ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1208801   +        IF  NOT MISSING(RFMstat ) AND
1208802   +              1513.63146551724 <= RFMstat  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(RFMstat ) AND 1513.63146551724 <= RFMstat THEN DO;
1208803   +          _NODE_  =                   35;
MPRINT(EM_DIAGRAM):   _NODE_ = 35;
1208804   +          _LEAF_  =                    5;
MPRINT(EM_DIAGRAM):   _LEAF_ = 5;
1208805   +          P_DepVar0  =     0.16666666666666;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.16666666666666;
1208806   +          P_DepVar1  =     0.83333333333333;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.83333333333333;
1208807   +          Q_DepVar0  =     0.16666666666666;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.16666666666666;
1208808   +          Q_DepVar1  =     0.83333333333333;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.83333333333333;
1208809   +          V_DepVar0  =                 0.25;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.25;
1208810   +          V_DepVar1  =                 0.75;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.75;
1208811   +          I_DepVar  = '1' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '1' ;
1208812   +          U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1208813   +          END;
MPRINT(EM_DIAGRAM):   END;
1208814   +        ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1208815   +          _NODE_  =                   34;
MPRINT(EM_DIAGRAM):   _NODE_ = 34;
1208816   +          _LEAF_  =                    4;
MPRINT(EM_DIAGRAM):   _LEAF_ = 4;
1208817   +          P_DepVar0  =                0.875;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.875;
1208818   +          P_DepVar1  =                0.125;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.125;
1208819   +          Q_DepVar0  =                0.875;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.875;
1208820   +          Q_DepVar1  =                0.125;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.125;
1208821   +          V_DepVar0  =                  0.7;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.7;
1208822   +          V_DepVar1  =                  0.3;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.3;
1208823   +          I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
1208824   +          U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1208825   +          END;
MPRINT(EM_DIAGRAM):   END;
1208826   +        END;
MPRINT(EM_DIAGRAM):   END;
1208827   +      END;
MPRINT(EM_DIAGRAM):   END;
1208828   +    ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1208829   +      IF  NOT MISSING(RFMstat ) AND
1208830   +            5150.39285714285 <= RFMstat  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(RFMstat ) AND 5150.39285714285 <= RFMstat THEN DO;
1208831   +        _NODE_  =                   17;
MPRINT(EM_DIAGRAM):   _NODE_ = 17;
1208832   +        _LEAF_  =                    2;
MPRINT(EM_DIAGRAM):   _LEAF_ = 2;
1208833   +        P_DepVar0  =     0.38888888888888;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.38888888888888;
1208834   +        P_DepVar1  =     0.61111111111111;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.61111111111111;
1208835   +        Q_DepVar0  =     0.38888888888888;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.38888888888888;
1208836   +        Q_DepVar1  =     0.61111111111111;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.61111111111111;
1208837   +        V_DepVar0  =     0.41666666666666;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.41666666666666;
1208838   +        V_DepVar1  =     0.58333333333333;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.58333333333333;
1208839   +        I_DepVar  = '1' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '1' ;
1208840   +        U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1208841   +        END;
MPRINT(EM_DIAGRAM):   END;
1208842   +      ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1208843   +        _NODE_  =                   16;
MPRINT(EM_DIAGRAM):   _NODE_ = 16;
1208844   +        _LEAF_  =                    1;
MPRINT(EM_DIAGRAM):   _LEAF_ = 1;
1208845   +        P_DepVar0  =     0.84547069271758;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84547069271758;
1208846   +        P_DepVar1  =     0.15452930728241;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15452930728241;
1208847   +        Q_DepVar0  =     0.84547069271758;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.84547069271758;
1208848   +        Q_DepVar1  =     0.15452930728241;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.15452930728241;
1208849   +        V_DepVar0  =     0.81673306772908;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.81673306772908;
1208850   +        V_DepVar1  =     0.18326693227091;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.18326693227091;
1208851   +        I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
1208852   +        U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1208853   +        END;
MPRINT(EM_DIAGRAM):   END;
1208854   +      END;
MPRINT(EM_DIAGRAM):   END;
1208855   +    END;
MPRINT(EM_DIAGRAM):   END;
1208856   +  ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1208857   +    _NODE_  =                    5;
MPRINT(EM_DIAGRAM):   _NODE_ = 5;
1208858   +    _LEAF_  =                    6;
MPRINT(EM_DIAGRAM):   _LEAF_ = 6;
1208859   +    P_DepVar0  =     0.98042414355628;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.98042414355628;
1208860   +    P_DepVar1  =     0.01957585644371;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.01957585644371;
1208861   +    Q_DepVar0  =     0.98042414355628;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.98042414355628;
1208862   +    Q_DepVar1  =     0.01957585644371;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.01957585644371;
1208863   +    V_DepVar0  =     0.98795180722891;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.98795180722891;
1208864   +    V_DepVar1  =     0.01204819277108;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.01204819277108;
1208865   +    I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
1208866   +    U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1208867   +    END;
MPRINT(EM_DIAGRAM):   END;
1208868   +  END;
MPRINT(EM_DIAGRAM):   END;
1208869   +
1208870   +*****  RESIDUALS R_ *************;
MPRINT(EM_DIAGRAM):   ***** RESIDUALS R_ *************;
1208871   +IF  F_DepVar  NE '0'
1208872   +AND F_DepVar  NE '1'  THEN DO;
MPRINT(EM_DIAGRAM):   IF F_DepVar NE '0' AND F_DepVar NE '1' THEN DO;
1208873   +        R_DepVar0  = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
1208874   +        R_DepVar1  = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
1208875   + END;
MPRINT(EM_DIAGRAM):   END;
1208876   + ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1208877   +       R_DepVar0  =  -P_DepVar0 ;
MPRINT(EM_DIAGRAM):   R_DepVar0 = -P_DepVar0 ;
1208878   +       R_DepVar1  =  -P_DepVar1 ;
MPRINT(EM_DIAGRAM):   R_DepVar1 = -P_DepVar1 ;
1208879   +       SELECT( F_DepVar  );
MPRINT(EM_DIAGRAM):   SELECT( F_DepVar );
1208880   +          WHEN( '0'  ) R_DepVar0  = R_DepVar0  +1;
MPRINT(EM_DIAGRAM):   WHEN( '0' ) R_DepVar0 = R_DepVar0 +1;
1208881   +          WHEN( '1'  ) R_DepVar1  = R_DepVar1  +1;
MPRINT(EM_DIAGRAM):   WHEN( '1' ) R_DepVar1 = R_DepVar1 +1;
1208882   +       END;
MPRINT(EM_DIAGRAM):   END;
1208883   + END;
MPRINT(EM_DIAGRAM):   END;
1208884   +
1208885   +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
1208886   +******          END OF DECISION TREE SCORING CODE         ******;
MPRINT(EM_DIAGRAM):   ****** END OF DECISION TREE SCORING CODE ******;
1208887   +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
1208888   +drop _LEAF_;
MPRINT(EM_DIAGRAM):   drop _LEAF_;
1208889   +* Renaming variables for Tree6;
MPRINT(EM_DIAGRAM):   * Renaming variables for Tree6;
1208890   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1208891   +* Renaming Posterior variables for Tree6;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Tree6;
1208892   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1208893   +drop Tree6_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Tree6_P_DepVar1;
1208894   +Tree6_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Tree6_P_DepVar1 = P_DepVar1;
1208895   +drop Tree6_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Tree6_P_DepVar0;
1208896   +Tree6_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Tree6_P_DepVar0 = P_DepVar0;
1208897   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1208898   +* Renaming _WARN_ variable for Tree6;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Tree6;
1208899   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1208900   +length Tree6_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Tree6_WARN_ $4;
1208901   +drop Tree6_WARN_;
MPRINT(EM_DIAGRAM):   drop Tree6_WARN_;
1208902   +Tree6_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Tree6_WARN_ = _WARN_;
1208903   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1208904   +* Ensmbl12: Scoring Code of model 9 of 10;
MPRINT(EM_DIAGRAM):   * Ensmbl12: Scoring Code of model 9 of 10;
1208905   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1208906   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1208907   +* TOOL: Regression;
MPRINT(EM_DIAGRAM):   * TOOL: Regression;
1208908   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1208909   +* NODE: Reg12;
MPRINT(EM_DIAGRAM):   * NODE: Reg12;
1208910   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1208911   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1208912   +*** begin scoring code for regression;
MPRINT(EM_DIAGRAM):   *** begin scoring code for regression;
1208913   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1208914   +
1208915   +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
1208916   +label _WARN_ = 'Warnings' ;
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings' ;
1208917   +
1208918   +length I_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length I_DepVar $ 12;
1208919   +label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1208920   +*** Target Values;
MPRINT(EM_DIAGRAM):   *** Target Values;
1208921   +array REG12DRF [2] $12 _temporary_ ('1' '0' );
MPRINT(EM_DIAGRAM):   array REG12DRF [2] $12 _temporary_ ('1' '0' );
1208922   +label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1208923   +format U_DepVar BEST.;
MPRINT(EM_DIAGRAM):   format U_DepVar BEST.;
1208924   +*** Unnormalized target values;
MPRINT(EM_DIAGRAM):   *** Unnormalized target values;
1208925   +ARRAY REG12DRU[2]  _TEMPORARY_ (1 0);
MPRINT(EM_DIAGRAM):   ARRAY REG12DRU[2] _TEMPORARY_ (1 0);
1208926   +
1208927   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1208928   +drop _Y ;
MPRINT(EM_DIAGRAM):   drop _Y ;
1208929   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1208930   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1208931   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1208932   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1208933   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1208934   +   _Y = .;
MPRINT(EM_DIAGRAM):   _Y = .;
1208935   +end;
MPRINT(EM_DIAGRAM):   end;
1208936   +else do;
MPRINT(EM_DIAGRAM):   else do;
1208937   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1208938   +      _Y = 1;
MPRINT(EM_DIAGRAM):   _Y = 1;
1208939   +   end;
MPRINT(EM_DIAGRAM):   end;
1208940   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1208941   +      _Y = 0;
MPRINT(EM_DIAGRAM):   _Y = 0;
1208942   +   end;
MPRINT(EM_DIAGRAM):   end;
1208943   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1208944   +      _Y = .;
MPRINT(EM_DIAGRAM):   _Y = .;
1208945   +   end;
MPRINT(EM_DIAGRAM):   end;
1208946   +end;
MPRINT(EM_DIAGRAM):   end;
1208947   +
1208948   +drop _DM_BAD;
MPRINT(EM_DIAGRAM):   drop _DM_BAD;
1208949   +_DM_BAD=0;
MPRINT(EM_DIAGRAM):   _DM_BAD=0;
1208950   +
1208951   +*** Check AcceptedCmpTotal for missing values ;
MPRINT(EM_DIAGRAM):   *** Check AcceptedCmpTotal for missing values ;
1208952   +if missing( AcceptedCmpTotal ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmpTotal ) then do;
1208953   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1208954   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1208955   +end;
MPRINT(EM_DIAGRAM):   end;
1208956   +
1208957   +*** Check Age for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Age for missing values ;
1208958   +if missing( Age ) then do;
MPRINT(EM_DIAGRAM):   if missing( Age ) then do;
1208959   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1208960   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1208961   +end;
MPRINT(EM_DIAGRAM):   end;
1208962   +
1208963   +*** Check Frq for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Frq for missing values ;
1208964   +if missing( Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( Frq ) then do;
1208965   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1208966   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1208967   +end;
MPRINT(EM_DIAGRAM):   end;
1208968   +
1208969   +*** Check Income for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Income for missing values ;
1208970   +if missing( Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( Income ) then do;
1208971   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1208972   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1208973   +end;
MPRINT(EM_DIAGRAM):   end;
1208974   +
1208975   +*** Check NumDealsPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumDealsPurchases for missing values ;
1208976   +if missing( NumDealsPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumDealsPurchases ) then do;
1208977   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1208978   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1208979   +end;
MPRINT(EM_DIAGRAM):   end;
1208980   +
1208981   +*** Check NumWebVisitsMonth for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumWebVisitsMonth for missing values ;
1208982   +if missing( NumWebVisitsMonth ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumWebVisitsMonth ) then do;
1208983   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1208984   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1208985   +end;
MPRINT(EM_DIAGRAM):   end;
1208986   +
1208987   +*** Check RMntFrq for missing values ;
MPRINT(EM_DIAGRAM):   *** Check RMntFrq for missing values ;
1208988   +if missing( RMntFrq ) then do;
MPRINT(EM_DIAGRAM):   if missing( RMntFrq ) then do;
1208989   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1208990   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1208991   +end;
MPRINT(EM_DIAGRAM):   end;
1208992   +
1208993   +*** Check Recency for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Recency for missing values ;
1208994   +if missing( Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( Recency ) then do;
1208995   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1208996   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1208997   +end;
MPRINT(EM_DIAGRAM):   end;
1208998   +
1208999   +*** Check Teenhome for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Teenhome for missing values ;
1209000   +if missing( Teenhome ) then do;
MPRINT(EM_DIAGRAM):   if missing( Teenhome ) then do;
1209001   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1209002   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1209003   +end;
MPRINT(EM_DIAGRAM):   end;
1209004   +
1209005   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1209006   +drop _3_0 ;
MPRINT(EM_DIAGRAM):   drop _3_0 ;
1209007   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1209008   +   _3_0 = .;
MPRINT(EM_DIAGRAM):   _3_0 = .;
1209009   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1209010   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1209011   +end;
MPRINT(EM_DIAGRAM):   end;
1209012   +else do;
MPRINT(EM_DIAGRAM):   else do;
1209013   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1209014   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1209015   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1209016   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1209017   +      _3_0 = 1;
MPRINT(EM_DIAGRAM):   _3_0 = 1;
1209018   +   end;
MPRINT(EM_DIAGRAM):   end;
1209019   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1209020   +      _3_0 = -1;
MPRINT(EM_DIAGRAM):   _3_0 = -1;
1209021   +   end;
MPRINT(EM_DIAGRAM):   end;
1209022   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1209023   +      _3_0 = .;
MPRINT(EM_DIAGRAM):   _3_0 = .;
1209024   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1209025   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1209026   +   end;
MPRINT(EM_DIAGRAM):   end;
1209027   +end;
MPRINT(EM_DIAGRAM):   end;
1209028   +
1209029   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1209030   +drop _4_0 ;
MPRINT(EM_DIAGRAM):   drop _4_0 ;
1209031   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1209032   +   _4_0 = .;
MPRINT(EM_DIAGRAM):   _4_0 = .;
1209033   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1209034   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1209035   +end;
MPRINT(EM_DIAGRAM):   end;
1209036   +else do;
MPRINT(EM_DIAGRAM):   else do;
1209037   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1209038   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1209039   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1209040   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1209041   +      _4_0 = 1;
MPRINT(EM_DIAGRAM):   _4_0 = 1;
1209042   +   end;
MPRINT(EM_DIAGRAM):   end;
1209043   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1209044   +      _4_0 = -1;
MPRINT(EM_DIAGRAM):   _4_0 = -1;
1209045   +   end;
MPRINT(EM_DIAGRAM):   end;
1209046   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1209047   +      _4_0 = .;
MPRINT(EM_DIAGRAM):   _4_0 = .;
1209048   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1209049   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1209050   +   end;
MPRINT(EM_DIAGRAM):   end;
1209051   +end;
MPRINT(EM_DIAGRAM):   end;
1209052   +
1209053   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1209054   +drop _9_0 _9_1 _9_2 _9_3 ;
MPRINT(EM_DIAGRAM):   drop _9_0 _9_1 _9_2 _9_3 ;
1209055   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1209056   +_9_0 = 0;
MPRINT(EM_DIAGRAM):   _9_0 = 0;
1209057   +_9_1 = 0;
MPRINT(EM_DIAGRAM):   _9_1 = 0;
1209058   +_9_2 = 0;
MPRINT(EM_DIAGRAM):   _9_2 = 0;
1209059   +_9_3 = 0;
MPRINT(EM_DIAGRAM):   _9_3 = 0;
1209060   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1209061   +   _9_0 = .;
MPRINT(EM_DIAGRAM):   _9_0 = .;
1209062   +   _9_1 = .;
MPRINT(EM_DIAGRAM):   _9_1 = .;
1209063   +   _9_2 = .;
MPRINT(EM_DIAGRAM):   _9_2 = .;
1209064   +   _9_3 = .;
MPRINT(EM_DIAGRAM):   _9_3 = .;
1209065   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1209066   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1209067   +end;
MPRINT(EM_DIAGRAM):   end;
1209068   +else do;
MPRINT(EM_DIAGRAM):   else do;
1209069   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1209070   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1209071   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1209072   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1209073   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1209074   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1209075   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1209076   +            _9_0 = 1;
MPRINT(EM_DIAGRAM):   _9_0 = 1;
1209077   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1209078   +         end;
MPRINT(EM_DIAGRAM):   end;
1209079   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1209080   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1209081   +               _9_1 = 1;
MPRINT(EM_DIAGRAM):   _9_1 = 1;
1209082   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1209083   +            end;
MPRINT(EM_DIAGRAM):   end;
1209084   +         end;
MPRINT(EM_DIAGRAM):   end;
1209085   +      end;
MPRINT(EM_DIAGRAM):   end;
1209086   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1209087   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1209088   +            _9_2 = 1;
MPRINT(EM_DIAGRAM):   _9_2 = 1;
1209089   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1209090   +         end;
MPRINT(EM_DIAGRAM):   end;
1209091   +      end;
MPRINT(EM_DIAGRAM):   end;
1209092   +   end;
MPRINT(EM_DIAGRAM):   end;
1209093   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1209094   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1209095   +         _9_3 = 1;
MPRINT(EM_DIAGRAM):   _9_3 = 1;
1209096   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1209097   +      end;
MPRINT(EM_DIAGRAM):   end;
1209098   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1209099   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1209100   +            _9_0 = -1;
MPRINT(EM_DIAGRAM):   _9_0 = -1;
1209101   +            _9_1 = -1;
MPRINT(EM_DIAGRAM):   _9_1 = -1;
1209102   +            _9_2 = -1;
MPRINT(EM_DIAGRAM):   _9_2 = -1;
1209103   +            _9_3 = -1;
MPRINT(EM_DIAGRAM):   _9_3 = -1;
1209104   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1209105   +         end;
MPRINT(EM_DIAGRAM):   end;
1209106   +      end;
MPRINT(EM_DIAGRAM):   end;
1209107   +   end;
MPRINT(EM_DIAGRAM):   end;
1209108   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1209109   +      _9_0 = .;
MPRINT(EM_DIAGRAM):   _9_0 = .;
1209110   +      _9_1 = .;
MPRINT(EM_DIAGRAM):   _9_1 = .;
1209111   +      _9_2 = .;
MPRINT(EM_DIAGRAM):   _9_2 = .;
1209112   +      _9_3 = .;
MPRINT(EM_DIAGRAM):   _9_3 = .;
1209113   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1209114   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1209115   +   end;
MPRINT(EM_DIAGRAM):   end;
1209116   +end;
MPRINT(EM_DIAGRAM):   end;
1209117   +
1209118   +*** If missing inputs, use averages;
MPRINT(EM_DIAGRAM):   *** If missing inputs, use averages;
1209119   +if _DM_BAD > 0 then do;
MPRINT(EM_DIAGRAM):   if _DM_BAD > 0 then do;
1209120   +   _P0 = 0.151221567;
MPRINT(EM_DIAGRAM):   _P0 = 0.151221567;
1209121   +   _P1 = 0.848778433;
MPRINT(EM_DIAGRAM):   _P1 = 0.848778433;
1209122   +   goto REG12DR1;
MPRINT(EM_DIAGRAM):   goto REG12DR1;
1209123   +end;
MPRINT(EM_DIAGRAM):   end;
1209124   +
1209125   +*** Compute Linear Predictor;
MPRINT(EM_DIAGRAM):   *** Compute Linear Predictor;
1209126   +drop _TEMP;
MPRINT(EM_DIAGRAM):   drop _TEMP;
1209127   +drop _LP0;
MPRINT(EM_DIAGRAM):   drop _LP0;
1209128   +_LP0 = 0;
MPRINT(EM_DIAGRAM):   _LP0 = 0;
1209129   +
1209130   +***  Effect: AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Effect: AcceptedCmp3 ;
1209131   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1209132   +_LP0 = _LP0 + (   -0.41254575292144) * _TEMP * _3_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.41254575292144) * _TEMP * _3_0;
1209133   +
1209134   +***  Effect: AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Effect: AcceptedCmp4 ;
1209135   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1209136   +_LP0 = _LP0 + (    0.34675190501967) * _TEMP * _4_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.34675190501967) * _TEMP * _4_0;
1209137   +
1209138   +***  Effect: AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   *** Effect: AcceptedCmpTotal ;
1209139   +_TEMP = AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   _TEMP = AcceptedCmpTotal ;
1209140   +_LP0 = _LP0 + (    1.80745311910799 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.80745311910799 * _TEMP);
1209141   +
1209142   +***  Effect: Age ;
MPRINT(EM_DIAGRAM):   *** Effect: Age ;
1209143   +_TEMP = Age ;
MPRINT(EM_DIAGRAM):   _TEMP = Age ;
1209144   +_LP0 = _LP0 + (   -0.01852391433447 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.01852391433447 * _TEMP);
1209145   +
1209146   +***  Effect: Frq ;
MPRINT(EM_DIAGRAM):   *** Effect: Frq ;
1209147   +_TEMP = Frq ;
MPRINT(EM_DIAGRAM):   _TEMP = Frq ;
1209148   +_LP0 = _LP0 + (   -0.05045980295154 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.05045980295154 * _TEMP);
1209149   +
1209150   +***  Effect: Income ;
MPRINT(EM_DIAGRAM):   *** Effect: Income ;
1209151   +_TEMP = Income ;
MPRINT(EM_DIAGRAM):   _TEMP = Income ;
1209152   +_LP0 = _LP0 + (     0.0000456777011 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.0000456777011 * _TEMP);
1209153   +
1209154   +***  Effect: Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Effect: Marital_Status ;
1209155   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1209156   +_LP0 = _LP0 + (    0.19470733105664) * _TEMP * _9_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.19470733105664) * _TEMP * _9_0;
1209157   +_LP0 = _LP0 + (   -0.66737124261283) * _TEMP * _9_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.66737124261283) * _TEMP * _9_1;
1209158   +_LP0 = _LP0 + (    0.47354458382979) * _TEMP * _9_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.47354458382979) * _TEMP * _9_2;
1209159   +_LP0 = _LP0 + (   -0.76484617755918) * _TEMP * _9_3;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.76484617755918) * _TEMP * _9_3;
1209160   +
1209161   +***  Effect: NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumDealsPurchases ;
1209162   +_TEMP = NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumDealsPurchases ;
1209163   +_LP0 = _LP0 + (    0.38683487817532 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.38683487817532 * _TEMP);
1209164   +
1209165   +***  Effect: NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   *** Effect: NumWebVisitsMonth ;
1209166   +_TEMP = NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   _TEMP = NumWebVisitsMonth ;
1209167   +_LP0 = _LP0 + (    0.30399773949187 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.30399773949187 * _TEMP);
1209168   +
1209169   +***  Effect: RMntFrq ;
MPRINT(EM_DIAGRAM):   *** Effect: RMntFrq ;
1209170   +_TEMP = RMntFrq ;
MPRINT(EM_DIAGRAM):   _TEMP = RMntFrq ;
1209171   +_LP0 = _LP0 + (    0.01122718563179 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.01122718563179 * _TEMP);
1209172   +
1209173   +***  Effect: Recency ;
MPRINT(EM_DIAGRAM):   *** Effect: Recency ;
1209174   +_TEMP = Recency ;
MPRINT(EM_DIAGRAM):   _TEMP = Recency ;
1209175   +_LP0 = _LP0 + (   -0.06483187112579 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.06483187112579 * _TEMP);
1209176   +
1209177   +***  Effect: Teenhome ;
MPRINT(EM_DIAGRAM):   *** Effect: Teenhome ;
1209178   +_TEMP = Teenhome ;
MPRINT(EM_DIAGRAM):   _TEMP = Teenhome ;
1209179   +_LP0 = _LP0 + (   -1.33693437973843 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.33693437973843 * _TEMP);
1209180   +
1209181   +*** Naive Posterior Probabilities;
MPRINT(EM_DIAGRAM):   *** Naive Posterior Probabilities;
1209182   +drop _MAXP _IY _P0 _P1;
MPRINT(EM_DIAGRAM):   drop _MAXP _IY _P0 _P1;
1209183   +_TEMP =    -3.46388239032287 + _LP0;
MPRINT(EM_DIAGRAM):   _TEMP = -3.46388239032287 + _LP0;
1209184   +if (_TEMP < 0) then do;
MPRINT(EM_DIAGRAM):   if (_TEMP < 0) then do;
1209185   +   _TEMP = exp(_TEMP);
MPRINT(EM_DIAGRAM):   _TEMP = exp(_TEMP);
1209186   +   _P0 = _TEMP / (1 + _TEMP);
MPRINT(EM_DIAGRAM):   _P0 = _TEMP / (1 + _TEMP);
1209187   +end;
MPRINT(EM_DIAGRAM):   end;
1209188   +else _P0 = 1 / (1 + exp(-_TEMP));
MPRINT(EM_DIAGRAM):   else _P0 = 1 / (1 + exp(-_TEMP));
1209189   +_P1 = 1.0 - _P0;
MPRINT(EM_DIAGRAM):   _P1 = 1.0 - _P0;
1209190   +
1209191   +REG12DR1:
1209192   +
1209193   +*** Residuals;
MPRINT(EM_DIAGRAM):   REG12DR1: *** Residuals;
1209194   +if (_Y = .) then do;
MPRINT(EM_DIAGRAM):   if (_Y = .) then do;
1209195   +   R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
1209196   +   R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
1209197   +end;
MPRINT(EM_DIAGRAM):   end;
1209198   +else do;
MPRINT(EM_DIAGRAM):   else do;
1209199   +    label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1209200   +    label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1209201   +   R_DepVar1 = - _P0;
MPRINT(EM_DIAGRAM):   R_DepVar1 = - _P0;
1209202   +   R_DepVar0 = - _P1;
MPRINT(EM_DIAGRAM):   R_DepVar0 = - _P1;
1209203   +   select( _Y );
MPRINT(EM_DIAGRAM):   select( _Y );
1209204   +      when (0)  R_DepVar1 = R_DepVar1 + 1;
MPRINT(EM_DIAGRAM):   when (0) R_DepVar1 = R_DepVar1 + 1;
1209205   +      when (1)  R_DepVar0 = R_DepVar0 + 1;
MPRINT(EM_DIAGRAM):   when (1) R_DepVar0 = R_DepVar0 + 1;
1209206   +   end;
MPRINT(EM_DIAGRAM):   end;
1209207   +end;
MPRINT(EM_DIAGRAM):   end;
1209208   +
1209209   +*** Posterior Probabilities and Predicted Level;
MPRINT(EM_DIAGRAM):   *** Posterior Probabilities and Predicted Level;
1209210   +label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1209211   +label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1209212   +P_DepVar1 = _P0;
MPRINT(EM_DIAGRAM):   P_DepVar1 = _P0;
1209213   +_MAXP = _P0;
MPRINT(EM_DIAGRAM):   _MAXP = _P0;
1209214   +_IY = 1;
MPRINT(EM_DIAGRAM):   _IY = 1;
1209215   +P_DepVar0 = _P1;
MPRINT(EM_DIAGRAM):   P_DepVar0 = _P1;
1209216   +if (_P1 >  _MAXP + 1E-8) then do;
MPRINT(EM_DIAGRAM):   if (_P1 > _MAXP + 1E-8) then do;
1209217   +   _MAXP = _P1;
MPRINT(EM_DIAGRAM):   _MAXP = _P1;
1209218   +   _IY = 2;
MPRINT(EM_DIAGRAM):   _IY = 2;
1209219   +end;
MPRINT(EM_DIAGRAM):   end;
1209220   +I_DepVar = REG12DRF[_IY];
MPRINT(EM_DIAGRAM):   I_DepVar = REG12DRF[_IY];
1209221   +U_DepVar = REG12DRU[_IY];
MPRINT(EM_DIAGRAM):   U_DepVar = REG12DRU[_IY];
1209222   +
1209223   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1209224   +***** end scoring code for regression;
MPRINT(EM_DIAGRAM):   ***** end scoring code for regression;
1209225   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1209226   +* Renaming variables for Reg12;
MPRINT(EM_DIAGRAM):   * Renaming variables for Reg12;
1209227   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1209228   +* Renaming Posterior variables for Reg12;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Reg12;
1209229   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1209230   +drop Reg12_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Reg12_P_DepVar1;
1209231   +Reg12_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Reg12_P_DepVar1 = P_DepVar1;
1209232   +drop Reg12_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Reg12_P_DepVar0;
1209233   +Reg12_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Reg12_P_DepVar0 = P_DepVar0;
1209234   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1209235   +* Renaming _WARN_ variable for Reg12;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Reg12;
1209236   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1209237   +length Reg12_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Reg12_WARN_ $4;
1209238   +drop Reg12_WARN_;
MPRINT(EM_DIAGRAM):   drop Reg12_WARN_;
1209239   +Reg12_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Reg12_WARN_ = _WARN_;
1209240   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1209241   +* Ensmbl12: Scoring Code of model 10 of 10;
MPRINT(EM_DIAGRAM):   * Ensmbl12: Scoring Code of model 10 of 10;
1209242   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1209243   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1209244   +* TOOL: Regression;
MPRINT(EM_DIAGRAM):   * TOOL: Regression;
1209245   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1209246   +* NODE: Reg11;
MPRINT(EM_DIAGRAM):   * NODE: Reg11;
1209247   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1209248   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1209249   +*** begin scoring code for regression;
MPRINT(EM_DIAGRAM):   *** begin scoring code for regression;
1209250   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1209251   +
1209252   +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
1209253   +label _WARN_ = 'Warnings' ;
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings' ;
1209254   +
1209255   +length I_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length I_DepVar $ 12;
1209256   +label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1209257   +*** Target Values;
MPRINT(EM_DIAGRAM):   *** Target Values;
1209258   +array REG11DRF [2] $12 _temporary_ ('1' '0' );
MPRINT(EM_DIAGRAM):   array REG11DRF [2] $12 _temporary_ ('1' '0' );
1209259   +label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1209260   +format U_DepVar BEST.;
MPRINT(EM_DIAGRAM):   format U_DepVar BEST.;
1209261   +*** Unnormalized target values;
MPRINT(EM_DIAGRAM):   *** Unnormalized target values;
1209262   +ARRAY REG11DRU[2]  _TEMPORARY_ (1 0);
MPRINT(EM_DIAGRAM):   ARRAY REG11DRU[2] _TEMPORARY_ (1 0);
1209263   +
1209264   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1209265   +drop _Y ;
MPRINT(EM_DIAGRAM):   drop _Y ;
1209266   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1209267   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1209268   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1209269   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1209270   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1209271   +   _Y = .;
MPRINT(EM_DIAGRAM):   _Y = .;
1209272   +end;
MPRINT(EM_DIAGRAM):   end;
1209273   +else do;
MPRINT(EM_DIAGRAM):   else do;
1209274   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1209275   +      _Y = 1;
MPRINT(EM_DIAGRAM):   _Y = 1;
1209276   +   end;
MPRINT(EM_DIAGRAM):   end;
1209277   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1209278   +      _Y = 0;
MPRINT(EM_DIAGRAM):   _Y = 0;
1209279   +   end;
MPRINT(EM_DIAGRAM):   end;
1209280   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1209281   +      _Y = .;
MPRINT(EM_DIAGRAM):   _Y = .;
1209282   +   end;
MPRINT(EM_DIAGRAM):   end;
1209283   +end;
MPRINT(EM_DIAGRAM):   end;
1209284   +
1209285   +drop _DM_BAD;
MPRINT(EM_DIAGRAM):   drop _DM_BAD;
1209286   +_DM_BAD=0;
MPRINT(EM_DIAGRAM):   _DM_BAD=0;
1209287   +
1209288   +*** Check AcceptedCmpTotal for missing values ;
MPRINT(EM_DIAGRAM):   *** Check AcceptedCmpTotal for missing values ;
1209289   +if missing( AcceptedCmpTotal ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmpTotal ) then do;
1209290   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1209291   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1209292   +end;
MPRINT(EM_DIAGRAM):   end;
1209293   +
1209294   +*** Check Age for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Age for missing values ;
1209295   +if missing( Age ) then do;
MPRINT(EM_DIAGRAM):   if missing( Age ) then do;
1209296   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1209297   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1209298   +end;
MPRINT(EM_DIAGRAM):   end;
1209299   +
1209300   +*** Check Frq for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Frq for missing values ;
1209301   +if missing( Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( Frq ) then do;
1209302   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1209303   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1209304   +end;
MPRINT(EM_DIAGRAM):   end;
1209305   +
1209306   +*** Check Income for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Income for missing values ;
1209307   +if missing( Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( Income ) then do;
1209308   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1209309   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1209310   +end;
MPRINT(EM_DIAGRAM):   end;
1209311   +
1209312   +*** Check NumDealsPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumDealsPurchases for missing values ;
1209313   +if missing( NumDealsPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumDealsPurchases ) then do;
1209314   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1209315   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1209316   +end;
MPRINT(EM_DIAGRAM):   end;
1209317   +
1209318   +*** Check NumWebVisitsMonth for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumWebVisitsMonth for missing values ;
1209319   +if missing( NumWebVisitsMonth ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumWebVisitsMonth ) then do;
1209320   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1209321   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1209322   +end;
MPRINT(EM_DIAGRAM):   end;
1209323   +
1209324   +*** Check RFMstat for missing values ;
MPRINT(EM_DIAGRAM):   *** Check RFMstat for missing values ;
1209325   +if missing( RFMstat ) then do;
MPRINT(EM_DIAGRAM):   if missing( RFMstat ) then do;
1209326   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1209327   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1209328   +end;
MPRINT(EM_DIAGRAM):   end;
1209329   +
1209330   +*** Check RMntFrq for missing values ;
MPRINT(EM_DIAGRAM):   *** Check RMntFrq for missing values ;
1209331   +if missing( RMntFrq ) then do;
MPRINT(EM_DIAGRAM):   if missing( RMntFrq ) then do;
1209332   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1209333   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1209334   +end;
MPRINT(EM_DIAGRAM):   end;
1209335   +
1209336   +*** Check Recency for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Recency for missing values ;
1209337   +if missing( Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( Recency ) then do;
1209338   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1209339   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1209340   +end;
MPRINT(EM_DIAGRAM):   end;
1209341   +
1209342   +*** Check Teenhome for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Teenhome for missing values ;
1209343   +if missing( Teenhome ) then do;
MPRINT(EM_DIAGRAM):   if missing( Teenhome ) then do;
1209344   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1209345   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1209346   +end;
MPRINT(EM_DIAGRAM):   end;
1209347   +
1209348   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1209349   +drop _3_0 ;
MPRINT(EM_DIAGRAM):   drop _3_0 ;
1209350   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1209351   +   _3_0 = .;
MPRINT(EM_DIAGRAM):   _3_0 = .;
1209352   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1209353   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1209354   +end;
MPRINT(EM_DIAGRAM):   end;
1209355   +else do;
MPRINT(EM_DIAGRAM):   else do;
1209356   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1209357   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1209358   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1209359   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1209360   +      _3_0 = 1;
MPRINT(EM_DIAGRAM):   _3_0 = 1;
1209361   +   end;
MPRINT(EM_DIAGRAM):   end;
1209362   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1209363   +      _3_0 = -1;
MPRINT(EM_DIAGRAM):   _3_0 = -1;
1209364   +   end;
MPRINT(EM_DIAGRAM):   end;
1209365   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1209366   +      _3_0 = .;
MPRINT(EM_DIAGRAM):   _3_0 = .;
1209367   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1209368   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1209369   +   end;
MPRINT(EM_DIAGRAM):   end;
1209370   +end;
MPRINT(EM_DIAGRAM):   end;
1209371   +
1209372   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1209373   +drop _4_0 ;
MPRINT(EM_DIAGRAM):   drop _4_0 ;
1209374   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1209375   +   _4_0 = .;
MPRINT(EM_DIAGRAM):   _4_0 = .;
1209376   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1209377   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1209378   +end;
MPRINT(EM_DIAGRAM):   end;
1209379   +else do;
MPRINT(EM_DIAGRAM):   else do;
1209380   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1209381   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1209382   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1209383   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1209384   +      _4_0 = 1;
MPRINT(EM_DIAGRAM):   _4_0 = 1;
1209385   +   end;
MPRINT(EM_DIAGRAM):   end;
1209386   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1209387   +      _4_0 = -1;
MPRINT(EM_DIAGRAM):   _4_0 = -1;
1209388   +   end;
MPRINT(EM_DIAGRAM):   end;
1209389   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1209390   +      _4_0 = .;
MPRINT(EM_DIAGRAM):   _4_0 = .;
1209391   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1209392   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1209393   +   end;
MPRINT(EM_DIAGRAM):   end;
1209394   +end;
MPRINT(EM_DIAGRAM):   end;
1209395   +
1209396   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1209397   +drop _9_0 _9_1 _9_2 _9_3 ;
MPRINT(EM_DIAGRAM):   drop _9_0 _9_1 _9_2 _9_3 ;
1209398   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1209399   +_9_0 = 0;
MPRINT(EM_DIAGRAM):   _9_0 = 0;
1209400   +_9_1 = 0;
MPRINT(EM_DIAGRAM):   _9_1 = 0;
1209401   +_9_2 = 0;
MPRINT(EM_DIAGRAM):   _9_2 = 0;
1209402   +_9_3 = 0;
MPRINT(EM_DIAGRAM):   _9_3 = 0;
1209403   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1209404   +   _9_0 = .;
MPRINT(EM_DIAGRAM):   _9_0 = .;
1209405   +   _9_1 = .;
MPRINT(EM_DIAGRAM):   _9_1 = .;
1209406   +   _9_2 = .;
MPRINT(EM_DIAGRAM):   _9_2 = .;
1209407   +   _9_3 = .;
MPRINT(EM_DIAGRAM):   _9_3 = .;
1209408   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1209409   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1209410   +end;
MPRINT(EM_DIAGRAM):   end;
1209411   +else do;
MPRINT(EM_DIAGRAM):   else do;
1209412   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1209413   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1209414   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1209415   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1209416   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1209417   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1209418   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1209419   +            _9_0 = 1;
MPRINT(EM_DIAGRAM):   _9_0 = 1;
1209420   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1209421   +         end;
MPRINT(EM_DIAGRAM):   end;
1209422   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1209423   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1209424   +               _9_1 = 1;
MPRINT(EM_DIAGRAM):   _9_1 = 1;
1209425   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1209426   +            end;
MPRINT(EM_DIAGRAM):   end;
1209427   +         end;
MPRINT(EM_DIAGRAM):   end;
1209428   +      end;
MPRINT(EM_DIAGRAM):   end;
1209429   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1209430   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1209431   +            _9_2 = 1;
MPRINT(EM_DIAGRAM):   _9_2 = 1;
1209432   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1209433   +         end;
MPRINT(EM_DIAGRAM):   end;
1209434   +      end;
MPRINT(EM_DIAGRAM):   end;
1209435   +   end;
MPRINT(EM_DIAGRAM):   end;
1209436   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1209437   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1209438   +         _9_3 = 1;
MPRINT(EM_DIAGRAM):   _9_3 = 1;
1209439   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1209440   +      end;
MPRINT(EM_DIAGRAM):   end;
1209441   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1209442   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1209443   +            _9_0 = -1;
MPRINT(EM_DIAGRAM):   _9_0 = -1;
1209444   +            _9_1 = -1;
MPRINT(EM_DIAGRAM):   _9_1 = -1;
1209445   +            _9_2 = -1;
MPRINT(EM_DIAGRAM):   _9_2 = -1;
1209446   +            _9_3 = -1;
MPRINT(EM_DIAGRAM):   _9_3 = -1;
1209447   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1209448   +         end;
MPRINT(EM_DIAGRAM):   end;
1209449   +      end;
MPRINT(EM_DIAGRAM):   end;
1209450   +   end;
MPRINT(EM_DIAGRAM):   end;
1209451   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1209452   +      _9_0 = .;
MPRINT(EM_DIAGRAM):   _9_0 = .;
1209453   +      _9_1 = .;
MPRINT(EM_DIAGRAM):   _9_1 = .;
1209454   +      _9_2 = .;
MPRINT(EM_DIAGRAM):   _9_2 = .;
1209455   +      _9_3 = .;
MPRINT(EM_DIAGRAM):   _9_3 = .;
1209456   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1209457   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1209458   +   end;
MPRINT(EM_DIAGRAM):   end;
1209459   +end;
MPRINT(EM_DIAGRAM):   end;
1209460   +
1209461   +*** If missing inputs, use averages;
MPRINT(EM_DIAGRAM):   *** If missing inputs, use averages;
1209462   +if _DM_BAD > 0 then do;
MPRINT(EM_DIAGRAM):   if _DM_BAD > 0 then do;
1209463   +   _P0 = 0.151221567;
MPRINT(EM_DIAGRAM):   _P0 = 0.151221567;
1209464   +   _P1 = 0.848778433;
MPRINT(EM_DIAGRAM):   _P1 = 0.848778433;
1209465   +   goto REG11DR1;
MPRINT(EM_DIAGRAM):   goto REG11DR1;
1209466   +end;
MPRINT(EM_DIAGRAM):   end;
1209467   +
1209468   +*** Compute Linear Predictor;
MPRINT(EM_DIAGRAM):   *** Compute Linear Predictor;
1209469   +drop _TEMP;
MPRINT(EM_DIAGRAM):   drop _TEMP;
1209470   +drop _LP0;
MPRINT(EM_DIAGRAM):   drop _LP0;
1209471   +_LP0 = 0;
MPRINT(EM_DIAGRAM):   _LP0 = 0;
1209472   +
1209473   +***  Effect: AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Effect: AcceptedCmp3 ;
1209474   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1209475   +_LP0 = _LP0 + (   -0.21402292491598) * _TEMP * _3_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.21402292491598) * _TEMP * _3_0;
1209476   +
1209477   +***  Effect: AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Effect: AcceptedCmp4 ;
1209478   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1209479   +_LP0 = _LP0 + (    0.20181176396468) * _TEMP * _4_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.20181176396468) * _TEMP * _4_0;
1209480   +
1209481   +***  Effect: AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   *** Effect: AcceptedCmpTotal ;
1209482   +_TEMP = AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   _TEMP = AcceptedCmpTotal ;
1209483   +_LP0 = _LP0 + (    1.01331254975906 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.01331254975906 * _TEMP);
1209484   +
1209485   +***  Effect: Age ;
MPRINT(EM_DIAGRAM):   *** Effect: Age ;
1209486   +_TEMP = Age ;
MPRINT(EM_DIAGRAM):   _TEMP = Age ;
1209487   +_LP0 = _LP0 + (   -0.00968312823761 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.00968312823761 * _TEMP);
1209488   +
1209489   +***  Effect: Frq ;
MPRINT(EM_DIAGRAM):   *** Effect: Frq ;
1209490   +_TEMP = Frq ;
MPRINT(EM_DIAGRAM):   _TEMP = Frq ;
1209491   +_LP0 = _LP0 + (   -0.03456417718144 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.03456417718144 * _TEMP);
1209492   +
1209493   +***  Effect: Income ;
MPRINT(EM_DIAGRAM):   *** Effect: Income ;
1209494   +_TEMP = Income ;
MPRINT(EM_DIAGRAM):   _TEMP = Income ;
1209495   +_LP0 = _LP0 + (    0.00002539988923 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00002539988923 * _TEMP);
1209496   +
1209497   +***  Effect: Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Effect: Marital_Status ;
1209498   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1209499   +_LP0 = _LP0 + (    0.11081046192241) * _TEMP * _9_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.11081046192241) * _TEMP * _9_0;
1209500   +_LP0 = _LP0 + (   -0.36385893866909) * _TEMP * _9_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.36385893866909) * _TEMP * _9_1;
1209501   +_LP0 = _LP0 + (    0.25486771612086) * _TEMP * _9_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.25486771612086) * _TEMP * _9_2;
1209502   +_LP0 = _LP0 + (   -0.40515143447522) * _TEMP * _9_3;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.40515143447522) * _TEMP * _9_3;
1209503   +
1209504   +***  Effect: NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumDealsPurchases ;
1209505   +_TEMP = NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumDealsPurchases ;
1209506   +_LP0 = _LP0 + (    0.21113804572457 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.21113804572457 * _TEMP);
1209507   +
1209508   +***  Effect: NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   *** Effect: NumWebVisitsMonth ;
1209509   +_TEMP = NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   _TEMP = NumWebVisitsMonth ;
1209510   +_LP0 = _LP0 + (    0.17412114550604 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.17412114550604 * _TEMP);
1209511   +
1209512   +***  Effect: RFMstat ;
MPRINT(EM_DIAGRAM):   *** Effect: RFMstat ;
1209513   +_TEMP = RFMstat ;
MPRINT(EM_DIAGRAM):   _TEMP = RFMstat ;
1209514   +_LP0 = _LP0 + (    0.00006841011087 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00006841011087 * _TEMP);
1209515   +
1209516   +***  Effect: RMntFrq ;
MPRINT(EM_DIAGRAM):   *** Effect: RMntFrq ;
1209517   +_TEMP = RMntFrq ;
MPRINT(EM_DIAGRAM):   _TEMP = RMntFrq ;
1209518   +_LP0 = _LP0 + (    0.00529455452809 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00529455452809 * _TEMP);
1209519   +
1209520   +***  Effect: Recency ;
MPRINT(EM_DIAGRAM):   *** Effect: Recency ;
1209521   +_TEMP = Recency ;
MPRINT(EM_DIAGRAM):   _TEMP = Recency ;
1209522   +_LP0 = _LP0 + (   -0.03257124268465 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.03257124268465 * _TEMP);
1209523   +
1209524   +***  Effect: Teenhome ;
MPRINT(EM_DIAGRAM):   *** Effect: Teenhome ;
1209525   +_TEMP = Teenhome ;
MPRINT(EM_DIAGRAM):   _TEMP = Teenhome ;
1209526   +_LP0 = _LP0 + (   -0.71325798797505 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.71325798797505 * _TEMP);
1209527   +
1209528   +*** Naive Posterior Probabilities;
MPRINT(EM_DIAGRAM):   *** Naive Posterior Probabilities;
1209529   +drop _MAXP _IY _P0 _P1;
MPRINT(EM_DIAGRAM):   drop _MAXP _IY _P0 _P1;
1209530   +_P0 = probnorm((   -2.04830407754231) + _LP0);
MPRINT(EM_DIAGRAM):   _P0 = probnorm(( -2.04830407754231) + _LP0);
1209531   +_P1 = 1.0 - _P0;
MPRINT(EM_DIAGRAM):   _P1 = 1.0 - _P0;
1209532   +
1209533   +REG11DR1:
1209534   +
1209535   +*** Residuals;
MPRINT(EM_DIAGRAM):   REG11DR1: *** Residuals;
1209536   +if (_Y = .) then do;
MPRINT(EM_DIAGRAM):   if (_Y = .) then do;
1209537   +   R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
1209538   +   R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
1209539   +end;
MPRINT(EM_DIAGRAM):   end;
1209540   +else do;
MPRINT(EM_DIAGRAM):   else do;
1209541   +    label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1209542   +    label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1209543   +   R_DepVar1 = - _P0;
MPRINT(EM_DIAGRAM):   R_DepVar1 = - _P0;
1209544   +   R_DepVar0 = - _P1;
MPRINT(EM_DIAGRAM):   R_DepVar0 = - _P1;
1209545   +   select( _Y );
MPRINT(EM_DIAGRAM):   select( _Y );
1209546   +      when (0)  R_DepVar1 = R_DepVar1 + 1;
MPRINT(EM_DIAGRAM):   when (0) R_DepVar1 = R_DepVar1 + 1;
1209547   +      when (1)  R_DepVar0 = R_DepVar0 + 1;
MPRINT(EM_DIAGRAM):   when (1) R_DepVar0 = R_DepVar0 + 1;
1209548   +   end;
MPRINT(EM_DIAGRAM):   end;
1209549   +end;
MPRINT(EM_DIAGRAM):   end;
1209550   +
1209551   +*** Posterior Probabilities and Predicted Level;
MPRINT(EM_DIAGRAM):   *** Posterior Probabilities and Predicted Level;
1209552   +label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1209553   +label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1209554   +P_DepVar1 = _P0;
MPRINT(EM_DIAGRAM):   P_DepVar1 = _P0;
1209555   +_MAXP = _P0;
MPRINT(EM_DIAGRAM):   _MAXP = _P0;
1209556   +_IY = 1;
MPRINT(EM_DIAGRAM):   _IY = 1;
1209557   +P_DepVar0 = _P1;
MPRINT(EM_DIAGRAM):   P_DepVar0 = _P1;
1209558   +if (_P1 >  _MAXP + 1E-8) then do;
MPRINT(EM_DIAGRAM):   if (_P1 > _MAXP + 1E-8) then do;
1209559   +   _MAXP = _P1;
MPRINT(EM_DIAGRAM):   _MAXP = _P1;
1209560   +   _IY = 2;
MPRINT(EM_DIAGRAM):   _IY = 2;
1209561   +end;
MPRINT(EM_DIAGRAM):   end;
1209562   +I_DepVar = REG11DRF[_IY];
MPRINT(EM_DIAGRAM):   I_DepVar = REG11DRF[_IY];
1209563   +U_DepVar = REG11DRU[_IY];
MPRINT(EM_DIAGRAM):   U_DepVar = REG11DRU[_IY];
1209564   +
1209565   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1209566   +***** end scoring code for regression;
MPRINT(EM_DIAGRAM):   ***** end scoring code for regression;
1209567   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1209568   +* Renaming variables for Reg11;
MPRINT(EM_DIAGRAM):   * Renaming variables for Reg11;
1209569   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1209570   +* Renaming Posterior variables for Reg11;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Reg11;
1209571   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1209572   +drop Reg11_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Reg11_P_DepVar1;
1209573   +Reg11_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Reg11_P_DepVar1 = P_DepVar1;
1209574   +drop Reg11_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Reg11_P_DepVar0;
1209575   +Reg11_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Reg11_P_DepVar0 = P_DepVar0;
1209576   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1209577   +* Renaming _WARN_ variable for Reg11;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Reg11;
1209578   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1209579   +length Reg11_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Reg11_WARN_ $4;
1209580   +drop Reg11_WARN_;
MPRINT(EM_DIAGRAM):   drop Reg11_WARN_;
1209581   +Reg11_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Reg11_WARN_ = _WARN_;
1209582   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1209583   +* Ensmbl12: Average Posteriors of 10 models;
MPRINT(EM_DIAGRAM):   * Ensmbl12: Average Posteriors of 10 models;
1209584   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1209585   +P_DepVar1 = (
1209586   +Neural42_P_DepVar1 +
1209587   +Neural37_P_DepVar1 +
1209588   +Neural38_P_DepVar1 +
1209589   +Neural39_P_DepVar1 +
1209590   +Neural40_P_DepVar1 +
1209591   +Neural41_P_DepVar1 +
1209592   +Neural36_P_DepVar1 +
1209593   +Tree6_P_DepVar1 +
1209594   +Reg12_P_DepVar1 +
1209595   +Reg11_P_DepVar1
1209596   +)/10;
MPRINT(EM_DIAGRAM):   P_DepVar1 = ( Neural42_P_DepVar1 + Neural37_P_DepVar1 + 
Neural38_P_DepVar1 + Neural39_P_DepVar1 + Neural40_P_DepVar1 + Neural41_P_DepVar1 + 
Neural36_P_DepVar1 + Tree6_P_DepVar1 + Reg12_P_DepVar1 + Reg11_P_DepVar1 )/10;
1209597   +P_DepVar0 = (
1209598   +Neural42_P_DepVar0 +
1209599   +Neural37_P_DepVar0 +
1209600   +Neural38_P_DepVar0 +
1209601   +Neural39_P_DepVar0 +
1209602   +Neural40_P_DepVar0 +
1209603   +Neural41_P_DepVar0 +
1209604   +Neural36_P_DepVar0 +
1209605   +Tree6_P_DepVar0 +
1209606   +Reg12_P_DepVar0 +
1209607   +Reg11_P_DepVar0
1209608   +)/10;
MPRINT(EM_DIAGRAM):   P_DepVar0 = ( Neural42_P_DepVar0 + Neural37_P_DepVar0 + 
Neural38_P_DepVar0 + Neural39_P_DepVar0 + Neural40_P_DepVar0 + Neural41_P_DepVar0 + 
Neural36_P_DepVar0 + Tree6_P_DepVar0 + Reg12_P_DepVar0 + Reg11_P_DepVar0 )/10;
1209609   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1209610   +* Ensmbl12: Computing Classification Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl12: Computing Classification Vars;
1209611   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1209612   +length I_DepVar $32;
MPRINT(EM_DIAGRAM):   length I_DepVar $32;
WARNING: Length of character variable I_DepVar has already been set. 
         Use the LENGTH statement as the very first statement in the DATA STEP to declare the 
         length of a character variable.
1209613   +label I_DepVar = 'Into: DepVar';
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar';
1209614   +length _format $200;
MPRINT(EM_DIAGRAM):   length _format $200;
1209615   +drop _format;
MPRINT(EM_DIAGRAM):   drop _format;
1209616   +_format= ' ';
MPRINT(EM_DIAGRAM):   _format= ' ';
1209617   +_p_= 0;
MPRINT(EM_DIAGRAM):   _p_= 0;
1209618   +drop _p_;
MPRINT(EM_DIAGRAM):   drop _p_;
1209619   +if P_DepVar1 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar1 > _p_ then do;
1209620   +_p_= P_DepVar1;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar1;
1209621   +_format= '1';
MPRINT(EM_DIAGRAM):   _format= '1';
1209622   +end;
MPRINT(EM_DIAGRAM):   end;
1209623   +if P_DepVar0 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar0 > _p_ then do;
1209624   +_p_= P_DepVar0;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar0;
1209625   +_format= '0';
MPRINT(EM_DIAGRAM):   _format= '0';
1209626   +end;
MPRINT(EM_DIAGRAM):   end;
1209627   +%DMNORMCP(_format,I_DepVar);
MPRINT(DMNORMCP):   I_DepVar=dmnorm(_format,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1209628   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1209629   +* Ensmbl12: Producing Unformatted variable;
MPRINT(EM_DIAGRAM):   * Ensmbl12: Producing Unformatted variable;
1209630   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1209631   +label U_DepVar = "Unnormalized Into: DepVar";
MPRINT(EM_DIAGRAM):   label U_DepVar = "Unnormalized Into: DepVar";
1209632   +if I_DepVar = '1' then U_DepVar = 1;
MPRINT(EM_DIAGRAM):   if I_DepVar = '1' then U_DepVar = 1;
1209633   +else
1209634   +if I_DepVar = '0' then U_DepVar = 0;
MPRINT(EM_DIAGRAM):   else if I_DepVar = '0' then U_DepVar = 0;
1209635   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1209636   +* Ensmbl12: Computing _WARN_ Variable;
MPRINT(EM_DIAGRAM):   * Ensmbl12: Computing _WARN_ Variable;
1209637   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1209638   +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
1209639   +label _WARN_ = 'Warnings';
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings';
1209640   +_WARN_ = '';
MPRINT(EM_DIAGRAM):   _WARN_ = '';
1209641   +if index(NEURAL42_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M'
1209641  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL42_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
1209642   +if index(NEURAL42_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U'
1209642  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL42_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
1209643   +if index(NEURAL42_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P'
1209643  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL42_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
1209644   +if index(NEURAL42_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C'
1209644  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL42_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
1209645   +if index(NEURAL37_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M'
1209645  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL37_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
1209646   +if index(NEURAL37_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U'
1209646  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL37_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
1209647   +if index(NEURAL37_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P'
1209647  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL37_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
1209648   +if index(NEURAL37_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C'
1209648  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL37_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
1209649   +if index(NEURAL38_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M'
1209649  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL38_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
1209650   +if index(NEURAL38_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U'
1209650  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL38_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
1209651   +if index(NEURAL38_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P'
1209651  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL38_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
1209652   +if index(NEURAL38_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C'
1209652  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL38_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
1209653   +if index(NEURAL39_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M'
1209653  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL39_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
1209654   +if index(NEURAL39_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U'
1209654  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL39_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
1209655   +if index(NEURAL39_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P'
1209655  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL39_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
1209656   +if index(NEURAL39_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C'
1209656  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL39_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
1209657   +if index(NEURAL40_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M'
1209657  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL40_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
1209658   +if index(NEURAL40_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U'
1209658  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL40_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
1209659   +if index(NEURAL40_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P'
1209659  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL40_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
1209660   +if index(NEURAL40_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C'
1209660  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL40_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
1209661   +if index(NEURAL41_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M'
1209661  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL41_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
1209662   +if index(NEURAL41_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U'
1209662  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL41_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
1209663   +if index(NEURAL41_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P'
1209663  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL41_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
1209664   +if index(NEURAL41_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C'
1209664  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL41_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
1209665   +if index(NEURAL36_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M'
1209665  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL36_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
1209666   +if index(NEURAL36_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U'
1209666  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL36_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
1209667   +if index(NEURAL36_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P'
1209667  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL36_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
1209668   +if index(NEURAL36_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C'
1209668  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL36_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
1209669   +if index(TREE6_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(TREE6_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 
1, 1) ='M';
1209670   +if index(TREE6_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(TREE6_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 
2, 1) ='U';
1209671   +if index(TREE6_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(TREE6_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 
3, 1) ='P';
1209672   +if index(TREE6_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(TREE6_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 
4, 1) ='C';
1209673   +if index(REG12_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(REG12_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 
1, 1) ='M';
1209674   +if index(REG12_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(REG12_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 
2, 1) ='U';
1209675   +if index(REG12_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(REG12_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 
3, 1) ='P';
1209676   +if index(REG12_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(REG12_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 
4, 1) ='C';
1209677   +if index(REG11_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(REG11_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 
1, 1) ='M';
1209678   +if index(REG11_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(REG11_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 
2, 1) ='U';
1209679   +if index(REG11_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(REG11_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 
3, 1) ='P';
1209680   +if index(REG11_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(REG11_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 
4, 1) ='C';
1209681   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1209682   +* Ensmbl12: Computing Residual Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl12: Computing Residual Vars;
1209683   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1209684   +if
1209685   +F_DepVar NE '1'
1209686   +AND F_DepVar NE '0'
1209687   +then do;
MPRINT(EM_DIAGRAM):   if F_DepVar NE '1' AND F_DepVar NE '0' then do;
1209688   +R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
1209689   +R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
1209690   +end;
MPRINT(EM_DIAGRAM):   end;
1209691   +else do;
MPRINT(EM_DIAGRAM):   else do;
1209692   +R_DepVar1 = -P_DepVar1;
MPRINT(EM_DIAGRAM):   R_DepVar1 = -P_DepVar1;
1209693   +R_DepVar0 = -P_DepVar0;
MPRINT(EM_DIAGRAM):   R_DepVar0 = -P_DepVar0;
1209694   +SELECT(F_DepVar);
MPRINT(EM_DIAGRAM):   SELECT(F_DepVar);
1209695   +WHEN('1') R_DepVar1 = R_DepVar1 +1;
MPRINT(EM_DIAGRAM):   WHEN('1') R_DepVar1 = R_DepVar1 +1;
1209696   +WHEN('0') R_DepVar0 = R_DepVar0 +1;
MPRINT(EM_DIAGRAM):   WHEN('0') R_DepVar0 = R_DepVar0 +1;
1209697   +OTHERWISE;
MPRINT(EM_DIAGRAM):   OTHERWISE;
1209698   +END;
MPRINT(EM_DIAGRAM):   END;
1209699   +END;
MPRINT(EM_DIAGRAM):   END;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1209700    run;

NOTE: DATA STEP view saved on file EMWS8.ENSMBL12_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.NEURAL42_TRAIN.VIEW used (Total process time):
      real time           0.23 seconds
      cpu time            0.23 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.23 seconds
      cpu time            0.23 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1209701    quit;
1209702    filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
1209703    filename emflow
1209703  ! "C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl12\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl12\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl12: Scoring NEURAL42_VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1209704    *------------------------------------------------------------*;
1209705    * Ensmbl12: Scoring NEURAL42_VALIDATE data;
1209706    *------------------------------------------------------------*;
1209707    data EMWS8.Ensmbl12_VALIDATE
1209708    / view=EMWS8.Ensmbl12_VALIDATE
1209709    ;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl12_VALIDATE / view=EMWS8.Ensmbl12_VALIDATE ;
1209710    set EMWS8.Neural42_VALIDATE
1209711    ;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural42_VALIDATE ;
1209712    %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl12\EMFLOWSCORE.sas.
1209713   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1209714   +* Ensmbl12: Combine model for DepVar;
MPRINT(EM_DIAGRAM):   * Ensmbl12: Combine model for DepVar;
1209715   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1209716   +* Ensmbl12: Scoring Code of model 1 of 10;
MPRINT(EM_DIAGRAM):   * Ensmbl12: Scoring Code of model 1 of 10;
1209717   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1209718   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1209719   +* TOOL: Extension Class;
MPRINT(EM_DIAGRAM):   * TOOL: Extension Class;
1209720   +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
1209721   +* NODE: FIMPORT;
MPRINT(EM_DIAGRAM):   * NODE: FIMPORT;
1209722   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1209723   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1209724   +* TOOL: Statistics Exploration;
MPRINT(EM_DIAGRAM):   * TOOL: Statistics Exploration;
1209725   +* TYPE: EXPLORE;
MPRINT(EM_DIAGRAM):   * TYPE: EXPLORE;
1209726   +* NODE: Stat;
MPRINT(EM_DIAGRAM):   * NODE: Stat;
1209727   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1209728   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1209729   +* TOOL: Filtering;
MPRINT(EM_DIAGRAM):   * TOOL: Filtering;
1209730   +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
1209731   +* NODE: Filter;
MPRINT(EM_DIAGRAM):   * NODE: Filter;
1209732   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1209733   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1209734   +* TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
MPRINT(EM_DIAGRAM):   * TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
1209735   +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
1209736   +* NODE: EMCODE4;
MPRINT(EM_DIAGRAM):   * NODE: EMCODE4;
1209737   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1209738   +
1209739   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1209740   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1209740  !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1209741   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1209742   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1209743   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1209744   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1209745   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
1209746   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1209747   +* TOOL: Transform;
MPRINT(EM_DIAGRAM):   * TOOL: Transform;
1209748   +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
1209749   +* NODE: Trans;
MPRINT(EM_DIAGRAM):   * NODE: Trans;
1209750   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1209751   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1209752   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1209753   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1209754   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1209755   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1209756   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
1209757   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1209758   +* TOOL: Partition Class;
MPRINT(EM_DIAGRAM):   * TOOL: Partition Class;
1209759   +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
1209760   +* NODE: Part;
MPRINT(EM_DIAGRAM):   * NODE: Part;
1209761   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
The SAS System

1209762   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1209763   +* TOOL: Metadata Node;
MPRINT(EM_DIAGRAM):   * TOOL: Metadata Node;
1209764   +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
1209765   +* NODE: Meta3;
MPRINT(EM_DIAGRAM):   * NODE: Meta3;
1209766   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1209767   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1209768   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
1209769   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1209770   +* NODE: Neural42;
MPRINT(EM_DIAGRAM):   * NODE: Neural42;
1209771   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1209772   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1209773   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1209774   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1209775   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1209776   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1209777   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1209778   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1209779   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1209780   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1209781   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1209782   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1209783   +LENGTH _WARN_ $4
1209784   +      F_DepVar  $ 12
1209785   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1209786   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1209787   +
1209788   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1209789   +
1209790   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1209791   +
1209792   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1209793   +
1209794   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1209795   +
1209796   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1209797   +
1209798   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1209799   +
1209800   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1209801   +
1209802   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1209803   +
1209804   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1209805   +
1209806   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1209807   +
1209808   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1209809   +
1209810   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1209811   +
1209812   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1209813   +
1209814   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1209815   +
1209816   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1209817   +
1209818   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1209819   +
1209820   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1209821   +
1209822   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1209823   +
1209824   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1209825   +
1209826   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1209827   +
1209828   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1209829   +
1209830   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1209831   +
1209832   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1209833   +
1209834   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1209835   +
1209836   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1209837   +
1209838   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1209839   +
1209840   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1209841   +
1209842   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1209843   +
1209844   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1209845   +
1209846   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1209847   +
1209848   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1209849   +
1209850   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1209851   +
1209852   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1209853   +
1209854   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1209855   +
1209856   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1209857   +
1209858   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1209859   +
1209860   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1209861   +
1209862   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1209863   +
1209864   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1209865   +
1209866   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1209867   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1209868   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1209869   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1209870   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1209871   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1209872   +end;
MPRINT(EM_DIAGRAM):   end;
1209873   +else do;
MPRINT(EM_DIAGRAM):   else do;
1209874   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1209875   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1209876   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1209877   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1209878   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1209879   +   end;
MPRINT(EM_DIAGRAM):   end;
1209880   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1209881   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1209882   +   end;
MPRINT(EM_DIAGRAM):   end;
1209883   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1209884   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1209885   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1209886   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1209887   +   end;
MPRINT(EM_DIAGRAM):   end;
1209888   +end;
MPRINT(EM_DIAGRAM):   end;
1209889   +
1209890   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1209891   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1209892   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1209893   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1209894   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1209895   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1209896   +end;
MPRINT(EM_DIAGRAM):   end;
1209897   +else do;
MPRINT(EM_DIAGRAM):   else do;
1209898   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1209899   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1209900   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1209901   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1209902   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1209903   +   end;
MPRINT(EM_DIAGRAM):   end;
1209904   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1209905   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1209906   +   end;
MPRINT(EM_DIAGRAM):   end;
1209907   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1209908   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1209909   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1209910   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1209911   +   end;
MPRINT(EM_DIAGRAM):   end;
1209912   +end;
MPRINT(EM_DIAGRAM):   end;
1209913   +
1209914   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1209915   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1209916   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1209917   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1209918   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1209919   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1209920   +end;
MPRINT(EM_DIAGRAM):   end;
1209921   +else do;
MPRINT(EM_DIAGRAM):   else do;
1209922   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1209923   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1209924   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1209925   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1209926   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1209927   +   end;
MPRINT(EM_DIAGRAM):   end;
1209928   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1209929   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1209930   +   end;
MPRINT(EM_DIAGRAM):   end;
1209931   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1209932   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1209933   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1209934   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1209935   +   end;
MPRINT(EM_DIAGRAM):   end;
1209936   +end;
MPRINT(EM_DIAGRAM):   end;
1209937   +
1209938   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1209939   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1209940   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1209941   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1209942   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1209943   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1209944   +end;
MPRINT(EM_DIAGRAM):   end;
1209945   +else do;
MPRINT(EM_DIAGRAM):   else do;
1209946   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1209947   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1209948   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1209949   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1209950   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1209951   +   end;
MPRINT(EM_DIAGRAM):   end;
1209952   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1209953   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1209954   +   end;
MPRINT(EM_DIAGRAM):   end;
1209955   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1209956   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1209957   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1209958   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1209959   +   end;
MPRINT(EM_DIAGRAM):   end;
1209960   +end;
MPRINT(EM_DIAGRAM):   end;
1209961   +
1209962   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1209963   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1209964   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1209965   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1209966   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1209967   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1209968   +end;
MPRINT(EM_DIAGRAM):   end;
1209969   +else do;
MPRINT(EM_DIAGRAM):   else do;
1209970   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1209971   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1209972   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1209973   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1209974   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1209975   +   end;
MPRINT(EM_DIAGRAM):   end;
1209976   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1209977   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1209978   +   end;
MPRINT(EM_DIAGRAM):   end;
1209979   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1209980   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1209981   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1209982   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1209983   +   end;
MPRINT(EM_DIAGRAM):   end;
1209984   +end;
MPRINT(EM_DIAGRAM):   end;
1209985   +
1209986   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1209987   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1209988   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1209989   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1209990   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1209991   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1209992   +end;
MPRINT(EM_DIAGRAM):   end;
1209993   +else do;
MPRINT(EM_DIAGRAM):   else do;
1209994   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1209995   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1209996   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1209997   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1209998   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1209999   +   end;
MPRINT(EM_DIAGRAM):   end;
1210000   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1210001   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1210002   +   end;
MPRINT(EM_DIAGRAM):   end;
1210003   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1210004   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1210005   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1210006   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1210007   +   end;
MPRINT(EM_DIAGRAM):   end;
1210008   +end;
MPRINT(EM_DIAGRAM):   end;
1210009   +
1210010   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1210011   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1210012   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1210013   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1210014   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1210015   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1210016   +end;
MPRINT(EM_DIAGRAM):   end;
1210017   +else do;
MPRINT(EM_DIAGRAM):   else do;
1210018   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1210019   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1210020   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1210021   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1210022   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1210023   +   end;
MPRINT(EM_DIAGRAM):   end;
1210024   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1210025   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1210026   +   end;
MPRINT(EM_DIAGRAM):   end;
1210027   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1210028   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1210029   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1210030   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1210031   +   end;
MPRINT(EM_DIAGRAM):   end;
1210032   +end;
MPRINT(EM_DIAGRAM):   end;
1210033   +
1210034   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1210035   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
1210036   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1210037   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1210038   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1210039   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1210040   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1210041   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1210042   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1210043   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1210044   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1210045   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1210046   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1210047   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1210048   +end;
MPRINT(EM_DIAGRAM):   end;
1210049   +else do;
MPRINT(EM_DIAGRAM):   else do;
1210050   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1210051   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1210052   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1210053   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1210054   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1210055   +   end;
MPRINT(EM_DIAGRAM):   end;
1210056   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1210057   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1210058   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1210059   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1210060   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1210061   +   end;
MPRINT(EM_DIAGRAM):   end;
1210062   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1210063   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1210064   +   end;
MPRINT(EM_DIAGRAM):   end;
1210065   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1210066   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1210067   +   end;
MPRINT(EM_DIAGRAM):   end;
1210068   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1210069   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1210070   +   end;
MPRINT(EM_DIAGRAM):   end;
1210071   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1210072   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1210073   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1210074   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1210075   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1210076   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1210077   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1210078   +   end;
MPRINT(EM_DIAGRAM):   end;
1210079   +end;
MPRINT(EM_DIAGRAM):   end;
1210080   +
1210081   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1210082   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1210083   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
1210084   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1210085   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1210086   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1210087   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1210088   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1210089   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1210090   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1210091   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1210092   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1210093   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1210094   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1210095   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1210096   +end;
MPRINT(EM_DIAGRAM):   end;
1210097   +else do;
MPRINT(EM_DIAGRAM):   else do;
1210098   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1210099   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1210100   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1210101   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1210102   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1210103   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1210104   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1210105   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1210106   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1210107   +         end;
MPRINT(EM_DIAGRAM):   end;
1210108   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1210109   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1210110   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1210111   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1210112   +            end;
MPRINT(EM_DIAGRAM):   end;
1210113   +         end;
MPRINT(EM_DIAGRAM):   end;
1210114   +      end;
MPRINT(EM_DIAGRAM):   end;
1210115   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1210116   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1210117   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1210118   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1210119   +         end;
MPRINT(EM_DIAGRAM):   end;
1210120   +      end;
MPRINT(EM_DIAGRAM):   end;
1210121   +   end;
MPRINT(EM_DIAGRAM):   end;
1210122   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1210123   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1210124   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1210125   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1210126   +      end;
MPRINT(EM_DIAGRAM):   end;
1210127   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1210128   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1210129   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1210130   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1210131   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1210132   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1210133   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1210134   +         end;
MPRINT(EM_DIAGRAM):   end;
1210135   +      end;
MPRINT(EM_DIAGRAM):   end;
1210136   +   end;
MPRINT(EM_DIAGRAM):   end;
1210137   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1210138   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1210139   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1210140   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1210141   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1210142   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1210143   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1210144   +   end;
MPRINT(EM_DIAGRAM):   end;
1210145   +end;
MPRINT(EM_DIAGRAM):   end;
1210146   +
1210147   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1210148   +*** Checking missing input Interval
1210149   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1210150   +
1210151   +IF NMISS(
1210152   +   AcceptedCmpTotal ,
1210153   +   Age ,
1210154   +   Frq ,
1210155   +   Income ,
1210156   +   Kidhome ,
1210157   +   MntFishProducts ,
1210158   +   MntFruits ,
1210159   +   MntGoldProds ,
1210160   +   MntSweetProducts ,
1210161   +   MonthsAsCustomer ,
1210162   +   NumDealsPurchases ,
1210163   +   NumWebVisitsMonth ,
1210164   +   RFMstat ,
1210165   +   RMntFrq ,
1210166   +   Recency ,
1210167   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , 
MntFishProducts , MntFruits , MntGoldProds , MntSweetProducts , MonthsAsCustomer , 
NumDealsPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , Teenhome ) THEN DO;
1210168   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1210169   +
1210170   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1210171   +END;
MPRINT(EM_DIAGRAM):   END;
1210172   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1210173   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1210174   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1210175   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1210176   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1210177   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1210178   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1210179   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1210180   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1210181   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1210182   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1210183   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1210184   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1210185   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1210186   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1210187   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1210188   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1210189   +   S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
1210190   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
1210191   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1210192   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1210193   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1210194   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1210195   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1210196   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1210197   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1210198   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1210199   +END;
MPRINT(EM_DIAGRAM):   END;
1210200   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1210201   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1210202   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1210203   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1210204   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1210205   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1210206   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1210207   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1210208   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1210209   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1210210   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1210211   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1210212   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1210213   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1210214   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1210215   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1210216   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1210217   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1210218   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1210219   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1210220   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1210221   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1210222   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1210223   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1210224   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1210225   +   ELSE S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
1210226   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
1210227   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1210228   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1210229   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1210230   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1210231   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1210232   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1210233   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1210234   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1210235   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1210236   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1210237   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1210238   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1210239   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1210240   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1210241   +END;
MPRINT(EM_DIAGRAM):   END;
1210242   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1210243   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1210244   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1210245   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1210246   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1210247   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1210248   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1210249   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1210250   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1210251   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1210252   +   H11  =     0.27578843014513 * S_AcceptedCmpTotal  +    -0.00809332778604 *
1210253   +        S_Age  +    -0.01616869766394 * S_Frq  +     0.03490362906378 *
1210254   +        S_Income  +    -0.00343804081842 * S_Kidhome
1210255   +          +    -0.00091866898176 * S_MntFishProducts
1210256   +          +    -0.00535373047967 * S_MntFruits  +     0.00104614400259 *
1210257   +        S_MntGoldProds  +    -0.00546951406519 * S_MntSweetProducts
1210258   +          +     0.00368892959186 * S_MonthsAsCustomer
1210259   +          +     0.02364421635033 * S_NumDealsPurchases
1210260   +          +     0.02217693794769 * S_NumWebVisitsMonth
1210261   +          +     0.00595053816856 * S_RFMstat  +     0.01189185855688 *
1210262   +        S_RMntFrq  +    -0.06052732570454 * S_Recency
1210263   +          +    -0.02711209639816 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.27578843014513 * S_AcceptedCmpTotal + -0.00809332778604 * S_Age 
+ -0.01616869766394 * S_Frq + 0.03490362906378 * S_Income + -0.00343804081842 * S_Kidhome + 
-0.00091866898176 * S_MntFishProducts + -0.00535373047967 * S_MntFruits + 0.00104614400259 * 
S_MntGoldProds + -0.00546951406519 * S_MntSweetProducts + 0.00368892959186 * 
S_MonthsAsCustomer + 0.02364421635033 * S_NumDealsPurchases + 0.02217693794769 * 
S_NumWebVisitsMonth + 0.00595053816856 * S_RFMstat + 0.01189185855688 * S_RMntFrq + 
-0.06052732570454 * S_Recency + -0.02711209639816 * S_Teenhome ;
1210264   +   H11  = H11  +     0.17309662130752 * AcceptedCmp10
1210265   +          +     0.18315939906666 * AcceptedCmp20  +     0.16105603567162 *
1210266   +        AcceptedCmp30  +     0.18820830601069 * AcceptedCmp40
1210267   +          +      0.1737861250554 * AcceptedCmp50  +     0.01851503167376 *
1210268   +        Complain0  +     0.13035163298518 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.17309662130752 * AcceptedCmp10 + 0.18315939906666 * 
AcceptedCmp20 + 0.16105603567162 * AcceptedCmp30 + 0.18820830601069 * AcceptedCmp40 + 
0.1737861250554 * AcceptedCmp50 + 0.01851503167376 * Complain0 + 0.13035163298518 * 
HigherEducationBinary0 ;
1210269   +   H11  = H11  +    -0.15299672533263 * Education2n_Cycle
1210270   +          +    -0.16014809431529 * EducationBasic  +     0.11508916289978 *
1210271   +        EducationGraduation  +     0.09635715378324 * EducationMaster
1210272   +          +     0.00839447082799 * Marital_StatusDivorced
1210273   +          +     -0.0238619770984 * Marital_StatusMarried
1210274   +          +     0.01543210213579 * Marital_StatusSingle
1210275   +          +    -0.02651821097459 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.15299672533263 * Education2n_Cycle + -0.16014809431529 * 
EducationBasic + 0.11508916289978 * EducationGraduation + 0.09635715378324 * EducationMaster + 
0.00839447082799 * Marital_StatusDivorced + -0.0238619770984 * Marital_StatusMarried + 
0.01543210213579 * Marital_StatusSingle + -0.02651821097459 * Marital_StatusTogether ;
1210276   +   H11  =    -0.75795359073107 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -0.75795359073107 + H11 ;
1210277   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1210278   +END;
MPRINT(EM_DIAGRAM):   END;
1210279   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1210280   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1210281   +END;
MPRINT(EM_DIAGRAM):   END;
1210282   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1210283   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1210284   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1210285   +
1210286   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1210287   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1210288   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1210289   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1210290   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1210291   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1210292   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1210293   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1210294   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1210295   +end;
MPRINT(EM_DIAGRAM):   end;
1210296   +else do;
MPRINT(EM_DIAGRAM):   else do;
1210297   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1210298   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1210299   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1210300   +   end;
MPRINT(EM_DIAGRAM):   end;
1210301   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1210302   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1210303   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1210304   +   end;
MPRINT(EM_DIAGRAM):   end;
1210305   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1210306   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1210307   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1210308   +   end;
MPRINT(EM_DIAGRAM):   end;
1210309   +end;
MPRINT(EM_DIAGRAM):   end;
1210310   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1210311   +   P_DepVar1  =     29.5716938262358 * H11 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 29.5716938262358 * H11 ;
1210312   +   P_DepVar1  =    -3.24800133013252 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.24800133013252 + P_DepVar1 ;
1210313   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1210314   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1210315   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1210316   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1210317   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1210318   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1210319   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1210320   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1210321   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1210322   +END;
MPRINT(EM_DIAGRAM):   END;
1210323   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1210324   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1210325   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1210326   +END;
MPRINT(EM_DIAGRAM):   END;
1210327   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1210328   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1210329   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1210330   +END;
MPRINT(EM_DIAGRAM):   END;
1210331   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1210332   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1210333   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1210334   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1210335   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1210336   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1210337   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1210338   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1210339   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1210340   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1210341   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1210342   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1210343   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1210344   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1210345   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1210346   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1210347   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1210348   +END;
MPRINT(EM_DIAGRAM):   END;
1210349   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1210350   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1210351   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1210352   +drop
1210353   +H11
1210354   +;
MPRINT(EM_DIAGRAM):   drop H11 ;
1210355   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1210356   +* Renaming variables for Neural42;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural42;
1210357   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1210358   +* Renaming Posterior variables for Neural42;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural42;
1210359   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1210360   +drop Neural42_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural42_P_DepVar1;
1210361   +Neural42_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural42_P_DepVar1 = P_DepVar1;
1210362   +drop Neural42_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural42_P_DepVar0;
1210363   +Neural42_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural42_P_DepVar0 = P_DepVar0;
1210364   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1210365   +* Renaming _WARN_ variable for Neural42;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural42;
1210366   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1210367   +length Neural42_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural42_WARN_ $4;
1210368   +drop Neural42_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural42_WARN_;
1210369   +Neural42_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural42_WARN_ = _WARN_;
1210370   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1210371   +* Ensmbl12: Scoring Code of model 2 of 10;
MPRINT(EM_DIAGRAM):   * Ensmbl12: Scoring Code of model 2 of 10;
1210372   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1210373   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1210374   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
1210375   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1210376   +* NODE: Neural37;
MPRINT(EM_DIAGRAM):   * NODE: Neural37;
1210377   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1210378   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1210379   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1210380   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1210381   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1210382   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1210383   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1210384   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1210385   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1210386   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1210387   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1210388   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1210389   +LENGTH _WARN_ $4
1210390   +      F_DepVar  $ 12
1210391   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1210392   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1210393   +
1210394   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1210395   +
1210396   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1210397   +
1210398   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1210399   +
1210400   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1210401   +
1210402   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1210403   +
1210404   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1210405   +
1210406   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1210407   +
1210408   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1210409   +
1210410   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1210411   +
1210412   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1210413   +
1210414   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1210415   +
1210416   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1210417   +
1210418   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1210419   +
1210420   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1210421   +
1210422   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1210423   +
1210424   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1210425   +
1210426   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1210427   +
1210428   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1210429   +
1210430   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1210431   +
1210432   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1210433   +
1210434   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1210435   +
1210436   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1210437   +
1210438   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1210439   +
1210440   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1210441   +
1210442   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1210443   +
1210444   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1210445   +
1210446   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1210447   +
1210448   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1210449   +
1210450   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1210451   +
1210452   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1210453   +
1210454   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1210455   +
1210456   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1210457   +
1210458   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1210459   +
1210460   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1210461   +
1210462   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1210463   +
1210464   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1210465   +
1210466   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1210467   +
1210468   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1210469   +
1210470   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1210471   +
1210472   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1210473   +
1210474   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1210475   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1210476   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1210477   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1210478   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1210479   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1210480   +end;
MPRINT(EM_DIAGRAM):   end;
1210481   +else do;
MPRINT(EM_DIAGRAM):   else do;
1210482   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1210483   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1210484   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1210485   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1210486   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1210487   +   end;
MPRINT(EM_DIAGRAM):   end;
1210488   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1210489   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1210490   +   end;
MPRINT(EM_DIAGRAM):   end;
1210491   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1210492   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1210493   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1210494   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1210495   +   end;
MPRINT(EM_DIAGRAM):   end;
1210496   +end;
MPRINT(EM_DIAGRAM):   end;
1210497   +
1210498   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1210499   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1210500   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1210501   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1210502   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1210503   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1210504   +end;
MPRINT(EM_DIAGRAM):   end;
1210505   +else do;
MPRINT(EM_DIAGRAM):   else do;
1210506   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1210507   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1210508   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1210509   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1210510   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1210511   +   end;
MPRINT(EM_DIAGRAM):   end;
1210512   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1210513   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1210514   +   end;
MPRINT(EM_DIAGRAM):   end;
1210515   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1210516   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1210517   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1210518   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1210519   +   end;
MPRINT(EM_DIAGRAM):   end;
1210520   +end;
MPRINT(EM_DIAGRAM):   end;
1210521   +
1210522   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1210523   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1210524   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1210525   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1210526   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1210527   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1210528   +end;
MPRINT(EM_DIAGRAM):   end;
1210529   +else do;
MPRINT(EM_DIAGRAM):   else do;
1210530   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1210531   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1210532   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1210533   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1210534   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1210535   +   end;
MPRINT(EM_DIAGRAM):   end;
1210536   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1210537   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1210538   +   end;
MPRINT(EM_DIAGRAM):   end;
1210539   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1210540   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1210541   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1210542   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1210543   +   end;
MPRINT(EM_DIAGRAM):   end;
1210544   +end;
MPRINT(EM_DIAGRAM):   end;
1210545   +
1210546   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1210547   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1210548   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1210549   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1210550   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1210551   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1210552   +end;
MPRINT(EM_DIAGRAM):   end;
1210553   +else do;
MPRINT(EM_DIAGRAM):   else do;
1210554   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1210555   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1210556   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1210557   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1210558   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1210559   +   end;
MPRINT(EM_DIAGRAM):   end;
1210560   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1210561   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1210562   +   end;
MPRINT(EM_DIAGRAM):   end;
1210563   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1210564   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1210565   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1210566   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1210567   +   end;
MPRINT(EM_DIAGRAM):   end;
1210568   +end;
MPRINT(EM_DIAGRAM):   end;
1210569   +
1210570   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1210571   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1210572   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1210573   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1210574   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1210575   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1210576   +end;
MPRINT(EM_DIAGRAM):   end;
1210577   +else do;
MPRINT(EM_DIAGRAM):   else do;
1210578   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1210579   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1210580   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1210581   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1210582   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1210583   +   end;
MPRINT(EM_DIAGRAM):   end;
1210584   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1210585   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1210586   +   end;
MPRINT(EM_DIAGRAM):   end;
1210587   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1210588   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1210589   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1210590   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1210591   +   end;
MPRINT(EM_DIAGRAM):   end;
1210592   +end;
MPRINT(EM_DIAGRAM):   end;
1210593   +
1210594   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1210595   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1210596   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1210597   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1210598   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1210599   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1210600   +end;
MPRINT(EM_DIAGRAM):   end;
1210601   +else do;
MPRINT(EM_DIAGRAM):   else do;
1210602   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1210603   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1210604   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1210605   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1210606   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1210607   +   end;
MPRINT(EM_DIAGRAM):   end;
1210608   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1210609   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1210610   +   end;
MPRINT(EM_DIAGRAM):   end;
1210611   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1210612   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1210613   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1210614   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1210615   +   end;
MPRINT(EM_DIAGRAM):   end;
1210616   +end;
MPRINT(EM_DIAGRAM):   end;
1210617   +
1210618   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1210619   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1210620   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1210621   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1210622   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1210623   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1210624   +end;
MPRINT(EM_DIAGRAM):   end;
1210625   +else do;
MPRINT(EM_DIAGRAM):   else do;
1210626   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1210627   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1210628   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1210629   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1210630   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1210631   +   end;
MPRINT(EM_DIAGRAM):   end;
1210632   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1210633   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1210634   +   end;
MPRINT(EM_DIAGRAM):   end;
1210635   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1210636   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1210637   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1210638   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1210639   +   end;
MPRINT(EM_DIAGRAM):   end;
1210640   +end;
MPRINT(EM_DIAGRAM):   end;
1210641   +
1210642   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1210643   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
1210644   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1210645   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1210646   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1210647   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1210648   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1210649   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1210650   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1210651   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1210652   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1210653   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1210654   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1210655   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1210656   +end;
MPRINT(EM_DIAGRAM):   end;
1210657   +else do;
MPRINT(EM_DIAGRAM):   else do;
1210658   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1210659   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1210660   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1210661   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1210662   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1210663   +   end;
MPRINT(EM_DIAGRAM):   end;
1210664   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1210665   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1210666   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1210667   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1210668   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1210669   +   end;
MPRINT(EM_DIAGRAM):   end;
1210670   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1210671   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1210672   +   end;
MPRINT(EM_DIAGRAM):   end;
1210673   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1210674   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1210675   +   end;
MPRINT(EM_DIAGRAM):   end;
1210676   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1210677   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1210678   +   end;
MPRINT(EM_DIAGRAM):   end;
1210679   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1210680   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1210681   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1210682   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1210683   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1210684   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1210685   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1210686   +   end;
MPRINT(EM_DIAGRAM):   end;
1210687   +end;
MPRINT(EM_DIAGRAM):   end;
1210688   +
1210689   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1210690   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1210691   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
1210692   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1210693   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1210694   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1210695   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1210696   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1210697   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1210698   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1210699   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1210700   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1210701   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1210702   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1210703   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1210704   +end;
MPRINT(EM_DIAGRAM):   end;
1210705   +else do;
MPRINT(EM_DIAGRAM):   else do;
1210706   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1210707   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1210708   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1210709   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1210710   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1210711   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1210712   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1210713   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1210714   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1210715   +         end;
MPRINT(EM_DIAGRAM):   end;
1210716   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1210717   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1210718   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1210719   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1210720   +            end;
MPRINT(EM_DIAGRAM):   end;
1210721   +         end;
MPRINT(EM_DIAGRAM):   end;
1210722   +      end;
MPRINT(EM_DIAGRAM):   end;
1210723   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1210724   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1210725   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1210726   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1210727   +         end;
MPRINT(EM_DIAGRAM):   end;
1210728   +      end;
MPRINT(EM_DIAGRAM):   end;
1210729   +   end;
MPRINT(EM_DIAGRAM):   end;
1210730   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1210731   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1210732   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1210733   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1210734   +      end;
MPRINT(EM_DIAGRAM):   end;
1210735   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1210736   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1210737   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1210738   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1210739   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1210740   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1210741   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1210742   +         end;
MPRINT(EM_DIAGRAM):   end;
1210743   +      end;
MPRINT(EM_DIAGRAM):   end;
1210744   +   end;
MPRINT(EM_DIAGRAM):   end;
1210745   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1210746   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1210747   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1210748   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1210749   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1210750   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1210751   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1210752   +   end;
MPRINT(EM_DIAGRAM):   end;
1210753   +end;
MPRINT(EM_DIAGRAM):   end;
1210754   +
1210755   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1210756   +*** Checking missing input Interval
1210757   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1210758   +
1210759   +IF NMISS(
1210760   +   AcceptedCmpTotal ,
1210761   +   Age ,
1210762   +   Frq ,
1210763   +   Income ,
1210764   +   Kidhome ,
1210765   +   MntFishProducts ,
1210766   +   MntFruits ,
1210767   +   MntGoldProds ,
1210768   +   MntSweetProducts ,
1210769   +   MonthsAsCustomer ,
1210770   +   NumDealsPurchases ,
1210771   +   NumWebVisitsMonth ,
1210772   +   RFMstat ,
1210773   +   RMntFrq ,
1210774   +   Recency ,
1210775   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , 
MntFishProducts , MntFruits , MntGoldProds , MntSweetProducts , MonthsAsCustomer , 
NumDealsPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , Teenhome ) THEN DO;
1210776   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1210777   +
1210778   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1210779   +END;
MPRINT(EM_DIAGRAM):   END;
1210780   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1210781   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1210782   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1210783   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1210784   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1210785   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1210786   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1210787   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1210788   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1210789   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1210790   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1210791   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1210792   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1210793   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1210794   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1210795   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1210796   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1210797   +   S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
1210798   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
1210799   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1210800   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1210801   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1210802   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1210803   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1210804   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1210805   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1210806   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1210807   +END;
MPRINT(EM_DIAGRAM):   END;
1210808   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1210809   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1210810   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1210811   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1210812   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1210813   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1210814   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1210815   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1210816   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1210817   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1210818   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1210819   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1210820   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1210821   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1210822   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1210823   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1210824   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1210825   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1210826   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1210827   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1210828   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1210829   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1210830   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1210831   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1210832   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1210833   +   ELSE S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
1210834   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
1210835   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1210836   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1210837   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1210838   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1210839   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1210840   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1210841   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1210842   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1210843   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1210844   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1210845   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1210846   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1210847   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1210848   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1210849   +END;
MPRINT(EM_DIAGRAM):   END;
1210850   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1210851   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1210852   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1210853   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1210854   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1210855   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1210856   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1210857   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1210858   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1210859   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1210860   +   H11  =     0.00529231235481 * S_AcceptedCmpTotal  +      0.0343326832257 *
1210861   +        S_Age  +    -0.05203541829299 * S_Frq  +    -0.45089409751085 *
1210862   +        S_Income  +     0.21434017685167 * S_Kidhome
1210863   +          +    -0.00245095061163 * S_MntFishProducts
1210864   +          +     0.05045649639793 * S_MntFruits  +     0.00647541618092 *
1210865   +        S_MntGoldProds  +     0.05644685811145 * S_MntSweetProducts
1210866   +          +     -0.0436897985886 * S_MonthsAsCustomer
1210867   +          +    -0.11066147452589 * S_NumDealsPurchases
1210868   +          +    -0.15815826211613 * S_NumWebVisitsMonth
1210869   +          +    -0.02488895787197 * S_RFMstat  +    -0.07848372303852 *
1210870   +        S_RMntFrq  +     0.44584112602611 * S_Recency
1210871   +          +     0.31802924624272 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.00529231235481 * S_AcceptedCmpTotal + 0.0343326832257 * S_Age + 
-0.05203541829299 * S_Frq + -0.45089409751085 * S_Income + 0.21434017685167 * S_Kidhome + 
-0.00245095061163 * S_MntFishProducts + 0.05045649639793 * S_MntFruits + 0.00647541618092 * 
S_MntGoldProds + 0.05644685811145 * S_MntSweetProducts + -0.0436897985886 * S_MonthsAsCustomer 
+ -0.11066147452589 * S_NumDealsPurchases + -0.15815826211613 * S_NumWebVisitsMonth + 
-0.02488895787197 * S_RFMstat + -0.07848372303852 * S_RMntFrq + 0.44584112602611 * S_Recency + 
0.31802924624272 * S_Teenhome ;
1210872   +   H12  =    -0.10209163274452 * S_AcceptedCmpTotal  +     0.11827354067819 *
1210873   +        S_Age  +     1.40350663058769 * S_Frq  +     0.61315172399898 *
1210874   +        S_Income  +    -0.34676303560555 * S_Kidhome
1210875   +          +    -0.19666313381749 * S_MntFishProducts
1210876   +          +     0.02049419497141 * S_MntFruits  +    -0.20582738219797 *
1210877   +        S_MntGoldProds  +    -0.07237052620156 * S_MntSweetProducts
1210878   +          +     0.11921399006499 * S_MonthsAsCustomer
1210879   +          +    -0.67623098057964 * S_NumDealsPurchases
1210880   +          +    -0.59190965073948 * S_NumWebVisitsMonth
1210881   +          +    -0.20613596895241 * S_RFMstat  +    -0.32007172204835 *
1210882   +        S_RMntFrq  +     0.69616846305831 * S_Recency
1210883   +          +     -0.3023019033387 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -0.10209163274452 * S_AcceptedCmpTotal + 0.11827354067819 * S_Age 
+ 1.40350663058769 * S_Frq + 0.61315172399898 * S_Income + -0.34676303560555 * S_Kidhome + 
-0.19666313381749 * S_MntFishProducts + 0.02049419497141 * S_MntFruits + -0.20582738219797 * 
S_MntGoldProds + -0.07237052620156 * S_MntSweetProducts + 0.11921399006499 * 
S_MonthsAsCustomer + -0.67623098057964 * S_NumDealsPurchases + -0.59190965073948 * 
S_NumWebVisitsMonth + -0.20613596895241 * S_RFMstat + -0.32007172204835 * S_RMntFrq + 
0.69616846305831 * S_Recency + -0.3023019033387 * S_Teenhome ;
1210884   +   H11  = H11  +     0.19876934538613 * AcceptedCmp10
1210885   +          +     0.18951634162327 * AcceptedCmp20  +     0.24251361227823 *
1210886   +        AcceptedCmp30  +     0.16680588614581 * AcceptedCmp40
1210887   +          +     0.15217121708385 * AcceptedCmp50  +    -0.06185934853348 *
1210888   +        Complain0  +    -0.02156128066423 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.19876934538613 * AcceptedCmp10 + 0.18951634162327 * 
AcceptedCmp20 + 0.24251361227823 * AcceptedCmp30 + 0.16680588614581 * AcceptedCmp40 + 
0.15217121708385 * AcceptedCmp50 + -0.06185934853348 * Complain0 + -0.02156128066423 * 
HigherEducationBinary0 ;
1210889   +   H12  = H12  +     0.42936838873103 * AcceptedCmp10
1210890   +          +     0.31531206230129 * AcceptedCmp20  +     0.61595858080275 *
1210891   +        AcceptedCmp30  +    -0.02848071087974 * AcceptedCmp40
1210892   +          +     0.26463885464849 * AcceptedCmp50  +    -0.25408897937456 *
1210893   +        Complain0  +     0.37165308117925 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.42936838873103 * AcceptedCmp10 + 0.31531206230129 * 
AcceptedCmp20 + 0.61595858080275 * AcceptedCmp30 + -0.02848071087974 * AcceptedCmp40 + 
0.26463885464849 * AcceptedCmp50 + -0.25408897937456 * Complain0 + 0.37165308117925 * 
HigherEducationBinary0 ;
1210894   +   H11  = H11  +    -0.06004623502296 * Education2n_Cycle
1210895   +          +    -0.14055981460472 * EducationBasic  +    -0.02226325005028 *
1210896   +        EducationGraduation  +     0.17382426297237 * EducationMaster
1210897   +          +    -0.09599098826432 * Marital_StatusDivorced
1210898   +          +     0.29380773989654 * Marital_StatusMarried
1210899   +          +    -0.24344588832351 * Marital_StatusSingle
1210900   +          +     0.26861619886367 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.06004623502296 * Education2n_Cycle + -0.14055981460472 * 
EducationBasic + -0.02226325005028 * EducationGraduation + 0.17382426297237 * EducationMaster 
+ -0.09599098826432 * Marital_StatusDivorced + 0.29380773989654 * Marital_StatusMarried + 
-0.24344588832351 * Marital_StatusSingle + 0.26861619886367 * Marital_StatusTogether ;
1210901   +   H12  = H12  +    -0.05553559517027 * Education2n_Cycle
1210902   +          +     0.10110187812592 * EducationBasic  +    -0.01454720780814 *
1210903   +        EducationGraduation  +    -0.23207789950977 * EducationMaster
1210904   +          +    -0.18210246138549 * Marital_StatusDivorced
1210905   +          +    -0.33707503901978 * Marital_StatusMarried
1210906   +          +     0.45975144433549 * Marital_StatusSingle
1210907   +          +    -0.30223475265715 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.05553559517027 * Education2n_Cycle + 0.10110187812592 * 
EducationBasic + -0.01454720780814 * EducationGraduation + -0.23207789950977 * EducationMaster 
+ -0.18210246138549 * Marital_StatusDivorced + -0.33707503901978 * Marital_StatusMarried + 
0.45975144433549 * Marital_StatusSingle + -0.30223475265715 * Marital_StatusTogether ;
1210908   +   H11  =    -0.01761609034495 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -0.01761609034495 + H11 ;
1210909   +   H12  =     1.54520059814945 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 1.54520059814945 + H12 ;
1210910   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1210911   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1210912   +END;
MPRINT(EM_DIAGRAM):   END;
1210913   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1210914   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1210915   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1210916   +END;
MPRINT(EM_DIAGRAM):   END;
1210917   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1210918   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1210919   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1210920   +
1210921   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1210922   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1210923   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1210924   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1210925   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1210926   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1210927   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1210928   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1210929   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1210930   +end;
MPRINT(EM_DIAGRAM):   end;
1210931   +else do;
MPRINT(EM_DIAGRAM):   else do;
1210932   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1210933   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1210934   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1210935   +   end;
MPRINT(EM_DIAGRAM):   end;
1210936   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1210937   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1210938   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1210939   +   end;
MPRINT(EM_DIAGRAM):   end;
1210940   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1210941   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1210942   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1210943   +   end;
MPRINT(EM_DIAGRAM):   end;
1210944   +end;
MPRINT(EM_DIAGRAM):   end;
1210945   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1210946   +   P_DepVar1  =    -5.00819716007083 * H11  +    -2.90644970096905 * H12 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -5.00819716007083 * H11 + -2.90644970096905 * H12 ;
1210947   +   P_DepVar1  =     0.91635286006129 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.91635286006129 + P_DepVar1 ;
1210948   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1210949   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1210950   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1210951   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1210952   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1210953   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1210954   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1210955   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1210956   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1210957   +END;
MPRINT(EM_DIAGRAM):   END;
1210958   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1210959   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1210960   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1210961   +END;
MPRINT(EM_DIAGRAM):   END;
1210962   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1210963   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1210964   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1210965   +END;
MPRINT(EM_DIAGRAM):   END;
1210966   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1210967   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1210968   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1210969   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1210970   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1210971   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1210972   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1210973   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1210974   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1210975   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1210976   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1210977   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1210978   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1210979   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1210980   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1210981   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1210982   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1210983   +END;
MPRINT(EM_DIAGRAM):   END;
1210984   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1210985   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1210986   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1210987   +drop
1210988   +H11
1210989   +H12
1210990   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 ;
1210991   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1210992   +* Renaming variables for Neural37;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural37;
1210993   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1210994   +* Renaming Posterior variables for Neural37;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural37;
1210995   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1210996   +drop Neural37_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural37_P_DepVar1;
1210997   +Neural37_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural37_P_DepVar1 = P_DepVar1;
1210998   +drop Neural37_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural37_P_DepVar0;
1210999   +Neural37_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural37_P_DepVar0 = P_DepVar0;
1211000   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1211001   +* Renaming _WARN_ variable for Neural37;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural37;
1211002   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1211003   +length Neural37_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural37_WARN_ $4;
1211004   +drop Neural37_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural37_WARN_;
1211005   +Neural37_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural37_WARN_ = _WARN_;
1211006   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1211007   +* Ensmbl12: Scoring Code of model 3 of 10;
MPRINT(EM_DIAGRAM):   * Ensmbl12: Scoring Code of model 3 of 10;
1211008   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1211009   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1211010   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
1211011   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1211012   +* NODE: Neural38;
MPRINT(EM_DIAGRAM):   * NODE: Neural38;
1211013   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1211014   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1211015   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1211016   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1211017   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1211018   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1211019   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1211020   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1211021   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1211022   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1211023   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1211024   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1211025   +LENGTH _WARN_ $4
1211026   +      F_DepVar  $ 12
1211027   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1211028   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1211029   +
1211030   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1211031   +
1211032   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1211033   +
1211034   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1211035   +
1211036   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1211037   +
1211038   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1211039   +
1211040   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1211041   +
1211042   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1211043   +
1211044   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1211045   +
1211046   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1211047   +
1211048   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1211049   +
1211050   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1211051   +
1211052   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1211053   +
1211054   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1211055   +
1211056   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1211057   +
1211058   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1211059   +
1211060   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1211061   +
1211062   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1211063   +
1211064   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1211065   +
1211066   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1211067   +
1211068   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1211069   +
1211070   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1211071   +
1211072   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1211073   +
1211074   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1211075   +
1211076   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1211077   +
1211078   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1211079   +
1211080   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1211081   +
1211082   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1211083   +
1211084   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1211085   +
1211086   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1211087   +
1211088   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1211089   +
1211090   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1211091   +
1211092   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1211093   +
1211094   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1211095   +
1211096   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1211097   +
1211098   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1211099   +
1211100   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1211101   +
1211102   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1211103   +
1211104   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1211105   +
1211106   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1211107   +
1211108   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1211109   +
1211110   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1211111   +
1211112   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1211113   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1211114   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1211115   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1211116   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1211117   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1211118   +end;
MPRINT(EM_DIAGRAM):   end;
1211119   +else do;
MPRINT(EM_DIAGRAM):   else do;
1211120   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1211121   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1211122   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1211123   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1211124   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1211125   +   end;
MPRINT(EM_DIAGRAM):   end;
1211126   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1211127   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1211128   +   end;
MPRINT(EM_DIAGRAM):   end;
1211129   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1211130   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1211131   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1211132   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1211133   +   end;
MPRINT(EM_DIAGRAM):   end;
1211134   +end;
MPRINT(EM_DIAGRAM):   end;
1211135   +
1211136   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1211137   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1211138   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1211139   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1211140   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1211141   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1211142   +end;
MPRINT(EM_DIAGRAM):   end;
1211143   +else do;
MPRINT(EM_DIAGRAM):   else do;
1211144   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1211145   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1211146   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1211147   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1211148   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1211149   +   end;
MPRINT(EM_DIAGRAM):   end;
1211150   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1211151   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1211152   +   end;
MPRINT(EM_DIAGRAM):   end;
1211153   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1211154   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1211155   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1211156   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1211157   +   end;
MPRINT(EM_DIAGRAM):   end;
1211158   +end;
MPRINT(EM_DIAGRAM):   end;
1211159   +
1211160   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1211161   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1211162   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1211163   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1211164   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1211165   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1211166   +end;
MPRINT(EM_DIAGRAM):   end;
1211167   +else do;
MPRINT(EM_DIAGRAM):   else do;
1211168   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1211169   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1211170   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1211171   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1211172   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1211173   +   end;
MPRINT(EM_DIAGRAM):   end;
1211174   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1211175   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1211176   +   end;
MPRINT(EM_DIAGRAM):   end;
1211177   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1211178   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1211179   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1211180   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1211181   +   end;
MPRINT(EM_DIAGRAM):   end;
1211182   +end;
MPRINT(EM_DIAGRAM):   end;
1211183   +
1211184   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1211185   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1211186   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1211187   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1211188   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1211189   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1211190   +end;
MPRINT(EM_DIAGRAM):   end;
1211191   +else do;
MPRINT(EM_DIAGRAM):   else do;
1211192   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1211193   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1211194   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1211195   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1211196   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1211197   +   end;
MPRINT(EM_DIAGRAM):   end;
1211198   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1211199   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1211200   +   end;
MPRINT(EM_DIAGRAM):   end;
1211201   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1211202   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1211203   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1211204   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1211205   +   end;
MPRINT(EM_DIAGRAM):   end;
1211206   +end;
MPRINT(EM_DIAGRAM):   end;
1211207   +
1211208   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1211209   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1211210   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1211211   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1211212   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1211213   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1211214   +end;
MPRINT(EM_DIAGRAM):   end;
1211215   +else do;
MPRINT(EM_DIAGRAM):   else do;
1211216   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1211217   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1211218   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1211219   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1211220   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1211221   +   end;
MPRINT(EM_DIAGRAM):   end;
1211222   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1211223   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1211224   +   end;
MPRINT(EM_DIAGRAM):   end;
1211225   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1211226   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1211227   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1211228   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1211229   +   end;
MPRINT(EM_DIAGRAM):   end;
1211230   +end;
MPRINT(EM_DIAGRAM):   end;
1211231   +
1211232   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1211233   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1211234   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1211235   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1211236   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1211237   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1211238   +end;
MPRINT(EM_DIAGRAM):   end;
1211239   +else do;
MPRINT(EM_DIAGRAM):   else do;
1211240   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1211241   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1211242   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1211243   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1211244   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1211245   +   end;
MPRINT(EM_DIAGRAM):   end;
1211246   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1211247   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1211248   +   end;
MPRINT(EM_DIAGRAM):   end;
1211249   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1211250   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1211251   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1211252   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1211253   +   end;
MPRINT(EM_DIAGRAM):   end;
1211254   +end;
MPRINT(EM_DIAGRAM):   end;
1211255   +
1211256   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1211257   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1211258   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1211259   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1211260   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1211261   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1211262   +end;
MPRINT(EM_DIAGRAM):   end;
1211263   +else do;
MPRINT(EM_DIAGRAM):   else do;
1211264   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1211265   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1211266   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1211267   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1211268   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1211269   +   end;
MPRINT(EM_DIAGRAM):   end;
1211270   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1211271   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1211272   +   end;
MPRINT(EM_DIAGRAM):   end;
1211273   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1211274   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1211275   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1211276   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1211277   +   end;
MPRINT(EM_DIAGRAM):   end;
1211278   +end;
MPRINT(EM_DIAGRAM):   end;
1211279   +
1211280   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1211281   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
1211282   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1211283   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1211284   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1211285   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1211286   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1211287   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1211288   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1211289   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1211290   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1211291   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1211292   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1211293   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1211294   +end;
MPRINT(EM_DIAGRAM):   end;
1211295   +else do;
MPRINT(EM_DIAGRAM):   else do;
1211296   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1211297   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1211298   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1211299   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1211300   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1211301   +   end;
MPRINT(EM_DIAGRAM):   end;
1211302   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1211303   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1211304   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1211305   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1211306   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1211307   +   end;
MPRINT(EM_DIAGRAM):   end;
1211308   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1211309   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1211310   +   end;
MPRINT(EM_DIAGRAM):   end;
1211311   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1211312   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1211313   +   end;
MPRINT(EM_DIAGRAM):   end;
1211314   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1211315   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1211316   +   end;
MPRINT(EM_DIAGRAM):   end;
1211317   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1211318   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1211319   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1211320   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1211321   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1211322   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1211323   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1211324   +   end;
MPRINT(EM_DIAGRAM):   end;
1211325   +end;
MPRINT(EM_DIAGRAM):   end;
1211326   +
1211327   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1211328   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1211329   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
1211330   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1211331   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1211332   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1211333   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1211334   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1211335   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1211336   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1211337   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1211338   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1211339   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1211340   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1211341   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1211342   +end;
MPRINT(EM_DIAGRAM):   end;
1211343   +else do;
MPRINT(EM_DIAGRAM):   else do;
1211344   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1211345   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1211346   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1211347   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1211348   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1211349   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1211350   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1211351   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1211352   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1211353   +         end;
MPRINT(EM_DIAGRAM):   end;
1211354   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1211355   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1211356   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1211357   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1211358   +            end;
MPRINT(EM_DIAGRAM):   end;
1211359   +         end;
MPRINT(EM_DIAGRAM):   end;
1211360   +      end;
MPRINT(EM_DIAGRAM):   end;
1211361   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1211362   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1211363   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1211364   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1211365   +         end;
MPRINT(EM_DIAGRAM):   end;
1211366   +      end;
MPRINT(EM_DIAGRAM):   end;
1211367   +   end;
MPRINT(EM_DIAGRAM):   end;
1211368   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1211369   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1211370   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1211371   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1211372   +      end;
MPRINT(EM_DIAGRAM):   end;
1211373   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1211374   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1211375   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1211376   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1211377   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1211378   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1211379   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1211380   +         end;
MPRINT(EM_DIAGRAM):   end;
1211381   +      end;
MPRINT(EM_DIAGRAM):   end;
1211382   +   end;
MPRINT(EM_DIAGRAM):   end;
1211383   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1211384   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1211385   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1211386   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1211387   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1211388   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1211389   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1211390   +   end;
MPRINT(EM_DIAGRAM):   end;
1211391   +end;
MPRINT(EM_DIAGRAM):   end;
1211392   +
1211393   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1211394   +*** Checking missing input Interval
1211395   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1211396   +
1211397   +IF NMISS(
1211398   +   AcceptedCmpTotal ,
1211399   +   Age ,
1211400   +   Frq ,
1211401   +   Income ,
1211402   +   Kidhome ,
1211403   +   MntFishProducts ,
1211404   +   MntFruits ,
1211405   +   MntGoldProds ,
1211406   +   MntSweetProducts ,
1211407   +   MonthsAsCustomer ,
1211408   +   NumDealsPurchases ,
1211409   +   NumWebVisitsMonth ,
1211410   +   RFMstat ,
1211411   +   RMntFrq ,
1211412   +   Recency ,
1211413   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , 
MntFishProducts , MntFruits , MntGoldProds , MntSweetProducts , MonthsAsCustomer , 
NumDealsPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , Teenhome ) THEN DO;
1211414   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1211415   +
1211416   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1211417   +END;
MPRINT(EM_DIAGRAM):   END;
1211418   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1211419   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1211420   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1211421   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1211422   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1211423   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1211424   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1211425   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1211426   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1211427   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1211428   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1211429   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1211430   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1211431   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1211432   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1211433   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1211434   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1211435   +   S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
1211436   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
1211437   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1211438   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1211439   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1211440   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1211441   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1211442   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1211443   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1211444   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1211445   +END;
MPRINT(EM_DIAGRAM):   END;
1211446   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1211447   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1211448   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1211449   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1211450   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1211451   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1211452   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1211453   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1211454   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1211455   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1211456   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1211457   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1211458   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1211459   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1211460   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1211461   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1211462   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1211463   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1211464   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1211465   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1211466   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1211467   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1211468   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1211469   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1211470   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1211471   +   ELSE S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
1211472   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
1211473   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1211474   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1211475   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1211476   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1211477   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1211478   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1211479   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1211480   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1211481   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1211482   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1211483   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1211484   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1211485   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1211486   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1211487   +END;
MPRINT(EM_DIAGRAM):   END;
1211488   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1211489   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1211490   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1211491   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1211492   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1211493   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1211494   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1211495   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1211496   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1211497   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1211498   +   H11  =    -0.05939653438507 * S_AcceptedCmpTotal  +    -0.03097621866927 *
1211499   +        S_Age  +     0.38549836561373 * S_Frq  +     0.04529710170514 *
1211500   +        S_Income  +    -0.29829037747286 * S_Kidhome
1211501   +          +    -0.18720823453547 * S_MntFishProducts
1211502   +          +    -0.21050293648727 * S_MntFruits  +    -0.17024743813518 *
1211503   +        S_MntGoldProds  +     0.06568676148572 * S_MntSweetProducts
1211504   +          +    -0.06646294977493 * S_MonthsAsCustomer
1211505   +          +    -0.37026551859537 * S_NumDealsPurchases
1211506   +          +    -0.14222086870703 * S_NumWebVisitsMonth
1211507   +          +    -0.13771028020173 * S_RFMstat  +    -0.18058593739947 *
1211508   +        S_RMntFrq  +     0.16089693413185 * S_Recency
1211509   +          +    -0.09296281260919 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = -0.05939653438507 * S_AcceptedCmpTotal + -0.03097621866927 * S_Age 
+ 0.38549836561373 * S_Frq + 0.04529710170514 * S_Income + -0.29829037747286 * S_Kidhome + 
-0.18720823453547 * S_MntFishProducts + -0.21050293648727 * S_MntFruits + -0.17024743813518 * 
S_MntGoldProds + 0.06568676148572 * S_MntSweetProducts + -0.06646294977493 * 
S_MonthsAsCustomer + -0.37026551859537 * S_NumDealsPurchases + -0.14222086870703 * 
S_NumWebVisitsMonth + -0.13771028020173 * S_RFMstat + -0.18058593739947 * S_RMntFrq + 
0.16089693413185 * S_Recency + -0.09296281260919 * S_Teenhome ;
1211510   +   H12  =    -1.07525876494597 * S_AcceptedCmpTotal  +     0.17274493487957 *
1211511   +        S_Age  +     1.31699360143525 * S_Frq  +      0.8506314580981 *
1211512   +        S_Income  +    -0.83201267605135 * S_Kidhome
1211513   +          +    -0.09483355610222 * S_MntFishProducts
1211514   +          +    -0.31816096382562 * S_MntFruits  +    -0.18054381770991 *
1211515   +        S_MntGoldProds  +     0.05267776627167 * S_MntSweetProducts
1211516   +          +     0.36008195182034 * S_MonthsAsCustomer
1211517   +          +    -0.13663022832818 * S_NumDealsPurchases
1211518   +          +    -0.43055337001488 * S_NumWebVisitsMonth
1211519   +          +    -0.20985567596746 * S_RFMstat  +     0.29271762840275 *
1211520   +        S_RMntFrq  +    -0.13626348763752 * S_Recency
1211521   +          +    -0.85691575464107 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -1.07525876494597 * S_AcceptedCmpTotal + 0.17274493487957 * S_Age 
+ 1.31699360143525 * S_Frq + 0.8506314580981 * S_Income + -0.83201267605135 * S_Kidhome + 
-0.09483355610222 * S_MntFishProducts + -0.31816096382562 * S_MntFruits + -0.18054381770991 * 
S_MntGoldProds + 0.05267776627167 * S_MntSweetProducts + 0.36008195182034 * S_MonthsAsCustomer 
+ -0.13663022832818 * S_NumDealsPurchases + -0.43055337001488 * S_NumWebVisitsMonth + 
-0.20985567596746 * S_RFMstat + 0.29271762840275 * S_RMntFrq + -0.13626348763752 * S_Recency + 
-0.85691575464107 * S_Teenhome ;
1211522   +   H13  =    -0.17967871499719 * S_AcceptedCmpTotal  +      0.1189238919833 *
1211523   +        S_Age  +      0.2812438420035 * S_Frq  +    -0.19278826529363 *
1211524   +        S_Income  +     0.25780281448124 * S_Kidhome
1211525   +          +     0.04440164182166 * S_MntFishProducts
1211526   +          +     0.04221733494133 * S_MntFruits  +     0.00772772044315 *
1211527   +        S_MntGoldProds  +     0.03211863452879 * S_MntSweetProducts
1211528   +          +     0.11601256317603 * S_MonthsAsCustomer
1211529   +          +    -0.06382091961731 * S_NumDealsPurchases
1211530   +          +    -0.31707488359351 * S_NumWebVisitsMonth
1211531   +          +    -0.03315899689257 * S_RFMstat  +      0.1166714754638 *
1211532   +        S_RMntFrq  +     0.39922359779347 * S_Recency
1211533   +          +     0.12723983872652 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = -0.17967871499719 * S_AcceptedCmpTotal + 0.1189238919833 * S_Age + 
0.2812438420035 * S_Frq + -0.19278826529363 * S_Income + 0.25780281448124 * S_Kidhome + 
0.04440164182166 * S_MntFishProducts + 0.04221733494133 * S_MntFruits + 0.00772772044315 * 
S_MntGoldProds + 0.03211863452879 * S_MntSweetProducts + 0.11601256317603 * S_MonthsAsCustomer 
+ -0.06382091961731 * S_NumDealsPurchases + -0.31707488359351 * S_NumWebVisitsMonth + 
-0.03315899689257 * S_RFMstat + 0.1166714754638 * S_RMntFrq + 0.39922359779347 * S_Recency + 
0.12723983872652 * S_Teenhome ;
1211534   +   H11  = H11  +     1.30972442853005 * AcceptedCmp10
1211535   +          +      -0.107725040763 * AcceptedCmp20  +      0.1632298365033 *
1211536   +        AcceptedCmp30  +    -0.04285993483605 * AcceptedCmp40
1211537   +          +     0.27424410998159 * AcceptedCmp50  +     0.13223002478852 *
1211538   +        Complain0  +       0.148007066302 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 1.30972442853005 * AcceptedCmp10 + -0.107725040763 * 
AcceptedCmp20 + 0.1632298365033 * AcceptedCmp30 + -0.04285993483605 * AcceptedCmp40 + 
0.27424410998159 * AcceptedCmp50 + 0.13223002478852 * Complain0 + 0.148007066302 * 
HigherEducationBinary0 ;
1211539   +   H12  = H12  +     0.43127584437858 * AcceptedCmp10
1211540   +          +    -0.45791405760753 * AcceptedCmp20  +    -0.99939161573095 *
1211541   +        AcceptedCmp30  +    -1.19828550777192 * AcceptedCmp40
1211542   +          +    -0.01213030081313 * AcceptedCmp50  +    -0.13910242772434 *
1211543   +        Complain0  +     0.30067707265993 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.43127584437858 * AcceptedCmp10 + -0.45791405760753 * 
AcceptedCmp20 + -0.99939161573095 * AcceptedCmp30 + -1.19828550777192 * AcceptedCmp40 + 
-0.01213030081313 * AcceptedCmp50 + -0.13910242772434 * Complain0 + 0.30067707265993 * 
HigherEducationBinary0 ;
1211544   +   H13  = H13  +    -0.11762761348562 * AcceptedCmp10
1211545   +          +      0.2189277190916 * AcceptedCmp20  +     0.04353030554468 *
1211546   +        AcceptedCmp30  +    -0.03987223536277 * AcceptedCmp40
1211547   +          +     0.15029448487681 * AcceptedCmp50  +      -0.117886738648 *
1211548   +        Complain0  +    -0.01645100634446 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.11762761348562 * AcceptedCmp10 + 0.2189277190916 * 
AcceptedCmp20 + 0.04353030554468 * AcceptedCmp30 + -0.03987223536277 * AcceptedCmp40 + 
0.15029448487681 * AcceptedCmp50 + -0.117886738648 * Complain0 + -0.01645100634446 * 
HigherEducationBinary0 ;
1211549   +   H11  = H11  +     0.16808351038824 * Education2n_Cycle
1211550   +          +    -0.29249243891567 * EducationBasic  +     0.02800261669472 *
1211551   +        EducationGraduation  +    -0.22350316846433 * EducationMaster
1211552   +          +     0.18754186259114 * Marital_StatusDivorced
1211553   +          +    -0.11988223819284 * Marital_StatusMarried
1211554   +          +    -0.02283707816223 * Marital_StatusSingle
1211555   +          +     -0.1005355792805 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.16808351038824 * Education2n_Cycle + -0.29249243891567 * 
EducationBasic + 0.02800261669472 * EducationGraduation + -0.22350316846433 * EducationMaster 
+ 0.18754186259114 * Marital_StatusDivorced + -0.11988223819284 * Marital_StatusMarried + 
-0.02283707816223 * Marital_StatusSingle + -0.1005355792805 * Marital_StatusTogether ;
1211556   +   H12  = H12  +    -0.12807098247021 * Education2n_Cycle
1211557   +          +     0.23889287012189 * EducationBasic  +     0.10996477979775 *
1211558   +        EducationGraduation  +    -0.24880728981933 * EducationMaster
1211559   +          +    -0.28983318463941 * Marital_StatusDivorced
1211560   +          +    -0.74851149560881 * Marital_StatusMarried
1211561   +          +      0.7618336919202 * Marital_StatusSingle
1211562   +          +    -0.81079042586509 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.12807098247021 * Education2n_Cycle + 0.23889287012189 * 
EducationBasic + 0.10996477979775 * EducationGraduation + -0.24880728981933 * EducationMaster 
+ -0.28983318463941 * Marital_StatusDivorced + -0.74851149560881 * Marital_StatusMarried + 
0.7618336919202 * Marital_StatusSingle + -0.81079042586509 * Marital_StatusTogether ;
1211563   +   H13  = H13  +    -0.26305004071484 * Education2n_Cycle
1211564   +          +     0.28231626292259 * EducationBasic  +    -0.07308832725307 *
1211565   +        EducationGraduation  +     0.20925521527006 * EducationMaster
1211566   +          +    -0.33639004627791 * Marital_StatusDivorced
1211567   +          +     0.12327415586833 * Marital_StatusMarried
1211568   +          +      0.0060971946845 * Marital_StatusSingle
1211569   +          +     0.09875322175475 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.26305004071484 * Education2n_Cycle + 0.28231626292259 * 
EducationBasic + -0.07308832725307 * EducationGraduation + 0.20925521527006 * EducationMaster 
+ -0.33639004627791 * Marital_StatusDivorced + 0.12327415586833 * Marital_StatusMarried + 
0.0060971946845 * Marital_StatusSingle + 0.09875322175475 * Marital_StatusTogether ;
1211570   +   H11  =    -1.17886598743906 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -1.17886598743906 + H11 ;
1211571   +   H12  =    -0.91184279928765 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -0.91184279928765 + H12 ;
1211572   +   H13  =    -0.12019399765604 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.12019399765604 + H13 ;
1211573   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1211574   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1211575   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1211576   +END;
MPRINT(EM_DIAGRAM):   END;
1211577   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1211578   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1211579   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1211580   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1211581   +END;
MPRINT(EM_DIAGRAM):   END;
1211582   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1211583   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1211584   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1211585   +
1211586   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1211587   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1211588   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1211589   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1211590   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1211591   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1211592   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1211593   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1211594   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1211595   +end;
MPRINT(EM_DIAGRAM):   end;
1211596   +else do;
MPRINT(EM_DIAGRAM):   else do;
1211597   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1211598   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1211599   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1211600   +   end;
MPRINT(EM_DIAGRAM):   end;
1211601   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1211602   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1211603   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1211604   +   end;
MPRINT(EM_DIAGRAM):   end;
1211605   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1211606   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1211607   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1211608   +   end;
MPRINT(EM_DIAGRAM):   end;
1211609   +end;
MPRINT(EM_DIAGRAM):   end;
1211610   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1211611   +   P_DepVar1  =    -5.25940615604579 * H11  +     5.20640516145161 * H12
1211612   +          +    -6.47403374532058 * H13 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -5.25940615604579 * H11 + 5.20640516145161 * H12 + 
-6.47403374532058 * H13 ;
1211613   +   P_DepVar1  =    -0.12049819292714 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.12049819292714 + P_DepVar1 ;
1211614   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1211615   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1211616   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1211617   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1211618   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1211619   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1211620   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1211621   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1211622   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1211623   +END;
MPRINT(EM_DIAGRAM):   END;
1211624   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1211625   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1211626   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1211627   +END;
MPRINT(EM_DIAGRAM):   END;
1211628   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1211629   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1211630   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1211631   +END;
MPRINT(EM_DIAGRAM):   END;
1211632   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1211633   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1211634   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1211635   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1211636   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1211637   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1211638   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1211639   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1211640   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1211641   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1211642   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1211643   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1211644   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1211645   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1211646   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1211647   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1211648   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1211649   +END;
MPRINT(EM_DIAGRAM):   END;
1211650   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1211651   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1211652   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1211653   +drop
1211654   +H11
1211655   +H12
1211656   +H13
1211657   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 ;
1211658   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1211659   +* Renaming variables for Neural38;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural38;
1211660   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1211661   +* Renaming Posterior variables for Neural38;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural38;
1211662   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1211663   +drop Neural38_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural38_P_DepVar1;
1211664   +Neural38_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural38_P_DepVar1 = P_DepVar1;
1211665   +drop Neural38_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural38_P_DepVar0;
1211666   +Neural38_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural38_P_DepVar0 = P_DepVar0;
1211667   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1211668   +* Renaming _WARN_ variable for Neural38;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural38;
1211669   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1211670   +length Neural38_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural38_WARN_ $4;
1211671   +drop Neural38_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural38_WARN_;
1211672   +Neural38_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural38_WARN_ = _WARN_;
1211673   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1211674   +* Ensmbl12: Scoring Code of model 4 of 10;
MPRINT(EM_DIAGRAM):   * Ensmbl12: Scoring Code of model 4 of 10;
1211675   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1211676   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1211677   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
1211678   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1211679   +* NODE: Neural39;
MPRINT(EM_DIAGRAM):   * NODE: Neural39;
1211680   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1211681   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1211682   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1211683   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1211684   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1211685   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1211686   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1211687   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1211688   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1211689   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1211690   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1211691   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1211692   +LENGTH _WARN_ $4
1211693   +      F_DepVar  $ 12
1211694   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1211695   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1211696   +
1211697   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1211698   +
1211699   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1211700   +
1211701   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1211702   +
1211703   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1211704   +
1211705   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1211706   +
1211707   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1211708   +
1211709   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1211710   +
1211711   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1211712   +
1211713   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1211714   +
1211715   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1211716   +
1211717   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1211718   +
1211719   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1211720   +
1211721   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1211722   +
1211723   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1211724   +
1211725   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1211726   +
1211727   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1211728   +
1211729   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1211730   +
1211731   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1211732   +
1211733   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1211734   +
1211735   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1211736   +
1211737   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1211738   +
1211739   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1211740   +
1211741   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1211742   +
1211743   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1211744   +
1211745   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1211746   +
1211747   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1211748   +
1211749   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1211750   +
1211751   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1211752   +
1211753   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1211754   +
1211755   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1211756   +
1211757   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1211758   +
1211759   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1211760   +
1211761   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1211762   +
1211763   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1211764   +
1211765   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1211766   +
1211767   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1211768   +
1211769   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1211770   +
1211771   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1211772   +
1211773   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1211774   +
1211775   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1211776   +
1211777   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1211778   +
1211779   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1211780   +
1211781   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1211782   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1211783   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1211784   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1211785   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1211786   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1211787   +end;
MPRINT(EM_DIAGRAM):   end;
1211788   +else do;
MPRINT(EM_DIAGRAM):   else do;
1211789   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1211790   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1211791   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1211792   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1211793   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1211794   +   end;
MPRINT(EM_DIAGRAM):   end;
1211795   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1211796   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1211797   +   end;
MPRINT(EM_DIAGRAM):   end;
1211798   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1211799   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1211800   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1211801   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1211802   +   end;
MPRINT(EM_DIAGRAM):   end;
1211803   +end;
MPRINT(EM_DIAGRAM):   end;
1211804   +
1211805   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1211806   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1211807   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1211808   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1211809   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1211810   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1211811   +end;
MPRINT(EM_DIAGRAM):   end;
1211812   +else do;
MPRINT(EM_DIAGRAM):   else do;
1211813   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1211814   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1211815   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1211816   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1211817   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1211818   +   end;
MPRINT(EM_DIAGRAM):   end;
1211819   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1211820   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1211821   +   end;
MPRINT(EM_DIAGRAM):   end;
1211822   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1211823   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1211824   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1211825   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1211826   +   end;
MPRINT(EM_DIAGRAM):   end;
1211827   +end;
MPRINT(EM_DIAGRAM):   end;
1211828   +
1211829   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1211830   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1211831   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1211832   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1211833   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1211834   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1211835   +end;
MPRINT(EM_DIAGRAM):   end;
1211836   +else do;
MPRINT(EM_DIAGRAM):   else do;
1211837   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1211838   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1211839   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1211840   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1211841   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1211842   +   end;
MPRINT(EM_DIAGRAM):   end;
1211843   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1211844   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1211845   +   end;
MPRINT(EM_DIAGRAM):   end;
1211846   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1211847   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1211848   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1211849   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1211850   +   end;
MPRINT(EM_DIAGRAM):   end;
1211851   +end;
MPRINT(EM_DIAGRAM):   end;
1211852   +
1211853   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1211854   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1211855   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1211856   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1211857   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1211858   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1211859   +end;
MPRINT(EM_DIAGRAM):   end;
1211860   +else do;
MPRINT(EM_DIAGRAM):   else do;
1211861   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1211862   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1211863   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1211864   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1211865   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1211866   +   end;
MPRINT(EM_DIAGRAM):   end;
1211867   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1211868   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1211869   +   end;
MPRINT(EM_DIAGRAM):   end;
1211870   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1211871   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1211872   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1211873   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1211874   +   end;
MPRINT(EM_DIAGRAM):   end;
1211875   +end;
MPRINT(EM_DIAGRAM):   end;
1211876   +
1211877   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1211878   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1211879   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1211880   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1211881   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1211882   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1211883   +end;
MPRINT(EM_DIAGRAM):   end;
1211884   +else do;
MPRINT(EM_DIAGRAM):   else do;
1211885   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1211886   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1211887   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1211888   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1211889   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1211890   +   end;
MPRINT(EM_DIAGRAM):   end;
1211891   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1211892   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1211893   +   end;
MPRINT(EM_DIAGRAM):   end;
1211894   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1211895   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1211896   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1211897   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1211898   +   end;
MPRINT(EM_DIAGRAM):   end;
1211899   +end;
MPRINT(EM_DIAGRAM):   end;
1211900   +
1211901   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1211902   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1211903   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1211904   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1211905   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1211906   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1211907   +end;
MPRINT(EM_DIAGRAM):   end;
1211908   +else do;
MPRINT(EM_DIAGRAM):   else do;
1211909   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1211910   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1211911   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1211912   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1211913   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1211914   +   end;
MPRINT(EM_DIAGRAM):   end;
1211915   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1211916   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1211917   +   end;
MPRINT(EM_DIAGRAM):   end;
1211918   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1211919   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1211920   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1211921   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1211922   +   end;
MPRINT(EM_DIAGRAM):   end;
1211923   +end;
MPRINT(EM_DIAGRAM):   end;
1211924   +
1211925   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1211926   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1211927   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1211928   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1211929   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1211930   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1211931   +end;
MPRINT(EM_DIAGRAM):   end;
1211932   +else do;
MPRINT(EM_DIAGRAM):   else do;
1211933   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1211934   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1211935   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1211936   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1211937   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1211938   +   end;
MPRINT(EM_DIAGRAM):   end;
1211939   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1211940   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1211941   +   end;
MPRINT(EM_DIAGRAM):   end;
1211942   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1211943   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1211944   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1211945   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1211946   +   end;
MPRINT(EM_DIAGRAM):   end;
1211947   +end;
MPRINT(EM_DIAGRAM):   end;
1211948   +
1211949   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1211950   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
1211951   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1211952   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1211953   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1211954   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1211955   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1211956   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1211957   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1211958   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1211959   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1211960   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1211961   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1211962   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1211963   +end;
MPRINT(EM_DIAGRAM):   end;
1211964   +else do;
MPRINT(EM_DIAGRAM):   else do;
1211965   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1211966   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1211967   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1211968   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1211969   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1211970   +   end;
MPRINT(EM_DIAGRAM):   end;
1211971   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1211972   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1211973   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1211974   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1211975   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1211976   +   end;
MPRINT(EM_DIAGRAM):   end;
1211977   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1211978   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1211979   +   end;
MPRINT(EM_DIAGRAM):   end;
1211980   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1211981   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1211982   +   end;
MPRINT(EM_DIAGRAM):   end;
1211983   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1211984   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1211985   +   end;
MPRINT(EM_DIAGRAM):   end;
1211986   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1211987   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1211988   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1211989   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1211990   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1211991   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1211992   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1211993   +   end;
MPRINT(EM_DIAGRAM):   end;
1211994   +end;
MPRINT(EM_DIAGRAM):   end;
1211995   +
1211996   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1211997   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1211998   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
1211999   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1212000   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1212001   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1212002   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1212003   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1212004   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1212005   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1212006   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1212007   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1212008   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1212009   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1212010   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1212011   +end;
MPRINT(EM_DIAGRAM):   end;
1212012   +else do;
MPRINT(EM_DIAGRAM):   else do;
1212013   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1212014   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1212015   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1212016   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1212017   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1212018   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1212019   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1212020   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1212021   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1212022   +         end;
MPRINT(EM_DIAGRAM):   end;
1212023   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1212024   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1212025   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1212026   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1212027   +            end;
MPRINT(EM_DIAGRAM):   end;
1212028   +         end;
MPRINT(EM_DIAGRAM):   end;
1212029   +      end;
MPRINT(EM_DIAGRAM):   end;
1212030   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1212031   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1212032   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1212033   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1212034   +         end;
MPRINT(EM_DIAGRAM):   end;
1212035   +      end;
MPRINT(EM_DIAGRAM):   end;
1212036   +   end;
MPRINT(EM_DIAGRAM):   end;
1212037   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1212038   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1212039   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1212040   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1212041   +      end;
MPRINT(EM_DIAGRAM):   end;
1212042   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1212043   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1212044   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1212045   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1212046   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1212047   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1212048   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1212049   +         end;
MPRINT(EM_DIAGRAM):   end;
1212050   +      end;
MPRINT(EM_DIAGRAM):   end;
1212051   +   end;
MPRINT(EM_DIAGRAM):   end;
1212052   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1212053   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1212054   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1212055   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1212056   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1212057   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1212058   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1212059   +   end;
MPRINT(EM_DIAGRAM):   end;
1212060   +end;
MPRINT(EM_DIAGRAM):   end;
1212061   +
1212062   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1212063   +*** Checking missing input Interval
1212064   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1212065   +
1212066   +IF NMISS(
1212067   +   AcceptedCmpTotal ,
1212068   +   Age ,
1212069   +   Frq ,
1212070   +   Income ,
1212071   +   Kidhome ,
1212072   +   MntFishProducts ,
1212073   +   MntFruits ,
1212074   +   MntGoldProds ,
1212075   +   MntSweetProducts ,
1212076   +   MonthsAsCustomer ,
1212077   +   NumDealsPurchases ,
1212078   +   NumWebVisitsMonth ,
1212079   +   RFMstat ,
1212080   +   RMntFrq ,
1212081   +   Recency ,
1212082   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , 
MntFishProducts , MntFruits , MntGoldProds , MntSweetProducts , MonthsAsCustomer , 
NumDealsPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , Teenhome ) THEN DO;
1212083   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1212084   +
1212085   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1212086   +END;
MPRINT(EM_DIAGRAM):   END;
1212087   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1212088   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1212089   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1212090   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1212091   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1212092   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1212093   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1212094   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1212095   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1212096   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1212097   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1212098   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1212099   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1212100   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1212101   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1212102   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1212103   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1212104   +   S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
1212105   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
1212106   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1212107   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1212108   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1212109   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1212110   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1212111   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1212112   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1212113   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1212114   +END;
MPRINT(EM_DIAGRAM):   END;
1212115   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1212116   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1212117   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1212118   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1212119   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1212120   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1212121   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1212122   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1212123   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1212124   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1212125   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1212126   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1212127   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1212128   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1212129   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1212130   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1212131   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1212132   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1212133   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1212134   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1212135   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1212136   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1212137   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1212138   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1212139   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1212140   +   ELSE S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
1212141   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
1212142   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1212143   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1212144   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1212145   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1212146   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1212147   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1212148   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1212149   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1212150   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1212151   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1212152   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1212153   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1212154   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1212155   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1212156   +END;
MPRINT(EM_DIAGRAM):   END;
1212157   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1212158   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1212159   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1212160   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1212161   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1212162   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1212163   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1212164   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1212165   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1212166   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1212167   +   H11  =    -0.61879380889194 * S_AcceptedCmpTotal  +    -0.09795242603477 *
1212168   +        S_Age  +     0.36103250822255 * S_Frq  +     0.08899052794394 *
1212169   +        S_Income  +     0.25564250606874 * S_Kidhome
1212170   +          +    -0.02786629817134 * S_MntFishProducts
1212171   +          +     0.13529614728112 * S_MntFruits  +     0.19622442891821 *
1212172   +        S_MntGoldProds  +     0.14107929478218 * S_MntSweetProducts
1212173   +          +    -0.29199173107007 * S_MonthsAsCustomer
1212174   +          +    -0.59759788962473 * S_NumDealsPurchases
1212175   +          +     -0.3788422274482 * S_NumWebVisitsMonth
1212176   +          +    -0.06743318112874 * S_RFMstat  +      0.2833264895355 *
1212177   +        S_RMntFrq  +     0.70854972350771 * S_Recency
1212178   +          +     0.11936327488967 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = -0.61879380889194 * S_AcceptedCmpTotal + -0.09795242603477 * S_Age 
+ 0.36103250822255 * S_Frq + 0.08899052794394 * S_Income + 0.25564250606874 * S_Kidhome + 
-0.02786629817134 * S_MntFishProducts + 0.13529614728112 * S_MntFruits + 0.19622442891821 * 
S_MntGoldProds + 0.14107929478218 * S_MntSweetProducts + -0.29199173107007 * 
S_MonthsAsCustomer + -0.59759788962473 * S_NumDealsPurchases + -0.3788422274482 * 
S_NumWebVisitsMonth + -0.06743318112874 * S_RFMstat + 0.2833264895355 * S_RMntFrq + 
0.70854972350771 * S_Recency + 0.11936327488967 * S_Teenhome ;
1212179   +   H12  =    -0.18766983828727 * S_AcceptedCmpTotal  +       0.517042669033 *
1212180   +        S_Age  +     1.02262972068559 * S_Frq  +     0.38007459198406 *
1212181   +        S_Income  +     0.07328887474153 * S_Kidhome
1212182   +          +    -0.23284570213322 * S_MntFishProducts
1212183   +          +     0.02838864374624 * S_MntFruits  +    -0.07574618602845 *
1212184   +        S_MntGoldProds  +    -0.41131707239504 * S_MntSweetProducts
1212185   +          +     0.29669594858185 * S_MonthsAsCustomer
1212186   +          +    -0.51220833966596 * S_NumDealsPurchases
1212187   +          +    -0.72293271444385 * S_NumWebVisitsMonth
1212188   +          +    -0.20562458645044 * S_RFMstat  +    -0.52495075768839 *
1212189   +        S_RMntFrq  +      1.0795232419354 * S_Recency
1212190   +          +    -0.18997953891579 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -0.18766983828727 * S_AcceptedCmpTotal + 0.517042669033 * S_Age + 
1.02262972068559 * S_Frq + 0.38007459198406 * S_Income + 0.07328887474153 * S_Kidhome + 
-0.23284570213322 * S_MntFishProducts + 0.02838864374624 * S_MntFruits + -0.07574618602845 * 
S_MntGoldProds + -0.41131707239504 * S_MntSweetProducts + 0.29669594858185 * 
S_MonthsAsCustomer + -0.51220833966596 * S_NumDealsPurchases + -0.72293271444385 * 
S_NumWebVisitsMonth + -0.20562458645044 * S_RFMstat + -0.52495075768839 * S_RMntFrq + 
1.0795232419354 * S_Recency + -0.18997953891579 * S_Teenhome ;
1212191   +   H13  =    -0.49159501579895 * S_AcceptedCmpTotal  +    -0.16293971978781 *
1212192   +        S_Age  +    -0.02977525702894 * S_Frq  +    -0.78728568889664 *
1212193   +        S_Income  +    -0.68209910558389 * S_Kidhome
1212194   +          +     0.23366174254474 * S_MntFishProducts
1212195   +          +    -0.08764688950673 * S_MntFruits  +    -0.38895649975347 *
1212196   +        S_MntGoldProds  +     0.02270546080284 * S_MntSweetProducts
1212197   +          +    -0.05759532204753 * S_MonthsAsCustomer
1212198   +          +    -0.30170163047261 * S_NumDealsPurchases
1212199   +          +    -0.57711437834603 * S_NumWebVisitsMonth
1212200   +          +    -0.09851659878757 * S_RFMstat  +    -0.20102310575519 *
1212201   +        S_RMntFrq  +     0.80994896921796 * S_Recency
1212202   +          +     0.32766576826101 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = -0.49159501579895 * S_AcceptedCmpTotal + -0.16293971978781 * S_Age 
+ -0.02977525702894 * S_Frq + -0.78728568889664 * S_Income + -0.68209910558389 * S_Kidhome + 
0.23366174254474 * S_MntFishProducts + -0.08764688950673 * S_MntFruits + -0.38895649975347 * 
S_MntGoldProds + 0.02270546080284 * S_MntSweetProducts + -0.05759532204753 * 
S_MonthsAsCustomer + -0.30170163047261 * S_NumDealsPurchases + -0.57711437834603 * 
S_NumWebVisitsMonth + -0.09851659878757 * S_RFMstat + -0.20102310575519 * S_RMntFrq + 
0.80994896921796 * S_Recency + 0.32766576826101 * S_Teenhome ;
1212203   +   H14  =    -0.11122937165995 * S_AcceptedCmpTotal  +     0.06859829254058 *
1212204   +        S_Age  +    -0.60966071706708 * S_Frq  +    -1.00949681880427 *
1212205   +        S_Income  +     0.67855138873039 * S_Kidhome
1212206   +          +    -0.05297743313476 * S_MntFishProducts
1212207   +          +     0.21613302257797 * S_MntFruits  +     0.03843790921347 *
1212208   +        S_MntGoldProds  +     0.25543771093558 * S_MntSweetProducts
1212209   +          +    -0.15817861274553 * S_MonthsAsCustomer
1212210   +          +     0.25133066233725 * S_NumDealsPurchases
1212211   +          +     0.08802636187267 * S_NumWebVisitsMonth
1212212   +          +    -0.04637957487976 * S_RFMstat  +    -0.31656429052936 *
1212213   +        S_RMntFrq  +      0.7228272496527 * S_Recency
1212214   +          +     0.58629319995218 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = -0.11122937165995 * S_AcceptedCmpTotal + 0.06859829254058 * S_Age 
+ -0.60966071706708 * S_Frq + -1.00949681880427 * S_Income + 0.67855138873039 * S_Kidhome + 
-0.05297743313476 * S_MntFishProducts + 0.21613302257797 * S_MntFruits + 0.03843790921347 * 
S_MntGoldProds + 0.25543771093558 * S_MntSweetProducts + -0.15817861274553 * 
S_MonthsAsCustomer + 0.25133066233725 * S_NumDealsPurchases + 0.08802636187267 * 
S_NumWebVisitsMonth + -0.04637957487976 * S_RFMstat + -0.31656429052936 * S_RMntFrq + 
0.7228272496527 * S_Recency + 0.58629319995218 * S_Teenhome ;
1212215   +   H11  = H11  +     0.23190135069025 * AcceptedCmp10
1212216   +          +     0.04686213078143 * AcceptedCmp20  +     0.17662818955575 *
1212217   +        AcceptedCmp30  +     0.03498741067378 * AcceptedCmp40
1212218   +          +     0.61042747626768 * AcceptedCmp50  +    -0.12810871081838 *
1212219   +        Complain0  +     0.03047400476944 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.23190135069025 * AcceptedCmp10 + 0.04686213078143 * 
AcceptedCmp20 + 0.17662818955575 * AcceptedCmp30 + 0.03498741067378 * AcceptedCmp40 + 
0.61042747626768 * AcceptedCmp50 + -0.12810871081838 * Complain0 + 0.03047400476944 * 
HigherEducationBinary0 ;
1212220   +   H12  = H12  +     0.53873807658752 * AcceptedCmp10
1212221   +          +     0.29840055428915 * AcceptedCmp20  +     0.52740574468702 *
1212222   +        AcceptedCmp30  +     0.27242279016627 * AcceptedCmp40
1212223   +          +     0.07126269343217 * AcceptedCmp50  +    -0.14631570192286 *
1212224   +        Complain0  +     0.16629352334811 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.53873807658752 * AcceptedCmp10 + 0.29840055428915 * 
AcceptedCmp20 + 0.52740574468702 * AcceptedCmp30 + 0.27242279016627 * AcceptedCmp40 + 
0.07126269343217 * AcceptedCmp50 + -0.14631570192286 * Complain0 + 0.16629352334811 * 
HigherEducationBinary0 ;
1212225   +   H13  = H13  +     0.09118941740461 * AcceptedCmp10
1212226   +          +     0.04178457860358 * AcceptedCmp20  +     0.48487479920901 *
1212227   +        AcceptedCmp30  +    -0.80910928087974 * AcceptedCmp40
1212228   +          +      0.4667831985075 * AcceptedCmp50  +    -0.29601289494349 *
1212229   +        Complain0  +     0.10690006738431 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.09118941740461 * AcceptedCmp10 + 0.04178457860358 * 
AcceptedCmp20 + 0.48487479920901 * AcceptedCmp30 + -0.80910928087974 * AcceptedCmp40 + 
0.4667831985075 * AcceptedCmp50 + -0.29601289494349 * Complain0 + 0.10690006738431 * 
HigherEducationBinary0 ;
1212230   +   H14  = H14  +     0.21382858049752 * AcceptedCmp10
1212231   +          +     0.12652392800261 * AcceptedCmp20  +     0.30403608200617 *
1212232   +        AcceptedCmp30  +     0.51966382166521 * AcceptedCmp40
1212233   +          +    -0.14518145187533 * AcceptedCmp50  +     0.27045295957801 *
1212234   +        Complain0  +    -0.49307163723406 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.21382858049752 * AcceptedCmp10 + 0.12652392800261 * 
AcceptedCmp20 + 0.30403608200617 * AcceptedCmp30 + 0.51966382166521 * AcceptedCmp40 + 
-0.14518145187533 * AcceptedCmp50 + 0.27045295957801 * Complain0 + -0.49307163723406 * 
HigherEducationBinary0 ;
1212235   +   H11  = H11  +    -0.15292649085097 * Education2n_Cycle
1212236   +          +     0.00016605452926 * EducationBasic  +    -0.04208965271063 *
1212237   +        EducationGraduation  +    -0.05433922630608 * EducationMaster
1212238   +          +      0.0528075343138 * Marital_StatusDivorced
1212239   +          +    -0.08269844855231 * Marital_StatusMarried
1212240   +          +     0.43411839786169 * Marital_StatusSingle
1212241   +          +     0.38324605489754 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.15292649085097 * Education2n_Cycle + 0.00016605452926 * 
EducationBasic + -0.04208965271063 * EducationGraduation + -0.05433922630608 * EducationMaster 
+ 0.0528075343138 * Marital_StatusDivorced + -0.08269844855231 * Marital_StatusMarried + 
0.43411839786169 * Marital_StatusSingle + 0.38324605489754 * Marital_StatusTogether ;
1212242   +   H12  = H12  +      0.3082578019648 * Education2n_Cycle
1212243   +          +    -0.01380127751108 * EducationBasic  +    -0.11076736066311 *
1212244   +        EducationGraduation  +     -0.1586948328241 * EducationMaster
1212245   +          +    -0.12842912869907 * Marital_StatusDivorced
1212246   +          +     0.11838814754642 * Marital_StatusMarried
1212247   +          +     0.01184261900927 * Marital_StatusSingle
1212248   +          +     0.14066273070318 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.3082578019648 * Education2n_Cycle + -0.01380127751108 * 
EducationBasic + -0.11076736066311 * EducationGraduation + -0.1586948328241 * EducationMaster 
+ -0.12842912869907 * Marital_StatusDivorced + 0.11838814754642 * Marital_StatusMarried + 
0.01184261900927 * Marital_StatusSingle + 0.14066273070318 * Marital_StatusTogether ;
1212249   +   H13  = H13  +     0.02861254390946 * Education2n_Cycle
1212250   +          +      0.4349807830691 * EducationBasic  +    -0.31346964692246 *
1212251   +        EducationGraduation  +      0.0620488761517 * EducationMaster
1212252   +          +    -0.22110722201709 * Marital_StatusDivorced
1212253   +          +      0.1355339029843 * Marital_StatusMarried
1212254   +          +    -0.33157273596382 * Marital_StatusSingle
1212255   +          +    -0.19725820483372 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.02861254390946 * Education2n_Cycle + 0.4349807830691 * 
EducationBasic + -0.31346964692246 * EducationGraduation + 0.0620488761517 * EducationMaster + 
-0.22110722201709 * Marital_StatusDivorced + 0.1355339029843 * Marital_StatusMarried + 
-0.33157273596382 * Marital_StatusSingle + -0.19725820483372 * Marital_StatusTogether ;
1212256   +   H14  = H14  +    -0.15196350137644 * Education2n_Cycle
1212257   +          +     0.11143610044897 * EducationBasic  +    -0.23356442851658 *
1212258   +        EducationGraduation  +     0.26881272673711 * EducationMaster
1212259   +          +    -0.21663247467797 * Marital_StatusDivorced
1212260   +          +     1.11468603898508 * Marital_StatusMarried
1212261   +          +    -0.84252388146943 * Marital_StatusSingle
1212262   +          +     0.91707021954171 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.15196350137644 * Education2n_Cycle + 0.11143610044897 * 
EducationBasic + -0.23356442851658 * EducationGraduation + 0.26881272673711 * EducationMaster 
+ -0.21663247467797 * Marital_StatusDivorced + 1.11468603898508 * Marital_StatusMarried + 
-0.84252388146943 * Marital_StatusSingle + 0.91707021954171 * Marital_StatusTogether ;
1212263   +   H11  =     0.69752617990443 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 0.69752617990443 + H11 ;
1212264   +   H12  =     0.88932226025287 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.88932226025287 + H12 ;
1212265   +   H13  =    -0.23351093325425 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.23351093325425 + H13 ;
1212266   +   H14  =      1.5565991209041 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 1.5565991209041 + H14 ;
1212267   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1212268   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1212269   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1212270   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1212271   +END;
MPRINT(EM_DIAGRAM):   END;
1212272   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1212273   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1212274   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1212275   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1212276   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1212277   +END;
MPRINT(EM_DIAGRAM):   END;
1212278   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1212279   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1212280   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1212281   +
1212282   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1212283   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1212284   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1212285   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1212286   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1212287   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1212288   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1212289   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1212290   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1212291   +end;
MPRINT(EM_DIAGRAM):   end;
1212292   +else do;
MPRINT(EM_DIAGRAM):   else do;
1212293   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1212294   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1212295   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1212296   +   end;
MPRINT(EM_DIAGRAM):   end;
1212297   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1212298   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1212299   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1212300   +   end;
MPRINT(EM_DIAGRAM):   end;
1212301   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1212302   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1212303   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1212304   +   end;
MPRINT(EM_DIAGRAM):   end;
1212305   +end;
MPRINT(EM_DIAGRAM):   end;
1212306   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1212307   +   P_DepVar1  =    -1.10683009838286 * H11  +    -1.85294488833715 * H12
1212308   +          +    -2.73624761150933 * H13  +    -2.51103548718704 * H14 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.10683009838286 * H11 + -1.85294488833715 * H12 + 
-2.73624761150933 * H13 + -2.51103548718704 * H14 ;
1212309   +   P_DepVar1  =    -0.86309949021709 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.86309949021709 + P_DepVar1 ;
1212310   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1212311   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1212312   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1212313   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1212314   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1212315   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1212316   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1212317   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1212318   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1212319   +END;
MPRINT(EM_DIAGRAM):   END;
1212320   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1212321   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1212322   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1212323   +END;
MPRINT(EM_DIAGRAM):   END;
1212324   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1212325   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1212326   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1212327   +END;
MPRINT(EM_DIAGRAM):   END;
1212328   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1212329   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1212330   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1212331   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1212332   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1212333   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1212334   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1212335   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1212336   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1212337   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1212338   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1212339   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1212340   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1212341   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1212342   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1212343   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1212344   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1212345   +END;
MPRINT(EM_DIAGRAM):   END;
1212346   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1212347   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1212348   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1212349   +drop
1212350   +H11
1212351   +H12
1212352   +H13
1212353   +H14
1212354   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 ;
1212355   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1212356   +* Renaming variables for Neural39;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural39;
1212357   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1212358   +* Renaming Posterior variables for Neural39;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural39;
1212359   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1212360   +drop Neural39_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural39_P_DepVar1;
1212361   +Neural39_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural39_P_DepVar1 = P_DepVar1;
1212362   +drop Neural39_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural39_P_DepVar0;
1212363   +Neural39_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural39_P_DepVar0 = P_DepVar0;
1212364   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1212365   +* Renaming _WARN_ variable for Neural39;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural39;
1212366   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1212367   +length Neural39_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural39_WARN_ $4;
1212368   +drop Neural39_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural39_WARN_;
1212369   +Neural39_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural39_WARN_ = _WARN_;
1212370   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1212371   +* Ensmbl12: Scoring Code of model 5 of 10;
MPRINT(EM_DIAGRAM):   * Ensmbl12: Scoring Code of model 5 of 10;
1212372   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1212373   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1212374   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
1212375   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1212376   +* NODE: Neural40;
MPRINT(EM_DIAGRAM):   * NODE: Neural40;
1212377   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1212378   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1212379   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1212380   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1212381   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1212382   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1212383   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1212384   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1212385   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1212386   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1212387   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1212388   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1212389   +LENGTH _WARN_ $4
1212390   +      F_DepVar  $ 12
1212391   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1212392   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1212393   +
1212394   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1212395   +
1212396   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1212397   +
1212398   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1212399   +
1212400   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1212401   +
1212402   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1212403   +
1212404   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1212405   +
1212406   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1212407   +
1212408   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1212409   +
1212410   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1212411   +
1212412   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1212413   +
1212414   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1212415   +
1212416   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1212417   +
1212418   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1212419   +
1212420   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1212421   +
1212422   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1212423   +
1212424   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1212425   +
1212426   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1212427   +
1212428   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1212429   +
1212430   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1212431   +
1212432   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1212433   +
1212434   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1212435   +
1212436   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1212437   +
1212438   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1212439   +
1212440   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1212441   +
1212442   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1212443   +
1212444   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1212445   +
1212446   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1212447   +
1212448   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1212449   +
1212450   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1212451   +
1212452   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1212453   +
1212454   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1212455   +
1212456   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1212457   +
1212458   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1212459   +
1212460   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1212461   +
1212462   +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
1212463   +
1212464   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1212465   +
1212466   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1212467   +
1212468   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1212469   +
1212470   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1212471   +
1212472   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1212473   +
1212474   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1212475   +
1212476   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1212477   +
1212478   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1212479   +
1212480   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1212481   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1212482   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1212483   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1212484   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1212485   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1212486   +end;
MPRINT(EM_DIAGRAM):   end;
1212487   +else do;
MPRINT(EM_DIAGRAM):   else do;
1212488   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1212489   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1212490   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1212491   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1212492   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1212493   +   end;
MPRINT(EM_DIAGRAM):   end;
1212494   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1212495   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1212496   +   end;
MPRINT(EM_DIAGRAM):   end;
1212497   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1212498   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1212499   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1212500   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1212501   +   end;
MPRINT(EM_DIAGRAM):   end;
1212502   +end;
MPRINT(EM_DIAGRAM):   end;
1212503   +
1212504   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1212505   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1212506   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1212507   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1212508   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1212509   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1212510   +end;
MPRINT(EM_DIAGRAM):   end;
1212511   +else do;
MPRINT(EM_DIAGRAM):   else do;
1212512   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1212513   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1212514   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1212515   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1212516   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1212517   +   end;
MPRINT(EM_DIAGRAM):   end;
1212518   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1212519   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1212520   +   end;
MPRINT(EM_DIAGRAM):   end;
1212521   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1212522   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1212523   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1212524   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1212525   +   end;
MPRINT(EM_DIAGRAM):   end;
1212526   +end;
MPRINT(EM_DIAGRAM):   end;
1212527   +
1212528   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1212529   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1212530   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1212531   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1212532   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1212533   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1212534   +end;
MPRINT(EM_DIAGRAM):   end;
1212535   +else do;
MPRINT(EM_DIAGRAM):   else do;
1212536   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1212537   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1212538   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1212539   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1212540   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1212541   +   end;
MPRINT(EM_DIAGRAM):   end;
1212542   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1212543   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1212544   +   end;
MPRINT(EM_DIAGRAM):   end;
1212545   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1212546   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1212547   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1212548   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1212549   +   end;
MPRINT(EM_DIAGRAM):   end;
1212550   +end;
MPRINT(EM_DIAGRAM):   end;
1212551   +
1212552   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1212553   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1212554   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1212555   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1212556   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1212557   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1212558   +end;
MPRINT(EM_DIAGRAM):   end;
1212559   +else do;
MPRINT(EM_DIAGRAM):   else do;
1212560   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1212561   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1212562   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1212563   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1212564   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1212565   +   end;
MPRINT(EM_DIAGRAM):   end;
1212566   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1212567   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1212568   +   end;
MPRINT(EM_DIAGRAM):   end;
1212569   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1212570   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1212571   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1212572   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1212573   +   end;
MPRINT(EM_DIAGRAM):   end;
1212574   +end;
MPRINT(EM_DIAGRAM):   end;
1212575   +
1212576   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1212577   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1212578   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1212579   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1212580   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1212581   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1212582   +end;
MPRINT(EM_DIAGRAM):   end;
1212583   +else do;
MPRINT(EM_DIAGRAM):   else do;
1212584   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1212585   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1212586   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1212587   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1212588   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1212589   +   end;
MPRINT(EM_DIAGRAM):   end;
1212590   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1212591   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1212592   +   end;
MPRINT(EM_DIAGRAM):   end;
1212593   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1212594   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1212595   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1212596   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1212597   +   end;
MPRINT(EM_DIAGRAM):   end;
1212598   +end;
MPRINT(EM_DIAGRAM):   end;
1212599   +
1212600   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1212601   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1212602   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1212603   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1212604   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1212605   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1212606   +end;
MPRINT(EM_DIAGRAM):   end;
1212607   +else do;
MPRINT(EM_DIAGRAM):   else do;
1212608   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1212609   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1212610   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1212611   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1212612   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1212613   +   end;
MPRINT(EM_DIAGRAM):   end;
1212614   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1212615   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1212616   +   end;
MPRINT(EM_DIAGRAM):   end;
1212617   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1212618   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1212619   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1212620   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1212621   +   end;
MPRINT(EM_DIAGRAM):   end;
1212622   +end;
MPRINT(EM_DIAGRAM):   end;
1212623   +
1212624   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1212625   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1212626   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1212627   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1212628   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1212629   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1212630   +end;
MPRINT(EM_DIAGRAM):   end;
1212631   +else do;
MPRINT(EM_DIAGRAM):   else do;
1212632   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1212633   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1212634   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1212635   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1212636   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1212637   +   end;
MPRINT(EM_DIAGRAM):   end;
1212638   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1212639   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1212640   +   end;
MPRINT(EM_DIAGRAM):   end;
1212641   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1212642   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1212643   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1212644   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1212645   +   end;
MPRINT(EM_DIAGRAM):   end;
1212646   +end;
MPRINT(EM_DIAGRAM):   end;
1212647   +
1212648   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1212649   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
1212650   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1212651   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1212652   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1212653   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1212654   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1212655   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1212656   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1212657   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1212658   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1212659   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1212660   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1212661   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1212662   +end;
MPRINT(EM_DIAGRAM):   end;
1212663   +else do;
MPRINT(EM_DIAGRAM):   else do;
1212664   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1212665   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1212666   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1212667   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1212668   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1212669   +   end;
MPRINT(EM_DIAGRAM):   end;
1212670   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1212671   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1212672   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1212673   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1212674   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1212675   +   end;
MPRINT(EM_DIAGRAM):   end;
1212676   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1212677   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1212678   +   end;
MPRINT(EM_DIAGRAM):   end;
1212679   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1212680   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1212681   +   end;
MPRINT(EM_DIAGRAM):   end;
1212682   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1212683   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1212684   +   end;
MPRINT(EM_DIAGRAM):   end;
1212685   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1212686   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1212687   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1212688   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1212689   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1212690   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1212691   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1212692   +   end;
MPRINT(EM_DIAGRAM):   end;
1212693   +end;
MPRINT(EM_DIAGRAM):   end;
1212694   +
1212695   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1212696   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1212697   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
1212698   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1212699   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1212700   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1212701   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1212702   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1212703   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1212704   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1212705   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1212706   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1212707   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1212708   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1212709   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1212710   +end;
MPRINT(EM_DIAGRAM):   end;
1212711   +else do;
MPRINT(EM_DIAGRAM):   else do;
1212712   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1212713   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1212714   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1212715   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1212716   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1212717   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1212718   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1212719   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1212720   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1212721   +         end;
MPRINT(EM_DIAGRAM):   end;
1212722   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1212723   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1212724   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1212725   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1212726   +            end;
MPRINT(EM_DIAGRAM):   end;
1212727   +         end;
MPRINT(EM_DIAGRAM):   end;
1212728   +      end;
MPRINT(EM_DIAGRAM):   end;
1212729   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1212730   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1212731   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1212732   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1212733   +         end;
MPRINT(EM_DIAGRAM):   end;
1212734   +      end;
MPRINT(EM_DIAGRAM):   end;
1212735   +   end;
MPRINT(EM_DIAGRAM):   end;
1212736   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1212737   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1212738   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1212739   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1212740   +      end;
MPRINT(EM_DIAGRAM):   end;
1212741   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1212742   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1212743   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1212744   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1212745   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1212746   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1212747   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1212748   +         end;
MPRINT(EM_DIAGRAM):   end;
1212749   +      end;
MPRINT(EM_DIAGRAM):   end;
1212750   +   end;
MPRINT(EM_DIAGRAM):   end;
1212751   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1212752   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1212753   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1212754   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1212755   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1212756   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1212757   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1212758   +   end;
MPRINT(EM_DIAGRAM):   end;
1212759   +end;
MPRINT(EM_DIAGRAM):   end;
1212760   +
1212761   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1212762   +*** Checking missing input Interval
1212763   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1212764   +
1212765   +IF NMISS(
1212766   +   AcceptedCmpTotal ,
1212767   +   Age ,
1212768   +   Frq ,
1212769   +   Income ,
1212770   +   Kidhome ,
1212771   +   MntFishProducts ,
1212772   +   MntFruits ,
1212773   +   MntGoldProds ,
1212774   +   MntSweetProducts ,
1212775   +   MonthsAsCustomer ,
1212776   +   NumDealsPurchases ,
1212777   +   NumWebVisitsMonth ,
1212778   +   RFMstat ,
1212779   +   RMntFrq ,
1212780   +   Recency ,
1212781   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , 
MntFishProducts , MntFruits , MntGoldProds , MntSweetProducts , MonthsAsCustomer , 
NumDealsPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , Teenhome ) THEN DO;
1212782   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1212783   +
1212784   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1212785   +END;
MPRINT(EM_DIAGRAM):   END;
1212786   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1212787   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1212788   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1212789   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1212790   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1212791   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1212792   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1212793   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1212794   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1212795   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1212796   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1212797   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1212798   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1212799   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1212800   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1212801   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1212802   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1212803   +   S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
1212804   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
1212805   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1212806   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1212807   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1212808   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1212809   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1212810   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1212811   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1212812   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1212813   +END;
MPRINT(EM_DIAGRAM):   END;
1212814   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1212815   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1212816   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1212817   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1212818   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1212819   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1212820   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1212821   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1212822   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1212823   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1212824   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1212825   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1212826   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1212827   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1212828   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1212829   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1212830   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1212831   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1212832   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1212833   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1212834   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1212835   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1212836   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1212837   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1212838   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1212839   +   ELSE S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
1212840   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
1212841   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1212842   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1212843   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1212844   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1212845   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1212846   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1212847   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1212848   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1212849   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1212850   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1212851   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1212852   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1212853   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1212854   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1212855   +END;
MPRINT(EM_DIAGRAM):   END;
1212856   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1212857   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1212858   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1212859   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1212860   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1212861   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1212862   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1212863   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1212864   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1212865   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1212866   +   H11  =      0.0175934799517 * S_AcceptedCmpTotal  +     0.05885450913465 *
1212867   +        S_Age  +    -0.17194721523787 * S_Frq  +    -0.82356228294539 *
1212868   +        S_Income  +     0.39869341630865 * S_Kidhome
1212869   +          +    -0.04263586382867 * S_MntFishProducts
1212870   +          +     0.02697365132515 * S_MntFruits  +     0.04818007940845 *
1212871   +        S_MntGoldProds  +      0.1933390486387 * S_MntSweetProducts
1212872   +          +    -0.14308588367026 * S_MonthsAsCustomer
1212873   +          +    -0.01053346972758 * S_NumDealsPurchases
1212874   +          +    -0.02308351901024 * S_NumWebVisitsMonth
1212875   +          +     0.00403225397753 * S_RFMstat  +    -0.21691316840182 *
1212876   +        S_RMntFrq  +     0.53938373050534 * S_Recency
1212877   +          +     0.55541282723709 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.0175934799517 * S_AcceptedCmpTotal + 0.05885450913465 * S_Age + 
-0.17194721523787 * S_Frq + -0.82356228294539 * S_Income + 0.39869341630865 * S_Kidhome + 
-0.04263586382867 * S_MntFishProducts + 0.02697365132515 * S_MntFruits + 0.04818007940845 * 
S_MntGoldProds + 0.1933390486387 * S_MntSweetProducts + -0.14308588367026 * S_MonthsAsCustomer 
+ -0.01053346972758 * S_NumDealsPurchases + -0.02308351901024 * S_NumWebVisitsMonth + 
0.00403225397753 * S_RFMstat + -0.21691316840182 * S_RMntFrq + 0.53938373050534 * S_Recency + 
0.55541282723709 * S_Teenhome ;
1212878   +   H12  =    -0.31735811206172 * S_AcceptedCmpTotal  +    -0.13976815294846 *
1212879   +        S_Age  +    -0.11928757030551 * S_Frq  +    -0.03597478449162 *
1212880   +        S_Income  +     0.31514301668626 * S_Kidhome
1212881   +          +    -0.05723808748191 * S_MntFishProducts
1212882   +          +     0.04545715816601 * S_MntFruits  +     0.19006209866265 *
1212883   +        S_MntGoldProds  +     0.34690576354698 * S_MntSweetProducts
1212884   +          +    -0.48738730918684 * S_MonthsAsCustomer
1212885   +          +     0.31545795225489 * S_NumDealsPurchases
1212886   +          +     0.24686603252864 * S_NumWebVisitsMonth
1212887   +          +     0.29857007170218 * S_RFMstat  +    -0.01009427724752 *
1212888   +        S_RMntFrq  +    -0.48894693883774 * S_Recency
1212889   +          +    -0.32384426712368 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -0.31735811206172 * S_AcceptedCmpTotal + -0.13976815294846 * S_Age 
+ -0.11928757030551 * S_Frq + -0.03597478449162 * S_Income + 0.31514301668626 * S_Kidhome + 
-0.05723808748191 * S_MntFishProducts + 0.04545715816601 * S_MntFruits + 0.19006209866265 * 
S_MntGoldProds + 0.34690576354698 * S_MntSweetProducts + -0.48738730918684 * 
S_MonthsAsCustomer + 0.31545795225489 * S_NumDealsPurchases + 0.24686603252864 * 
S_NumWebVisitsMonth + 0.29857007170218 * S_RFMstat + -0.01009427724752 * S_RMntFrq + 
-0.48894693883774 * S_Recency + -0.32384426712368 * S_Teenhome ;
1212890   +   H13  =    -0.67705794412683 * S_AcceptedCmpTotal  +     -0.1538815804864 *
1212891   +        S_Age  +    -0.32580272740463 * S_Frq  +    -0.42829033761305 *
1212892   +        S_Income  +    -0.48452563006855 * S_Kidhome
1212893   +          +      0.1638851163007 * S_MntFishProducts
1212894   +          +      0.0664068987141 * S_MntFruits  +    -0.54942999951449 *
1212895   +        S_MntGoldProds  +    -0.03119903843323 * S_MntSweetProducts
1212896   +          +    -0.09008316729574 * S_MonthsAsCustomer
1212897   +          +    -0.45452883452999 * S_NumDealsPurchases
1212898   +          +    -0.51499533680205 * S_NumWebVisitsMonth
1212899   +          +    -0.31380282266424 * S_RFMstat  +    -0.49525143192723 *
1212900   +        S_RMntFrq  +     0.78729387300328 * S_Recency
1212901   +          +    -0.00915408985389 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = -0.67705794412683 * S_AcceptedCmpTotal + -0.1538815804864 * S_Age 
+ -0.32580272740463 * S_Frq + -0.42829033761305 * S_Income + -0.48452563006855 * S_Kidhome + 
0.1638851163007 * S_MntFishProducts + 0.0664068987141 * S_MntFruits + -0.54942999951449 * 
S_MntGoldProds + -0.03119903843323 * S_MntSweetProducts + -0.09008316729574 * 
S_MonthsAsCustomer + -0.45452883452999 * S_NumDealsPurchases + -0.51499533680205 * 
S_NumWebVisitsMonth + -0.31380282266424 * S_RFMstat + -0.49525143192723 * S_RMntFrq + 
0.78729387300328 * S_Recency + -0.00915408985389 * S_Teenhome ;
1212902   +   H14  =     0.38318271090494 * S_AcceptedCmpTotal  +     0.06739638561066 *
1212903   +        S_Age  +     0.06912614028701 * S_Frq  +     0.14095220260271 *
1212904   +        S_Income  +    -0.62959343200613 * S_Kidhome
1212905   +          +    -0.08953561593231 * S_MntFishProducts
1212906   +          +    -0.17218233364246 * S_MntFruits  +    -0.00637076803669 *
1212907   +        S_MntGoldProds  +    -0.30194599011284 * S_MntSweetProducts
1212908   +          +    -0.04786752357029 * S_MonthsAsCustomer
1212909   +          +     0.01658790214447 * S_NumDealsPurchases
1212910   +          +     0.60508225698649 * S_NumWebVisitsMonth
1212911   +          +     0.24353060507938 * S_RFMstat  +    -0.16860031884486 *
1212912   +        S_RMntFrq  +    -0.74371082820398 * S_Recency
1212913   +          +    -0.33551735128078 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = 0.38318271090494 * S_AcceptedCmpTotal + 0.06739638561066 * S_Age + 
0.06912614028701 * S_Frq + 0.14095220260271 * S_Income + -0.62959343200613 * S_Kidhome + 
-0.08953561593231 * S_MntFishProducts + -0.17218233364246 * S_MntFruits + -0.00637076803669 * 
S_MntGoldProds + -0.30194599011284 * S_MntSweetProducts + -0.04786752357029 * 
S_MonthsAsCustomer + 0.01658790214447 * S_NumDealsPurchases + 0.60508225698649 * 
S_NumWebVisitsMonth + 0.24353060507938 * S_RFMstat + -0.16860031884486 * S_RMntFrq + 
-0.74371082820398 * S_Recency + -0.33551735128078 * S_Teenhome ;
1212914   +   H15  =    -0.33857166416401 * S_AcceptedCmpTotal  +     0.16520608022036 *
1212915   +        S_Age  +     0.94641603263172 * S_Frq  +     0.27973805141234 *
1212916   +        S_Income  +    -0.02417847760857 * S_Kidhome
1212917   +          +    -0.15499190740194 * S_MntFishProducts
1212918   +          +     0.06053779821593 * S_MntFruits  +     0.01880479324025 *
1212919   +        S_MntGoldProds  +    -0.12339726666832 * S_MntSweetProducts
1212920   +          +     0.03507116553703 * S_MonthsAsCustomer
1212921   +          +    -0.55190381693021 * S_NumDealsPurchases
1212922   +          +    -0.59332657995985 * S_NumWebVisitsMonth
1212923   +          +    -0.06593374840561 * S_RFMstat  +     -0.1695910963416 *
1212924   +        S_RMntFrq  +     0.67557246434122 * S_Recency
1212925   +          +    -0.18658362303394 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H15 = -0.33857166416401 * S_AcceptedCmpTotal + 0.16520608022036 * S_Age 
+ 0.94641603263172 * S_Frq + 0.27973805141234 * S_Income + -0.02417847760857 * S_Kidhome + 
-0.15499190740194 * S_MntFishProducts + 0.06053779821593 * S_MntFruits + 0.01880479324025 * 
S_MntGoldProds + -0.12339726666832 * S_MntSweetProducts + 0.03507116553703 * 
S_MonthsAsCustomer + -0.55190381693021 * S_NumDealsPurchases + -0.59332657995985 * 
S_NumWebVisitsMonth + -0.06593374840561 * S_RFMstat + -0.1695910963416 * S_RMntFrq + 
0.67557246434122 * S_Recency + -0.18658362303394 * S_Teenhome ;
1212926   +   H11  = H11  +     0.33421746514492 * AcceptedCmp10
1212927   +          +     0.40665603760529 * AcceptedCmp20  +     0.31091046539166 *
1212928   +        AcceptedCmp30  +     0.31067810471417 * AcceptedCmp40
1212929   +          +     0.23230606314386 * AcceptedCmp50  +     0.16336773428886 *
1212930   +        Complain0  +    -0.30987882500611 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.33421746514492 * AcceptedCmp10 + 0.40665603760529 * 
AcceptedCmp20 + 0.31091046539166 * AcceptedCmp30 + 0.31067810471417 * AcceptedCmp40 + 
0.23230606314386 * AcceptedCmp50 + 0.16336773428886 * Complain0 + -0.30987882500611 * 
HigherEducationBinary0 ;
1212931   +   H12  = H12  +     0.15837463939449 * AcceptedCmp10
1212932   +          +    -0.01452684677445 * AcceptedCmp20  +    -0.18194082864383 *
1212933   +        AcceptedCmp30  +     0.10656170173016 * AcceptedCmp40
1212934   +          +     0.27710912124072 * AcceptedCmp50  +     0.21438736172214 *
1212935   +        Complain0  +      0.2669951422121 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.15837463939449 * AcceptedCmp10 + -0.01452684677445 * 
AcceptedCmp20 + -0.18194082864383 * AcceptedCmp30 + 0.10656170173016 * AcceptedCmp40 + 
0.27710912124072 * AcceptedCmp50 + 0.21438736172214 * Complain0 + 0.2669951422121 * 
HigherEducationBinary0 ;
1212936   +   H13  = H13  +    -0.11101425179048 * AcceptedCmp10
1212937   +          +    -0.13751555879468 * AcceptedCmp20  +     0.15733527433639 *
1212938   +        AcceptedCmp30  +    -0.09214109408136 * AcceptedCmp40
1212939   +          +     0.20478673178439 * AcceptedCmp50  +    -0.28890027497717 *
1212940   +        Complain0  +     0.12242984309847 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.11101425179048 * AcceptedCmp10 + -0.13751555879468 * 
AcceptedCmp20 + 0.15733527433639 * AcceptedCmp30 + -0.09214109408136 * AcceptedCmp40 + 
0.20478673178439 * AcceptedCmp50 + -0.28890027497717 * Complain0 + 0.12242984309847 * 
HigherEducationBinary0 ;
1212941   +   H14  = H14  +     0.23187291622457 * AcceptedCmp10
1212942   +          +    -0.00683976547266 * AcceptedCmp20  +    -0.31710598764248 *
1212943   +        AcceptedCmp30  +     0.01758514221597 * AcceptedCmp40
1212944   +          +     0.01100509244187 * AcceptedCmp50  +     0.18584999296157 *
1212945   +        Complain0  +     0.02524550049258 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.23187291622457 * AcceptedCmp10 + -0.00683976547266 * 
AcceptedCmp20 + -0.31710598764248 * AcceptedCmp30 + 0.01758514221597 * AcceptedCmp40 + 
0.01100509244187 * AcceptedCmp50 + 0.18584999296157 * Complain0 + 0.02524550049258 * 
HigherEducationBinary0 ;
1212946   +   H15  = H15  +     0.53220831693924 * AcceptedCmp10
1212947   +          +     0.01983211122446 * AcceptedCmp20  +      0.4704897795251 *
1212948   +        AcceptedCmp30  +    -0.05798671810245 * AcceptedCmp40
1212949   +          +      0.2900384423652 * AcceptedCmp50  +     0.05796705496261 *
1212950   +        Complain0  +     0.17745347141736 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.53220831693924 * AcceptedCmp10 + 0.01983211122446 * 
AcceptedCmp20 + 0.4704897795251 * AcceptedCmp30 + -0.05798671810245 * AcceptedCmp40 + 
0.2900384423652 * AcceptedCmp50 + 0.05796705496261 * Complain0 + 0.17745347141736 * 
HigherEducationBinary0 ;
1212951   +   H11  = H11  +     0.02871001640043 * Education2n_Cycle
1212952   +          +    -0.13470776546868 * EducationBasic  +    -0.09722995474504 *
1212953   +        EducationGraduation  +     0.23764107317064 * EducationMaster
1212954   +          +    -0.41654638301737 * Marital_StatusDivorced
1212955   +          +     0.65956207700583 * Marital_StatusMarried
1212956   +          +    -0.52573042887166 * Marital_StatusSingle
1212957   +          +     0.70466028872575 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.02871001640043 * Education2n_Cycle + -0.13470776546868 * 
EducationBasic + -0.09722995474504 * EducationGraduation + 0.23764107317064 * EducationMaster 
+ -0.41654638301737 * Marital_StatusDivorced + 0.65956207700583 * Marital_StatusMarried + 
-0.52573042887166 * Marital_StatusSingle + 0.70466028872575 * Marital_StatusTogether ;
1212958   +   H12  = H12  +    -0.18219729356622 * Education2n_Cycle
1212959   +          +    -0.04034334204744 * EducationBasic  +     0.26266153233615 *
1212960   +        EducationGraduation  +     0.04617834975571 * EducationMaster
1212961   +          +    -0.32313846862799 * Marital_StatusDivorced
1212962   +          +     0.15910539009887 * Marital_StatusMarried
1212963   +          +     0.28781821946114 * Marital_StatusSingle
1212964   +          +    -0.31451367898445 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.18219729356622 * Education2n_Cycle + -0.04034334204744 * 
EducationBasic + 0.26266153233615 * EducationGraduation + 0.04617834975571 * EducationMaster + 
-0.32313846862799 * Marital_StatusDivorced + 0.15910539009887 * Marital_StatusMarried + 
0.28781821946114 * Marital_StatusSingle + -0.31451367898445 * Marital_StatusTogether ;
1212965   +   H13  = H13  +     0.03267721493849 * Education2n_Cycle
1212966   +          +     0.16906837093601 * EducationBasic  +    -0.24874822218195 *
1212967   +        EducationGraduation  +    -0.16815820019721 * EducationMaster
1212968   +          +    -0.06481096024989 * Marital_StatusDivorced
1212969   +          +    -0.01184060710261 * Marital_StatusMarried
1212970   +          +    -0.04932258474026 * Marital_StatusSingle
1212971   +          +     -0.1515388053958 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.03267721493849 * Education2n_Cycle + 0.16906837093601 * 
EducationBasic + -0.24874822218195 * EducationGraduation + -0.16815820019721 * EducationMaster 
+ -0.06481096024989 * Marital_StatusDivorced + -0.01184060710261 * Marital_StatusMarried + 
-0.04932258474026 * Marital_StatusSingle + -0.1515388053958 * Marital_StatusTogether ;
1212972   +   H14  = H14  +     0.04382537081818 * Education2n_Cycle
1212973   +          +     0.09896945976445 * EducationBasic  +      0.2410849324915 *
1212974   +        EducationGraduation  +    -0.17878202935912 * EducationMaster
1212975   +          +      0.2062190716357 * Marital_StatusDivorced
1212976   +          +      -0.523160668609 * Marital_StatusMarried
1212977   +          +     0.50687401816278 * Marital_StatusSingle
1212978   +          +    -0.14896192891933 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.04382537081818 * Education2n_Cycle + 0.09896945976445 * 
EducationBasic + 0.2410849324915 * EducationGraduation + -0.17878202935912 * EducationMaster + 
0.2062190716357 * Marital_StatusDivorced + -0.523160668609 * Marital_StatusMarried + 
0.50687401816278 * Marital_StatusSingle + -0.14896192891933 * Marital_StatusTogether ;
1212979   +   H15  = H15  +    -0.08178258730533 * Education2n_Cycle
1212980   +          +      0.2352291498146 * EducationBasic  +     0.00142061419661 *
1212981   +        EducationGraduation  +      0.0248100493803 * EducationMaster
1212982   +          +     -0.1386176879533 * Marital_StatusDivorced
1212983   +          +    -0.17611433777439 * Marital_StatusMarried
1212984   +          +     0.09908348348999 * Marital_StatusSingle
1212985   +          +     0.03642332762739 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + -0.08178258730533 * Education2n_Cycle + 0.2352291498146 * 
EducationBasic + 0.00142061419661 * EducationGraduation + 0.0248100493803 * EducationMaster + 
-0.1386176879533 * Marital_StatusDivorced + -0.17611433777439 * Marital_StatusMarried + 
0.09908348348999 * Marital_StatusSingle + 0.03642332762739 * Marital_StatusTogether ;
1212986   +   H11  =     0.45628072516851 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 0.45628072516851 + H11 ;
1212987   +   H12  =    -0.95695553300305 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -0.95695553300305 + H12 ;
1212988   +   H13  =    -0.44156518168947 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.44156518168947 + H13 ;
1212989   +   H14  =      0.5435213841731 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 0.5435213841731 + H14 ;
1212990   +   H15  =     0.82816554742793 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = 0.82816554742793 + H15 ;
1212991   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1212992   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1212993   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1212994   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1212995   +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
1212996   +END;
MPRINT(EM_DIAGRAM):   END;
1212997   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1212998   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1212999   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1213000   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1213001   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1213002   +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
1213003   +END;
MPRINT(EM_DIAGRAM):   END;
1213004   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1213005   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1213006   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1213007   +
1213008   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1213009   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1213010   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1213011   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1213012   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1213013   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1213014   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1213015   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1213016   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1213017   +end;
MPRINT(EM_DIAGRAM):   end;
1213018   +else do;
MPRINT(EM_DIAGRAM):   else do;
1213019   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1213020   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1213021   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1213022   +   end;
MPRINT(EM_DIAGRAM):   end;
1213023   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1213024   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1213025   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1213026   +   end;
MPRINT(EM_DIAGRAM):   end;
1213027   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1213028   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1213029   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1213030   +   end;
MPRINT(EM_DIAGRAM):   end;
1213031   +end;
MPRINT(EM_DIAGRAM):   end;
1213032   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1213033   +   P_DepVar1  =    -3.08501570662701 * H11  +     0.89180279281701 * H12
1213034   +          +    -2.65199906073292 * H13  +     1.47191997336768 * H14
1213035   +          +     -1.9303334635002 * H15 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.08501570662701 * H11 + 0.89180279281701 * H12 + 
-2.65199906073292 * H13 + 1.47191997336768 * H14 + -1.9303334635002 * H15 ;
1213036   +   P_DepVar1  =    -1.84416627670626 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.84416627670626 + P_DepVar1 ;
1213037   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1213038   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1213039   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1213040   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1213041   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1213042   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1213043   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1213044   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1213045   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1213046   +END;
MPRINT(EM_DIAGRAM):   END;
1213047   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1213048   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1213049   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1213050   +END;
MPRINT(EM_DIAGRAM):   END;
1213051   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1213052   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1213053   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1213054   +END;
MPRINT(EM_DIAGRAM):   END;
1213055   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1213056   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1213057   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1213058   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1213059   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1213060   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1213061   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1213062   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1213063   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1213064   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1213065   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1213066   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1213067   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1213068   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1213069   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1213070   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1213071   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1213072   +END;
MPRINT(EM_DIAGRAM):   END;
1213073   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1213074   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1213075   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1213076   +drop
1213077   +H11
1213078   +H12
1213079   +H13
1213080   +H14
1213081   +H15
1213082   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 ;
1213083   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1213084   +* Renaming variables for Neural40;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural40;
1213085   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1213086   +* Renaming Posterior variables for Neural40;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural40;
1213087   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1213088   +drop Neural40_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural40_P_DepVar1;
1213089   +Neural40_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural40_P_DepVar1 = P_DepVar1;
1213090   +drop Neural40_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural40_P_DepVar0;
1213091   +Neural40_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural40_P_DepVar0 = P_DepVar0;
1213092   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1213093   +* Renaming _WARN_ variable for Neural40;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural40;
1213094   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1213095   +length Neural40_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural40_WARN_ $4;
1213096   +drop Neural40_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural40_WARN_;
1213097   +Neural40_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural40_WARN_ = _WARN_;
1213098   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1213099   +* Ensmbl12: Scoring Code of model 6 of 10;
MPRINT(EM_DIAGRAM):   * Ensmbl12: Scoring Code of model 6 of 10;
1213100   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1213101   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1213102   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
1213103   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1213104   +* NODE: Neural41;
MPRINT(EM_DIAGRAM):   * NODE: Neural41;
1213105   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1213106   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1213107   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1213108   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1213109   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1213110   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1213111   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1213112   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1213113   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1213114   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1213115   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1213116   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1213117   +LENGTH _WARN_ $4
1213118   +      F_DepVar  $ 12
1213119   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1213120   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1213121   +
1213122   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1213123   +
1213124   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1213125   +
1213126   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1213127   +
1213128   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1213129   +
1213130   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1213131   +
1213132   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1213133   +
1213134   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1213135   +
1213136   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1213137   +
1213138   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1213139   +
1213140   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1213141   +
1213142   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1213143   +
1213144   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1213145   +
1213146   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1213147   +
1213148   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1213149   +
1213150   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1213151   +
1213152   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1213153   +
1213154   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1213155   +
1213156   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1213157   +
1213158   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1213159   +
1213160   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1213161   +
1213162   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1213163   +
1213164   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1213165   +
1213166   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1213167   +
1213168   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1213169   +
1213170   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1213171   +
1213172   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1213173   +
1213174   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1213175   +
1213176   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1213177   +
1213178   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1213179   +
1213180   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1213181   +
1213182   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1213183   +
1213184   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1213185   +
1213186   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1213187   +
1213188   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1213189   +
1213190   +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
1213191   +
1213192   +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
1213193   +
1213194   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1213195   +
1213196   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1213197   +
1213198   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1213199   +
1213200   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1213201   +
1213202   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1213203   +
1213204   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1213205   +
1213206   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1213207   +
1213208   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1213209   +
1213210   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1213211   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1213212   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1213213   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1213214   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1213215   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1213216   +end;
MPRINT(EM_DIAGRAM):   end;
1213217   +else do;
MPRINT(EM_DIAGRAM):   else do;
1213218   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1213219   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1213220   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1213221   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1213222   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1213223   +   end;
MPRINT(EM_DIAGRAM):   end;
1213224   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1213225   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1213226   +   end;
MPRINT(EM_DIAGRAM):   end;
1213227   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1213228   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1213229   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1213230   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1213231   +   end;
MPRINT(EM_DIAGRAM):   end;
1213232   +end;
MPRINT(EM_DIAGRAM):   end;
1213233   +
1213234   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1213235   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1213236   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1213237   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1213238   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1213239   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1213240   +end;
MPRINT(EM_DIAGRAM):   end;
1213241   +else do;
MPRINT(EM_DIAGRAM):   else do;
1213242   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1213243   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1213244   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1213245   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1213246   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1213247   +   end;
MPRINT(EM_DIAGRAM):   end;
1213248   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1213249   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1213250   +   end;
MPRINT(EM_DIAGRAM):   end;
1213251   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1213252   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1213253   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1213254   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1213255   +   end;
MPRINT(EM_DIAGRAM):   end;
1213256   +end;
MPRINT(EM_DIAGRAM):   end;
1213257   +
1213258   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1213259   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1213260   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1213261   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1213262   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1213263   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1213264   +end;
MPRINT(EM_DIAGRAM):   end;
1213265   +else do;
MPRINT(EM_DIAGRAM):   else do;
1213266   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1213267   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1213268   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1213269   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1213270   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1213271   +   end;
MPRINT(EM_DIAGRAM):   end;
1213272   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1213273   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1213274   +   end;
MPRINT(EM_DIAGRAM):   end;
1213275   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1213276   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1213277   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1213278   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1213279   +   end;
MPRINT(EM_DIAGRAM):   end;
1213280   +end;
MPRINT(EM_DIAGRAM):   end;
1213281   +
1213282   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1213283   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1213284   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1213285   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1213286   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1213287   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1213288   +end;
MPRINT(EM_DIAGRAM):   end;
1213289   +else do;
MPRINT(EM_DIAGRAM):   else do;
1213290   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1213291   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1213292   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1213293   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1213294   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1213295   +   end;
MPRINT(EM_DIAGRAM):   end;
1213296   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1213297   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1213298   +   end;
MPRINT(EM_DIAGRAM):   end;
1213299   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1213300   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1213301   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1213302   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1213303   +   end;
MPRINT(EM_DIAGRAM):   end;
1213304   +end;
MPRINT(EM_DIAGRAM):   end;
1213305   +
1213306   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1213307   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1213308   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1213309   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1213310   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1213311   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1213312   +end;
MPRINT(EM_DIAGRAM):   end;
1213313   +else do;
MPRINT(EM_DIAGRAM):   else do;
1213314   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1213315   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1213316   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1213317   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1213318   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1213319   +   end;
MPRINT(EM_DIAGRAM):   end;
1213320   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1213321   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1213322   +   end;
MPRINT(EM_DIAGRAM):   end;
1213323   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1213324   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1213325   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1213326   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1213327   +   end;
MPRINT(EM_DIAGRAM):   end;
1213328   +end;
MPRINT(EM_DIAGRAM):   end;
1213329   +
1213330   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1213331   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1213332   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1213333   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1213334   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1213335   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1213336   +end;
MPRINT(EM_DIAGRAM):   end;
1213337   +else do;
MPRINT(EM_DIAGRAM):   else do;
1213338   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1213339   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1213340   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1213341   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1213342   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1213343   +   end;
MPRINT(EM_DIAGRAM):   end;
1213344   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1213345   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1213346   +   end;
MPRINT(EM_DIAGRAM):   end;
1213347   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1213348   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1213349   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1213350   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1213351   +   end;
MPRINT(EM_DIAGRAM):   end;
1213352   +end;
MPRINT(EM_DIAGRAM):   end;
1213353   +
1213354   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1213355   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1213356   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1213357   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1213358   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1213359   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1213360   +end;
MPRINT(EM_DIAGRAM):   end;
1213361   +else do;
MPRINT(EM_DIAGRAM):   else do;
1213362   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1213363   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1213364   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1213365   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1213366   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1213367   +   end;
MPRINT(EM_DIAGRAM):   end;
1213368   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1213369   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1213370   +   end;
MPRINT(EM_DIAGRAM):   end;
1213371   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1213372   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1213373   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1213374   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1213375   +   end;
MPRINT(EM_DIAGRAM):   end;
1213376   +end;
MPRINT(EM_DIAGRAM):   end;
1213377   +
1213378   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1213379   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
1213380   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1213381   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1213382   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1213383   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1213384   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1213385   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1213386   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1213387   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1213388   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1213389   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1213390   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1213391   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1213392   +end;
MPRINT(EM_DIAGRAM):   end;
1213393   +else do;
MPRINT(EM_DIAGRAM):   else do;
1213394   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1213395   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1213396   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1213397   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1213398   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1213399   +   end;
MPRINT(EM_DIAGRAM):   end;
1213400   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1213401   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1213402   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1213403   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1213404   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1213405   +   end;
MPRINT(EM_DIAGRAM):   end;
1213406   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1213407   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1213408   +   end;
MPRINT(EM_DIAGRAM):   end;
1213409   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1213410   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1213411   +   end;
MPRINT(EM_DIAGRAM):   end;
1213412   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1213413   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1213414   +   end;
MPRINT(EM_DIAGRAM):   end;
1213415   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1213416   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1213417   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1213418   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1213419   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1213420   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1213421   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1213422   +   end;
MPRINT(EM_DIAGRAM):   end;
1213423   +end;
MPRINT(EM_DIAGRAM):   end;
1213424   +
1213425   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1213426   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1213427   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
1213428   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1213429   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1213430   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1213431   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1213432   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1213433   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1213434   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1213435   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1213436   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1213437   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1213438   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1213439   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1213440   +end;
MPRINT(EM_DIAGRAM):   end;
1213441   +else do;
MPRINT(EM_DIAGRAM):   else do;
1213442   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1213443   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1213444   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1213445   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1213446   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1213447   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1213448   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1213449   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1213450   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1213451   +         end;
MPRINT(EM_DIAGRAM):   end;
1213452   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1213453   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1213454   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1213455   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1213456   +            end;
MPRINT(EM_DIAGRAM):   end;
1213457   +         end;
MPRINT(EM_DIAGRAM):   end;
1213458   +      end;
MPRINT(EM_DIAGRAM):   end;
1213459   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1213460   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1213461   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1213462   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1213463   +         end;
MPRINT(EM_DIAGRAM):   end;
1213464   +      end;
MPRINT(EM_DIAGRAM):   end;
1213465   +   end;
MPRINT(EM_DIAGRAM):   end;
1213466   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1213467   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1213468   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1213469   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1213470   +      end;
MPRINT(EM_DIAGRAM):   end;
1213471   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1213472   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1213473   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1213474   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1213475   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1213476   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1213477   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1213478   +         end;
MPRINT(EM_DIAGRAM):   end;
1213479   +      end;
MPRINT(EM_DIAGRAM):   end;
1213480   +   end;
MPRINT(EM_DIAGRAM):   end;
1213481   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1213482   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1213483   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1213484   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1213485   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1213486   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1213487   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1213488   +   end;
MPRINT(EM_DIAGRAM):   end;
1213489   +end;
MPRINT(EM_DIAGRAM):   end;
1213490   +
1213491   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1213492   +*** Checking missing input Interval
1213493   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1213494   +
1213495   +IF NMISS(
1213496   +   AcceptedCmpTotal ,
1213497   +   Age ,
1213498   +   Frq ,
1213499   +   Income ,
1213500   +   Kidhome ,
1213501   +   MntFishProducts ,
1213502   +   MntFruits ,
1213503   +   MntGoldProds ,
1213504   +   MntSweetProducts ,
1213505   +   MonthsAsCustomer ,
1213506   +   NumDealsPurchases ,
1213507   +   NumWebVisitsMonth ,
1213508   +   RFMstat ,
1213509   +   RMntFrq ,
1213510   +   Recency ,
1213511   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , 
MntFishProducts , MntFruits , MntGoldProds , MntSweetProducts , MonthsAsCustomer , 
NumDealsPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , Teenhome ) THEN DO;
1213512   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1213513   +
1213514   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1213515   +END;
MPRINT(EM_DIAGRAM):   END;
1213516   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1213517   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1213518   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1213519   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1213520   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1213521   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1213522   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1213523   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1213524   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1213525   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1213526   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1213527   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1213528   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1213529   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1213530   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1213531   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1213532   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1213533   +   S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
1213534   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
1213535   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1213536   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1213537   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1213538   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1213539   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1213540   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1213541   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1213542   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1213543   +END;
MPRINT(EM_DIAGRAM):   END;
1213544   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1213545   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1213546   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1213547   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1213548   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1213549   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1213550   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1213551   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1213552   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1213553   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1213554   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1213555   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1213556   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1213557   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1213558   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1213559   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1213560   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1213561   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1213562   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1213563   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1213564   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1213565   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1213566   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1213567   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1213568   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1213569   +   ELSE S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
1213570   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
1213571   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1213572   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1213573   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1213574   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1213575   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1213576   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1213577   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1213578   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1213579   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1213580   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1213581   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1213582   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1213583   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1213584   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1213585   +END;
MPRINT(EM_DIAGRAM):   END;
1213586   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1213587   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1213588   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1213589   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1213590   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1213591   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1213592   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1213593   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1213594   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1213595   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1213596   +   H11  =     0.00008202203841 * S_AcceptedCmpTotal  +    -0.13126483592154 *
1213597   +        S_Age  +    -0.18503379491116 * S_Frq  +      0.0037482920266 *
1213598   +        S_Income  +    -0.52684337240504 * S_Kidhome
1213599   +          +     0.07835956947085 * S_MntFishProducts
1213600   +          +    -0.04668308882455 * S_MntFruits  +     0.05311471984852 *
1213601   +        S_MntGoldProds  +    -0.39576933150762 * S_MntSweetProducts
1213602   +          +    -0.44463888327841 * S_MonthsAsCustomer
1213603   +          +    -0.20310227710644 * S_NumDealsPurchases
1213604   +          +     0.06594467408568 * S_NumWebVisitsMonth
1213605   +          +      0.1351556470497 * S_RFMstat  +    -0.29446460505048 *
1213606   +        S_RMntFrq  +    -0.68878207173764 * S_Recency
1213607   +          +    -0.29241927123525 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.00008202203841 * S_AcceptedCmpTotal + -0.13126483592154 * S_Age 
+ -0.18503379491116 * S_Frq + 0.0037482920266 * S_Income + -0.52684337240504 * S_Kidhome + 
0.07835956947085 * S_MntFishProducts + -0.04668308882455 * S_MntFruits + 0.05311471984852 * 
S_MntGoldProds + -0.39576933150762 * S_MntSweetProducts + -0.44463888327841 * 
S_MonthsAsCustomer + -0.20310227710644 * S_NumDealsPurchases + 0.06594467408568 * 
S_NumWebVisitsMonth + 0.1351556470497 * S_RFMstat + -0.29446460505048 * S_RMntFrq + 
-0.68878207173764 * S_Recency + -0.29241927123525 * S_Teenhome ;
1213608   +   H12  =     0.38864749644126 * S_AcceptedCmpTotal  +    -0.01077611135972 *
1213609   +        S_Age  +     0.24187074268223 * S_Frq  +     0.64180191864108 *
1213610   +        S_Income  +     0.91025818069308 * S_Kidhome
1213611   +          +     0.26585860774761 * S_MntFishProducts
1213612   +          +     -0.3087386188037 * S_MntFruits  +     0.14643568534568 *
1213613   +        S_MntGoldProds  +     0.23763200275034 * S_MntSweetProducts
1213614   +          +    -0.12421403342454 * S_MonthsAsCustomer
1213615   +          +     0.66931066909347 * S_NumDealsPurchases
1213616   +          +     0.35050056776957 * S_NumWebVisitsMonth
1213617   +          +     0.16127659142199 * S_RFMstat  +     0.04112742589329 *
1213618   +        S_RMntFrq  +    -0.83075146355987 * S_Recency
1213619   +          +    -0.37723917156575 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = 0.38864749644126 * S_AcceptedCmpTotal + -0.01077611135972 * S_Age 
+ 0.24187074268223 * S_Frq + 0.64180191864108 * S_Income + 0.91025818069308 * S_Kidhome + 
0.26585860774761 * S_MntFishProducts + -0.3087386188037 * S_MntFruits + 0.14643568534568 * 
S_MntGoldProds + 0.23763200275034 * S_MntSweetProducts + -0.12421403342454 * 
S_MonthsAsCustomer + 0.66931066909347 * S_NumDealsPurchases + 0.35050056776957 * 
S_NumWebVisitsMonth + 0.16127659142199 * S_RFMstat + 0.04112742589329 * S_RMntFrq + 
-0.83075146355987 * S_Recency + -0.37723917156575 * S_Teenhome ;
1213620   +   H13  =     0.02339384767281 * S_AcceptedCmpTotal  +    -0.17700567590774 *
1213621   +        S_Age  +    -0.38060509731554 * S_Frq  +    -0.86026143079344 *
1213622   +        S_Income  +     0.63027536562783 * S_Kidhome
1213623   +          +     0.15303249164566 * S_MntFishProducts
1213624   +          +    -0.04780128957622 * S_MntFruits  +    -0.02064261038049 *
1213625   +        S_MntGoldProds  +     0.26238383938455 * S_MntSweetProducts
1213626   +          +    -0.21006970062531 * S_MonthsAsCustomer
1213627   +          +      0.2955774677605 * S_NumDealsPurchases
1213628   +          +    -0.15769947513958 * S_NumWebVisitsMonth
1213629   +          +    -0.02874776268384 * S_RFMstat  +     -0.3955429869434 *
1213630   +        S_RMntFrq  +      0.3744122250079 * S_Recency
1213631   +          +     0.58295521976226 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = 0.02339384767281 * S_AcceptedCmpTotal + -0.17700567590774 * S_Age 
+ -0.38060509731554 * S_Frq + -0.86026143079344 * S_Income + 0.63027536562783 * S_Kidhome + 
0.15303249164566 * S_MntFishProducts + -0.04780128957622 * S_MntFruits + -0.02064261038049 * 
S_MntGoldProds + 0.26238383938455 * S_MntSweetProducts + -0.21006970062531 * 
S_MonthsAsCustomer + 0.2955774677605 * S_NumDealsPurchases + -0.15769947513958 * 
S_NumWebVisitsMonth + -0.02874776268384 * S_RFMstat + -0.3955429869434 * S_RMntFrq + 
0.3744122250079 * S_Recency + 0.58295521976226 * S_Teenhome ;
1213632   +   H14  =    -0.22800152627721 * S_AcceptedCmpTotal  +     0.27991667815594 *
1213633   +        S_Age  +     0.89001922321833 * S_Frq  +     0.17467731177386 *
1213634   +        S_Income  +    -0.00985947331416 * S_Kidhome
1213635   +          +    -0.27114701164817 * S_MntFishProducts
1213636   +          +     0.32554392037328 * S_MntFruits  +     0.06705670808471 *
1213637   +        S_MntGoldProds  +     -0.3590087223323 * S_MntSweetProducts
1213638   +          +    -0.02702818828921 * S_MonthsAsCustomer
1213639   +          +    -0.63381188911946 * S_NumDealsPurchases
1213640   +          +    -0.86143000704363 * S_NumWebVisitsMonth
1213641   +          +    -0.16788755655818 * S_RFMstat  +    -0.09712800982817 *
1213642   +        S_RMntFrq  +     0.61892338869919 * S_Recency
1213643   +          +    -0.21544816860839 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = -0.22800152627721 * S_AcceptedCmpTotal + 0.27991667815594 * S_Age 
+ 0.89001922321833 * S_Frq + 0.17467731177386 * S_Income + -0.00985947331416 * S_Kidhome + 
-0.27114701164817 * S_MntFishProducts + 0.32554392037328 * S_MntFruits + 0.06705670808471 * 
S_MntGoldProds + -0.3590087223323 * S_MntSweetProducts + -0.02702818828921 * 
S_MonthsAsCustomer + -0.63381188911946 * S_NumDealsPurchases + -0.86143000704363 * 
S_NumWebVisitsMonth + -0.16788755655818 * S_RFMstat + -0.09712800982817 * S_RMntFrq + 
0.61892338869919 * S_Recency + -0.21544816860839 * S_Teenhome ;
1213644   +   H15  =      0.0846389232492 * S_AcceptedCmpTotal  +    -0.03933692648164 *
1213645   +        S_Age  +     0.26004669807852 * S_Frq  +     0.30306661543325 *
1213646   +        S_Income  +    -0.24206929946772 * S_Kidhome
1213647   +          +    -0.19039689229491 * S_MntFishProducts
1213648   +          +    -0.22957509816007 * S_MntFruits  +    -0.35006912387254 *
1213649   +        S_MntGoldProds  +    -0.02737135204648 * S_MntSweetProducts
1213650   +          +     0.03815221487927 * S_MonthsAsCustomer
1213651   +          +    -0.43579024169696 * S_NumDealsPurchases
1213652   +          +    -0.27796253880432 * S_NumWebVisitsMonth
1213653   +          +     0.15010895791429 * S_RFMstat  +     0.24377797912725 *
1213654   +        S_RMntFrq  +     0.50547916383425 * S_Recency
1213655   +          +    -0.22622962943787 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H15 = 0.0846389232492 * S_AcceptedCmpTotal + -0.03933692648164 * S_Age + 
0.26004669807852 * S_Frq + 0.30306661543325 * S_Income + -0.24206929946772 * S_Kidhome + 
-0.19039689229491 * S_MntFishProducts + -0.22957509816007 * S_MntFruits + -0.35006912387254 * 
S_MntGoldProds + -0.02737135204648 * S_MntSweetProducts + 0.03815221487927 * 
S_MonthsAsCustomer + -0.43579024169696 * S_NumDealsPurchases + -0.27796253880432 * 
S_NumWebVisitsMonth + 0.15010895791429 * S_RFMstat + 0.24377797912725 * S_RMntFrq + 
0.50547916383425 * S_Recency + -0.22622962943787 * S_Teenhome ;
1213656   +   H16  =     0.03788304209102 * S_AcceptedCmpTotal  +    -0.27022676521755 *
1213657   +        S_Age  +    -0.17480141247917 * S_Frq  +     0.53345624791204 *
1213658   +        S_Income  +    -0.25736924536467 * S_Kidhome
1213659   +          +    -0.04400855145817 * S_MntFishProducts
1213660   +          +    -0.06651358259718 * S_MntFruits  +     -0.0117104183032 *
1213661   +        S_MntGoldProds  +    -0.02790266219853 * S_MntSweetProducts
1213662   +          +     0.00265986106691 * S_MonthsAsCustomer
1213663   +          +     0.27331919080312 * S_NumDealsPurchases
1213664   +          +     0.22836119952787 * S_NumWebVisitsMonth
1213665   +          +     0.09245783028838 * S_RFMstat  +     0.10223459152488 *
1213666   +        S_RMntFrq  +    -0.90398250269857 * S_Recency
1213667   +          +     -0.2621421532112 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H16 = 0.03788304209102 * S_AcceptedCmpTotal + -0.27022676521755 * S_Age 
+ -0.17480141247917 * S_Frq + 0.53345624791204 * S_Income + -0.25736924536467 * S_Kidhome + 
-0.04400855145817 * S_MntFishProducts + -0.06651358259718 * S_MntFruits + -0.0117104183032 * 
S_MntGoldProds + -0.02790266219853 * S_MntSweetProducts + 0.00265986106691 * 
S_MonthsAsCustomer + 0.27331919080312 * S_NumDealsPurchases + 0.22836119952787 * 
S_NumWebVisitsMonth + 0.09245783028838 * S_RFMstat + 0.10223459152488 * S_RMntFrq + 
-0.90398250269857 * S_Recency + -0.2621421532112 * S_Teenhome ;
1213668   +   H11  = H11  +     0.24155985997122 * AcceptedCmp10
1213669   +          +     0.02727843300562 * AcceptedCmp20  +     0.05990453920581 *
1213670   +        AcceptedCmp30  +    -0.43469138041411 * AcceptedCmp40
1213671   +          +     0.00076050589964 * AcceptedCmp50  +     0.43307119233671 *
1213672   +        Complain0  +     0.23242177664865 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.24155985997122 * AcceptedCmp10 + 0.02727843300562 * 
AcceptedCmp20 + 0.05990453920581 * AcceptedCmp30 + -0.43469138041411 * AcceptedCmp40 + 
0.00076050589964 * AcceptedCmp50 + 0.43307119233671 * Complain0 + 0.23242177664865 * 
HigherEducationBinary0 ;
1213673   +   H12  = H12  +     0.04034689771488 * AcceptedCmp10
1213674   +          +    -0.01358747117911 * AcceptedCmp20  +    -0.29883922116453 *
1213675   +        AcceptedCmp30  +     0.58794258522438 * AcceptedCmp40
1213676   +          +    -0.40659406037079 * AcceptedCmp50  +     0.59068991602469 *
1213677   +        Complain0  +     -0.3122461557933 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.04034689771488 * AcceptedCmp10 + -0.01358747117911 * 
AcceptedCmp20 + -0.29883922116453 * AcceptedCmp30 + 0.58794258522438 * AcceptedCmp40 + 
-0.40659406037079 * AcceptedCmp50 + 0.59068991602469 * Complain0 + -0.3122461557933 * 
HigherEducationBinary0 ;
1213678   +   H13  = H13  +     0.49941486221932 * AcceptedCmp10
1213679   +          +     0.42891153022885 * AcceptedCmp20  +     0.28744085742243 *
1213680   +        AcceptedCmp30  +     0.54657253664873 * AcceptedCmp40
1213681   +          +     0.10655487579255 * AcceptedCmp50  +     0.11223153893952 *
1213682   +        Complain0  +    -0.44704943665138 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.49941486221932 * AcceptedCmp10 + 0.42891153022885 * 
AcceptedCmp20 + 0.28744085742243 * AcceptedCmp30 + 0.54657253664873 * AcceptedCmp40 + 
0.10655487579255 * AcceptedCmp50 + 0.11223153893952 * Complain0 + -0.44704943665138 * 
HigherEducationBinary0 ;
1213683   +   H14  = H14  +     0.70510583713907 * AcceptedCmp10
1213684   +          +     0.04052111261969 * AcceptedCmp20  +     0.76301816100625 *
1213685   +        AcceptedCmp30  +     0.09753552533639 * AcceptedCmp40
1213686   +          +     0.40999088454383 * AcceptedCmp50  +     0.19278448059725 *
1213687   +        Complain0  +     0.09127136236268 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.70510583713907 * AcceptedCmp10 + 0.04052111261969 * 
AcceptedCmp20 + 0.76301816100625 * AcceptedCmp30 + 0.09753552533639 * AcceptedCmp40 + 
0.40999088454383 * AcceptedCmp50 + 0.19278448059725 * Complain0 + 0.09127136236268 * 
HigherEducationBinary0 ;
1213688   +   H15  = H15  +     0.30535300313392 * AcceptedCmp10
1213689   +          +    -0.01605332227631 * AcceptedCmp20  +     0.09278623651632 *
1213690   +        AcceptedCmp30  +     0.03468239765482 * AcceptedCmp40
1213691   +          +     0.19720723485806 * AcceptedCmp50  +    -0.32364247007443 *
1213692   +        Complain0  +    -0.20695533150084 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.30535300313392 * AcceptedCmp10 + -0.01605332227631 * 
AcceptedCmp20 + 0.09278623651632 * AcceptedCmp30 + 0.03468239765482 * AcceptedCmp40 + 
0.19720723485806 * AcceptedCmp50 + -0.32364247007443 * Complain0 + -0.20695533150084 * 
HigherEducationBinary0 ;
1213693   +   H16  = H16  +    -0.19354253973215 * AcceptedCmp10
1213694   +          +     0.01566685138596 * AcceptedCmp20  +    -0.28250218144785 *
1213695   +        AcceptedCmp30  +    -0.13118265240955 * AcceptedCmp40
1213696   +          +    -0.03808858956936 * AcceptedCmp50  +    -0.19850701105147 *
1213697   +        Complain0  +     0.14297616111345 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H16 = H16 + -0.19354253973215 * AcceptedCmp10 + 0.01566685138596 * 
AcceptedCmp20 + -0.28250218144785 * AcceptedCmp30 + -0.13118265240955 * AcceptedCmp40 + 
-0.03808858956936 * AcceptedCmp50 + -0.19850701105147 * Complain0 + 0.14297616111345 * 
HigherEducationBinary0 ;
1213698   +   H11  = H11  +     0.05082493200436 * Education2n_Cycle
1213699   +          +    -0.08192239267323 * EducationBasic  +    -0.01445849926378 *
1213700   +        EducationGraduation  +     0.01459143816519 * EducationMaster
1213701   +          +     0.12502276672336 * Marital_StatusDivorced
1213702   +          +    -0.02606508453741 * Marital_StatusMarried
1213703   +          +      0.0418850245266 * Marital_StatusSingle
1213704   +          +     0.02050996572132 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.05082493200436 * Education2n_Cycle + -0.08192239267323 * 
EducationBasic + -0.01445849926378 * EducationGraduation + 0.01459143816519 * EducationMaster 
+ 0.12502276672336 * Marital_StatusDivorced + -0.02606508453741 * Marital_StatusMarried + 
0.0418850245266 * Marital_StatusSingle + 0.02050996572132 * Marital_StatusTogether ;
1213705   +   H12  = H12  +     -0.1900759238575 * Education2n_Cycle
1213706   +          +     0.13535241443003 * EducationBasic  +    -0.00199771592906 *
1213707   +        EducationGraduation  +     0.00476193515914 * EducationMaster
1213708   +          +      0.1943860669795 * Marital_StatusDivorced
1213709   +          +     -0.1529596261268 * Marital_StatusMarried
1213710   +          +     0.24187461301348 * Marital_StatusSingle
1213711   +          +     0.09157538589749 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.1900759238575 * Education2n_Cycle + 0.13535241443003 * 
EducationBasic + -0.00199771592906 * EducationGraduation + 0.00476193515914 * EducationMaster 
+ 0.1943860669795 * Marital_StatusDivorced + -0.1529596261268 * Marital_StatusMarried + 
0.24187461301348 * Marital_StatusSingle + 0.09157538589749 * Marital_StatusTogether ;
1213712   +   H13  = H13  +     0.02140936656506 * Education2n_Cycle
1213713   +          +     0.05845427475503 * EducationBasic  +    -0.44298208278895 *
1213714   +        EducationGraduation  +     0.17149477011717 * EducationMaster
1213715   +          +    -0.19677652422622 * Marital_StatusDivorced
1213716   +          +     0.75897106429478 * Marital_StatusMarried
1213717   +          +    -0.66692260284833 * Marital_StatusSingle
1213718   +          +     0.58287349221333 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.02140936656506 * Education2n_Cycle + 0.05845427475503 * 
EducationBasic + -0.44298208278895 * EducationGraduation + 0.17149477011717 * EducationMaster 
+ -0.19677652422622 * Marital_StatusDivorced + 0.75897106429478 * Marital_StatusMarried + 
-0.66692260284833 * Marital_StatusSingle + 0.58287349221333 * Marital_StatusTogether ;
1213719   +   H14  = H14  +     0.18801855635785 * Education2n_Cycle
1213720   +          +    -0.06231007239836 * EducationBasic  +    -0.26915940640311 *
1213721   +        EducationGraduation  +    -0.30689797876717 * EducationMaster
1213722   +          +    -0.18964222971122 * Marital_StatusDivorced
1213723   +          +    -0.15222045956879 * Marital_StatusMarried
1213724   +          +     0.15455795695595 * Marital_StatusSingle
1213725   +          +    -0.04060840399479 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.18801855635785 * Education2n_Cycle + -0.06231007239836 * 
EducationBasic + -0.26915940640311 * EducationGraduation + -0.30689797876717 * EducationMaster 
+ -0.18964222971122 * Marital_StatusDivorced + -0.15222045956879 * Marital_StatusMarried + 
0.15455795695595 * Marital_StatusSingle + -0.04060840399479 * Marital_StatusTogether ;
1213726   +   H15  = H15  +    -0.12131367369042 * Education2n_Cycle
1213727   +          +     0.20547688844423 * EducationBasic  +     0.04965529549437 *
1213728   +        EducationGraduation  +    -0.21811990669176 * EducationMaster
1213729   +          +    -0.10122776921995 * Marital_StatusDivorced
1213730   +          +     0.14126755564161 * Marital_StatusMarried
1213731   +          +    -0.18463644418978 * Marital_StatusSingle
1213732   +          +     0.23071597384519 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + -0.12131367369042 * Education2n_Cycle + 0.20547688844423 * 
EducationBasic + 0.04965529549437 * EducationGraduation + -0.21811990669176 * EducationMaster 
+ -0.10122776921995 * Marital_StatusDivorced + 0.14126755564161 * Marital_StatusMarried + 
-0.18463644418978 * Marital_StatusSingle + 0.23071597384519 * Marital_StatusTogether ;
1213733   +   H16  = H16  +     0.02961881390411 * Education2n_Cycle
1213734   +          +    -0.46228434914367 * EducationBasic  +    -0.08513280071643 *
1213735   +        EducationGraduation  +    -0.20159542694386 * EducationMaster
1213736   +          +     0.05009431660662 * Marital_StatusDivorced
1213737   +          +    -0.38407798045329 * Marital_StatusMarried
1213738   +          +      0.3035257398654 * Marital_StatusSingle
1213739   +          +    -0.27725923319119 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.02961881390411 * Education2n_Cycle + -0.46228434914367 * 
EducationBasic + -0.08513280071643 * EducationGraduation + -0.20159542694386 * EducationMaster 
+ 0.05009431660662 * Marital_StatusDivorced + -0.38407798045329 * Marital_StatusMarried + 
0.3035257398654 * Marital_StatusSingle + -0.27725923319119 * Marital_StatusTogether ;
1213740   +   H11  =      1.3960587011002 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 1.3960587011002 + H11 ;
1213741   +   H12  =     0.18947019063375 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.18947019063375 + H12 ;
1213742   +   H13  =     0.55907472867898 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = 0.55907472867898 + H13 ;
1213743   +   H14  =     0.28336290184268 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 0.28336290184268 + H14 ;
1213744   +   H15  =     1.08919536550159 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = 1.08919536550159 + H15 ;
1213745   +   H16  =    -0.22538308534609 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = -0.22538308534609 + H16 ;
1213746   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1213747   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1213748   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1213749   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1213750   +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
1213751   +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
1213752   +END;
MPRINT(EM_DIAGRAM):   END;
1213753   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1213754   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1213755   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1213756   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1213757   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1213758   +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
1213759   +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
1213760   +END;
MPRINT(EM_DIAGRAM):   END;
1213761   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1213762   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1213763   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1213764   +
1213765   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1213766   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1213767   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1213768   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1213769   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1213770   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1213771   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1213772   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1213773   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1213774   +end;
MPRINT(EM_DIAGRAM):   end;
1213775   +else do;
MPRINT(EM_DIAGRAM):   else do;
1213776   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1213777   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1213778   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1213779   +   end;
MPRINT(EM_DIAGRAM):   end;
1213780   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1213781   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1213782   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1213783   +   end;
MPRINT(EM_DIAGRAM):   end;
1213784   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1213785   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1213786   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1213787   +   end;
MPRINT(EM_DIAGRAM):   end;
1213788   +end;
MPRINT(EM_DIAGRAM):   end;
1213789   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1213790   +   P_DepVar1  =      1.1921632715983 * H11  +     2.38386446186622 * H12
1213791   +          +    -2.42409896638067 * H13  +    -2.19084949788904 * H14
1213792   +          +      -0.380575449439 * H15  +     1.17350595805971 * H16 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 1.1921632715983 * H11 + 2.38386446186622 * H12 + 
-2.42409896638067 * H13 + -2.19084949788904 * H14 + -0.380575449439 * H15 + 1.17350595805971 * 
H16 ;
1213793   +   P_DepVar1  =    -1.70154799161574 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.70154799161574 + P_DepVar1 ;
1213794   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1213795   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1213796   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1213797   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1213798   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1213799   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1213800   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1213801   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1213802   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1213803   +END;
MPRINT(EM_DIAGRAM):   END;
1213804   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1213805   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1213806   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1213807   +END;
MPRINT(EM_DIAGRAM):   END;
1213808   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1213809   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1213810   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1213811   +END;
MPRINT(EM_DIAGRAM):   END;
1213812   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1213813   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1213814   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1213815   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1213816   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1213817   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1213818   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1213819   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1213820   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1213821   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1213822   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1213823   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1213824   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1213825   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1213826   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1213827   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1213828   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1213829   +END;
MPRINT(EM_DIAGRAM):   END;
1213830   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1213831   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1213832   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1213833   +drop
1213834   +H11
1213835   +H12
1213836   +H13
1213837   +H14
1213838   +H15
1213839   +H16
1213840   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 ;
1213841   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1213842   +* Renaming variables for Neural41;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural41;
1213843   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1213844   +* Renaming Posterior variables for Neural41;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural41;
1213845   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1213846   +drop Neural41_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural41_P_DepVar1;
1213847   +Neural41_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural41_P_DepVar1 = P_DepVar1;
1213848   +drop Neural41_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural41_P_DepVar0;
1213849   +Neural41_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural41_P_DepVar0 = P_DepVar0;
1213850   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1213851   +* Renaming _WARN_ variable for Neural41;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural41;
1213852   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1213853   +length Neural41_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural41_WARN_ $4;
1213854   +drop Neural41_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural41_WARN_;
1213855   +Neural41_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural41_WARN_ = _WARN_;
1213856   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1213857   +* Ensmbl12: Scoring Code of model 7 of 10;
MPRINT(EM_DIAGRAM):   * Ensmbl12: Scoring Code of model 7 of 10;
1213858   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1213859   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1213860   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
1213861   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1213862   +* NODE: Neural36;
MPRINT(EM_DIAGRAM):   * NODE: Neural36;
1213863   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1213864   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1213865   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1213866   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1213867   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1213868   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1213869   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1213870   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1213871   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1213872   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1213873   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1213874   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1213875   +LENGTH _WARN_ $4
1213876   +      F_DepVar  $ 12
1213877   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1213878   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1213879   +
1213880   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1213881   +
1213882   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1213883   +
1213884   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1213885   +
1213886   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1213887   +
1213888   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1213889   +
1213890   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1213891   +
1213892   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1213893   +
1213894   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1213895   +
1213896   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1213897   +
1213898   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1213899   +
1213900   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1213901   +
1213902   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1213903   +
1213904   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1213905   +
1213906   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1213907   +
1213908   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1213909   +
1213910   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1213911   +
1213912   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1213913   +
1213914   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1213915   +
1213916   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1213917   +
1213918   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1213919   +
1213920   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1213921   +
1213922   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1213923   +
1213924   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1213925   +
1213926   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1213927   +
1213928   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1213929   +
1213930   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1213931   +
1213932   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1213933   +
1213934   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1213935   +
1213936   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1213937   +
1213938   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1213939   +
1213940   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1213941   +
1213942   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1213943   +
1213944   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1213945   +
1213946   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1213947   +
1213948   +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
1213949   +
1213950   +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
1213951   +
1213952   +      label H17 = 'Hidden: H1=7' ;
MPRINT(EM_DIAGRAM):   label H17 = 'Hidden: H1=7' ;
1213953   +
1213954   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1213955   +
1213956   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1213957   +
1213958   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1213959   +
1213960   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1213961   +
1213962   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1213963   +
1213964   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1213965   +
1213966   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1213967   +
1213968   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1213969   +
1213970   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1213971   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1213972   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1213973   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1213974   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1213975   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1213976   +end;
MPRINT(EM_DIAGRAM):   end;
1213977   +else do;
MPRINT(EM_DIAGRAM):   else do;
1213978   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1213979   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1213980   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1213981   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1213982   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1213983   +   end;
MPRINT(EM_DIAGRAM):   end;
1213984   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1213985   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1213986   +   end;
MPRINT(EM_DIAGRAM):   end;
1213987   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1213988   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1213989   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1213990   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1213991   +   end;
MPRINT(EM_DIAGRAM):   end;
1213992   +end;
MPRINT(EM_DIAGRAM):   end;
1213993   +
1213994   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1213995   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1213996   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1213997   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1213998   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1213999   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1214000   +end;
MPRINT(EM_DIAGRAM):   end;
1214001   +else do;
MPRINT(EM_DIAGRAM):   else do;
1214002   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1214003   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1214004   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1214005   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1214006   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1214007   +   end;
MPRINT(EM_DIAGRAM):   end;
1214008   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1214009   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1214010   +   end;
MPRINT(EM_DIAGRAM):   end;
1214011   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1214012   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1214013   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1214014   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1214015   +   end;
MPRINT(EM_DIAGRAM):   end;
1214016   +end;
MPRINT(EM_DIAGRAM):   end;
1214017   +
1214018   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1214019   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1214020   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1214021   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1214022   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1214023   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1214024   +end;
MPRINT(EM_DIAGRAM):   end;
1214025   +else do;
MPRINT(EM_DIAGRAM):   else do;
1214026   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1214027   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1214028   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1214029   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1214030   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1214031   +   end;
MPRINT(EM_DIAGRAM):   end;
1214032   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1214033   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1214034   +   end;
MPRINT(EM_DIAGRAM):   end;
1214035   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1214036   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1214037   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1214038   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1214039   +   end;
MPRINT(EM_DIAGRAM):   end;
1214040   +end;
MPRINT(EM_DIAGRAM):   end;
1214041   +
1214042   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1214043   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1214044   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1214045   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1214046   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1214047   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1214048   +end;
MPRINT(EM_DIAGRAM):   end;
1214049   +else do;
MPRINT(EM_DIAGRAM):   else do;
1214050   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1214051   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1214052   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1214053   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1214054   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1214055   +   end;
MPRINT(EM_DIAGRAM):   end;
1214056   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1214057   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1214058   +   end;
MPRINT(EM_DIAGRAM):   end;
1214059   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1214060   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1214061   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1214062   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1214063   +   end;
MPRINT(EM_DIAGRAM):   end;
1214064   +end;
MPRINT(EM_DIAGRAM):   end;
1214065   +
1214066   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1214067   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1214068   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1214069   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1214070   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1214071   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1214072   +end;
MPRINT(EM_DIAGRAM):   end;
1214073   +else do;
MPRINT(EM_DIAGRAM):   else do;
1214074   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1214075   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1214076   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1214077   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1214078   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1214079   +   end;
MPRINT(EM_DIAGRAM):   end;
1214080   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1214081   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1214082   +   end;
MPRINT(EM_DIAGRAM):   end;
1214083   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1214084   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1214085   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1214086   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1214087   +   end;
MPRINT(EM_DIAGRAM):   end;
1214088   +end;
MPRINT(EM_DIAGRAM):   end;
1214089   +
1214090   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1214091   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1214092   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1214093   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1214094   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1214095   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1214096   +end;
MPRINT(EM_DIAGRAM):   end;
1214097   +else do;
MPRINT(EM_DIAGRAM):   else do;
1214098   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1214099   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1214100   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1214101   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1214102   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1214103   +   end;
MPRINT(EM_DIAGRAM):   end;
1214104   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1214105   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1214106   +   end;
MPRINT(EM_DIAGRAM):   end;
1214107   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1214108   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1214109   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1214110   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1214111   +   end;
MPRINT(EM_DIAGRAM):   end;
1214112   +end;
MPRINT(EM_DIAGRAM):   end;
1214113   +
1214114   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1214115   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1214116   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1214117   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1214118   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1214119   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1214120   +end;
MPRINT(EM_DIAGRAM):   end;
1214121   +else do;
MPRINT(EM_DIAGRAM):   else do;
1214122   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1214123   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1214124   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1214125   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1214126   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1214127   +   end;
MPRINT(EM_DIAGRAM):   end;
1214128   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1214129   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1214130   +   end;
MPRINT(EM_DIAGRAM):   end;
1214131   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1214132   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1214133   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1214134   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1214135   +   end;
MPRINT(EM_DIAGRAM):   end;
1214136   +end;
MPRINT(EM_DIAGRAM):   end;
1214137   +
1214138   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1214139   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
1214140   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1214141   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1214142   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1214143   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1214144   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1214145   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1214146   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1214147   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1214148   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1214149   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1214150   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1214151   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1214152   +end;
MPRINT(EM_DIAGRAM):   end;
1214153   +else do;
MPRINT(EM_DIAGRAM):   else do;
1214154   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1214155   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1214156   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1214157   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1214158   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1214159   +   end;
MPRINT(EM_DIAGRAM):   end;
1214160   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1214161   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1214162   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1214163   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1214164   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1214165   +   end;
MPRINT(EM_DIAGRAM):   end;
1214166   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1214167   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1214168   +   end;
MPRINT(EM_DIAGRAM):   end;
1214169   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1214170   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1214171   +   end;
MPRINT(EM_DIAGRAM):   end;
1214172   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1214173   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1214174   +   end;
MPRINT(EM_DIAGRAM):   end;
1214175   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1214176   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1214177   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1214178   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1214179   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1214180   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1214181   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1214182   +   end;
MPRINT(EM_DIAGRAM):   end;
1214183   +end;
MPRINT(EM_DIAGRAM):   end;
1214184   +
1214185   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1214186   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1214187   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
1214188   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1214189   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1214190   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1214191   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1214192   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1214193   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1214194   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1214195   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1214196   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1214197   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1214198   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1214199   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1214200   +end;
MPRINT(EM_DIAGRAM):   end;
1214201   +else do;
MPRINT(EM_DIAGRAM):   else do;
1214202   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1214203   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1214204   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1214205   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1214206   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1214207   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1214208   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1214209   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1214210   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1214211   +         end;
MPRINT(EM_DIAGRAM):   end;
1214212   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1214213   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1214214   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1214215   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1214216   +            end;
MPRINT(EM_DIAGRAM):   end;
1214217   +         end;
MPRINT(EM_DIAGRAM):   end;
1214218   +      end;
MPRINT(EM_DIAGRAM):   end;
1214219   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1214220   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1214221   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1214222   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1214223   +         end;
MPRINT(EM_DIAGRAM):   end;
1214224   +      end;
MPRINT(EM_DIAGRAM):   end;
1214225   +   end;
MPRINT(EM_DIAGRAM):   end;
1214226   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1214227   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1214228   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1214229   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1214230   +      end;
MPRINT(EM_DIAGRAM):   end;
1214231   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1214232   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1214233   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1214234   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1214235   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1214236   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1214237   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1214238   +         end;
MPRINT(EM_DIAGRAM):   end;
1214239   +      end;
MPRINT(EM_DIAGRAM):   end;
1214240   +   end;
MPRINT(EM_DIAGRAM):   end;
1214241   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1214242   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1214243   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1214244   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1214245   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1214246   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1214247   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1214248   +   end;
MPRINT(EM_DIAGRAM):   end;
1214249   +end;
MPRINT(EM_DIAGRAM):   end;
1214250   +
1214251   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1214252   +*** Checking missing input Interval
1214253   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1214254   +
1214255   +IF NMISS(
1214256   +   AcceptedCmpTotal ,
1214257   +   Age ,
1214258   +   Frq ,
1214259   +   Income ,
1214260   +   Kidhome ,
1214261   +   MntFishProducts ,
1214262   +   MntFruits ,
1214263   +   MntGoldProds ,
1214264   +   MntSweetProducts ,
1214265   +   MonthsAsCustomer ,
1214266   +   NumDealsPurchases ,
1214267   +   NumWebVisitsMonth ,
1214268   +   RFMstat ,
1214269   +   RMntFrq ,
1214270   +   Recency ,
1214271   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , 
MntFishProducts , MntFruits , MntGoldProds , MntSweetProducts , MonthsAsCustomer , 
NumDealsPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , Teenhome ) THEN DO;
1214272   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1214273   +
1214274   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1214275   +END;
MPRINT(EM_DIAGRAM):   END;
1214276   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1214277   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1214278   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1214279   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1214280   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1214281   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1214282   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1214283   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1214284   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1214285   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1214286   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1214287   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1214288   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1214289   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1214290   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1214291   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1214292   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1214293   +   S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
1214294   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
1214295   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1214296   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1214297   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1214298   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1214299   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1214300   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1214301   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1214302   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1214303   +END;
MPRINT(EM_DIAGRAM):   END;
1214304   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1214305   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1214306   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1214307   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1214308   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1214309   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1214310   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1214311   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1214312   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1214313   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1214314   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1214315   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1214316   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1214317   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1214318   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1214319   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1214320   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1214321   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1214322   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1214323   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1214324   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1214325   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1214326   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1214327   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1214328   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1214329   +   ELSE S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
1214330   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
1214331   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1214332   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1214333   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1214334   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1214335   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1214336   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1214337   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1214338   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1214339   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1214340   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1214341   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1214342   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1214343   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1214344   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1214345   +END;
MPRINT(EM_DIAGRAM):   END;
1214346   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1214347   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1214348   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1214349   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1214350   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1214351   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1214352   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1214353   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1214354   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1214355   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1214356   +   H11  =     0.36102409886134 * S_AcceptedCmpTotal  +     0.13395156650326 *
1214357   +        S_Age  +    -0.24538302428059 * S_Frq  +    -0.11572058197557 *
1214358   +        S_Income  +     0.21790378443814 * S_Kidhome
1214359   +          +    -0.08134586316395 * S_MntFishProducts
1214360   +          +     -0.2688648060203 * S_MntFruits  +    -0.25880035211038 *
1214361   +        S_MntGoldProds  +     0.07531502626045 * S_MntSweetProducts
1214362   +          +     0.21726816930291 * S_MonthsAsCustomer
1214363   +          +    -0.21824241156847 * S_NumDealsPurchases
1214364   +          +     0.07727563921761 * S_NumWebVisitsMonth
1214365   +          +     0.09027808324069 * S_RFMstat  +     -0.0189462843628 *
1214366   +        S_RMntFrq  +     0.15658915596853 * S_Recency
1214367   +          +     0.18680606168417 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.36102409886134 * S_AcceptedCmpTotal + 0.13395156650326 * S_Age + 
-0.24538302428059 * S_Frq + -0.11572058197557 * S_Income + 0.21790378443814 * S_Kidhome + 
-0.08134586316395 * S_MntFishProducts + -0.2688648060203 * S_MntFruits + -0.25880035211038 * 
S_MntGoldProds + 0.07531502626045 * S_MntSweetProducts + 0.21726816930291 * S_MonthsAsCustomer 
+ -0.21824241156847 * S_NumDealsPurchases + 0.07727563921761 * S_NumWebVisitsMonth + 
0.09027808324069 * S_RFMstat + -0.0189462843628 * S_RMntFrq + 0.15658915596853 * S_Recency + 
0.18680606168417 * S_Teenhome ;
1214368   +   H12  =    -0.50461866181934 * S_AcceptedCmpTotal  +     0.01266437730767 *
1214369   +        S_Age  +     0.02534169432751 * S_Frq  +    -0.89441458532035 *
1214370   +        S_Income  +    -0.51036141680293 * S_Kidhome
1214371   +          +     0.10879858722875 * S_MntFishProducts
1214372   +          +    -0.05639987269313 * S_MntFruits  +    -0.43702228668285 *
1214373   +        S_MntGoldProds  +     0.18909754042399 * S_MntSweetProducts
1214374   +          +    -0.11392977531374 * S_MonthsAsCustomer
1214375   +          +     -0.5318843752274 * S_NumDealsPurchases
1214376   +          +    -0.65796537312585 * S_NumWebVisitsMonth
1214377   +          +    -0.29571612685484 * S_RFMstat  +     -0.0801458884647 *
1214378   +        S_RMntFrq  +     0.73429478940872 * S_Recency
1214379   +          +     0.28950334189528 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -0.50461866181934 * S_AcceptedCmpTotal + 0.01266437730767 * S_Age 
+ 0.02534169432751 * S_Frq + -0.89441458532035 * S_Income + -0.51036141680293 * S_Kidhome + 
0.10879858722875 * S_MntFishProducts + -0.05639987269313 * S_MntFruits + -0.43702228668285 * 
S_MntGoldProds + 0.18909754042399 * S_MntSweetProducts + -0.11392977531374 * 
S_MonthsAsCustomer + -0.5318843752274 * S_NumDealsPurchases + -0.65796537312585 * 
S_NumWebVisitsMonth + -0.29571612685484 * S_RFMstat + -0.0801458884647 * S_RMntFrq + 
0.73429478940872 * S_Recency + 0.28950334189528 * S_Teenhome ;
1214380   +   H13  =    -0.22612994964695 * S_AcceptedCmpTotal  +     0.04392639924073 *
1214381   +        S_Age  +     0.32974877429932 * S_Frq  +    -0.26990824722212 *
1214382   +        S_Income  +     0.59254092901621 * S_Kidhome
1214383   +          +    -0.20448500725841 * S_MntFishProducts
1214384   +          +     0.09904900315476 * S_MntFruits  +     0.33085368683805 *
1214385   +        S_MntGoldProds  +     0.19272280339022 * S_MntSweetProducts
1214386   +          +     0.75084411765835 * S_MonthsAsCustomer
1214387   +          +     -0.0387146296237 * S_NumDealsPurchases
1214388   +          +    -0.28387522584505 * S_NumWebVisitsMonth
1214389   +          +    -0.15204072409221 * S_RFMstat  +     0.09340123133096 *
1214390   +        S_RMntFrq  +     0.82636976290684 * S_Recency
1214391   +          +     0.37810091232378 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = -0.22612994964695 * S_AcceptedCmpTotal + 0.04392639924073 * S_Age 
+ 0.32974877429932 * S_Frq + -0.26990824722212 * S_Income + 0.59254092901621 * S_Kidhome + 
-0.20448500725841 * S_MntFishProducts + 0.09904900315476 * S_MntFruits + 0.33085368683805 * 
S_MntGoldProds + 0.19272280339022 * S_MntSweetProducts + 0.75084411765835 * S_MonthsAsCustomer 
+ -0.0387146296237 * S_NumDealsPurchases + -0.28387522584505 * S_NumWebVisitsMonth + 
-0.15204072409221 * S_RFMstat + 0.09340123133096 * S_RMntFrq + 0.82636976290684 * S_Recency + 
0.37810091232378 * S_Teenhome ;
1214392   +   H14  =    -0.30228547708859 * S_AcceptedCmpTotal  +     0.03241560550242 *
1214393   +        S_Age  +     0.84298653991521 * S_Frq  +     0.08457309547848 *
1214394   +        S_Income  +    -0.00122834275949 * S_Kidhome
1214395   +          +    -0.27566379985337 * S_MntFishProducts
1214396   +          +     0.22439349557664 * S_MntFruits  +     -0.2238462316234 *
1214397   +        S_MntGoldProds  +     0.10162320730644 * S_MntSweetProducts
1214398   +          +    -0.04164317708211 * S_MonthsAsCustomer
1214399   +          +    -0.69362879353268 * S_NumDealsPurchases
1214400   +          +    -0.42590146496797 * S_NumWebVisitsMonth
1214401   +          +    -0.14963136795323 * S_RFMstat  +    -0.12684701620224 *
1214402   +        S_RMntFrq  +     0.84758472963267 * S_Recency
1214403   +          +     0.11712588251204 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = -0.30228547708859 * S_AcceptedCmpTotal + 0.03241560550242 * S_Age 
+ 0.84298653991521 * S_Frq + 0.08457309547848 * S_Income + -0.00122834275949 * S_Kidhome + 
-0.27566379985337 * S_MntFishProducts + 0.22439349557664 * S_MntFruits + -0.2238462316234 * 
S_MntGoldProds + 0.10162320730644 * S_MntSweetProducts + -0.04164317708211 * 
S_MonthsAsCustomer + -0.69362879353268 * S_NumDealsPurchases + -0.42590146496797 * 
S_NumWebVisitsMonth + -0.14963136795323 * S_RFMstat + -0.12684701620224 * S_RMntFrq + 
0.84758472963267 * S_Recency + 0.11712588251204 * S_Teenhome ;
1214404   +   H15  =    -0.07826142783822 * S_AcceptedCmpTotal  +     0.02869519269506 *
1214405   +        S_Age  +     0.47709626753648 * S_Frq  +     0.77626478438802 *
1214406   +        S_Income  +    -0.52116533001423 * S_Kidhome
1214407   +          +     -0.0164127050263 * S_MntFishProducts
1214408   +          +    -0.21044074963391 * S_MntFruits  +    -0.01106715629962 *
1214409   +        S_MntGoldProds  +    -0.04742180634458 * S_MntSweetProducts
1214410   +          +     0.24190773546087 * S_MonthsAsCustomer
1214411   +          +    -0.20709839635746 * S_NumDealsPurchases
1214412   +          +    -0.03892039672539 * S_NumWebVisitsMonth
1214413   +          +     0.01844174922581 * S_RFMstat  +     0.33852543335405 *
1214414   +        S_RMntFrq  +    -0.44935213795722 * S_Recency
1214415   +          +     -0.6298368435821 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H15 = -0.07826142783822 * S_AcceptedCmpTotal + 0.02869519269506 * S_Age 
+ 0.47709626753648 * S_Frq + 0.77626478438802 * S_Income + -0.52116533001423 * S_Kidhome + 
-0.0164127050263 * S_MntFishProducts + -0.21044074963391 * S_MntFruits + -0.01106715629962 * 
S_MntGoldProds + -0.04742180634458 * S_MntSweetProducts + 0.24190773546087 * 
S_MonthsAsCustomer + -0.20709839635746 * S_NumDealsPurchases + -0.03892039672539 * 
S_NumWebVisitsMonth + 0.01844174922581 * S_RFMstat + 0.33852543335405 * S_RMntFrq + 
-0.44935213795722 * S_Recency + -0.6298368435821 * S_Teenhome ;
1214416   +   H16  =    -0.38278200147216 * S_AcceptedCmpTotal  +     0.10976543329989 *
1214417   +        S_Age  +    -0.17634499366273 * S_Frq  +    -0.00464219628456 *
1214418   +        S_Income  +     0.02656798188894 * S_Kidhome
1214419   +          +     0.30126647035438 * S_MntFishProducts
1214420   +          +    -0.15329042297108 * S_MntFruits  +     0.34485619618635 *
1214421   +        S_MntGoldProds  +    -0.02131109278943 * S_MntSweetProducts
1214422   +          +     0.02225077975252 * S_MonthsAsCustomer
1214423   +          +    -0.25574607065737 * S_NumDealsPurchases
1214424   +          +    -0.17649073415066 * S_NumWebVisitsMonth
1214425   +          +    -0.05940264496746 * S_RFMstat  +    -0.10060551243835 *
1214426   +        S_RMntFrq  +    -0.26823576982436 * S_Recency
1214427   +          +    -0.02089829217347 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H16 = -0.38278200147216 * S_AcceptedCmpTotal + 0.10976543329989 * S_Age 
+ -0.17634499366273 * S_Frq + -0.00464219628456 * S_Income + 0.02656798188894 * S_Kidhome + 
0.30126647035438 * S_MntFishProducts + -0.15329042297108 * S_MntFruits + 0.34485619618635 * 
S_MntGoldProds + -0.02131109278943 * S_MntSweetProducts + 0.02225077975252 * 
S_MonthsAsCustomer + -0.25574607065737 * S_NumDealsPurchases + -0.17649073415066 * 
S_NumWebVisitsMonth + -0.05940264496746 * S_RFMstat + -0.10060551243835 * S_RMntFrq + 
-0.26823576982436 * S_Recency + -0.02089829217347 * S_Teenhome ;
1214428   +   H17  =     0.19294816663728 * S_AcceptedCmpTotal  +    -0.36492507147362 *
1214429   +        S_Age  +     -0.5026822541815 * S_Frq  +    -0.48143237402929 *
1214430   +        S_Income  +     0.24859715564668 * S_Kidhome
1214431   +          +    -0.25170385966484 * S_MntFishProducts
1214432   +          +     0.32613161868695 * S_MntFruits  +     0.13394374893255 *
1214433   +        S_MntGoldProds  +     0.48416151380913 * S_MntSweetProducts
1214434   +          +     0.05219342683802 * S_MonthsAsCustomer
1214435   +          +     0.43291262348863 * S_NumDealsPurchases
1214436   +          +     0.56350506449265 * S_NumWebVisitsMonth
1214437   +          +     0.07050038692379 * S_RFMstat  +     0.09321760948671 *
1214438   +        S_RMntFrq  +      -0.582152401129 * S_Recency
1214439   +          +     0.37123217787922 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H17 = 0.19294816663728 * S_AcceptedCmpTotal + -0.36492507147362 * S_Age 
+ -0.5026822541815 * S_Frq + -0.48143237402929 * S_Income + 0.24859715564668 * S_Kidhome + 
-0.25170385966484 * S_MntFishProducts + 0.32613161868695 * S_MntFruits + 0.13394374893255 * 
S_MntGoldProds + 0.48416151380913 * S_MntSweetProducts + 0.05219342683802 * S_MonthsAsCustomer 
+ 0.43291262348863 * S_NumDealsPurchases + 0.56350506449265 * S_NumWebVisitsMonth + 
0.07050038692379 * S_RFMstat + 0.09321760948671 * S_RMntFrq + -0.582152401129 * S_Recency + 
0.37123217787922 * S_Teenhome ;
1214440   +   H11  = H11  +     0.19124500210188 * AcceptedCmp10
1214441   +          +    -0.07164186578541 * AcceptedCmp20  +     0.21783016367597 *
1214442   +        AcceptedCmp30  +     0.21148394728435 * AcceptedCmp40
1214443   +          +    -0.03026880266191 * AcceptedCmp50  +    -0.07201946966594 *
1214444   +        Complain0  +     0.01809478462337 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.19124500210188 * AcceptedCmp10 + -0.07164186578541 * 
AcceptedCmp20 + 0.21783016367597 * AcceptedCmp30 + 0.21148394728435 * AcceptedCmp40 + 
-0.03026880266191 * AcceptedCmp50 + -0.07201946966594 * Complain0 + 0.01809478462337 * 
HigherEducationBinary0 ;
1214445   +   H12  = H12  +    -0.08224648561215 * AcceptedCmp10
1214446   +          +    -0.04262229291512 * AcceptedCmp20  +     0.31730600734378 *
1214447   +        AcceptedCmp30  +    -0.50103336510524 * AcceptedCmp40
1214448   +          +     0.14654032457963 * AcceptedCmp50  +     -0.3081029727525 *
1214449   +        Complain0  +     0.33420373179467 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.08224648561215 * AcceptedCmp10 + -0.04262229291512 * 
AcceptedCmp20 + 0.31730600734378 * AcceptedCmp30 + -0.50103336510524 * AcceptedCmp40 + 
0.14654032457963 * AcceptedCmp50 + -0.3081029727525 * Complain0 + 0.33420373179467 * 
HigherEducationBinary0 ;
1214450   +   H13  = H13  +     -0.2675286852338 * AcceptedCmp10
1214451   +          +     0.00293684627092 * AcceptedCmp20  +     0.17042784679702 *
1214452   +        AcceptedCmp30  +    -0.03300348487228 * AcceptedCmp40
1214453   +          +     0.18139562224546 * AcceptedCmp50  +     -0.5876653777255 *
1214454   +        Complain0  +      -0.348312724013 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.2675286852338 * AcceptedCmp10 + 0.00293684627092 * 
AcceptedCmp20 + 0.17042784679702 * AcceptedCmp30 + -0.03300348487228 * AcceptedCmp40 + 
0.18139562224546 * AcceptedCmp50 + -0.5876653777255 * Complain0 + -0.348312724013 * 
HigherEducationBinary0 ;
1214455   +   H14  = H14  +     0.62345895952335 * AcceptedCmp10
1214456   +          +     0.06420128732689 * AcceptedCmp20  +     0.32944172885024 *
1214457   +        AcceptedCmp30  +    -0.04719511461619 * AcceptedCmp40
1214458   +          +     0.61833640682482 * AcceptedCmp50  +     -0.0006656764006 *
1214459   +        Complain0  +    -0.12356778452039 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.62345895952335 * AcceptedCmp10 + 0.06420128732689 * 
AcceptedCmp20 + 0.32944172885024 * AcceptedCmp30 + -0.04719511461619 * AcceptedCmp40 + 
0.61833640682482 * AcceptedCmp50 + -0.0006656764006 * Complain0 + -0.12356778452039 * 
HigherEducationBinary0 ;
1214460   +   H15  = H15  +    -0.43202592233127 * AcceptedCmp10
1214461   +          +    -0.35346067325701 * AcceptedCmp20  +    -0.29446055239371 *
1214462   +        AcceptedCmp30  +     -0.6355060868005 * AcceptedCmp40
1214463   +          +     0.08763000125481 * AcceptedCmp50  +    -0.55439066852712 *
1214464   +        Complain0  +     0.37078134908454 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + -0.43202592233127 * AcceptedCmp10 + -0.35346067325701 * 
AcceptedCmp20 + -0.29446055239371 * AcceptedCmp30 + -0.6355060868005 * AcceptedCmp40 + 
0.08763000125481 * AcceptedCmp50 + -0.55439066852712 * Complain0 + 0.37078134908454 * 
HigherEducationBinary0 ;
1214465   +   H16  = H16  +    -0.10522820178908 * AcceptedCmp10
1214466   +          +     0.20645125728354 * AcceptedCmp20  +     0.34040121966792 *
1214467   +        AcceptedCmp30  +    -0.02259616994399 * AcceptedCmp40
1214468   +          +    -0.22123397523195 * AcceptedCmp50  +    -0.37258892216723 *
1214469   +        Complain0  +     0.14107103807235 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H16 = H16 + -0.10522820178908 * AcceptedCmp10 + 0.20645125728354 * 
AcceptedCmp20 + 0.34040121966792 * AcceptedCmp30 + -0.02259616994399 * AcceptedCmp40 + 
-0.22123397523195 * AcceptedCmp50 + -0.37258892216723 * Complain0 + 0.14107103807235 * 
HigherEducationBinary0 ;
1214470   +   H17  = H17  +    -0.09096203784003 * AcceptedCmp10
1214471   +          +    -0.04735484605229 * AcceptedCmp20  +     -0.4485810761844 *
1214472   +        AcceptedCmp30  +     0.10362320405529 * AcceptedCmp40
1214473   +          +    -0.05214433990448 * AcceptedCmp50  +    -0.19339827696554 *
1214474   +        Complain0  +    -0.21246690264814 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H17 = H17 + -0.09096203784003 * AcceptedCmp10 + -0.04735484605229 * 
AcceptedCmp20 + -0.4485810761844 * AcceptedCmp30 + 0.10362320405529 * AcceptedCmp40 + 
-0.05214433990448 * AcceptedCmp50 + -0.19339827696554 * Complain0 + -0.21246690264814 * 
HigherEducationBinary0 ;
1214475   +   H11  = H11  +    -0.16759278562529 * Education2n_Cycle
1214476   +          +    -0.31449574789464 * EducationBasic  +     0.13281408830843 *
1214477   +        EducationGraduation  +      0.0199258483942 * EducationMaster
1214478   +          +     0.03245181998921 * Marital_StatusDivorced
1214479   +          +     0.29722741247663 * Marital_StatusMarried
1214480   +          +    -0.05683085497262 * Marital_StatusSingle
1214481   +          +     0.27914630307932 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.16759278562529 * Education2n_Cycle + -0.31449574789464 * 
EducationBasic + 0.13281408830843 * EducationGraduation + 0.0199258483942 * EducationMaster + 
0.03245181998921 * Marital_StatusDivorced + 0.29722741247663 * Marital_StatusMarried + 
-0.05683085497262 * Marital_StatusSingle + 0.27914630307932 * Marital_StatusTogether ;
1214482   +   H12  = H12  +    -0.10709422401859 * Education2n_Cycle
1214483   +          +     0.25457515905931 * EducationBasic  +    -0.26018740430941 *
1214484   +        EducationGraduation  +     0.05808954602972 * EducationMaster
1214485   +          +    -0.13095826187081 * Marital_StatusDivorced
1214486   +          +     0.29509760197193 * Marital_StatusMarried
1214487   +          +    -0.21019918550166 * Marital_StatusSingle
1214488   +          +     0.12557122666089 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.10709422401859 * Education2n_Cycle + 0.25457515905931 * 
EducationBasic + -0.26018740430941 * EducationGraduation + 0.05808954602972 * EducationMaster 
+ -0.13095826187081 * Marital_StatusDivorced + 0.29509760197193 * Marital_StatusMarried + 
-0.21019918550166 * Marital_StatusSingle + 0.12557122666089 * Marital_StatusTogether ;
1214489   +   H13  = H13  +     0.16189957128414 * Education2n_Cycle
1214490   +          +    -0.08593025695878 * EducationBasic  +     0.11065463845302 *
1214491   +        EducationGraduation  +    -0.23434271231945 * EducationMaster
1214492   +          +     0.03746692643939 * Marital_StatusDivorced
1214493   +          +     0.03482798841727 * Marital_StatusMarried
1214494   +          +     0.16645207250571 * Marital_StatusSingle
1214495   +          +    -0.40169040281111 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.16189957128414 * Education2n_Cycle + -0.08593025695878 * 
EducationBasic + 0.11065463845302 * EducationGraduation + -0.23434271231945 * EducationMaster 
+ 0.03746692643939 * Marital_StatusDivorced + 0.03482798841727 * Marital_StatusMarried + 
0.16645207250571 * Marital_StatusSingle + -0.40169040281111 * Marital_StatusTogether ;
1214496   +   H14  = H14  +      0.0929589076858 * Education2n_Cycle
1214497   +          +     0.17576896755796 * EducationBasic  +    -0.08548079761525 *
1214498   +        EducationGraduation  +     -0.0086494793343 * EducationMaster
1214499   +          +     -0.0753971504765 * Marital_StatusDivorced
1214500   +          +     0.20446719655724 * Marital_StatusMarried
1214501   +          +     0.21472836757686 * Marital_StatusSingle
1214502   +          +     0.25097210445128 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.0929589076858 * Education2n_Cycle + 0.17576896755796 * 
EducationBasic + -0.08548079761525 * EducationGraduation + -0.0086494793343 * EducationMaster 
+ -0.0753971504765 * Marital_StatusDivorced + 0.20446719655724 * Marital_StatusMarried + 
0.21472836757686 * Marital_StatusSingle + 0.25097210445128 * Marital_StatusTogether ;
1214503   +   H15  = H15  +     0.05613706593293 * Education2n_Cycle
1214504   +          +     0.15733773983498 * EducationBasic  +     0.18710928885666 *
1214505   +        EducationGraduation  +    -0.40226962940436 * EducationMaster
1214506   +          +     0.16191937298215 * Marital_StatusDivorced
1214507   +          +    -0.81780658848614 * Marital_StatusMarried
1214508   +          +     0.84981159748349 * Marital_StatusSingle
1214509   +          +    -0.81246154443713 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.05613706593293 * Education2n_Cycle + 0.15733773983498 * 
EducationBasic + 0.18710928885666 * EducationGraduation + -0.40226962940436 * EducationMaster 
+ 0.16191937298215 * Marital_StatusDivorced + -0.81780658848614 * Marital_StatusMarried + 
0.84981159748349 * Marital_StatusSingle + -0.81246154443713 * Marital_StatusTogether ;
1214510   +   H16  = H16  +    -0.15143146742513 * Education2n_Cycle
1214511   +          +    -0.32039616194876 * EducationBasic  +     0.14759493683433 *
1214512   +        EducationGraduation  +    -0.24148020292763 * EducationMaster
1214513   +          +    -0.01766312280073 * Marital_StatusDivorced
1214514   +          +     0.04455346003394 * Marital_StatusMarried
1214515   +          +    -0.05433982251127 * Marital_StatusSingle
1214516   +          +     0.07585750304293 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H16 = H16 + -0.15143146742513 * Education2n_Cycle + -0.32039616194876 * 
EducationBasic + 0.14759493683433 * EducationGraduation + -0.24148020292763 * EducationMaster 
+ -0.01766312280073 * Marital_StatusDivorced + 0.04455346003394 * Marital_StatusMarried + 
-0.05433982251127 * Marital_StatusSingle + 0.07585750304293 * Marital_StatusTogether ;
1214517   +   H17  = H17  +    -0.18844639887236 * Education2n_Cycle
1214518   +          +     0.31793429928185 * EducationBasic  +     0.21885580860665 *
1214519   +        EducationGraduation  +      0.1367538666381 * EducationMaster
1214520   +          +        0.22905595967 * Marital_StatusDivorced
1214521   +          +      0.1024998677695 * Marital_StatusMarried
1214522   +          +    -0.07752101768018 * Marital_StatusSingle
1214523   +          +    -0.19408218868635 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H17 = H17 + -0.18844639887236 * Education2n_Cycle + 0.31793429928185 * 
EducationBasic + 0.21885580860665 * EducationGraduation + 0.1367538666381 * EducationMaster + 
0.22905595967 * Marital_StatusDivorced + 0.1024998677695 * Marital_StatusMarried + 
-0.07752101768018 * Marital_StatusSingle + -0.19408218868635 * Marital_StatusTogether ;
1214524   +   H11  =     1.31548476078312 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 1.31548476078312 + H11 ;
1214525   +   H12  =     0.20389286508203 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.20389286508203 + H12 ;
1214526   +   H13  =    -0.77820109969785 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.77820109969785 + H13 ;
1214527   +   H14  =     0.85462770897247 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 0.85462770897247 + H14 ;
1214528   +   H15  =    -0.15190484788676 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = -0.15190484788676 + H15 ;
1214529   +   H16  =     -0.7146854381659 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = -0.7146854381659 + H16 ;
1214530   +   H17  =    -1.06220893322882 + H17 ;
MPRINT(EM_DIAGRAM):   H17 = -1.06220893322882 + H17 ;
1214531   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1214532   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1214533   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1214534   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1214535   +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
1214536   +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
1214537   +   H17  = TANH(H17 );
MPRINT(EM_DIAGRAM):   H17 = TANH(H17 );
1214538   +END;
MPRINT(EM_DIAGRAM):   END;
1214539   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1214540   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1214541   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1214542   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1214543   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1214544   +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
1214545   +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
1214546   +   H17  = .;
MPRINT(EM_DIAGRAM):   H17 = .;
1214547   +END;
MPRINT(EM_DIAGRAM):   END;
1214548   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1214549   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1214550   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1214551   +
1214552   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1214553   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1214554   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1214555   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1214556   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1214557   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1214558   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1214559   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1214560   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1214561   +end;
MPRINT(EM_DIAGRAM):   end;
1214562   +else do;
MPRINT(EM_DIAGRAM):   else do;
1214563   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1214564   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1214565   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1214566   +   end;
MPRINT(EM_DIAGRAM):   end;
1214567   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1214568   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1214569   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1214570   +   end;
MPRINT(EM_DIAGRAM):   end;
1214571   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1214572   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1214573   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1214574   +   end;
MPRINT(EM_DIAGRAM):   end;
1214575   +end;
MPRINT(EM_DIAGRAM):   end;
1214576   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1214577   +   P_DepVar1  =    -0.11628699177184 * H11  +    -2.70843270240794 * H12
1214578   +          +    -1.81814079406916 * H13  +    -1.84852165774564 * H14
1214579   +          +     2.53533827620448 * H15  +    -0.20106950795136 * H16
1214580   +          +     1.26058098194871 * H17 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.11628699177184 * H11 + -2.70843270240794 * H12 + 
-1.81814079406916 * H13 + -1.84852165774564 * H14 + 2.53533827620448 * H15 + -0.20106950795136 
* H16 + 1.26058098194871 * H17 ;
1214581   +   P_DepVar1  =    -1.66152267043508 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.66152267043508 + P_DepVar1 ;
1214582   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1214583   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1214584   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1214585   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1214586   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1214587   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1214588   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1214589   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1214590   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1214591   +END;
MPRINT(EM_DIAGRAM):   END;
1214592   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1214593   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1214594   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1214595   +END;
MPRINT(EM_DIAGRAM):   END;
1214596   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1214597   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1214598   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1214599   +END;
MPRINT(EM_DIAGRAM):   END;
1214600   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1214601   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1214602   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1214603   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1214604   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1214605   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1214606   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1214607   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1214608   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1214609   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1214610   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1214611   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1214612   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1214613   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1214614   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1214615   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1214616   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1214617   +END;
MPRINT(EM_DIAGRAM):   END;
1214618   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1214619   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1214620   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1214621   +drop
1214622   +H11
1214623   +H12
1214624   +H13
1214625   +H14
1214626   +H15
1214627   +H16
1214628   +H17
1214629   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 H17 ;
1214630   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1214631   +* Renaming variables for Neural36;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural36;
1214632   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1214633   +* Renaming Posterior variables for Neural36;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural36;
1214634   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1214635   +drop Neural36_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural36_P_DepVar1;
1214636   +Neural36_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural36_P_DepVar1 = P_DepVar1;
1214637   +drop Neural36_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural36_P_DepVar0;
1214638   +Neural36_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural36_P_DepVar0 = P_DepVar0;
1214639   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1214640   +* Renaming _WARN_ variable for Neural36;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural36;
1214641   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1214642   +length Neural36_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural36_WARN_ $4;
1214643   +drop Neural36_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural36_WARN_;
1214644   +Neural36_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural36_WARN_ = _WARN_;
1214645   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1214646   +* Ensmbl12: Scoring Code of model 8 of 10;
MPRINT(EM_DIAGRAM):   * Ensmbl12: Scoring Code of model 8 of 10;
1214647   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1214648   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1214649   +* TOOL: Decision Tree;
MPRINT(EM_DIAGRAM):   * TOOL: Decision Tree;
1214650   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1214651   +* NODE: Tree6;
MPRINT(EM_DIAGRAM):   * NODE: Tree6;
1214652   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1214653   +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
1214654   +******             DECISION TREE SCORING CODE             ******;
MPRINT(EM_DIAGRAM):   ****** DECISION TREE SCORING CODE ******;
1214655   +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
1214656   +
1214657   +******         LENGTHS OF NEW CHARACTER VARIABLES         ******;
MPRINT(EM_DIAGRAM):   ****** LENGTHS OF NEW CHARACTER VARIABLES ******;
1214658   +LENGTH F_DepVar  $   12;
MPRINT(EM_DIAGRAM):   LENGTH F_DepVar $ 12;
1214659   +LENGTH I_DepVar  $   12;
MPRINT(EM_DIAGRAM):   LENGTH I_DepVar $ 12;
1214660   +LENGTH _WARN_  $    4;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $ 4;
1214661   +
1214662   +******              LABELS FOR NEW VARIABLES              ******;
MPRINT(EM_DIAGRAM):   ****** LABELS FOR NEW VARIABLES ******;
1214663   +LABEL _NODE_  = 'Node' ;
MPRINT(EM_DIAGRAM):   LABEL _NODE_ = 'Node' ;
1214664   +LABEL _LEAF_  = 'Leaf' ;
MPRINT(EM_DIAGRAM):   LABEL _LEAF_ = 'Leaf' ;
1214665   +LABEL P_DepVar0  = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   LABEL P_DepVar0 = 'Predicted: DepVar=0' ;
1214666   +LABEL P_DepVar1  = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   LABEL P_DepVar1 = 'Predicted: DepVar=1' ;
1214667   +LABEL Q_DepVar0  = 'Unadjusted P: DepVar=0' ;
MPRINT(EM_DIAGRAM):   LABEL Q_DepVar0 = 'Unadjusted P: DepVar=0' ;
1214668   +LABEL Q_DepVar1  = 'Unadjusted P: DepVar=1' ;
MPRINT(EM_DIAGRAM):   LABEL Q_DepVar1 = 'Unadjusted P: DepVar=1' ;
1214669   +LABEL V_DepVar0  = 'Validated: DepVar=0' ;
MPRINT(EM_DIAGRAM):   LABEL V_DepVar0 = 'Validated: DepVar=0' ;
1214670   +LABEL V_DepVar1  = 'Validated: DepVar=1' ;
MPRINT(EM_DIAGRAM):   LABEL V_DepVar1 = 'Validated: DepVar=1' ;
1214671   +LABEL R_DepVar0  = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   LABEL R_DepVar0 = 'Residual: DepVar=0' ;
1214672   +LABEL R_DepVar1  = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   LABEL R_DepVar1 = 'Residual: DepVar=1' ;
1214673   +LABEL F_DepVar  = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   LABEL F_DepVar = 'From: DepVar' ;
1214674   +LABEL I_DepVar  = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   LABEL I_DepVar = 'Into: DepVar' ;
1214675   +LABEL U_DepVar  = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   LABEL U_DepVar = 'Unnormalized Into: DepVar' ;
1214676   +LABEL _WARN_  = 'Warnings' ;
MPRINT(EM_DIAGRAM):   LABEL _WARN_ = 'Warnings' ;
1214677   +
1214678   +
1214679   +******      TEMPORARY VARIABLES FOR FORMATTED VALUES      ******;
MPRINT(EM_DIAGRAM):   ****** TEMPORARY VARIABLES FOR FORMATTED VALUES ******;
1214680   +LENGTH _ARBFMT_12 $     12; DROP _ARBFMT_12;
MPRINT(EM_DIAGRAM):   LENGTH _ARBFMT_12 $ 12;
MPRINT(EM_DIAGRAM):   DROP _ARBFMT_12;
1214681   +_ARBFMT_12 = ' '; /* Initialize to avoid warning. */
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = ' ';
1214682   +LENGTH _ARBFMT_8 $      8; DROP _ARBFMT_8;
MPRINT(EM_DIAGRAM):   LENGTH _ARBFMT_8 $ 8;
MPRINT(EM_DIAGRAM):   DROP _ARBFMT_8;
1214683   +_ARBFMT_8 = ' '; /* Initialize to avoid warning. */
MPRINT(EM_DIAGRAM):   _ARBFMT_8 = ' ';
1214684   +
1214685   +
1214686   +_ARBFMT_12 = PUT( DepVar , BEST.);
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( DepVar , BEST.);
1214687   + %DMNORMCP( _ARBFMT_12, F_DepVar );
MPRINT(DMNORMCP):   F_DepVar=dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1214688   +
1214689   +******             ASSIGN OBSERVATION TO NODE             ******;
MPRINT(EM_DIAGRAM):   ****** ASSIGN OBSERVATION TO NODE ******;
1214690   +IF  NOT MISSING(AcceptedCmpTotal ) AND
1214691   +                   0.5 <= AcceptedCmpTotal  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(AcceptedCmpTotal ) AND 0.5 <= AcceptedCmpTotal THEN DO;
1214692   +  IF  NOT MISSING(Recency ) AND
1214693   +    Recency  <                 38.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(Recency ) AND Recency < 38.5 THEN DO;
1214694   +    IF  NOT MISSING(AcceptedCmpTotal ) AND
1214695   +                       1.5 <= AcceptedCmpTotal  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(AcceptedCmpTotal ) AND 1.5 <= AcceptedCmpTotal THEN DO;
1214696   +      _NODE_  =                   13;
MPRINT(EM_DIAGRAM):   _NODE_ = 13;
1214697   +      _LEAF_  =                   11;
MPRINT(EM_DIAGRAM):   _LEAF_ = 11;
1214698   +      P_DepVar0  =     0.05263157894736;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.05263157894736;
1214699   +      P_DepVar1  =     0.94736842105263;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.94736842105263;
1214700   +      Q_DepVar0  =     0.05263157894736;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.05263157894736;
1214701   +      Q_DepVar1  =     0.94736842105263;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.94736842105263;
1214702   +      V_DepVar0  =                    0;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0;
1214703   +      V_DepVar1  =                    1;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 1;
1214704   +      I_DepVar  = '1' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '1' ;
1214705   +      U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1214706   +      END;
MPRINT(EM_DIAGRAM):   END;
1214707   +    ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1214708   +      _ARBFMT_8 = PUT( Marital_Status , $8.);
MPRINT(EM_DIAGRAM):   _ARBFMT_8 = PUT( Marital_Status , $8.);
1214709   +       %DMNORMIP( _ARBFMT_8);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
1214710   +      IF _ARBFMT_8 IN ('WIDOW' ,'DIVORCED' ,'SINGLE' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_8 IN ('WIDOW' ,'DIVORCED' ,'SINGLE' ) THEN DO;
1214711   +        _NODE_  =                   25;
MPRINT(EM_DIAGRAM):   _NODE_ = 25;
1214712   +        _LEAF_  =                   10;
MPRINT(EM_DIAGRAM):   _LEAF_ = 10;
1214713   +        P_DepVar0  =      0.2258064516129;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.2258064516129;
1214714   +        P_DepVar1  =     0.77419354838709;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.77419354838709;
1214715   +        Q_DepVar0  =      0.2258064516129;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.2258064516129;
1214716   +        Q_DepVar1  =     0.77419354838709;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.77419354838709;
1214717   +        V_DepVar0  =     0.41935483870967;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.41935483870967;
1214718   +        V_DepVar1  =     0.58064516129032;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.58064516129032;
1214719   +        I_DepVar  = '1' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '1' ;
1214720   +        U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1214721   +        END;
MPRINT(EM_DIAGRAM):   END;
1214722   +      ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1214723   +        IF  NOT MISSING(Kidhome ) AND
1214724   +                           0.5 <= Kidhome  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(Kidhome ) AND 0.5 <= Kidhome THEN DO;
1214725   +          _NODE_  =                   39;
MPRINT(EM_DIAGRAM):   _NODE_ = 39;
1214726   +          _LEAF_  =                    9;
MPRINT(EM_DIAGRAM):   _LEAF_ = 9;
1214727   +          P_DepVar0  =               0.3125;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.3125;
1214728   +          P_DepVar1  =               0.6875;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.6875;
1214729   +          Q_DepVar0  =               0.3125;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.3125;
1214730   +          Q_DepVar1  =               0.6875;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.6875;
1214731   +          V_DepVar0  =     0.23076923076923;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.23076923076923;
1214732   +          V_DepVar1  =     0.76923076923076;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.76923076923076;
1214733   +          I_DepVar  = '1' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '1' ;
1214734   +          U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1214735   +          END;
MPRINT(EM_DIAGRAM):   END;
1214736   +        ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1214737   +          IF  NOT MISSING(RFMstat ) AND
1214738   +                2448.04945054945 <= RFMstat  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(RFMstat ) AND 2448.04945054945 <= RFMstat THEN DO;
1214739   +            _NODE_  =                   51;
MPRINT(EM_DIAGRAM):   _NODE_ = 51;
1214740   +            _LEAF_  =                    8;
MPRINT(EM_DIAGRAM):   _LEAF_ = 8;
1214741   +            P_DepVar0  =     0.23529411764705;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.23529411764705;
1214742   +            P_DepVar1  =     0.76470588235294;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.76470588235294;
1214743   +            Q_DepVar0  =     0.23529411764705;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.23529411764705;
1214744   +            Q_DepVar1  =     0.76470588235294;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.76470588235294;
1214745   +            V_DepVar0  =     0.42857142857142;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.42857142857142;
1214746   +            V_DepVar1  =     0.57142857142857;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.57142857142857;
1214747   +            I_DepVar  = '1' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '1' ;
1214748   +            U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1214749   +            END;
MPRINT(EM_DIAGRAM):   END;
1214750   +          ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1214751   +            _NODE_  =                   50;
MPRINT(EM_DIAGRAM):   _NODE_ = 50;
1214752   +            _LEAF_  =                    7;
MPRINT(EM_DIAGRAM):   _LEAF_ = 7;
1214753   +            P_DepVar0  =      0.8076923076923;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.8076923076923;
1214754   +            P_DepVar1  =     0.19230769230769;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.19230769230769;
1214755   +            Q_DepVar0  =      0.8076923076923;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.8076923076923;
1214756   +            Q_DepVar1  =     0.19230769230769;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.19230769230769;
1214757   +            V_DepVar0  =     0.78260869565217;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.78260869565217;
1214758   +            V_DepVar1  =     0.21739130434782;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.21739130434782;
1214759   +            I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
1214760   +            U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1214761   +            END;
MPRINT(EM_DIAGRAM):   END;
1214762   +          END;
MPRINT(EM_DIAGRAM):   END;
1214763   +        END;
MPRINT(EM_DIAGRAM):   END;
1214764   +      END;
MPRINT(EM_DIAGRAM):   END;
1214765   +    END;
MPRINT(EM_DIAGRAM):   END;
1214766   +  ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1214767   +    IF  NOT MISSING(AcceptedCmpTotal ) AND
1214768   +                       2.5 <= AcceptedCmpTotal  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(AcceptedCmpTotal ) AND 2.5 <= AcceptedCmpTotal THEN DO;
1214769   +      _NODE_  =                   15;
MPRINT(EM_DIAGRAM):   _NODE_ = 15;
1214770   +      _LEAF_  =                   13;
MPRINT(EM_DIAGRAM):   _LEAF_ = 13;
1214771   +      P_DepVar0  =      0.3103448275862;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.3103448275862;
1214772   +      P_DepVar1  =     0.68965517241379;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.68965517241379;
1214773   +      Q_DepVar0  =      0.3103448275862;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.3103448275862;
1214774   +      Q_DepVar1  =     0.68965517241379;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.68965517241379;
1214775   +      V_DepVar0  =     0.33333333333333;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.33333333333333;
1214776   +      V_DepVar1  =     0.66666666666666;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.66666666666666;
1214777   +      I_DepVar  = '1' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '1' ;
1214778   +      U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1214779   +      END;
MPRINT(EM_DIAGRAM):   END;
1214780   +    ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1214781   +      _NODE_  =                   14;
MPRINT(EM_DIAGRAM):   _NODE_ = 14;
1214782   +      _LEAF_  =                   12;
MPRINT(EM_DIAGRAM):   _LEAF_ = 12;
1214783   +      P_DepVar0  =     0.82562277580071;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.82562277580071;
1214784   +      P_DepVar1  =     0.17437722419928;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.17437722419928;
1214785   +      Q_DepVar0  =     0.82562277580071;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.82562277580071;
1214786   +      Q_DepVar1  =     0.17437722419928;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.17437722419928;
1214787   +      V_DepVar0  =     0.81818181818181;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.81818181818181;
1214788   +      V_DepVar1  =     0.18181818181818;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.18181818181818;
1214789   +      I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
1214790   +      U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1214791   +      END;
MPRINT(EM_DIAGRAM):   END;
1214792   +    END;
MPRINT(EM_DIAGRAM):   END;
1214793   +  END;
MPRINT(EM_DIAGRAM):   END;
1214794   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1214795   +  IF  NOT MISSING(Recency ) AND
1214796   +    Recency  <                 32.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(Recency ) AND Recency < 32.5 THEN DO;
1214797   +    IF  NOT MISSING(NumDealsPurchases ) AND
1214798   +                       5.5 <= NumDealsPurchases  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(NumDealsPurchases ) AND 5.5 <= NumDealsPurchases THEN DO;
1214799   +      IF  NOT MISSING(Frq ) AND
1214800   +        Frq  <                 13.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(Frq ) AND Frq < 13.5 THEN DO;
1214801   +        _NODE_  =                   18;
MPRINT(EM_DIAGRAM):   _NODE_ = 18;
1214802   +        _LEAF_  =                    3;
MPRINT(EM_DIAGRAM):   _LEAF_ = 3;
1214803   +        P_DepVar0  =     0.06666666666666;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.06666666666666;
1214804   +        P_DepVar1  =     0.93333333333333;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.93333333333333;
1214805   +        Q_DepVar0  =     0.06666666666666;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.06666666666666;
1214806   +        Q_DepVar1  =     0.93333333333333;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.93333333333333;
1214807   +        V_DepVar0  =                  0.2;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.2;
1214808   +        V_DepVar1  =                  0.8;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.8;
1214809   +        I_DepVar  = '1' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '1' ;
1214810   +        U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1214811   +        END;
MPRINT(EM_DIAGRAM):   END;
1214812   +      ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1214813   +        IF  NOT MISSING(RFMstat ) AND
1214814   +              1513.63146551724 <= RFMstat  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(RFMstat ) AND 1513.63146551724 <= RFMstat THEN DO;
1214815   +          _NODE_  =                   35;
MPRINT(EM_DIAGRAM):   _NODE_ = 35;
1214816   +          _LEAF_  =                    5;
MPRINT(EM_DIAGRAM):   _LEAF_ = 5;
1214817   +          P_DepVar0  =     0.16666666666666;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.16666666666666;
1214818   +          P_DepVar1  =     0.83333333333333;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.83333333333333;
1214819   +          Q_DepVar0  =     0.16666666666666;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.16666666666666;
1214820   +          Q_DepVar1  =     0.83333333333333;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.83333333333333;
1214821   +          V_DepVar0  =                 0.25;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.25;
1214822   +          V_DepVar1  =                 0.75;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.75;
1214823   +          I_DepVar  = '1' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '1' ;
1214824   +          U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1214825   +          END;
MPRINT(EM_DIAGRAM):   END;
1214826   +        ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1214827   +          _NODE_  =                   34;
MPRINT(EM_DIAGRAM):   _NODE_ = 34;
1214828   +          _LEAF_  =                    4;
MPRINT(EM_DIAGRAM):   _LEAF_ = 4;
1214829   +          P_DepVar0  =                0.875;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.875;
1214830   +          P_DepVar1  =                0.125;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.125;
1214831   +          Q_DepVar0  =                0.875;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.875;
1214832   +          Q_DepVar1  =                0.125;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.125;
1214833   +          V_DepVar0  =                  0.7;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.7;
1214834   +          V_DepVar1  =                  0.3;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.3;
1214835   +          I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
1214836   +          U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1214837   +          END;
MPRINT(EM_DIAGRAM):   END;
1214838   +        END;
MPRINT(EM_DIAGRAM):   END;
1214839   +      END;
MPRINT(EM_DIAGRAM):   END;
1214840   +    ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1214841   +      IF  NOT MISSING(RFMstat ) AND
1214842   +            5150.39285714285 <= RFMstat  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(RFMstat ) AND 5150.39285714285 <= RFMstat THEN DO;
1214843   +        _NODE_  =                   17;
MPRINT(EM_DIAGRAM):   _NODE_ = 17;
1214844   +        _LEAF_  =                    2;
MPRINT(EM_DIAGRAM):   _LEAF_ = 2;
1214845   +        P_DepVar0  =     0.38888888888888;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.38888888888888;
1214846   +        P_DepVar1  =     0.61111111111111;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.61111111111111;
1214847   +        Q_DepVar0  =     0.38888888888888;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.38888888888888;
1214848   +        Q_DepVar1  =     0.61111111111111;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.61111111111111;
1214849   +        V_DepVar0  =     0.41666666666666;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.41666666666666;
1214850   +        V_DepVar1  =     0.58333333333333;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.58333333333333;
1214851   +        I_DepVar  = '1' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '1' ;
1214852   +        U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1214853   +        END;
MPRINT(EM_DIAGRAM):   END;
1214854   +      ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1214855   +        _NODE_  =                   16;
MPRINT(EM_DIAGRAM):   _NODE_ = 16;
1214856   +        _LEAF_  =                    1;
MPRINT(EM_DIAGRAM):   _LEAF_ = 1;
1214857   +        P_DepVar0  =     0.84547069271758;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84547069271758;
1214858   +        P_DepVar1  =     0.15452930728241;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15452930728241;
1214859   +        Q_DepVar0  =     0.84547069271758;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.84547069271758;
1214860   +        Q_DepVar1  =     0.15452930728241;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.15452930728241;
1214861   +        V_DepVar0  =     0.81673306772908;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.81673306772908;
1214862   +        V_DepVar1  =     0.18326693227091;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.18326693227091;
1214863   +        I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
1214864   +        U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1214865   +        END;
MPRINT(EM_DIAGRAM):   END;
1214866   +      END;
MPRINT(EM_DIAGRAM):   END;
1214867   +    END;
MPRINT(EM_DIAGRAM):   END;
1214868   +  ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1214869   +    _NODE_  =                    5;
MPRINT(EM_DIAGRAM):   _NODE_ = 5;
1214870   +    _LEAF_  =                    6;
MPRINT(EM_DIAGRAM):   _LEAF_ = 6;
1214871   +    P_DepVar0  =     0.98042414355628;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.98042414355628;
1214872   +    P_DepVar1  =     0.01957585644371;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.01957585644371;
1214873   +    Q_DepVar0  =     0.98042414355628;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.98042414355628;
1214874   +    Q_DepVar1  =     0.01957585644371;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.01957585644371;
1214875   +    V_DepVar0  =     0.98795180722891;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.98795180722891;
1214876   +    V_DepVar1  =     0.01204819277108;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.01204819277108;
1214877   +    I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
1214878   +    U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1214879   +    END;
MPRINT(EM_DIAGRAM):   END;
1214880   +  END;
MPRINT(EM_DIAGRAM):   END;
1214881   +
1214882   +*****  RESIDUALS R_ *************;
MPRINT(EM_DIAGRAM):   ***** RESIDUALS R_ *************;
1214883   +IF  F_DepVar  NE '0'
1214884   +AND F_DepVar  NE '1'  THEN DO;
MPRINT(EM_DIAGRAM):   IF F_DepVar NE '0' AND F_DepVar NE '1' THEN DO;
1214885   +        R_DepVar0  = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
1214886   +        R_DepVar1  = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
1214887   + END;
MPRINT(EM_DIAGRAM):   END;
1214888   + ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1214889   +       R_DepVar0  =  -P_DepVar0 ;
MPRINT(EM_DIAGRAM):   R_DepVar0 = -P_DepVar0 ;
1214890   +       R_DepVar1  =  -P_DepVar1 ;
MPRINT(EM_DIAGRAM):   R_DepVar1 = -P_DepVar1 ;
1214891   +       SELECT( F_DepVar  );
MPRINT(EM_DIAGRAM):   SELECT( F_DepVar );
1214892   +          WHEN( '0'  ) R_DepVar0  = R_DepVar0  +1;
MPRINT(EM_DIAGRAM):   WHEN( '0' ) R_DepVar0 = R_DepVar0 +1;
1214893   +          WHEN( '1'  ) R_DepVar1  = R_DepVar1  +1;
MPRINT(EM_DIAGRAM):   WHEN( '1' ) R_DepVar1 = R_DepVar1 +1;
1214894   +       END;
MPRINT(EM_DIAGRAM):   END;
1214895   + END;
MPRINT(EM_DIAGRAM):   END;
1214896   +
1214897   +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
1214898   +******          END OF DECISION TREE SCORING CODE         ******;
MPRINT(EM_DIAGRAM):   ****** END OF DECISION TREE SCORING CODE ******;
1214899   +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
1214900   +drop _LEAF_;
MPRINT(EM_DIAGRAM):   drop _LEAF_;
1214901   +* Renaming variables for Tree6;
MPRINT(EM_DIAGRAM):   * Renaming variables for Tree6;
1214902   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1214903   +* Renaming Posterior variables for Tree6;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Tree6;
1214904   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1214905   +drop Tree6_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Tree6_P_DepVar1;
1214906   +Tree6_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Tree6_P_DepVar1 = P_DepVar1;
1214907   +drop Tree6_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Tree6_P_DepVar0;
1214908   +Tree6_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Tree6_P_DepVar0 = P_DepVar0;
1214909   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1214910   +* Renaming _WARN_ variable for Tree6;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Tree6;
1214911   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1214912   +length Tree6_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Tree6_WARN_ $4;
1214913   +drop Tree6_WARN_;
MPRINT(EM_DIAGRAM):   drop Tree6_WARN_;
1214914   +Tree6_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Tree6_WARN_ = _WARN_;
1214915   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1214916   +* Ensmbl12: Scoring Code of model 9 of 10;
MPRINT(EM_DIAGRAM):   * Ensmbl12: Scoring Code of model 9 of 10;
1214917   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1214918   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1214919   +* TOOL: Regression;
MPRINT(EM_DIAGRAM):   * TOOL: Regression;
1214920   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1214921   +* NODE: Reg12;
MPRINT(EM_DIAGRAM):   * NODE: Reg12;
1214922   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1214923   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1214924   +*** begin scoring code for regression;
MPRINT(EM_DIAGRAM):   *** begin scoring code for regression;
1214925   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1214926   +
1214927   +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
1214928   +label _WARN_ = 'Warnings' ;
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings' ;
1214929   +
1214930   +length I_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length I_DepVar $ 12;
1214931   +label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1214932   +*** Target Values;
MPRINT(EM_DIAGRAM):   *** Target Values;
1214933   +array REG12DRF [2] $12 _temporary_ ('1' '0' );
MPRINT(EM_DIAGRAM):   array REG12DRF [2] $12 _temporary_ ('1' '0' );
1214934   +label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1214935   +format U_DepVar BEST.;
MPRINT(EM_DIAGRAM):   format U_DepVar BEST.;
1214936   +*** Unnormalized target values;
MPRINT(EM_DIAGRAM):   *** Unnormalized target values;
1214937   +ARRAY REG12DRU[2]  _TEMPORARY_ (1 0);
MPRINT(EM_DIAGRAM):   ARRAY REG12DRU[2] _TEMPORARY_ (1 0);
1214938   +
1214939   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1214940   +drop _Y ;
MPRINT(EM_DIAGRAM):   drop _Y ;
1214941   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1214942   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1214943   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1214944   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1214945   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1214946   +   _Y = .;
MPRINT(EM_DIAGRAM):   _Y = .;
1214947   +end;
MPRINT(EM_DIAGRAM):   end;
1214948   +else do;
MPRINT(EM_DIAGRAM):   else do;
1214949   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1214950   +      _Y = 1;
MPRINT(EM_DIAGRAM):   _Y = 1;
1214951   +   end;
MPRINT(EM_DIAGRAM):   end;
1214952   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1214953   +      _Y = 0;
MPRINT(EM_DIAGRAM):   _Y = 0;
1214954   +   end;
MPRINT(EM_DIAGRAM):   end;
1214955   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1214956   +      _Y = .;
MPRINT(EM_DIAGRAM):   _Y = .;
1214957   +   end;
MPRINT(EM_DIAGRAM):   end;
1214958   +end;
MPRINT(EM_DIAGRAM):   end;
1214959   +
1214960   +drop _DM_BAD;
MPRINT(EM_DIAGRAM):   drop _DM_BAD;
1214961   +_DM_BAD=0;
MPRINT(EM_DIAGRAM):   _DM_BAD=0;
1214962   +
1214963   +*** Check AcceptedCmpTotal for missing values ;
MPRINT(EM_DIAGRAM):   *** Check AcceptedCmpTotal for missing values ;
1214964   +if missing( AcceptedCmpTotal ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmpTotal ) then do;
1214965   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1214966   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1214967   +end;
MPRINT(EM_DIAGRAM):   end;
1214968   +
1214969   +*** Check Age for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Age for missing values ;
1214970   +if missing( Age ) then do;
MPRINT(EM_DIAGRAM):   if missing( Age ) then do;
1214971   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1214972   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1214973   +end;
MPRINT(EM_DIAGRAM):   end;
1214974   +
1214975   +*** Check Frq for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Frq for missing values ;
1214976   +if missing( Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( Frq ) then do;
1214977   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1214978   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1214979   +end;
MPRINT(EM_DIAGRAM):   end;
1214980   +
1214981   +*** Check Income for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Income for missing values ;
1214982   +if missing( Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( Income ) then do;
1214983   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1214984   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1214985   +end;
MPRINT(EM_DIAGRAM):   end;
1214986   +
1214987   +*** Check NumDealsPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumDealsPurchases for missing values ;
1214988   +if missing( NumDealsPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumDealsPurchases ) then do;
1214989   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1214990   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1214991   +end;
MPRINT(EM_DIAGRAM):   end;
1214992   +
1214993   +*** Check NumWebVisitsMonth for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumWebVisitsMonth for missing values ;
1214994   +if missing( NumWebVisitsMonth ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumWebVisitsMonth ) then do;
1214995   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1214996   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1214997   +end;
MPRINT(EM_DIAGRAM):   end;
1214998   +
1214999   +*** Check RMntFrq for missing values ;
MPRINT(EM_DIAGRAM):   *** Check RMntFrq for missing values ;
1215000   +if missing( RMntFrq ) then do;
MPRINT(EM_DIAGRAM):   if missing( RMntFrq ) then do;
1215001   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1215002   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1215003   +end;
MPRINT(EM_DIAGRAM):   end;
1215004   +
1215005   +*** Check Recency for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Recency for missing values ;
1215006   +if missing( Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( Recency ) then do;
1215007   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1215008   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1215009   +end;
MPRINT(EM_DIAGRAM):   end;
1215010   +
1215011   +*** Check Teenhome for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Teenhome for missing values ;
1215012   +if missing( Teenhome ) then do;
MPRINT(EM_DIAGRAM):   if missing( Teenhome ) then do;
1215013   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1215014   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1215015   +end;
MPRINT(EM_DIAGRAM):   end;
1215016   +
1215017   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1215018   +drop _3_0 ;
MPRINT(EM_DIAGRAM):   drop _3_0 ;
1215019   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1215020   +   _3_0 = .;
MPRINT(EM_DIAGRAM):   _3_0 = .;
1215021   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1215022   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1215023   +end;
MPRINT(EM_DIAGRAM):   end;
1215024   +else do;
MPRINT(EM_DIAGRAM):   else do;
1215025   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1215026   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1215027   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1215028   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1215029   +      _3_0 = 1;
MPRINT(EM_DIAGRAM):   _3_0 = 1;
1215030   +   end;
MPRINT(EM_DIAGRAM):   end;
1215031   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1215032   +      _3_0 = -1;
MPRINT(EM_DIAGRAM):   _3_0 = -1;
1215033   +   end;
MPRINT(EM_DIAGRAM):   end;
1215034   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1215035   +      _3_0 = .;
MPRINT(EM_DIAGRAM):   _3_0 = .;
1215036   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1215037   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1215038   +   end;
MPRINT(EM_DIAGRAM):   end;
1215039   +end;
MPRINT(EM_DIAGRAM):   end;
1215040   +
1215041   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1215042   +drop _4_0 ;
MPRINT(EM_DIAGRAM):   drop _4_0 ;
1215043   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1215044   +   _4_0 = .;
MPRINT(EM_DIAGRAM):   _4_0 = .;
1215045   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1215046   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1215047   +end;
MPRINT(EM_DIAGRAM):   end;
1215048   +else do;
MPRINT(EM_DIAGRAM):   else do;
1215049   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1215050   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1215051   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1215052   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1215053   +      _4_0 = 1;
MPRINT(EM_DIAGRAM):   _4_0 = 1;
1215054   +   end;
MPRINT(EM_DIAGRAM):   end;
1215055   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1215056   +      _4_0 = -1;
MPRINT(EM_DIAGRAM):   _4_0 = -1;
1215057   +   end;
MPRINT(EM_DIAGRAM):   end;
1215058   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1215059   +      _4_0 = .;
MPRINT(EM_DIAGRAM):   _4_0 = .;
1215060   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1215061   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1215062   +   end;
MPRINT(EM_DIAGRAM):   end;
1215063   +end;
MPRINT(EM_DIAGRAM):   end;
1215064   +
1215065   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1215066   +drop _9_0 _9_1 _9_2 _9_3 ;
The SAS System

MPRINT(EM_DIAGRAM):   drop _9_0 _9_1 _9_2 _9_3 ;
1215067   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1215068   +_9_0 = 0;
MPRINT(EM_DIAGRAM):   _9_0 = 0;
1215069   +_9_1 = 0;
MPRINT(EM_DIAGRAM):   _9_1 = 0;
1215070   +_9_2 = 0;
MPRINT(EM_DIAGRAM):   _9_2 = 0;
1215071   +_9_3 = 0;
MPRINT(EM_DIAGRAM):   _9_3 = 0;
1215072   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1215073   +   _9_0 = .;
MPRINT(EM_DIAGRAM):   _9_0 = .;
1215074   +   _9_1 = .;
MPRINT(EM_DIAGRAM):   _9_1 = .;
1215075   +   _9_2 = .;
MPRINT(EM_DIAGRAM):   _9_2 = .;
1215076   +   _9_3 = .;
MPRINT(EM_DIAGRAM):   _9_3 = .;
1215077   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1215078   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1215079   +end;
MPRINT(EM_DIAGRAM):   end;
1215080   +else do;
MPRINT(EM_DIAGRAM):   else do;
1215081   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1215082   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1215083   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1215084   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1215085   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1215086   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1215087   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1215088   +            _9_0 = 1;
MPRINT(EM_DIAGRAM):   _9_0 = 1;
1215089   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1215090   +         end;
MPRINT(EM_DIAGRAM):   end;
1215091   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1215092   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1215093   +               _9_1 = 1;
MPRINT(EM_DIAGRAM):   _9_1 = 1;
1215094   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1215095   +            end;
MPRINT(EM_DIAGRAM):   end;
1215096   +         end;
MPRINT(EM_DIAGRAM):   end;
1215097   +      end;
MPRINT(EM_DIAGRAM):   end;
1215098   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1215099   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1215100   +            _9_2 = 1;
MPRINT(EM_DIAGRAM):   _9_2 = 1;
1215101   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1215102   +         end;
MPRINT(EM_DIAGRAM):   end;
1215103   +      end;
MPRINT(EM_DIAGRAM):   end;
1215104   +   end;
MPRINT(EM_DIAGRAM):   end;
1215105   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1215106   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1215107   +         _9_3 = 1;
MPRINT(EM_DIAGRAM):   _9_3 = 1;
1215108   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1215109   +      end;
MPRINT(EM_DIAGRAM):   end;
1215110   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1215111   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1215112   +            _9_0 = -1;
MPRINT(EM_DIAGRAM):   _9_0 = -1;
1215113   +            _9_1 = -1;
MPRINT(EM_DIAGRAM):   _9_1 = -1;
1215114   +            _9_2 = -1;
MPRINT(EM_DIAGRAM):   _9_2 = -1;
1215115   +            _9_3 = -1;
MPRINT(EM_DIAGRAM):   _9_3 = -1;
1215116   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1215117   +         end;
MPRINT(EM_DIAGRAM):   end;
1215118   +      end;
MPRINT(EM_DIAGRAM):   end;
1215119   +   end;
MPRINT(EM_DIAGRAM):   end;
1215120   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1215121   +      _9_0 = .;
MPRINT(EM_DIAGRAM):   _9_0 = .;
1215122   +      _9_1 = .;
MPRINT(EM_DIAGRAM):   _9_1 = .;
1215123   +      _9_2 = .;
MPRINT(EM_DIAGRAM):   _9_2 = .;
1215124   +      _9_3 = .;
MPRINT(EM_DIAGRAM):   _9_3 = .;
1215125   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1215126   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1215127   +   end;
MPRINT(EM_DIAGRAM):   end;
1215128   +end;
MPRINT(EM_DIAGRAM):   end;
1215129   +
1215130   +*** If missing inputs, use averages;
MPRINT(EM_DIAGRAM):   *** If missing inputs, use averages;
1215131   +if _DM_BAD > 0 then do;
MPRINT(EM_DIAGRAM):   if _DM_BAD > 0 then do;
1215132   +   _P0 = 0.151221567;
MPRINT(EM_DIAGRAM):   _P0 = 0.151221567;
1215133   +   _P1 = 0.848778433;
MPRINT(EM_DIAGRAM):   _P1 = 0.848778433;
1215134   +   goto REG12DR1;
MPRINT(EM_DIAGRAM):   goto REG12DR1;
1215135   +end;
MPRINT(EM_DIAGRAM):   end;
1215136   +
1215137   +*** Compute Linear Predictor;
MPRINT(EM_DIAGRAM):   *** Compute Linear Predictor;
1215138   +drop _TEMP;
MPRINT(EM_DIAGRAM):   drop _TEMP;
1215139   +drop _LP0;
MPRINT(EM_DIAGRAM):   drop _LP0;
1215140   +_LP0 = 0;
MPRINT(EM_DIAGRAM):   _LP0 = 0;
1215141   +
1215142   +***  Effect: AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Effect: AcceptedCmp3 ;
1215143   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1215144   +_LP0 = _LP0 + (   -0.41254575292144) * _TEMP * _3_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.41254575292144) * _TEMP * _3_0;
1215145   +
1215146   +***  Effect: AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Effect: AcceptedCmp4 ;
1215147   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1215148   +_LP0 = _LP0 + (    0.34675190501967) * _TEMP * _4_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.34675190501967) * _TEMP * _4_0;
1215149   +
1215150   +***  Effect: AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   *** Effect: AcceptedCmpTotal ;
1215151   +_TEMP = AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   _TEMP = AcceptedCmpTotal ;
1215152   +_LP0 = _LP0 + (    1.80745311910799 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.80745311910799 * _TEMP);
1215153   +
1215154   +***  Effect: Age ;
MPRINT(EM_DIAGRAM):   *** Effect: Age ;
1215155   +_TEMP = Age ;
MPRINT(EM_DIAGRAM):   _TEMP = Age ;
1215156   +_LP0 = _LP0 + (   -0.01852391433447 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.01852391433447 * _TEMP);
1215157   +
1215158   +***  Effect: Frq ;
MPRINT(EM_DIAGRAM):   *** Effect: Frq ;
1215159   +_TEMP = Frq ;
MPRINT(EM_DIAGRAM):   _TEMP = Frq ;
1215160   +_LP0 = _LP0 + (   -0.05045980295154 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.05045980295154 * _TEMP);
1215161   +
1215162   +***  Effect: Income ;
MPRINT(EM_DIAGRAM):   *** Effect: Income ;
1215163   +_TEMP = Income ;
MPRINT(EM_DIAGRAM):   _TEMP = Income ;
1215164   +_LP0 = _LP0 + (     0.0000456777011 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.0000456777011 * _TEMP);
1215165   +
1215166   +***  Effect: Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Effect: Marital_Status ;
1215167   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1215168   +_LP0 = _LP0 + (    0.19470733105664) * _TEMP * _9_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.19470733105664) * _TEMP * _9_0;
1215169   +_LP0 = _LP0 + (   -0.66737124261283) * _TEMP * _9_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.66737124261283) * _TEMP * _9_1;
1215170   +_LP0 = _LP0 + (    0.47354458382979) * _TEMP * _9_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.47354458382979) * _TEMP * _9_2;
1215171   +_LP0 = _LP0 + (   -0.76484617755918) * _TEMP * _9_3;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.76484617755918) * _TEMP * _9_3;
1215172   +
1215173   +***  Effect: NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumDealsPurchases ;
1215174   +_TEMP = NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumDealsPurchases ;
1215175   +_LP0 = _LP0 + (    0.38683487817532 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.38683487817532 * _TEMP);
1215176   +
1215177   +***  Effect: NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   *** Effect: NumWebVisitsMonth ;
1215178   +_TEMP = NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   _TEMP = NumWebVisitsMonth ;
1215179   +_LP0 = _LP0 + (    0.30399773949187 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.30399773949187 * _TEMP);
1215180   +
1215181   +***  Effect: RMntFrq ;
MPRINT(EM_DIAGRAM):   *** Effect: RMntFrq ;
1215182   +_TEMP = RMntFrq ;
MPRINT(EM_DIAGRAM):   _TEMP = RMntFrq ;
1215183   +_LP0 = _LP0 + (    0.01122718563179 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.01122718563179 * _TEMP);
1215184   +
1215185   +***  Effect: Recency ;
MPRINT(EM_DIAGRAM):   *** Effect: Recency ;
1215186   +_TEMP = Recency ;
MPRINT(EM_DIAGRAM):   _TEMP = Recency ;
1215187   +_LP0 = _LP0 + (   -0.06483187112579 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.06483187112579 * _TEMP);
1215188   +
1215189   +***  Effect: Teenhome ;
MPRINT(EM_DIAGRAM):   *** Effect: Teenhome ;
1215190   +_TEMP = Teenhome ;
MPRINT(EM_DIAGRAM):   _TEMP = Teenhome ;
1215191   +_LP0 = _LP0 + (   -1.33693437973843 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.33693437973843 * _TEMP);
1215192   +
1215193   +*** Naive Posterior Probabilities;
MPRINT(EM_DIAGRAM):   *** Naive Posterior Probabilities;
1215194   +drop _MAXP _IY _P0 _P1;
MPRINT(EM_DIAGRAM):   drop _MAXP _IY _P0 _P1;
1215195   +_TEMP =    -3.46388239032287 + _LP0;
MPRINT(EM_DIAGRAM):   _TEMP = -3.46388239032287 + _LP0;
1215196   +if (_TEMP < 0) then do;
MPRINT(EM_DIAGRAM):   if (_TEMP < 0) then do;
1215197   +   _TEMP = exp(_TEMP);
MPRINT(EM_DIAGRAM):   _TEMP = exp(_TEMP);
1215198   +   _P0 = _TEMP / (1 + _TEMP);
MPRINT(EM_DIAGRAM):   _P0 = _TEMP / (1 + _TEMP);
1215199   +end;
MPRINT(EM_DIAGRAM):   end;
1215200   +else _P0 = 1 / (1 + exp(-_TEMP));
MPRINT(EM_DIAGRAM):   else _P0 = 1 / (1 + exp(-_TEMP));
1215201   +_P1 = 1.0 - _P0;
MPRINT(EM_DIAGRAM):   _P1 = 1.0 - _P0;
1215202   +
1215203   +REG12DR1:
1215204   +
1215205   +*** Residuals;
MPRINT(EM_DIAGRAM):   REG12DR1: *** Residuals;
1215206   +if (_Y = .) then do;
MPRINT(EM_DIAGRAM):   if (_Y = .) then do;
1215207   +   R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
1215208   +   R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
1215209   +end;
MPRINT(EM_DIAGRAM):   end;
1215210   +else do;
MPRINT(EM_DIAGRAM):   else do;
1215211   +    label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1215212   +    label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1215213   +   R_DepVar1 = - _P0;
MPRINT(EM_DIAGRAM):   R_DepVar1 = - _P0;
1215214   +   R_DepVar0 = - _P1;
MPRINT(EM_DIAGRAM):   R_DepVar0 = - _P1;
1215215   +   select( _Y );
MPRINT(EM_DIAGRAM):   select( _Y );
1215216   +      when (0)  R_DepVar1 = R_DepVar1 + 1;
MPRINT(EM_DIAGRAM):   when (0) R_DepVar1 = R_DepVar1 + 1;
1215217   +      when (1)  R_DepVar0 = R_DepVar0 + 1;
MPRINT(EM_DIAGRAM):   when (1) R_DepVar0 = R_DepVar0 + 1;
1215218   +   end;
MPRINT(EM_DIAGRAM):   end;
1215219   +end;
MPRINT(EM_DIAGRAM):   end;
1215220   +
1215221   +*** Posterior Probabilities and Predicted Level;
MPRINT(EM_DIAGRAM):   *** Posterior Probabilities and Predicted Level;
1215222   +label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1215223   +label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1215224   +P_DepVar1 = _P0;
MPRINT(EM_DIAGRAM):   P_DepVar1 = _P0;
1215225   +_MAXP = _P0;
MPRINT(EM_DIAGRAM):   _MAXP = _P0;
1215226   +_IY = 1;
MPRINT(EM_DIAGRAM):   _IY = 1;
1215227   +P_DepVar0 = _P1;
MPRINT(EM_DIAGRAM):   P_DepVar0 = _P1;
1215228   +if (_P1 >  _MAXP + 1E-8) then do;
MPRINT(EM_DIAGRAM):   if (_P1 > _MAXP + 1E-8) then do;
1215229   +   _MAXP = _P1;
MPRINT(EM_DIAGRAM):   _MAXP = _P1;
1215230   +   _IY = 2;
MPRINT(EM_DIAGRAM):   _IY = 2;
1215231   +end;
MPRINT(EM_DIAGRAM):   end;
1215232   +I_DepVar = REG12DRF[_IY];
MPRINT(EM_DIAGRAM):   I_DepVar = REG12DRF[_IY];
1215233   +U_DepVar = REG12DRU[_IY];
MPRINT(EM_DIAGRAM):   U_DepVar = REG12DRU[_IY];
1215234   +
1215235   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1215236   +***** end scoring code for regression;
MPRINT(EM_DIAGRAM):   ***** end scoring code for regression;
1215237   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1215238   +* Renaming variables for Reg12;
MPRINT(EM_DIAGRAM):   * Renaming variables for Reg12;
1215239   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1215240   +* Renaming Posterior variables for Reg12;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Reg12;
1215241   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1215242   +drop Reg12_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Reg12_P_DepVar1;
1215243   +Reg12_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Reg12_P_DepVar1 = P_DepVar1;
1215244   +drop Reg12_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Reg12_P_DepVar0;
1215245   +Reg12_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Reg12_P_DepVar0 = P_DepVar0;
1215246   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1215247   +* Renaming _WARN_ variable for Reg12;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Reg12;
1215248   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1215249   +length Reg12_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Reg12_WARN_ $4;
1215250   +drop Reg12_WARN_;
MPRINT(EM_DIAGRAM):   drop Reg12_WARN_;
1215251   +Reg12_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Reg12_WARN_ = _WARN_;
1215252   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1215253   +* Ensmbl12: Scoring Code of model 10 of 10;
MPRINT(EM_DIAGRAM):   * Ensmbl12: Scoring Code of model 10 of 10;
1215254   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1215255   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1215256   +* TOOL: Regression;
MPRINT(EM_DIAGRAM):   * TOOL: Regression;
1215257   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1215258   +* NODE: Reg11;
MPRINT(EM_DIAGRAM):   * NODE: Reg11;
1215259   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1215260   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1215261   +*** begin scoring code for regression;
MPRINT(EM_DIAGRAM):   *** begin scoring code for regression;
1215262   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1215263   +
1215264   +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
1215265   +label _WARN_ = 'Warnings' ;
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings' ;
1215266   +
1215267   +length I_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length I_DepVar $ 12;
1215268   +label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1215269   +*** Target Values;
MPRINT(EM_DIAGRAM):   *** Target Values;
1215270   +array REG11DRF [2] $12 _temporary_ ('1' '0' );
MPRINT(EM_DIAGRAM):   array REG11DRF [2] $12 _temporary_ ('1' '0' );
1215271   +label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1215272   +format U_DepVar BEST.;
MPRINT(EM_DIAGRAM):   format U_DepVar BEST.;
1215273   +*** Unnormalized target values;
MPRINT(EM_DIAGRAM):   *** Unnormalized target values;
1215274   +ARRAY REG11DRU[2]  _TEMPORARY_ (1 0);
MPRINT(EM_DIAGRAM):   ARRAY REG11DRU[2] _TEMPORARY_ (1 0);
1215275   +
1215276   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1215277   +drop _Y ;
MPRINT(EM_DIAGRAM):   drop _Y ;
1215278   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1215279   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1215280   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1215281   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1215282   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1215283   +   _Y = .;
MPRINT(EM_DIAGRAM):   _Y = .;
1215284   +end;
MPRINT(EM_DIAGRAM):   end;
1215285   +else do;
MPRINT(EM_DIAGRAM):   else do;
1215286   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1215287   +      _Y = 1;
MPRINT(EM_DIAGRAM):   _Y = 1;
1215288   +   end;
MPRINT(EM_DIAGRAM):   end;
1215289   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1215290   +      _Y = 0;
MPRINT(EM_DIAGRAM):   _Y = 0;
1215291   +   end;
MPRINT(EM_DIAGRAM):   end;
1215292   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1215293   +      _Y = .;
MPRINT(EM_DIAGRAM):   _Y = .;
1215294   +   end;
MPRINT(EM_DIAGRAM):   end;
1215295   +end;
MPRINT(EM_DIAGRAM):   end;
1215296   +
1215297   +drop _DM_BAD;
MPRINT(EM_DIAGRAM):   drop _DM_BAD;
1215298   +_DM_BAD=0;
MPRINT(EM_DIAGRAM):   _DM_BAD=0;
1215299   +
1215300   +*** Check AcceptedCmpTotal for missing values ;
MPRINT(EM_DIAGRAM):   *** Check AcceptedCmpTotal for missing values ;
1215301   +if missing( AcceptedCmpTotal ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmpTotal ) then do;
1215302   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1215303   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1215304   +end;
MPRINT(EM_DIAGRAM):   end;
1215305   +
1215306   +*** Check Age for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Age for missing values ;
1215307   +if missing( Age ) then do;
MPRINT(EM_DIAGRAM):   if missing( Age ) then do;
1215308   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1215309   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1215310   +end;
MPRINT(EM_DIAGRAM):   end;
1215311   +
1215312   +*** Check Frq for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Frq for missing values ;
1215313   +if missing( Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( Frq ) then do;
1215314   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1215315   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1215316   +end;
MPRINT(EM_DIAGRAM):   end;
1215317   +
1215318   +*** Check Income for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Income for missing values ;
1215319   +if missing( Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( Income ) then do;
1215320   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1215321   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1215322   +end;
MPRINT(EM_DIAGRAM):   end;
1215323   +
1215324   +*** Check NumDealsPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumDealsPurchases for missing values ;
1215325   +if missing( NumDealsPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumDealsPurchases ) then do;
1215326   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1215327   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1215328   +end;
MPRINT(EM_DIAGRAM):   end;
1215329   +
1215330   +*** Check NumWebVisitsMonth for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumWebVisitsMonth for missing values ;
1215331   +if missing( NumWebVisitsMonth ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumWebVisitsMonth ) then do;
1215332   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1215333   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1215334   +end;
MPRINT(EM_DIAGRAM):   end;
1215335   +
1215336   +*** Check RFMstat for missing values ;
MPRINT(EM_DIAGRAM):   *** Check RFMstat for missing values ;
1215337   +if missing( RFMstat ) then do;
MPRINT(EM_DIAGRAM):   if missing( RFMstat ) then do;
1215338   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1215339   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1215340   +end;
MPRINT(EM_DIAGRAM):   end;
1215341   +
1215342   +*** Check RMntFrq for missing values ;
MPRINT(EM_DIAGRAM):   *** Check RMntFrq for missing values ;
1215343   +if missing( RMntFrq ) then do;
MPRINT(EM_DIAGRAM):   if missing( RMntFrq ) then do;
1215344   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1215345   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1215346   +end;
MPRINT(EM_DIAGRAM):   end;
1215347   +
1215348   +*** Check Recency for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Recency for missing values ;
1215349   +if missing( Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( Recency ) then do;
1215350   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1215351   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1215352   +end;
MPRINT(EM_DIAGRAM):   end;
1215353   +
1215354   +*** Check Teenhome for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Teenhome for missing values ;
1215355   +if missing( Teenhome ) then do;
MPRINT(EM_DIAGRAM):   if missing( Teenhome ) then do;
1215356   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1215357   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1215358   +end;
MPRINT(EM_DIAGRAM):   end;
1215359   +
1215360   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1215361   +drop _3_0 ;
MPRINT(EM_DIAGRAM):   drop _3_0 ;
1215362   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1215363   +   _3_0 = .;
MPRINT(EM_DIAGRAM):   _3_0 = .;
1215364   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1215365   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1215366   +end;
MPRINT(EM_DIAGRAM):   end;
1215367   +else do;
MPRINT(EM_DIAGRAM):   else do;
1215368   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1215369   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1215370   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1215371   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1215372   +      _3_0 = 1;
MPRINT(EM_DIAGRAM):   _3_0 = 1;
1215373   +   end;
MPRINT(EM_DIAGRAM):   end;
1215374   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1215375   +      _3_0 = -1;
MPRINT(EM_DIAGRAM):   _3_0 = -1;
1215376   +   end;
MPRINT(EM_DIAGRAM):   end;
1215377   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1215378   +      _3_0 = .;
MPRINT(EM_DIAGRAM):   _3_0 = .;
1215379   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1215380   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1215381   +   end;
MPRINT(EM_DIAGRAM):   end;
1215382   +end;
MPRINT(EM_DIAGRAM):   end;
1215383   +
1215384   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1215385   +drop _4_0 ;
MPRINT(EM_DIAGRAM):   drop _4_0 ;
1215386   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1215387   +   _4_0 = .;
MPRINT(EM_DIAGRAM):   _4_0 = .;
1215388   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1215389   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1215390   +end;
MPRINT(EM_DIAGRAM):   end;
1215391   +else do;
MPRINT(EM_DIAGRAM):   else do;
1215392   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1215393   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1215394   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1215395   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1215396   +      _4_0 = 1;
MPRINT(EM_DIAGRAM):   _4_0 = 1;
1215397   +   end;
MPRINT(EM_DIAGRAM):   end;
1215398   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1215399   +      _4_0 = -1;
MPRINT(EM_DIAGRAM):   _4_0 = -1;
1215400   +   end;
MPRINT(EM_DIAGRAM):   end;
1215401   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1215402   +      _4_0 = .;
MPRINT(EM_DIAGRAM):   _4_0 = .;
1215403   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1215404   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1215405   +   end;
MPRINT(EM_DIAGRAM):   end;
1215406   +end;
MPRINT(EM_DIAGRAM):   end;
1215407   +
1215408   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1215409   +drop _9_0 _9_1 _9_2 _9_3 ;
MPRINT(EM_DIAGRAM):   drop _9_0 _9_1 _9_2 _9_3 ;
1215410   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1215411   +_9_0 = 0;
MPRINT(EM_DIAGRAM):   _9_0 = 0;
1215412   +_9_1 = 0;
MPRINT(EM_DIAGRAM):   _9_1 = 0;
1215413   +_9_2 = 0;
MPRINT(EM_DIAGRAM):   _9_2 = 0;
1215414   +_9_3 = 0;
MPRINT(EM_DIAGRAM):   _9_3 = 0;
1215415   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1215416   +   _9_0 = .;
MPRINT(EM_DIAGRAM):   _9_0 = .;
1215417   +   _9_1 = .;
MPRINT(EM_DIAGRAM):   _9_1 = .;
1215418   +   _9_2 = .;
MPRINT(EM_DIAGRAM):   _9_2 = .;
1215419   +   _9_3 = .;
MPRINT(EM_DIAGRAM):   _9_3 = .;
1215420   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1215421   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1215422   +end;
MPRINT(EM_DIAGRAM):   end;
1215423   +else do;
MPRINT(EM_DIAGRAM):   else do;
1215424   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1215425   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1215426   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1215427   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1215428   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1215429   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1215430   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1215431   +            _9_0 = 1;
MPRINT(EM_DIAGRAM):   _9_0 = 1;
1215432   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1215433   +         end;
MPRINT(EM_DIAGRAM):   end;
1215434   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1215435   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1215436   +               _9_1 = 1;
MPRINT(EM_DIAGRAM):   _9_1 = 1;
1215437   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1215438   +            end;
MPRINT(EM_DIAGRAM):   end;
1215439   +         end;
MPRINT(EM_DIAGRAM):   end;
1215440   +      end;
MPRINT(EM_DIAGRAM):   end;
1215441   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1215442   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1215443   +            _9_2 = 1;
MPRINT(EM_DIAGRAM):   _9_2 = 1;
1215444   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1215445   +         end;
MPRINT(EM_DIAGRAM):   end;
1215446   +      end;
MPRINT(EM_DIAGRAM):   end;
1215447   +   end;
MPRINT(EM_DIAGRAM):   end;
1215448   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1215449   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1215450   +         _9_3 = 1;
MPRINT(EM_DIAGRAM):   _9_3 = 1;
1215451   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1215452   +      end;
MPRINT(EM_DIAGRAM):   end;
1215453   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1215454   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1215455   +            _9_0 = -1;
MPRINT(EM_DIAGRAM):   _9_0 = -1;
1215456   +            _9_1 = -1;
MPRINT(EM_DIAGRAM):   _9_1 = -1;
1215457   +            _9_2 = -1;
MPRINT(EM_DIAGRAM):   _9_2 = -1;
1215458   +            _9_3 = -1;
MPRINT(EM_DIAGRAM):   _9_3 = -1;
1215459   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1215460   +         end;
MPRINT(EM_DIAGRAM):   end;
1215461   +      end;
MPRINT(EM_DIAGRAM):   end;
1215462   +   end;
MPRINT(EM_DIAGRAM):   end;
1215463   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1215464   +      _9_0 = .;
MPRINT(EM_DIAGRAM):   _9_0 = .;
1215465   +      _9_1 = .;
MPRINT(EM_DIAGRAM):   _9_1 = .;
1215466   +      _9_2 = .;
MPRINT(EM_DIAGRAM):   _9_2 = .;
1215467   +      _9_3 = .;
MPRINT(EM_DIAGRAM):   _9_3 = .;
1215468   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1215469   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1215470   +   end;
MPRINT(EM_DIAGRAM):   end;
1215471   +end;
MPRINT(EM_DIAGRAM):   end;
1215472   +
1215473   +*** If missing inputs, use averages;
MPRINT(EM_DIAGRAM):   *** If missing inputs, use averages;
1215474   +if _DM_BAD > 0 then do;
MPRINT(EM_DIAGRAM):   if _DM_BAD > 0 then do;
1215475   +   _P0 = 0.151221567;
MPRINT(EM_DIAGRAM):   _P0 = 0.151221567;
1215476   +   _P1 = 0.848778433;
MPRINT(EM_DIAGRAM):   _P1 = 0.848778433;
1215477   +   goto REG11DR1;
MPRINT(EM_DIAGRAM):   goto REG11DR1;
1215478   +end;
MPRINT(EM_DIAGRAM):   end;
1215479   +
1215480   +*** Compute Linear Predictor;
MPRINT(EM_DIAGRAM):   *** Compute Linear Predictor;
1215481   +drop _TEMP;
MPRINT(EM_DIAGRAM):   drop _TEMP;
1215482   +drop _LP0;
MPRINT(EM_DIAGRAM):   drop _LP0;
1215483   +_LP0 = 0;
MPRINT(EM_DIAGRAM):   _LP0 = 0;
1215484   +
1215485   +***  Effect: AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Effect: AcceptedCmp3 ;
1215486   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1215487   +_LP0 = _LP0 + (   -0.21402292491598) * _TEMP * _3_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.21402292491598) * _TEMP * _3_0;
1215488   +
1215489   +***  Effect: AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Effect: AcceptedCmp4 ;
1215490   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1215491   +_LP0 = _LP0 + (    0.20181176396468) * _TEMP * _4_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.20181176396468) * _TEMP * _4_0;
1215492   +
1215493   +***  Effect: AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   *** Effect: AcceptedCmpTotal ;
1215494   +_TEMP = AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   _TEMP = AcceptedCmpTotal ;
1215495   +_LP0 = _LP0 + (    1.01331254975906 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.01331254975906 * _TEMP);
1215496   +
1215497   +***  Effect: Age ;
MPRINT(EM_DIAGRAM):   *** Effect: Age ;
1215498   +_TEMP = Age ;
MPRINT(EM_DIAGRAM):   _TEMP = Age ;
1215499   +_LP0 = _LP0 + (   -0.00968312823761 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.00968312823761 * _TEMP);
1215500   +
1215501   +***  Effect: Frq ;
MPRINT(EM_DIAGRAM):   *** Effect: Frq ;
1215502   +_TEMP = Frq ;
MPRINT(EM_DIAGRAM):   _TEMP = Frq ;
1215503   +_LP0 = _LP0 + (   -0.03456417718144 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.03456417718144 * _TEMP);
1215504   +
1215505   +***  Effect: Income ;
MPRINT(EM_DIAGRAM):   *** Effect: Income ;
1215506   +_TEMP = Income ;
MPRINT(EM_DIAGRAM):   _TEMP = Income ;
1215507   +_LP0 = _LP0 + (    0.00002539988923 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00002539988923 * _TEMP);
1215508   +
1215509   +***  Effect: Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Effect: Marital_Status ;
1215510   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1215511   +_LP0 = _LP0 + (    0.11081046192241) * _TEMP * _9_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.11081046192241) * _TEMP * _9_0;
1215512   +_LP0 = _LP0 + (   -0.36385893866909) * _TEMP * _9_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.36385893866909) * _TEMP * _9_1;
1215513   +_LP0 = _LP0 + (    0.25486771612086) * _TEMP * _9_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.25486771612086) * _TEMP * _9_2;
1215514   +_LP0 = _LP0 + (   -0.40515143447522) * _TEMP * _9_3;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.40515143447522) * _TEMP * _9_3;
1215515   +
1215516   +***  Effect: NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumDealsPurchases ;
1215517   +_TEMP = NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumDealsPurchases ;
1215518   +_LP0 = _LP0 + (    0.21113804572457 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.21113804572457 * _TEMP);
1215519   +
1215520   +***  Effect: NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   *** Effect: NumWebVisitsMonth ;
1215521   +_TEMP = NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   _TEMP = NumWebVisitsMonth ;
1215522   +_LP0 = _LP0 + (    0.17412114550604 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.17412114550604 * _TEMP);
1215523   +
1215524   +***  Effect: RFMstat ;
MPRINT(EM_DIAGRAM):   *** Effect: RFMstat ;
1215525   +_TEMP = RFMstat ;
MPRINT(EM_DIAGRAM):   _TEMP = RFMstat ;
1215526   +_LP0 = _LP0 + (    0.00006841011087 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00006841011087 * _TEMP);
1215527   +
1215528   +***  Effect: RMntFrq ;
MPRINT(EM_DIAGRAM):   *** Effect: RMntFrq ;
1215529   +_TEMP = RMntFrq ;
MPRINT(EM_DIAGRAM):   _TEMP = RMntFrq ;
1215530   +_LP0 = _LP0 + (    0.00529455452809 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00529455452809 * _TEMP);
1215531   +
1215532   +***  Effect: Recency ;
MPRINT(EM_DIAGRAM):   *** Effect: Recency ;
1215533   +_TEMP = Recency ;
MPRINT(EM_DIAGRAM):   _TEMP = Recency ;
1215534   +_LP0 = _LP0 + (   -0.03257124268465 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.03257124268465 * _TEMP);
1215535   +
1215536   +***  Effect: Teenhome ;
MPRINT(EM_DIAGRAM):   *** Effect: Teenhome ;
1215537   +_TEMP = Teenhome ;
MPRINT(EM_DIAGRAM):   _TEMP = Teenhome ;
1215538   +_LP0 = _LP0 + (   -0.71325798797505 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.71325798797505 * _TEMP);
1215539   +
1215540   +*** Naive Posterior Probabilities;
MPRINT(EM_DIAGRAM):   *** Naive Posterior Probabilities;
1215541   +drop _MAXP _IY _P0 _P1;
MPRINT(EM_DIAGRAM):   drop _MAXP _IY _P0 _P1;
1215542   +_P0 = probnorm((   -2.04830407754231) + _LP0);
MPRINT(EM_DIAGRAM):   _P0 = probnorm(( -2.04830407754231) + _LP0);
1215543   +_P1 = 1.0 - _P0;
MPRINT(EM_DIAGRAM):   _P1 = 1.0 - _P0;
1215544   +
1215545   +REG11DR1:
1215546   +
1215547   +*** Residuals;
MPRINT(EM_DIAGRAM):   REG11DR1: *** Residuals;
1215548   +if (_Y = .) then do;
MPRINT(EM_DIAGRAM):   if (_Y = .) then do;
1215549   +   R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
1215550   +   R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
1215551   +end;
MPRINT(EM_DIAGRAM):   end;
1215552   +else do;
MPRINT(EM_DIAGRAM):   else do;
1215553   +    label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1215554   +    label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1215555   +   R_DepVar1 = - _P0;
MPRINT(EM_DIAGRAM):   R_DepVar1 = - _P0;
1215556   +   R_DepVar0 = - _P1;
MPRINT(EM_DIAGRAM):   R_DepVar0 = - _P1;
1215557   +   select( _Y );
MPRINT(EM_DIAGRAM):   select( _Y );
1215558   +      when (0)  R_DepVar1 = R_DepVar1 + 1;
MPRINT(EM_DIAGRAM):   when (0) R_DepVar1 = R_DepVar1 + 1;
1215559   +      when (1)  R_DepVar0 = R_DepVar0 + 1;
MPRINT(EM_DIAGRAM):   when (1) R_DepVar0 = R_DepVar0 + 1;
1215560   +   end;
MPRINT(EM_DIAGRAM):   end;
1215561   +end;
MPRINT(EM_DIAGRAM):   end;
1215562   +
1215563   +*** Posterior Probabilities and Predicted Level;
MPRINT(EM_DIAGRAM):   *** Posterior Probabilities and Predicted Level;
1215564   +label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1215565   +label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1215566   +P_DepVar1 = _P0;
MPRINT(EM_DIAGRAM):   P_DepVar1 = _P0;
1215567   +_MAXP = _P0;
MPRINT(EM_DIAGRAM):   _MAXP = _P0;
1215568   +_IY = 1;
MPRINT(EM_DIAGRAM):   _IY = 1;
1215569   +P_DepVar0 = _P1;
MPRINT(EM_DIAGRAM):   P_DepVar0 = _P1;
1215570   +if (_P1 >  _MAXP + 1E-8) then do;
MPRINT(EM_DIAGRAM):   if (_P1 > _MAXP + 1E-8) then do;
1215571   +   _MAXP = _P1;
MPRINT(EM_DIAGRAM):   _MAXP = _P1;
1215572   +   _IY = 2;
MPRINT(EM_DIAGRAM):   _IY = 2;
1215573   +end;
MPRINT(EM_DIAGRAM):   end;
1215574   +I_DepVar = REG11DRF[_IY];
MPRINT(EM_DIAGRAM):   I_DepVar = REG11DRF[_IY];
1215575   +U_DepVar = REG11DRU[_IY];
MPRINT(EM_DIAGRAM):   U_DepVar = REG11DRU[_IY];
1215576   +
1215577   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1215578   +***** end scoring code for regression;
MPRINT(EM_DIAGRAM):   ***** end scoring code for regression;
1215579   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1215580   +* Renaming variables for Reg11;
MPRINT(EM_DIAGRAM):   * Renaming variables for Reg11;
1215581   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1215582   +* Renaming Posterior variables for Reg11;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Reg11;
1215583   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1215584   +drop Reg11_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Reg11_P_DepVar1;
1215585   +Reg11_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Reg11_P_DepVar1 = P_DepVar1;
1215586   +drop Reg11_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Reg11_P_DepVar0;
1215587   +Reg11_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Reg11_P_DepVar0 = P_DepVar0;
1215588   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1215589   +* Renaming _WARN_ variable for Reg11;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Reg11;
1215590   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1215591   +length Reg11_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Reg11_WARN_ $4;
1215592   +drop Reg11_WARN_;
MPRINT(EM_DIAGRAM):   drop Reg11_WARN_;
1215593   +Reg11_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Reg11_WARN_ = _WARN_;
1215594   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1215595   +* Ensmbl12: Average Posteriors of 10 models;
MPRINT(EM_DIAGRAM):   * Ensmbl12: Average Posteriors of 10 models;
1215596   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1215597   +P_DepVar1 = (
1215598   +Neural42_P_DepVar1 +
1215599   +Neural37_P_DepVar1 +
1215600   +Neural38_P_DepVar1 +
1215601   +Neural39_P_DepVar1 +
1215602   +Neural40_P_DepVar1 +
1215603   +Neural41_P_DepVar1 +
1215604   +Neural36_P_DepVar1 +
1215605   +Tree6_P_DepVar1 +
1215606   +Reg12_P_DepVar1 +
1215607   +Reg11_P_DepVar1
1215608   +)/10;
MPRINT(EM_DIAGRAM):   P_DepVar1 = ( Neural42_P_DepVar1 + Neural37_P_DepVar1 + 
Neural38_P_DepVar1 + Neural39_P_DepVar1 + Neural40_P_DepVar1 + Neural41_P_DepVar1 + 
Neural36_P_DepVar1 + Tree6_P_DepVar1 + Reg12_P_DepVar1 + Reg11_P_DepVar1 )/10;
1215609   +P_DepVar0 = (
1215610   +Neural42_P_DepVar0 +
1215611   +Neural37_P_DepVar0 +
1215612   +Neural38_P_DepVar0 +
1215613   +Neural39_P_DepVar0 +
1215614   +Neural40_P_DepVar0 +
1215615   +Neural41_P_DepVar0 +
1215616   +Neural36_P_DepVar0 +
1215617   +Tree6_P_DepVar0 +
1215618   +Reg12_P_DepVar0 +
1215619   +Reg11_P_DepVar0
1215620   +)/10;
MPRINT(EM_DIAGRAM):   P_DepVar0 = ( Neural42_P_DepVar0 + Neural37_P_DepVar0 + 
Neural38_P_DepVar0 + Neural39_P_DepVar0 + Neural40_P_DepVar0 + Neural41_P_DepVar0 + 
Neural36_P_DepVar0 + Tree6_P_DepVar0 + Reg12_P_DepVar0 + Reg11_P_DepVar0 )/10;
1215621   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1215622   +* Ensmbl12: Computing Classification Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl12: Computing Classification Vars;
1215623   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1215624   +length I_DepVar $32;
MPRINT(EM_DIAGRAM):   length I_DepVar $32;
WARNING: Length of character variable I_DepVar has already been set. 
         Use the LENGTH statement as the very first statement in the DATA STEP to declare the 
         length of a character variable.
1215625   +label I_DepVar = 'Into: DepVar';
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar';
1215626   +length _format $200;
MPRINT(EM_DIAGRAM):   length _format $200;
1215627   +drop _format;
MPRINT(EM_DIAGRAM):   drop _format;
1215628   +_format= ' ';
MPRINT(EM_DIAGRAM):   _format= ' ';
1215629   +_p_= 0;
MPRINT(EM_DIAGRAM):   _p_= 0;
1215630   +drop _p_;
MPRINT(EM_DIAGRAM):   drop _p_;
1215631   +if P_DepVar1 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar1 > _p_ then do;
1215632   +_p_= P_DepVar1;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar1;
1215633   +_format= '1';
MPRINT(EM_DIAGRAM):   _format= '1';
1215634   +end;
MPRINT(EM_DIAGRAM):   end;
1215635   +if P_DepVar0 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar0 > _p_ then do;
1215636   +_p_= P_DepVar0;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar0;
1215637   +_format= '0';
MPRINT(EM_DIAGRAM):   _format= '0';
1215638   +end;
MPRINT(EM_DIAGRAM):   end;
1215639   +%DMNORMCP(_format,I_DepVar);
MPRINT(DMNORMCP):   I_DepVar=dmnorm(_format,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1215640   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1215641   +* Ensmbl12: Producing Unformatted variable;
MPRINT(EM_DIAGRAM):   * Ensmbl12: Producing Unformatted variable;
1215642   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1215643   +label U_DepVar = "Unnormalized Into: DepVar";
MPRINT(EM_DIAGRAM):   label U_DepVar = "Unnormalized Into: DepVar";
1215644   +if I_DepVar = '1' then U_DepVar = 1;
MPRINT(EM_DIAGRAM):   if I_DepVar = '1' then U_DepVar = 1;
1215645   +else
1215646   +if I_DepVar = '0' then U_DepVar = 0;
MPRINT(EM_DIAGRAM):   else if I_DepVar = '0' then U_DepVar = 0;
1215647   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1215648   +* Ensmbl12: Computing _WARN_ Variable;
MPRINT(EM_DIAGRAM):   * Ensmbl12: Computing _WARN_ Variable;
1215649   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1215650   +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
1215651   +label _WARN_ = 'Warnings';
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings';
1215652   +_WARN_ = '';
MPRINT(EM_DIAGRAM):   _WARN_ = '';
1215653   +if index(NEURAL42_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M'
1215653  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL42_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
1215654   +if index(NEURAL42_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U'
1215654  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL42_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
1215655   +if index(NEURAL42_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P'
1215655  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL42_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
1215656   +if index(NEURAL42_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C'
1215656  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL42_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
1215657   +if index(NEURAL37_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M'
1215657  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL37_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
1215658   +if index(NEURAL37_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U'
1215658  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL37_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
1215659   +if index(NEURAL37_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P'
1215659  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL37_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
1215660   +if index(NEURAL37_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C'
1215660  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL37_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
1215661   +if index(NEURAL38_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M'
1215661  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL38_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
1215662   +if index(NEURAL38_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U'
1215662  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL38_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
1215663   +if index(NEURAL38_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P'
1215663  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL38_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
1215664   +if index(NEURAL38_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C'
1215664  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL38_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
1215665   +if index(NEURAL39_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M'
1215665  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL39_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
1215666   +if index(NEURAL39_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U'
1215666  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL39_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
1215667   +if index(NEURAL39_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P'
1215667  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL39_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
1215668   +if index(NEURAL39_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C'
1215668  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL39_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
1215669   +if index(NEURAL40_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M'
1215669  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL40_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
1215670   +if index(NEURAL40_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U'
1215670  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL40_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
1215671   +if index(NEURAL40_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P'
1215671  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL40_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
1215672   +if index(NEURAL40_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C'
1215672  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL40_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
1215673   +if index(NEURAL41_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M'
1215673  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL41_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
1215674   +if index(NEURAL41_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U'
1215674  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL41_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
1215675   +if index(NEURAL41_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P'
1215675  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL41_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
1215676   +if index(NEURAL41_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C'
1215676  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL41_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
1215677   +if index(NEURAL36_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M'
1215677  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL36_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
1215678   +if index(NEURAL36_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U'
1215678  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL36_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
1215679   +if index(NEURAL36_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P'
1215679  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL36_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
1215680   +if index(NEURAL36_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C'
1215680  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL36_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
1215681   +if index(TREE6_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(TREE6_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 
1, 1) ='M';
1215682   +if index(TREE6_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(TREE6_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 
2, 1) ='U';
1215683   +if index(TREE6_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(TREE6_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 
3, 1) ='P';
1215684   +if index(TREE6_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(TREE6_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 
4, 1) ='C';
1215685   +if index(REG12_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(REG12_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 
1, 1) ='M';
1215686   +if index(REG12_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(REG12_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 
2, 1) ='U';
1215687   +if index(REG12_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(REG12_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 
3, 1) ='P';
1215688   +if index(REG12_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(REG12_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 
4, 1) ='C';
1215689   +if index(REG11_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(REG11_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 
1, 1) ='M';
1215690   +if index(REG11_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(REG11_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 
2, 1) ='U';
1215691   +if index(REG11_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(REG11_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 
3, 1) ='P';
1215692   +if index(REG11_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(REG11_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 
4, 1) ='C';
1215693   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1215694   +* Ensmbl12: Computing Residual Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl12: Computing Residual Vars;
1215695   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1215696   +if
1215697   +F_DepVar NE '1'
1215698   +AND F_DepVar NE '0'
1215699   +then do;
MPRINT(EM_DIAGRAM):   if F_DepVar NE '1' AND F_DepVar NE '0' then do;
1215700   +R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
1215701   +R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
1215702   +end;
MPRINT(EM_DIAGRAM):   end;
1215703   +else do;
MPRINT(EM_DIAGRAM):   else do;
1215704   +R_DepVar1 = -P_DepVar1;
MPRINT(EM_DIAGRAM):   R_DepVar1 = -P_DepVar1;
1215705   +R_DepVar0 = -P_DepVar0;
MPRINT(EM_DIAGRAM):   R_DepVar0 = -P_DepVar0;
1215706   +SELECT(F_DepVar);
MPRINT(EM_DIAGRAM):   SELECT(F_DepVar);
1215707   +WHEN('1') R_DepVar1 = R_DepVar1 +1;
MPRINT(EM_DIAGRAM):   WHEN('1') R_DepVar1 = R_DepVar1 +1;
1215708   +WHEN('0') R_DepVar0 = R_DepVar0 +1;
MPRINT(EM_DIAGRAM):   WHEN('0') R_DepVar0 = R_DepVar0 +1;
1215709   +OTHERWISE;
MPRINT(EM_DIAGRAM):   OTHERWISE;
1215710   +END;
MPRINT(EM_DIAGRAM):   END;
1215711   +END;
MPRINT(EM_DIAGRAM):   END;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1215712    run;

NOTE: DATA STEP view saved on file EMWS8.ENSMBL12_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.NEURAL42_VALIDATE.VIEW used (Total process time):
      real time           0.17 seconds
      cpu time            0.17 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.18 seconds
      cpu time            0.18 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1215713    quit;
1215714    filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
MPRINT(EM_DIAGRAM):   
MPRINT(CALFITSTATSNOMINAL):   data _tmpTrainFitTable(keep=_TARGET_ _ASE_ _DIV_ _MAX_ _NOBS_ 
_RASE_ _SSE_ _DISF_ _MISC_ _WRONG_ rename=(_TARGET_=TARGET));
MPRINT(CALFITSTATSNOMINAL):   set EMWS8.Ensmbl12_TRAIN end=eof;
MPRINT(CALFITSTATSNOMINAL):   length _TARGET_ $32;
MPRINT(CALFITSTATSNOMINAL):   length _ASE_ _DIV_ _MAX_ _NOBS_ _RASE_ _SSE_ _DISF_ _MISC_ 
_WRONG_ 8;
MPRINT(CALFITSTATSNOMINAL):   label _TARGET_ = "Train: Target Variable" _NOBS_= "Train: Sum of 
Frequencies" _SSE_= "Train: Sum of Squared Errors" _MAX_= "Train: Maximum Absolute Error" 
_DIV_ = "Train: Divisor for ASE" _WRONG_= "Train: Number of Wrong Classifications" _DISF_= 
"Train: Frequency of Classified Cases" _MISC_= "Train: Misclassification Rate" _ASE_ = "Train: 
Average Squared Error" _RASE_ = "Train: Root Average Squared Error";
MPRINT(CALFITSTATSNOMINAL):   retain _TARGET_ _WRONG_ _DIV_ _MAX_ _SSE_ _DISF_ _MISC_ _ASE_ 
_RASE_ ;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar1 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar1)*(R_DepVar1);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar1));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar0 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar0)*(R_DepVar0);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar0));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if F_DepVar ne "" then do;
MPRINT(CALFITSTATSNOMINAL):   _DISF_+ 1;
MPRINT(CALFITSTATSNOMINAL):   _WRONG_+(F_DepVar ne I_DepVar);
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if eof then do;
MPRINT(CALFITSTATSNOMINAL):   _TARGET_ = "DepVar";
MPRINT(CALFITSTATSNOMINAL):   _MAX = 0;
MPRINT(CALFITSTATSNOMINAL):   if _DISF_ ne 0 then do;
MPRINT(CALFITSTATSNOMINAL):   _MISC_=_WRONG_/_DISF_;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   _NOBS_ = _DIV_/2;
MPRINT(CALFITSTATSNOMINAL):   _ASE_=_SSE_/_DIV_;
MPRINT(CALFITSTATSNOMINAL):   _RASE_=sqrt(_ASE_);
MPRINT(CALFITSTATSNOMINAL):   output;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl12_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set _tmpTrainFitTable;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   
MPRINT(CALFITSTATSNOMINAL):   data _tmpValidFitTable(keep=_TARGET_ _ASE_ _DIV_ _MAX_ _NOBS_ 
_RASE_ _SSE_ _DISF_ _MISC_ _WRONG_ rename=(_TARGET_=TARGET));
MPRINT(CALFITSTATSNOMINAL):   set EMWS8.Ensmbl12_VALIDATE end=eof;
MPRINT(CALFITSTATSNOMINAL):   length _TARGET_ $32;
MPRINT(CALFITSTATSNOMINAL):   length _ASE_ _DIV_ _MAX_ _NOBS_ _RASE_ _SSE_ _DISF_ _MISC_ 
_WRONG_ 8;
MPRINT(CALFITSTATSNOMINAL):   label _TARGET_ = "Valid: Target Variable" _NOBS_= "Valid: Sum of 
Frequencies" _SSE_= "Valid: Sum of Squared Errors" _MAX_= "Valid: Maximum Absolute Error" 
_DIV_ = "Valid: Divisor for ASE" _WRONG_= "Valid: Number of Wrong Classifications" _DISF_= 
"Valid: Frequency of Classified Cases" _MISC_= "Valid: Misclassification Rate" _ASE_ = "Valid: 
Average Squared Error" _RASE_ = "Valid: Root Average Squared Error";
MPRINT(CALFITSTATSNOMINAL):   retain _TARGET_ _WRONG_ _DIV_ _MAX_ _SSE_ _DISF_ _MISC_ _ASE_ 
_RASE_ ;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar1 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar1)*(R_DepVar1);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar1));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar0 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar0)*(R_DepVar0);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar0));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if F_DepVar ne "" then do;
MPRINT(CALFITSTATSNOMINAL):   _DISF_+ 1;
MPRINT(CALFITSTATSNOMINAL):   _WRONG_+(F_DepVar ne I_DepVar);
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if eof then do;
MPRINT(CALFITSTATSNOMINAL):   _TARGET_ = "DepVar";
MPRINT(CALFITSTATSNOMINAL):   _MAX = 0;
MPRINT(CALFITSTATSNOMINAL):   if _DISF_ ne 0 then do;
MPRINT(CALFITSTATSNOMINAL):   _MISC_=_WRONG_/_DISF_;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   _NOBS_ = _DIV_/2;
MPRINT(CALFITSTATSNOMINAL):   _ASE_=_SSE_/_DIV_;
MPRINT(CALFITSTATSNOMINAL):   _RASE_=sqrt(_ASE_);
MPRINT(CALFITSTATSNOMINAL):   output;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data _tmpdata_(DROP= TARGET);
MPRINT(EM_DIAGRAM):   set _tmpValidFitTable;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _tmpdata_;
MPRINT(EM_DIAGRAM):   set _tmpdata_;
MPRINT(EM_DIAGRAM):   rename _ASE_=_VASE_;
MPRINT(EM_DIAGRAM):   rename _DIV_=_VDIV_;
MPRINT(EM_DIAGRAM):   rename _MAX_=_VMAX_;
MPRINT(EM_DIAGRAM):   rename _NOBS_=_VNOBS_;
MPRINT(EM_DIAGRAM):   rename _RASE_=_VRASE_;
MPRINT(EM_DIAGRAM):   rename _SSE_=_VSSE_;
MPRINT(EM_DIAGRAM):   rename _DISF_=_VDISF_;
MPRINT(EM_DIAGRAM):   rename _MISC_=_VMISC_;
MPRINT(EM_DIAGRAM):   rename _WRONG_=_VWRONG_;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl12_EMOUTFIT;
MPRINT(EM_DIAGRAM):   merge EMWS8.Ensmbl12_EMOUTFIT _tmpdata_;
MPRINT(EM_DIAGRAM):   run;
1215774    filename _pref
1215774  ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural42\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural42\EMPUBLISHSCORE.sas";
1215775    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1215776    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Neural42\EMPUBLISHSCORE.sas.
1215777   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1215778   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1215779   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1215780   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1215781   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1215782   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1215783   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1215784   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1215785   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1215786   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1215787   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1215788   +LENGTH _WARN_ $4
1215789   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
1215790   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1215791   +
1215792   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1215793   +
1215794   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1215795   +
1215796   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1215797   +
1215798   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1215799   +
1215800   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1215801   +
1215802   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1215803   +
1215804   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1215805   +
1215806   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1215807   +
1215808   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1215809   +
1215810   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1215811   +
1215812   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1215813   +
1215814   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1215815   +
1215816   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1215817   +
1215818   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1215819   +
1215820   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1215821   +
1215822   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1215823   +
1215824   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1215825   +
1215826   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1215827   +
1215828   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1215829   +
1215830   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1215831   +
1215832   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1215833   +
1215834   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1215835   +
1215836   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1215837   +
1215838   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1215839   +
1215840   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1215841   +
1215842   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1215843   +
1215844   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1215845   +
1215846   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1215847   +
1215848   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1215849   +
1215850   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1215851   +
1215852   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1215853   +
1215854   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1215855   +
1215856   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1215857   +
1215858   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1215859   +
1215860   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1215861   +
1215862   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1215863   +
1215864   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1215865   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1215866   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1215867   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1215868   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1215869   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1215870   +end;
MPRINT(EM_DIAGRAM):   end;
1215871   +else do;
MPRINT(EM_DIAGRAM):   else do;
1215872   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1215873   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1215874   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1215875   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1215876   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1215877   +   end;
MPRINT(EM_DIAGRAM):   end;
1215878   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1215879   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1215880   +   end;
MPRINT(EM_DIAGRAM):   end;
1215881   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1215882   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1215883   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1215884   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1215885   +   end;
MPRINT(EM_DIAGRAM):   end;
1215886   +end;
MPRINT(EM_DIAGRAM):   end;
1215887   +
1215888   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1215889   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1215890   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1215891   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1215892   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1215893   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1215894   +end;
MPRINT(EM_DIAGRAM):   end;
1215895   +else do;
MPRINT(EM_DIAGRAM):   else do;
1215896   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1215897   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1215898   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1215899   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1215900   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1215901   +   end;
MPRINT(EM_DIAGRAM):   end;
1215902   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1215903   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1215904   +   end;
MPRINT(EM_DIAGRAM):   end;
1215905   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1215906   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1215907   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1215908   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1215909   +   end;
MPRINT(EM_DIAGRAM):   end;
1215910   +end;
MPRINT(EM_DIAGRAM):   end;
1215911   +
1215912   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1215913   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1215914   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1215915   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1215916   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1215917   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1215918   +end;
MPRINT(EM_DIAGRAM):   end;
1215919   +else do;
MPRINT(EM_DIAGRAM):   else do;
1215920   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1215921   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1215922   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1215923   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1215924   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1215925   +   end;
MPRINT(EM_DIAGRAM):   end;
1215926   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1215927   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1215928   +   end;
MPRINT(EM_DIAGRAM):   end;
1215929   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1215930   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1215931   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1215932   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1215933   +   end;
MPRINT(EM_DIAGRAM):   end;
1215934   +end;
MPRINT(EM_DIAGRAM):   end;
1215935   +
1215936   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1215937   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1215938   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1215939   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1215940   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1215941   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1215942   +end;
MPRINT(EM_DIAGRAM):   end;
1215943   +else do;
MPRINT(EM_DIAGRAM):   else do;
1215944   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1215945   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1215946   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1215947   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1215948   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1215949   +   end;
MPRINT(EM_DIAGRAM):   end;
1215950   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1215951   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1215952   +   end;
MPRINT(EM_DIAGRAM):   end;
1215953   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1215954   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1215955   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1215956   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1215957   +   end;
MPRINT(EM_DIAGRAM):   end;
1215958   +end;
MPRINT(EM_DIAGRAM):   end;
1215959   +
1215960   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1215961   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1215962   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1215963   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1215964   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1215965   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1215966   +end;
MPRINT(EM_DIAGRAM):   end;
1215967   +else do;
MPRINT(EM_DIAGRAM):   else do;
1215968   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1215969   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1215970   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1215971   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1215972   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1215973   +   end;
MPRINT(EM_DIAGRAM):   end;
1215974   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1215975   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1215976   +   end;
MPRINT(EM_DIAGRAM):   end;
1215977   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1215978   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1215979   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1215980   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1215981   +   end;
MPRINT(EM_DIAGRAM):   end;
1215982   +end;
MPRINT(EM_DIAGRAM):   end;
1215983   +
1215984   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1215985   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1215986   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1215987   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1215988   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1215989   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1215990   +end;
MPRINT(EM_DIAGRAM):   end;
1215991   +else do;
MPRINT(EM_DIAGRAM):   else do;
1215992   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1215993   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1215994   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1215995   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1215996   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1215997   +   end;
MPRINT(EM_DIAGRAM):   end;
1215998   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1215999   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1216000   +   end;
MPRINT(EM_DIAGRAM):   end;
1216001   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1216002   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1216003   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1216004   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1216005   +   end;
MPRINT(EM_DIAGRAM):   end;
1216006   +end;
MPRINT(EM_DIAGRAM):   end;
1216007   +
1216008   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1216009   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1216010   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1216011   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1216012   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1216013   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1216014   +end;
MPRINT(EM_DIAGRAM):   end;
1216015   +else do;
MPRINT(EM_DIAGRAM):   else do;
1216016   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1216017   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1216018   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1216019   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1216020   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1216021   +   end;
MPRINT(EM_DIAGRAM):   end;
1216022   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1216023   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1216024   +   end;
MPRINT(EM_DIAGRAM):   end;
1216025   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1216026   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1216027   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1216028   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1216029   +   end;
MPRINT(EM_DIAGRAM):   end;
1216030   +end;
MPRINT(EM_DIAGRAM):   end;
1216031   +
1216032   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1216033   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
1216034   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1216035   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1216036   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1216037   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1216038   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1216039   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1216040   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1216041   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1216042   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1216043   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1216044   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1216045   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1216046   +end;
MPRINT(EM_DIAGRAM):   end;
1216047   +else do;
MPRINT(EM_DIAGRAM):   else do;
1216048   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1216049   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1216050   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1216051   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1216052   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1216053   +   end;
MPRINT(EM_DIAGRAM):   end;
1216054   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1216055   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1216056   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1216057   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1216058   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1216059   +   end;
MPRINT(EM_DIAGRAM):   end;
1216060   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1216061   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1216062   +   end;
MPRINT(EM_DIAGRAM):   end;
1216063   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1216064   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1216065   +   end;
MPRINT(EM_DIAGRAM):   end;
1216066   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1216067   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1216068   +   end;
MPRINT(EM_DIAGRAM):   end;
1216069   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1216070   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1216071   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1216072   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1216073   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1216074   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1216075   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1216076   +   end;
MPRINT(EM_DIAGRAM):   end;
1216077   +end;
MPRINT(EM_DIAGRAM):   end;
1216078   +
1216079   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1216080   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1216081   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
1216082   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1216083   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1216084   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1216085   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1216086   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1216087   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1216088   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1216089   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1216090   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1216091   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1216092   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1216093   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1216094   +end;
MPRINT(EM_DIAGRAM):   end;
1216095   +else do;
MPRINT(EM_DIAGRAM):   else do;
1216096   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1216097   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1216098   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1216099   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1216100   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1216101   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1216102   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1216103   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1216104   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1216105   +         end;
MPRINT(EM_DIAGRAM):   end;
1216106   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1216107   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1216108   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1216109   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1216110   +            end;
MPRINT(EM_DIAGRAM):   end;
1216111   +         end;
MPRINT(EM_DIAGRAM):   end;
1216112   +      end;
MPRINT(EM_DIAGRAM):   end;
1216113   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1216114   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1216115   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1216116   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1216117   +         end;
MPRINT(EM_DIAGRAM):   end;
1216118   +      end;
MPRINT(EM_DIAGRAM):   end;
1216119   +   end;
MPRINT(EM_DIAGRAM):   end;
1216120   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1216121   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1216122   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1216123   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1216124   +      end;
MPRINT(EM_DIAGRAM):   end;
1216125   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1216126   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1216127   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1216128   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1216129   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1216130   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1216131   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1216132   +         end;
MPRINT(EM_DIAGRAM):   end;
1216133   +      end;
MPRINT(EM_DIAGRAM):   end;
1216134   +   end;
MPRINT(EM_DIAGRAM):   end;
1216135   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1216136   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1216137   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1216138   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1216139   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1216140   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1216141   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1216142   +   end;
MPRINT(EM_DIAGRAM):   end;
1216143   +end;
MPRINT(EM_DIAGRAM):   end;
1216144   +
1216145   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1216146   +*** Checking missing input Interval
1216147   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1216148   +
1216149   +IF NMISS(
1216150   +   AcceptedCmpTotal ,
1216151   +   Age ,
1216152   +   Frq ,
1216153   +   Income ,
1216154   +   Kidhome ,
1216155   +   MntFishProducts ,
1216156   +   MntFruits ,
1216157   +   MntGoldProds ,
1216158   +   MntSweetProducts ,
1216159   +   MonthsAsCustomer ,
1216160   +   NumDealsPurchases ,
1216161   +   NumWebVisitsMonth ,
1216162   +   RFMstat ,
1216163   +   RMntFrq ,
1216164   +   Recency ,
1216165   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , 
MntFishProducts , MntFruits , MntGoldProds , MntSweetProducts , MonthsAsCustomer , 
NumDealsPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , Teenhome ) THEN DO;
1216166   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1216167   +
1216168   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1216169   +END;
MPRINT(EM_DIAGRAM):   END;
1216170   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1216171   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1216172   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1216173   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1216174   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1216175   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1216176   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1216177   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1216178   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1216179   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1216180   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1216181   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1216182   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1216183   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1216184   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1216185   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1216186   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1216187   +   S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
1216188   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
1216189   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1216190   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1216191   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1216192   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1216193   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1216194   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1216195   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1216196   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1216197   +END;
MPRINT(EM_DIAGRAM):   END;
1216198   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1216199   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1216200   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1216201   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1216202   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1216203   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1216204   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1216205   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1216206   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1216207   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1216208   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1216209   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1216210   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1216211   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1216212   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1216213   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1216214   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1216215   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1216216   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1216217   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1216218   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1216219   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1216220   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1216221   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1216222   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1216223   +   ELSE S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
1216224   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
1216225   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1216226   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1216227   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1216228   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1216229   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1216230   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1216231   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1216232   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1216233   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1216234   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1216235   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1216236   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1216237   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1216238   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1216239   +END;
MPRINT(EM_DIAGRAM):   END;
1216240   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1216241   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1216242   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1216243   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1216244   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1216245   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1216246   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1216247   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1216248   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1216249   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1216250   +   H11  =     0.27578843014513 * S_AcceptedCmpTotal  +    -0.00809332778604 *
1216251   +        S_Age  +    -0.01616869766394 * S_Frq  +     0.03490362906378 *
1216252   +        S_Income  +    -0.00343804081842 * S_Kidhome
1216253   +          +    -0.00091866898176 * S_MntFishProducts
1216254   +          +    -0.00535373047967 * S_MntFruits  +     0.00104614400259 *
1216255   +        S_MntGoldProds  +    -0.00546951406519 * S_MntSweetProducts
1216256   +          +     0.00368892959186 * S_MonthsAsCustomer
1216257   +          +     0.02364421635033 * S_NumDealsPurchases
1216258   +          +     0.02217693794769 * S_NumWebVisitsMonth
1216259   +          +     0.00595053816856 * S_RFMstat  +     0.01189185855688 *
1216260   +        S_RMntFrq  +    -0.06052732570454 * S_Recency
1216261   +          +    -0.02711209639816 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.27578843014513 * S_AcceptedCmpTotal + -0.00809332778604 * S_Age 
+ -0.01616869766394 * S_Frq + 0.03490362906378 * S_Income + -0.00343804081842 * S_Kidhome + 
-0.00091866898176 * S_MntFishProducts + -0.00535373047967 * S_MntFruits + 0.00104614400259 * 
S_MntGoldProds + -0.00546951406519 * S_MntSweetProducts + 0.00368892959186 * 
S_MonthsAsCustomer + 0.02364421635033 * S_NumDealsPurchases + 0.02217693794769 * 
S_NumWebVisitsMonth + 0.00595053816856 * S_RFMstat + 0.01189185855688 * S_RMntFrq + 
-0.06052732570454 * S_Recency + -0.02711209639816 * S_Teenhome ;
1216262   +   H11  = H11  +     0.17309662130752 * AcceptedCmp10
1216263   +          +     0.18315939906666 * AcceptedCmp20  +     0.16105603567162 *
1216264   +        AcceptedCmp30  +     0.18820830601069 * AcceptedCmp40
1216265   +          +      0.1737861250554 * AcceptedCmp50  +     0.01851503167376 *
1216266   +        Complain0  +     0.13035163298518 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.17309662130752 * AcceptedCmp10 + 0.18315939906666 * 
AcceptedCmp20 + 0.16105603567162 * AcceptedCmp30 + 0.18820830601069 * AcceptedCmp40 + 
0.1737861250554 * AcceptedCmp50 + 0.01851503167376 * Complain0 + 0.13035163298518 * 
HigherEducationBinary0 ;
1216267   +   H11  = H11  +    -0.15299672533263 * Education2n_Cycle
1216268   +          +    -0.16014809431529 * EducationBasic  +     0.11508916289978 *
1216269   +        EducationGraduation  +     0.09635715378324 * EducationMaster
1216270   +          +     0.00839447082799 * Marital_StatusDivorced
1216271   +          +     -0.0238619770984 * Marital_StatusMarried
1216272   +          +     0.01543210213579 * Marital_StatusSingle
1216273   +          +    -0.02651821097459 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.15299672533263 * Education2n_Cycle + -0.16014809431529 * 
EducationBasic + 0.11508916289978 * EducationGraduation + 0.09635715378324 * EducationMaster + 
0.00839447082799 * Marital_StatusDivorced + -0.0238619770984 * Marital_StatusMarried + 
0.01543210213579 * Marital_StatusSingle + -0.02651821097459 * Marital_StatusTogether ;
1216274   +   H11  =    -0.75795359073107 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -0.75795359073107 + H11 ;
1216275   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1216276   +END;
MPRINT(EM_DIAGRAM):   END;
1216277   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1216278   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1216279   +END;
MPRINT(EM_DIAGRAM):   END;
1216280   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1216281   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1216282   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1216283   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1216284   +   P_DepVar1  =     29.5716938262358 * H11 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 29.5716938262358 * H11 ;
1216285   +   P_DepVar1  =    -3.24800133013252 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.24800133013252 + P_DepVar1 ;
1216286   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1216287   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1216288   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1216289   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1216290   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1216291   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1216292   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1216293   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1216294   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1216295   +END;
MPRINT(EM_DIAGRAM):   END;
1216296   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1216297   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1216298   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1216299   +END;
MPRINT(EM_DIAGRAM):   END;
1216300   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1216301   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1216302   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1216303   +END;
MPRINT(EM_DIAGRAM):   END;
1216304   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1216305   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1216306   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1216307   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1216308   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1216309   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1216310   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1216311   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1216312   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1216313   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1216314   +END;
MPRINT(EM_DIAGRAM):   END;
1216315   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1216316   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1216317   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1216318   +drop
1216319   +H11
1216320   +;
MPRINT(EM_DIAGRAM):   drop H11 ;
1216321   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1216322    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1216323    quit;
1216324    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1216325    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1216326    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1216327    retain ID 2 Node "Neural42";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Neural42";
1216328    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1216329    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1453 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 1453 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1216330    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1216331    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1216332    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1453 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 1453 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

1216333    proc sort data=EMWS8.Neural42_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Neural42_variableset out=_temp2(keep=NAME CREATOR);
1216334    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1216335    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.NEURAL42_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1216336    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1216337    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1216338    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1216339    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1216340    proc contents data=EMWS8.Neural42_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Neural42_train out=_meta(keep=NAME) noprint;
1216341    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

1216342    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1216343    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1216344    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 53 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1216345    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1216346    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1216347    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1216348    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 53 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1216349    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1216350    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1216350  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 837 rows and 5 columns.

1216351    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1216352    proc append base=EMWS8.Ensmbl12_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl12_FCMP data=_tempx;
1216353    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL12_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 837 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL12_FCMP has 837 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1216354    filename _pref
1216354  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
1216355    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1216356    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
1216357   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1216358   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1216359   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1216360   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1216361   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1216362   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1216363    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1216364    quit;
1216365    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1216366    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1216367    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1216368    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
1216369    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1216370    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1216371    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1216372    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1216373    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1216374    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
1216375    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1216376    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1216377    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1216378    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1216379    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1216380    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1216381    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
1216382    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

1216383    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1216384    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1216385    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1216386    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1216387    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1216388    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1216389    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1216390    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1216391    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1216391  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

1216392    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1216393    proc append base=EMWS8.Ensmbl12_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl12_FCMP data=_tempx;
1216394    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL12_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL12_FCMP has 841 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1216395    filename _pref
1216395  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
1216396    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1216397    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
1216398   +
1216399   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1216400   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1216400  !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1216401   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1216402   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1216403   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1216404   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1216405   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1216406    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1216407    quit;
1216408    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1216409    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1216410    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1216411    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
1216412    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1216413    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1216414    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1216415    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1216416    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1216417    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
1216418    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1216419    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1216420    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1216421    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1216422    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1216423    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1216424    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
1216425    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1216426    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1216427    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1216428    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1216429    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1216430    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1216431    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1216432    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1216433    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1216434    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1216434  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

1216435    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1216436    proc append base=EMWS8.Ensmbl12_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl12_FCMP data=_tempx;
1216437    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL12_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL12_FCMP has 880 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1216438    filename _pref
1216438  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
1216439    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1216440    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
1216441   +
1216442   +
1216443   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
1216444   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
1216445   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
1216446   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
1216447   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
1216448   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1216449   +
1216450   +
1216451   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
1216452   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
1216453   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
1216454   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
1216455   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
1216456   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1216457   +
1216458   +
1216459   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
1216460   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
1216461   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
1216462   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
1216463   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
1216464   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1216465   +
1216466   +
1216467   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
1216468   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
1216469   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
1216470   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
1216471   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
1216472   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1216473   +
1216474   +
1216475   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
1216476   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
1216477   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
1216478   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
1216479   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
1216480   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1216481   +
1216482   +
1216483   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
1216484   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
1216485   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
1216486   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
1216487   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
1216488   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1216489   +
1216490   +
1216491   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
1216492   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
1216493   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
1216494   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
1216495   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
1216496   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1216497   +
1216498   +
1216499   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
1216500   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
1216501   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
1216502   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
1216503   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
1216504   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1216505   +if
1216506   +_FILTERNORM1 not in ( '.')
1216507   + and
1216508   +_FILTERNORM2 not in ( '.')
1216509   + and
1216510   +_FILTERNORM3 not in ( '.')
1216511   + and
1216512   +_FILTERNORM4 not in ( '.')
1216513   + and
1216514   +_FILTERNORM5 not in ( '.')
1216515   + and
1216516   +_FILTERNORM6 not in ( '.')
1216517   + and
1216518   +_FILTERNORM7 not in ( ' ')
1216519   + and
1216520   +_FILTERNORM8 not in ( ' ')
1216521   +and
1216522   +( Dt_Customer ne .)
1216523   +and ( Income ne . and (Income<=107000))
1216524   +and ( Kidhome ne .)
1216525   +and ( MntFishProducts ne .)
1216526   +and ( MntFruits ne .)
1216527   +and ( MntGoldProds ne .)
1216528   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
1216529   +and ( MntSweetProducts ne .)
1216530   +and ( MntWines ne .)
1216531   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
1216532   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
1216533   +and ( NumStorePurchases ne .)
1216534   +and ( NumWebPurchases ne .)
1216535   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
1216536   +and ( Recency ne .)
1216537   +and ( Teenhome ne .)
1216538   +and ( Year_Birth ne .)
1216539   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
1216540   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
1216541   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
1216542   +end;
MPRINT(EM_DIAGRAM):   end;
1216543   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
1216544   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1216545    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1216546    quit;
1216547    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1216548    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1216549    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1216550    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
1216551    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1216552    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1216553    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1216554    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1216555    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1216556    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
1216557    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1216558    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1216559    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1216560    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1216561    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1216562    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1216563    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
1216564    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      

1216565    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1216566    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1216567    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1216568    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1216569    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1216570    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1216571    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1216572    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1216573    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1216573  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

1216574    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1216575    proc append base=EMWS8.Ensmbl12_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl12_FCMP data=_tempx;
1216576    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL12_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL12_FCMP has 946 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1216577    %macro varDept(fcmpdata=,id=);
1216578    %global nobs&id scoreFlag&id;
1216579    %let scoreFlag&id = 0;
1216580    %if &id=1 or ^&fcmpStart %then %do;
1216581    proc sort data=&fcmpdata out=_temp&id nodupkey;
1216582    by NAME;
1216583    where id=&id and LHS in( %let j=1;
1216584    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
1216585    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
1216586    "&var" %let j = %eval(&j+1);
1216587    %end;
1216588    );
1216589    run;
1216590    %let dsid = %sysfunc(open(_temp&id));
1216591    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1216592    %let dsid = %sysfunc(close(&dsid));
1216593    %if &&nobs&id %then %do;
1216594    %let scoreFlag&id = 1;
1216595    %let fcmpStart = 1;
1216596    %end;
1216597    %else %let fcmpStart = 0;
1216598    %end;
1216599    %else %do;
1216600    proc sort data=&fcmpdata out=_tempid;
1216601    where id=&id;
1216602    by LHS;
1216603    run;
1216604    %let dsid = %sysfunc(open(_tempid));
1216605    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1216606    %let dsid = %sysfunc(close(&dsid));
1216607    %if ^&&nobs&id %then %do;
1216608    proc datasets lib=work nolist;
1216609    delete _tempid;
1216610    run;
1216611    quit;
1216612    %end;
1216613    %else %do;
1216614    data _tempAll;
1216615    set %let j=%eval(&id-1);
1216616    %do x=1 %to &j;
1216617    %if &&nobs&x %then %do;
1216618    _temp&x %end;
1216619    %end;
1216620    ;
1216621    run;
1216622    proc sql;
1216623    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
1216623  ! work._tempid p2 where p.name=p2.lhs;
1216624    quit;
1216625    data _temp&id;
1216626    set _temp&id;
1216627    where LHS ne '' and NAME ne '' and Node ne '';
1216628    run;
1216629    proc datasets lib=work nolist;
1216630    delete _tempAll;
1216631    run;
1216632    %let dsid = %sysfunc(open(_temp&id));
1216633    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1216634    %let dsid = %sysfunc(close(&dsid));
1216635    %if ^&&nobs&id %then %do;
1216636    proc datasets lib=work nolist;
1216637    delete _temp&id;
1216638    run;
1216639    quit;
1216640    %end;
1216641    %else %do;
1216642    %let scoreFlag&id = 1;
1216643    data _temp&id;
1216644    set _temp&id;
1216645    where LHS ne NAME and node ne '';
1216646    run;
1216647    %let dsid = %sysfunc(open(_temp&id));
1216648    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1216649    %let dsid = %sysfunc(close(&dsid));
1216650    %if ^&&nobs&id %then %do;
1216651    proc datasets lib=work nolist;
1216652    delete _temp&id;
1216653    run;
1216654    quit;
1216655    %end;
1216656    %else %do;
1216657    proc sort data=_temp&id nodupkey;
1216658    by LHS NAME;
1216659    run;
1216660    %end;
1216661    %end;
1216662    %end;
1216663    %end;
1216664    %mend varDept;
1216665    %macro optCode(outdata=fcmpdata);
1216666    %global fcmpStart;
1216667    %let fcmpStart = 0;
1216668    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
1216669    %let NumNodes=9;
1216670    %do k=1 %to &NumNodes;
1216671    %vardept(fcmpdata=&outdata, id=&k);
1216672    %end;
1216673    %mend optCode;
1216674    %optcode(outData=EMWS8.Ensmbl12_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl12_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL12_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl12_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 106 observations read from the data set EMWS8.ENSMBL12_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 79 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 27 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl12_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL12_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl12_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL12_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl12_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL12_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 27 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 2 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl12_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL12_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 29 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 33 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 33 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 33 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 33 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl12_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL12_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: There were 33 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 62 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl12_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL12_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl12_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL12_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

1216675    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
1216676    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1216677    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
1216678    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1216679    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
1216680    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1216681    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
1216682    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1216683    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1216684    create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
1216684  ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 2 rows and 3 columns.

1216685    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1216686    data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
1216687    set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
1216688    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 2 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 2 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1216689    filename _pref
1216689  ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural37\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural37\EMPUBLISHSCORE.sas";
1216690    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1216691    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Neural37\EMPUBLISHSCORE.sas.
1216692   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1216693   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1216694   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1216695   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1216696   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1216697   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1216698   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1216699   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1216700   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1216701   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1216702   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1216703   +LENGTH _WARN_ $4
1216704   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
1216705   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1216706   +
1216707   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1216708   +
1216709   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1216710   +
1216711   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1216712   +
1216713   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1216714   +
1216715   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1216716   +
1216717   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1216718   +
1216719   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1216720   +
1216721   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1216722   +
1216723   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1216724   +
1216725   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1216726   +
1216727   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1216728   +
1216729   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1216730   +
1216731   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1216732   +
1216733   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1216734   +
1216735   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1216736   +
1216737   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1216738   +
1216739   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1216740   +
1216741   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1216742   +
1216743   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1216744   +
1216745   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1216746   +
1216747   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1216748   +
1216749   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1216750   +
1216751   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1216752   +
1216753   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1216754   +
1216755   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1216756   +
1216757   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1216758   +
1216759   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1216760   +
1216761   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1216762   +
1216763   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1216764   +
1216765   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1216766   +
1216767   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1216768   +
1216769   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1216770   +
1216771   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1216772   +
1216773   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1216774   +
1216775   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1216776   +
1216777   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1216778   +
1216779   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1216780   +
1216781   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1216782   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1216783   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1216784   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1216785   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1216786   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1216787   +end;
MPRINT(EM_DIAGRAM):   end;
1216788   +else do;
MPRINT(EM_DIAGRAM):   else do;
1216789   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1216790   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1216791   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1216792   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1216793   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1216794   +   end;
MPRINT(EM_DIAGRAM):   end;
1216795   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1216796   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1216797   +   end;
MPRINT(EM_DIAGRAM):   end;
1216798   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1216799   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1216800   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1216801   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1216802   +   end;
MPRINT(EM_DIAGRAM):   end;
1216803   +end;
MPRINT(EM_DIAGRAM):   end;
1216804   +
1216805   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1216806   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1216807   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1216808   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1216809   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1216810   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1216811   +end;
MPRINT(EM_DIAGRAM):   end;
1216812   +else do;
MPRINT(EM_DIAGRAM):   else do;
1216813   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1216814   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1216815   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1216816   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1216817   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1216818   +   end;
MPRINT(EM_DIAGRAM):   end;
1216819   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1216820   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1216821   +   end;
MPRINT(EM_DIAGRAM):   end;
1216822   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1216823   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1216824   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1216825   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1216826   +   end;
MPRINT(EM_DIAGRAM):   end;
1216827   +end;
MPRINT(EM_DIAGRAM):   end;
1216828   +
1216829   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1216830   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1216831   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1216832   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1216833   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1216834   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1216835   +end;
MPRINT(EM_DIAGRAM):   end;
1216836   +else do;
MPRINT(EM_DIAGRAM):   else do;
1216837   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1216838   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1216839   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1216840   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1216841   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1216842   +   end;
MPRINT(EM_DIAGRAM):   end;
1216843   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1216844   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1216845   +   end;
MPRINT(EM_DIAGRAM):   end;
1216846   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1216847   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1216848   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1216849   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1216850   +   end;
MPRINT(EM_DIAGRAM):   end;
1216851   +end;
MPRINT(EM_DIAGRAM):   end;
1216852   +
1216853   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1216854   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1216855   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1216856   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1216857   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1216858   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1216859   +end;
MPRINT(EM_DIAGRAM):   end;
1216860   +else do;
MPRINT(EM_DIAGRAM):   else do;
1216861   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1216862   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1216863   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1216864   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1216865   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1216866   +   end;
MPRINT(EM_DIAGRAM):   end;
1216867   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1216868   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1216869   +   end;
MPRINT(EM_DIAGRAM):   end;
1216870   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1216871   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1216872   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1216873   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1216874   +   end;
MPRINT(EM_DIAGRAM):   end;
1216875   +end;
MPRINT(EM_DIAGRAM):   end;
1216876   +
1216877   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1216878   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1216879   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1216880   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1216881   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1216882   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1216883   +end;
MPRINT(EM_DIAGRAM):   end;
1216884   +else do;
MPRINT(EM_DIAGRAM):   else do;
1216885   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1216886   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1216887   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1216888   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1216889   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1216890   +   end;
MPRINT(EM_DIAGRAM):   end;
1216891   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1216892   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1216893   +   end;
MPRINT(EM_DIAGRAM):   end;
1216894   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1216895   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1216896   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1216897   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1216898   +   end;
MPRINT(EM_DIAGRAM):   end;
1216899   +end;
MPRINT(EM_DIAGRAM):   end;
1216900   +
1216901   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1216902   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1216903   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1216904   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1216905   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1216906   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1216907   +end;
MPRINT(EM_DIAGRAM):   end;
1216908   +else do;
MPRINT(EM_DIAGRAM):   else do;
1216909   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1216910   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1216911   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1216912   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1216913   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1216914   +   end;
MPRINT(EM_DIAGRAM):   end;
1216915   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1216916   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1216917   +   end;
MPRINT(EM_DIAGRAM):   end;
1216918   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1216919   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1216920   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1216921   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1216922   +   end;
MPRINT(EM_DIAGRAM):   end;
1216923   +end;
MPRINT(EM_DIAGRAM):   end;
1216924   +
1216925   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1216926   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1216927   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1216928   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1216929   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1216930   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1216931   +end;
MPRINT(EM_DIAGRAM):   end;
1216932   +else do;
MPRINT(EM_DIAGRAM):   else do;
1216933   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1216934   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1216935   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1216936   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1216937   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1216938   +   end;
MPRINT(EM_DIAGRAM):   end;
1216939   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1216940   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1216941   +   end;
MPRINT(EM_DIAGRAM):   end;
1216942   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1216943   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1216944   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1216945   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1216946   +   end;
MPRINT(EM_DIAGRAM):   end;
1216947   +end;
MPRINT(EM_DIAGRAM):   end;
1216948   +
1216949   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1216950   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
1216951   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1216952   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1216953   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1216954   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1216955   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1216956   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1216957   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1216958   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1216959   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1216960   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1216961   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1216962   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1216963   +end;
MPRINT(EM_DIAGRAM):   end;
1216964   +else do;
MPRINT(EM_DIAGRAM):   else do;
1216965   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1216966   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1216967   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1216968   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1216969   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1216970   +   end;
MPRINT(EM_DIAGRAM):   end;
1216971   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1216972   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1216973   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1216974   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1216975   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1216976   +   end;
MPRINT(EM_DIAGRAM):   end;
1216977   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1216978   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1216979   +   end;
MPRINT(EM_DIAGRAM):   end;
1216980   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1216981   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1216982   +   end;
MPRINT(EM_DIAGRAM):   end;
1216983   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1216984   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1216985   +   end;
MPRINT(EM_DIAGRAM):   end;
1216986   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1216987   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1216988   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1216989   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1216990   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1216991   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1216992   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1216993   +   end;
MPRINT(EM_DIAGRAM):   end;
1216994   +end;
MPRINT(EM_DIAGRAM):   end;
1216995   +
1216996   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1216997   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1216998   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
1216999   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1217000   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1217001   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1217002   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1217003   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1217004   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1217005   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1217006   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1217007   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1217008   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1217009   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1217010   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1217011   +end;
MPRINT(EM_DIAGRAM):   end;
1217012   +else do;
MPRINT(EM_DIAGRAM):   else do;
1217013   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1217014   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1217015   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1217016   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1217017   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1217018   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1217019   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1217020   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1217021   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1217022   +         end;
MPRINT(EM_DIAGRAM):   end;
1217023   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1217024   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1217025   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1217026   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1217027   +            end;
MPRINT(EM_DIAGRAM):   end;
1217028   +         end;
MPRINT(EM_DIAGRAM):   end;
1217029   +      end;
MPRINT(EM_DIAGRAM):   end;
1217030   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1217031   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1217032   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1217033   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1217034   +         end;
MPRINT(EM_DIAGRAM):   end;
1217035   +      end;
MPRINT(EM_DIAGRAM):   end;
1217036   +   end;
MPRINT(EM_DIAGRAM):   end;
1217037   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1217038   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1217039   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1217040   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1217041   +      end;
MPRINT(EM_DIAGRAM):   end;
1217042   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1217043   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1217044   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1217045   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1217046   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1217047   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1217048   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1217049   +         end;
MPRINT(EM_DIAGRAM):   end;
1217050   +      end;
MPRINT(EM_DIAGRAM):   end;
1217051   +   end;
MPRINT(EM_DIAGRAM):   end;
1217052   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1217053   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1217054   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1217055   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1217056   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1217057   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1217058   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1217059   +   end;
MPRINT(EM_DIAGRAM):   end;
1217060   +end;
MPRINT(EM_DIAGRAM):   end;
1217061   +
1217062   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1217063   +*** Checking missing input Interval
1217064   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1217065   +
1217066   +IF NMISS(
1217067   +   AcceptedCmpTotal ,
1217068   +   Age ,
1217069   +   Frq ,
1217070   +   Income ,
1217071   +   Kidhome ,
1217072   +   MntFishProducts ,
1217073   +   MntFruits ,
1217074   +   MntGoldProds ,
1217075   +   MntSweetProducts ,
1217076   +   MonthsAsCustomer ,
1217077   +   NumDealsPurchases ,
1217078   +   NumWebVisitsMonth ,
1217079   +   RFMstat ,
1217080   +   RMntFrq ,
1217081   +   Recency ,
1217082   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , 
MntFishProducts , MntFruits , MntGoldProds , MntSweetProducts , MonthsAsCustomer , 
NumDealsPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , Teenhome ) THEN DO;
1217083   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1217084   +
1217085   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1217086   +END;
MPRINT(EM_DIAGRAM):   END;
1217087   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1217088   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1217089   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1217090   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1217091   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1217092   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1217093   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1217094   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1217095   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1217096   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1217097   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1217098   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1217099   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1217100   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1217101   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1217102   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1217103   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1217104   +   S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
1217105   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
1217106   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1217107   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1217108   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1217109   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1217110   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1217111   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1217112   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1217113   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1217114   +END;
MPRINT(EM_DIAGRAM):   END;
1217115   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1217116   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1217117   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1217118   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1217119   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1217120   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1217121   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1217122   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1217123   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1217124   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1217125   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1217126   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1217127   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1217128   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1217129   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1217130   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1217131   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1217132   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1217133   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1217134   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1217135   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1217136   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1217137   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1217138   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1217139   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1217140   +   ELSE S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
1217141   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
1217142   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1217143   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1217144   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1217145   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1217146   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1217147   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1217148   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1217149   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1217150   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1217151   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1217152   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1217153   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1217154   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1217155   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1217156   +END;
MPRINT(EM_DIAGRAM):   END;
1217157   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1217158   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1217159   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1217160   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1217161   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1217162   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1217163   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1217164   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1217165   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1217166   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1217167   +   H11  =     0.00529231235481 * S_AcceptedCmpTotal  +      0.0343326832257 *
1217168   +        S_Age  +    -0.05203541829299 * S_Frq  +    -0.45089409751085 *
1217169   +        S_Income  +     0.21434017685167 * S_Kidhome
1217170   +          +    -0.00245095061163 * S_MntFishProducts
1217171   +          +     0.05045649639793 * S_MntFruits  +     0.00647541618092 *
1217172   +        S_MntGoldProds  +     0.05644685811145 * S_MntSweetProducts
1217173   +          +     -0.0436897985886 * S_MonthsAsCustomer
1217174   +          +    -0.11066147452589 * S_NumDealsPurchases
1217175   +          +    -0.15815826211613 * S_NumWebVisitsMonth
1217176   +          +    -0.02488895787197 * S_RFMstat  +    -0.07848372303852 *
1217177   +        S_RMntFrq  +     0.44584112602611 * S_Recency
1217178   +          +     0.31802924624272 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.00529231235481 * S_AcceptedCmpTotal + 0.0343326832257 * S_Age + 
-0.05203541829299 * S_Frq + -0.45089409751085 * S_Income + 0.21434017685167 * S_Kidhome + 
-0.00245095061163 * S_MntFishProducts + 0.05045649639793 * S_MntFruits + 0.00647541618092 * 
S_MntGoldProds + 0.05644685811145 * S_MntSweetProducts + -0.0436897985886 * S_MonthsAsCustomer 
+ -0.11066147452589 * S_NumDealsPurchases + -0.15815826211613 * S_NumWebVisitsMonth + 
-0.02488895787197 * S_RFMstat + -0.07848372303852 * S_RMntFrq + 0.44584112602611 * S_Recency + 
0.31802924624272 * S_Teenhome ;
1217179   +   H12  =    -0.10209163274452 * S_AcceptedCmpTotal  +     0.11827354067819 *
1217180   +        S_Age  +     1.40350663058769 * S_Frq  +     0.61315172399898 *
1217181   +        S_Income  +    -0.34676303560555 * S_Kidhome
1217182   +          +    -0.19666313381749 * S_MntFishProducts
1217183   +          +     0.02049419497141 * S_MntFruits  +    -0.20582738219797 *
1217184   +        S_MntGoldProds  +    -0.07237052620156 * S_MntSweetProducts
1217185   +          +     0.11921399006499 * S_MonthsAsCustomer
1217186   +          +    -0.67623098057964 * S_NumDealsPurchases
1217187   +          +    -0.59190965073948 * S_NumWebVisitsMonth
1217188   +          +    -0.20613596895241 * S_RFMstat  +    -0.32007172204835 *
1217189   +        S_RMntFrq  +     0.69616846305831 * S_Recency
1217190   +          +     -0.3023019033387 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -0.10209163274452 * S_AcceptedCmpTotal + 0.11827354067819 * S_Age 
+ 1.40350663058769 * S_Frq + 0.61315172399898 * S_Income + -0.34676303560555 * S_Kidhome + 
-0.19666313381749 * S_MntFishProducts + 0.02049419497141 * S_MntFruits + -0.20582738219797 * 
S_MntGoldProds + -0.07237052620156 * S_MntSweetProducts + 0.11921399006499 * 
S_MonthsAsCustomer + -0.67623098057964 * S_NumDealsPurchases + -0.59190965073948 * 
S_NumWebVisitsMonth + -0.20613596895241 * S_RFMstat + -0.32007172204835 * S_RMntFrq + 
0.69616846305831 * S_Recency + -0.3023019033387 * S_Teenhome ;
1217191   +   H11  = H11  +     0.19876934538613 * AcceptedCmp10
1217192   +          +     0.18951634162327 * AcceptedCmp20  +     0.24251361227823 *
1217193   +        AcceptedCmp30  +     0.16680588614581 * AcceptedCmp40
1217194   +          +     0.15217121708385 * AcceptedCmp50  +    -0.06185934853348 *
1217195   +        Complain0  +    -0.02156128066423 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.19876934538613 * AcceptedCmp10 + 0.18951634162327 * 
AcceptedCmp20 + 0.24251361227823 * AcceptedCmp30 + 0.16680588614581 * AcceptedCmp40 + 
0.15217121708385 * AcceptedCmp50 + -0.06185934853348 * Complain0 + -0.02156128066423 * 
HigherEducationBinary0 ;
1217196   +   H12  = H12  +     0.42936838873103 * AcceptedCmp10
1217197   +          +     0.31531206230129 * AcceptedCmp20  +     0.61595858080275 *
1217198   +        AcceptedCmp30  +    -0.02848071087974 * AcceptedCmp40
1217199   +          +     0.26463885464849 * AcceptedCmp50  +    -0.25408897937456 *
1217200   +        Complain0  +     0.37165308117925 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.42936838873103 * AcceptedCmp10 + 0.31531206230129 * 
AcceptedCmp20 + 0.61595858080275 * AcceptedCmp30 + -0.02848071087974 * AcceptedCmp40 + 
0.26463885464849 * AcceptedCmp50 + -0.25408897937456 * Complain0 + 0.37165308117925 * 
HigherEducationBinary0 ;
1217201   +   H11  = H11  +    -0.06004623502296 * Education2n_Cycle
1217202   +          +    -0.14055981460472 * EducationBasic  +    -0.02226325005028 *
1217203   +        EducationGraduation  +     0.17382426297237 * EducationMaster
1217204   +          +    -0.09599098826432 * Marital_StatusDivorced
1217205   +          +     0.29380773989654 * Marital_StatusMarried
1217206   +          +    -0.24344588832351 * Marital_StatusSingle
1217207   +          +     0.26861619886367 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.06004623502296 * Education2n_Cycle + -0.14055981460472 * 
EducationBasic + -0.02226325005028 * EducationGraduation + 0.17382426297237 * EducationMaster 
+ -0.09599098826432 * Marital_StatusDivorced + 0.29380773989654 * Marital_StatusMarried + 
-0.24344588832351 * Marital_StatusSingle + 0.26861619886367 * Marital_StatusTogether ;
1217208   +   H12  = H12  +    -0.05553559517027 * Education2n_Cycle
1217209   +          +     0.10110187812592 * EducationBasic  +    -0.01454720780814 *
1217210   +        EducationGraduation  +    -0.23207789950977 * EducationMaster
1217211   +          +    -0.18210246138549 * Marital_StatusDivorced
1217212   +          +    -0.33707503901978 * Marital_StatusMarried
1217213   +          +     0.45975144433549 * Marital_StatusSingle
1217214   +          +    -0.30223475265715 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.05553559517027 * Education2n_Cycle + 0.10110187812592 * 
EducationBasic + -0.01454720780814 * EducationGraduation + -0.23207789950977 * EducationMaster 
+ -0.18210246138549 * Marital_StatusDivorced + -0.33707503901978 * Marital_StatusMarried + 
0.45975144433549 * Marital_StatusSingle + -0.30223475265715 * Marital_StatusTogether ;
1217215   +   H11  =    -0.01761609034495 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -0.01761609034495 + H11 ;
1217216   +   H12  =     1.54520059814945 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 1.54520059814945 + H12 ;
1217217   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1217218   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1217219   +END;
MPRINT(EM_DIAGRAM):   END;
1217220   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1217221   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1217222   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1217223   +END;
MPRINT(EM_DIAGRAM):   END;
1217224   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1217225   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1217226   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1217227   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1217228   +   P_DepVar1  =    -5.00819716007083 * H11  +    -2.90644970096905 * H12 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -5.00819716007083 * H11 + -2.90644970096905 * H12 ;
1217229   +   P_DepVar1  =     0.91635286006129 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.91635286006129 + P_DepVar1 ;
1217230   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1217231   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1217232   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1217233   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1217234   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1217235   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1217236   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1217237   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1217238   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1217239   +END;
MPRINT(EM_DIAGRAM):   END;
1217240   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1217241   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1217242   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1217243   +END;
MPRINT(EM_DIAGRAM):   END;
1217244   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1217245   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1217246   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1217247   +END;
MPRINT(EM_DIAGRAM):   END;
1217248   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1217249   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1217250   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1217251   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1217252   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1217253   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1217254   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1217255   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1217256   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1217257   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1217258   +END;
MPRINT(EM_DIAGRAM):   END;
1217259   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1217260   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1217261   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1217262   +drop
1217263   +H11
1217264   +H12
1217265   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 ;
1217266   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1217267    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1217268    quit;
1217269    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1217270    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1217271    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1217272    retain ID 2 Node "Neural37";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Neural37";
1217273    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1217274    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1599 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 1599 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1217275    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1217276    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1217277    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1599 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 1599 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1217278    proc sort data=EMWS8.Neural37_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Neural37_variableset out=_temp2(keep=NAME CREATOR);
1217279    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1217280    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.NEURAL37_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1217281    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1217282    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1217283    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1217284    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1217285    proc contents data=EMWS8.Neural37_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Neural37_train out=_meta(keep=NAME) noprint;
1217286    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

1217287    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1217288    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1217289    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 53 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1217290    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1217291    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1217292    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1217293    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 53 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1217294    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1217295    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1217295  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 887 rows and 5 columns.

1217296    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1217297    proc append base=EMWS8.Ensmbl12_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl12_FCMP data=_tempx;
1217298    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL12_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 887 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL12_FCMP has 887 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1217299    filename _pref
1217299  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
1217300    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1217301    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
1217302   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1217303   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1217304   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1217305   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1217306   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1217307   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1217308    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1217309    quit;
1217310    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1217311    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1217312    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1217313    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
1217314    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1217315    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1217316    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1217317    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1217318    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

1217319    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
1217320    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1217321    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1217322    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1217323    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1217324    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1217325    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1217326    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
1217327    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

1217328    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1217329    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1217330    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1217331    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1217332    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1217333    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1217334    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1217335    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1217336    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1217336  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

1217337    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1217338    proc append base=EMWS8.Ensmbl12_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl12_FCMP data=_tempx;
1217339    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL12_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL12_FCMP has 891 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1217340    filename _pref
1217340  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
1217341    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1217342    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
1217343   +
1217344   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1217345   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1217345  !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1217346   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1217347   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1217348   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1217349   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1217350   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1217351    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1217352    quit;
1217353    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1217354    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1217355    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1217356    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
1217357    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1217358    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1217359    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1217360    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1217361    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1217362    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
1217363    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1217364    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1217365    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1217366    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1217367    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1217368    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1217369    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
1217370    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1217371    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1217372    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1217373    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1217374    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1217375    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1217376    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1217377    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1217378    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1217379    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1217379  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

1217380    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1217381    proc append base=EMWS8.Ensmbl12_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl12_FCMP data=_tempx;
1217382    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL12_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL12_FCMP has 930 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1217383    filename _pref
1217383  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
1217384    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1217385    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
1217386   +
1217387   +
1217388   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
1217389   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
1217390   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
1217391   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
1217392   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
1217393   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1217394   +
1217395   +
1217396   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
1217397   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
1217398   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
1217399   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
1217400   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
1217401   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1217402   +
1217403   +
1217404   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
1217405   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
1217406   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
1217407   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
1217408   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
1217409   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1217410   +
1217411   +
1217412   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
1217413   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
1217414   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
1217415   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
1217416   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
1217417   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1217418   +
1217419   +
1217420   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
1217421   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
1217422   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
1217423   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
1217424   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
1217425   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1217426   +
1217427   +
1217428   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
1217429   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
1217430   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
1217431   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
1217432   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
1217433   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1217434   +
1217435   +
1217436   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
1217437   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
1217438   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
1217439   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
1217440   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
1217441   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1217442   +
1217443   +
1217444   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
1217445   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
1217446   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
1217447   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
1217448   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
1217449   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1217450   +if
1217451   +_FILTERNORM1 not in ( '.')
1217452   + and
1217453   +_FILTERNORM2 not in ( '.')
1217454   + and
1217455   +_FILTERNORM3 not in ( '.')
1217456   + and
1217457   +_FILTERNORM4 not in ( '.')
1217458   + and
1217459   +_FILTERNORM5 not in ( '.')
1217460   + and
1217461   +_FILTERNORM6 not in ( '.')
1217462   + and
1217463   +_FILTERNORM7 not in ( ' ')
1217464   + and
1217465   +_FILTERNORM8 not in ( ' ')
1217466   +and
1217467   +( Dt_Customer ne .)
1217468   +and ( Income ne . and (Income<=107000))
1217469   +and ( Kidhome ne .)
1217470   +and ( MntFishProducts ne .)
1217471   +and ( MntFruits ne .)
1217472   +and ( MntGoldProds ne .)
1217473   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
1217474   +and ( MntSweetProducts ne .)
1217475   +and ( MntWines ne .)
1217476   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
1217477   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
1217478   +and ( NumStorePurchases ne .)
1217479   +and ( NumWebPurchases ne .)
1217480   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
1217481   +and ( Recency ne .)
1217482   +and ( Teenhome ne .)
1217483   +and ( Year_Birth ne .)
1217484   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
1217485   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
1217486   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
1217487   +end;
MPRINT(EM_DIAGRAM):   end;
1217488   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
1217489   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1217490    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1217491    quit;
1217492    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1217493    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1217494    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1217495    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
1217496    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1217497    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1217498    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1217499    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1217500    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1217501    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
1217502    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1217503    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1217504    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1217505    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1217506    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1217507    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1217508    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
1217509    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

1217510    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1217511    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1217512    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1217513    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1217514    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1217515    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1217516    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1217517    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1217518    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1217518  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

1217519    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1217520    proc append base=EMWS8.Ensmbl12_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl12_FCMP data=_tempx;
1217521    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL12_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL12_FCMP has 996 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1217522    %macro varDept(fcmpdata=,id=);
1217523    %global nobs&id scoreFlag&id;
1217524    %let scoreFlag&id = 0;
1217525    %if &id=1 or ^&fcmpStart %then %do;
1217526    proc sort data=&fcmpdata out=_temp&id nodupkey;
1217527    by NAME;
1217528    where id=&id and LHS in( %let j=1;
1217529    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
1217530    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
1217531    "&var" %let j = %eval(&j+1);
1217532    %end;
1217533    );
1217534    run;
1217535    %let dsid = %sysfunc(open(_temp&id));
1217536    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1217537    %let dsid = %sysfunc(close(&dsid));
1217538    %if &&nobs&id %then %do;
1217539    %let scoreFlag&id = 1;
1217540    %let fcmpStart = 1;
1217541    %end;
1217542    %else %let fcmpStart = 0;
1217543    %end;
1217544    %else %do;
1217545    proc sort data=&fcmpdata out=_tempid;
1217546    where id=&id;
1217547    by LHS;
1217548    run;
1217549    %let dsid = %sysfunc(open(_tempid));
1217550    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1217551    %let dsid = %sysfunc(close(&dsid));
1217552    %if ^&&nobs&id %then %do;
1217553    proc datasets lib=work nolist;
1217554    delete _tempid;
1217555    run;
1217556    quit;
1217557    %end;
1217558    %else %do;
1217559    data _tempAll;
1217560    set %let j=%eval(&id-1);
1217561    %do x=1 %to &j;
1217562    %if &&nobs&x %then %do;
1217563    _temp&x %end;
1217564    %end;
1217565    ;
1217566    run;
1217567    proc sql;
1217568    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
1217568  ! work._tempid p2 where p.name=p2.lhs;
1217569    quit;
1217570    data _temp&id;
1217571    set _temp&id;
1217572    where LHS ne '' and NAME ne '' and Node ne '';
1217573    run;
1217574    proc datasets lib=work nolist;
1217575    delete _tempAll;
1217576    run;
1217577    %let dsid = %sysfunc(open(_temp&id));
1217578    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1217579    %let dsid = %sysfunc(close(&dsid));
1217580    %if ^&&nobs&id %then %do;
1217581    proc datasets lib=work nolist;
1217582    delete _temp&id;
1217583    run;
1217584    quit;
1217585    %end;
1217586    %else %do;
1217587    %let scoreFlag&id = 1;
1217588    data _temp&id;
1217589    set _temp&id;
1217590    where LHS ne NAME and node ne '';
1217591    run;
1217592    %let dsid = %sysfunc(open(_temp&id));
1217593    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1217594    %let dsid = %sysfunc(close(&dsid));
1217595    %if ^&&nobs&id %then %do;
1217596    proc datasets lib=work nolist;
1217597    delete _temp&id;
1217598    run;
1217599    quit;
1217600    %end;
1217601    %else %do;
1217602    proc sort data=_temp&id nodupkey;
1217603    by LHS NAME;
1217604    run;
1217605    %end;
1217606    %end;
1217607    %end;
1217608    %end;
1217609    %mend varDept;
1217610    %macro optCode(outdata=fcmpdata);
1217611    %global fcmpStart;
1217612    %let fcmpStart = 0;
1217613    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
1217614    %let NumNodes=9;
1217615    %do k=1 %to &NumNodes;
1217616    %vardept(fcmpdata=&outdata, id=&k);
1217617    %end;
1217618    %mend optCode;
1217619    %optcode(outData=EMWS8.Ensmbl12_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl12_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL12_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl12_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 106 observations read from the data set EMWS8.ENSMBL12_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 79 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 27 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl12_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL12_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl12_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL12_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl12_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL12_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 27 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 2 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl12_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL12_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 29 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 33 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 33 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 33 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 33 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl12_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL12_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: There were 33 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 62 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl12_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL12_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl12_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL12_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

1217620    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
1217621    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1217622    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
1217623    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1217624    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
1217625    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1217626    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
1217627    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1217628    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1217629    create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
1217629  ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 2 rows and 3 columns.

1217630    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.03 seconds
      

1217631    data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
1217632    set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
1217633    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 2 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 2 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1217634    filename _pref
1217634  ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural38\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural38\EMPUBLISHSCORE.sas";
1217635    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1217636    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Neural38\EMPUBLISHSCORE.sas.
1217637   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1217638   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1217639   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1217640   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1217641   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1217642   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1217643   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1217644   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1217645   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1217646   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1217647   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1217648   +LENGTH _WARN_ $4
1217649   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
1217650   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1217651   +
1217652   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1217653   +
1217654   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1217655   +
1217656   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1217657   +
1217658   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1217659   +
1217660   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1217661   +
1217662   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1217663   +
1217664   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1217665   +
1217666   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1217667   +
1217668   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1217669   +
1217670   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1217671   +
1217672   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1217673   +
1217674   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1217675   +
1217676   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1217677   +
1217678   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1217679   +
1217680   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1217681   +
1217682   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1217683   +
1217684   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1217685   +
1217686   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1217687   +
1217688   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1217689   +
1217690   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1217691   +
1217692   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1217693   +
1217694   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1217695   +
1217696   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1217697   +
1217698   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1217699   +
1217700   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1217701   +
1217702   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1217703   +
1217704   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1217705   +
1217706   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1217707   +
1217708   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1217709   +
1217710   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1217711   +
1217712   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1217713   +
1217714   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1217715   +
1217716   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1217717   +
1217718   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1217719   +
1217720   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1217721   +
1217722   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1217723   +
1217724   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1217725   +
1217726   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1217727   +
1217728   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1217729   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1217730   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1217731   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1217732   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1217733   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1217734   +end;
MPRINT(EM_DIAGRAM):   end;
1217735   +else do;
MPRINT(EM_DIAGRAM):   else do;
1217736   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1217737   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1217738   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1217739   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1217740   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1217741   +   end;
MPRINT(EM_DIAGRAM):   end;
1217742   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1217743   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1217744   +   end;
MPRINT(EM_DIAGRAM):   end;
1217745   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1217746   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1217747   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1217748   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1217749   +   end;
MPRINT(EM_DIAGRAM):   end;
1217750   +end;
MPRINT(EM_DIAGRAM):   end;
1217751   +
1217752   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1217753   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1217754   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1217755   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1217756   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1217757   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1217758   +end;
MPRINT(EM_DIAGRAM):   end;
1217759   +else do;
MPRINT(EM_DIAGRAM):   else do;
1217760   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1217761   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1217762   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1217763   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1217764   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1217765   +   end;
MPRINT(EM_DIAGRAM):   end;
1217766   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1217767   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1217768   +   end;
MPRINT(EM_DIAGRAM):   end;
1217769   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1217770   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1217771   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1217772   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1217773   +   end;
MPRINT(EM_DIAGRAM):   end;
1217774   +end;
MPRINT(EM_DIAGRAM):   end;
1217775   +
1217776   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1217777   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1217778   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1217779   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1217780   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1217781   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1217782   +end;
MPRINT(EM_DIAGRAM):   end;
1217783   +else do;
MPRINT(EM_DIAGRAM):   else do;
1217784   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1217785   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1217786   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1217787   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1217788   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1217789   +   end;
MPRINT(EM_DIAGRAM):   end;
1217790   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1217791   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1217792   +   end;
MPRINT(EM_DIAGRAM):   end;
1217793   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1217794   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1217795   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1217796   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1217797   +   end;
MPRINT(EM_DIAGRAM):   end;
1217798   +end;
MPRINT(EM_DIAGRAM):   end;
1217799   +
1217800   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1217801   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1217802   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1217803   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1217804   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1217805   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1217806   +end;
MPRINT(EM_DIAGRAM):   end;
1217807   +else do;
MPRINT(EM_DIAGRAM):   else do;
1217808   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1217809   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1217810   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1217811   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1217812   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1217813   +   end;
MPRINT(EM_DIAGRAM):   end;
1217814   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1217815   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1217816   +   end;
MPRINT(EM_DIAGRAM):   end;
1217817   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1217818   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1217819   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1217820   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1217821   +   end;
MPRINT(EM_DIAGRAM):   end;
1217822   +end;
MPRINT(EM_DIAGRAM):   end;
1217823   +
1217824   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1217825   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1217826   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1217827   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1217828   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1217829   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1217830   +end;
MPRINT(EM_DIAGRAM):   end;
1217831   +else do;
MPRINT(EM_DIAGRAM):   else do;
1217832   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1217833   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1217834   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1217835   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1217836   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1217837   +   end;
MPRINT(EM_DIAGRAM):   end;
1217838   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1217839   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1217840   +   end;
MPRINT(EM_DIAGRAM):   end;
1217841   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1217842   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1217843   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1217844   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1217845   +   end;
MPRINT(EM_DIAGRAM):   end;
1217846   +end;
MPRINT(EM_DIAGRAM):   end;
1217847   +
1217848   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1217849   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1217850   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1217851   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1217852   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1217853   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1217854   +end;
MPRINT(EM_DIAGRAM):   end;
1217855   +else do;
MPRINT(EM_DIAGRAM):   else do;
1217856   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1217857   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1217858   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1217859   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1217860   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1217861   +   end;
MPRINT(EM_DIAGRAM):   end;
1217862   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1217863   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1217864   +   end;
MPRINT(EM_DIAGRAM):   end;
1217865   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1217866   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1217867   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1217868   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1217869   +   end;
MPRINT(EM_DIAGRAM):   end;
1217870   +end;
MPRINT(EM_DIAGRAM):   end;
1217871   +
1217872   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1217873   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1217874   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1217875   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1217876   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1217877   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1217878   +end;
MPRINT(EM_DIAGRAM):   end;
1217879   +else do;
MPRINT(EM_DIAGRAM):   else do;
1217880   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1217881   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1217882   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1217883   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1217884   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1217885   +   end;
MPRINT(EM_DIAGRAM):   end;
1217886   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1217887   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1217888   +   end;
MPRINT(EM_DIAGRAM):   end;
1217889   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1217890   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1217891   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1217892   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1217893   +   end;
MPRINT(EM_DIAGRAM):   end;
1217894   +end;
MPRINT(EM_DIAGRAM):   end;
1217895   +
1217896   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1217897   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
1217898   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1217899   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1217900   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1217901   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1217902   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1217903   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1217904   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1217905   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1217906   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1217907   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1217908   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1217909   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1217910   +end;
MPRINT(EM_DIAGRAM):   end;
1217911   +else do;
MPRINT(EM_DIAGRAM):   else do;
1217912   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1217913   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1217914   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1217915   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1217916   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1217917   +   end;
MPRINT(EM_DIAGRAM):   end;
1217918   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1217919   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1217920   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1217921   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1217922   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1217923   +   end;
MPRINT(EM_DIAGRAM):   end;
1217924   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1217925   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1217926   +   end;
MPRINT(EM_DIAGRAM):   end;
1217927   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1217928   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1217929   +   end;
MPRINT(EM_DIAGRAM):   end;
1217930   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1217931   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1217932   +   end;
MPRINT(EM_DIAGRAM):   end;
1217933   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1217934   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1217935   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1217936   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1217937   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1217938   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1217939   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1217940   +   end;
MPRINT(EM_DIAGRAM):   end;
1217941   +end;
MPRINT(EM_DIAGRAM):   end;
1217942   +
1217943   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1217944   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1217945   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
1217946   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1217947   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1217948   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1217949   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1217950   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1217951   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1217952   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1217953   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1217954   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1217955   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1217956   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1217957   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1217958   +end;
MPRINT(EM_DIAGRAM):   end;
1217959   +else do;
MPRINT(EM_DIAGRAM):   else do;
1217960   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1217961   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1217962   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1217963   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1217964   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1217965   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1217966   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1217967   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1217968   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1217969   +         end;
MPRINT(EM_DIAGRAM):   end;
1217970   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1217971   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1217972   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1217973   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1217974   +            end;
MPRINT(EM_DIAGRAM):   end;
1217975   +         end;
MPRINT(EM_DIAGRAM):   end;
1217976   +      end;
MPRINT(EM_DIAGRAM):   end;
1217977   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1217978   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1217979   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1217980   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1217981   +         end;
MPRINT(EM_DIAGRAM):   end;
1217982   +      end;
MPRINT(EM_DIAGRAM):   end;
1217983   +   end;
MPRINT(EM_DIAGRAM):   end;
1217984   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1217985   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1217986   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1217987   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1217988   +      end;
MPRINT(EM_DIAGRAM):   end;
1217989   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1217990   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1217991   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1217992   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1217993   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1217994   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1217995   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1217996   +         end;
MPRINT(EM_DIAGRAM):   end;
1217997   +      end;
MPRINT(EM_DIAGRAM):   end;
1217998   +   end;
MPRINT(EM_DIAGRAM):   end;
1217999   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1218000   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1218001   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1218002   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1218003   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1218004   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1218005   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1218006   +   end;
MPRINT(EM_DIAGRAM):   end;
1218007   +end;
MPRINT(EM_DIAGRAM):   end;
1218008   +
1218009   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1218010   +*** Checking missing input Interval
1218011   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1218012   +
1218013   +IF NMISS(
1218014   +   AcceptedCmpTotal ,
1218015   +   Age ,
1218016   +   Frq ,
1218017   +   Income ,
1218018   +   Kidhome ,
1218019   +   MntFishProducts ,
1218020   +   MntFruits ,
1218021   +   MntGoldProds ,
1218022   +   MntSweetProducts ,
1218023   +   MonthsAsCustomer ,
1218024   +   NumDealsPurchases ,
1218025   +   NumWebVisitsMonth ,
1218026   +   RFMstat ,
1218027   +   RMntFrq ,
1218028   +   Recency ,
1218029   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , 
MntFishProducts , MntFruits , MntGoldProds , MntSweetProducts , MonthsAsCustomer , 
NumDealsPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , Teenhome ) THEN DO;
1218030   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1218031   +
1218032   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1218033   +END;
MPRINT(EM_DIAGRAM):   END;
1218034   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1218035   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1218036   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1218037   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1218038   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1218039   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1218040   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1218041   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1218042   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1218043   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1218044   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1218045   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1218046   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1218047   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1218048   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1218049   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1218050   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1218051   +   S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
1218052   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
1218053   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1218054   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1218055   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1218056   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1218057   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1218058   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1218059   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1218060   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1218061   +END;
MPRINT(EM_DIAGRAM):   END;
1218062   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1218063   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1218064   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1218065   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1218066   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1218067   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1218068   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1218069   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1218070   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1218071   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1218072   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1218073   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1218074   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1218075   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1218076   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1218077   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1218078   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1218079   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1218080   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1218081   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1218082   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1218083   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1218084   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1218085   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1218086   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1218087   +   ELSE S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
1218088   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
1218089   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1218090   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1218091   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1218092   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1218093   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1218094   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1218095   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1218096   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1218097   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1218098   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1218099   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1218100   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1218101   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1218102   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1218103   +END;
MPRINT(EM_DIAGRAM):   END;
1218104   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1218105   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1218106   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1218107   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1218108   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1218109   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1218110   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1218111   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1218112   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1218113   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1218114   +   H11  =    -0.05939653438507 * S_AcceptedCmpTotal  +    -0.03097621866927 *
1218115   +        S_Age  +     0.38549836561373 * S_Frq  +     0.04529710170514 *
1218116   +        S_Income  +    -0.29829037747286 * S_Kidhome
1218117   +          +    -0.18720823453547 * S_MntFishProducts
1218118   +          +    -0.21050293648727 * S_MntFruits  +    -0.17024743813518 *
1218119   +        S_MntGoldProds  +     0.06568676148572 * S_MntSweetProducts
1218120   +          +    -0.06646294977493 * S_MonthsAsCustomer
1218121   +          +    -0.37026551859537 * S_NumDealsPurchases
1218122   +          +    -0.14222086870703 * S_NumWebVisitsMonth
1218123   +          +    -0.13771028020173 * S_RFMstat  +    -0.18058593739947 *
1218124   +        S_RMntFrq  +     0.16089693413185 * S_Recency
1218125   +          +    -0.09296281260919 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = -0.05939653438507 * S_AcceptedCmpTotal + -0.03097621866927 * S_Age 
+ 0.38549836561373 * S_Frq + 0.04529710170514 * S_Income + -0.29829037747286 * S_Kidhome + 
-0.18720823453547 * S_MntFishProducts + -0.21050293648727 * S_MntFruits + -0.17024743813518 * 
S_MntGoldProds + 0.06568676148572 * S_MntSweetProducts + -0.06646294977493 * 
S_MonthsAsCustomer + -0.37026551859537 * S_NumDealsPurchases + -0.14222086870703 * 
S_NumWebVisitsMonth + -0.13771028020173 * S_RFMstat + -0.18058593739947 * S_RMntFrq + 
0.16089693413185 * S_Recency + -0.09296281260919 * S_Teenhome ;
1218126   +   H12  =    -1.07525876494597 * S_AcceptedCmpTotal  +     0.17274493487957 *
1218127   +        S_Age  +     1.31699360143525 * S_Frq  +      0.8506314580981 *
1218128   +        S_Income  +    -0.83201267605135 * S_Kidhome
1218129   +          +    -0.09483355610222 * S_MntFishProducts
1218130   +          +    -0.31816096382562 * S_MntFruits  +    -0.18054381770991 *
1218131   +        S_MntGoldProds  +     0.05267776627167 * S_MntSweetProducts
1218132   +          +     0.36008195182034 * S_MonthsAsCustomer
1218133   +          +    -0.13663022832818 * S_NumDealsPurchases
1218134   +          +    -0.43055337001488 * S_NumWebVisitsMonth
1218135   +          +    -0.20985567596746 * S_RFMstat  +     0.29271762840275 *
1218136   +        S_RMntFrq  +    -0.13626348763752 * S_Recency
1218137   +          +    -0.85691575464107 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -1.07525876494597 * S_AcceptedCmpTotal + 0.17274493487957 * S_Age 
+ 1.31699360143525 * S_Frq + 0.8506314580981 * S_Income + -0.83201267605135 * S_Kidhome + 
-0.09483355610222 * S_MntFishProducts + -0.31816096382562 * S_MntFruits + -0.18054381770991 * 
S_MntGoldProds + 0.05267776627167 * S_MntSweetProducts + 0.36008195182034 * S_MonthsAsCustomer 
+ -0.13663022832818 * S_NumDealsPurchases + -0.43055337001488 * S_NumWebVisitsMonth + 
-0.20985567596746 * S_RFMstat + 0.29271762840275 * S_RMntFrq + -0.13626348763752 * S_Recency + 
-0.85691575464107 * S_Teenhome ;
1218138   +   H13  =    -0.17967871499719 * S_AcceptedCmpTotal  +      0.1189238919833 *
1218139   +        S_Age  +      0.2812438420035 * S_Frq  +    -0.19278826529363 *
1218140   +        S_Income  +     0.25780281448124 * S_Kidhome
1218141   +          +     0.04440164182166 * S_MntFishProducts
1218142   +          +     0.04221733494133 * S_MntFruits  +     0.00772772044315 *
1218143   +        S_MntGoldProds  +     0.03211863452879 * S_MntSweetProducts
1218144   +          +     0.11601256317603 * S_MonthsAsCustomer
1218145   +          +    -0.06382091961731 * S_NumDealsPurchases
1218146   +          +    -0.31707488359351 * S_NumWebVisitsMonth
1218147   +          +    -0.03315899689257 * S_RFMstat  +      0.1166714754638 *
1218148   +        S_RMntFrq  +     0.39922359779347 * S_Recency
1218149   +          +     0.12723983872652 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = -0.17967871499719 * S_AcceptedCmpTotal + 0.1189238919833 * S_Age + 
0.2812438420035 * S_Frq + -0.19278826529363 * S_Income + 0.25780281448124 * S_Kidhome + 
0.04440164182166 * S_MntFishProducts + 0.04221733494133 * S_MntFruits + 0.00772772044315 * 
S_MntGoldProds + 0.03211863452879 * S_MntSweetProducts + 0.11601256317603 * S_MonthsAsCustomer 
+ -0.06382091961731 * S_NumDealsPurchases + -0.31707488359351 * S_NumWebVisitsMonth + 
-0.03315899689257 * S_RFMstat + 0.1166714754638 * S_RMntFrq + 0.39922359779347 * S_Recency + 
0.12723983872652 * S_Teenhome ;
1218150   +   H11  = H11  +     1.30972442853005 * AcceptedCmp10
1218151   +          +      -0.107725040763 * AcceptedCmp20  +      0.1632298365033 *
1218152   +        AcceptedCmp30  +    -0.04285993483605 * AcceptedCmp40
1218153   +          +     0.27424410998159 * AcceptedCmp50  +     0.13223002478852 *
1218154   +        Complain0  +       0.148007066302 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 1.30972442853005 * AcceptedCmp10 + -0.107725040763 * 
AcceptedCmp20 + 0.1632298365033 * AcceptedCmp30 + -0.04285993483605 * AcceptedCmp40 + 
0.27424410998159 * AcceptedCmp50 + 0.13223002478852 * Complain0 + 0.148007066302 * 
HigherEducationBinary0 ;
1218155   +   H12  = H12  +     0.43127584437858 * AcceptedCmp10
1218156   +          +    -0.45791405760753 * AcceptedCmp20  +    -0.99939161573095 *
1218157   +        AcceptedCmp30  +    -1.19828550777192 * AcceptedCmp40
1218158   +          +    -0.01213030081313 * AcceptedCmp50  +    -0.13910242772434 *
1218159   +        Complain0  +     0.30067707265993 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.43127584437858 * AcceptedCmp10 + -0.45791405760753 * 
AcceptedCmp20 + -0.99939161573095 * AcceptedCmp30 + -1.19828550777192 * AcceptedCmp40 + 
-0.01213030081313 * AcceptedCmp50 + -0.13910242772434 * Complain0 + 0.30067707265993 * 
HigherEducationBinary0 ;
1218160   +   H13  = H13  +    -0.11762761348562 * AcceptedCmp10
1218161   +          +      0.2189277190916 * AcceptedCmp20  +     0.04353030554468 *
1218162   +        AcceptedCmp30  +    -0.03987223536277 * AcceptedCmp40
1218163   +          +     0.15029448487681 * AcceptedCmp50  +      -0.117886738648 *
1218164   +        Complain0  +    -0.01645100634446 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.11762761348562 * AcceptedCmp10 + 0.2189277190916 * 
AcceptedCmp20 + 0.04353030554468 * AcceptedCmp30 + -0.03987223536277 * AcceptedCmp40 + 
0.15029448487681 * AcceptedCmp50 + -0.117886738648 * Complain0 + -0.01645100634446 * 
HigherEducationBinary0 ;
1218165   +   H11  = H11  +     0.16808351038824 * Education2n_Cycle
1218166   +          +    -0.29249243891567 * EducationBasic  +     0.02800261669472 *
1218167   +        EducationGraduation  +    -0.22350316846433 * EducationMaster
1218168   +          +     0.18754186259114 * Marital_StatusDivorced
1218169   +          +    -0.11988223819284 * Marital_StatusMarried
1218170   +          +    -0.02283707816223 * Marital_StatusSingle
1218171   +          +     -0.1005355792805 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.16808351038824 * Education2n_Cycle + -0.29249243891567 * 
EducationBasic + 0.02800261669472 * EducationGraduation + -0.22350316846433 * EducationMaster 
+ 0.18754186259114 * Marital_StatusDivorced + -0.11988223819284 * Marital_StatusMarried + 
-0.02283707816223 * Marital_StatusSingle + -0.1005355792805 * Marital_StatusTogether ;
1218172   +   H12  = H12  +    -0.12807098247021 * Education2n_Cycle
1218173   +          +     0.23889287012189 * EducationBasic  +     0.10996477979775 *
1218174   +        EducationGraduation  +    -0.24880728981933 * EducationMaster
1218175   +          +    -0.28983318463941 * Marital_StatusDivorced
1218176   +          +    -0.74851149560881 * Marital_StatusMarried
1218177   +          +      0.7618336919202 * Marital_StatusSingle
1218178   +          +    -0.81079042586509 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.12807098247021 * Education2n_Cycle + 0.23889287012189 * 
EducationBasic + 0.10996477979775 * EducationGraduation + -0.24880728981933 * EducationMaster 
+ -0.28983318463941 * Marital_StatusDivorced + -0.74851149560881 * Marital_StatusMarried + 
0.7618336919202 * Marital_StatusSingle + -0.81079042586509 * Marital_StatusTogether ;
1218179   +   H13  = H13  +    -0.26305004071484 * Education2n_Cycle
1218180   +          +     0.28231626292259 * EducationBasic  +    -0.07308832725307 *
1218181   +        EducationGraduation  +     0.20925521527006 * EducationMaster
1218182   +          +    -0.33639004627791 * Marital_StatusDivorced
1218183   +          +     0.12327415586833 * Marital_StatusMarried
1218184   +          +      0.0060971946845 * Marital_StatusSingle
1218185   +          +     0.09875322175475 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.26305004071484 * Education2n_Cycle + 0.28231626292259 * 
EducationBasic + -0.07308832725307 * EducationGraduation + 0.20925521527006 * EducationMaster 
+ -0.33639004627791 * Marital_StatusDivorced + 0.12327415586833 * Marital_StatusMarried + 
0.0060971946845 * Marital_StatusSingle + 0.09875322175475 * Marital_StatusTogether ;
1218186   +   H11  =    -1.17886598743906 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -1.17886598743906 + H11 ;
1218187   +   H12  =    -0.91184279928765 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -0.91184279928765 + H12 ;
1218188   +   H13  =    -0.12019399765604 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.12019399765604 + H13 ;
1218189   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1218190   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1218191   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1218192   +END;
MPRINT(EM_DIAGRAM):   END;
1218193   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1218194   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1218195   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1218196   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1218197   +END;
MPRINT(EM_DIAGRAM):   END;
1218198   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1218199   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1218200   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1218201   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1218202   +   P_DepVar1  =    -5.25940615604579 * H11  +     5.20640516145161 * H12
1218203   +          +    -6.47403374532058 * H13 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -5.25940615604579 * H11 + 5.20640516145161 * H12 + 
-6.47403374532058 * H13 ;
1218204   +   P_DepVar1  =    -0.12049819292714 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.12049819292714 + P_DepVar1 ;
1218205   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1218206   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1218207   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1218208   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1218209   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1218210   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1218211   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1218212   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1218213   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1218214   +END;
MPRINT(EM_DIAGRAM):   END;
1218215   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1218216   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1218217   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1218218   +END;
MPRINT(EM_DIAGRAM):   END;
1218219   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1218220   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1218221   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1218222   +END;
MPRINT(EM_DIAGRAM):   END;
1218223   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1218224   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1218225   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1218226   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1218227   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1218228   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1218229   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1218230   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1218231   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1218232   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1218233   +END;
MPRINT(EM_DIAGRAM):   END;
1218234   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1218235   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1218236   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1218237   +drop
1218238   +H11
1218239   +H12
1218240   +H13
1218241   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 ;
1218242   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1218243    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1218244    quit;
1218245    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1218246    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1218247    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1218248    retain ID 2 Node "Neural38";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Neural38";
1218249    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1218250    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1745 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 1745 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1218251    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1218252    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1218253    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1745 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 1745 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1218254    proc sort data=EMWS8.Neural38_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Neural38_variableset out=_temp2(keep=NAME CREATOR);
1218255    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1218256    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.NEURAL38_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1218257    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1218258    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1218259    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1218260    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1218261    proc contents data=EMWS8.Neural38_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Neural38_train out=_meta(keep=NAME) noprint;
1218262    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1218263    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1218264    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1218265    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 53 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

1218266    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1218267    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1218268    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1218269    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 53 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1218270    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1218271    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1218271  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 937 rows and 5 columns.

1218272    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1218273    proc append base=EMWS8.Ensmbl12_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl12_FCMP data=_tempx;
1218274    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL12_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 937 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL12_FCMP has 937 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1218275    filename _pref
1218275  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
1218276    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1218277    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
1218278   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1218279   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1218280   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1218281   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1218282   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1218283   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1218284    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1218285    quit;
1218286    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1218287    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1218288    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1218289    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
1218290    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1218291    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1218292    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1218293    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1218294    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1218295    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
1218296    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1218297    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

1218298    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1218299    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1218300    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1218301    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1218302    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
1218303    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

1218304    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1218305    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1218306    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1218307    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1218308    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1218309    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1218310    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1218311    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1218312    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1218312  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

1218313    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1218314    proc append base=EMWS8.Ensmbl12_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl12_FCMP data=_tempx;
1218315    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL12_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL12_FCMP has 941 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1218316    filename _pref
1218316  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
1218317    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1218318    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
1218319   +
1218320   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1218321   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1218321  !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1218322   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1218323   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1218324   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1218325   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1218326   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1218327    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1218328    quit;
1218329    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1218330    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1218331    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1218332    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
1218333    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1218334    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1218335    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1218336    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1218337    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1218338    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
1218339    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1218340    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1218341    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1218342    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1218343    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1218344    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1218345    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
1218346    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1218347    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1218348    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1218349    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1218350    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1218351    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1218352    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1218353    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1218354    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1218355    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1218355  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

1218356    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1218357    proc append base=EMWS8.Ensmbl12_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl12_FCMP data=_tempx;
1218358    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL12_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL12_FCMP has 980 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1218359    filename _pref
1218359  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
1218360    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1218361    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
1218362   +
1218363   +
1218364   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
1218365   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
1218366   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
1218367   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
1218368   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
1218369   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1218370   +
1218371   +
1218372   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
1218373   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
1218374   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
1218375   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
1218376   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
1218377   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1218378   +
1218379   +
1218380   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
1218381   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
1218382   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
1218383   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
1218384   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
1218385   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1218386   +
1218387   +
1218388   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
1218389   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
1218390   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
1218391   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
1218392   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
1218393   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1218394   +
1218395   +
1218396   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
1218397   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
1218398   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
1218399   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
1218400   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
1218401   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1218402   +
1218403   +
1218404   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
1218405   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
1218406   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
1218407   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
1218408   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
1218409   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1218410   +
1218411   +
1218412   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
1218413   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
1218414   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
1218415   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
1218416   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
1218417   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1218418   +
1218419   +
1218420   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
1218421   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
1218422   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
1218423   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
1218424   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
1218425   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1218426   +if
1218427   +_FILTERNORM1 not in ( '.')
1218428   + and
1218429   +_FILTERNORM2 not in ( '.')
1218430   + and
1218431   +_FILTERNORM3 not in ( '.')
1218432   + and
1218433   +_FILTERNORM4 not in ( '.')
1218434   + and
1218435   +_FILTERNORM5 not in ( '.')
1218436   + and
1218437   +_FILTERNORM6 not in ( '.')
1218438   + and
1218439   +_FILTERNORM7 not in ( ' ')
1218440   + and
1218441   +_FILTERNORM8 not in ( ' ')
1218442   +and
1218443   +( Dt_Customer ne .)
1218444   +and ( Income ne . and (Income<=107000))
1218445   +and ( Kidhome ne .)
1218446   +and ( MntFishProducts ne .)
1218447   +and ( MntFruits ne .)
1218448   +and ( MntGoldProds ne .)
1218449   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
1218450   +and ( MntSweetProducts ne .)
1218451   +and ( MntWines ne .)
1218452   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
1218453   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
1218454   +and ( NumStorePurchases ne .)
1218455   +and ( NumWebPurchases ne .)
1218456   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
1218457   +and ( Recency ne .)
1218458   +and ( Teenhome ne .)
1218459   +and ( Year_Birth ne .)
1218460   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
1218461   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
1218462   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
1218463   +end;
MPRINT(EM_DIAGRAM):   end;
1218464   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
1218465   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1218466    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1218467    quit;
1218468    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1218469    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1218470    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1218471    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
1218472    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1218473    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1218474    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1218475    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1218476    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1218477    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
1218478    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1218479    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1218480    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1218481    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1218482    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1218483    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1218484    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
1218485    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

1218486    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1218487    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1218488    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1218489    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1218490    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1218491    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1218492    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1218493    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1218494    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1218494  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

1218495    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1218496    proc append base=EMWS8.Ensmbl12_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl12_FCMP data=_tempx;
1218497    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL12_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL12_FCMP has 1046 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1218498    %macro varDept(fcmpdata=,id=);
1218499    %global nobs&id scoreFlag&id;
1218500    %let scoreFlag&id = 0;
1218501    %if &id=1 or ^&fcmpStart %then %do;
1218502    proc sort data=&fcmpdata out=_temp&id nodupkey;
1218503    by NAME;
1218504    where id=&id and LHS in( %let j=1;
1218505    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
1218506    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
1218507    "&var" %let j = %eval(&j+1);
1218508    %end;
1218509    );
1218510    run;
1218511    %let dsid = %sysfunc(open(_temp&id));
1218512    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1218513    %let dsid = %sysfunc(close(&dsid));
1218514    %if &&nobs&id %then %do;
1218515    %let scoreFlag&id = 1;
1218516    %let fcmpStart = 1;
1218517    %end;
1218518    %else %let fcmpStart = 0;
1218519    %end;
1218520    %else %do;
1218521    proc sort data=&fcmpdata out=_tempid;
1218522    where id=&id;
1218523    by LHS;
1218524    run;
1218525    %let dsid = %sysfunc(open(_tempid));
1218526    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1218527    %let dsid = %sysfunc(close(&dsid));
1218528    %if ^&&nobs&id %then %do;
1218529    proc datasets lib=work nolist;
1218530    delete _tempid;
1218531    run;
1218532    quit;
1218533    %end;
1218534    %else %do;
1218535    data _tempAll;
1218536    set %let j=%eval(&id-1);
1218537    %do x=1 %to &j;
1218538    %if &&nobs&x %then %do;
1218539    _temp&x %end;
1218540    %end;
1218541    ;
1218542    run;
1218543    proc sql;
1218544    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
1218544  ! work._tempid p2 where p.name=p2.lhs;
1218545    quit;
1218546    data _temp&id;
1218547    set _temp&id;
1218548    where LHS ne '' and NAME ne '' and Node ne '';
1218549    run;
1218550    proc datasets lib=work nolist;
1218551    delete _tempAll;
1218552    run;
1218553    %let dsid = %sysfunc(open(_temp&id));
1218554    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1218555    %let dsid = %sysfunc(close(&dsid));
1218556    %if ^&&nobs&id %then %do;
1218557    proc datasets lib=work nolist;
1218558    delete _temp&id;
1218559    run;
1218560    quit;
1218561    %end;
1218562    %else %do;
1218563    %let scoreFlag&id = 1;
1218564    data _temp&id;
1218565    set _temp&id;
1218566    where LHS ne NAME and node ne '';
1218567    run;
1218568    %let dsid = %sysfunc(open(_temp&id));
1218569    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1218570    %let dsid = %sysfunc(close(&dsid));
1218571    %if ^&&nobs&id %then %do;
1218572    proc datasets lib=work nolist;
1218573    delete _temp&id;
1218574    run;
1218575    quit;
1218576    %end;
1218577    %else %do;
1218578    proc sort data=_temp&id nodupkey;
1218579    by LHS NAME;
1218580    run;
1218581    %end;
1218582    %end;
1218583    %end;
1218584    %end;
1218585    %mend varDept;
1218586    %macro optCode(outdata=fcmpdata);
1218587    %global fcmpStart;
1218588    %let fcmpStart = 0;
1218589    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
1218590    %let NumNodes=9;
1218591    %do k=1 %to &NumNodes;
1218592    %vardept(fcmpdata=&outdata, id=&k);
1218593    %end;
1218594    %mend optCode;
1218595    %optcode(outData=EMWS8.Ensmbl12_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl12_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL12_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl12_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 106 observations read from the data set EMWS8.ENSMBL12_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 79 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 27 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl12_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL12_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl12_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL12_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl12_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL12_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 27 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 2 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl12_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL12_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 29 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 33 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 33 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 33 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 33 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl12_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL12_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: There were 33 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 62 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl12_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL12_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl12_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL12_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

1218596    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
1218597    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1218598    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
1218599    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1218600    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
1218601    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1218602    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
1218603    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1218604    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1218605    create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
1218605  ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 2 rows and 3 columns.

1218606    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1218607    data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
1218608    set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
1218609    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 2 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 2 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1218610    filename _pref
1218610  ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural39\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural39\EMPUBLISHSCORE.sas";
1218611    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1218612    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Neural39\EMPUBLISHSCORE.sas.
1218613   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1218614   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1218615   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1218616   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1218617   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1218618   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1218619   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1218620   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1218621   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1218622   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1218623   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1218624   +LENGTH _WARN_ $4
1218625   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
1218626   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1218627   +
1218628   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1218629   +
1218630   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1218631   +
1218632   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1218633   +
1218634   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1218635   +
1218636   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1218637   +
1218638   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1218639   +
1218640   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1218641   +
1218642   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1218643   +
1218644   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1218645   +
1218646   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1218647   +
1218648   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1218649   +
1218650   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1218651   +
1218652   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1218653   +
1218654   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1218655   +
1218656   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1218657   +
1218658   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1218659   +
1218660   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1218661   +
1218662   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1218663   +
1218664   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1218665   +
1218666   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1218667   +
1218668   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1218669   +
1218670   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1218671   +
1218672   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1218673   +
1218674   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1218675   +
1218676   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1218677   +
1218678   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1218679   +
1218680   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1218681   +
1218682   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1218683   +
1218684   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1218685   +
1218686   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1218687   +
1218688   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1218689   +
1218690   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1218691   +
1218692   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1218693   +
1218694   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1218695   +
1218696   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1218697   +
1218698   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1218699   +
1218700   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1218701   +
1218702   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1218703   +
1218704   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1218705   +
1218706   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1218707   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1218708   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1218709   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1218710   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1218711   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1218712   +end;
MPRINT(EM_DIAGRAM):   end;
1218713   +else do;
MPRINT(EM_DIAGRAM):   else do;
1218714   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1218715   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1218716   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1218717   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1218718   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1218719   +   end;
MPRINT(EM_DIAGRAM):   end;
1218720   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1218721   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1218722   +   end;
MPRINT(EM_DIAGRAM):   end;
1218723   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1218724   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1218725   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1218726   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1218727   +   end;
MPRINT(EM_DIAGRAM):   end;
1218728   +end;
MPRINT(EM_DIAGRAM):   end;
1218729   +
1218730   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1218731   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1218732   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1218733   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1218734   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1218735   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1218736   +end;
MPRINT(EM_DIAGRAM):   end;
1218737   +else do;
MPRINT(EM_DIAGRAM):   else do;
1218738   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1218739   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1218740   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1218741   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1218742   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1218743   +   end;
MPRINT(EM_DIAGRAM):   end;
1218744   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1218745   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1218746   +   end;
MPRINT(EM_DIAGRAM):   end;
1218747   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1218748   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1218749   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1218750   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1218751   +   end;
MPRINT(EM_DIAGRAM):   end;
1218752   +end;
MPRINT(EM_DIAGRAM):   end;
1218753   +
1218754   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1218755   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1218756   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1218757   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1218758   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1218759   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1218760   +end;
MPRINT(EM_DIAGRAM):   end;
1218761   +else do;
MPRINT(EM_DIAGRAM):   else do;
1218762   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1218763   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1218764   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1218765   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1218766   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1218767   +   end;
MPRINT(EM_DIAGRAM):   end;
1218768   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1218769   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1218770   +   end;
MPRINT(EM_DIAGRAM):   end;
1218771   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1218772   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1218773   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1218774   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1218775   +   end;
MPRINT(EM_DIAGRAM):   end;
1218776   +end;
MPRINT(EM_DIAGRAM):   end;
1218777   +
1218778   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1218779   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1218780   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1218781   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1218782   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1218783   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1218784   +end;
MPRINT(EM_DIAGRAM):   end;
1218785   +else do;
MPRINT(EM_DIAGRAM):   else do;
1218786   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1218787   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1218788   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1218789   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1218790   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1218791   +   end;
MPRINT(EM_DIAGRAM):   end;
1218792   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1218793   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1218794   +   end;
MPRINT(EM_DIAGRAM):   end;
1218795   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1218796   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1218797   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1218798   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1218799   +   end;
MPRINT(EM_DIAGRAM):   end;
1218800   +end;
MPRINT(EM_DIAGRAM):   end;
1218801   +
1218802   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1218803   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1218804   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1218805   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1218806   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1218807   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1218808   +end;
MPRINT(EM_DIAGRAM):   end;
1218809   +else do;
MPRINT(EM_DIAGRAM):   else do;
1218810   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1218811   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1218812   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1218813   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1218814   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1218815   +   end;
MPRINT(EM_DIAGRAM):   end;
1218816   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1218817   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1218818   +   end;
MPRINT(EM_DIAGRAM):   end;
1218819   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1218820   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1218821   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1218822   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1218823   +   end;
MPRINT(EM_DIAGRAM):   end;
1218824   +end;
MPRINT(EM_DIAGRAM):   end;
1218825   +
1218826   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1218827   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1218828   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1218829   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1218830   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1218831   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1218832   +end;
MPRINT(EM_DIAGRAM):   end;
1218833   +else do;
MPRINT(EM_DIAGRAM):   else do;
1218834   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1218835   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1218836   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1218837   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1218838   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1218839   +   end;
MPRINT(EM_DIAGRAM):   end;
1218840   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1218841   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1218842   +   end;
MPRINT(EM_DIAGRAM):   end;
1218843   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1218844   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1218845   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1218846   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1218847   +   end;
MPRINT(EM_DIAGRAM):   end;
1218848   +end;
MPRINT(EM_DIAGRAM):   end;
1218849   +
1218850   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1218851   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1218852   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1218853   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1218854   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1218855   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1218856   +end;
MPRINT(EM_DIAGRAM):   end;
1218857   +else do;
MPRINT(EM_DIAGRAM):   else do;
1218858   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1218859   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1218860   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1218861   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1218862   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1218863   +   end;
MPRINT(EM_DIAGRAM):   end;
1218864   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1218865   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1218866   +   end;
MPRINT(EM_DIAGRAM):   end;
1218867   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1218868   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1218869   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1218870   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1218871   +   end;
MPRINT(EM_DIAGRAM):   end;
1218872   +end;
MPRINT(EM_DIAGRAM):   end;
1218873   +
1218874   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1218875   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
1218876   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1218877   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1218878   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1218879   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1218880   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1218881   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1218882   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1218883   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1218884   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1218885   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1218886   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1218887   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1218888   +end;
MPRINT(EM_DIAGRAM):   end;
1218889   +else do;
MPRINT(EM_DIAGRAM):   else do;
1218890   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1218891   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1218892   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1218893   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1218894   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1218895   +   end;
MPRINT(EM_DIAGRAM):   end;
1218896   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1218897   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1218898   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1218899   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1218900   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1218901   +   end;
MPRINT(EM_DIAGRAM):   end;
1218902   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1218903   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1218904   +   end;
MPRINT(EM_DIAGRAM):   end;
1218905   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1218906   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1218907   +   end;
MPRINT(EM_DIAGRAM):   end;
1218908   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1218909   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1218910   +   end;
MPRINT(EM_DIAGRAM):   end;
1218911   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1218912   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1218913   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1218914   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1218915   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1218916   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1218917   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1218918   +   end;
MPRINT(EM_DIAGRAM):   end;
1218919   +end;
MPRINT(EM_DIAGRAM):   end;
1218920   +
1218921   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1218922   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1218923   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
1218924   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1218925   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1218926   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1218927   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1218928   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1218929   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1218930   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1218931   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1218932   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1218933   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1218934   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1218935   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1218936   +end;
MPRINT(EM_DIAGRAM):   end;
1218937   +else do;
MPRINT(EM_DIAGRAM):   else do;
1218938   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1218939   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1218940   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1218941   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1218942   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1218943   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1218944   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1218945   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1218946   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1218947   +         end;
MPRINT(EM_DIAGRAM):   end;
1218948   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1218949   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1218950   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1218951   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1218952   +            end;
MPRINT(EM_DIAGRAM):   end;
1218953   +         end;
MPRINT(EM_DIAGRAM):   end;
1218954   +      end;
MPRINT(EM_DIAGRAM):   end;
1218955   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1218956   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1218957   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1218958   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1218959   +         end;
MPRINT(EM_DIAGRAM):   end;
1218960   +      end;
MPRINT(EM_DIAGRAM):   end;
1218961   +   end;
MPRINT(EM_DIAGRAM):   end;
1218962   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1218963   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1218964   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1218965   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1218966   +      end;
MPRINT(EM_DIAGRAM):   end;
1218967   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1218968   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1218969   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1218970   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1218971   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1218972   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1218973   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1218974   +         end;
MPRINT(EM_DIAGRAM):   end;
1218975   +      end;
MPRINT(EM_DIAGRAM):   end;
1218976   +   end;
MPRINT(EM_DIAGRAM):   end;
1218977   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1218978   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1218979   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1218980   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1218981   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1218982   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1218983   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1218984   +   end;
MPRINT(EM_DIAGRAM):   end;
1218985   +end;
MPRINT(EM_DIAGRAM):   end;
1218986   +
1218987   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1218988   +*** Checking missing input Interval
1218989   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1218990   +
1218991   +IF NMISS(
1218992   +   AcceptedCmpTotal ,
1218993   +   Age ,
1218994   +   Frq ,
1218995   +   Income ,
1218996   +   Kidhome ,
1218997   +   MntFishProducts ,
1218998   +   MntFruits ,
1218999   +   MntGoldProds ,
1219000   +   MntSweetProducts ,
1219001   +   MonthsAsCustomer ,
1219002   +   NumDealsPurchases ,
1219003   +   NumWebVisitsMonth ,
1219004   +   RFMstat ,
1219005   +   RMntFrq ,
1219006   +   Recency ,
1219007   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , 
MntFishProducts , MntFruits , MntGoldProds , MntSweetProducts , MonthsAsCustomer , 
NumDealsPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , Teenhome ) THEN DO;
1219008   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1219009   +
1219010   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1219011   +END;
MPRINT(EM_DIAGRAM):   END;
1219012   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1219013   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1219014   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1219015   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1219016   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1219017   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1219018   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1219019   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1219020   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1219021   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1219022   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1219023   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1219024   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1219025   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1219026   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1219027   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1219028   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1219029   +   S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
1219030   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
1219031   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1219032   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1219033   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1219034   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1219035   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1219036   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1219037   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1219038   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1219039   +END;
MPRINT(EM_DIAGRAM):   END;
1219040   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1219041   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1219042   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1219043   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1219044   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1219045   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1219046   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1219047   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1219048   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1219049   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1219050   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1219051   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1219052   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1219053   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1219054   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1219055   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1219056   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1219057   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1219058   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1219059   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1219060   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1219061   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1219062   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1219063   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1219064   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1219065   +   ELSE S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
1219066   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
1219067   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1219068   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1219069   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1219070   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1219071   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1219072   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1219073   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1219074   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1219075   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1219076   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1219077   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1219078   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1219079   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1219080   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1219081   +END;
MPRINT(EM_DIAGRAM):   END;
1219082   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1219083   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1219084   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1219085   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1219086   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1219087   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1219088   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1219089   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1219090   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1219091   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1219092   +   H11  =    -0.61879380889194 * S_AcceptedCmpTotal  +    -0.09795242603477 *
1219093   +        S_Age  +     0.36103250822255 * S_Frq  +     0.08899052794394 *
1219094   +        S_Income  +     0.25564250606874 * S_Kidhome
1219095   +          +    -0.02786629817134 * S_MntFishProducts
1219096   +          +     0.13529614728112 * S_MntFruits  +     0.19622442891821 *
1219097   +        S_MntGoldProds  +     0.14107929478218 * S_MntSweetProducts
1219098   +          +    -0.29199173107007 * S_MonthsAsCustomer
1219099   +          +    -0.59759788962473 * S_NumDealsPurchases
1219100   +          +     -0.3788422274482 * S_NumWebVisitsMonth
1219101   +          +    -0.06743318112874 * S_RFMstat  +      0.2833264895355 *
1219102   +        S_RMntFrq  +     0.70854972350771 * S_Recency
1219103   +          +     0.11936327488967 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = -0.61879380889194 * S_AcceptedCmpTotal + -0.09795242603477 * S_Age 
+ 0.36103250822255 * S_Frq + 0.08899052794394 * S_Income + 0.25564250606874 * S_Kidhome + 
-0.02786629817134 * S_MntFishProducts + 0.13529614728112 * S_MntFruits + 0.19622442891821 * 
S_MntGoldProds + 0.14107929478218 * S_MntSweetProducts + -0.29199173107007 * 
S_MonthsAsCustomer + -0.59759788962473 * S_NumDealsPurchases + -0.3788422274482 * 
S_NumWebVisitsMonth + -0.06743318112874 * S_RFMstat + 0.2833264895355 * S_RMntFrq + 
0.70854972350771 * S_Recency + 0.11936327488967 * S_Teenhome ;
1219104   +   H12  =    -0.18766983828727 * S_AcceptedCmpTotal  +       0.517042669033 *
1219105   +        S_Age  +     1.02262972068559 * S_Frq  +     0.38007459198406 *
1219106   +        S_Income  +     0.07328887474153 * S_Kidhome
1219107   +          +    -0.23284570213322 * S_MntFishProducts
1219108   +          +     0.02838864374624 * S_MntFruits  +    -0.07574618602845 *
1219109   +        S_MntGoldProds  +    -0.41131707239504 * S_MntSweetProducts
1219110   +          +     0.29669594858185 * S_MonthsAsCustomer
1219111   +          +    -0.51220833966596 * S_NumDealsPurchases
1219112   +          +    -0.72293271444385 * S_NumWebVisitsMonth
1219113   +          +    -0.20562458645044 * S_RFMstat  +    -0.52495075768839 *
1219114   +        S_RMntFrq  +      1.0795232419354 * S_Recency
1219115   +          +    -0.18997953891579 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -0.18766983828727 * S_AcceptedCmpTotal + 0.517042669033 * S_Age + 
1.02262972068559 * S_Frq + 0.38007459198406 * S_Income + 0.07328887474153 * S_Kidhome + 
-0.23284570213322 * S_MntFishProducts + 0.02838864374624 * S_MntFruits + -0.07574618602845 * 
S_MntGoldProds + -0.41131707239504 * S_MntSweetProducts + 0.29669594858185 * 
S_MonthsAsCustomer + -0.51220833966596 * S_NumDealsPurchases + -0.72293271444385 * 
S_NumWebVisitsMonth + -0.20562458645044 * S_RFMstat + -0.52495075768839 * S_RMntFrq + 
1.0795232419354 * S_Recency + -0.18997953891579 * S_Teenhome ;
1219116   +   H13  =    -0.49159501579895 * S_AcceptedCmpTotal  +    -0.16293971978781 *
1219117   +        S_Age  +    -0.02977525702894 * S_Frq  +    -0.78728568889664 *
1219118   +        S_Income  +    -0.68209910558389 * S_Kidhome
1219119   +          +     0.23366174254474 * S_MntFishProducts
1219120   +          +    -0.08764688950673 * S_MntFruits  +    -0.38895649975347 *
1219121   +        S_MntGoldProds  +     0.02270546080284 * S_MntSweetProducts
1219122   +          +    -0.05759532204753 * S_MonthsAsCustomer
1219123   +          +    -0.30170163047261 * S_NumDealsPurchases
1219124   +          +    -0.57711437834603 * S_NumWebVisitsMonth
1219125   +          +    -0.09851659878757 * S_RFMstat  +    -0.20102310575519 *
1219126   +        S_RMntFrq  +     0.80994896921796 * S_Recency
1219127   +          +     0.32766576826101 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = -0.49159501579895 * S_AcceptedCmpTotal + -0.16293971978781 * S_Age 
+ -0.02977525702894 * S_Frq + -0.78728568889664 * S_Income + -0.68209910558389 * S_Kidhome + 
0.23366174254474 * S_MntFishProducts + -0.08764688950673 * S_MntFruits + -0.38895649975347 * 
S_MntGoldProds + 0.02270546080284 * S_MntSweetProducts + -0.05759532204753 * 
S_MonthsAsCustomer + -0.30170163047261 * S_NumDealsPurchases + -0.57711437834603 * 
S_NumWebVisitsMonth + -0.09851659878757 * S_RFMstat + -0.20102310575519 * S_RMntFrq + 
0.80994896921796 * S_Recency + 0.32766576826101 * S_Teenhome ;
1219128   +   H14  =    -0.11122937165995 * S_AcceptedCmpTotal  +     0.06859829254058 *
1219129   +        S_Age  +    -0.60966071706708 * S_Frq  +    -1.00949681880427 *
1219130   +        S_Income  +     0.67855138873039 * S_Kidhome
1219131   +          +    -0.05297743313476 * S_MntFishProducts
1219132   +          +     0.21613302257797 * S_MntFruits  +     0.03843790921347 *
1219133   +        S_MntGoldProds  +     0.25543771093558 * S_MntSweetProducts
1219134   +          +    -0.15817861274553 * S_MonthsAsCustomer
1219135   +          +     0.25133066233725 * S_NumDealsPurchases
1219136   +          +     0.08802636187267 * S_NumWebVisitsMonth
1219137   +          +    -0.04637957487976 * S_RFMstat  +    -0.31656429052936 *
1219138   +        S_RMntFrq  +      0.7228272496527 * S_Recency
1219139   +          +     0.58629319995218 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = -0.11122937165995 * S_AcceptedCmpTotal + 0.06859829254058 * S_Age 
+ -0.60966071706708 * S_Frq + -1.00949681880427 * S_Income + 0.67855138873039 * S_Kidhome + 
-0.05297743313476 * S_MntFishProducts + 0.21613302257797 * S_MntFruits + 0.03843790921347 * 
S_MntGoldProds + 0.25543771093558 * S_MntSweetProducts + -0.15817861274553 * 
S_MonthsAsCustomer + 0.25133066233725 * S_NumDealsPurchases + 0.08802636187267 * 
S_NumWebVisitsMonth + -0.04637957487976 * S_RFMstat + -0.31656429052936 * S_RMntFrq + 
0.7228272496527 * S_Recency + 0.58629319995218 * S_Teenhome ;
1219140   +   H11  = H11  +     0.23190135069025 * AcceptedCmp10
1219141   +          +     0.04686213078143 * AcceptedCmp20  +     0.17662818955575 *
1219142   +        AcceptedCmp30  +     0.03498741067378 * AcceptedCmp40
1219143   +          +     0.61042747626768 * AcceptedCmp50  +    -0.12810871081838 *
1219144   +        Complain0  +     0.03047400476944 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.23190135069025 * AcceptedCmp10 + 0.04686213078143 * 
AcceptedCmp20 + 0.17662818955575 * AcceptedCmp30 + 0.03498741067378 * AcceptedCmp40 + 
0.61042747626768 * AcceptedCmp50 + -0.12810871081838 * Complain0 + 0.03047400476944 * 
HigherEducationBinary0 ;
1219145   +   H12  = H12  +     0.53873807658752 * AcceptedCmp10
1219146   +          +     0.29840055428915 * AcceptedCmp20  +     0.52740574468702 *
1219147   +        AcceptedCmp30  +     0.27242279016627 * AcceptedCmp40
1219148   +          +     0.07126269343217 * AcceptedCmp50  +    -0.14631570192286 *
1219149   +        Complain0  +     0.16629352334811 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.53873807658752 * AcceptedCmp10 + 0.29840055428915 * 
AcceptedCmp20 + 0.52740574468702 * AcceptedCmp30 + 0.27242279016627 * AcceptedCmp40 + 
0.07126269343217 * AcceptedCmp50 + -0.14631570192286 * Complain0 + 0.16629352334811 * 
HigherEducationBinary0 ;
1219150   +   H13  = H13  +     0.09118941740461 * AcceptedCmp10
1219151   +          +     0.04178457860358 * AcceptedCmp20  +     0.48487479920901 *
1219152   +        AcceptedCmp30  +    -0.80910928087974 * AcceptedCmp40
1219153   +          +      0.4667831985075 * AcceptedCmp50  +    -0.29601289494349 *
1219154   +        Complain0  +     0.10690006738431 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.09118941740461 * AcceptedCmp10 + 0.04178457860358 * 
AcceptedCmp20 + 0.48487479920901 * AcceptedCmp30 + -0.80910928087974 * AcceptedCmp40 + 
0.4667831985075 * AcceptedCmp50 + -0.29601289494349 * Complain0 + 0.10690006738431 * 
HigherEducationBinary0 ;
1219155   +   H14  = H14  +     0.21382858049752 * AcceptedCmp10
1219156   +          +     0.12652392800261 * AcceptedCmp20  +     0.30403608200617 *
1219157   +        AcceptedCmp30  +     0.51966382166521 * AcceptedCmp40
1219158   +          +    -0.14518145187533 * AcceptedCmp50  +     0.27045295957801 *
1219159   +        Complain0  +    -0.49307163723406 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.21382858049752 * AcceptedCmp10 + 0.12652392800261 * 
AcceptedCmp20 + 0.30403608200617 * AcceptedCmp30 + 0.51966382166521 * AcceptedCmp40 + 
-0.14518145187533 * AcceptedCmp50 + 0.27045295957801 * Complain0 + -0.49307163723406 * 
HigherEducationBinary0 ;
1219160   +   H11  = H11  +    -0.15292649085097 * Education2n_Cycle
1219161   +          +     0.00016605452926 * EducationBasic  +    -0.04208965271063 *
1219162   +        EducationGraduation  +    -0.05433922630608 * EducationMaster
1219163   +          +      0.0528075343138 * Marital_StatusDivorced
1219164   +          +    -0.08269844855231 * Marital_StatusMarried
1219165   +          +     0.43411839786169 * Marital_StatusSingle
1219166   +          +     0.38324605489754 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.15292649085097 * Education2n_Cycle + 0.00016605452926 * 
EducationBasic + -0.04208965271063 * EducationGraduation + -0.05433922630608 * EducationMaster 
+ 0.0528075343138 * Marital_StatusDivorced + -0.08269844855231 * Marital_StatusMarried + 
0.43411839786169 * Marital_StatusSingle + 0.38324605489754 * Marital_StatusTogether ;
1219167   +   H12  = H12  +      0.3082578019648 * Education2n_Cycle
1219168   +          +    -0.01380127751108 * EducationBasic  +    -0.11076736066311 *
1219169   +        EducationGraduation  +     -0.1586948328241 * EducationMaster
1219170   +          +    -0.12842912869907 * Marital_StatusDivorced
1219171   +          +     0.11838814754642 * Marital_StatusMarried
1219172   +          +     0.01184261900927 * Marital_StatusSingle
1219173   +          +     0.14066273070318 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.3082578019648 * Education2n_Cycle + -0.01380127751108 * 
EducationBasic + -0.11076736066311 * EducationGraduation + -0.1586948328241 * EducationMaster 
+ -0.12842912869907 * Marital_StatusDivorced + 0.11838814754642 * Marital_StatusMarried + 
0.01184261900927 * Marital_StatusSingle + 0.14066273070318 * Marital_StatusTogether ;
1219174   +   H13  = H13  +     0.02861254390946 * Education2n_Cycle
1219175   +          +      0.4349807830691 * EducationBasic  +    -0.31346964692246 *
1219176   +        EducationGraduation  +      0.0620488761517 * EducationMaster
1219177   +          +    -0.22110722201709 * Marital_StatusDivorced
1219178   +          +      0.1355339029843 * Marital_StatusMarried
1219179   +          +    -0.33157273596382 * Marital_StatusSingle
1219180   +          +    -0.19725820483372 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.02861254390946 * Education2n_Cycle + 0.4349807830691 * 
EducationBasic + -0.31346964692246 * EducationGraduation + 0.0620488761517 * EducationMaster + 
-0.22110722201709 * Marital_StatusDivorced + 0.1355339029843 * Marital_StatusMarried + 
-0.33157273596382 * Marital_StatusSingle + -0.19725820483372 * Marital_StatusTogether ;
1219181   +   H14  = H14  +    -0.15196350137644 * Education2n_Cycle
1219182   +          +     0.11143610044897 * EducationBasic  +    -0.23356442851658 *
1219183   +        EducationGraduation  +     0.26881272673711 * EducationMaster
1219184   +          +    -0.21663247467797 * Marital_StatusDivorced
The SAS System

1219185   +          +     1.11468603898508 * Marital_StatusMarried
1219186   +          +    -0.84252388146943 * Marital_StatusSingle
1219187   +          +     0.91707021954171 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.15196350137644 * Education2n_Cycle + 0.11143610044897 * 
EducationBasic + -0.23356442851658 * EducationGraduation + 0.26881272673711 * EducationMaster 
+ -0.21663247467797 * Marital_StatusDivorced + 1.11468603898508 * Marital_StatusMarried + 
-0.84252388146943 * Marital_StatusSingle + 0.91707021954171 * Marital_StatusTogether ;
1219188   +   H11  =     0.69752617990443 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 0.69752617990443 + H11 ;
1219189   +   H12  =     0.88932226025287 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.88932226025287 + H12 ;
1219190   +   H13  =    -0.23351093325425 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.23351093325425 + H13 ;
1219191   +   H14  =      1.5565991209041 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 1.5565991209041 + H14 ;
1219192   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1219193   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1219194   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1219195   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1219196   +END;
MPRINT(EM_DIAGRAM):   END;
1219197   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1219198   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1219199   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1219200   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1219201   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1219202   +END;
MPRINT(EM_DIAGRAM):   END;
1219203   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1219204   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1219205   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1219206   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1219207   +   P_DepVar1  =    -1.10683009838286 * H11  +    -1.85294488833715 * H12
1219208   +          +    -2.73624761150933 * H13  +    -2.51103548718704 * H14 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.10683009838286 * H11 + -1.85294488833715 * H12 + 
-2.73624761150933 * H13 + -2.51103548718704 * H14 ;
1219209   +   P_DepVar1  =    -0.86309949021709 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.86309949021709 + P_DepVar1 ;
1219210   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1219211   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1219212   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1219213   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1219214   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1219215   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1219216   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1219217   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1219218   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1219219   +END;
MPRINT(EM_DIAGRAM):   END;
1219220   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1219221   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1219222   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1219223   +END;
MPRINT(EM_DIAGRAM):   END;
1219224   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1219225   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1219226   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1219227   +END;
MPRINT(EM_DIAGRAM):   END;
1219228   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1219229   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1219230   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1219231   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1219232   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1219233   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1219234   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1219235   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1219236   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1219237   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1219238   +END;
MPRINT(EM_DIAGRAM):   END;
1219239   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1219240   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1219241   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1219242   +drop
1219243   +H11
1219244   +H12
1219245   +H13
1219246   +H14
1219247   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 ;
1219248   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1219249    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1219250    quit;
1219251    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1219252    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1219253    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1219254    retain ID 2 Node "Neural39";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Neural39";
1219255    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1219256    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1891 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 1891 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1219257    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1219258    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1219259    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1891 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 1891 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1219260    proc sort data=EMWS8.Neural39_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Neural39_variableset out=_temp2(keep=NAME CREATOR);
1219261    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1219262    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.NEURAL39_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1219263    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1219264    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1219265    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1219266    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1219267    proc contents data=EMWS8.Neural39_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Neural39_train out=_meta(keep=NAME) noprint;
1219268    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

1219269    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1219270    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1219271    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 53 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1219272    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1219273    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1219274    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1219275    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 53 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1219276    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1219277    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1219277  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 987 rows and 5 columns.

1219278    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1219279    proc append base=EMWS8.Ensmbl12_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl12_FCMP data=_tempx;
1219280    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL12_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 987 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL12_FCMP has 987 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1219281    filename _pref
1219281  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
1219282    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1219283    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
1219284   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1219285   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1219286   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1219287   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1219288   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1219289   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1219290    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1219291    quit;
1219292    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1219293    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1219294    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1219295    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
1219296    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1219297    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1219298    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1219299    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1219300    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

1219301    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
1219302    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1219303    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1219304    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1219305    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1219306    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1219307    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1219308    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
1219309    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

1219310    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1219311    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1219312    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1219313    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1219314    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1219315    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1219316    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1219317    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1219318    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1219318  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

1219319    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1219320    proc append base=EMWS8.Ensmbl12_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl12_FCMP data=_tempx;
1219321    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL12_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL12_FCMP has 991 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1219322    filename _pref
1219322  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
1219323    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1219324    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
1219325   +
1219326   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1219327   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1219327  !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1219328   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1219329   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1219330   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1219331   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1219332   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1219333    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1219334    quit;
1219335    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1219336    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1219337    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1219338    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
1219339    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1219340    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1219341    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1219342    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1219343    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1219344    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
1219345    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1219346    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1219347    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1219348    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1219349    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1219350    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1219351    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
1219352    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1219353    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1219354    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1219355    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1219356    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1219357    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1219358    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1219359    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1219360    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1219361    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1219361  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

1219362    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1219363    proc append base=EMWS8.Ensmbl12_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl12_FCMP data=_tempx;
1219364    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL12_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL12_FCMP has 1030 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1219365    filename _pref
1219365  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
1219366    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1219367    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
1219368   +
1219369   +
1219370   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
1219371   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
1219372   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
1219373   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
1219374   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
1219375   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1219376   +
1219377   +
1219378   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
1219379   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
1219380   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
1219381   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
1219382   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
1219383   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1219384   +
1219385   +
1219386   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
1219387   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
1219388   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
1219389   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
1219390   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
1219391   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1219392   +
1219393   +
1219394   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
1219395   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
1219396   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
1219397   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
1219398   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
1219399   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1219400   +
1219401   +
1219402   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
1219403   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
1219404   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
1219405   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
1219406   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
1219407   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1219408   +
1219409   +
1219410   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
1219411   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
1219412   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
1219413   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
1219414   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
1219415   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1219416   +
1219417   +
1219418   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
1219419   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
1219420   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
1219421   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
1219422   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
1219423   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1219424   +
1219425   +
1219426   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
1219427   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
1219428   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
1219429   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
1219430   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
1219431   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1219432   +if
1219433   +_FILTERNORM1 not in ( '.')
1219434   + and
1219435   +_FILTERNORM2 not in ( '.')
1219436   + and
1219437   +_FILTERNORM3 not in ( '.')
1219438   + and
1219439   +_FILTERNORM4 not in ( '.')
1219440   + and
1219441   +_FILTERNORM5 not in ( '.')
1219442   + and
1219443   +_FILTERNORM6 not in ( '.')
1219444   + and
1219445   +_FILTERNORM7 not in ( ' ')
1219446   + and
1219447   +_FILTERNORM8 not in ( ' ')
1219448   +and
1219449   +( Dt_Customer ne .)
1219450   +and ( Income ne . and (Income<=107000))
1219451   +and ( Kidhome ne .)
1219452   +and ( MntFishProducts ne .)
1219453   +and ( MntFruits ne .)
1219454   +and ( MntGoldProds ne .)
1219455   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
1219456   +and ( MntSweetProducts ne .)
1219457   +and ( MntWines ne .)
1219458   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
1219459   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
1219460   +and ( NumStorePurchases ne .)
1219461   +and ( NumWebPurchases ne .)
1219462   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
1219463   +and ( Recency ne .)
1219464   +and ( Teenhome ne .)
1219465   +and ( Year_Birth ne .)
1219466   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
1219467   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
1219468   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
1219469   +end;
MPRINT(EM_DIAGRAM):   end;
1219470   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
1219471   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1219472    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1219473    quit;
1219474    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1219475    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1219476    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1219477    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
1219478    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1219479    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1219480    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1219481    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1219482    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1219483    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
1219484    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1219485    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1219486    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1219487    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1219488    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1219489    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1219490    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
1219491    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

1219492    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1219493    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1219494    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

1219495    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1219496    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1219497    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1219498    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1219499    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1219500    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1219500  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

1219501    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1219502    proc append base=EMWS8.Ensmbl12_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl12_FCMP data=_tempx;
1219503    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL12_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL12_FCMP has 1096 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1219504    %macro varDept(fcmpdata=,id=);
1219505    %global nobs&id scoreFlag&id;
1219506    %let scoreFlag&id = 0;
1219507    %if &id=1 or ^&fcmpStart %then %do;
1219508    proc sort data=&fcmpdata out=_temp&id nodupkey;
1219509    by NAME;
1219510    where id=&id and LHS in( %let j=1;
1219511    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
1219512    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
1219513    "&var" %let j = %eval(&j+1);
1219514    %end;
1219515    );
1219516    run;
1219517    %let dsid = %sysfunc(open(_temp&id));
1219518    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1219519    %let dsid = %sysfunc(close(&dsid));
1219520    %if &&nobs&id %then %do;
1219521    %let scoreFlag&id = 1;
1219522    %let fcmpStart = 1;
1219523    %end;
1219524    %else %let fcmpStart = 0;
1219525    %end;
1219526    %else %do;
1219527    proc sort data=&fcmpdata out=_tempid;
1219528    where id=&id;
1219529    by LHS;
1219530    run;
1219531    %let dsid = %sysfunc(open(_tempid));
1219532    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1219533    %let dsid = %sysfunc(close(&dsid));
1219534    %if ^&&nobs&id %then %do;
1219535    proc datasets lib=work nolist;
1219536    delete _tempid;
1219537    run;
1219538    quit;
1219539    %end;
1219540    %else %do;
1219541    data _tempAll;
1219542    set %let j=%eval(&id-1);
1219543    %do x=1 %to &j;
1219544    %if &&nobs&x %then %do;
1219545    _temp&x %end;
1219546    %end;
1219547    ;
1219548    run;
1219549    proc sql;
1219550    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
1219550  ! work._tempid p2 where p.name=p2.lhs;
1219551    quit;
1219552    data _temp&id;
1219553    set _temp&id;
1219554    where LHS ne '' and NAME ne '' and Node ne '';
1219555    run;
1219556    proc datasets lib=work nolist;
1219557    delete _tempAll;
1219558    run;
1219559    %let dsid = %sysfunc(open(_temp&id));
1219560    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1219561    %let dsid = %sysfunc(close(&dsid));
1219562    %if ^&&nobs&id %then %do;
1219563    proc datasets lib=work nolist;
1219564    delete _temp&id;
1219565    run;
1219566    quit;
1219567    %end;
1219568    %else %do;
1219569    %let scoreFlag&id = 1;
1219570    data _temp&id;
1219571    set _temp&id;
1219572    where LHS ne NAME and node ne '';
1219573    run;
1219574    %let dsid = %sysfunc(open(_temp&id));
1219575    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1219576    %let dsid = %sysfunc(close(&dsid));
1219577    %if ^&&nobs&id %then %do;
1219578    proc datasets lib=work nolist;
1219579    delete _temp&id;
1219580    run;
1219581    quit;
1219582    %end;
1219583    %else %do;
1219584    proc sort data=_temp&id nodupkey;
1219585    by LHS NAME;
1219586    run;
1219587    %end;
1219588    %end;
1219589    %end;
1219590    %end;
1219591    %mend varDept;
1219592    %macro optCode(outdata=fcmpdata);
1219593    %global fcmpStart;
1219594    %let fcmpStart = 0;
1219595    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
1219596    %let NumNodes=9;
1219597    %do k=1 %to &NumNodes;
1219598    %vardept(fcmpdata=&outdata, id=&k);
1219599    %end;
1219600    %mend optCode;
1219601    %optcode(outData=EMWS8.Ensmbl12_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl12_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL12_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl12_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 106 observations read from the data set EMWS8.ENSMBL12_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 79 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 27 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl12_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL12_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl12_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL12_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl12_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL12_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 27 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 2 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl12_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL12_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 29 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 33 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 33 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 33 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 33 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl12_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL12_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: There were 33 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 62 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl12_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL12_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl12_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL12_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

1219602    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
1219603    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1219604    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
1219605    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1219606    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
1219607    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1219608    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
1219609    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1219610    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1219611    create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
1219611  ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 2 rows and 3 columns.

1219612    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1219613    data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
1219614    set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
1219615    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 2 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 2 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1219616    filename _pref
1219616  ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural40\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural40\EMPUBLISHSCORE.sas";
1219617    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1219618    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Neural40\EMPUBLISHSCORE.sas.
1219619   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1219620   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1219621   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1219622   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1219623   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1219624   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1219625   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1219626   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1219627   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1219628   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1219629   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1219630   +LENGTH _WARN_ $4
1219631   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
1219632   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1219633   +
1219634   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1219635   +
1219636   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1219637   +
1219638   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1219639   +
1219640   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1219641   +
1219642   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1219643   +
1219644   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1219645   +
1219646   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1219647   +
1219648   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1219649   +
1219650   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1219651   +
1219652   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1219653   +
1219654   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1219655   +
1219656   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1219657   +
1219658   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1219659   +
1219660   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1219661   +
1219662   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1219663   +
1219664   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1219665   +
1219666   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1219667   +
1219668   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1219669   +
1219670   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1219671   +
1219672   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1219673   +
1219674   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1219675   +
1219676   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1219677   +
1219678   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1219679   +
1219680   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1219681   +
1219682   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1219683   +
1219684   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1219685   +
1219686   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1219687   +
1219688   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1219689   +
1219690   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1219691   +
1219692   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1219693   +
1219694   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1219695   +
1219696   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1219697   +
1219698   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1219699   +
1219700   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1219701   +
1219702   +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
1219703   +
1219704   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1219705   +
1219706   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1219707   +
1219708   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1219709   +
1219710   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1219711   +
1219712   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1219713   +
1219714   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1219715   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1219716   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1219717   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1219718   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1219719   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1219720   +end;
MPRINT(EM_DIAGRAM):   end;
1219721   +else do;
MPRINT(EM_DIAGRAM):   else do;
1219722   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1219723   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1219724   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1219725   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1219726   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1219727   +   end;
MPRINT(EM_DIAGRAM):   end;
1219728   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1219729   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1219730   +   end;
MPRINT(EM_DIAGRAM):   end;
1219731   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1219732   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1219733   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1219734   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1219735   +   end;
MPRINT(EM_DIAGRAM):   end;
1219736   +end;
MPRINT(EM_DIAGRAM):   end;
1219737   +
1219738   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1219739   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1219740   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1219741   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1219742   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1219743   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1219744   +end;
MPRINT(EM_DIAGRAM):   end;
1219745   +else do;
MPRINT(EM_DIAGRAM):   else do;
1219746   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1219747   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1219748   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1219749   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1219750   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1219751   +   end;
MPRINT(EM_DIAGRAM):   end;
1219752   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1219753   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1219754   +   end;
MPRINT(EM_DIAGRAM):   end;
1219755   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1219756   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1219757   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1219758   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1219759   +   end;
MPRINT(EM_DIAGRAM):   end;
1219760   +end;
MPRINT(EM_DIAGRAM):   end;
1219761   +
1219762   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1219763   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1219764   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1219765   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1219766   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1219767   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1219768   +end;
MPRINT(EM_DIAGRAM):   end;
1219769   +else do;
MPRINT(EM_DIAGRAM):   else do;
1219770   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1219771   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1219772   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1219773   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1219774   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1219775   +   end;
MPRINT(EM_DIAGRAM):   end;
1219776   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1219777   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1219778   +   end;
MPRINT(EM_DIAGRAM):   end;
1219779   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1219780   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1219781   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1219782   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1219783   +   end;
MPRINT(EM_DIAGRAM):   end;
1219784   +end;
MPRINT(EM_DIAGRAM):   end;
1219785   +
1219786   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1219787   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1219788   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1219789   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1219790   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1219791   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1219792   +end;
MPRINT(EM_DIAGRAM):   end;
1219793   +else do;
MPRINT(EM_DIAGRAM):   else do;
1219794   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1219795   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1219796   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1219797   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1219798   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1219799   +   end;
MPRINT(EM_DIAGRAM):   end;
1219800   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1219801   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1219802   +   end;
MPRINT(EM_DIAGRAM):   end;
1219803   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1219804   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1219805   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1219806   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1219807   +   end;
MPRINT(EM_DIAGRAM):   end;
1219808   +end;
MPRINT(EM_DIAGRAM):   end;
1219809   +
1219810   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1219811   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1219812   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1219813   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1219814   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1219815   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1219816   +end;
MPRINT(EM_DIAGRAM):   end;
1219817   +else do;
MPRINT(EM_DIAGRAM):   else do;
1219818   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1219819   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1219820   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1219821   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1219822   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1219823   +   end;
MPRINT(EM_DIAGRAM):   end;
1219824   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1219825   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1219826   +   end;
MPRINT(EM_DIAGRAM):   end;
1219827   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1219828   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1219829   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1219830   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1219831   +   end;
MPRINT(EM_DIAGRAM):   end;
1219832   +end;
MPRINT(EM_DIAGRAM):   end;
1219833   +
1219834   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1219835   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1219836   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1219837   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1219838   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1219839   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1219840   +end;
MPRINT(EM_DIAGRAM):   end;
1219841   +else do;
MPRINT(EM_DIAGRAM):   else do;
1219842   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1219843   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1219844   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1219845   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1219846   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1219847   +   end;
MPRINT(EM_DIAGRAM):   end;
1219848   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1219849   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1219850   +   end;
MPRINT(EM_DIAGRAM):   end;
1219851   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1219852   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1219853   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1219854   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1219855   +   end;
MPRINT(EM_DIAGRAM):   end;
1219856   +end;
MPRINT(EM_DIAGRAM):   end;
1219857   +
1219858   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1219859   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1219860   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1219861   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1219862   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1219863   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1219864   +end;
MPRINT(EM_DIAGRAM):   end;
1219865   +else do;
MPRINT(EM_DIAGRAM):   else do;
1219866   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1219867   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1219868   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1219869   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1219870   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1219871   +   end;
MPRINT(EM_DIAGRAM):   end;
1219872   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1219873   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1219874   +   end;
MPRINT(EM_DIAGRAM):   end;
1219875   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1219876   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1219877   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1219878   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1219879   +   end;
MPRINT(EM_DIAGRAM):   end;
1219880   +end;
MPRINT(EM_DIAGRAM):   end;
1219881   +
1219882   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1219883   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
1219884   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1219885   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1219886   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1219887   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1219888   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1219889   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1219890   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1219891   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1219892   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1219893   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1219894   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1219895   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1219896   +end;
MPRINT(EM_DIAGRAM):   end;
1219897   +else do;
MPRINT(EM_DIAGRAM):   else do;
1219898   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1219899   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1219900   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1219901   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1219902   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1219903   +   end;
MPRINT(EM_DIAGRAM):   end;
1219904   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1219905   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1219906   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1219907   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1219908   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1219909   +   end;
MPRINT(EM_DIAGRAM):   end;
1219910   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1219911   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1219912   +   end;
MPRINT(EM_DIAGRAM):   end;
1219913   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1219914   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1219915   +   end;
MPRINT(EM_DIAGRAM):   end;
1219916   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1219917   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1219918   +   end;
MPRINT(EM_DIAGRAM):   end;
1219919   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1219920   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1219921   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1219922   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1219923   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1219924   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1219925   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1219926   +   end;
MPRINT(EM_DIAGRAM):   end;
1219927   +end;
MPRINT(EM_DIAGRAM):   end;
1219928   +
1219929   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1219930   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1219931   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
1219932   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1219933   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1219934   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1219935   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1219936   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1219937   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1219938   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1219939   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1219940   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1219941   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1219942   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1219943   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1219944   +end;
MPRINT(EM_DIAGRAM):   end;
1219945   +else do;
MPRINT(EM_DIAGRAM):   else do;
1219946   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1219947   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1219948   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1219949   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1219950   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1219951   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1219952   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1219953   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1219954   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1219955   +         end;
MPRINT(EM_DIAGRAM):   end;
1219956   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1219957   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1219958   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1219959   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1219960   +            end;
MPRINT(EM_DIAGRAM):   end;
1219961   +         end;
MPRINT(EM_DIAGRAM):   end;
1219962   +      end;
MPRINT(EM_DIAGRAM):   end;
1219963   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1219964   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1219965   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1219966   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1219967   +         end;
MPRINT(EM_DIAGRAM):   end;
1219968   +      end;
MPRINT(EM_DIAGRAM):   end;
1219969   +   end;
MPRINT(EM_DIAGRAM):   end;
1219970   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1219971   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1219972   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1219973   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1219974   +      end;
MPRINT(EM_DIAGRAM):   end;
1219975   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1219976   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1219977   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1219978   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1219979   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1219980   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1219981   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1219982   +         end;
MPRINT(EM_DIAGRAM):   end;
1219983   +      end;
MPRINT(EM_DIAGRAM):   end;
1219984   +   end;
MPRINT(EM_DIAGRAM):   end;
1219985   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1219986   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1219987   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1219988   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1219989   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1219990   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1219991   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1219992   +   end;
MPRINT(EM_DIAGRAM):   end;
1219993   +end;
MPRINT(EM_DIAGRAM):   end;
1219994   +
1219995   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1219996   +*** Checking missing input Interval
1219997   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1219998   +
1219999   +IF NMISS(
1220000   +   AcceptedCmpTotal ,
1220001   +   Age ,
1220002   +   Frq ,
1220003   +   Income ,
1220004   +   Kidhome ,
1220005   +   MntFishProducts ,
1220006   +   MntFruits ,
1220007   +   MntGoldProds ,
1220008   +   MntSweetProducts ,
1220009   +   MonthsAsCustomer ,
1220010   +   NumDealsPurchases ,
1220011   +   NumWebVisitsMonth ,
1220012   +   RFMstat ,
1220013   +   RMntFrq ,
1220014   +   Recency ,
1220015   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , 
MntFishProducts , MntFruits , MntGoldProds , MntSweetProducts , MonthsAsCustomer , 
NumDealsPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , Teenhome ) THEN DO;
1220016   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1220017   +
1220018   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1220019   +END;
MPRINT(EM_DIAGRAM):   END;
1220020   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1220021   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1220022   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1220023   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1220024   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1220025   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1220026   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1220027   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1220028   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1220029   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1220030   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1220031   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1220032   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1220033   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1220034   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1220035   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1220036   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1220037   +   S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
1220038   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
1220039   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1220040   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1220041   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1220042   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1220043   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1220044   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1220045   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1220046   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1220047   +END;
MPRINT(EM_DIAGRAM):   END;
1220048   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1220049   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1220050   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1220051   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1220052   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1220053   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1220054   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1220055   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1220056   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1220057   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1220058   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1220059   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1220060   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1220061   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1220062   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1220063   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1220064   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1220065   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1220066   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1220067   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1220068   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1220069   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1220070   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1220071   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1220072   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1220073   +   ELSE S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
1220074   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
1220075   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1220076   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1220077   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1220078   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1220079   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1220080   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1220081   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1220082   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1220083   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1220084   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1220085   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1220086   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1220087   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1220088   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1220089   +END;
MPRINT(EM_DIAGRAM):   END;
1220090   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1220091   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1220092   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1220093   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1220094   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1220095   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1220096   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1220097   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1220098   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1220099   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1220100   +   H11  =      0.0175934799517 * S_AcceptedCmpTotal  +     0.05885450913465 *
1220101   +        S_Age  +    -0.17194721523787 * S_Frq  +    -0.82356228294539 *
1220102   +        S_Income  +     0.39869341630865 * S_Kidhome
1220103   +          +    -0.04263586382867 * S_MntFishProducts
1220104   +          +     0.02697365132515 * S_MntFruits  +     0.04818007940845 *
1220105   +        S_MntGoldProds  +      0.1933390486387 * S_MntSweetProducts
1220106   +          +    -0.14308588367026 * S_MonthsAsCustomer
1220107   +          +    -0.01053346972758 * S_NumDealsPurchases
1220108   +          +    -0.02308351901024 * S_NumWebVisitsMonth
1220109   +          +     0.00403225397753 * S_RFMstat  +    -0.21691316840182 *
1220110   +        S_RMntFrq  +     0.53938373050534 * S_Recency
1220111   +          +     0.55541282723709 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.0175934799517 * S_AcceptedCmpTotal + 0.05885450913465 * S_Age + 
-0.17194721523787 * S_Frq + -0.82356228294539 * S_Income + 0.39869341630865 * S_Kidhome + 
-0.04263586382867 * S_MntFishProducts + 0.02697365132515 * S_MntFruits + 0.04818007940845 * 
S_MntGoldProds + 0.1933390486387 * S_MntSweetProducts + -0.14308588367026 * S_MonthsAsCustomer 
+ -0.01053346972758 * S_NumDealsPurchases + -0.02308351901024 * S_NumWebVisitsMonth + 
0.00403225397753 * S_RFMstat + -0.21691316840182 * S_RMntFrq + 0.53938373050534 * S_Recency + 
0.55541282723709 * S_Teenhome ;
1220112   +   H12  =    -0.31735811206172 * S_AcceptedCmpTotal  +    -0.13976815294846 *
1220113   +        S_Age  +    -0.11928757030551 * S_Frq  +    -0.03597478449162 *
1220114   +        S_Income  +     0.31514301668626 * S_Kidhome
1220115   +          +    -0.05723808748191 * S_MntFishProducts
1220116   +          +     0.04545715816601 * S_MntFruits  +     0.19006209866265 *
1220117   +        S_MntGoldProds  +     0.34690576354698 * S_MntSweetProducts
1220118   +          +    -0.48738730918684 * S_MonthsAsCustomer
1220119   +          +     0.31545795225489 * S_NumDealsPurchases
1220120   +          +     0.24686603252864 * S_NumWebVisitsMonth
1220121   +          +     0.29857007170218 * S_RFMstat  +    -0.01009427724752 *
1220122   +        S_RMntFrq  +    -0.48894693883774 * S_Recency
1220123   +          +    -0.32384426712368 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -0.31735811206172 * S_AcceptedCmpTotal + -0.13976815294846 * S_Age 
+ -0.11928757030551 * S_Frq + -0.03597478449162 * S_Income + 0.31514301668626 * S_Kidhome + 
-0.05723808748191 * S_MntFishProducts + 0.04545715816601 * S_MntFruits + 0.19006209866265 * 
S_MntGoldProds + 0.34690576354698 * S_MntSweetProducts + -0.48738730918684 * 
S_MonthsAsCustomer + 0.31545795225489 * S_NumDealsPurchases + 0.24686603252864 * 
S_NumWebVisitsMonth + 0.29857007170218 * S_RFMstat + -0.01009427724752 * S_RMntFrq + 
-0.48894693883774 * S_Recency + -0.32384426712368 * S_Teenhome ;
1220124   +   H13  =    -0.67705794412683 * S_AcceptedCmpTotal  +     -0.1538815804864 *
1220125   +        S_Age  +    -0.32580272740463 * S_Frq  +    -0.42829033761305 *
1220126   +        S_Income  +    -0.48452563006855 * S_Kidhome
1220127   +          +      0.1638851163007 * S_MntFishProducts
1220128   +          +      0.0664068987141 * S_MntFruits  +    -0.54942999951449 *
1220129   +        S_MntGoldProds  +    -0.03119903843323 * S_MntSweetProducts
1220130   +          +    -0.09008316729574 * S_MonthsAsCustomer
1220131   +          +    -0.45452883452999 * S_NumDealsPurchases
1220132   +          +    -0.51499533680205 * S_NumWebVisitsMonth
1220133   +          +    -0.31380282266424 * S_RFMstat  +    -0.49525143192723 *
1220134   +        S_RMntFrq  +     0.78729387300328 * S_Recency
1220135   +          +    -0.00915408985389 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = -0.67705794412683 * S_AcceptedCmpTotal + -0.1538815804864 * S_Age 
+ -0.32580272740463 * S_Frq + -0.42829033761305 * S_Income + -0.48452563006855 * S_Kidhome + 
0.1638851163007 * S_MntFishProducts + 0.0664068987141 * S_MntFruits + -0.54942999951449 * 
S_MntGoldProds + -0.03119903843323 * S_MntSweetProducts + -0.09008316729574 * 
S_MonthsAsCustomer + -0.45452883452999 * S_NumDealsPurchases + -0.51499533680205 * 
S_NumWebVisitsMonth + -0.31380282266424 * S_RFMstat + -0.49525143192723 * S_RMntFrq + 
0.78729387300328 * S_Recency + -0.00915408985389 * S_Teenhome ;
1220136   +   H14  =     0.38318271090494 * S_AcceptedCmpTotal  +     0.06739638561066 *
1220137   +        S_Age  +     0.06912614028701 * S_Frq  +     0.14095220260271 *
1220138   +        S_Income  +    -0.62959343200613 * S_Kidhome
1220139   +          +    -0.08953561593231 * S_MntFishProducts
1220140   +          +    -0.17218233364246 * S_MntFruits  +    -0.00637076803669 *
1220141   +        S_MntGoldProds  +    -0.30194599011284 * S_MntSweetProducts
1220142   +          +    -0.04786752357029 * S_MonthsAsCustomer
1220143   +          +     0.01658790214447 * S_NumDealsPurchases
1220144   +          +     0.60508225698649 * S_NumWebVisitsMonth
1220145   +          +     0.24353060507938 * S_RFMstat  +    -0.16860031884486 *
1220146   +        S_RMntFrq  +    -0.74371082820398 * S_Recency
1220147   +          +    -0.33551735128078 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = 0.38318271090494 * S_AcceptedCmpTotal + 0.06739638561066 * S_Age + 
0.06912614028701 * S_Frq + 0.14095220260271 * S_Income + -0.62959343200613 * S_Kidhome + 
-0.08953561593231 * S_MntFishProducts + -0.17218233364246 * S_MntFruits + -0.00637076803669 * 
S_MntGoldProds + -0.30194599011284 * S_MntSweetProducts + -0.04786752357029 * 
S_MonthsAsCustomer + 0.01658790214447 * S_NumDealsPurchases + 0.60508225698649 * 
S_NumWebVisitsMonth + 0.24353060507938 * S_RFMstat + -0.16860031884486 * S_RMntFrq + 
-0.74371082820398 * S_Recency + -0.33551735128078 * S_Teenhome ;
1220148   +   H15  =    -0.33857166416401 * S_AcceptedCmpTotal  +     0.16520608022036 *
1220149   +        S_Age  +     0.94641603263172 * S_Frq  +     0.27973805141234 *
1220150   +        S_Income  +    -0.02417847760857 * S_Kidhome
1220151   +          +    -0.15499190740194 * S_MntFishProducts
1220152   +          +     0.06053779821593 * S_MntFruits  +     0.01880479324025 *
1220153   +        S_MntGoldProds  +    -0.12339726666832 * S_MntSweetProducts
1220154   +          +     0.03507116553703 * S_MonthsAsCustomer
1220155   +          +    -0.55190381693021 * S_NumDealsPurchases
1220156   +          +    -0.59332657995985 * S_NumWebVisitsMonth
1220157   +          +    -0.06593374840561 * S_RFMstat  +     -0.1695910963416 *
1220158   +        S_RMntFrq  +     0.67557246434122 * S_Recency
1220159   +          +    -0.18658362303394 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H15 = -0.33857166416401 * S_AcceptedCmpTotal + 0.16520608022036 * S_Age 
+ 0.94641603263172 * S_Frq + 0.27973805141234 * S_Income + -0.02417847760857 * S_Kidhome + 
-0.15499190740194 * S_MntFishProducts + 0.06053779821593 * S_MntFruits + 0.01880479324025 * 
S_MntGoldProds + -0.12339726666832 * S_MntSweetProducts + 0.03507116553703 * 
S_MonthsAsCustomer + -0.55190381693021 * S_NumDealsPurchases + -0.59332657995985 * 
S_NumWebVisitsMonth + -0.06593374840561 * S_RFMstat + -0.1695910963416 * S_RMntFrq + 
0.67557246434122 * S_Recency + -0.18658362303394 * S_Teenhome ;
1220160   +   H11  = H11  +     0.33421746514492 * AcceptedCmp10
1220161   +          +     0.40665603760529 * AcceptedCmp20  +     0.31091046539166 *
1220162   +        AcceptedCmp30  +     0.31067810471417 * AcceptedCmp40
1220163   +          +     0.23230606314386 * AcceptedCmp50  +     0.16336773428886 *
1220164   +        Complain0  +    -0.30987882500611 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.33421746514492 * AcceptedCmp10 + 0.40665603760529 * 
AcceptedCmp20 + 0.31091046539166 * AcceptedCmp30 + 0.31067810471417 * AcceptedCmp40 + 
0.23230606314386 * AcceptedCmp50 + 0.16336773428886 * Complain0 + -0.30987882500611 * 
HigherEducationBinary0 ;
1220165   +   H12  = H12  +     0.15837463939449 * AcceptedCmp10
1220166   +          +    -0.01452684677445 * AcceptedCmp20  +    -0.18194082864383 *
1220167   +        AcceptedCmp30  +     0.10656170173016 * AcceptedCmp40
1220168   +          +     0.27710912124072 * AcceptedCmp50  +     0.21438736172214 *
1220169   +        Complain0  +      0.2669951422121 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.15837463939449 * AcceptedCmp10 + -0.01452684677445 * 
AcceptedCmp20 + -0.18194082864383 * AcceptedCmp30 + 0.10656170173016 * AcceptedCmp40 + 
0.27710912124072 * AcceptedCmp50 + 0.21438736172214 * Complain0 + 0.2669951422121 * 
HigherEducationBinary0 ;
1220170   +   H13  = H13  +    -0.11101425179048 * AcceptedCmp10
1220171   +          +    -0.13751555879468 * AcceptedCmp20  +     0.15733527433639 *
1220172   +        AcceptedCmp30  +    -0.09214109408136 * AcceptedCmp40
1220173   +          +     0.20478673178439 * AcceptedCmp50  +    -0.28890027497717 *
1220174   +        Complain0  +     0.12242984309847 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.11101425179048 * AcceptedCmp10 + -0.13751555879468 * 
AcceptedCmp20 + 0.15733527433639 * AcceptedCmp30 + -0.09214109408136 * AcceptedCmp40 + 
0.20478673178439 * AcceptedCmp50 + -0.28890027497717 * Complain0 + 0.12242984309847 * 
HigherEducationBinary0 ;
1220175   +   H14  = H14  +     0.23187291622457 * AcceptedCmp10
1220176   +          +    -0.00683976547266 * AcceptedCmp20  +    -0.31710598764248 *
1220177   +        AcceptedCmp30  +     0.01758514221597 * AcceptedCmp40
1220178   +          +     0.01100509244187 * AcceptedCmp50  +     0.18584999296157 *
1220179   +        Complain0  +     0.02524550049258 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.23187291622457 * AcceptedCmp10 + -0.00683976547266 * 
AcceptedCmp20 + -0.31710598764248 * AcceptedCmp30 + 0.01758514221597 * AcceptedCmp40 + 
0.01100509244187 * AcceptedCmp50 + 0.18584999296157 * Complain0 + 0.02524550049258 * 
HigherEducationBinary0 ;
1220180   +   H15  = H15  +     0.53220831693924 * AcceptedCmp10
1220181   +          +     0.01983211122446 * AcceptedCmp20  +      0.4704897795251 *
1220182   +        AcceptedCmp30  +    -0.05798671810245 * AcceptedCmp40
1220183   +          +      0.2900384423652 * AcceptedCmp50  +     0.05796705496261 *
1220184   +        Complain0  +     0.17745347141736 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.53220831693924 * AcceptedCmp10 + 0.01983211122446 * 
AcceptedCmp20 + 0.4704897795251 * AcceptedCmp30 + -0.05798671810245 * AcceptedCmp40 + 
0.2900384423652 * AcceptedCmp50 + 0.05796705496261 * Complain0 + 0.17745347141736 * 
HigherEducationBinary0 ;
1220185   +   H11  = H11  +     0.02871001640043 * Education2n_Cycle
1220186   +          +    -0.13470776546868 * EducationBasic  +    -0.09722995474504 *
1220187   +        EducationGraduation  +     0.23764107317064 * EducationMaster
1220188   +          +    -0.41654638301737 * Marital_StatusDivorced
1220189   +          +     0.65956207700583 * Marital_StatusMarried
1220190   +          +    -0.52573042887166 * Marital_StatusSingle
1220191   +          +     0.70466028872575 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.02871001640043 * Education2n_Cycle + -0.13470776546868 * 
EducationBasic + -0.09722995474504 * EducationGraduation + 0.23764107317064 * EducationMaster 
+ -0.41654638301737 * Marital_StatusDivorced + 0.65956207700583 * Marital_StatusMarried + 
-0.52573042887166 * Marital_StatusSingle + 0.70466028872575 * Marital_StatusTogether ;
1220192   +   H12  = H12  +    -0.18219729356622 * Education2n_Cycle
1220193   +          +    -0.04034334204744 * EducationBasic  +     0.26266153233615 *
1220194   +        EducationGraduation  +     0.04617834975571 * EducationMaster
1220195   +          +    -0.32313846862799 * Marital_StatusDivorced
1220196   +          +     0.15910539009887 * Marital_StatusMarried
1220197   +          +     0.28781821946114 * Marital_StatusSingle
1220198   +          +    -0.31451367898445 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.18219729356622 * Education2n_Cycle + -0.04034334204744 * 
EducationBasic + 0.26266153233615 * EducationGraduation + 0.04617834975571 * EducationMaster + 
-0.32313846862799 * Marital_StatusDivorced + 0.15910539009887 * Marital_StatusMarried + 
0.28781821946114 * Marital_StatusSingle + -0.31451367898445 * Marital_StatusTogether ;
1220199   +   H13  = H13  +     0.03267721493849 * Education2n_Cycle
1220200   +          +     0.16906837093601 * EducationBasic  +    -0.24874822218195 *
1220201   +        EducationGraduation  +    -0.16815820019721 * EducationMaster
1220202   +          +    -0.06481096024989 * Marital_StatusDivorced
1220203   +          +    -0.01184060710261 * Marital_StatusMarried
1220204   +          +    -0.04932258474026 * Marital_StatusSingle
1220205   +          +     -0.1515388053958 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.03267721493849 * Education2n_Cycle + 0.16906837093601 * 
EducationBasic + -0.24874822218195 * EducationGraduation + -0.16815820019721 * EducationMaster 
+ -0.06481096024989 * Marital_StatusDivorced + -0.01184060710261 * Marital_StatusMarried + 
-0.04932258474026 * Marital_StatusSingle + -0.1515388053958 * Marital_StatusTogether ;
1220206   +   H14  = H14  +     0.04382537081818 * Education2n_Cycle
1220207   +          +     0.09896945976445 * EducationBasic  +      0.2410849324915 *
1220208   +        EducationGraduation  +    -0.17878202935912 * EducationMaster
1220209   +          +      0.2062190716357 * Marital_StatusDivorced
1220210   +          +      -0.523160668609 * Marital_StatusMarried
1220211   +          +     0.50687401816278 * Marital_StatusSingle
1220212   +          +    -0.14896192891933 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.04382537081818 * Education2n_Cycle + 0.09896945976445 * 
EducationBasic + 0.2410849324915 * EducationGraduation + -0.17878202935912 * EducationMaster + 
0.2062190716357 * Marital_StatusDivorced + -0.523160668609 * Marital_StatusMarried + 
0.50687401816278 * Marital_StatusSingle + -0.14896192891933 * Marital_StatusTogether ;
1220213   +   H15  = H15  +    -0.08178258730533 * Education2n_Cycle
1220214   +          +      0.2352291498146 * EducationBasic  +     0.00142061419661 *
1220215   +        EducationGraduation  +      0.0248100493803 * EducationMaster
1220216   +          +     -0.1386176879533 * Marital_StatusDivorced
1220217   +          +    -0.17611433777439 * Marital_StatusMarried
1220218   +          +     0.09908348348999 * Marital_StatusSingle
1220219   +          +     0.03642332762739 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + -0.08178258730533 * Education2n_Cycle + 0.2352291498146 * 
EducationBasic + 0.00142061419661 * EducationGraduation + 0.0248100493803 * EducationMaster + 
-0.1386176879533 * Marital_StatusDivorced + -0.17611433777439 * Marital_StatusMarried + 
0.09908348348999 * Marital_StatusSingle + 0.03642332762739 * Marital_StatusTogether ;
1220220   +   H11  =     0.45628072516851 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 0.45628072516851 + H11 ;
1220221   +   H12  =    -0.95695553300305 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -0.95695553300305 + H12 ;
1220222   +   H13  =    -0.44156518168947 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.44156518168947 + H13 ;
1220223   +   H14  =      0.5435213841731 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 0.5435213841731 + H14 ;
1220224   +   H15  =     0.82816554742793 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = 0.82816554742793 + H15 ;
1220225   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1220226   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1220227   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1220228   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1220229   +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
1220230   +END;
MPRINT(EM_DIAGRAM):   END;
1220231   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1220232   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1220233   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1220234   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1220235   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1220236   +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
1220237   +END;
MPRINT(EM_DIAGRAM):   END;
1220238   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1220239   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1220240   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1220241   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1220242   +   P_DepVar1  =    -3.08501570662701 * H11  +     0.89180279281701 * H12
1220243   +          +    -2.65199906073292 * H13  +     1.47191997336768 * H14
1220244   +          +     -1.9303334635002 * H15 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.08501570662701 * H11 + 0.89180279281701 * H12 + 
-2.65199906073292 * H13 + 1.47191997336768 * H14 + -1.9303334635002 * H15 ;
1220245   +   P_DepVar1  =    -1.84416627670626 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.84416627670626 + P_DepVar1 ;
1220246   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1220247   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1220248   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1220249   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1220250   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1220251   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1220252   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1220253   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1220254   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1220255   +END;
MPRINT(EM_DIAGRAM):   END;
1220256   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1220257   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1220258   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1220259   +END;
MPRINT(EM_DIAGRAM):   END;
1220260   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1220261   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1220262   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1220263   +END;
MPRINT(EM_DIAGRAM):   END;
1220264   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1220265   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1220266   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1220267   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1220268   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1220269   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1220270   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1220271   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1220272   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1220273   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1220274   +END;
MPRINT(EM_DIAGRAM):   END;
1220275   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1220276   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1220277   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1220278   +drop
1220279   +H11
1220280   +H12
1220281   +H13
1220282   +H14
1220283   +H15
1220284   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 ;
1220285   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1220286    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1220287    quit;
1220288    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1220289    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1220290    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1220291    retain ID 2 Node "Neural40";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Neural40";
1220292    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1220293    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2037 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2037 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1220294    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1220295    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1220296    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2037 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2037 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1220297    proc sort data=EMWS8.Neural40_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Neural40_variableset out=_temp2(keep=NAME CREATOR);
1220298    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1220299    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.NEURAL40_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1220300    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1220301    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1220302    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1220303    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1220304    proc contents data=EMWS8.Neural40_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Neural40_train out=_meta(keep=NAME) noprint;
1220305    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

1220306    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1220307    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1220308    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 53 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1220309    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1220310    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1220311    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1220312    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 53 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1220313    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1220314    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1220314  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 1037 rows and 5 columns.

1220315    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1220316    proc append base=EMWS8.Ensmbl12_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl12_FCMP data=_tempx;
1220317    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL12_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 1037 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL12_FCMP has 1037 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1220318    filename _pref
1220318  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
1220319    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1220320    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
1220321   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1220322   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1220323   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1220324   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1220325   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1220326   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1220327    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1220328    quit;
1220329    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1220330    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1220331    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1220332    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
1220333    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1220334    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1220335    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1220336    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1220337    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1220338    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
1220339    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1220340    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1220341    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1220342    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1220343    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1220344    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1220345    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
1220346    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

1220347    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1220348    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1220349    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1220350    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1220351    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1220352    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1220353    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1220354    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1220355    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1220355  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

1220356    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1220357    proc append base=EMWS8.Ensmbl12_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl12_FCMP data=_tempx;
1220358    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL12_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL12_FCMP has 1041 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1220359    filename _pref
1220359  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
1220360    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1220361    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
1220362   +
1220363   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1220364   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1220364  !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1220365   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1220366   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1220367   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1220368   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1220369   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1220370    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1220371    quit;
1220372    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1220373    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1220374    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1220375    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
1220376    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1220377    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1220378    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1220379    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1220380    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1220381    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
1220382    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1220383    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1220384    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1220385    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1220386    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1220387    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1220388    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
1220389    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1220390    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1220391    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1220392    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1220393    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1220394    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1220395    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1220396    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1220397    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1220398    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1220398  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

1220399    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1220400    proc append base=EMWS8.Ensmbl12_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl12_FCMP data=_tempx;
1220401    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL12_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL12_FCMP has 1080 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1220402    filename _pref
1220402  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
1220403    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1220404    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
1220405   +
1220406   +
1220407   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
1220408   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
1220409   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
1220410   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
1220411   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
1220412   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1220413   +
1220414   +
1220415   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
1220416   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
1220417   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
1220418   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
1220419   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
1220420   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1220421   +
1220422   +
1220423   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
1220424   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
1220425   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
1220426   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
1220427   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
1220428   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1220429   +
1220430   +
1220431   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
1220432   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
1220433   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
1220434   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
1220435   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
1220436   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1220437   +
1220438   +
1220439   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
1220440   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
1220441   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
1220442   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
1220443   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
1220444   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1220445   +
1220446   +
1220447   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
1220448   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
1220449   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
1220450   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
1220451   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
1220452   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1220453   +
1220454   +
1220455   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
1220456   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
1220457   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
1220458   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
1220459   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
1220460   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1220461   +
1220462   +
1220463   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
1220464   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
1220465   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
1220466   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
1220467   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
1220468   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1220469   +if
1220470   +_FILTERNORM1 not in ( '.')
1220471   + and
1220472   +_FILTERNORM2 not in ( '.')
1220473   + and
1220474   +_FILTERNORM3 not in ( '.')
1220475   + and
1220476   +_FILTERNORM4 not in ( '.')
1220477   + and
1220478   +_FILTERNORM5 not in ( '.')
1220479   + and
1220480   +_FILTERNORM6 not in ( '.')
1220481   + and
1220482   +_FILTERNORM7 not in ( ' ')
1220483   + and
1220484   +_FILTERNORM8 not in ( ' ')
1220485   +and
1220486   +( Dt_Customer ne .)
1220487   +and ( Income ne . and (Income<=107000))
1220488   +and ( Kidhome ne .)
1220489   +and ( MntFishProducts ne .)
1220490   +and ( MntFruits ne .)
1220491   +and ( MntGoldProds ne .)
1220492   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
1220493   +and ( MntSweetProducts ne .)
1220494   +and ( MntWines ne .)
1220495   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
1220496   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
1220497   +and ( NumStorePurchases ne .)
1220498   +and ( NumWebPurchases ne .)
1220499   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
1220500   +and ( Recency ne .)
1220501   +and ( Teenhome ne .)
1220502   +and ( Year_Birth ne .)
1220503   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
1220504   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
1220505   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
1220506   +end;
MPRINT(EM_DIAGRAM):   end;
1220507   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
1220508   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1220509    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1220510    quit;
1220511    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1220512    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1220513    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1220514    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
1220515    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1220516    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1220517    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1220518    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1220519    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

1220520    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
1220521    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1220522    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1220523    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1220524    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1220525    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1220526    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1220527    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
1220528    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

1220529    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1220530    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1220531    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1220532    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1220533    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1220534    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1220535    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1220536    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1220537    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1220537  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

1220538    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1220539    proc append base=EMWS8.Ensmbl12_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl12_FCMP data=_tempx;
1220540    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL12_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL12_FCMP has 1146 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1220541    %macro varDept(fcmpdata=,id=);
1220542    %global nobs&id scoreFlag&id;
1220543    %let scoreFlag&id = 0;
1220544    %if &id=1 or ^&fcmpStart %then %do;
1220545    proc sort data=&fcmpdata out=_temp&id nodupkey;
1220546    by NAME;
1220547    where id=&id and LHS in( %let j=1;
1220548    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
1220549    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
1220550    "&var" %let j = %eval(&j+1);
1220551    %end;
1220552    );
1220553    run;
1220554    %let dsid = %sysfunc(open(_temp&id));
1220555    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1220556    %let dsid = %sysfunc(close(&dsid));
1220557    %if &&nobs&id %then %do;
1220558    %let scoreFlag&id = 1;
1220559    %let fcmpStart = 1;
1220560    %end;
1220561    %else %let fcmpStart = 0;
1220562    %end;
1220563    %else %do;
1220564    proc sort data=&fcmpdata out=_tempid;
1220565    where id=&id;
1220566    by LHS;
1220567    run;
1220568    %let dsid = %sysfunc(open(_tempid));
1220569    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1220570    %let dsid = %sysfunc(close(&dsid));
1220571    %if ^&&nobs&id %then %do;
1220572    proc datasets lib=work nolist;
1220573    delete _tempid;
1220574    run;
1220575    quit;
1220576    %end;
1220577    %else %do;
1220578    data _tempAll;
1220579    set %let j=%eval(&id-1);
1220580    %do x=1 %to &j;
1220581    %if &&nobs&x %then %do;
1220582    _temp&x %end;
1220583    %end;
1220584    ;
1220585    run;
1220586    proc sql;
1220587    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
1220587  ! work._tempid p2 where p.name=p2.lhs;
1220588    quit;
1220589    data _temp&id;
1220590    set _temp&id;
1220591    where LHS ne '' and NAME ne '' and Node ne '';
1220592    run;
1220593    proc datasets lib=work nolist;
1220594    delete _tempAll;
1220595    run;
1220596    %let dsid = %sysfunc(open(_temp&id));
1220597    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1220598    %let dsid = %sysfunc(close(&dsid));
1220599    %if ^&&nobs&id %then %do;
1220600    proc datasets lib=work nolist;
1220601    delete _temp&id;
1220602    run;
1220603    quit;
1220604    %end;
1220605    %else %do;
1220606    %let scoreFlag&id = 1;
1220607    data _temp&id;
1220608    set _temp&id;
1220609    where LHS ne NAME and node ne '';
1220610    run;
1220611    %let dsid = %sysfunc(open(_temp&id));
1220612    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1220613    %let dsid = %sysfunc(close(&dsid));
1220614    %if ^&&nobs&id %then %do;
1220615    proc datasets lib=work nolist;
1220616    delete _temp&id;
1220617    run;
1220618    quit;
1220619    %end;
1220620    %else %do;
1220621    proc sort data=_temp&id nodupkey;
1220622    by LHS NAME;
1220623    run;
1220624    %end;
1220625    %end;
1220626    %end;
1220627    %end;
1220628    %mend varDept;
1220629    %macro optCode(outdata=fcmpdata);
1220630    %global fcmpStart;
1220631    %let fcmpStart = 0;
1220632    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
1220633    %let NumNodes=9;
1220634    %do k=1 %to &NumNodes;
1220635    %vardept(fcmpdata=&outdata, id=&k);
1220636    %end;
1220637    %mend optCode;
1220638    %optcode(outData=EMWS8.Ensmbl12_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl12_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL12_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl12_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 106 observations read from the data set EMWS8.ENSMBL12_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 79 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 27 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl12_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL12_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl12_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL12_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl12_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL12_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 27 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 2 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl12_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL12_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 29 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 33 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 33 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 33 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 33 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl12_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL12_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: There were 33 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 62 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl12_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL12_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl12_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL12_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

1220639    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
1220640    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1220641    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
1220642    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1220643    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
1220644    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1220645    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
1220646    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1220647    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1220648    create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
1220648  ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 2 rows and 3 columns.

1220649    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1220650    data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
1220651    set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
1220652    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 2 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 2 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1220653    filename _pref
1220653  ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural41\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural41\EMPUBLISHSCORE.sas";
1220654    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1220655    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Neural41\EMPUBLISHSCORE.sas.
1220656   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1220657   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1220658   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1220659   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1220660   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1220661   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1220662   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1220663   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1220664   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1220665   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1220666   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1220667   +LENGTH _WARN_ $4
1220668   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
1220669   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1220670   +
1220671   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1220672   +
1220673   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1220674   +
1220675   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1220676   +
1220677   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1220678   +
1220679   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1220680   +
1220681   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1220682   +
1220683   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1220684   +
1220685   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1220686   +
1220687   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1220688   +
1220689   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1220690   +
1220691   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1220692   +
1220693   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1220694   +
1220695   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1220696   +
1220697   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1220698   +
1220699   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1220700   +
1220701   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1220702   +
1220703   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1220704   +
1220705   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1220706   +
1220707   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1220708   +
1220709   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1220710   +
1220711   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1220712   +
1220713   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1220714   +
1220715   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1220716   +
1220717   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1220718   +
1220719   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1220720   +
1220721   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1220722   +
1220723   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1220724   +
1220725   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1220726   +
1220727   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1220728   +
1220729   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1220730   +
1220731   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1220732   +
1220733   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1220734   +
1220735   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1220736   +
1220737   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1220738   +
1220739   +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
1220740   +
1220741   +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
1220742   +
1220743   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1220744   +
1220745   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1220746   +
1220747   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1220748   +
1220749   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1220750   +
1220751   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1220752   +
1220753   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1220754   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1220755   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1220756   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1220757   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1220758   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1220759   +end;
MPRINT(EM_DIAGRAM):   end;
1220760   +else do;
MPRINT(EM_DIAGRAM):   else do;
1220761   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1220762   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1220763   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1220764   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1220765   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1220766   +   end;
MPRINT(EM_DIAGRAM):   end;
1220767   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1220768   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1220769   +   end;
MPRINT(EM_DIAGRAM):   end;
1220770   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1220771   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1220772   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1220773   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1220774   +   end;
MPRINT(EM_DIAGRAM):   end;
1220775   +end;
MPRINT(EM_DIAGRAM):   end;
1220776   +
1220777   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1220778   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1220779   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1220780   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1220781   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1220782   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1220783   +end;
MPRINT(EM_DIAGRAM):   end;
1220784   +else do;
MPRINT(EM_DIAGRAM):   else do;
1220785   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1220786   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1220787   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1220788   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1220789   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1220790   +   end;
MPRINT(EM_DIAGRAM):   end;
1220791   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1220792   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1220793   +   end;
MPRINT(EM_DIAGRAM):   end;
1220794   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1220795   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1220796   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1220797   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1220798   +   end;
MPRINT(EM_DIAGRAM):   end;
1220799   +end;
MPRINT(EM_DIAGRAM):   end;
1220800   +
1220801   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1220802   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1220803   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1220804   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1220805   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1220806   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1220807   +end;
MPRINT(EM_DIAGRAM):   end;
1220808   +else do;
MPRINT(EM_DIAGRAM):   else do;
1220809   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1220810   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1220811   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1220812   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1220813   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1220814   +   end;
MPRINT(EM_DIAGRAM):   end;
1220815   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1220816   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1220817   +   end;
MPRINT(EM_DIAGRAM):   end;
1220818   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1220819   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1220820   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1220821   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1220822   +   end;
MPRINT(EM_DIAGRAM):   end;
1220823   +end;
MPRINT(EM_DIAGRAM):   end;
1220824   +
1220825   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1220826   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1220827   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1220828   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1220829   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1220830   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1220831   +end;
MPRINT(EM_DIAGRAM):   end;
1220832   +else do;
MPRINT(EM_DIAGRAM):   else do;
1220833   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1220834   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1220835   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1220836   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1220837   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1220838   +   end;
MPRINT(EM_DIAGRAM):   end;
1220839   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1220840   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1220841   +   end;
MPRINT(EM_DIAGRAM):   end;
1220842   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1220843   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1220844   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1220845   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1220846   +   end;
MPRINT(EM_DIAGRAM):   end;
1220847   +end;
MPRINT(EM_DIAGRAM):   end;
1220848   +
1220849   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1220850   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1220851   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1220852   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1220853   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1220854   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1220855   +end;
MPRINT(EM_DIAGRAM):   end;
1220856   +else do;
MPRINT(EM_DIAGRAM):   else do;
1220857   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1220858   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1220859   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1220860   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1220861   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1220862   +   end;
MPRINT(EM_DIAGRAM):   end;
1220863   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1220864   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1220865   +   end;
MPRINT(EM_DIAGRAM):   end;
1220866   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1220867   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1220868   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1220869   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1220870   +   end;
MPRINT(EM_DIAGRAM):   end;
1220871   +end;
MPRINT(EM_DIAGRAM):   end;
1220872   +
1220873   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1220874   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1220875   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1220876   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1220877   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1220878   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1220879   +end;
MPRINT(EM_DIAGRAM):   end;
1220880   +else do;
MPRINT(EM_DIAGRAM):   else do;
1220881   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1220882   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1220883   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1220884   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1220885   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1220886   +   end;
MPRINT(EM_DIAGRAM):   end;
1220887   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1220888   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1220889   +   end;
MPRINT(EM_DIAGRAM):   end;
1220890   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1220891   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1220892   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1220893   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1220894   +   end;
MPRINT(EM_DIAGRAM):   end;
1220895   +end;
MPRINT(EM_DIAGRAM):   end;
1220896   +
1220897   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1220898   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1220899   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1220900   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1220901   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1220902   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1220903   +end;
MPRINT(EM_DIAGRAM):   end;
1220904   +else do;
MPRINT(EM_DIAGRAM):   else do;
1220905   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1220906   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1220907   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1220908   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1220909   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1220910   +   end;
MPRINT(EM_DIAGRAM):   end;
1220911   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1220912   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1220913   +   end;
MPRINT(EM_DIAGRAM):   end;
1220914   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1220915   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1220916   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1220917   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1220918   +   end;
MPRINT(EM_DIAGRAM):   end;
1220919   +end;
MPRINT(EM_DIAGRAM):   end;
1220920   +
1220921   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1220922   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
1220923   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1220924   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1220925   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1220926   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1220927   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1220928   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1220929   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1220930   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1220931   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1220932   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1220933   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1220934   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1220935   +end;
MPRINT(EM_DIAGRAM):   end;
1220936   +else do;
MPRINT(EM_DIAGRAM):   else do;
1220937   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1220938   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1220939   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1220940   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1220941   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1220942   +   end;
MPRINT(EM_DIAGRAM):   end;
1220943   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1220944   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1220945   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1220946   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1220947   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1220948   +   end;
MPRINT(EM_DIAGRAM):   end;
1220949   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1220950   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1220951   +   end;
MPRINT(EM_DIAGRAM):   end;
1220952   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1220953   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1220954   +   end;
MPRINT(EM_DIAGRAM):   end;
1220955   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1220956   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1220957   +   end;
MPRINT(EM_DIAGRAM):   end;
1220958   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1220959   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1220960   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1220961   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1220962   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1220963   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1220964   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1220965   +   end;
MPRINT(EM_DIAGRAM):   end;
1220966   +end;
MPRINT(EM_DIAGRAM):   end;
1220967   +
1220968   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1220969   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1220970   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
1220971   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1220972   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1220973   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1220974   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1220975   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1220976   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1220977   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1220978   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1220979   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1220980   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1220981   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1220982   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1220983   +end;
MPRINT(EM_DIAGRAM):   end;
1220984   +else do;
MPRINT(EM_DIAGRAM):   else do;
1220985   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1220986   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1220987   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1220988   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1220989   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1220990   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1220991   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1220992   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1220993   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1220994   +         end;
MPRINT(EM_DIAGRAM):   end;
1220995   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1220996   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1220997   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1220998   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1220999   +            end;
MPRINT(EM_DIAGRAM):   end;
1221000   +         end;
MPRINT(EM_DIAGRAM):   end;
1221001   +      end;
MPRINT(EM_DIAGRAM):   end;
1221002   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1221003   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1221004   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1221005   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1221006   +         end;
MPRINT(EM_DIAGRAM):   end;
1221007   +      end;
MPRINT(EM_DIAGRAM):   end;
1221008   +   end;
MPRINT(EM_DIAGRAM):   end;
1221009   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1221010   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1221011   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1221012   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1221013   +      end;
MPRINT(EM_DIAGRAM):   end;
1221014   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1221015   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1221016   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1221017   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1221018   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1221019   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1221020   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1221021   +         end;
MPRINT(EM_DIAGRAM):   end;
1221022   +      end;
MPRINT(EM_DIAGRAM):   end;
1221023   +   end;
MPRINT(EM_DIAGRAM):   end;
1221024   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1221025   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1221026   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1221027   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1221028   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1221029   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1221030   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1221031   +   end;
MPRINT(EM_DIAGRAM):   end;
1221032   +end;
MPRINT(EM_DIAGRAM):   end;
1221033   +
1221034   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1221035   +*** Checking missing input Interval
1221036   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1221037   +
1221038   +IF NMISS(
1221039   +   AcceptedCmpTotal ,
1221040   +   Age ,
1221041   +   Frq ,
1221042   +   Income ,
1221043   +   Kidhome ,
1221044   +   MntFishProducts ,
1221045   +   MntFruits ,
1221046   +   MntGoldProds ,
1221047   +   MntSweetProducts ,
1221048   +   MonthsAsCustomer ,
1221049   +   NumDealsPurchases ,
1221050   +   NumWebVisitsMonth ,
1221051   +   RFMstat ,
1221052   +   RMntFrq ,
1221053   +   Recency ,
1221054   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , 
MntFishProducts , MntFruits , MntGoldProds , MntSweetProducts , MonthsAsCustomer , 
NumDealsPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , Teenhome ) THEN DO;
1221055   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1221056   +
1221057   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1221058   +END;
MPRINT(EM_DIAGRAM):   END;
1221059   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1221060   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1221061   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1221062   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1221063   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1221064   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1221065   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1221066   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1221067   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1221068   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1221069   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1221070   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1221071   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1221072   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1221073   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1221074   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1221075   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1221076   +   S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
1221077   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
1221078   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1221079   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1221080   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1221081   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1221082   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1221083   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1221084   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1221085   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1221086   +END;
MPRINT(EM_DIAGRAM):   END;
1221087   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1221088   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1221089   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1221090   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1221091   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1221092   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1221093   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1221094   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1221095   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1221096   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1221097   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1221098   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1221099   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1221100   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1221101   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1221102   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1221103   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1221104   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1221105   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1221106   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1221107   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1221108   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1221109   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1221110   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1221111   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1221112   +   ELSE S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
1221113   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
1221114   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1221115   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1221116   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1221117   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1221118   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1221119   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1221120   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1221121   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1221122   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1221123   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1221124   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1221125   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1221126   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1221127   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1221128   +END;
MPRINT(EM_DIAGRAM):   END;
1221129   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1221130   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1221131   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1221132   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1221133   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1221134   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1221135   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1221136   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1221137   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1221138   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1221139   +   H11  =     0.00008202203841 * S_AcceptedCmpTotal  +    -0.13126483592154 *
1221140   +        S_Age  +    -0.18503379491116 * S_Frq  +      0.0037482920266 *
1221141   +        S_Income  +    -0.52684337240504 * S_Kidhome
1221142   +          +     0.07835956947085 * S_MntFishProducts
1221143   +          +    -0.04668308882455 * S_MntFruits  +     0.05311471984852 *
1221144   +        S_MntGoldProds  +    -0.39576933150762 * S_MntSweetProducts
1221145   +          +    -0.44463888327841 * S_MonthsAsCustomer
1221146   +          +    -0.20310227710644 * S_NumDealsPurchases
1221147   +          +     0.06594467408568 * S_NumWebVisitsMonth
1221148   +          +      0.1351556470497 * S_RFMstat  +    -0.29446460505048 *
1221149   +        S_RMntFrq  +    -0.68878207173764 * S_Recency
1221150   +          +    -0.29241927123525 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.00008202203841 * S_AcceptedCmpTotal + -0.13126483592154 * S_Age 
+ -0.18503379491116 * S_Frq + 0.0037482920266 * S_Income + -0.52684337240504 * S_Kidhome + 
0.07835956947085 * S_MntFishProducts + -0.04668308882455 * S_MntFruits + 0.05311471984852 * 
S_MntGoldProds + -0.39576933150762 * S_MntSweetProducts + -0.44463888327841 * 
S_MonthsAsCustomer + -0.20310227710644 * S_NumDealsPurchases + 0.06594467408568 * 
S_NumWebVisitsMonth + 0.1351556470497 * S_RFMstat + -0.29446460505048 * S_RMntFrq + 
-0.68878207173764 * S_Recency + -0.29241927123525 * S_Teenhome ;
1221151   +   H12  =     0.38864749644126 * S_AcceptedCmpTotal  +    -0.01077611135972 *
1221152   +        S_Age  +     0.24187074268223 * S_Frq  +     0.64180191864108 *
1221153   +        S_Income  +     0.91025818069308 * S_Kidhome
1221154   +          +     0.26585860774761 * S_MntFishProducts
1221155   +          +     -0.3087386188037 * S_MntFruits  +     0.14643568534568 *
1221156   +        S_MntGoldProds  +     0.23763200275034 * S_MntSweetProducts
1221157   +          +    -0.12421403342454 * S_MonthsAsCustomer
1221158   +          +     0.66931066909347 * S_NumDealsPurchases
1221159   +          +     0.35050056776957 * S_NumWebVisitsMonth
1221160   +          +     0.16127659142199 * S_RFMstat  +     0.04112742589329 *
1221161   +        S_RMntFrq  +    -0.83075146355987 * S_Recency
1221162   +          +    -0.37723917156575 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = 0.38864749644126 * S_AcceptedCmpTotal + -0.01077611135972 * S_Age 
+ 0.24187074268223 * S_Frq + 0.64180191864108 * S_Income + 0.91025818069308 * S_Kidhome + 
0.26585860774761 * S_MntFishProducts + -0.3087386188037 * S_MntFruits + 0.14643568534568 * 
S_MntGoldProds + 0.23763200275034 * S_MntSweetProducts + -0.12421403342454 * 
S_MonthsAsCustomer + 0.66931066909347 * S_NumDealsPurchases + 0.35050056776957 * 
S_NumWebVisitsMonth + 0.16127659142199 * S_RFMstat + 0.04112742589329 * S_RMntFrq + 
-0.83075146355987 * S_Recency + -0.37723917156575 * S_Teenhome ;
1221163   +   H13  =     0.02339384767281 * S_AcceptedCmpTotal  +    -0.17700567590774 *
1221164   +        S_Age  +    -0.38060509731554 * S_Frq  +    -0.86026143079344 *
1221165   +        S_Income  +     0.63027536562783 * S_Kidhome
1221166   +          +     0.15303249164566 * S_MntFishProducts
1221167   +          +    -0.04780128957622 * S_MntFruits  +    -0.02064261038049 *
1221168   +        S_MntGoldProds  +     0.26238383938455 * S_MntSweetProducts
1221169   +          +    -0.21006970062531 * S_MonthsAsCustomer
1221170   +          +      0.2955774677605 * S_NumDealsPurchases
1221171   +          +    -0.15769947513958 * S_NumWebVisitsMonth
1221172   +          +    -0.02874776268384 * S_RFMstat  +     -0.3955429869434 *
1221173   +        S_RMntFrq  +      0.3744122250079 * S_Recency
1221174   +          +     0.58295521976226 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = 0.02339384767281 * S_AcceptedCmpTotal + -0.17700567590774 * S_Age 
+ -0.38060509731554 * S_Frq + -0.86026143079344 * S_Income + 0.63027536562783 * S_Kidhome + 
0.15303249164566 * S_MntFishProducts + -0.04780128957622 * S_MntFruits + -0.02064261038049 * 
S_MntGoldProds + 0.26238383938455 * S_MntSweetProducts + -0.21006970062531 * 
S_MonthsAsCustomer + 0.2955774677605 * S_NumDealsPurchases + -0.15769947513958 * 
S_NumWebVisitsMonth + -0.02874776268384 * S_RFMstat + -0.3955429869434 * S_RMntFrq + 
0.3744122250079 * S_Recency + 0.58295521976226 * S_Teenhome ;
1221175   +   H14  =    -0.22800152627721 * S_AcceptedCmpTotal  +     0.27991667815594 *
1221176   +        S_Age  +     0.89001922321833 * S_Frq  +     0.17467731177386 *
1221177   +        S_Income  +    -0.00985947331416 * S_Kidhome
1221178   +          +    -0.27114701164817 * S_MntFishProducts
1221179   +          +     0.32554392037328 * S_MntFruits  +     0.06705670808471 *
1221180   +        S_MntGoldProds  +     -0.3590087223323 * S_MntSweetProducts
1221181   +          +    -0.02702818828921 * S_MonthsAsCustomer
1221182   +          +    -0.63381188911946 * S_NumDealsPurchases
1221183   +          +    -0.86143000704363 * S_NumWebVisitsMonth
1221184   +          +    -0.16788755655818 * S_RFMstat  +    -0.09712800982817 *
1221185   +        S_RMntFrq  +     0.61892338869919 * S_Recency
1221186   +          +    -0.21544816860839 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = -0.22800152627721 * S_AcceptedCmpTotal + 0.27991667815594 * S_Age 
+ 0.89001922321833 * S_Frq + 0.17467731177386 * S_Income + -0.00985947331416 * S_Kidhome + 
-0.27114701164817 * S_MntFishProducts + 0.32554392037328 * S_MntFruits + 0.06705670808471 * 
S_MntGoldProds + -0.3590087223323 * S_MntSweetProducts + -0.02702818828921 * 
S_MonthsAsCustomer + -0.63381188911946 * S_NumDealsPurchases + -0.86143000704363 * 
S_NumWebVisitsMonth + -0.16788755655818 * S_RFMstat + -0.09712800982817 * S_RMntFrq + 
0.61892338869919 * S_Recency + -0.21544816860839 * S_Teenhome ;
1221187   +   H15  =      0.0846389232492 * S_AcceptedCmpTotal  +    -0.03933692648164 *
1221188   +        S_Age  +     0.26004669807852 * S_Frq  +     0.30306661543325 *
1221189   +        S_Income  +    -0.24206929946772 * S_Kidhome
1221190   +          +    -0.19039689229491 * S_MntFishProducts
1221191   +          +    -0.22957509816007 * S_MntFruits  +    -0.35006912387254 *
1221192   +        S_MntGoldProds  +    -0.02737135204648 * S_MntSweetProducts
1221193   +          +     0.03815221487927 * S_MonthsAsCustomer
1221194   +          +    -0.43579024169696 * S_NumDealsPurchases
1221195   +          +    -0.27796253880432 * S_NumWebVisitsMonth
1221196   +          +     0.15010895791429 * S_RFMstat  +     0.24377797912725 *
1221197   +        S_RMntFrq  +     0.50547916383425 * S_Recency
1221198   +          +    -0.22622962943787 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H15 = 0.0846389232492 * S_AcceptedCmpTotal + -0.03933692648164 * S_Age + 
0.26004669807852 * S_Frq + 0.30306661543325 * S_Income + -0.24206929946772 * S_Kidhome + 
-0.19039689229491 * S_MntFishProducts + -0.22957509816007 * S_MntFruits + -0.35006912387254 * 
S_MntGoldProds + -0.02737135204648 * S_MntSweetProducts + 0.03815221487927 * 
S_MonthsAsCustomer + -0.43579024169696 * S_NumDealsPurchases + -0.27796253880432 * 
S_NumWebVisitsMonth + 0.15010895791429 * S_RFMstat + 0.24377797912725 * S_RMntFrq + 
0.50547916383425 * S_Recency + -0.22622962943787 * S_Teenhome ;
1221199   +   H16  =     0.03788304209102 * S_AcceptedCmpTotal  +    -0.27022676521755 *
1221200   +        S_Age  +    -0.17480141247917 * S_Frq  +     0.53345624791204 *
1221201   +        S_Income  +    -0.25736924536467 * S_Kidhome
1221202   +          +    -0.04400855145817 * S_MntFishProducts
1221203   +          +    -0.06651358259718 * S_MntFruits  +     -0.0117104183032 *
1221204   +        S_MntGoldProds  +    -0.02790266219853 * S_MntSweetProducts
1221205   +          +     0.00265986106691 * S_MonthsAsCustomer
1221206   +          +     0.27331919080312 * S_NumDealsPurchases
1221207   +          +     0.22836119952787 * S_NumWebVisitsMonth
1221208   +          +     0.09245783028838 * S_RFMstat  +     0.10223459152488 *
1221209   +        S_RMntFrq  +    -0.90398250269857 * S_Recency
1221210   +          +     -0.2621421532112 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H16 = 0.03788304209102 * S_AcceptedCmpTotal + -0.27022676521755 * S_Age 
+ -0.17480141247917 * S_Frq + 0.53345624791204 * S_Income + -0.25736924536467 * S_Kidhome + 
-0.04400855145817 * S_MntFishProducts + -0.06651358259718 * S_MntFruits + -0.0117104183032 * 
S_MntGoldProds + -0.02790266219853 * S_MntSweetProducts + 0.00265986106691 * 
S_MonthsAsCustomer + 0.27331919080312 * S_NumDealsPurchases + 0.22836119952787 * 
S_NumWebVisitsMonth + 0.09245783028838 * S_RFMstat + 0.10223459152488 * S_RMntFrq + 
-0.90398250269857 * S_Recency + -0.2621421532112 * S_Teenhome ;
1221211   +   H11  = H11  +     0.24155985997122 * AcceptedCmp10
1221212   +          +     0.02727843300562 * AcceptedCmp20  +     0.05990453920581 *
1221213   +        AcceptedCmp30  +    -0.43469138041411 * AcceptedCmp40
1221214   +          +     0.00076050589964 * AcceptedCmp50  +     0.43307119233671 *
1221215   +        Complain0  +     0.23242177664865 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.24155985997122 * AcceptedCmp10 + 0.02727843300562 * 
AcceptedCmp20 + 0.05990453920581 * AcceptedCmp30 + -0.43469138041411 * AcceptedCmp40 + 
0.00076050589964 * AcceptedCmp50 + 0.43307119233671 * Complain0 + 0.23242177664865 * 
HigherEducationBinary0 ;
1221216   +   H12  = H12  +     0.04034689771488 * AcceptedCmp10
1221217   +          +    -0.01358747117911 * AcceptedCmp20  +    -0.29883922116453 *
1221218   +        AcceptedCmp30  +     0.58794258522438 * AcceptedCmp40
1221219   +          +    -0.40659406037079 * AcceptedCmp50  +     0.59068991602469 *
1221220   +        Complain0  +     -0.3122461557933 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.04034689771488 * AcceptedCmp10 + -0.01358747117911 * 
AcceptedCmp20 + -0.29883922116453 * AcceptedCmp30 + 0.58794258522438 * AcceptedCmp40 + 
-0.40659406037079 * AcceptedCmp50 + 0.59068991602469 * Complain0 + -0.3122461557933 * 
HigherEducationBinary0 ;
1221221   +   H13  = H13  +     0.49941486221932 * AcceptedCmp10
1221222   +          +     0.42891153022885 * AcceptedCmp20  +     0.28744085742243 *
1221223   +        AcceptedCmp30  +     0.54657253664873 * AcceptedCmp40
1221224   +          +     0.10655487579255 * AcceptedCmp50  +     0.11223153893952 *
1221225   +        Complain0  +    -0.44704943665138 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.49941486221932 * AcceptedCmp10 + 0.42891153022885 * 
AcceptedCmp20 + 0.28744085742243 * AcceptedCmp30 + 0.54657253664873 * AcceptedCmp40 + 
0.10655487579255 * AcceptedCmp50 + 0.11223153893952 * Complain0 + -0.44704943665138 * 
HigherEducationBinary0 ;
1221226   +   H14  = H14  +     0.70510583713907 * AcceptedCmp10
1221227   +          +     0.04052111261969 * AcceptedCmp20  +     0.76301816100625 *
1221228   +        AcceptedCmp30  +     0.09753552533639 * AcceptedCmp40
1221229   +          +     0.40999088454383 * AcceptedCmp50  +     0.19278448059725 *
1221230   +        Complain0  +     0.09127136236268 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.70510583713907 * AcceptedCmp10 + 0.04052111261969 * 
AcceptedCmp20 + 0.76301816100625 * AcceptedCmp30 + 0.09753552533639 * AcceptedCmp40 + 
0.40999088454383 * AcceptedCmp50 + 0.19278448059725 * Complain0 + 0.09127136236268 * 
HigherEducationBinary0 ;
1221231   +   H15  = H15  +     0.30535300313392 * AcceptedCmp10
1221232   +          +    -0.01605332227631 * AcceptedCmp20  +     0.09278623651632 *
1221233   +        AcceptedCmp30  +     0.03468239765482 * AcceptedCmp40
1221234   +          +     0.19720723485806 * AcceptedCmp50  +    -0.32364247007443 *
1221235   +        Complain0  +    -0.20695533150084 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.30535300313392 * AcceptedCmp10 + -0.01605332227631 * 
AcceptedCmp20 + 0.09278623651632 * AcceptedCmp30 + 0.03468239765482 * AcceptedCmp40 + 
0.19720723485806 * AcceptedCmp50 + -0.32364247007443 * Complain0 + -0.20695533150084 * 
HigherEducationBinary0 ;
1221236   +   H16  = H16  +    -0.19354253973215 * AcceptedCmp10
1221237   +          +     0.01566685138596 * AcceptedCmp20  +    -0.28250218144785 *
1221238   +        AcceptedCmp30  +    -0.13118265240955 * AcceptedCmp40
1221239   +          +    -0.03808858956936 * AcceptedCmp50  +    -0.19850701105147 *
1221240   +        Complain0  +     0.14297616111345 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H16 = H16 + -0.19354253973215 * AcceptedCmp10 + 0.01566685138596 * 
AcceptedCmp20 + -0.28250218144785 * AcceptedCmp30 + -0.13118265240955 * AcceptedCmp40 + 
-0.03808858956936 * AcceptedCmp50 + -0.19850701105147 * Complain0 + 0.14297616111345 * 
HigherEducationBinary0 ;
1221241   +   H11  = H11  +     0.05082493200436 * Education2n_Cycle
1221242   +          +    -0.08192239267323 * EducationBasic  +    -0.01445849926378 *
1221243   +        EducationGraduation  +     0.01459143816519 * EducationMaster
1221244   +          +     0.12502276672336 * Marital_StatusDivorced
1221245   +          +    -0.02606508453741 * Marital_StatusMarried
1221246   +          +      0.0418850245266 * Marital_StatusSingle
1221247   +          +     0.02050996572132 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.05082493200436 * Education2n_Cycle + -0.08192239267323 * 
EducationBasic + -0.01445849926378 * EducationGraduation + 0.01459143816519 * EducationMaster 
+ 0.12502276672336 * Marital_StatusDivorced + -0.02606508453741 * Marital_StatusMarried + 
0.0418850245266 * Marital_StatusSingle + 0.02050996572132 * Marital_StatusTogether ;
1221248   +   H12  = H12  +     -0.1900759238575 * Education2n_Cycle
1221249   +          +     0.13535241443003 * EducationBasic  +    -0.00199771592906 *
1221250   +        EducationGraduation  +     0.00476193515914 * EducationMaster
1221251   +          +      0.1943860669795 * Marital_StatusDivorced
1221252   +          +     -0.1529596261268 * Marital_StatusMarried
1221253   +          +     0.24187461301348 * Marital_StatusSingle
1221254   +          +     0.09157538589749 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.1900759238575 * Education2n_Cycle + 0.13535241443003 * 
EducationBasic + -0.00199771592906 * EducationGraduation + 0.00476193515914 * EducationMaster 
+ 0.1943860669795 * Marital_StatusDivorced + -0.1529596261268 * Marital_StatusMarried + 
0.24187461301348 * Marital_StatusSingle + 0.09157538589749 * Marital_StatusTogether ;
1221255   +   H13  = H13  +     0.02140936656506 * Education2n_Cycle
1221256   +          +     0.05845427475503 * EducationBasic  +    -0.44298208278895 *
1221257   +        EducationGraduation  +     0.17149477011717 * EducationMaster
1221258   +          +    -0.19677652422622 * Marital_StatusDivorced
1221259   +          +     0.75897106429478 * Marital_StatusMarried
1221260   +          +    -0.66692260284833 * Marital_StatusSingle
1221261   +          +     0.58287349221333 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.02140936656506 * Education2n_Cycle + 0.05845427475503 * 
EducationBasic + -0.44298208278895 * EducationGraduation + 0.17149477011717 * EducationMaster 
+ -0.19677652422622 * Marital_StatusDivorced + 0.75897106429478 * Marital_StatusMarried + 
-0.66692260284833 * Marital_StatusSingle + 0.58287349221333 * Marital_StatusTogether ;
1221262   +   H14  = H14  +     0.18801855635785 * Education2n_Cycle
1221263   +          +    -0.06231007239836 * EducationBasic  +    -0.26915940640311 *
1221264   +        EducationGraduation  +    -0.30689797876717 * EducationMaster
1221265   +          +    -0.18964222971122 * Marital_StatusDivorced
1221266   +          +    -0.15222045956879 * Marital_StatusMarried
1221267   +          +     0.15455795695595 * Marital_StatusSingle
1221268   +          +    -0.04060840399479 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.18801855635785 * Education2n_Cycle + -0.06231007239836 * 
EducationBasic + -0.26915940640311 * EducationGraduation + -0.30689797876717 * EducationMaster 
+ -0.18964222971122 * Marital_StatusDivorced + -0.15222045956879 * Marital_StatusMarried + 
0.15455795695595 * Marital_StatusSingle + -0.04060840399479 * Marital_StatusTogether ;
1221269   +   H15  = H15  +    -0.12131367369042 * Education2n_Cycle
1221270   +          +     0.20547688844423 * EducationBasic  +     0.04965529549437 *
1221271   +        EducationGraduation  +    -0.21811990669176 * EducationMaster
1221272   +          +    -0.10122776921995 * Marital_StatusDivorced
1221273   +          +     0.14126755564161 * Marital_StatusMarried
1221274   +          +    -0.18463644418978 * Marital_StatusSingle
1221275   +          +     0.23071597384519 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + -0.12131367369042 * Education2n_Cycle + 0.20547688844423 * 
EducationBasic + 0.04965529549437 * EducationGraduation + -0.21811990669176 * EducationMaster 
+ -0.10122776921995 * Marital_StatusDivorced + 0.14126755564161 * Marital_StatusMarried + 
-0.18463644418978 * Marital_StatusSingle + 0.23071597384519 * Marital_StatusTogether ;
1221276   +   H16  = H16  +     0.02961881390411 * Education2n_Cycle
1221277   +          +    -0.46228434914367 * EducationBasic  +    -0.08513280071643 *
1221278   +        EducationGraduation  +    -0.20159542694386 * EducationMaster
1221279   +          +     0.05009431660662 * Marital_StatusDivorced
1221280   +          +    -0.38407798045329 * Marital_StatusMarried
1221281   +          +      0.3035257398654 * Marital_StatusSingle
1221282   +          +    -0.27725923319119 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.02961881390411 * Education2n_Cycle + -0.46228434914367 * 
EducationBasic + -0.08513280071643 * EducationGraduation + -0.20159542694386 * EducationMaster 
+ 0.05009431660662 * Marital_StatusDivorced + -0.38407798045329 * Marital_StatusMarried + 
0.3035257398654 * Marital_StatusSingle + -0.27725923319119 * Marital_StatusTogether ;
1221283   +   H11  =      1.3960587011002 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 1.3960587011002 + H11 ;
1221284   +   H12  =     0.18947019063375 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.18947019063375 + H12 ;
1221285   +   H13  =     0.55907472867898 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = 0.55907472867898 + H13 ;
1221286   +   H14  =     0.28336290184268 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 0.28336290184268 + H14 ;
1221287   +   H15  =     1.08919536550159 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = 1.08919536550159 + H15 ;
1221288   +   H16  =    -0.22538308534609 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = -0.22538308534609 + H16 ;
1221289   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1221290   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1221291   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1221292   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1221293   +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
1221294   +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
1221295   +END;
MPRINT(EM_DIAGRAM):   END;
1221296   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1221297   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1221298   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1221299   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1221300   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1221301   +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
1221302   +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
1221303   +END;
MPRINT(EM_DIAGRAM):   END;
1221304   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1221305   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1221306   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1221307   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1221308   +   P_DepVar1  =      1.1921632715983 * H11  +     2.38386446186622 * H12
1221309   +          +    -2.42409896638067 * H13  +    -2.19084949788904 * H14
1221310   +          +      -0.380575449439 * H15  +     1.17350595805971 * H16 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 1.1921632715983 * H11 + 2.38386446186622 * H12 + 
-2.42409896638067 * H13 + -2.19084949788904 * H14 + -0.380575449439 * H15 + 1.17350595805971 * 
H16 ;
1221311   +   P_DepVar1  =    -1.70154799161574 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.70154799161574 + P_DepVar1 ;
1221312   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1221313   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1221314   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1221315   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1221316   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1221317   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1221318   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1221319   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1221320   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1221321   +END;
MPRINT(EM_DIAGRAM):   END;
1221322   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1221323   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1221324   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1221325   +END;
MPRINT(EM_DIAGRAM):   END;
1221326   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1221327   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1221328   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1221329   +END;
MPRINT(EM_DIAGRAM):   END;
1221330   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1221331   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1221332   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1221333   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1221334   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1221335   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1221336   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1221337   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1221338   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1221339   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1221340   +END;
MPRINT(EM_DIAGRAM):   END;
1221341   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1221342   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1221343   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1221344   +drop
1221345   +H11
1221346   +H12
1221347   +H13
1221348   +H14
1221349   +H15
1221350   +H16
1221351   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 ;
1221352   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1221353    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1221354    quit;
1221355    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1221356    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1221357    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1221358    retain ID 2 Node "Neural41";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Neural41";
1221359    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1221360    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2183 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2183 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1221361    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1221362    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1221363    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2183 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2183 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1221364    proc sort data=EMWS8.Neural41_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Neural41_variableset out=_temp2(keep=NAME CREATOR);
1221365    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1221366    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.NEURAL41_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1221367    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1221368    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1221369    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1221370    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1221371    proc contents data=EMWS8.Neural41_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Neural41_train out=_meta(keep=NAME) noprint;
1221372    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
      

1221373    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1221374    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1221375    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 53 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1221376    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1221377    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1221378    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1221379    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 53 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1221380    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1221381    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1221381  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 1087 rows and 5 columns.

1221382    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1221383    proc append base=EMWS8.Ensmbl12_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl12_FCMP data=_tempx;
1221384    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL12_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 1087 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL12_FCMP has 1087 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1221385    filename _pref
1221385  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
1221386    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1221387    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
1221388   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1221389   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1221390   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1221391   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1221392   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1221393   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1221394    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1221395    quit;
1221396    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1221397    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1221398    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1221399    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
1221400    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1221401    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1221402    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1221403    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1221404    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1221405    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
1221406    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1221407    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1221408    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1221409    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1221410    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1221411    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

1221412    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
1221413    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.15 seconds
      cpu time            0.01 seconds
      

1221414    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1221415    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1221416    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1221417    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1221418    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1221419    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1221420    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1221421    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1221422    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1221422  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

1221423    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1221424    proc append base=EMWS8.Ensmbl12_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl12_FCMP data=_tempx;
1221425    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL12_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL12_FCMP has 1091 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1221426    filename _pref
1221426  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
1221427    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1221428    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
1221429   +
1221430   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1221431   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1221431  !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1221432   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1221433   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1221434   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1221435   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1221436   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1221437    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1221438    quit;
1221439    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1221440    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1221441    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1221442    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
1221443    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1221444    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1221445    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1221446    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1221447    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1221448    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
1221449    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1221450    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

1221451    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1221452    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1221453    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1221454    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1221455    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
1221456    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1221457    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1221458    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1221459    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1221460    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1221461    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1221462    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1221463    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1221464    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1221465    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1221465  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

1221466    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1221467    proc append base=EMWS8.Ensmbl12_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl12_FCMP data=_tempx;
1221468    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL12_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL12_FCMP has 1130 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1221469    filename _pref
1221469  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
1221470    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1221471    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
1221472   +
1221473   +
1221474   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
1221475   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
1221476   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
1221477   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
1221478   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
1221479   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1221480   +
1221481   +
1221482   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
1221483   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
1221484   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
1221485   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
1221486   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
1221487   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1221488   +
1221489   +
1221490   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
1221491   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
1221492   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
1221493   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
1221494   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
1221495   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1221496   +
1221497   +
1221498   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
1221499   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
1221500   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
1221501   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
1221502   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
1221503   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1221504   +
1221505   +
1221506   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
1221507   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
1221508   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
1221509   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
1221510   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
1221511   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1221512   +
1221513   +
1221514   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
1221515   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
1221516   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
1221517   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
1221518   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
1221519   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1221520   +
1221521   +
1221522   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
1221523   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
1221524   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
1221525   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
1221526   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
1221527   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1221528   +
1221529   +
1221530   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
1221531   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
1221532   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
1221533   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
1221534   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
1221535   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1221536   +if
1221537   +_FILTERNORM1 not in ( '.')
1221538   + and
1221539   +_FILTERNORM2 not in ( '.')
1221540   + and
1221541   +_FILTERNORM3 not in ( '.')
1221542   + and
1221543   +_FILTERNORM4 not in ( '.')
1221544   + and
1221545   +_FILTERNORM5 not in ( '.')
1221546   + and
1221547   +_FILTERNORM6 not in ( '.')
1221548   + and
1221549   +_FILTERNORM7 not in ( ' ')
1221550   + and
1221551   +_FILTERNORM8 not in ( ' ')
1221552   +and
1221553   +( Dt_Customer ne .)
1221554   +and ( Income ne . and (Income<=107000))
1221555   +and ( Kidhome ne .)
1221556   +and ( MntFishProducts ne .)
1221557   +and ( MntFruits ne .)
1221558   +and ( MntGoldProds ne .)
1221559   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
1221560   +and ( MntSweetProducts ne .)
1221561   +and ( MntWines ne .)
1221562   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
1221563   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
1221564   +and ( NumStorePurchases ne .)
1221565   +and ( NumWebPurchases ne .)
1221566   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
1221567   +and ( Recency ne .)
1221568   +and ( Teenhome ne .)
1221569   +and ( Year_Birth ne .)
1221570   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
1221571   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
1221572   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
1221573   +end;
MPRINT(EM_DIAGRAM):   end;
1221574   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
1221575   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1221576    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1221577    quit;
1221578    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1221579    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1221580    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1221581    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
1221582    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1221583    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1221584    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1221585    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1221586    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1221587    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
1221588    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1221589    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1221590    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1221591    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1221592    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1221593    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1221594    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
1221595    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      

1221596    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1221597    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1221598    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1221599    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1221600    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1221601    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1221602    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1221603    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1221604    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1221604  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

1221605    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1221606    proc append base=EMWS8.Ensmbl12_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl12_FCMP data=_tempx;
1221607    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL12_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL12_FCMP has 1196 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1221608    %macro varDept(fcmpdata=,id=);
1221609    %global nobs&id scoreFlag&id;
1221610    %let scoreFlag&id = 0;
1221611    %if &id=1 or ^&fcmpStart %then %do;
1221612    proc sort data=&fcmpdata out=_temp&id nodupkey;
1221613    by NAME;
1221614    where id=&id and LHS in( %let j=1;
1221615    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
1221616    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
1221617    "&var" %let j = %eval(&j+1);
1221618    %end;
1221619    );
1221620    run;
1221621    %let dsid = %sysfunc(open(_temp&id));
1221622    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1221623    %let dsid = %sysfunc(close(&dsid));
1221624    %if &&nobs&id %then %do;
1221625    %let scoreFlag&id = 1;
1221626    %let fcmpStart = 1;
1221627    %end;
1221628    %else %let fcmpStart = 0;
1221629    %end;
1221630    %else %do;
1221631    proc sort data=&fcmpdata out=_tempid;
1221632    where id=&id;
1221633    by LHS;
1221634    run;
1221635    %let dsid = %sysfunc(open(_tempid));
1221636    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1221637    %let dsid = %sysfunc(close(&dsid));
1221638    %if ^&&nobs&id %then %do;
1221639    proc datasets lib=work nolist;
1221640    delete _tempid;
1221641    run;
1221642    quit;
1221643    %end;
1221644    %else %do;
1221645    data _tempAll;
1221646    set %let j=%eval(&id-1);
1221647    %do x=1 %to &j;
1221648    %if &&nobs&x %then %do;
1221649    _temp&x %end;
1221650    %end;
1221651    ;
1221652    run;
1221653    proc sql;
1221654    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
1221654  ! work._tempid p2 where p.name=p2.lhs;
1221655    quit;
1221656    data _temp&id;
1221657    set _temp&id;
1221658    where LHS ne '' and NAME ne '' and Node ne '';
1221659    run;
1221660    proc datasets lib=work nolist;
1221661    delete _tempAll;
1221662    run;
1221663    %let dsid = %sysfunc(open(_temp&id));
1221664    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1221665    %let dsid = %sysfunc(close(&dsid));
1221666    %if ^&&nobs&id %then %do;
1221667    proc datasets lib=work nolist;
1221668    delete _temp&id;
1221669    run;
1221670    quit;
1221671    %end;
1221672    %else %do;
1221673    %let scoreFlag&id = 1;
1221674    data _temp&id;
1221675    set _temp&id;
1221676    where LHS ne NAME and node ne '';
1221677    run;
1221678    %let dsid = %sysfunc(open(_temp&id));
1221679    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1221680    %let dsid = %sysfunc(close(&dsid));
1221681    %if ^&&nobs&id %then %do;
1221682    proc datasets lib=work nolist;
1221683    delete _temp&id;
1221684    run;
1221685    quit;
1221686    %end;
1221687    %else %do;
1221688    proc sort data=_temp&id nodupkey;
1221689    by LHS NAME;
1221690    run;
1221691    %end;
1221692    %end;
1221693    %end;
1221694    %end;
1221695    %mend varDept;
1221696    %macro optCode(outdata=fcmpdata);
1221697    %global fcmpStart;
1221698    %let fcmpStart = 0;
1221699    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
1221700    %let NumNodes=9;
1221701    %do k=1 %to &NumNodes;
1221702    %vardept(fcmpdata=&outdata, id=&k);
1221703    %end;
1221704    %mend optCode;
1221705    %optcode(outData=EMWS8.Ensmbl12_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl12_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL12_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl12_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 106 observations read from the data set EMWS8.ENSMBL12_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 79 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 27 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl12_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL12_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl12_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL12_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl12_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL12_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 27 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 2 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl12_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL12_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 29 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 33 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 33 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 33 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 33 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl12_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL12_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: There were 33 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 62 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl12_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL12_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl12_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL12_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

1221706    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
1221707    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1221708    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
1221709    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1221710    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
1221711    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1221712    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
1221713    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1221714    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1221715    create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
1221715  ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 2 rows and 3 columns.

1221716    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1221717    data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
1221718    set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
1221719    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 2 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 2 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1221720    filename _pref
1221720  ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural36\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural36\EMPUBLISHSCORE.sas";
1221721    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1221722    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Neural36\EMPUBLISHSCORE.sas.
1221723   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1221724   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1221725   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1221726   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1221727   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1221728   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1221729   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1221730   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1221731   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1221732   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1221733   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1221734   +LENGTH _WARN_ $4
1221735   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
1221736   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1221737   +
1221738   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1221739   +
1221740   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1221741   +
1221742   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1221743   +
1221744   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1221745   +
1221746   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1221747   +
1221748   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1221749   +
1221750   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1221751   +
1221752   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1221753   +
1221754   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1221755   +
1221756   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1221757   +
1221758   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1221759   +
1221760   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1221761   +
1221762   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1221763   +
1221764   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1221765   +
1221766   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1221767   +
1221768   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1221769   +
1221770   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1221771   +
1221772   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1221773   +
1221774   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1221775   +
1221776   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1221777   +
1221778   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1221779   +
1221780   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1221781   +
1221782   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1221783   +
1221784   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1221785   +
1221786   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1221787   +
1221788   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1221789   +
1221790   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1221791   +
1221792   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1221793   +
1221794   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1221795   +
1221796   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1221797   +
1221798   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1221799   +
1221800   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1221801   +
1221802   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1221803   +
1221804   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1221805   +
1221806   +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
1221807   +
1221808   +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
1221809   +
1221810   +      label H17 = 'Hidden: H1=7' ;
MPRINT(EM_DIAGRAM):   label H17 = 'Hidden: H1=7' ;
1221811   +
1221812   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1221813   +
1221814   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1221815   +
1221816   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1221817   +
1221818   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1221819   +
1221820   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1221821   +
1221822   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1221823   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1221824   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1221825   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1221826   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1221827   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1221828   +end;
MPRINT(EM_DIAGRAM):   end;
1221829   +else do;
MPRINT(EM_DIAGRAM):   else do;
1221830   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1221831   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1221832   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1221833   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1221834   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1221835   +   end;
MPRINT(EM_DIAGRAM):   end;
1221836   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1221837   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1221838   +   end;
MPRINT(EM_DIAGRAM):   end;
1221839   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1221840   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1221841   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1221842   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1221843   +   end;
MPRINT(EM_DIAGRAM):   end;
1221844   +end;
MPRINT(EM_DIAGRAM):   end;
1221845   +
1221846   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1221847   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1221848   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1221849   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1221850   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1221851   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1221852   +end;
MPRINT(EM_DIAGRAM):   end;
1221853   +else do;
MPRINT(EM_DIAGRAM):   else do;
1221854   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1221855   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1221856   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1221857   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1221858   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1221859   +   end;
MPRINT(EM_DIAGRAM):   end;
1221860   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1221861   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1221862   +   end;
MPRINT(EM_DIAGRAM):   end;
1221863   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1221864   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1221865   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1221866   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1221867   +   end;
MPRINT(EM_DIAGRAM):   end;
1221868   +end;
MPRINT(EM_DIAGRAM):   end;
1221869   +
1221870   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1221871   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1221872   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1221873   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1221874   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1221875   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1221876   +end;
MPRINT(EM_DIAGRAM):   end;
1221877   +else do;
MPRINT(EM_DIAGRAM):   else do;
1221878   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1221879   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1221880   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1221881   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1221882   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1221883   +   end;
MPRINT(EM_DIAGRAM):   end;
1221884   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1221885   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1221886   +   end;
MPRINT(EM_DIAGRAM):   end;
1221887   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1221888   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1221889   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1221890   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1221891   +   end;
MPRINT(EM_DIAGRAM):   end;
1221892   +end;
MPRINT(EM_DIAGRAM):   end;
1221893   +
1221894   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1221895   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1221896   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1221897   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1221898   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1221899   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1221900   +end;
MPRINT(EM_DIAGRAM):   end;
1221901   +else do;
MPRINT(EM_DIAGRAM):   else do;
1221902   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1221903   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1221904   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1221905   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1221906   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1221907   +   end;
MPRINT(EM_DIAGRAM):   end;
1221908   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1221909   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1221910   +   end;
MPRINT(EM_DIAGRAM):   end;
1221911   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1221912   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1221913   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1221914   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1221915   +   end;
MPRINT(EM_DIAGRAM):   end;
1221916   +end;
MPRINT(EM_DIAGRAM):   end;
1221917   +
1221918   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1221919   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1221920   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1221921   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1221922   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1221923   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1221924   +end;
MPRINT(EM_DIAGRAM):   end;
1221925   +else do;
MPRINT(EM_DIAGRAM):   else do;
1221926   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1221927   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1221928   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1221929   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1221930   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1221931   +   end;
MPRINT(EM_DIAGRAM):   end;
1221932   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1221933   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1221934   +   end;
MPRINT(EM_DIAGRAM):   end;
1221935   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1221936   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1221937   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1221938   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1221939   +   end;
MPRINT(EM_DIAGRAM):   end;
1221940   +end;
MPRINT(EM_DIAGRAM):   end;
1221941   +
1221942   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1221943   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1221944   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1221945   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1221946   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1221947   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1221948   +end;
MPRINT(EM_DIAGRAM):   end;
1221949   +else do;
MPRINT(EM_DIAGRAM):   else do;
1221950   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1221951   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1221952   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1221953   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1221954   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1221955   +   end;
MPRINT(EM_DIAGRAM):   end;
1221956   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1221957   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1221958   +   end;
MPRINT(EM_DIAGRAM):   end;
1221959   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1221960   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1221961   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1221962   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1221963   +   end;
MPRINT(EM_DIAGRAM):   end;
1221964   +end;
MPRINT(EM_DIAGRAM):   end;
1221965   +
1221966   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1221967   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1221968   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1221969   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1221970   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1221971   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1221972   +end;
MPRINT(EM_DIAGRAM):   end;
1221973   +else do;
MPRINT(EM_DIAGRAM):   else do;
1221974   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1221975   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1221976   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1221977   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1221978   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1221979   +   end;
MPRINT(EM_DIAGRAM):   end;
1221980   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1221981   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1221982   +   end;
MPRINT(EM_DIAGRAM):   end;
1221983   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1221984   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1221985   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1221986   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1221987   +   end;
MPRINT(EM_DIAGRAM):   end;
1221988   +end;
MPRINT(EM_DIAGRAM):   end;
1221989   +
1221990   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1221991   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
1221992   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1221993   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1221994   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1221995   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1221996   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1221997   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1221998   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1221999   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1222000   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1222001   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1222002   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1222003   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1222004   +end;
MPRINT(EM_DIAGRAM):   end;
1222005   +else do;
MPRINT(EM_DIAGRAM):   else do;
1222006   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1222007   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1222008   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1222009   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1222010   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1222011   +   end;
MPRINT(EM_DIAGRAM):   end;
1222012   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1222013   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1222014   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1222015   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1222016   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1222017   +   end;
MPRINT(EM_DIAGRAM):   end;
1222018   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1222019   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1222020   +   end;
MPRINT(EM_DIAGRAM):   end;
1222021   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1222022   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1222023   +   end;
MPRINT(EM_DIAGRAM):   end;
1222024   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1222025   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1222026   +   end;
MPRINT(EM_DIAGRAM):   end;
1222027   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1222028   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1222029   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1222030   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1222031   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1222032   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1222033   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1222034   +   end;
MPRINT(EM_DIAGRAM):   end;
1222035   +end;
MPRINT(EM_DIAGRAM):   end;
1222036   +
1222037   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1222038   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1222039   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
1222040   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1222041   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1222042   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1222043   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1222044   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1222045   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1222046   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1222047   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1222048   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1222049   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1222050   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1222051   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1222052   +end;
MPRINT(EM_DIAGRAM):   end;
1222053   +else do;
MPRINT(EM_DIAGRAM):   else do;
1222054   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1222055   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1222056   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1222057   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1222058   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1222059   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1222060   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1222061   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1222062   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1222063   +         end;
MPRINT(EM_DIAGRAM):   end;
1222064   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1222065   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1222066   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1222067   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1222068   +            end;
MPRINT(EM_DIAGRAM):   end;
1222069   +         end;
MPRINT(EM_DIAGRAM):   end;
1222070   +      end;
MPRINT(EM_DIAGRAM):   end;
1222071   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1222072   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1222073   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1222074   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1222075   +         end;
MPRINT(EM_DIAGRAM):   end;
1222076   +      end;
MPRINT(EM_DIAGRAM):   end;
1222077   +   end;
MPRINT(EM_DIAGRAM):   end;
1222078   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1222079   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1222080   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1222081   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1222082   +      end;
MPRINT(EM_DIAGRAM):   end;
1222083   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1222084   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1222085   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1222086   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1222087   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1222088   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1222089   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1222090   +         end;
MPRINT(EM_DIAGRAM):   end;
1222091   +      end;
MPRINT(EM_DIAGRAM):   end;
1222092   +   end;
MPRINT(EM_DIAGRAM):   end;
1222093   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1222094   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1222095   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1222096   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1222097   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1222098   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1222099   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1222100   +   end;
MPRINT(EM_DIAGRAM):   end;
1222101   +end;
MPRINT(EM_DIAGRAM):   end;
1222102   +
1222103   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1222104   +*** Checking missing input Interval
1222105   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1222106   +
1222107   +IF NMISS(
1222108   +   AcceptedCmpTotal ,
1222109   +   Age ,
1222110   +   Frq ,
1222111   +   Income ,
1222112   +   Kidhome ,
1222113   +   MntFishProducts ,
1222114   +   MntFruits ,
1222115   +   MntGoldProds ,
1222116   +   MntSweetProducts ,
1222117   +   MonthsAsCustomer ,
1222118   +   NumDealsPurchases ,
1222119   +   NumWebVisitsMonth ,
1222120   +   RFMstat ,
1222121   +   RMntFrq ,
1222122   +   Recency ,
1222123   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , 
MntFishProducts , MntFruits , MntGoldProds , MntSweetProducts , MonthsAsCustomer , 
NumDealsPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , Teenhome ) THEN DO;
1222124   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1222125   +
1222126   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1222127   +END;
MPRINT(EM_DIAGRAM):   END;
1222128   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1222129   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1222130   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1222131   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1222132   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1222133   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1222134   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1222135   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1222136   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1222137   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1222138   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1222139   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1222140   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1222141   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1222142   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1222143   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1222144   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1222145   +   S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
1222146   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
1222147   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1222148   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1222149   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1222150   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1222151   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1222152   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1222153   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1222154   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1222155   +END;
MPRINT(EM_DIAGRAM):   END;
1222156   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1222157   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1222158   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1222159   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1222160   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1222161   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1222162   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1222163   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1222164   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1222165   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1222166   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1222167   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1222168   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1222169   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1222170   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1222171   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1222172   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1222173   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1222174   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1222175   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1222176   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1222177   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1222178   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1222179   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1222180   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1222181   +   ELSE S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
1222182   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
1222183   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1222184   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1222185   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1222186   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1222187   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1222188   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1222189   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1222190   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1222191   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1222192   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1222193   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1222194   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1222195   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1222196   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1222197   +END;
MPRINT(EM_DIAGRAM):   END;
1222198   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1222199   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1222200   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1222201   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1222202   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1222203   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1222204   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1222205   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1222206   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1222207   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1222208   +   H11  =     0.36102409886134 * S_AcceptedCmpTotal  +     0.13395156650326 *
1222209   +        S_Age  +    -0.24538302428059 * S_Frq  +    -0.11572058197557 *
1222210   +        S_Income  +     0.21790378443814 * S_Kidhome
1222211   +          +    -0.08134586316395 * S_MntFishProducts
1222212   +          +     -0.2688648060203 * S_MntFruits  +    -0.25880035211038 *
1222213   +        S_MntGoldProds  +     0.07531502626045 * S_MntSweetProducts
1222214   +          +     0.21726816930291 * S_MonthsAsCustomer
1222215   +          +    -0.21824241156847 * S_NumDealsPurchases
1222216   +          +     0.07727563921761 * S_NumWebVisitsMonth
1222217   +          +     0.09027808324069 * S_RFMstat  +     -0.0189462843628 *
1222218   +        S_RMntFrq  +     0.15658915596853 * S_Recency
1222219   +          +     0.18680606168417 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.36102409886134 * S_AcceptedCmpTotal + 0.13395156650326 * S_Age + 
-0.24538302428059 * S_Frq + -0.11572058197557 * S_Income + 0.21790378443814 * S_Kidhome + 
-0.08134586316395 * S_MntFishProducts + -0.2688648060203 * S_MntFruits + -0.25880035211038 * 
S_MntGoldProds + 0.07531502626045 * S_MntSweetProducts + 0.21726816930291 * S_MonthsAsCustomer 
+ -0.21824241156847 * S_NumDealsPurchases + 0.07727563921761 * S_NumWebVisitsMonth + 
0.09027808324069 * S_RFMstat + -0.0189462843628 * S_RMntFrq + 0.15658915596853 * S_Recency + 
0.18680606168417 * S_Teenhome ;
1222220   +   H12  =    -0.50461866181934 * S_AcceptedCmpTotal  +     0.01266437730767 *
1222221   +        S_Age  +     0.02534169432751 * S_Frq  +    -0.89441458532035 *
1222222   +        S_Income  +    -0.51036141680293 * S_Kidhome
1222223   +          +     0.10879858722875 * S_MntFishProducts
1222224   +          +    -0.05639987269313 * S_MntFruits  +    -0.43702228668285 *
1222225   +        S_MntGoldProds  +     0.18909754042399 * S_MntSweetProducts
1222226   +          +    -0.11392977531374 * S_MonthsAsCustomer
1222227   +          +     -0.5318843752274 * S_NumDealsPurchases
1222228   +          +    -0.65796537312585 * S_NumWebVisitsMonth
1222229   +          +    -0.29571612685484 * S_RFMstat  +     -0.0801458884647 *
1222230   +        S_RMntFrq  +     0.73429478940872 * S_Recency
1222231   +          +     0.28950334189528 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -0.50461866181934 * S_AcceptedCmpTotal + 0.01266437730767 * S_Age 
+ 0.02534169432751 * S_Frq + -0.89441458532035 * S_Income + -0.51036141680293 * S_Kidhome + 
0.10879858722875 * S_MntFishProducts + -0.05639987269313 * S_MntFruits + -0.43702228668285 * 
S_MntGoldProds + 0.18909754042399 * S_MntSweetProducts + -0.11392977531374 * 
S_MonthsAsCustomer + -0.5318843752274 * S_NumDealsPurchases + -0.65796537312585 * 
S_NumWebVisitsMonth + -0.29571612685484 * S_RFMstat + -0.0801458884647 * S_RMntFrq + 
0.73429478940872 * S_Recency + 0.28950334189528 * S_Teenhome ;
1222232   +   H13  =    -0.22612994964695 * S_AcceptedCmpTotal  +     0.04392639924073 *
1222233   +        S_Age  +     0.32974877429932 * S_Frq  +    -0.26990824722212 *
1222234   +        S_Income  +     0.59254092901621 * S_Kidhome
1222235   +          +    -0.20448500725841 * S_MntFishProducts
1222236   +          +     0.09904900315476 * S_MntFruits  +     0.33085368683805 *
1222237   +        S_MntGoldProds  +     0.19272280339022 * S_MntSweetProducts
1222238   +          +     0.75084411765835 * S_MonthsAsCustomer
1222239   +          +     -0.0387146296237 * S_NumDealsPurchases
1222240   +          +    -0.28387522584505 * S_NumWebVisitsMonth
1222241   +          +    -0.15204072409221 * S_RFMstat  +     0.09340123133096 *
1222242   +        S_RMntFrq  +     0.82636976290684 * S_Recency
1222243   +          +     0.37810091232378 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = -0.22612994964695 * S_AcceptedCmpTotal + 0.04392639924073 * S_Age 
+ 0.32974877429932 * S_Frq + -0.26990824722212 * S_Income + 0.59254092901621 * S_Kidhome + 
-0.20448500725841 * S_MntFishProducts + 0.09904900315476 * S_MntFruits + 0.33085368683805 * 
S_MntGoldProds + 0.19272280339022 * S_MntSweetProducts + 0.75084411765835 * S_MonthsAsCustomer 
+ -0.0387146296237 * S_NumDealsPurchases + -0.28387522584505 * S_NumWebVisitsMonth + 
-0.15204072409221 * S_RFMstat + 0.09340123133096 * S_RMntFrq + 0.82636976290684 * S_Recency + 
0.37810091232378 * S_Teenhome ;
1222244   +   H14  =    -0.30228547708859 * S_AcceptedCmpTotal  +     0.03241560550242 *
1222245   +        S_Age  +     0.84298653991521 * S_Frq  +     0.08457309547848 *
1222246   +        S_Income  +    -0.00122834275949 * S_Kidhome
1222247   +          +    -0.27566379985337 * S_MntFishProducts
1222248   +          +     0.22439349557664 * S_MntFruits  +     -0.2238462316234 *
1222249   +        S_MntGoldProds  +     0.10162320730644 * S_MntSweetProducts
1222250   +          +    -0.04164317708211 * S_MonthsAsCustomer
1222251   +          +    -0.69362879353268 * S_NumDealsPurchases
1222252   +          +    -0.42590146496797 * S_NumWebVisitsMonth
1222253   +          +    -0.14963136795323 * S_RFMstat  +    -0.12684701620224 *
1222254   +        S_RMntFrq  +     0.84758472963267 * S_Recency
1222255   +          +     0.11712588251204 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = -0.30228547708859 * S_AcceptedCmpTotal + 0.03241560550242 * S_Age 
+ 0.84298653991521 * S_Frq + 0.08457309547848 * S_Income + -0.00122834275949 * S_Kidhome + 
-0.27566379985337 * S_MntFishProducts + 0.22439349557664 * S_MntFruits + -0.2238462316234 * 
S_MntGoldProds + 0.10162320730644 * S_MntSweetProducts + -0.04164317708211 * 
S_MonthsAsCustomer + -0.69362879353268 * S_NumDealsPurchases + -0.42590146496797 * 
S_NumWebVisitsMonth + -0.14963136795323 * S_RFMstat + -0.12684701620224 * S_RMntFrq + 
0.84758472963267 * S_Recency + 0.11712588251204 * S_Teenhome ;
1222256   +   H15  =    -0.07826142783822 * S_AcceptedCmpTotal  +     0.02869519269506 *
1222257   +        S_Age  +     0.47709626753648 * S_Frq  +     0.77626478438802 *
1222258   +        S_Income  +    -0.52116533001423 * S_Kidhome
1222259   +          +     -0.0164127050263 * S_MntFishProducts
1222260   +          +    -0.21044074963391 * S_MntFruits  +    -0.01106715629962 *
1222261   +        S_MntGoldProds  +    -0.04742180634458 * S_MntSweetProducts
1222262   +          +     0.24190773546087 * S_MonthsAsCustomer
1222263   +          +    -0.20709839635746 * S_NumDealsPurchases
1222264   +          +    -0.03892039672539 * S_NumWebVisitsMonth
1222265   +          +     0.01844174922581 * S_RFMstat  +     0.33852543335405 *
1222266   +        S_RMntFrq  +    -0.44935213795722 * S_Recency
1222267   +          +     -0.6298368435821 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H15 = -0.07826142783822 * S_AcceptedCmpTotal + 0.02869519269506 * S_Age 
+ 0.47709626753648 * S_Frq + 0.77626478438802 * S_Income + -0.52116533001423 * S_Kidhome + 
-0.0164127050263 * S_MntFishProducts + -0.21044074963391 * S_MntFruits + -0.01106715629962 * 
S_MntGoldProds + -0.04742180634458 * S_MntSweetProducts + 0.24190773546087 * 
S_MonthsAsCustomer + -0.20709839635746 * S_NumDealsPurchases + -0.03892039672539 * 
S_NumWebVisitsMonth + 0.01844174922581 * S_RFMstat + 0.33852543335405 * S_RMntFrq + 
-0.44935213795722 * S_Recency + -0.6298368435821 * S_Teenhome ;
1222268   +   H16  =    -0.38278200147216 * S_AcceptedCmpTotal  +     0.10976543329989 *
1222269   +        S_Age  +    -0.17634499366273 * S_Frq  +    -0.00464219628456 *
1222270   +        S_Income  +     0.02656798188894 * S_Kidhome
1222271   +          +     0.30126647035438 * S_MntFishProducts
1222272   +          +    -0.15329042297108 * S_MntFruits  +     0.34485619618635 *
1222273   +        S_MntGoldProds  +    -0.02131109278943 * S_MntSweetProducts
1222274   +          +     0.02225077975252 * S_MonthsAsCustomer
1222275   +          +    -0.25574607065737 * S_NumDealsPurchases
1222276   +          +    -0.17649073415066 * S_NumWebVisitsMonth
1222277   +          +    -0.05940264496746 * S_RFMstat  +    -0.10060551243835 *
1222278   +        S_RMntFrq  +    -0.26823576982436 * S_Recency
1222279   +          +    -0.02089829217347 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H16 = -0.38278200147216 * S_AcceptedCmpTotal + 0.10976543329989 * S_Age 
+ -0.17634499366273 * S_Frq + -0.00464219628456 * S_Income + 0.02656798188894 * S_Kidhome + 
0.30126647035438 * S_MntFishProducts + -0.15329042297108 * S_MntFruits + 0.34485619618635 * 
S_MntGoldProds + -0.02131109278943 * S_MntSweetProducts + 0.02225077975252 * 
S_MonthsAsCustomer + -0.25574607065737 * S_NumDealsPurchases + -0.17649073415066 * 
S_NumWebVisitsMonth + -0.05940264496746 * S_RFMstat + -0.10060551243835 * S_RMntFrq + 
-0.26823576982436 * S_Recency + -0.02089829217347 * S_Teenhome ;
1222280   +   H17  =     0.19294816663728 * S_AcceptedCmpTotal  +    -0.36492507147362 *
1222281   +        S_Age  +     -0.5026822541815 * S_Frq  +    -0.48143237402929 *
1222282   +        S_Income  +     0.24859715564668 * S_Kidhome
1222283   +          +    -0.25170385966484 * S_MntFishProducts
1222284   +          +     0.32613161868695 * S_MntFruits  +     0.13394374893255 *
1222285   +        S_MntGoldProds  +     0.48416151380913 * S_MntSweetProducts
1222286   +          +     0.05219342683802 * S_MonthsAsCustomer
1222287   +          +     0.43291262348863 * S_NumDealsPurchases
1222288   +          +     0.56350506449265 * S_NumWebVisitsMonth
1222289   +          +     0.07050038692379 * S_RFMstat  +     0.09321760948671 *
1222290   +        S_RMntFrq  +      -0.582152401129 * S_Recency
1222291   +          +     0.37123217787922 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H17 = 0.19294816663728 * S_AcceptedCmpTotal + -0.36492507147362 * S_Age 
+ -0.5026822541815 * S_Frq + -0.48143237402929 * S_Income + 0.24859715564668 * S_Kidhome + 
-0.25170385966484 * S_MntFishProducts + 0.32613161868695 * S_MntFruits + 0.13394374893255 * 
S_MntGoldProds + 0.48416151380913 * S_MntSweetProducts + 0.05219342683802 * S_MonthsAsCustomer 
+ 0.43291262348863 * S_NumDealsPurchases + 0.56350506449265 * S_NumWebVisitsMonth + 
0.07050038692379 * S_RFMstat + 0.09321760948671 * S_RMntFrq + -0.582152401129 * S_Recency + 
0.37123217787922 * S_Teenhome ;
1222292   +   H11  = H11  +     0.19124500210188 * AcceptedCmp10
1222293   +          +    -0.07164186578541 * AcceptedCmp20  +     0.21783016367597 *
1222294   +        AcceptedCmp30  +     0.21148394728435 * AcceptedCmp40
1222295   +          +    -0.03026880266191 * AcceptedCmp50  +    -0.07201946966594 *
1222296   +        Complain0  +     0.01809478462337 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.19124500210188 * AcceptedCmp10 + -0.07164186578541 * 
AcceptedCmp20 + 0.21783016367597 * AcceptedCmp30 + 0.21148394728435 * AcceptedCmp40 + 
-0.03026880266191 * AcceptedCmp50 + -0.07201946966594 * Complain0 + 0.01809478462337 * 
HigherEducationBinary0 ;
1222297   +   H12  = H12  +    -0.08224648561215 * AcceptedCmp10
1222298   +          +    -0.04262229291512 * AcceptedCmp20  +     0.31730600734378 *
1222299   +        AcceptedCmp30  +    -0.50103336510524 * AcceptedCmp40
1222300   +          +     0.14654032457963 * AcceptedCmp50  +     -0.3081029727525 *
1222301   +        Complain0  +     0.33420373179467 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.08224648561215 * AcceptedCmp10 + -0.04262229291512 * 
AcceptedCmp20 + 0.31730600734378 * AcceptedCmp30 + -0.50103336510524 * AcceptedCmp40 + 
0.14654032457963 * AcceptedCmp50 + -0.3081029727525 * Complain0 + 0.33420373179467 * 
HigherEducationBinary0 ;
1222302   +   H13  = H13  +     -0.2675286852338 * AcceptedCmp10
1222303   +          +     0.00293684627092 * AcceptedCmp20  +     0.17042784679702 *
1222304   +        AcceptedCmp30  +    -0.03300348487228 * AcceptedCmp40
1222305   +          +     0.18139562224546 * AcceptedCmp50  +     -0.5876653777255 *
1222306   +        Complain0  +      -0.348312724013 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.2675286852338 * AcceptedCmp10 + 0.00293684627092 * 
AcceptedCmp20 + 0.17042784679702 * AcceptedCmp30 + -0.03300348487228 * AcceptedCmp40 + 
0.18139562224546 * AcceptedCmp50 + -0.5876653777255 * Complain0 + -0.348312724013 * 
HigherEducationBinary0 ;
1222307   +   H14  = H14  +     0.62345895952335 * AcceptedCmp10
1222308   +          +     0.06420128732689 * AcceptedCmp20  +     0.32944172885024 *
1222309   +        AcceptedCmp30  +    -0.04719511461619 * AcceptedCmp40
1222310   +          +     0.61833640682482 * AcceptedCmp50  +     -0.0006656764006 *
1222311   +        Complain0  +    -0.12356778452039 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.62345895952335 * AcceptedCmp10 + 0.06420128732689 * 
AcceptedCmp20 + 0.32944172885024 * AcceptedCmp30 + -0.04719511461619 * AcceptedCmp40 + 
0.61833640682482 * AcceptedCmp50 + -0.0006656764006 * Complain0 + -0.12356778452039 * 
HigherEducationBinary0 ;
1222312   +   H15  = H15  +    -0.43202592233127 * AcceptedCmp10
1222313   +          +    -0.35346067325701 * AcceptedCmp20  +    -0.29446055239371 *
1222314   +        AcceptedCmp30  +     -0.6355060868005 * AcceptedCmp40
1222315   +          +     0.08763000125481 * AcceptedCmp50  +    -0.55439066852712 *
1222316   +        Complain0  +     0.37078134908454 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + -0.43202592233127 * AcceptedCmp10 + -0.35346067325701 * 
AcceptedCmp20 + -0.29446055239371 * AcceptedCmp30 + -0.6355060868005 * AcceptedCmp40 + 
0.08763000125481 * AcceptedCmp50 + -0.55439066852712 * Complain0 + 0.37078134908454 * 
HigherEducationBinary0 ;
1222317   +   H16  = H16  +    -0.10522820178908 * AcceptedCmp10
1222318   +          +     0.20645125728354 * AcceptedCmp20  +     0.34040121966792 *
1222319   +        AcceptedCmp30  +    -0.02259616994399 * AcceptedCmp40
1222320   +          +    -0.22123397523195 * AcceptedCmp50  +    -0.37258892216723 *
1222321   +        Complain0  +     0.14107103807235 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H16 = H16 + -0.10522820178908 * AcceptedCmp10 + 0.20645125728354 * 
AcceptedCmp20 + 0.34040121966792 * AcceptedCmp30 + -0.02259616994399 * AcceptedCmp40 + 
-0.22123397523195 * AcceptedCmp50 + -0.37258892216723 * Complain0 + 0.14107103807235 * 
HigherEducationBinary0 ;
1222322   +   H17  = H17  +    -0.09096203784003 * AcceptedCmp10
1222323   +          +    -0.04735484605229 * AcceptedCmp20  +     -0.4485810761844 *
1222324   +        AcceptedCmp30  +     0.10362320405529 * AcceptedCmp40
1222325   +          +    -0.05214433990448 * AcceptedCmp50  +    -0.19339827696554 *
1222326   +        Complain0  +    -0.21246690264814 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H17 = H17 + -0.09096203784003 * AcceptedCmp10 + -0.04735484605229 * 
AcceptedCmp20 + -0.4485810761844 * AcceptedCmp30 + 0.10362320405529 * AcceptedCmp40 + 
-0.05214433990448 * AcceptedCmp50 + -0.19339827696554 * Complain0 + -0.21246690264814 * 
HigherEducationBinary0 ;
1222327   +   H11  = H11  +    -0.16759278562529 * Education2n_Cycle
1222328   +          +    -0.31449574789464 * EducationBasic  +     0.13281408830843 *
1222329   +        EducationGraduation  +      0.0199258483942 * EducationMaster
1222330   +          +     0.03245181998921 * Marital_StatusDivorced
1222331   +          +     0.29722741247663 * Marital_StatusMarried
1222332   +          +    -0.05683085497262 * Marital_StatusSingle
1222333   +          +     0.27914630307932 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.16759278562529 * Education2n_Cycle + -0.31449574789464 * 
EducationBasic + 0.13281408830843 * EducationGraduation + 0.0199258483942 * EducationMaster + 
0.03245181998921 * Marital_StatusDivorced + 0.29722741247663 * Marital_StatusMarried + 
-0.05683085497262 * Marital_StatusSingle + 0.27914630307932 * Marital_StatusTogether ;
1222334   +   H12  = H12  +    -0.10709422401859 * Education2n_Cycle
1222335   +          +     0.25457515905931 * EducationBasic  +    -0.26018740430941 *
1222336   +        EducationGraduation  +     0.05808954602972 * EducationMaster
1222337   +          +    -0.13095826187081 * Marital_StatusDivorced
1222338   +          +     0.29509760197193 * Marital_StatusMarried
1222339   +          +    -0.21019918550166 * Marital_StatusSingle
1222340   +          +     0.12557122666089 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.10709422401859 * Education2n_Cycle + 0.25457515905931 * 
EducationBasic + -0.26018740430941 * EducationGraduation + 0.05808954602972 * EducationMaster 
+ -0.13095826187081 * Marital_StatusDivorced + 0.29509760197193 * Marital_StatusMarried + 
-0.21019918550166 * Marital_StatusSingle + 0.12557122666089 * Marital_StatusTogether ;
1222341   +   H13  = H13  +     0.16189957128414 * Education2n_Cycle
1222342   +          +    -0.08593025695878 * EducationBasic  +     0.11065463845302 *
1222343   +        EducationGraduation  +    -0.23434271231945 * EducationMaster
1222344   +          +     0.03746692643939 * Marital_StatusDivorced
1222345   +          +     0.03482798841727 * Marital_StatusMarried
1222346   +          +     0.16645207250571 * Marital_StatusSingle
1222347   +          +    -0.40169040281111 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.16189957128414 * Education2n_Cycle + -0.08593025695878 * 
EducationBasic + 0.11065463845302 * EducationGraduation + -0.23434271231945 * EducationMaster 
+ 0.03746692643939 * Marital_StatusDivorced + 0.03482798841727 * Marital_StatusMarried + 
0.16645207250571 * Marital_StatusSingle + -0.40169040281111 * Marital_StatusTogether ;
1222348   +   H14  = H14  +      0.0929589076858 * Education2n_Cycle
1222349   +          +     0.17576896755796 * EducationBasic  +    -0.08548079761525 *
1222350   +        EducationGraduation  +     -0.0086494793343 * EducationMaster
1222351   +          +     -0.0753971504765 * Marital_StatusDivorced
1222352   +          +     0.20446719655724 * Marital_StatusMarried
1222353   +          +     0.21472836757686 * Marital_StatusSingle
1222354   +          +     0.25097210445128 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.0929589076858 * Education2n_Cycle + 0.17576896755796 * 
EducationBasic + -0.08548079761525 * EducationGraduation + -0.0086494793343 * EducationMaster 
+ -0.0753971504765 * Marital_StatusDivorced + 0.20446719655724 * Marital_StatusMarried + 
0.21472836757686 * Marital_StatusSingle + 0.25097210445128 * Marital_StatusTogether ;
1222355   +   H15  = H15  +     0.05613706593293 * Education2n_Cycle
1222356   +          +     0.15733773983498 * EducationBasic  +     0.18710928885666 *
1222357   +        EducationGraduation  +    -0.40226962940436 * EducationMaster
1222358   +          +     0.16191937298215 * Marital_StatusDivorced
1222359   +          +    -0.81780658848614 * Marital_StatusMarried
1222360   +          +     0.84981159748349 * Marital_StatusSingle
1222361   +          +    -0.81246154443713 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.05613706593293 * Education2n_Cycle + 0.15733773983498 * 
EducationBasic + 0.18710928885666 * EducationGraduation + -0.40226962940436 * EducationMaster 
+ 0.16191937298215 * Marital_StatusDivorced + -0.81780658848614 * Marital_StatusMarried + 
0.84981159748349 * Marital_StatusSingle + -0.81246154443713 * Marital_StatusTogether ;
1222362   +   H16  = H16  +    -0.15143146742513 * Education2n_Cycle
1222363   +          +    -0.32039616194876 * EducationBasic  +     0.14759493683433 *
1222364   +        EducationGraduation  +    -0.24148020292763 * EducationMaster
1222365   +          +    -0.01766312280073 * Marital_StatusDivorced
1222366   +          +     0.04455346003394 * Marital_StatusMarried
1222367   +          +    -0.05433982251127 * Marital_StatusSingle
1222368   +          +     0.07585750304293 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H16 = H16 + -0.15143146742513 * Education2n_Cycle + -0.32039616194876 * 
EducationBasic + 0.14759493683433 * EducationGraduation + -0.24148020292763 * EducationMaster 
+ -0.01766312280073 * Marital_StatusDivorced + 0.04455346003394 * Marital_StatusMarried + 
-0.05433982251127 * Marital_StatusSingle + 0.07585750304293 * Marital_StatusTogether ;
1222369   +   H17  = H17  +    -0.18844639887236 * Education2n_Cycle
1222370   +          +     0.31793429928185 * EducationBasic  +     0.21885580860665 *
1222371   +        EducationGraduation  +      0.1367538666381 * EducationMaster
1222372   +          +        0.22905595967 * Marital_StatusDivorced
1222373   +          +      0.1024998677695 * Marital_StatusMarried
1222374   +          +    -0.07752101768018 * Marital_StatusSingle
1222375   +          +    -0.19408218868635 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H17 = H17 + -0.18844639887236 * Education2n_Cycle + 0.31793429928185 * 
EducationBasic + 0.21885580860665 * EducationGraduation + 0.1367538666381 * EducationMaster + 
0.22905595967 * Marital_StatusDivorced + 0.1024998677695 * Marital_StatusMarried + 
-0.07752101768018 * Marital_StatusSingle + -0.19408218868635 * Marital_StatusTogether ;
1222376   +   H11  =     1.31548476078312 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 1.31548476078312 + H11 ;
1222377   +   H12  =     0.20389286508203 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.20389286508203 + H12 ;
1222378   +   H13  =    -0.77820109969785 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.77820109969785 + H13 ;
1222379   +   H14  =     0.85462770897247 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 0.85462770897247 + H14 ;
1222380   +   H15  =    -0.15190484788676 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = -0.15190484788676 + H15 ;
1222381   +   H16  =     -0.7146854381659 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = -0.7146854381659 + H16 ;
1222382   +   H17  =    -1.06220893322882 + H17 ;
MPRINT(EM_DIAGRAM):   H17 = -1.06220893322882 + H17 ;
1222383   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1222384   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1222385   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1222386   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1222387   +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
1222388   +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
1222389   +   H17  = TANH(H17 );
MPRINT(EM_DIAGRAM):   H17 = TANH(H17 );
1222390   +END;
MPRINT(EM_DIAGRAM):   END;
1222391   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1222392   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1222393   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1222394   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1222395   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1222396   +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
1222397   +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
1222398   +   H17  = .;
MPRINT(EM_DIAGRAM):   H17 = .;
1222399   +END;
MPRINT(EM_DIAGRAM):   END;
1222400   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1222401   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1222402   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1222403   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1222404   +   P_DepVar1  =    -0.11628699177184 * H11  +    -2.70843270240794 * H12
1222405   +          +    -1.81814079406916 * H13  +    -1.84852165774564 * H14
1222406   +          +     2.53533827620448 * H15  +    -0.20106950795136 * H16
1222407   +          +     1.26058098194871 * H17 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.11628699177184 * H11 + -2.70843270240794 * H12 + 
-1.81814079406916 * H13 + -1.84852165774564 * H14 + 2.53533827620448 * H15 + -0.20106950795136 
* H16 + 1.26058098194871 * H17 ;
1222408   +   P_DepVar1  =    -1.66152267043508 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.66152267043508 + P_DepVar1 ;
1222409   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1222410   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1222411   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1222412   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1222413   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1222414   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1222415   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1222416   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1222417   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1222418   +END;
MPRINT(EM_DIAGRAM):   END;
1222419   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1222420   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1222421   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1222422   +END;
MPRINT(EM_DIAGRAM):   END;
1222423   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1222424   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1222425   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1222426   +END;
MPRINT(EM_DIAGRAM):   END;
1222427   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1222428   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1222429   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1222430   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1222431   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1222432   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1222433   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1222434   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1222435   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1222436   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1222437   +END;
MPRINT(EM_DIAGRAM):   END;
1222438   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1222439   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1222440   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1222441   +drop
1222442   +H11
1222443   +H12
1222444   +H13
1222445   +H14
1222446   +H15
1222447   +H16
1222448   +H17
1222449   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 H17 ;
1222450   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1222451    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1222452    quit;
1222453    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1222454    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1222455    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1222456    retain ID 2 Node "Neural36";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Neural36";
1222457    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1222458    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2329 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2329 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1222459    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1222460    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1222461    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2329 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2329 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1222462    proc sort data=EMWS8.Neural36_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Neural36_variableset out=_temp2(keep=NAME CREATOR);
1222463    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1222464    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.NEURAL36_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1222465    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1222466    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1222467    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1222468    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1222469    proc contents data=EMWS8.Neural36_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Neural36_train out=_meta(keep=NAME) noprint;
1222470    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

1222471    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1222472    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1222473    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 53 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1222474    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1222475    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1222476    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1222477    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 53 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1222478    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1222479    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1222479  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 1137 rows and 5 columns.

1222480    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1222481    proc append base=EMWS8.Ensmbl12_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl12_FCMP data=_tempx;
1222482    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL12_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 1137 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL12_FCMP has 1137 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1222483    filename _pref
1222483  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
1222484    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1222485    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
1222486   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1222487   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1222488   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1222489   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1222490   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1222491   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1222492    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1222493    quit;
1222494    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1222495    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1222496    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1222497    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
1222498    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1222499    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1222500    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1222501    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1222502    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

1222503    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
1222504    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1222505    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1222506    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1222507    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1222508    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1222509    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1222510    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
1222511    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

1222512    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1222513    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1222514    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1222515    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1222516    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1222517    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1222518    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1222519    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1222520    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1222520  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

1222521    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1222522    proc append base=EMWS8.Ensmbl12_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl12_FCMP data=_tempx;
1222523    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL12_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL12_FCMP has 1141 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1222524    filename _pref
1222524  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
1222525    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1222526    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
1222527   +
1222528   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1222529   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1222529  !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1222530   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1222531   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1222532   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1222533   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1222534   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1222535    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1222536    quit;
1222537    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1222538    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1222539    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1222540    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
1222541    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1222542    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1222543    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1222544    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1222545    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1222546    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
1222547    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1222548    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1222549    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1222550    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1222551    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1222552    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1222553    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
1222554    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1222555    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1222556    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1222557    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1222558    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1222559    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1222560    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1222561    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1222562    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1222563    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1222563  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

1222564    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1222565    proc append base=EMWS8.Ensmbl12_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl12_FCMP data=_tempx;
1222566    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL12_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL12_FCMP has 1180 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1222567    filename _pref
1222567  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
1222568    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1222569    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
1222570   +
1222571   +
1222572   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
1222573   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
1222574   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
1222575   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
1222576   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
1222577   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1222578   +
1222579   +
1222580   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
1222581   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
1222582   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
1222583   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
1222584   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
1222585   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1222586   +
1222587   +
1222588   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
1222589   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
1222590   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
1222591   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
1222592   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
1222593   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1222594   +
1222595   +
1222596   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
1222597   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
1222598   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
1222599   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
1222600   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
1222601   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1222602   +
1222603   +
1222604   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
1222605   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
1222606   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
1222607   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
1222608   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
1222609   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1222610   +
1222611   +
1222612   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
1222613   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
1222614   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
1222615   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
1222616   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
1222617   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1222618   +
1222619   +
1222620   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
1222621   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
1222622   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
1222623   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
1222624   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
1222625   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1222626   +
1222627   +
1222628   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
1222629   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
1222630   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
1222631   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
1222632   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
1222633   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1222634   +if
1222635   +_FILTERNORM1 not in ( '.')
1222636   + and
1222637   +_FILTERNORM2 not in ( '.')
1222638   + and
1222639   +_FILTERNORM3 not in ( '.')
1222640   + and
1222641   +_FILTERNORM4 not in ( '.')
1222642   + and
1222643   +_FILTERNORM5 not in ( '.')
1222644   + and
1222645   +_FILTERNORM6 not in ( '.')
1222646   + and
1222647   +_FILTERNORM7 not in ( ' ')
1222648   + and
1222649   +_FILTERNORM8 not in ( ' ')
1222650   +and
1222651   +( Dt_Customer ne .)
1222652   +and ( Income ne . and (Income<=107000))
1222653   +and ( Kidhome ne .)
1222654   +and ( MntFishProducts ne .)
1222655   +and ( MntFruits ne .)
1222656   +and ( MntGoldProds ne .)
1222657   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
1222658   +and ( MntSweetProducts ne .)
1222659   +and ( MntWines ne .)
1222660   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
1222661   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
1222662   +and ( NumStorePurchases ne .)
1222663   +and ( NumWebPurchases ne .)
1222664   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
1222665   +and ( Recency ne .)
1222666   +and ( Teenhome ne .)
1222667   +and ( Year_Birth ne .)
1222668   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
1222669   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
1222670   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
1222671   +end;
MPRINT(EM_DIAGRAM):   end;
1222672   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
1222673   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1222674    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1222675    quit;
1222676    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1222677    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1222678    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1222679    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
1222680    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1222681    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1222682    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1222683    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1222684    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1222685    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
1222686    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1222687    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1222688    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1222689    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1222690    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1222691    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

1222692    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
1222693    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1222694    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1222695    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1222696    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1222697    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1222698    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1222699    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1222700    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1222701    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1222702    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1222702  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

1222703    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1222704    proc append base=EMWS8.Ensmbl12_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl12_FCMP data=_tempx;
1222705    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL12_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL12_FCMP has 1246 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1222706    %macro varDept(fcmpdata=,id=);
1222707    %global nobs&id scoreFlag&id;
1222708    %let scoreFlag&id = 0;
1222709    %if &id=1 or ^&fcmpStart %then %do;
1222710    proc sort data=&fcmpdata out=_temp&id nodupkey;
1222711    by NAME;
1222712    where id=&id and LHS in( %let j=1;
1222713    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
1222714    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
1222715    "&var" %let j = %eval(&j+1);
1222716    %end;
1222717    );
1222718    run;
1222719    %let dsid = %sysfunc(open(_temp&id));
1222720    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1222721    %let dsid = %sysfunc(close(&dsid));
1222722    %if &&nobs&id %then %do;
1222723    %let scoreFlag&id = 1;
1222724    %let fcmpStart = 1;
1222725    %end;
1222726    %else %let fcmpStart = 0;
1222727    %end;
1222728    %else %do;
1222729    proc sort data=&fcmpdata out=_tempid;
1222730    where id=&id;
1222731    by LHS;
1222732    run;
1222733    %let dsid = %sysfunc(open(_tempid));
1222734    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1222735    %let dsid = %sysfunc(close(&dsid));
1222736    %if ^&&nobs&id %then %do;
1222737    proc datasets lib=work nolist;
1222738    delete _tempid;
1222739    run;
1222740    quit;
1222741    %end;
1222742    %else %do;
1222743    data _tempAll;
1222744    set %let j=%eval(&id-1);
1222745    %do x=1 %to &j;
1222746    %if &&nobs&x %then %do;
1222747    _temp&x %end;
1222748    %end;
1222749    ;
1222750    run;
1222751    proc sql;
1222752    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
1222752  ! work._tempid p2 where p.name=p2.lhs;
1222753    quit;
1222754    data _temp&id;
1222755    set _temp&id;
1222756    where LHS ne '' and NAME ne '' and Node ne '';
1222757    run;
1222758    proc datasets lib=work nolist;
1222759    delete _tempAll;
1222760    run;
1222761    %let dsid = %sysfunc(open(_temp&id));
1222762    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1222763    %let dsid = %sysfunc(close(&dsid));
1222764    %if ^&&nobs&id %then %do;
1222765    proc datasets lib=work nolist;
1222766    delete _temp&id;
1222767    run;
1222768    quit;
1222769    %end;
1222770    %else %do;
1222771    %let scoreFlag&id = 1;
1222772    data _temp&id;
1222773    set _temp&id;
1222774    where LHS ne NAME and node ne '';
1222775    run;
1222776    %let dsid = %sysfunc(open(_temp&id));
1222777    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1222778    %let dsid = %sysfunc(close(&dsid));
1222779    %if ^&&nobs&id %then %do;
1222780    proc datasets lib=work nolist;
1222781    delete _temp&id;
1222782    run;
1222783    quit;
1222784    %end;
1222785    %else %do;
1222786    proc sort data=_temp&id nodupkey;
1222787    by LHS NAME;
1222788    run;
1222789    %end;
1222790    %end;
1222791    %end;
1222792    %end;
1222793    %mend varDept;
1222794    %macro optCode(outdata=fcmpdata);
1222795    %global fcmpStart;
1222796    %let fcmpStart = 0;
1222797    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
1222798    %let NumNodes=9;
1222799    %do k=1 %to &NumNodes;
1222800    %vardept(fcmpdata=&outdata, id=&k);
1222801    %end;
1222802    %mend optCode;
1222803    %optcode(outData=EMWS8.Ensmbl12_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl12_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL12_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl12_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 106 observations read from the data set EMWS8.ENSMBL12_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 79 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 27 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl12_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL12_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl12_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL12_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl12_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL12_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 27 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 2 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl12_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL12_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 29 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 33 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 33 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 33 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 33 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl12_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL12_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: There were 33 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 62 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl12_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL12_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl12_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL12_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

1222804    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
1222805    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1222806    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
1222807    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1222808    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
1222809    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1222810    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
1222811    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1222812    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1222813    create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
1222813  ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 2 rows and 3 columns.

1222814    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1222815    data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
1222816    set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
1222817    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 2 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 2 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1222818    filename _pref
1222818  ! "C:\\predictive-models-project\Workspaces\EMWS8\Tree6\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Tree6\EMPUBLISHSCORE.sas";
1222819    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1222820    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Tree6\EMPUBLISHSCORE.sas.
1222821   +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
1222822   +******             DECISION TREE SCORING CODE             ******;
MPRINT(EM_DIAGRAM):   ****** DECISION TREE SCORING CODE ******;
1222823   +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
1222824   +
1222825   +******         LENGTHS OF NEW CHARACTER VARIABLES         ******;
MPRINT(EM_DIAGRAM):   ****** LENGTHS OF NEW CHARACTER VARIABLES ******;
1222826   +LENGTH I_DepVar  $   12;
MPRINT(EM_DIAGRAM):   LENGTH I_DepVar $ 12;
1222827   +LENGTH _WARN_  $    4;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $ 4;
1222828   +
1222829   +******              LABELS FOR NEW VARIABLES              ******;
MPRINT(EM_DIAGRAM):   ****** LABELS FOR NEW VARIABLES ******;
1222830   +LABEL _NODE_  = 'Node' ;
MPRINT(EM_DIAGRAM):   LABEL _NODE_ = 'Node' ;
1222831   +LABEL _LEAF_  = 'Leaf' ;
MPRINT(EM_DIAGRAM):   LABEL _LEAF_ = 'Leaf' ;
1222832   +LABEL P_DepVar0  = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   LABEL P_DepVar0 = 'Predicted: DepVar=0' ;
1222833   +LABEL P_DepVar1  = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   LABEL P_DepVar1 = 'Predicted: DepVar=1' ;
1222834   +LABEL Q_DepVar0  = 'Unadjusted P: DepVar=0' ;
MPRINT(EM_DIAGRAM):   LABEL Q_DepVar0 = 'Unadjusted P: DepVar=0' ;
1222835   +LABEL Q_DepVar1  = 'Unadjusted P: DepVar=1' ;
MPRINT(EM_DIAGRAM):   LABEL Q_DepVar1 = 'Unadjusted P: DepVar=1' ;
1222836   +LABEL V_DepVar0  = 'Validated: DepVar=0' ;
MPRINT(EM_DIAGRAM):   LABEL V_DepVar0 = 'Validated: DepVar=0' ;
1222837   +LABEL V_DepVar1  = 'Validated: DepVar=1' ;
MPRINT(EM_DIAGRAM):   LABEL V_DepVar1 = 'Validated: DepVar=1' ;
1222838   +LABEL I_DepVar  = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   LABEL I_DepVar = 'Into: DepVar' ;
1222839   +LABEL U_DepVar  = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   LABEL U_DepVar = 'Unnormalized Into: DepVar' ;
1222840   +LABEL _WARN_  = 'Warnings' ;
MPRINT(EM_DIAGRAM):   LABEL _WARN_ = 'Warnings' ;
1222841   +
1222842   +
1222843   +******      TEMPORARY VARIABLES FOR FORMATTED VALUES      ******;
MPRINT(EM_DIAGRAM):   ****** TEMPORARY VARIABLES FOR FORMATTED VALUES ******;
1222844   +LENGTH _ARBFMT_12 $     12; DROP _ARBFMT_12;
MPRINT(EM_DIAGRAM):   LENGTH _ARBFMT_12 $ 12;
MPRINT(EM_DIAGRAM):   DROP _ARBFMT_12;
1222845   +_ARBFMT_12 = ' '; /* Initialize to avoid warning. */
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = ' ';
1222846   +LENGTH _ARBFMT_8 $      8; DROP _ARBFMT_8;
MPRINT(EM_DIAGRAM):   /* Initialize to avoid warning. */ LENGTH _ARBFMT_8 $ 8;
MPRINT(EM_DIAGRAM):   DROP _ARBFMT_8;
1222847   +_ARBFMT_8 = ' '; /* Initialize to avoid warning. */
MPRINT(EM_DIAGRAM):   _ARBFMT_8 = ' ';
1222848   +
1222849   +
1222850   +******             ASSIGN OBSERVATION TO NODE             ******;
MPRINT(EM_DIAGRAM):   /* Initialize to avoid warning. */ ****** ASSIGN OBSERVATION TO NODE 
******;
1222851   +IF  NOT MISSING(AcceptedCmpTotal ) AND
1222852   +                   0.5 <= AcceptedCmpTotal  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(AcceptedCmpTotal ) AND 0.5 <= AcceptedCmpTotal THEN DO;
1222853   +  IF  NOT MISSING(Recency ) AND
1222854   +    Recency  <                 38.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(Recency ) AND Recency < 38.5 THEN DO;
1222855   +    IF  NOT MISSING(AcceptedCmpTotal ) AND
1222856   +                       1.5 <= AcceptedCmpTotal  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(AcceptedCmpTotal ) AND 1.5 <= AcceptedCmpTotal THEN DO;
1222857   +      _NODE_  =                   13;
MPRINT(EM_DIAGRAM):   _NODE_ = 13;
1222858   +      _LEAF_  =                   11;
MPRINT(EM_DIAGRAM):   _LEAF_ = 11;
1222859   +      P_DepVar0  =     0.05263157894736;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.05263157894736;
1222860   +      P_DepVar1  =     0.94736842105263;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.94736842105263;
1222861   +      Q_DepVar0  =     0.05263157894736;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.05263157894736;
1222862   +      Q_DepVar1  =     0.94736842105263;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.94736842105263;
1222863   +      V_DepVar0  =                    0;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0;
1222864   +      V_DepVar1  =                    1;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 1;
1222865   +      I_DepVar  = '1' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '1' ;
1222866   +      U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1222867   +      END;
MPRINT(EM_DIAGRAM):   END;
1222868   +    ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1222869   +      _ARBFMT_8 = PUT( Marital_Status , $8.);
MPRINT(EM_DIAGRAM):   _ARBFMT_8 = PUT( Marital_Status , $8.);
1222870   +       %DMNORMIP( _ARBFMT_8);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
1222871   +      IF _ARBFMT_8 IN ('WIDOW' ,'DIVORCED' ,'SINGLE' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_8 IN ('WIDOW' ,'DIVORCED' ,'SINGLE' ) THEN DO;
1222872   +        _NODE_  =                   25;
MPRINT(EM_DIAGRAM):   _NODE_ = 25;
1222873   +        _LEAF_  =                   10;
MPRINT(EM_DIAGRAM):   _LEAF_ = 10;
1222874   +        P_DepVar0  =      0.2258064516129;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.2258064516129;
1222875   +        P_DepVar1  =     0.77419354838709;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.77419354838709;
1222876   +        Q_DepVar0  =      0.2258064516129;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.2258064516129;
1222877   +        Q_DepVar1  =     0.77419354838709;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.77419354838709;
1222878   +        V_DepVar0  =     0.41935483870967;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.41935483870967;
1222879   +        V_DepVar1  =     0.58064516129032;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.58064516129032;
1222880   +        I_DepVar  = '1' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '1' ;
1222881   +        U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1222882   +        END;
MPRINT(EM_DIAGRAM):   END;
1222883   +      ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1222884   +        IF  NOT MISSING(Kidhome ) AND
1222885   +                           0.5 <= Kidhome  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(Kidhome ) AND 0.5 <= Kidhome THEN DO;
1222886   +          _NODE_  =                   39;
MPRINT(EM_DIAGRAM):   _NODE_ = 39;
1222887   +          _LEAF_  =                    9;
MPRINT(EM_DIAGRAM):   _LEAF_ = 9;
1222888   +          P_DepVar0  =               0.3125;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.3125;
1222889   +          P_DepVar1  =               0.6875;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.6875;
1222890   +          Q_DepVar0  =               0.3125;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.3125;
1222891   +          Q_DepVar1  =               0.6875;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.6875;
1222892   +          V_DepVar0  =     0.23076923076923;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.23076923076923;
1222893   +          V_DepVar1  =     0.76923076923076;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.76923076923076;
1222894   +          I_DepVar  = '1' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '1' ;
1222895   +          U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1222896   +          END;
MPRINT(EM_DIAGRAM):   END;
1222897   +        ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1222898   +          IF  NOT MISSING(RFMstat ) AND
1222899   +                2448.04945054945 <= RFMstat  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(RFMstat ) AND 2448.04945054945 <= RFMstat THEN DO;
1222900   +            _NODE_  =                   51;
MPRINT(EM_DIAGRAM):   _NODE_ = 51;
1222901   +            _LEAF_  =                    8;
MPRINT(EM_DIAGRAM):   _LEAF_ = 8;
1222902   +            P_DepVar0  =     0.23529411764705;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.23529411764705;
1222903   +            P_DepVar1  =     0.76470588235294;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.76470588235294;
1222904   +            Q_DepVar0  =     0.23529411764705;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.23529411764705;
1222905   +            Q_DepVar1  =     0.76470588235294;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.76470588235294;
1222906   +            V_DepVar0  =     0.42857142857142;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.42857142857142;
1222907   +            V_DepVar1  =     0.57142857142857;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.57142857142857;
1222908   +            I_DepVar  = '1' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '1' ;
1222909   +            U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1222910   +            END;
MPRINT(EM_DIAGRAM):   END;
1222911   +          ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1222912   +            _NODE_  =                   50;
MPRINT(EM_DIAGRAM):   _NODE_ = 50;
1222913   +            _LEAF_  =                    7;
MPRINT(EM_DIAGRAM):   _LEAF_ = 7;
1222914   +            P_DepVar0  =      0.8076923076923;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.8076923076923;
1222915   +            P_DepVar1  =     0.19230769230769;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.19230769230769;
1222916   +            Q_DepVar0  =      0.8076923076923;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.8076923076923;
1222917   +            Q_DepVar1  =     0.19230769230769;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.19230769230769;
1222918   +            V_DepVar0  =     0.78260869565217;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.78260869565217;
1222919   +            V_DepVar1  =     0.21739130434782;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.21739130434782;
1222920   +            I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
1222921   +            U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1222922   +            END;
MPRINT(EM_DIAGRAM):   END;
1222923   +          END;
MPRINT(EM_DIAGRAM):   END;
1222924   +        END;
MPRINT(EM_DIAGRAM):   END;
1222925   +      END;
MPRINT(EM_DIAGRAM):   END;
1222926   +    END;
MPRINT(EM_DIAGRAM):   END;
1222927   +  ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1222928   +    IF  NOT MISSING(AcceptedCmpTotal ) AND
1222929   +                       2.5 <= AcceptedCmpTotal  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(AcceptedCmpTotal ) AND 2.5 <= AcceptedCmpTotal THEN DO;
1222930   +      _NODE_  =                   15;
MPRINT(EM_DIAGRAM):   _NODE_ = 15;
1222931   +      _LEAF_  =                   13;
MPRINT(EM_DIAGRAM):   _LEAF_ = 13;
1222932   +      P_DepVar0  =      0.3103448275862;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.3103448275862;
1222933   +      P_DepVar1  =     0.68965517241379;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.68965517241379;
1222934   +      Q_DepVar0  =      0.3103448275862;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.3103448275862;
1222935   +      Q_DepVar1  =     0.68965517241379;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.68965517241379;
1222936   +      V_DepVar0  =     0.33333333333333;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.33333333333333;
1222937   +      V_DepVar1  =     0.66666666666666;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.66666666666666;
1222938   +      I_DepVar  = '1' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '1' ;
1222939   +      U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1222940   +      END;
MPRINT(EM_DIAGRAM):   END;
1222941   +    ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1222942   +      _NODE_  =                   14;
MPRINT(EM_DIAGRAM):   _NODE_ = 14;
1222943   +      _LEAF_  =                   12;
MPRINT(EM_DIAGRAM):   _LEAF_ = 12;
1222944   +      P_DepVar0  =     0.82562277580071;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.82562277580071;
1222945   +      P_DepVar1  =     0.17437722419928;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.17437722419928;
1222946   +      Q_DepVar0  =     0.82562277580071;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.82562277580071;
1222947   +      Q_DepVar1  =     0.17437722419928;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.17437722419928;
1222948   +      V_DepVar0  =     0.81818181818181;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.81818181818181;
1222949   +      V_DepVar1  =     0.18181818181818;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.18181818181818;
1222950   +      I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
1222951   +      U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1222952   +      END;
MPRINT(EM_DIAGRAM):   END;
1222953   +    END;
MPRINT(EM_DIAGRAM):   END;
1222954   +  END;
MPRINT(EM_DIAGRAM):   END;
1222955   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1222956   +  IF  NOT MISSING(Recency ) AND
1222957   +    Recency  <                 32.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(Recency ) AND Recency < 32.5 THEN DO;
1222958   +    IF  NOT MISSING(NumDealsPurchases ) AND
1222959   +                       5.5 <= NumDealsPurchases  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(NumDealsPurchases ) AND 5.5 <= NumDealsPurchases THEN DO;
1222960   +      IF  NOT MISSING(Frq ) AND
1222961   +        Frq  <                 13.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(Frq ) AND Frq < 13.5 THEN DO;
1222962   +        _NODE_  =                   18;
MPRINT(EM_DIAGRAM):   _NODE_ = 18;
1222963   +        _LEAF_  =                    3;
MPRINT(EM_DIAGRAM):   _LEAF_ = 3;
1222964   +        P_DepVar0  =     0.06666666666666;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.06666666666666;
1222965   +        P_DepVar1  =     0.93333333333333;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.93333333333333;
1222966   +        Q_DepVar0  =     0.06666666666666;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.06666666666666;
1222967   +        Q_DepVar1  =     0.93333333333333;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.93333333333333;
1222968   +        V_DepVar0  =                  0.2;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.2;
1222969   +        V_DepVar1  =                  0.8;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.8;
1222970   +        I_DepVar  = '1' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '1' ;
1222971   +        U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1222972   +        END;
MPRINT(EM_DIAGRAM):   END;
1222973   +      ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1222974   +        IF  NOT MISSING(RFMstat ) AND
1222975   +              1513.63146551724 <= RFMstat  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(RFMstat ) AND 1513.63146551724 <= RFMstat THEN DO;
1222976   +          _NODE_  =                   35;
MPRINT(EM_DIAGRAM):   _NODE_ = 35;
1222977   +          _LEAF_  =                    5;
MPRINT(EM_DIAGRAM):   _LEAF_ = 5;
1222978   +          P_DepVar0  =     0.16666666666666;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.16666666666666;
1222979   +          P_DepVar1  =     0.83333333333333;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.83333333333333;
1222980   +          Q_DepVar0  =     0.16666666666666;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.16666666666666;
1222981   +          Q_DepVar1  =     0.83333333333333;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.83333333333333;
1222982   +          V_DepVar0  =                 0.25;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.25;
1222983   +          V_DepVar1  =                 0.75;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.75;
1222984   +          I_DepVar  = '1' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '1' ;
1222985   +          U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1222986   +          END;
MPRINT(EM_DIAGRAM):   END;
1222987   +        ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1222988   +          _NODE_  =                   34;
MPRINT(EM_DIAGRAM):   _NODE_ = 34;
1222989   +          _LEAF_  =                    4;
MPRINT(EM_DIAGRAM):   _LEAF_ = 4;
1222990   +          P_DepVar0  =                0.875;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.875;
1222991   +          P_DepVar1  =                0.125;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.125;
1222992   +          Q_DepVar0  =                0.875;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.875;
1222993   +          Q_DepVar1  =                0.125;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.125;
1222994   +          V_DepVar0  =                  0.7;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.7;
1222995   +          V_DepVar1  =                  0.3;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.3;
1222996   +          I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
1222997   +          U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1222998   +          END;
MPRINT(EM_DIAGRAM):   END;
1222999   +        END;
MPRINT(EM_DIAGRAM):   END;
1223000   +      END;
MPRINT(EM_DIAGRAM):   END;
1223001   +    ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1223002   +      IF  NOT MISSING(RFMstat ) AND
1223003   +            5150.39285714285 <= RFMstat  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(RFMstat ) AND 5150.39285714285 <= RFMstat THEN DO;
1223004   +        _NODE_  =                   17;
MPRINT(EM_DIAGRAM):   _NODE_ = 17;
1223005   +        _LEAF_  =                    2;
MPRINT(EM_DIAGRAM):   _LEAF_ = 2;
1223006   +        P_DepVar0  =     0.38888888888888;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.38888888888888;
1223007   +        P_DepVar1  =     0.61111111111111;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.61111111111111;
1223008   +        Q_DepVar0  =     0.38888888888888;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.38888888888888;
1223009   +        Q_DepVar1  =     0.61111111111111;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.61111111111111;
1223010   +        V_DepVar0  =     0.41666666666666;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.41666666666666;
The SAS System

1223011   +        V_DepVar1  =     0.58333333333333;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.58333333333333;
1223012   +        I_DepVar  = '1' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '1' ;
1223013   +        U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1223014   +        END;
MPRINT(EM_DIAGRAM):   END;
1223015   +      ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1223016   +        _NODE_  =                   16;
MPRINT(EM_DIAGRAM):   _NODE_ = 16;
1223017   +        _LEAF_  =                    1;
MPRINT(EM_DIAGRAM):   _LEAF_ = 1;
1223018   +        P_DepVar0  =     0.84547069271758;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84547069271758;
1223019   +        P_DepVar1  =     0.15452930728241;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15452930728241;
1223020   +        Q_DepVar0  =     0.84547069271758;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.84547069271758;
1223021   +        Q_DepVar1  =     0.15452930728241;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.15452930728241;
1223022   +        V_DepVar0  =     0.81673306772908;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.81673306772908;
1223023   +        V_DepVar1  =     0.18326693227091;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.18326693227091;
1223024   +        I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
1223025   +        U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1223026   +        END;
MPRINT(EM_DIAGRAM):   END;
1223027   +      END;
MPRINT(EM_DIAGRAM):   END;
1223028   +    END;
MPRINT(EM_DIAGRAM):   END;
1223029   +  ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1223030   +    _NODE_  =                    5;
MPRINT(EM_DIAGRAM):   _NODE_ = 5;
1223031   +    _LEAF_  =                    6;
MPRINT(EM_DIAGRAM):   _LEAF_ = 6;
1223032   +    P_DepVar0  =     0.98042414355628;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.98042414355628;
1223033   +    P_DepVar1  =     0.01957585644371;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.01957585644371;
1223034   +    Q_DepVar0  =     0.98042414355628;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.98042414355628;
1223035   +    Q_DepVar1  =     0.01957585644371;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.01957585644371;
1223036   +    V_DepVar0  =     0.98795180722891;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.98795180722891;
1223037   +    V_DepVar1  =     0.01204819277108;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.01204819277108;
1223038   +    I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
1223039   +    U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1223040   +    END;
MPRINT(EM_DIAGRAM):   END;
1223041   +  END;
MPRINT(EM_DIAGRAM):   END;
1223042   +
1223043   +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
1223044   +******          END OF DECISION TREE SCORING CODE         ******;
MPRINT(EM_DIAGRAM):   ****** END OF DECISION TREE SCORING CODE ******;
1223045   +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
1223046   +drop _LEAF_;
MPRINT(EM_DIAGRAM):   drop _LEAF_;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1223047    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1223048    quit;
1223049    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1223050    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1223051    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1223052    retain ID 2 Node "Tree6";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Tree6";
1223053    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1223054    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 83 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 83 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1223055    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1223056    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1223057    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 83 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 83 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1223058    proc sort data=EMWS8.Tree6_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Tree6_variableset out=_temp2(keep=NAME CREATOR);
1223059    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1223060    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.TREE6_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1223061    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1223062    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1223063    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1223064    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1223065    proc contents data=EMWS8.Tree6_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Tree6_train out=_meta(keep=NAME) noprint;
1223066    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 58 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1223067    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1223068    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1223069    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 58 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 58 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1223070    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1223071    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1223072    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1223073    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 58 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 58 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1223074    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1223075    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1223075  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 73 rows and 5 columns.

1223076    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1223077    proc append base=EMWS8.Ensmbl12_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl12_FCMP data=_tempx;
1223078    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL12_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 73 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL12_FCMP has 73 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1223079    filename _pref
1223079  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
1223080    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1223081    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
1223082   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1223083   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1223084   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1223085   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1223086   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1223087   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1223088    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1223089    quit;
1223090    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1223091    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1223092    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1223093    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
1223094    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1223095    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1223096    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1223097    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1223098    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1223099    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
1223100    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1223101    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1223102    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1223103    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1223104    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1223105    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1223106    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
1223107    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1223108    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1223109    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1223110    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1223111    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1223112    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1223113    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1223114    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1223115    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1223116    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1223116  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

1223117    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1223118    proc append base=EMWS8.Ensmbl12_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl12_FCMP data=_tempx;
1223119    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL12_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL12_FCMP has 77 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1223120    filename _pref
1223120  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
1223121    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1223122    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
1223123   +
1223124   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1223125   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1223125  !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1223126   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1223127   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1223128   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1223129   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1223130   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1223131    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1223132    quit;
1223133    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1223134    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1223135    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1223136    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
1223137    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1223138    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

1223139    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1223140    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1223141    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1223142    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
1223143    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1223144    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1223145    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1223146    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1223147    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1223148    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1223149    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
1223150    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1223151    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1223152    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1223153    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1223154    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1223155    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1223156    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1223157    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1223158    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1223159    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1223159  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

1223160    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1223161    proc append base=EMWS8.Ensmbl12_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl12_FCMP data=_tempx;
1223162    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL12_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL12_FCMP has 116 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1223163    filename _pref
1223163  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
1223164    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1223165    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
1223166   +
1223167   +
1223168   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
1223169   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
1223170   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
1223171   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
1223172   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
1223173   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1223174   +
1223175   +
1223176   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
1223177   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
1223178   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
1223179   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
1223180   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
1223181   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1223182   +
1223183   +
1223184   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
1223185   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
1223186   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
1223187   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
1223188   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
1223189   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1223190   +
1223191   +
1223192   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
1223193   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
1223194   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
1223195   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
1223196   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
1223197   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1223198   +
1223199   +
1223200   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
1223201   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
1223202   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
1223203   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
1223204   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
1223205   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1223206   +
1223207   +
1223208   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
1223209   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
1223210   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
1223211   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
1223212   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
1223213   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1223214   +
1223215   +
1223216   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
1223217   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
1223218   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
1223219   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
1223220   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
1223221   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1223222   +
1223223   +
1223224   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
1223225   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
1223226   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
1223227   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
1223228   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
1223229   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1223230   +if
1223231   +_FILTERNORM1 not in ( '.')
1223232   + and
1223233   +_FILTERNORM2 not in ( '.')
1223234   + and
1223235   +_FILTERNORM3 not in ( '.')
1223236   + and
1223237   +_FILTERNORM4 not in ( '.')
1223238   + and
1223239   +_FILTERNORM5 not in ( '.')
1223240   + and
1223241   +_FILTERNORM6 not in ( '.')
1223242   + and
1223243   +_FILTERNORM7 not in ( ' ')
1223244   + and
1223245   +_FILTERNORM8 not in ( ' ')
1223246   +and
1223247   +( Dt_Customer ne .)
1223248   +and ( Income ne . and (Income<=107000))
1223249   +and ( Kidhome ne .)
1223250   +and ( MntFishProducts ne .)
1223251   +and ( MntFruits ne .)
1223252   +and ( MntGoldProds ne .)
1223253   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
1223254   +and ( MntSweetProducts ne .)
1223255   +and ( MntWines ne .)
1223256   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
1223257   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
1223258   +and ( NumStorePurchases ne .)
1223259   +and ( NumWebPurchases ne .)
1223260   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
1223261   +and ( Recency ne .)
1223262   +and ( Teenhome ne .)
1223263   +and ( Year_Birth ne .)
1223264   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
1223265   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
1223266   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
1223267   +end;
MPRINT(EM_DIAGRAM):   end;
1223268   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
1223269   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1223270    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1223271    quit;
1223272    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1223273    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1223274    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1223275    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
1223276    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1223277    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1223278    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1223279    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1223280    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1223281    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
1223282    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1223283    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1223284    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1223285    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1223286    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1223287    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1223288    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
1223289    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
      

1223290    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1223291    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1223292    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1223293    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1223294    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1223295    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1223296    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

1223297    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1223298    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1223298  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

1223299    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1223300    proc append base=EMWS8.Ensmbl12_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl12_FCMP data=_tempx;
1223301    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL12_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL12_FCMP has 182 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1223302    %macro varDept(fcmpdata=,id=);
1223303    %global nobs&id scoreFlag&id;
1223304    %let scoreFlag&id = 0;
1223305    %if &id=1 or ^&fcmpStart %then %do;
1223306    proc sort data=&fcmpdata out=_temp&id nodupkey;
1223307    by NAME;
1223308    where id=&id and LHS in( %let j=1;
1223309    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
1223310    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
1223311    "&var" %let j = %eval(&j+1);
1223312    %end;
1223313    );
1223314    run;
1223315    %let dsid = %sysfunc(open(_temp&id));
1223316    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1223317    %let dsid = %sysfunc(close(&dsid));
1223318    %if &&nobs&id %then %do;
1223319    %let scoreFlag&id = 1;
1223320    %let fcmpStart = 1;
1223321    %end;
1223322    %else %let fcmpStart = 0;
1223323    %end;
1223324    %else %do;
1223325    proc sort data=&fcmpdata out=_tempid;
1223326    where id=&id;
1223327    by LHS;
1223328    run;
1223329    %let dsid = %sysfunc(open(_tempid));
1223330    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1223331    %let dsid = %sysfunc(close(&dsid));
1223332    %if ^&&nobs&id %then %do;
1223333    proc datasets lib=work nolist;
1223334    delete _tempid;
1223335    run;
1223336    quit;
1223337    %end;
1223338    %else %do;
1223339    data _tempAll;
1223340    set %let j=%eval(&id-1);
1223341    %do x=1 %to &j;
1223342    %if &&nobs&x %then %do;
1223343    _temp&x %end;
1223344    %end;
1223345    ;
1223346    run;
1223347    proc sql;
1223348    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
1223348  ! work._tempid p2 where p.name=p2.lhs;
1223349    quit;
1223350    data _temp&id;
1223351    set _temp&id;
1223352    where LHS ne '' and NAME ne '' and Node ne '';
1223353    run;
1223354    proc datasets lib=work nolist;
1223355    delete _tempAll;
1223356    run;
1223357    %let dsid = %sysfunc(open(_temp&id));
1223358    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1223359    %let dsid = %sysfunc(close(&dsid));
1223360    %if ^&&nobs&id %then %do;
1223361    proc datasets lib=work nolist;
1223362    delete _temp&id;
1223363    run;
1223364    quit;
1223365    %end;
1223366    %else %do;
1223367    %let scoreFlag&id = 1;
1223368    data _temp&id;
1223369    set _temp&id;
1223370    where LHS ne NAME and node ne '';
1223371    run;
1223372    %let dsid = %sysfunc(open(_temp&id));
1223373    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1223374    %let dsid = %sysfunc(close(&dsid));
1223375    %if ^&&nobs&id %then %do;
1223376    proc datasets lib=work nolist;
1223377    delete _temp&id;
1223378    run;
1223379    quit;
1223380    %end;
1223381    %else %do;
1223382    proc sort data=_temp&id nodupkey;
1223383    by LHS NAME;
1223384    run;
1223385    %end;
1223386    %end;
1223387    %end;
1223388    %end;
1223389    %mend varDept;
1223390    %macro optCode(outdata=fcmpdata);
1223391    %global fcmpStart;
1223392    %let fcmpStart = 0;
1223393    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
1223394    %let NumNodes=9;
1223395    %do k=1 %to &NumNodes;
1223396    %vardept(fcmpdata=&outdata, id=&k);
1223397    %end;
1223398    %mend optCode;
1223399    %optcode(outData=EMWS8.Ensmbl12_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl12_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL12_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl12_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 21 observations read from the data set EMWS8.ENSMBL12_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 14 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 7 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl12_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL12_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl12_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL12_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl12_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL12_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 7 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 7 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp5;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP5 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl12_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL12_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 7 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 7 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 20 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 20 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 20 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 20 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 20 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 20 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 20 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl12_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL12_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 7 observations read from the data set WORK._TEMP2.
NOTE: There were 20 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 27 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl12_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL12_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl12_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL12_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

1223400    filename _pref
1223400  ! "C:\\predictive-models-project\Workspaces\EMWS8\Reg12\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Reg12\EMPUBLISHSCORE.sas";
1223401    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1223402    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Reg12\EMPUBLISHSCORE.sas.
1223403   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1223404   +*** begin scoring code for regression;
MPRINT(EM_DIAGRAM):   *** begin scoring code for regression;
1223405   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1223406   +
1223407   +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
1223408   +label _WARN_ = 'Warnings' ;
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings' ;
1223409   +
1223410   +length I_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length I_DepVar $ 12;
1223411   +label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1223412   +*** Target Values;
MPRINT(EM_DIAGRAM):   *** Target Values;
1223413   +array REG12DRF [2] $12 _temporary_ ('1' '0' );
MPRINT(EM_DIAGRAM):   array REG12DRF [2] $12 _temporary_ ('1' '0' );
1223414   +label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1223415   +format U_DepVar BEST.;
MPRINT(EM_DIAGRAM):   format U_DepVar BEST.;
1223416   +*** Unnormalized target values;
MPRINT(EM_DIAGRAM):   *** Unnormalized target values;
1223417   +ARRAY REG12DRU[2]  _TEMPORARY_ (1 0);
MPRINT(EM_DIAGRAM):   ARRAY REG12DRU[2] _TEMPORARY_ (1 0);
1223418   +
1223419   +drop _DM_BAD;
MPRINT(EM_DIAGRAM):   drop _DM_BAD;
1223420   +_DM_BAD=0;
MPRINT(EM_DIAGRAM):   _DM_BAD=0;
1223421   +
1223422   +*** Check AcceptedCmpTotal for missing values ;
MPRINT(EM_DIAGRAM):   *** Check AcceptedCmpTotal for missing values ;
1223423   +if missing( AcceptedCmpTotal ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmpTotal ) then do;
1223424   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1223425   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1223426   +end;
MPRINT(EM_DIAGRAM):   end;
1223427   +
1223428   +*** Check Age for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Age for missing values ;
1223429   +if missing( Age ) then do;
MPRINT(EM_DIAGRAM):   if missing( Age ) then do;
1223430   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1223431   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1223432   +end;
MPRINT(EM_DIAGRAM):   end;
1223433   +
1223434   +*** Check Frq for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Frq for missing values ;
1223435   +if missing( Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( Frq ) then do;
1223436   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1223437   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1223438   +end;
MPRINT(EM_DIAGRAM):   end;
1223439   +
1223440   +*** Check Income for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Income for missing values ;
1223441   +if missing( Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( Income ) then do;
1223442   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1223443   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1223444   +end;
MPRINT(EM_DIAGRAM):   end;
1223445   +
1223446   +*** Check NumDealsPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumDealsPurchases for missing values ;
1223447   +if missing( NumDealsPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumDealsPurchases ) then do;
1223448   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1223449   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1223450   +end;
MPRINT(EM_DIAGRAM):   end;
1223451   +
1223452   +*** Check NumWebVisitsMonth for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumWebVisitsMonth for missing values ;
1223453   +if missing( NumWebVisitsMonth ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumWebVisitsMonth ) then do;
1223454   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1223455   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1223456   +end;
MPRINT(EM_DIAGRAM):   end;
1223457   +
1223458   +*** Check RMntFrq for missing values ;
MPRINT(EM_DIAGRAM):   *** Check RMntFrq for missing values ;
1223459   +if missing( RMntFrq ) then do;
MPRINT(EM_DIAGRAM):   if missing( RMntFrq ) then do;
1223460   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1223461   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1223462   +end;
MPRINT(EM_DIAGRAM):   end;
1223463   +
1223464   +*** Check Recency for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Recency for missing values ;
1223465   +if missing( Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( Recency ) then do;
1223466   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1223467   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1223468   +end;
MPRINT(EM_DIAGRAM):   end;
1223469   +
1223470   +*** Check Teenhome for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Teenhome for missing values ;
1223471   +if missing( Teenhome ) then do;
MPRINT(EM_DIAGRAM):   if missing( Teenhome ) then do;
1223472   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1223473   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1223474   +end;
MPRINT(EM_DIAGRAM):   end;
1223475   +
1223476   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1223477   +drop _3_0 ;
MPRINT(EM_DIAGRAM):   drop _3_0 ;
1223478   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1223479   +   _3_0 = .;
MPRINT(EM_DIAGRAM):   _3_0 = .;
1223480   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1223481   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1223482   +end;
MPRINT(EM_DIAGRAM):   end;
1223483   +else do;
MPRINT(EM_DIAGRAM):   else do;
1223484   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1223485   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1223486   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1223487   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1223488   +      _3_0 = 1;
MPRINT(EM_DIAGRAM):   _3_0 = 1;
1223489   +   end;
MPRINT(EM_DIAGRAM):   end;
1223490   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1223491   +      _3_0 = -1;
MPRINT(EM_DIAGRAM):   _3_0 = -1;
1223492   +   end;
MPRINT(EM_DIAGRAM):   end;
1223493   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1223494   +      _3_0 = .;
MPRINT(EM_DIAGRAM):   _3_0 = .;
1223495   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1223496   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1223497   +   end;
MPRINT(EM_DIAGRAM):   end;
1223498   +end;
MPRINT(EM_DIAGRAM):   end;
1223499   +
1223500   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1223501   +drop _4_0 ;
MPRINT(EM_DIAGRAM):   drop _4_0 ;
1223502   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1223503   +   _4_0 = .;
MPRINT(EM_DIAGRAM):   _4_0 = .;
1223504   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1223505   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1223506   +end;
MPRINT(EM_DIAGRAM):   end;
1223507   +else do;
MPRINT(EM_DIAGRAM):   else do;
1223508   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1223509   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1223510   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1223511   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1223512   +      _4_0 = 1;
MPRINT(EM_DIAGRAM):   _4_0 = 1;
1223513   +   end;
MPRINT(EM_DIAGRAM):   end;
1223514   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1223515   +      _4_0 = -1;
MPRINT(EM_DIAGRAM):   _4_0 = -1;
1223516   +   end;
MPRINT(EM_DIAGRAM):   end;
1223517   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1223518   +      _4_0 = .;
MPRINT(EM_DIAGRAM):   _4_0 = .;
1223519   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1223520   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1223521   +   end;
MPRINT(EM_DIAGRAM):   end;
1223522   +end;
MPRINT(EM_DIAGRAM):   end;
1223523   +
1223524   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1223525   +drop _9_0 _9_1 _9_2 _9_3 ;
MPRINT(EM_DIAGRAM):   drop _9_0 _9_1 _9_2 _9_3 ;
1223526   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1223527   +_9_0 = 0;
MPRINT(EM_DIAGRAM):   _9_0 = 0;
1223528   +_9_1 = 0;
MPRINT(EM_DIAGRAM):   _9_1 = 0;
1223529   +_9_2 = 0;
MPRINT(EM_DIAGRAM):   _9_2 = 0;
1223530   +_9_3 = 0;
MPRINT(EM_DIAGRAM):   _9_3 = 0;
1223531   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1223532   +   _9_0 = .;
MPRINT(EM_DIAGRAM):   _9_0 = .;
1223533   +   _9_1 = .;
MPRINT(EM_DIAGRAM):   _9_1 = .;
1223534   +   _9_2 = .;
MPRINT(EM_DIAGRAM):   _9_2 = .;
1223535   +   _9_3 = .;
MPRINT(EM_DIAGRAM):   _9_3 = .;
1223536   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1223537   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1223538   +end;
MPRINT(EM_DIAGRAM):   end;
1223539   +else do;
MPRINT(EM_DIAGRAM):   else do;
1223540   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1223541   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1223542   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1223543   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1223544   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1223545   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1223546   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1223547   +            _9_0 = 1;
MPRINT(EM_DIAGRAM):   _9_0 = 1;
1223548   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1223549   +         end;
MPRINT(EM_DIAGRAM):   end;
1223550   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1223551   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1223552   +               _9_1 = 1;
MPRINT(EM_DIAGRAM):   _9_1 = 1;
1223553   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1223554   +            end;
MPRINT(EM_DIAGRAM):   end;
1223555   +         end;
MPRINT(EM_DIAGRAM):   end;
1223556   +      end;
MPRINT(EM_DIAGRAM):   end;
1223557   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1223558   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1223559   +            _9_2 = 1;
MPRINT(EM_DIAGRAM):   _9_2 = 1;
1223560   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1223561   +         end;
MPRINT(EM_DIAGRAM):   end;
1223562   +      end;
MPRINT(EM_DIAGRAM):   end;
1223563   +   end;
MPRINT(EM_DIAGRAM):   end;
1223564   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1223565   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1223566   +         _9_3 = 1;
MPRINT(EM_DIAGRAM):   _9_3 = 1;
1223567   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1223568   +      end;
MPRINT(EM_DIAGRAM):   end;
1223569   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1223570   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1223571   +            _9_0 = -1;
MPRINT(EM_DIAGRAM):   _9_0 = -1;
1223572   +            _9_1 = -1;
MPRINT(EM_DIAGRAM):   _9_1 = -1;
1223573   +            _9_2 = -1;
MPRINT(EM_DIAGRAM):   _9_2 = -1;
1223574   +            _9_3 = -1;
MPRINT(EM_DIAGRAM):   _9_3 = -1;
1223575   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1223576   +         end;
MPRINT(EM_DIAGRAM):   end;
1223577   +      end;
MPRINT(EM_DIAGRAM):   end;
1223578   +   end;
MPRINT(EM_DIAGRAM):   end;
1223579   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1223580   +      _9_0 = .;
MPRINT(EM_DIAGRAM):   _9_0 = .;
1223581   +      _9_1 = .;
MPRINT(EM_DIAGRAM):   _9_1 = .;
1223582   +      _9_2 = .;
MPRINT(EM_DIAGRAM):   _9_2 = .;
1223583   +      _9_3 = .;
MPRINT(EM_DIAGRAM):   _9_3 = .;
1223584   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1223585   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1223586   +   end;
MPRINT(EM_DIAGRAM):   end;
1223587   +end;
MPRINT(EM_DIAGRAM):   end;
1223588   +
1223589   +*** If missing inputs, use averages;
MPRINT(EM_DIAGRAM):   *** If missing inputs, use averages;
1223590   +if _DM_BAD > 0 then do;
MPRINT(EM_DIAGRAM):   if _DM_BAD > 0 then do;
1223591   +   _P0 = 0.151221567;
MPRINT(EM_DIAGRAM):   _P0 = 0.151221567;
1223592   +   _P1 = 0.848778433;
MPRINT(EM_DIAGRAM):   _P1 = 0.848778433;
1223593   +   goto REG12DR1;
MPRINT(EM_DIAGRAM):   goto REG12DR1;
1223594   +end;
MPRINT(EM_DIAGRAM):   end;
1223595   +
1223596   +*** Compute Linear Predictor;
MPRINT(EM_DIAGRAM):   *** Compute Linear Predictor;
1223597   +drop _TEMP;
MPRINT(EM_DIAGRAM):   drop _TEMP;
1223598   +drop _LP0;
MPRINT(EM_DIAGRAM):   drop _LP0;
1223599   +_LP0 = 0;
MPRINT(EM_DIAGRAM):   _LP0 = 0;
1223600   +
1223601   +***  Effect: AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Effect: AcceptedCmp3 ;
1223602   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1223603   +_LP0 = _LP0 + (   -0.41254575292144) * _TEMP * _3_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.41254575292144) * _TEMP * _3_0;
1223604   +
1223605   +***  Effect: AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Effect: AcceptedCmp4 ;
1223606   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1223607   +_LP0 = _LP0 + (    0.34675190501967) * _TEMP * _4_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.34675190501967) * _TEMP * _4_0;
1223608   +
1223609   +***  Effect: AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   *** Effect: AcceptedCmpTotal ;
1223610   +_TEMP = AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   _TEMP = AcceptedCmpTotal ;
1223611   +_LP0 = _LP0 + (    1.80745311910799 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.80745311910799 * _TEMP);
1223612   +
1223613   +***  Effect: Age ;
MPRINT(EM_DIAGRAM):   *** Effect: Age ;
1223614   +_TEMP = Age ;
MPRINT(EM_DIAGRAM):   _TEMP = Age ;
1223615   +_LP0 = _LP0 + (   -0.01852391433447 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.01852391433447 * _TEMP);
1223616   +
1223617   +***  Effect: Frq ;
MPRINT(EM_DIAGRAM):   *** Effect: Frq ;
1223618   +_TEMP = Frq ;
MPRINT(EM_DIAGRAM):   _TEMP = Frq ;
1223619   +_LP0 = _LP0 + (   -0.05045980295154 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.05045980295154 * _TEMP);
1223620   +
1223621   +***  Effect: Income ;
MPRINT(EM_DIAGRAM):   *** Effect: Income ;
1223622   +_TEMP = Income ;
MPRINT(EM_DIAGRAM):   _TEMP = Income ;
1223623   +_LP0 = _LP0 + (     0.0000456777011 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.0000456777011 * _TEMP);
1223624   +
1223625   +***  Effect: Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Effect: Marital_Status ;
1223626   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1223627   +_LP0 = _LP0 + (    0.19470733105664) * _TEMP * _9_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.19470733105664) * _TEMP * _9_0;
1223628   +_LP0 = _LP0 + (   -0.66737124261283) * _TEMP * _9_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.66737124261283) * _TEMP * _9_1;
1223629   +_LP0 = _LP0 + (    0.47354458382979) * _TEMP * _9_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.47354458382979) * _TEMP * _9_2;
1223630   +_LP0 = _LP0 + (   -0.76484617755918) * _TEMP * _9_3;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.76484617755918) * _TEMP * _9_3;
1223631   +
1223632   +***  Effect: NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumDealsPurchases ;
1223633   +_TEMP = NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumDealsPurchases ;
1223634   +_LP0 = _LP0 + (    0.38683487817532 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.38683487817532 * _TEMP);
1223635   +
1223636   +***  Effect: NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   *** Effect: NumWebVisitsMonth ;
1223637   +_TEMP = NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   _TEMP = NumWebVisitsMonth ;
1223638   +_LP0 = _LP0 + (    0.30399773949187 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.30399773949187 * _TEMP);
1223639   +
1223640   +***  Effect: RMntFrq ;
MPRINT(EM_DIAGRAM):   *** Effect: RMntFrq ;
1223641   +_TEMP = RMntFrq ;
MPRINT(EM_DIAGRAM):   _TEMP = RMntFrq ;
1223642   +_LP0 = _LP0 + (    0.01122718563179 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.01122718563179 * _TEMP);
1223643   +
1223644   +***  Effect: Recency ;
MPRINT(EM_DIAGRAM):   *** Effect: Recency ;
1223645   +_TEMP = Recency ;
MPRINT(EM_DIAGRAM):   _TEMP = Recency ;
1223646   +_LP0 = _LP0 + (   -0.06483187112579 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.06483187112579 * _TEMP);
1223647   +
1223648   +***  Effect: Teenhome ;
MPRINT(EM_DIAGRAM):   *** Effect: Teenhome ;
1223649   +_TEMP = Teenhome ;
MPRINT(EM_DIAGRAM):   _TEMP = Teenhome ;
1223650   +_LP0 = _LP0 + (   -1.33693437973843 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.33693437973843 * _TEMP);
1223651   +
1223652   +*** Naive Posterior Probabilities;
MPRINT(EM_DIAGRAM):   *** Naive Posterior Probabilities;
1223653   +drop _MAXP _IY _P0 _P1;
MPRINT(EM_DIAGRAM):   drop _MAXP _IY _P0 _P1;
1223654   +_TEMP =    -3.46388239032287 + _LP0;
MPRINT(EM_DIAGRAM):   _TEMP = -3.46388239032287 + _LP0;
1223655   +if (_TEMP < 0) then do;
MPRINT(EM_DIAGRAM):   if (_TEMP < 0) then do;
1223656   +   _TEMP = exp(_TEMP);
MPRINT(EM_DIAGRAM):   _TEMP = exp(_TEMP);
1223657   +   _P0 = _TEMP / (1 + _TEMP);
MPRINT(EM_DIAGRAM):   _P0 = _TEMP / (1 + _TEMP);
1223658   +end;
MPRINT(EM_DIAGRAM):   end;
1223659   +else _P0 = 1 / (1 + exp(-_TEMP));
MPRINT(EM_DIAGRAM):   else _P0 = 1 / (1 + exp(-_TEMP));
1223660   +_P1 = 1.0 - _P0;
MPRINT(EM_DIAGRAM):   _P1 = 1.0 - _P0;
1223661   +
1223662   +REG12DR1:
1223663   +
1223664   +
1223665   +*** Posterior Probabilities and Predicted Level;
MPRINT(EM_DIAGRAM):   REG12DR1: *** Posterior Probabilities and Predicted Level;
1223666   +label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1223667   +label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1223668   +P_DepVar1 = _P0;
MPRINT(EM_DIAGRAM):   P_DepVar1 = _P0;
1223669   +_MAXP = _P0;
MPRINT(EM_DIAGRAM):   _MAXP = _P0;
1223670   +_IY = 1;
MPRINT(EM_DIAGRAM):   _IY = 1;
1223671   +P_DepVar0 = _P1;
MPRINT(EM_DIAGRAM):   P_DepVar0 = _P1;
1223672   +if (_P1 >  _MAXP + 1E-8) then do;
MPRINT(EM_DIAGRAM):   if (_P1 > _MAXP + 1E-8) then do;
1223673   +   _MAXP = _P1;
MPRINT(EM_DIAGRAM):   _MAXP = _P1;
1223674   +   _IY = 2;
MPRINT(EM_DIAGRAM):   _IY = 2;
1223675   +end;
MPRINT(EM_DIAGRAM):   end;
1223676   +I_DepVar = REG12DRF[_IY];
MPRINT(EM_DIAGRAM):   I_DepVar = REG12DRF[_IY];
1223677   +U_DepVar = REG12DRU[_IY];
MPRINT(EM_DIAGRAM):   U_DepVar = REG12DRU[_IY];
1223678   +
1223679   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1223680   +***** end scoring code for regression;
MPRINT(EM_DIAGRAM):   ***** end scoring code for regression;
1223681   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1223682    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1223683    quit;
1223684    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1223685    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1223686    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1223687    retain ID 2 Node "Reg12";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Reg12";
1223688    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1223689    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 380 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 380 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1223690    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1223691    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1223692    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 380 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 380 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1223693    proc sort data=EMWS8.Reg12_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Reg12_variableset out=_temp2(keep=NAME CREATOR);
1223694    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1223695    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.REG12_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1223696    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1223697    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1223698    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1223699    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1223700    proc contents data=EMWS8.Reg12_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Reg12_train out=_meta(keep=NAME) noprint;
1223701    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1223702    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1223703    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1223704    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 53 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1223705    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1223706    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1223707    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1223708    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 53 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1223709    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1223710    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1223710  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 180 rows and 5 columns.

1223711    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1223712    proc append base=EMWS8.Ensmbl12_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl12_FCMP data=_tempx;
1223713    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL12_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 180 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL12_FCMP has 180 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1223714    filename _pref
1223714  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
1223715    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1223716    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
1223717   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1223718   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1223719   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1223720   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1223721   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1223722   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1223723    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1223724    quit;
1223725    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1223726    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1223727    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1223728    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
1223729    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1223730    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1223731    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1223732    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1223733    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1223734    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
1223735    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1223736    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1223737    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1223738    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1223739    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1223740    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1223741    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
1223742    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1223743    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1223744    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1223745    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1223746    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1223747    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1223748    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1223749    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1223750    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1223751    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1223751  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

1223752    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1223753    proc append base=EMWS8.Ensmbl12_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl12_FCMP data=_tempx;
1223754    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL12_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL12_FCMP has 184 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1223755    filename _pref
1223755  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
1223756    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1223757    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
1223758   +
1223759   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1223760   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1223760  !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1223761   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1223762   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1223763   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1223764   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1223765   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1223766    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1223767    quit;
1223768    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1223769    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1223770    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1223771    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
1223772    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1223773    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1223774    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1223775    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1223776    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1223777    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
1223778    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1223779    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1223780    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1223781    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1223782    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1223783    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1223784    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
1223785    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1223786    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1223787    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1223788    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1223789    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1223790    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1223791    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1223792    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1223793    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1223794    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1223794  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

1223795    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1223796    proc append base=EMWS8.Ensmbl12_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl12_FCMP data=_tempx;
1223797    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL12_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL12_FCMP has 223 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1223798    filename _pref
1223798  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
1223799    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1223800    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
1223801   +
1223802   +
1223803   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
1223804   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
1223805   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
1223806   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
1223807   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
1223808   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1223809   +
1223810   +
1223811   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
1223812   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
1223813   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
1223814   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
1223815   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
1223816   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1223817   +
1223818   +
1223819   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
1223820   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
1223821   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
1223822   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
1223823   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
1223824   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1223825   +
1223826   +
1223827   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
1223828   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
1223829   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
1223830   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
1223831   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
1223832   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1223833   +
1223834   +
1223835   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
1223836   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
1223837   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
1223838   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
1223839   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
1223840   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1223841   +
1223842   +
1223843   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
1223844   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
1223845   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
1223846   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
1223847   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
1223848   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1223849   +
1223850   +
1223851   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
1223852   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
1223853   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
1223854   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
1223855   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
1223856   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1223857   +
1223858   +
1223859   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
1223860   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
1223861   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
1223862   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
1223863   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
1223864   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1223865   +if
1223866   +_FILTERNORM1 not in ( '.')
1223867   + and
1223868   +_FILTERNORM2 not in ( '.')
1223869   + and
1223870   +_FILTERNORM3 not in ( '.')
1223871   + and
1223872   +_FILTERNORM4 not in ( '.')
1223873   + and
1223874   +_FILTERNORM5 not in ( '.')
1223875   + and
1223876   +_FILTERNORM6 not in ( '.')
1223877   + and
1223878   +_FILTERNORM7 not in ( ' ')
1223879   + and
1223880   +_FILTERNORM8 not in ( ' ')
1223881   +and
1223882   +( Dt_Customer ne .)
1223883   +and ( Income ne . and (Income<=107000))
1223884   +and ( Kidhome ne .)
1223885   +and ( MntFishProducts ne .)
1223886   +and ( MntFruits ne .)
1223887   +and ( MntGoldProds ne .)
1223888   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
1223889   +and ( MntSweetProducts ne .)
1223890   +and ( MntWines ne .)
1223891   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
1223892   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
1223893   +and ( NumStorePurchases ne .)
1223894   +and ( NumWebPurchases ne .)
1223895   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
1223896   +and ( Recency ne .)
1223897   +and ( Teenhome ne .)
1223898   +and ( Year_Birth ne .)
1223899   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
1223900   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
1223901   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
1223902   +end;
MPRINT(EM_DIAGRAM):   end;
1223903   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
1223904   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1223905    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1223906    quit;
1223907    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1223908    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1223909    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1223910    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
1223911    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1223912    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1223913    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1223914    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1223915    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1223916    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
1223917    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1223918    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1223919    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1223920    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1223921    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1223922    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1223923    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
1223924    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

1223925    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1223926    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1223927    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1223928    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1223929    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1223930    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1223931    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1223932    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1223933    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1223933  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

1223934    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1223935    proc append base=EMWS8.Ensmbl12_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl12_FCMP data=_tempx;
1223936    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL12_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL12_FCMP has 289 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1223937    %macro varDept(fcmpdata=,id=);
1223938    %global nobs&id scoreFlag&id;
1223939    %let scoreFlag&id = 0;
1223940    %if &id=1 or ^&fcmpStart %then %do;
1223941    proc sort data=&fcmpdata out=_temp&id nodupkey;
1223942    by NAME;
1223943    where id=&id and LHS in( %let j=1;
1223944    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
1223945    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
1223946    "&var" %let j = %eval(&j+1);
1223947    %end;
1223948    );
1223949    run;
1223950    %let dsid = %sysfunc(open(_temp&id));
1223951    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1223952    %let dsid = %sysfunc(close(&dsid));
1223953    %if &&nobs&id %then %do;
1223954    %let scoreFlag&id = 1;
1223955    %let fcmpStart = 1;
1223956    %end;
1223957    %else %let fcmpStart = 0;
1223958    %end;
1223959    %else %do;
1223960    proc sort data=&fcmpdata out=_tempid;
1223961    where id=&id;
1223962    by LHS;
1223963    run;
1223964    %let dsid = %sysfunc(open(_tempid));
1223965    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1223966    %let dsid = %sysfunc(close(&dsid));
1223967    %if ^&&nobs&id %then %do;
1223968    proc datasets lib=work nolist;
1223969    delete _tempid;
1223970    run;
1223971    quit;
1223972    %end;
1223973    %else %do;
1223974    data _tempAll;
1223975    set %let j=%eval(&id-1);
1223976    %do x=1 %to &j;
1223977    %if &&nobs&x %then %do;
1223978    _temp&x %end;
1223979    %end;
1223980    ;
1223981    run;
1223982    proc sql;
1223983    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
1223983  ! work._tempid p2 where p.name=p2.lhs;
1223984    quit;
1223985    data _temp&id;
1223986    set _temp&id;
1223987    where LHS ne '' and NAME ne '' and Node ne '';
1223988    run;
1223989    proc datasets lib=work nolist;
1223990    delete _tempAll;
1223991    run;
1223992    %let dsid = %sysfunc(open(_temp&id));
1223993    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1223994    %let dsid = %sysfunc(close(&dsid));
1223995    %if ^&&nobs&id %then %do;
1223996    proc datasets lib=work nolist;
1223997    delete _temp&id;
1223998    run;
1223999    quit;
1224000    %end;
1224001    %else %do;
1224002    %let scoreFlag&id = 1;
1224003    data _temp&id;
1224004    set _temp&id;
1224005    where LHS ne NAME and node ne '';
1224006    run;
1224007    %let dsid = %sysfunc(open(_temp&id));
1224008    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1224009    %let dsid = %sysfunc(close(&dsid));
1224010    %if ^&&nobs&id %then %do;
1224011    proc datasets lib=work nolist;
1224012    delete _temp&id;
1224013    run;
1224014    quit;
1224015    %end;
1224016    %else %do;
1224017    proc sort data=_temp&id nodupkey;
1224018    by LHS NAME;
1224019    run;
1224020    %end;
1224021    %end;
1224022    %end;
1224023    %end;
1224024    %mend varDept;
1224025    %macro optCode(outdata=fcmpdata);
1224026    %global fcmpStart;
1224027    %let fcmpStart = 0;
1224028    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
1224029    %let NumNodes=9;
1224030    %do k=1 %to &NumNodes;
1224031    %vardept(fcmpdata=&outdata, id=&k);
1224032    %end;
1224033    %mend optCode;
1224034    %optcode(outData=EMWS8.Ensmbl12_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl12_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL12_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl12_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 48 observations read from the data set EMWS8.ENSMBL12_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 36 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 12 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl12_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL12_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl12_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL12_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl12_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL12_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 12 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 12 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp5;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP5 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl12_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL12_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 12 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 12 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 20 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 20 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 20 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 20 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 20 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 20 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 20 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl12_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL12_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 12 observations read from the data set WORK._TEMP2.
NOTE: There were 20 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 32 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl12_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL12_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl12_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL12_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

1224035    filename _pref
1224035  ! "C:\\predictive-models-project\Workspaces\EMWS8\Reg11\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Reg11\EMPUBLISHSCORE.sas";
1224036    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1224037    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Reg11\EMPUBLISHSCORE.sas.
1224038   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1224039   +*** begin scoring code for regression;
MPRINT(EM_DIAGRAM):   *** begin scoring code for regression;
1224040   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1224041   +
1224042   +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
1224043   +label _WARN_ = 'Warnings' ;
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings' ;
1224044   +
1224045   +length I_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length I_DepVar $ 12;
1224046   +label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1224047   +*** Target Values;
MPRINT(EM_DIAGRAM):   *** Target Values;
1224048   +array REG11DRF [2] $12 _temporary_ ('1' '0' );
MPRINT(EM_DIAGRAM):   array REG11DRF [2] $12 _temporary_ ('1' '0' );
1224049   +label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1224050   +format U_DepVar BEST.;
MPRINT(EM_DIAGRAM):   format U_DepVar BEST.;
1224051   +*** Unnormalized target values;
MPRINT(EM_DIAGRAM):   *** Unnormalized target values;
1224052   +ARRAY REG11DRU[2]  _TEMPORARY_ (1 0);
MPRINT(EM_DIAGRAM):   ARRAY REG11DRU[2] _TEMPORARY_ (1 0);
1224053   +
1224054   +drop _DM_BAD;
MPRINT(EM_DIAGRAM):   drop _DM_BAD;
1224055   +_DM_BAD=0;
MPRINT(EM_DIAGRAM):   _DM_BAD=0;
1224056   +
1224057   +*** Check AcceptedCmpTotal for missing values ;
MPRINT(EM_DIAGRAM):   *** Check AcceptedCmpTotal for missing values ;
1224058   +if missing( AcceptedCmpTotal ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmpTotal ) then do;
1224059   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1224060   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1224061   +end;
MPRINT(EM_DIAGRAM):   end;
1224062   +
1224063   +*** Check Age for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Age for missing values ;
1224064   +if missing( Age ) then do;
MPRINT(EM_DIAGRAM):   if missing( Age ) then do;
1224065   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1224066   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1224067   +end;
MPRINT(EM_DIAGRAM):   end;
1224068   +
1224069   +*** Check Frq for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Frq for missing values ;
1224070   +if missing( Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( Frq ) then do;
1224071   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1224072   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1224073   +end;
MPRINT(EM_DIAGRAM):   end;
1224074   +
1224075   +*** Check Income for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Income for missing values ;
1224076   +if missing( Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( Income ) then do;
1224077   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1224078   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1224079   +end;
MPRINT(EM_DIAGRAM):   end;
1224080   +
1224081   +*** Check NumDealsPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumDealsPurchases for missing values ;
1224082   +if missing( NumDealsPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumDealsPurchases ) then do;
1224083   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1224084   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1224085   +end;
MPRINT(EM_DIAGRAM):   end;
1224086   +
1224087   +*** Check NumWebVisitsMonth for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumWebVisitsMonth for missing values ;
1224088   +if missing( NumWebVisitsMonth ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumWebVisitsMonth ) then do;
1224089   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1224090   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1224091   +end;
MPRINT(EM_DIAGRAM):   end;
1224092   +
1224093   +*** Check RFMstat for missing values ;
MPRINT(EM_DIAGRAM):   *** Check RFMstat for missing values ;
1224094   +if missing( RFMstat ) then do;
MPRINT(EM_DIAGRAM):   if missing( RFMstat ) then do;
1224095   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1224096   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1224097   +end;
MPRINT(EM_DIAGRAM):   end;
1224098   +
1224099   +*** Check RMntFrq for missing values ;
MPRINT(EM_DIAGRAM):   *** Check RMntFrq for missing values ;
1224100   +if missing( RMntFrq ) then do;
MPRINT(EM_DIAGRAM):   if missing( RMntFrq ) then do;
1224101   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1224102   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1224103   +end;
MPRINT(EM_DIAGRAM):   end;
1224104   +
1224105   +*** Check Recency for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Recency for missing values ;
1224106   +if missing( Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( Recency ) then do;
1224107   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1224108   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1224109   +end;
MPRINT(EM_DIAGRAM):   end;
1224110   +
1224111   +*** Check Teenhome for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Teenhome for missing values ;
1224112   +if missing( Teenhome ) then do;
MPRINT(EM_DIAGRAM):   if missing( Teenhome ) then do;
1224113   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1224114   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1224115   +end;
MPRINT(EM_DIAGRAM):   end;
1224116   +
1224117   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1224118   +drop _3_0 ;
MPRINT(EM_DIAGRAM):   drop _3_0 ;
1224119   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1224120   +   _3_0 = .;
MPRINT(EM_DIAGRAM):   _3_0 = .;
1224121   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1224122   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1224123   +end;
MPRINT(EM_DIAGRAM):   end;
1224124   +else do;
MPRINT(EM_DIAGRAM):   else do;
1224125   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1224126   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1224127   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1224128   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1224129   +      _3_0 = 1;
MPRINT(EM_DIAGRAM):   _3_0 = 1;
1224130   +   end;
MPRINT(EM_DIAGRAM):   end;
1224131   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1224132   +      _3_0 = -1;
MPRINT(EM_DIAGRAM):   _3_0 = -1;
1224133   +   end;
MPRINT(EM_DIAGRAM):   end;
1224134   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1224135   +      _3_0 = .;
MPRINT(EM_DIAGRAM):   _3_0 = .;
1224136   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1224137   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1224138   +   end;
MPRINT(EM_DIAGRAM):   end;
1224139   +end;
MPRINT(EM_DIAGRAM):   end;
1224140   +
1224141   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1224142   +drop _4_0 ;
MPRINT(EM_DIAGRAM):   drop _4_0 ;
1224143   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1224144   +   _4_0 = .;
MPRINT(EM_DIAGRAM):   _4_0 = .;
1224145   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1224146   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1224147   +end;
MPRINT(EM_DIAGRAM):   end;
1224148   +else do;
MPRINT(EM_DIAGRAM):   else do;
1224149   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1224150   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1224151   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1224152   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1224153   +      _4_0 = 1;
MPRINT(EM_DIAGRAM):   _4_0 = 1;
1224154   +   end;
MPRINT(EM_DIAGRAM):   end;
1224155   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1224156   +      _4_0 = -1;
MPRINT(EM_DIAGRAM):   _4_0 = -1;
1224157   +   end;
MPRINT(EM_DIAGRAM):   end;
1224158   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1224159   +      _4_0 = .;
MPRINT(EM_DIAGRAM):   _4_0 = .;
1224160   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1224161   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1224162   +   end;
MPRINT(EM_DIAGRAM):   end;
1224163   +end;
MPRINT(EM_DIAGRAM):   end;
1224164   +
1224165   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1224166   +drop _9_0 _9_1 _9_2 _9_3 ;
MPRINT(EM_DIAGRAM):   drop _9_0 _9_1 _9_2 _9_3 ;
1224167   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1224168   +_9_0 = 0;
MPRINT(EM_DIAGRAM):   _9_0 = 0;
1224169   +_9_1 = 0;
MPRINT(EM_DIAGRAM):   _9_1 = 0;
1224170   +_9_2 = 0;
MPRINT(EM_DIAGRAM):   _9_2 = 0;
1224171   +_9_3 = 0;
MPRINT(EM_DIAGRAM):   _9_3 = 0;
1224172   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1224173   +   _9_0 = .;
MPRINT(EM_DIAGRAM):   _9_0 = .;
1224174   +   _9_1 = .;
MPRINT(EM_DIAGRAM):   _9_1 = .;
1224175   +   _9_2 = .;
MPRINT(EM_DIAGRAM):   _9_2 = .;
1224176   +   _9_3 = .;
MPRINT(EM_DIAGRAM):   _9_3 = .;
1224177   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1224178   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1224179   +end;
MPRINT(EM_DIAGRAM):   end;
1224180   +else do;
MPRINT(EM_DIAGRAM):   else do;
1224181   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1224182   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1224183   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1224184   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1224185   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1224186   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1224187   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1224188   +            _9_0 = 1;
MPRINT(EM_DIAGRAM):   _9_0 = 1;
1224189   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1224190   +         end;
MPRINT(EM_DIAGRAM):   end;
1224191   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1224192   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1224193   +               _9_1 = 1;
MPRINT(EM_DIAGRAM):   _9_1 = 1;
1224194   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1224195   +            end;
MPRINT(EM_DIAGRAM):   end;
1224196   +         end;
MPRINT(EM_DIAGRAM):   end;
1224197   +      end;
MPRINT(EM_DIAGRAM):   end;
1224198   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1224199   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1224200   +            _9_2 = 1;
MPRINT(EM_DIAGRAM):   _9_2 = 1;
1224201   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1224202   +         end;
MPRINT(EM_DIAGRAM):   end;
1224203   +      end;
MPRINT(EM_DIAGRAM):   end;
1224204   +   end;
MPRINT(EM_DIAGRAM):   end;
1224205   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1224206   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1224207   +         _9_3 = 1;
MPRINT(EM_DIAGRAM):   _9_3 = 1;
1224208   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1224209   +      end;
MPRINT(EM_DIAGRAM):   end;
1224210   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1224211   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1224212   +            _9_0 = -1;
MPRINT(EM_DIAGRAM):   _9_0 = -1;
1224213   +            _9_1 = -1;
MPRINT(EM_DIAGRAM):   _9_1 = -1;
1224214   +            _9_2 = -1;
MPRINT(EM_DIAGRAM):   _9_2 = -1;
1224215   +            _9_3 = -1;
MPRINT(EM_DIAGRAM):   _9_3 = -1;
1224216   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1224217   +         end;
MPRINT(EM_DIAGRAM):   end;
1224218   +      end;
MPRINT(EM_DIAGRAM):   end;
1224219   +   end;
MPRINT(EM_DIAGRAM):   end;
1224220   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1224221   +      _9_0 = .;
MPRINT(EM_DIAGRAM):   _9_0 = .;
1224222   +      _9_1 = .;
MPRINT(EM_DIAGRAM):   _9_1 = .;
1224223   +      _9_2 = .;
MPRINT(EM_DIAGRAM):   _9_2 = .;
1224224   +      _9_3 = .;
MPRINT(EM_DIAGRAM):   _9_3 = .;
1224225   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1224226   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1224227   +   end;
MPRINT(EM_DIAGRAM):   end;
1224228   +end;
MPRINT(EM_DIAGRAM):   end;
1224229   +
1224230   +*** If missing inputs, use averages;
MPRINT(EM_DIAGRAM):   *** If missing inputs, use averages;
1224231   +if _DM_BAD > 0 then do;
MPRINT(EM_DIAGRAM):   if _DM_BAD > 0 then do;
1224232   +   _P0 = 0.151221567;
MPRINT(EM_DIAGRAM):   _P0 = 0.151221567;
1224233   +   _P1 = 0.848778433;
MPRINT(EM_DIAGRAM):   _P1 = 0.848778433;
1224234   +   goto REG11DR1;
MPRINT(EM_DIAGRAM):   goto REG11DR1;
1224235   +end;
MPRINT(EM_DIAGRAM):   end;
1224236   +
1224237   +*** Compute Linear Predictor;
MPRINT(EM_DIAGRAM):   *** Compute Linear Predictor;
1224238   +drop _TEMP;
MPRINT(EM_DIAGRAM):   drop _TEMP;
1224239   +drop _LP0;
MPRINT(EM_DIAGRAM):   drop _LP0;
1224240   +_LP0 = 0;
MPRINT(EM_DIAGRAM):   _LP0 = 0;
1224241   +
1224242   +***  Effect: AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Effect: AcceptedCmp3 ;
1224243   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1224244   +_LP0 = _LP0 + (   -0.21402292491598) * _TEMP * _3_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.21402292491598) * _TEMP * _3_0;
1224245   +
1224246   +***  Effect: AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Effect: AcceptedCmp4 ;
1224247   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1224248   +_LP0 = _LP0 + (    0.20181176396468) * _TEMP * _4_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.20181176396468) * _TEMP * _4_0;
1224249   +
1224250   +***  Effect: AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   *** Effect: AcceptedCmpTotal ;
1224251   +_TEMP = AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   _TEMP = AcceptedCmpTotal ;
1224252   +_LP0 = _LP0 + (    1.01331254975906 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.01331254975906 * _TEMP);
1224253   +
1224254   +***  Effect: Age ;
MPRINT(EM_DIAGRAM):   *** Effect: Age ;
1224255   +_TEMP = Age ;
MPRINT(EM_DIAGRAM):   _TEMP = Age ;
1224256   +_LP0 = _LP0 + (   -0.00968312823761 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.00968312823761 * _TEMP);
1224257   +
1224258   +***  Effect: Frq ;
MPRINT(EM_DIAGRAM):   *** Effect: Frq ;
1224259   +_TEMP = Frq ;
MPRINT(EM_DIAGRAM):   _TEMP = Frq ;
1224260   +_LP0 = _LP0 + (   -0.03456417718144 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.03456417718144 * _TEMP);
1224261   +
1224262   +***  Effect: Income ;
MPRINT(EM_DIAGRAM):   *** Effect: Income ;
1224263   +_TEMP = Income ;
MPRINT(EM_DIAGRAM):   _TEMP = Income ;
1224264   +_LP0 = _LP0 + (    0.00002539988923 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00002539988923 * _TEMP);
1224265   +
1224266   +***  Effect: Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Effect: Marital_Status ;
1224267   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1224268   +_LP0 = _LP0 + (    0.11081046192241) * _TEMP * _9_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.11081046192241) * _TEMP * _9_0;
1224269   +_LP0 = _LP0 + (   -0.36385893866909) * _TEMP * _9_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.36385893866909) * _TEMP * _9_1;
1224270   +_LP0 = _LP0 + (    0.25486771612086) * _TEMP * _9_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.25486771612086) * _TEMP * _9_2;
1224271   +_LP0 = _LP0 + (   -0.40515143447522) * _TEMP * _9_3;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.40515143447522) * _TEMP * _9_3;
1224272   +
1224273   +***  Effect: NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumDealsPurchases ;
1224274   +_TEMP = NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumDealsPurchases ;
1224275   +_LP0 = _LP0 + (    0.21113804572457 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.21113804572457 * _TEMP);
1224276   +
1224277   +***  Effect: NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   *** Effect: NumWebVisitsMonth ;
1224278   +_TEMP = NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   _TEMP = NumWebVisitsMonth ;
1224279   +_LP0 = _LP0 + (    0.17412114550604 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.17412114550604 * _TEMP);
1224280   +
1224281   +***  Effect: RFMstat ;
MPRINT(EM_DIAGRAM):   *** Effect: RFMstat ;
1224282   +_TEMP = RFMstat ;
MPRINT(EM_DIAGRAM):   _TEMP = RFMstat ;
1224283   +_LP0 = _LP0 + (    0.00006841011087 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00006841011087 * _TEMP);
1224284   +
1224285   +***  Effect: RMntFrq ;
MPRINT(EM_DIAGRAM):   *** Effect: RMntFrq ;
1224286   +_TEMP = RMntFrq ;
MPRINT(EM_DIAGRAM):   _TEMP = RMntFrq ;
1224287   +_LP0 = _LP0 + (    0.00529455452809 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00529455452809 * _TEMP);
1224288   +
1224289   +***  Effect: Recency ;
MPRINT(EM_DIAGRAM):   *** Effect: Recency ;
1224290   +_TEMP = Recency ;
MPRINT(EM_DIAGRAM):   _TEMP = Recency ;
1224291   +_LP0 = _LP0 + (   -0.03257124268465 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.03257124268465 * _TEMP);
1224292   +
1224293   +***  Effect: Teenhome ;
MPRINT(EM_DIAGRAM):   *** Effect: Teenhome ;
1224294   +_TEMP = Teenhome ;
MPRINT(EM_DIAGRAM):   _TEMP = Teenhome ;
1224295   +_LP0 = _LP0 + (   -0.71325798797505 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.71325798797505 * _TEMP);
1224296   +
1224297   +*** Naive Posterior Probabilities;
MPRINT(EM_DIAGRAM):   *** Naive Posterior Probabilities;
1224298   +drop _MAXP _IY _P0 _P1;
MPRINT(EM_DIAGRAM):   drop _MAXP _IY _P0 _P1;
1224299   +_P0 = probnorm((   -2.04830407754231) + _LP0);
MPRINT(EM_DIAGRAM):   _P0 = probnorm(( -2.04830407754231) + _LP0);
1224300   +_P1 = 1.0 - _P0;
MPRINT(EM_DIAGRAM):   _P1 = 1.0 - _P0;
1224301   +
1224302   +REG11DR1:
1224303   +
1224304   +
1224305   +*** Posterior Probabilities and Predicted Level;
MPRINT(EM_DIAGRAM):   REG11DR1: *** Posterior Probabilities and Predicted Level;
1224306   +label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1224307   +label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1224308   +P_DepVar1 = _P0;
MPRINT(EM_DIAGRAM):   P_DepVar1 = _P0;
1224309   +_MAXP = _P0;
MPRINT(EM_DIAGRAM):   _MAXP = _P0;
1224310   +_IY = 1;
MPRINT(EM_DIAGRAM):   _IY = 1;
1224311   +P_DepVar0 = _P1;
MPRINT(EM_DIAGRAM):   P_DepVar0 = _P1;
1224312   +if (_P1 >  _MAXP + 1E-8) then do;
MPRINT(EM_DIAGRAM):   if (_P1 > _MAXP + 1E-8) then do;
1224313   +   _MAXP = _P1;
MPRINT(EM_DIAGRAM):   _MAXP = _P1;
1224314   +   _IY = 2;
MPRINT(EM_DIAGRAM):   _IY = 2;
1224315   +end;
MPRINT(EM_DIAGRAM):   end;
1224316   +I_DepVar = REG11DRF[_IY];
MPRINT(EM_DIAGRAM):   I_DepVar = REG11DRF[_IY];
1224317   +U_DepVar = REG11DRU[_IY];
MPRINT(EM_DIAGRAM):   U_DepVar = REG11DRU[_IY];
1224318   +
1224319   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1224320   +***** end scoring code for regression;
MPRINT(EM_DIAGRAM):   ***** end scoring code for regression;
1224321   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1224322    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1224323    quit;
1224324    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1224325    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1224326    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1224327    retain ID 2 Node "Reg11";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Reg11";
1224328    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1224329    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 342 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 342 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1224330    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1224331    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1224332    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 342 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 342 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1224333    proc sort data=EMWS8.Reg11_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Reg11_variableset out=_temp2(keep=NAME CREATOR);
1224334    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1224335    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.REG11_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1224336    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1224337    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1224338    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1224339    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1224340    proc contents data=EMWS8.Reg11_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Reg11_train out=_meta(keep=NAME) noprint;
1224341    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      

1224342    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1224343    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1224344    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 53 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1224345    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1224346    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1224347    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1224348    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 53 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

1224349    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1224350    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1224350  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 178 rows and 5 columns.

1224351    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1224352    proc append base=EMWS8.Ensmbl12_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl12_FCMP data=_tempx;
1224353    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL12_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 178 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL12_FCMP has 178 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1224354    filename _pref
1224354  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
1224355    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1224356    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
1224357   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1224358   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1224359   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1224360   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1224361   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1224362   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1224363    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1224364    quit;
1224365    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1224366    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1224367    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1224368    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
1224369    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1224370    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1224371    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1224372    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1224373    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1224374    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
1224375    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1224376    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1224377    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1224378    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1224379    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1224380    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1224381    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
1224382    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

1224383    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1224384    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1224385    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1224386    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1224387    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1224388    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1224389    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1224390    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1224391    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1224391  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

1224392    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1224393    proc append base=EMWS8.Ensmbl12_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl12_FCMP data=_tempx;
1224394    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL12_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL12_FCMP has 182 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1224395    filename _pref
1224395  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
1224396    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1224397    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
1224398   +
1224399   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1224400   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1224400  !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1224401   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1224402   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1224403   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1224404   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1224405   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1224406    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1224407    quit;
1224408    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1224409    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1224410    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1224411    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
1224412    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1224413    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1224414    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1224415    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1224416    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1224417    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
1224418    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1224419    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1224420    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1224421    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1224422    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1224423    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1224424    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
1224425    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1224426    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1224427    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1224428    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1224429    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1224430    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1224431    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1224432    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1224433    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1224434    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1224434  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

1224435    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1224436    proc append base=EMWS8.Ensmbl12_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl12_FCMP data=_tempx;
1224437    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL12_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL12_FCMP has 221 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1224438    filename _pref
1224438  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
1224439    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1224440    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
1224441   +
1224442   +
1224443   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
1224444   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
1224445   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
1224446   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
1224447   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
1224448   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1224449   +
1224450   +
1224451   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
1224452   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
1224453   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
1224454   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
1224455   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
1224456   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1224457   +
1224458   +
1224459   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
1224460   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
1224461   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
1224462   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
1224463   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
1224464   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1224465   +
1224466   +
1224467   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
1224468   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
1224469   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
1224470   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
1224471   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
1224472   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1224473   +
1224474   +
1224475   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
1224476   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
1224477   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
1224478   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
1224479   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
1224480   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1224481   +
1224482   +
1224483   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
1224484   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
1224485   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
1224486   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
1224487   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
1224488   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1224489   +
1224490   +
1224491   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
1224492   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
1224493   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
1224494   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
1224495   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
1224496   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1224497   +
1224498   +
1224499   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
1224500   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
1224501   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
1224502   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
1224503   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
1224504   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1224505   +if
1224506   +_FILTERNORM1 not in ( '.')
1224507   + and
1224508   +_FILTERNORM2 not in ( '.')
1224509   + and
1224510   +_FILTERNORM3 not in ( '.')
1224511   + and
1224512   +_FILTERNORM4 not in ( '.')
1224513   + and
1224514   +_FILTERNORM5 not in ( '.')
1224515   + and
1224516   +_FILTERNORM6 not in ( '.')
1224517   + and
1224518   +_FILTERNORM7 not in ( ' ')
1224519   + and
1224520   +_FILTERNORM8 not in ( ' ')
1224521   +and
1224522   +( Dt_Customer ne .)
1224523   +and ( Income ne . and (Income<=107000))
1224524   +and ( Kidhome ne .)
1224525   +and ( MntFishProducts ne .)
1224526   +and ( MntFruits ne .)
1224527   +and ( MntGoldProds ne .)
1224528   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
1224529   +and ( MntSweetProducts ne .)
1224530   +and ( MntWines ne .)
1224531   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
1224532   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
1224533   +and ( NumStorePurchases ne .)
1224534   +and ( NumWebPurchases ne .)
1224535   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
1224536   +and ( Recency ne .)
1224537   +and ( Teenhome ne .)
1224538   +and ( Year_Birth ne .)
1224539   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
1224540   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
1224541   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
1224542   +end;
MPRINT(EM_DIAGRAM):   end;
1224543   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
1224544   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1224545    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1224546    quit;
1224547    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1224548    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1224549    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1224550    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
1224551    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1224552    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1224553    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1224554    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1224555    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1224556    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
1224557    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1224558    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1224559    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1224560    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1224561    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1224562    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1224563    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
1224564    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

1224565    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1224566    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1224567    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1224568    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1224569    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1224570    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1224571    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1224572    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1224573    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1224573  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

1224574    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1224575    proc append base=EMWS8.Ensmbl12_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl12_FCMP data=_tempx;
1224576    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL12_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL12_FCMP has 287 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1224577    %macro varDept(fcmpdata=,id=);
1224578    %global nobs&id scoreFlag&id;
1224579    %let scoreFlag&id = 0;
1224580    %if &id=1 or ^&fcmpStart %then %do;
1224581    proc sort data=&fcmpdata out=_temp&id nodupkey;
1224582    by NAME;
1224583    where id=&id and LHS in( %let j=1;
1224584    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
1224585    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
1224586    "&var" %let j = %eval(&j+1);
1224587    %end;
1224588    );
1224589    run;
1224590    %let dsid = %sysfunc(open(_temp&id));
1224591    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1224592    %let dsid = %sysfunc(close(&dsid));
1224593    %if &&nobs&id %then %do;
1224594    %let scoreFlag&id = 1;
1224595    %let fcmpStart = 1;
1224596    %end;
1224597    %else %let fcmpStart = 0;
1224598    %end;
1224599    %else %do;
1224600    proc sort data=&fcmpdata out=_tempid;
1224601    where id=&id;
1224602    by LHS;
1224603    run;
1224604    %let dsid = %sysfunc(open(_tempid));
1224605    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1224606    %let dsid = %sysfunc(close(&dsid));
1224607    %if ^&&nobs&id %then %do;
1224608    proc datasets lib=work nolist;
1224609    delete _tempid;
1224610    run;
1224611    quit;
1224612    %end;
1224613    %else %do;
1224614    data _tempAll;
1224615    set %let j=%eval(&id-1);
1224616    %do x=1 %to &j;
1224617    %if &&nobs&x %then %do;
1224618    _temp&x %end;
1224619    %end;
1224620    ;
1224621    run;
1224622    proc sql;
1224623    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
1224623  ! work._tempid p2 where p.name=p2.lhs;
1224624    quit;
1224625    data _temp&id;
1224626    set _temp&id;
1224627    where LHS ne '' and NAME ne '' and Node ne '';
1224628    run;
1224629    proc datasets lib=work nolist;
1224630    delete _tempAll;
1224631    run;
1224632    %let dsid = %sysfunc(open(_temp&id));
1224633    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1224634    %let dsid = %sysfunc(close(&dsid));
1224635    %if ^&&nobs&id %then %do;
1224636    proc datasets lib=work nolist;
1224637    delete _temp&id;
1224638    run;
1224639    quit;
1224640    %end;
1224641    %else %do;
1224642    %let scoreFlag&id = 1;
1224643    data _temp&id;
1224644    set _temp&id;
1224645    where LHS ne NAME and node ne '';
1224646    run;
1224647    %let dsid = %sysfunc(open(_temp&id));
1224648    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1224649    %let dsid = %sysfunc(close(&dsid));
1224650    %if ^&&nobs&id %then %do;
1224651    proc datasets lib=work nolist;
1224652    delete _temp&id;
1224653    run;
1224654    quit;
1224655    %end;
1224656    %else %do;
1224657    proc sort data=_temp&id nodupkey;
1224658    by LHS NAME;
1224659    run;
1224660    %end;
1224661    %end;
1224662    %end;
1224663    %end;
1224664    %mend varDept;
1224665    %macro optCode(outdata=fcmpdata);
1224666    %global fcmpStart;
1224667    %let fcmpStart = 0;
1224668    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
1224669    %let NumNodes=9;
1224670    %do k=1 %to &NumNodes;
1224671    %vardept(fcmpdata=&outdata, id=&k);
1224672    %end;
1224673    %mend optCode;
1224674    %optcode(outData=EMWS8.Ensmbl12_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl12_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL12_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl12_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 52 observations read from the data set EMWS8.ENSMBL12_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 39 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 13 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl12_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL12_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl12_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL12_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl12_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL12_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 13 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 13 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp5;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP5 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl12_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL12_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 13 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 13 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 32 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 32 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 32 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 32 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 32 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 32 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 32 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl12_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL12_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 13 observations read from the data set WORK._TEMP2.
NOTE: There were 32 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 45 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl12_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL12_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl12_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL12_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

1224675    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
1224676    * Ensmbl12: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * Ensmbl12: Computing metadata for TRAIN data;
1224677    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;

NOTE: View EMWS8.ENSMBL12_TRAIN.VIEW used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
      
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta 
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl12\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS8.Ensmbl12_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS8.Ensmbl12_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS8.Ensmbl12_TRAIN out=WORK.M0IG1QPA noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0IG1QPA;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20 
INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M0IG1QPA(keep=name type length label format formatl 
formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then format = strip(format)!!strip(put(formatl, 
best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, 
best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then informat = 
strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, 
best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0IG1QPA;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M0IG1QPA;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M3N6GWZU NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3N6GWZU;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M3N6GWZU;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1X_CIAV(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M3N6GWZU;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3N6GWZU;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 
FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M3N6GWZU;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" 
"MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" 
"QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" "YEAR" "YYMMDD" "YYMON" 
"YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" 
"EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) 
formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = 
"DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) 
formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" 
"NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" 
"SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = 
"DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then 
level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 
'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 
'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ 
('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 
'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 
'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3N6GWZU;
MPRINT(EMADVISECOLUMNS):   set WORK.M3N6GWZU;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= 
"Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= 
"Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower limit" UPPERLIMIT= 
"Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= 
"Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Neural42_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Neural42_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl12_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT 
LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "Ensmbl12";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("P_DEPVAR1") creator = "Ensmbl12";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR1") creator = "Ensmbl12";
MPRINT(EM_DIAGRAM):   when("P_DEPVAR0") creator = "Ensmbl12";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR0") creator = "Ensmbl12";
MPRINT(EM_DIAGRAM):   when("F_DEPVAR") creator = "Ensmbl12";
MPRINT(EM_DIAGRAM):   when("I_DEPVAR") creator = "Ensmbl12";
MPRINT(EM_DIAGRAM):   when("U_DEPVAR") creator = "Ensmbl12";
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "Ensmbl12";
MPRINT(EM_DIAGRAM):   when("DEPVAR") model = "Ensmbl12";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl12: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   if NAME in( "I_DepVar" "F_DepVar" "U_DepVar" "_WARN_" "P_DepVar1" 
"P_DepVar0" "R_DepVar1" "R_DepVar0" ) then CREATOR="Ensmbl12";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
1224997    data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
1224998    set EMWS8.Ensmbl12_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl12_EMINFO;
1224999    where DATA='Ensmbl12' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='Ensmbl12' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 
'MODEL');
1225000    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.ENSMBL12_EMINFO.
      WHERE (DATA='Ensmbl12') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1225001    data EMWS8.Ensmbl12_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS8.Ensmbl12_EMINFO;
1225002    length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
1225003    input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
1225004    cards;
MPRINT(EM_DIAGRAM):   cards;

NOTE: The data set EMWS8.ENSMBL12_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   run;
1225008    run;
1225009    data EMWS8.Ensmbl12_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl12_EMINFO;
1225010    set EMWS8.Ensmbl12_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl12_EMINFO WORK.MODELTEMP_INFO;
1225011    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.ENSMBL12_EMINFO.
NOTE: There were 0 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS8.ENSMBL12_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1225012    proc sort data = EMWS8.Ensmbl12_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.Ensmbl12_EMINFO NOTHREADS;
1225013    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
1225014    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.ENSMBL12_EMINFO.
NOTE: The data set EMWS8.ENSMBL12_EMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1225015    proc sort data = EMWS8.Neural42_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.Neural42_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
1225016    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
1225017    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set EMWS8.NEURAL42_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1225018    proc sort data = EMWS8.Ensmbl12_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS8.Ensmbl12_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
1225019    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
1225020    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 3 observations read from the data set EMWS8.ENSMBL12_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1225021    data EMWS8.Ensmbl12_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl12_EMINFO;
1225022    merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
1225023    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
1225024    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 3 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS8.ENSMBL12_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1225025    proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
1225026    delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
1225027    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
1225028    quit;
MPRINT(EM_DIAGRAM):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

NOTE: View EMWS8.ENSMBL12_TRAIN.VIEW used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      
NOTE: View EMWS8.ENSMBL12_VALIDATE.VIEW used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
      
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
