MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "28. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "20.14 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                28. April 2016
Time:                20.14 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O2WSMA27 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural34\EMSCORE.out" encoding="UTF-8" 
NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O2WSMA27 new;
MPRINT(EM_DIAGRAM):   run;
978228     filename emflow
978228   ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural34\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural34\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * AutoNeural34: Scoring DATA data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
978229     *------------------------------------------------------------*;
978230     * AutoNeural34: Scoring DATA data;
978231     *------------------------------------------------------------*;
978232     data EMWS8.AutoNeural34_TRAIN
978233     / view=EMWS8.AutoNeural34_TRAIN
978234     ;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural34_TRAIN / view=EMWS8.AutoNeural34_TRAIN ;
978235     set EMWS8.Meta3_TRAIN
978236     ;
MPRINT(EM_DIAGRAM):   set EMWS8.Meta3_TRAIN ;
978237     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural34\EMFLOWSCORE.sas.
978238    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
978239    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
978240    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
978241    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
978242    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
978243    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
978244    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
978245    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
978246    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
978247    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
978248    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
978249    +LENGTH _WARN_ $4
978250    +      F_DepVar  $ 12
978251    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
978252    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
978253    +
978254    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
978255    +
978256    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
978257    +
978258    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
978259    +
978260    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
978261    +
978262    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
978263    +
978264    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
978265    +
978266    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
978267    +
978268    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
978269    +
978270    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
978271    +
978272    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
978273    +
978274    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
978275    +
978276    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
978277    +
978278    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
978279    +
978280    +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
978281    +
978282    +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
978283    +
978284    +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
978285    +
978286    +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
978287    +
978288    +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
978289    +
978290    +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
978291    +
978292    +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
978293    +
978294    +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
978295    +
978296    +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
978297    +
978298    +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
978299    +
978300    +      label H2x1_3 = 'Hidden: H2x1_=3' ;
MPRINT(EM_DIAGRAM):   label H2x1_3 = 'Hidden: H2x1_=3' ;
978301    +
978302    +      label H2x1_4 = 'Hidden: H2x1_=4' ;
MPRINT(EM_DIAGRAM):   label H2x1_4 = 'Hidden: H2x1_=4' ;
978303    +
978304    +      label H2x1_5 = 'Hidden: H2x1_=5' ;
MPRINT(EM_DIAGRAM):   label H2x1_5 = 'Hidden: H2x1_=5' ;
978305    +
978306    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
978307    +
978308    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
978309    +
978310    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
978311    +
978312    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
978313    +
978314    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
978315    +
978316    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
978317    +
978318    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
978319    +
978320    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
978321    +
978322    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
978323    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
978324    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
978325    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
978326    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
978327    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
978328    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
978329    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
978330    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
978331    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
978332    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
978333    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
978334    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
978335    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
978336    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
978337    +end;
MPRINT(EM_DIAGRAM):   end;
978338    +else do;
MPRINT(EM_DIAGRAM):   else do;
978339    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
978340    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
978341    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
978342    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
978343    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
978344    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
978345    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
978346    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
978347    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
978348    +         end;
MPRINT(EM_DIAGRAM):   end;
978349    +         else do;
MPRINT(EM_DIAGRAM):   else do;
978350    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
978351    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
978352    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
978353    +            end;
MPRINT(EM_DIAGRAM):   end;
978354    +         end;
MPRINT(EM_DIAGRAM):   end;
978355    +      end;
MPRINT(EM_DIAGRAM):   end;
978356    +      else do;
MPRINT(EM_DIAGRAM):   else do;
978357    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
978358    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
978359    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
978360    +         end;
MPRINT(EM_DIAGRAM):   end;
978361    +      end;
MPRINT(EM_DIAGRAM):   end;
978362    +   end;
MPRINT(EM_DIAGRAM):   end;
978363    +   else do;
MPRINT(EM_DIAGRAM):   else do;
978364    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
978365    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
978366    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
978367    +      end;
MPRINT(EM_DIAGRAM):   end;
978368    +      else do;
MPRINT(EM_DIAGRAM):   else do;
978369    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
978370    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
978371    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
978372    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
978373    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
978374    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
978375    +         end;
MPRINT(EM_DIAGRAM):   end;
978376    +      end;
MPRINT(EM_DIAGRAM):   end;
978377    +   end;
MPRINT(EM_DIAGRAM):   end;
978378    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
978379    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
978380    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
978381    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
978382    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
978383    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
978384    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
978385    +   end;
MPRINT(EM_DIAGRAM):   end;
978386    +end;
MPRINT(EM_DIAGRAM):   end;
978387    +
978388    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
978389    +*** Checking missing input Interval
978390    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
978391    +
978392    +IF NMISS(
978393    +   AcceptedCmpTotal ,
978394    +   Frq ,
978395    +   Mnt ,
978396    +   MntMeatProducts ,
978397    +   NumCatalogPurchases ,
978398    +   NumDealsPurchases ,
978399    +   NumWebVisitsMonth ,
978400    +   Recency   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Mnt , MntMeatProducts , 
NumCatalogPurchases , NumDealsPurchases , NumWebVisitsMonth , Recency ) THEN DO;
978401    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
978402    +
978403    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
978404    +END;
MPRINT(EM_DIAGRAM):   END;
978405    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
978406    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
978407    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
978408    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
978409    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
978410    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
978411    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
978412    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
978413    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
978414    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
978415    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
978416    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
978417    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
978418    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
978419    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
978420    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
978421    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
978422    +END;
MPRINT(EM_DIAGRAM):   END;
978423    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
978424    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
978425    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
978426    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
978427    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
978428    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
978429    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
978430    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
978431    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
978432    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
978433    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
978434    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
978435    +   ELSE S_NumCatalogPurchases
978436    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
978437    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
978438    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
978439    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
978440    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
978441    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
978442    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
978443    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
978444    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
978445    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
978446    +END;
MPRINT(EM_DIAGRAM):   END;
978447    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
978448    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
978449    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
978450    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
978451    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
978452    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
978453    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
978454    +   H1x1_1  =    -1.54500197834221 * S_AcceptedCmpTotal
978455    +          +     2.13269624676531 * S_Frq  +     0.91018334305327 * S_Mnt
978456    +          +    -1.92258561684999 * S_MntMeatProducts
978457    +          +     -1.7098915194593 * S_NumCatalogPurchases
978458    +          +    -0.73092398706652 * S_NumDealsPurchases
978459    +          +    -1.52371325097768 * S_NumWebVisitsMonth
978460    +          +     2.59712285696981 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -1.54500197834221 * S_AcceptedCmpTotal + 2.13269624676531 * 
S_Frq + 0.91018334305327 * S_Mnt + -1.92258561684999 * S_MntMeatProducts + -1.7098915194593 * 
S_NumCatalogPurchases + -0.73092398706652 * S_NumDealsPurchases + -1.52371325097768 * 
S_NumWebVisitsMonth + 2.59712285696981 * S_Recency ;
978461    +   H1x1_2  =    -0.62469573898784 * S_AcceptedCmpTotal
978462    +          +    -3.01294208996145 * S_Frq  +    -4.18014732340271 * S_Mnt
978463    +          +     3.63686708458831 * S_MntMeatProducts
978464    +          +     0.32632650897658 * S_NumCatalogPurchases
978465    +          +     1.27820262549135 * S_NumDealsPurchases
978466    +          +    -0.18941034658667 * S_NumWebVisitsMonth
978467    +          +     1.34455705644101 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.62469573898784 * S_AcceptedCmpTotal + -3.01294208996145 * 
S_Frq + -4.18014732340271 * S_Mnt + 3.63686708458831 * S_MntMeatProducts + 0.32632650897658 * 
S_NumCatalogPurchases + 1.27820262549135 * S_NumDealsPurchases + -0.18941034658667 * 
S_NumWebVisitsMonth + 1.34455705644101 * S_Recency ;
978468    +   H1x1_3  =    -1.66686655426537 * S_AcceptedCmpTotal
978469    +          +     1.67787744859875 * S_Frq  +     1.97664267386501 * S_Mnt
978470    +          +    -0.10252809999866 * S_MntMeatProducts
978471    +          +    -2.01730745054613 * S_NumCatalogPurchases
978472    +          +     0.36276273056202 * S_NumDealsPurchases
978473    +          +    -2.03441379397145 * S_NumWebVisitsMonth
978474    +          +     2.93250821506079 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -1.66686655426537 * S_AcceptedCmpTotal + 1.67787744859875 * 
S_Frq + 1.97664267386501 * S_Mnt + -0.10252809999866 * S_MntMeatProducts + -2.01730745054613 * 
S_NumCatalogPurchases + 0.36276273056202 * S_NumDealsPurchases + -2.03441379397145 * 
S_NumWebVisitsMonth + 2.93250821506079 * S_Recency ;
978475    +   H1x1_4  =     0.78243113686776 * S_AcceptedCmpTotal
978476    +          +    -1.82663131535617 * S_Frq  +      0.2881963502664 * S_Mnt
978477    +          +     8.03567059273376 * S_MntMeatProducts
978478    +          +     2.16664649845379 * S_NumCatalogPurchases
978479    +          +     0.84009978401032 * S_NumDealsPurchases
978480    +          +     0.11354933533503 * S_NumWebVisitsMonth
978481    +          +    -1.07901935721913 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.78243113686776 * S_AcceptedCmpTotal + -1.82663131535617 * 
S_Frq + 0.2881963502664 * S_Mnt + 8.03567059273376 * S_MntMeatProducts + 2.16664649845379 * 
S_NumCatalogPurchases + 0.84009978401032 * S_NumDealsPurchases + 0.11354933533503 * 
S_NumWebVisitsMonth + -1.07901935721913 * S_Recency ;
978482    +   H1x1_5  =       0.520662992966 * S_AcceptedCmpTotal
978483    +          +     2.30709719298221 * S_Frq  +    -1.24685702053791 * S_Mnt
978484    +          +     1.87107978843927 * S_MntMeatProducts
978485    +          +    -0.31123291719979 * S_NumCatalogPurchases
978486    +          +    -2.80886037303887 * S_NumDealsPurchases
978487    +          +     0.08829426076164 * S_NumWebVisitsMonth
978488    +          +     0.01139960588609 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 0.520662992966 * S_AcceptedCmpTotal + 2.30709719298221 * S_Frq 
+ -1.24685702053791 * S_Mnt + 1.87107978843927 * S_MntMeatProducts + -0.31123291719979 * 
S_NumCatalogPurchases + -2.80886037303887 * S_NumDealsPurchases + 0.08829426076164 * 
S_NumWebVisitsMonth + 0.01139960588609 * S_Recency ;
978489    +   H1x1_1  = H1x1_1  +    -0.51004374170231 * Marital_StatusDivorced
978490    +          +     0.50838467240268 * Marital_StatusMarried
978491    +          +    -0.57765911295879 * Marital_StatusSingle
978492    +          +    -0.24222335065155 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.51004374170231 * Marital_StatusDivorced + 
0.50838467240268 * Marital_StatusMarried + -0.57765911295879 * Marital_StatusSingle + 
-0.24222335065155 * Marital_StatusTogether ;
978493    +   H1x1_2  = H1x1_2  +     0.83738211384182 * Marital_StatusDivorced
978494    +          +     0.03531168852657 * Marital_StatusMarried
978495    +          +    -0.34417109081648 * Marital_StatusSingle
978496    +          +    -0.31315325265885 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.83738211384182 * Marital_StatusDivorced + 
0.03531168852657 * Marital_StatusMarried + -0.34417109081648 * Marital_StatusSingle + 
-0.31315325265885 * Marital_StatusTogether ;
978497    +   H1x1_3  = H1x1_3  +    -3.70783313474848 * Marital_StatusDivorced
978498    +          +      1.9516301625913 * Marital_StatusMarried
978499    +          +    -0.24904237582097 * Marital_StatusSingle
978500    +          +     1.51668241109596 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -3.70783313474848 * Marital_StatusDivorced + 
1.9516301625913 * Marital_StatusMarried + -0.24904237582097 * Marital_StatusSingle + 
1.51668241109596 * Marital_StatusTogether ;
978501    +   H1x1_4  = H1x1_4  +    -0.27676175212593 * Marital_StatusDivorced
978502    +          +     0.06718550412505 * Marital_StatusMarried
978503    +          +    -0.16735434131197 * Marital_StatusSingle
978504    +          +     1.06963270761532 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.27676175212593 * Marital_StatusDivorced + 
0.06718550412505 * Marital_StatusMarried + -0.16735434131197 * Marital_StatusSingle + 
1.06963270761532 * Marital_StatusTogether ;
978505    +   H1x1_5  = H1x1_5  +    -1.40244452255328 * Marital_StatusDivorced
978506    +          +    -1.79498797741807 * Marital_StatusMarried
978507    +          +     2.86341746904333 * Marital_StatusSingle
978508    +          +    -2.44061593695879 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -1.40244452255328 * Marital_StatusDivorced + 
-1.79498797741807 * Marital_StatusMarried + 2.86341746904333 * Marital_StatusSingle + 
-2.44061593695879 * Marital_StatusTogether ;
978509    +   H1x1_1  =     3.20180148936403 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 3.20180148936403 + H1x1_1 ;
978510    +   H1x1_2  =    -3.03978470440687 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -3.03978470440687 + H1x1_2 ;
978511    +   H1x1_3  =    -3.39567988555284 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -3.39567988555284 + H1x1_3 ;
978512    +   H1x1_4  =     4.55938081817653 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 4.55938081817653 + H1x1_4 ;
978513    +   H1x1_5  =     -6.4669834535491 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -6.4669834535491 + H1x1_5 ;
978514    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
978515    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
978516    +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
978517    +   H1x1_2  = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
978518    +   H1x1_3  = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
978519    +   H1x1_4  = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_4 = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
978520    +   H1x1_5  = 1.0 / (1.0 + EXP(MIN( - H1x1_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_5 = 1.0 / (1.0 + EXP(MIN( - H1x1_5 , _EXP_BAR)));
978521    +END;
MPRINT(EM_DIAGRAM):   END;
978522    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
978523    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
978524    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
978525    +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
978526    +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
978527    +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
978528    +END;
MPRINT(EM_DIAGRAM):   END;
978529    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
978530    +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
978531    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
978532    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
978533    +   H1x2_1  =    -0.57846605291128 * S_AcceptedCmpTotal
978534    +          +     0.46127801191304 * S_Frq  +    -0.14450302472938 * S_Mnt
978535    +          +    -0.19914740985847 * S_MntMeatProducts
978536    +          +    -0.96920717464092 * S_NumCatalogPurchases
978537    +          +    -1.68508588177508 * S_NumDealsPurchases
978538    +          +     -0.9404284924488 * S_NumWebVisitsMonth
978539    +          +     1.67147332768508 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -0.57846605291128 * S_AcceptedCmpTotal + 0.46127801191304 * 
S_Frq + -0.14450302472938 * S_Mnt + -0.19914740985847 * S_MntMeatProducts + -0.96920717464092 
* S_NumCatalogPurchases + -1.68508588177508 * S_NumDealsPurchases + -0.9404284924488 * 
S_NumWebVisitsMonth + 1.67147332768508 * S_Recency ;
978540    +   H1x2_2  =      1.0459354572297 * S_AcceptedCmpTotal
978541    +          +     2.82350241064269 * S_Frq  +     0.87895410649025 * S_Mnt
978542    +          +    -1.60286606361912 * S_MntMeatProducts
978543    +          +    -0.05010796315816 * S_NumCatalogPurchases
978544    +          +      1.1380574488234 * S_NumDealsPurchases
978545    +          +     0.25426721345204 * S_NumWebVisitsMonth
978546    +          +    -2.73625285283256 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 1.0459354572297 * S_AcceptedCmpTotal + 2.82350241064269 * S_Frq 
+ 0.87895410649025 * S_Mnt + -1.60286606361912 * S_MntMeatProducts + -0.05010796315816 * 
S_NumCatalogPurchases + 1.1380574488234 * S_NumDealsPurchases + 0.25426721345204 * 
S_NumWebVisitsMonth + -2.73625285283256 * S_Recency ;
978547    +   H1x2_3  =     1.05785663081938 * S_AcceptedCmpTotal
978548    +          +     0.04036906636666 * S_Frq  +     1.87139195780258 * S_Mnt
978549    +          +     2.58979830897092 * S_MntMeatProducts
978550    +          +      1.2569773545009 * S_NumCatalogPurchases
978551    +          +     0.21119951191653 * S_NumDealsPurchases
978552    +          +    -0.40993456334326 * S_NumWebVisitsMonth
978553    +          +    -0.07518138333775 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x2_3 = 1.05785663081938 * S_AcceptedCmpTotal + 0.04036906636666 * 
S_Frq + 1.87139195780258 * S_Mnt + 2.58979830897092 * S_MntMeatProducts + 1.2569773545009 * 
S_NumCatalogPurchases + 0.21119951191653 * S_NumDealsPurchases + -0.40993456334326 * 
S_NumWebVisitsMonth + -0.07518138333775 * S_Recency ;
978554    +   H1x2_4  =    -1.65169602183442 * S_AcceptedCmpTotal
978555    +          +     0.11259843816571 * S_Frq  +     -0.4909263110452 * S_Mnt
978556    +          +     1.58324428521578 * S_MntMeatProducts
978557    +          +    -0.64140579988939 * S_NumCatalogPurchases
978558    +          +    -0.07557073365385 * S_NumDealsPurchases
978559    +          +     0.27159109297915 * S_NumWebVisitsMonth
978560    +          +    -2.60734864081732 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -1.65169602183442 * S_AcceptedCmpTotal + 0.11259843816571 * 
S_Frq + -0.4909263110452 * S_Mnt + 1.58324428521578 * S_MntMeatProducts + -0.64140579988939 * 
S_NumCatalogPurchases + -0.07557073365385 * S_NumDealsPurchases + 0.27159109297915 * 
S_NumWebVisitsMonth + -2.60734864081732 * S_Recency ;
978561    +   H1x2_5  =     -0.0537738178774 * S_AcceptedCmpTotal
978562    +          +     0.77977253685316 * S_Frq  +      0.8350835949372 * S_Mnt
978563    +          +     0.02133290318048 * S_MntMeatProducts
978564    +          +    -0.37682732019302 * S_NumCatalogPurchases
978565    +          +     2.57483962426003 * S_NumDealsPurchases
978566    +          +    -0.76651867011773 * S_NumWebVisitsMonth
978567    +          +     1.79269108990868 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -0.0537738178774 * S_AcceptedCmpTotal + 0.77977253685316 * 
S_Frq + 0.8350835949372 * S_Mnt + 0.02133290318048 * S_MntMeatProducts + -0.37682732019302 * 
S_NumCatalogPurchases + 2.57483962426003 * S_NumDealsPurchases + -0.76651867011773 * 
S_NumWebVisitsMonth + 1.79269108990868 * S_Recency ;
978568    +   H1x2_1  = H1x2_1  +     -0.6785006078361 * Marital_StatusDivorced
978569    +          +     1.00798219323102 * Marital_StatusMarried
978570    +          +     -1.3878630687005 * Marital_StatusSingle
978571    +          +     0.38993646858937 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.6785006078361 * Marital_StatusDivorced + 
1.00798219323102 * Marital_StatusMarried + -1.3878630687005 * Marital_StatusSingle + 
0.38993646858937 * Marital_StatusTogether ;
978572    +   H1x2_2  = H1x2_2  +     2.09014978919778 * Marital_StatusDivorced
978573    +          +    -0.99149540204741 * Marital_StatusMarried
978574    +          +    -0.22772928542301 * Marital_StatusSingle
978575    +          +     2.92746205796719 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 2.09014978919778 * Marital_StatusDivorced + 
-0.99149540204741 * Marital_StatusMarried + -0.22772928542301 * Marital_StatusSingle + 
2.92746205796719 * Marital_StatusTogether ;
978576    +   H1x2_3  = H1x2_3  +     -0.9762988536771 * Marital_StatusDivorced
978577    +          +     1.54170826840021 * Marital_StatusMarried
978578    +          +    -0.09937587953829 * Marital_StatusSingle
978579    +          +     0.56302999728519 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + -0.9762988536771 * Marital_StatusDivorced + 
1.54170826840021 * Marital_StatusMarried + -0.09937587953829 * Marital_StatusSingle + 
0.56302999728519 * Marital_StatusTogether ;
978580    +   H1x2_4  = H1x2_4  +     0.25720612100596 * Marital_StatusDivorced
978581    +          +    -0.48775794259019 * Marital_StatusMarried
978582    +          +     0.87075561905397 * Marital_StatusSingle
978583    +          +     0.04810416118778 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 0.25720612100596 * Marital_StatusDivorced + 
-0.48775794259019 * Marital_StatusMarried + 0.87075561905397 * Marital_StatusSingle + 
0.04810416118778 * Marital_StatusTogether ;
978584    +   H1x2_5  = H1x2_5  +     0.43415973497838 * Marital_StatusDivorced
978585    +          +     0.01260332236695 * Marital_StatusMarried
978586    +          +     1.18815076116703 * Marital_StatusSingle
978587    +          +     0.48437203261339 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 0.43415973497838 * Marital_StatusDivorced + 
0.01260332236695 * Marital_StatusMarried + 1.18815076116703 * Marital_StatusSingle + 
0.48437203261339 * Marital_StatusTogether ;
978588    +   H1x2_1  =     0.59373524039937 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.59373524039937 + H1x2_1 ;
978589    +   H1x2_2  =    -0.71387492444638 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -0.71387492444638 + H1x2_2 ;
978590    +   H1x2_3  =    -0.87122218589138 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.87122218589138 + H1x2_3 ;
978591    +   H1x2_4  =    -0.13330305074809 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -0.13330305074809 + H1x2_4 ;
978592    +   H1x2_5  =    -0.21968490365757 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -0.21968490365757 + H1x2_5 ;
978593    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
978594    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
978595    +   H1x2_1  = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
978596    +   H1x2_2  = 1.0 / (1.0 + EXP(MIN( - H1x2_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_2 = 1.0 / (1.0 + EXP(MIN( - H1x2_2 , _EXP_BAR)));
978597    +   H1x2_3  = 1.0 / (1.0 + EXP(MIN( - H1x2_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_3 = 1.0 / (1.0 + EXP(MIN( - H1x2_3 , _EXP_BAR)));
978598    +   H1x2_4  = 1.0 / (1.0 + EXP(MIN( - H1x2_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_4 = 1.0 / (1.0 + EXP(MIN( - H1x2_4 , _EXP_BAR)));
978599    +   H1x2_5  = 1.0 / (1.0 + EXP(MIN( - H1x2_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_5 = 1.0 / (1.0 + EXP(MIN( - H1x2_5 , _EXP_BAR)));
978600    +END;
MPRINT(EM_DIAGRAM):   END;
978601    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
978602    +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
978603    +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
978604    +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
978605    +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
978606    +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
978607    +END;
MPRINT(EM_DIAGRAM):   END;
978608    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
978609    +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
978610    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
978611    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
978612    +   H2x1_1  =     1.45129577556868 * H1x1_1  +     -3.2081674830022 * H1x1_2
978613    +          +     3.42026207686484 * H1x1_3  +    -3.72024251386054 * H1x1_4
978614    +          +    -2.30130940015795 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.45129577556868 * H1x1_1 + -3.2081674830022 * H1x1_2 + 
3.42026207686484 * H1x1_3 + -3.72024251386054 * H1x1_4 + -2.30130940015795 * H1x1_5 ;
978615    +   H2x1_2  =    -4.02910663646154 * H1x1_1  +    -1.36266586214201 * H1x1_2
978616    +          +     -2.6741103337432 * H1x1_3  +     3.30152436221712 * H1x1_4
978617    +          +     4.60157490246583 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -4.02910663646154 * H1x1_1 + -1.36266586214201 * H1x1_2 + 
-2.6741103337432 * H1x1_3 + 3.30152436221712 * H1x1_4 + 4.60157490246583 * H1x1_5 ;
978618    +   H2x1_3  =    -2.71265022944259 * H1x1_1  +     3.25833541933639 * H1x1_2
978619    +          +    -4.27328627935531 * H1x1_3  +     3.44552729303863 * H1x1_4
978620    +          +     1.98222057652994 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -2.71265022944259 * H1x1_1 + 3.25833541933639 * H1x1_2 + 
-4.27328627935531 * H1x1_3 + 3.44552729303863 * H1x1_4 + 1.98222057652994 * H1x1_5 ;
978621    +   H2x1_4  =     2.28893869996771 * H1x1_1  +    -1.88060597031882 * H1x1_2
978622    +          +     2.73897702163351 * H1x1_3  +    -1.93112188328204 * H1x1_4
978623    +          +    -2.14551123022514 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 2.28893869996771 * H1x1_1 + -1.88060597031882 * H1x1_2 + 
2.73897702163351 * H1x1_3 + -1.93112188328204 * H1x1_4 + -2.14551123022514 * H1x1_5 ;
978624    +   H2x1_5  =     0.17403378809357 * H1x1_1  +     0.03207619288442 * H1x1_2
978625    +          +     0.88058789634283 * H1x1_3  +    -2.03707509730247 * H1x1_4
978626    +          +    -0.16844881046516 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = 0.17403378809357 * H1x1_1 + 0.03207619288442 * H1x1_2 + 
0.88058789634283 * H1x1_3 + -2.03707509730247 * H1x1_4 + -0.16844881046516 * H1x1_5 ;
978627    +   H2x1_1  = H2x1_1  +    -0.42620560083346 * H1x2_1
978628    +          +     2.61300451668579 * H1x2_2  +    -1.08729872311941 * H1x2_3
978629    +          +     0.36500562232913 * H1x2_4  +     0.78657990168531 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -0.42620560083346 * H1x2_1 + 2.61300451668579 * H1x2_2 
+ -1.08729872311941 * H1x2_3 + 0.36500562232913 * H1x2_4 + 0.78657990168531 * H1x2_5 ;
978630    +   H2x1_2  = H2x1_2  +     -3.3095282858933 * H1x2_1
978631    +          +    -1.16629762992585 * H1x2_2  +     0.33128267734744 * H1x2_3
978632    +          +     0.07369118606842 * H1x2_4  +      0.6553035374014 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + -3.3095282858933 * H1x2_1 + -1.16629762992585 * H1x2_2 
+ 0.33128267734744 * H1x2_3 + 0.07369118606842 * H1x2_4 + 0.6553035374014 * H1x2_5 ;
978633    +   H2x1_3  = H2x1_3  +     0.51835290812588 * H1x2_1
978634    +          +    -0.73350588958096 * H1x2_2  +     1.41475754999036 * H1x2_3
978635    +          +     0.14918618308538 * H1x2_4  +    -1.73283355686834 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + 0.51835290812588 * H1x2_1 + -0.73350588958096 * H1x2_2 
+ 1.41475754999036 * H1x2_3 + 0.14918618308538 * H1x2_4 + -1.73283355686834 * H1x2_5 ;
978636    +   H2x1_4  = H2x1_4  +     0.98984363206925 * H1x2_1
978637    +          +     2.36687848114553 * H1x2_2  +     0.03777540439167 * H1x2_3
978638    +          +    -0.73252777784956 * H1x2_4  +    -0.04184890910757 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + 0.98984363206925 * H1x2_1 + 2.36687848114553 * H1x2_2 
+ 0.03777540439167 * H1x2_3 + -0.73252777784956 * H1x2_4 + -0.04184890910757 * H1x2_5 ;
978639    +   H2x1_5  = H2x1_5  +    -2.05979445476877 * H1x2_1
978640    +          +     0.19598137322499 * H1x2_2  +    -1.96096261338489 * H1x2_3
978641    +          +    -1.87993721108869 * H1x2_4  +     1.19567303848292 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + -2.05979445476877 * H1x2_1 + 0.19598137322499 * H1x2_2 
+ -1.96096261338489 * H1x2_3 + -1.87993721108869 * H1x2_4 + 1.19567303848292 * H1x2_5 ;
978642    +   H2x1_1  =     1.99856910799552 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.99856910799552 + H2x1_1 ;
978643    +   H2x1_2  =    -0.68335198868759 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -0.68335198868759 + H2x1_2 ;
978644    +   H2x1_3  =    -1.47801222552286 + H2x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -1.47801222552286 + H2x1_3 ;
978645    +   H2x1_4  =    -0.64885772031774 + H2x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = -0.64885772031774 + H2x1_4 ;
978646    +   H2x1_5  =     1.36680339876645 + H2x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = 1.36680339876645 + H2x1_5 ;
978647    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
978648    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
978649    +   H2x1_1  = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
978650    +   H2x1_2  = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
978651    +   H2x1_3  = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_3 = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
978652    +   H2x1_4  = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_4 = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
978653    +   H2x1_5  = 1.0 / (1.0 + EXP(MIN( - H2x1_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_5 = 1.0 / (1.0 + EXP(MIN( - H2x1_5 , _EXP_BAR)));
978654    +END;
MPRINT(EM_DIAGRAM):   END;
978655    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
978656    +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
978657    +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
978658    +   H2x1_3  = .;
MPRINT(EM_DIAGRAM):   H2x1_3 = .;
978659    +   H2x1_4  = .;
MPRINT(EM_DIAGRAM):   H2x1_4 = .;
978660    +   H2x1_5  = .;
MPRINT(EM_DIAGRAM):   H2x1_5 = .;
978661    +END;
MPRINT(EM_DIAGRAM):   END;
978662    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
978663    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
978664    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
978665    +
978666    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
978667    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
978668    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
978669    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
978670    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
978671    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
978672    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
978673    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
978674    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
978675    +end;
MPRINT(EM_DIAGRAM):   end;
978676    +else do;
MPRINT(EM_DIAGRAM):   else do;
978677    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
978678    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
978679    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
978680    +   end;
MPRINT(EM_DIAGRAM):   end;
978681    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
978682    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
978683    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
978684    +   end;
MPRINT(EM_DIAGRAM):   end;
978685    +   else do;
MPRINT(EM_DIAGRAM):   else do;
978686    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
978687    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
978688    +   end;
MPRINT(EM_DIAGRAM):   end;
978689    +end;
MPRINT(EM_DIAGRAM):   end;
978690    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
978691    +   P_DepVar1  =    -8.53264166014568 * H2x1_1  +     9.59119828234132 * H2x1_2
978692    +          +     8.22466103889512 * H2x1_3  +    -7.77899855684839 * H2x1_4
978693    +          +    -2.21335603990809 * H2x1_5 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -8.53264166014568 * H2x1_1 + 9.59119828234132 * H2x1_2 + 
8.22466103889512 * H2x1_3 + -7.77899855684839 * H2x1_4 + -2.21335603990809 * H2x1_5 ;
978694    +   P_DepVar1  =     0.50239586442602 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.50239586442602 + P_DepVar1 ;
978695    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
978696    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
978697    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
978698    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
978699    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
978700    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
978701    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
978702    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
978703    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
978704    +END;
MPRINT(EM_DIAGRAM):   END;
978705    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
978706    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
978707    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
978708    +END;
MPRINT(EM_DIAGRAM):   END;
978709    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
978710    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
978711    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
978712    +END;
MPRINT(EM_DIAGRAM):   END;
978713    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
978714    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
978715    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
978716    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
978717    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
978718    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
978719    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
978720    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
978721    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
978722    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
978723    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
978724    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
978725    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
978726    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
978727    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
978728    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
978729    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
978730    +END;
MPRINT(EM_DIAGRAM):   END;
978731    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
978732    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
978733    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
978734    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
978735     run;

NOTE: DATA STEP view saved on file EMWS8.AUTONEURAL34_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.META3_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
978736     quit;
978737     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
978738     filename emflow
978738   ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural34\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural34\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * AutoNeural34: Scoring VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
978739     *------------------------------------------------------------*;
978740     * AutoNeural34: Scoring VALIDATE data;
978741     *------------------------------------------------------------*;
978742     data EMWS8.AutoNeural34_VALIDATE
978743     / view=EMWS8.AutoNeural34_VALIDATE
978744     ;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural34_VALIDATE / view=EMWS8.AutoNeural34_VALIDATE ;
978745     set EMWS8.Meta3_VALIDATE
978746     ;
MPRINT(EM_DIAGRAM):   set EMWS8.Meta3_VALIDATE ;
978747     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural34\EMFLOWSCORE.sas.
978748    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
978749    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
978750    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
978751    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
978752    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
978753    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
978754    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
978755    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
978756    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
978757    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
978758    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
978759    +LENGTH _WARN_ $4
978760    +      F_DepVar  $ 12
978761    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
978762    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
978763    +
978764    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
978765    +
978766    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
978767    +
978768    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
978769    +
978770    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
978771    +
978772    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
978773    +
978774    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
978775    +
978776    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
978777    +
978778    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
978779    +
978780    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
978781    +
978782    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
978783    +
978784    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
978785    +
978786    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
978787    +
978788    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
978789    +
978790    +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
978791    +
978792    +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
978793    +
978794    +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
978795    +
978796    +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
978797    +
978798    +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
978799    +
978800    +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
978801    +
978802    +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
978803    +
978804    +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
978805    +
978806    +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
978807    +
978808    +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
978809    +
978810    +      label H2x1_3 = 'Hidden: H2x1_=3' ;
MPRINT(EM_DIAGRAM):   label H2x1_3 = 'Hidden: H2x1_=3' ;
978811    +
978812    +      label H2x1_4 = 'Hidden: H2x1_=4' ;
MPRINT(EM_DIAGRAM):   label H2x1_4 = 'Hidden: H2x1_=4' ;
978813    +
978814    +      label H2x1_5 = 'Hidden: H2x1_=5' ;
MPRINT(EM_DIAGRAM):   label H2x1_5 = 'Hidden: H2x1_=5' ;
978815    +
978816    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
978817    +
978818    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
978819    +
978820    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
978821    +
978822    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
978823    +
978824    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
978825    +
978826    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
978827    +
978828    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
978829    +
978830    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
978831    +
978832    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
978833    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
978834    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
978835    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
978836    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
978837    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
978838    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
978839    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
978840    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
978841    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
978842    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
978843    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
978844    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
978845    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
978846    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
978847    +end;
MPRINT(EM_DIAGRAM):   end;
978848    +else do;
MPRINT(EM_DIAGRAM):   else do;
978849    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
978850    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
978851    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
978852    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
978853    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
978854    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
978855    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
978856    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
978857    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
978858    +         end;
MPRINT(EM_DIAGRAM):   end;
978859    +         else do;
MPRINT(EM_DIAGRAM):   else do;
978860    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
978861    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
978862    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
978863    +            end;
MPRINT(EM_DIAGRAM):   end;
978864    +         end;
MPRINT(EM_DIAGRAM):   end;
978865    +      end;
MPRINT(EM_DIAGRAM):   end;
978866    +      else do;
MPRINT(EM_DIAGRAM):   else do;
978867    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
978868    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
978869    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
978870    +         end;
MPRINT(EM_DIAGRAM):   end;
978871    +      end;
MPRINT(EM_DIAGRAM):   end;
978872    +   end;
MPRINT(EM_DIAGRAM):   end;
978873    +   else do;
MPRINT(EM_DIAGRAM):   else do;
978874    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
978875    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
978876    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
978877    +      end;
MPRINT(EM_DIAGRAM):   end;
978878    +      else do;
MPRINT(EM_DIAGRAM):   else do;
978879    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
978880    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
978881    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
978882    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
978883    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
978884    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
978885    +         end;
MPRINT(EM_DIAGRAM):   end;
978886    +      end;
MPRINT(EM_DIAGRAM):   end;
978887    +   end;
MPRINT(EM_DIAGRAM):   end;
978888    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
978889    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
978890    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
978891    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
978892    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
978893    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
978894    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
978895    +   end;
MPRINT(EM_DIAGRAM):   end;
978896    +end;
MPRINT(EM_DIAGRAM):   end;
978897    +
978898    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
978899    +*** Checking missing input Interval
978900    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
978901    +
978902    +IF NMISS(
978903    +   AcceptedCmpTotal ,
978904    +   Frq ,
978905    +   Mnt ,
978906    +   MntMeatProducts ,
978907    +   NumCatalogPurchases ,
978908    +   NumDealsPurchases ,
978909    +   NumWebVisitsMonth ,
978910    +   Recency   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Mnt , MntMeatProducts , 
NumCatalogPurchases , NumDealsPurchases , NumWebVisitsMonth , Recency ) THEN DO;
978911    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
978912    +
978913    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
978914    +END;
MPRINT(EM_DIAGRAM):   END;
978915    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
978916    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
978917    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
978918    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
978919    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
978920    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
978921    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
978922    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
978923    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
978924    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
978925    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
978926    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
978927    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
978928    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
978929    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
978930    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
978931    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
978932    +END;
MPRINT(EM_DIAGRAM):   END;
978933    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
978934    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
978935    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
978936    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
978937    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
978938    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
978939    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
978940    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
978941    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
978942    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
978943    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
978944    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
978945    +   ELSE S_NumCatalogPurchases
978946    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
978947    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
978948    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
978949    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
978950    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
978951    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
978952    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
978953    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
978954    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
978955    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
978956    +END;
MPRINT(EM_DIAGRAM):   END;
978957    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
978958    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
978959    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
978960    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
978961    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
978962    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
978963    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
978964    +   H1x1_1  =    -1.54500197834221 * S_AcceptedCmpTotal
978965    +          +     2.13269624676531 * S_Frq  +     0.91018334305327 * S_Mnt
978966    +          +    -1.92258561684999 * S_MntMeatProducts
978967    +          +     -1.7098915194593 * S_NumCatalogPurchases
978968    +          +    -0.73092398706652 * S_NumDealsPurchases
978969    +          +    -1.52371325097768 * S_NumWebVisitsMonth
978970    +          +     2.59712285696981 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -1.54500197834221 * S_AcceptedCmpTotal + 2.13269624676531 * 
S_Frq + 0.91018334305327 * S_Mnt + -1.92258561684999 * S_MntMeatProducts + -1.7098915194593 * 
S_NumCatalogPurchases + -0.73092398706652 * S_NumDealsPurchases + -1.52371325097768 * 
S_NumWebVisitsMonth + 2.59712285696981 * S_Recency ;
978971    +   H1x1_2  =    -0.62469573898784 * S_AcceptedCmpTotal
978972    +          +    -3.01294208996145 * S_Frq  +    -4.18014732340271 * S_Mnt
978973    +          +     3.63686708458831 * S_MntMeatProducts
978974    +          +     0.32632650897658 * S_NumCatalogPurchases
978975    +          +     1.27820262549135 * S_NumDealsPurchases
978976    +          +    -0.18941034658667 * S_NumWebVisitsMonth
978977    +          +     1.34455705644101 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.62469573898784 * S_AcceptedCmpTotal + -3.01294208996145 * 
S_Frq + -4.18014732340271 * S_Mnt + 3.63686708458831 * S_MntMeatProducts + 0.32632650897658 * 
S_NumCatalogPurchases + 1.27820262549135 * S_NumDealsPurchases + -0.18941034658667 * 
S_NumWebVisitsMonth + 1.34455705644101 * S_Recency ;
978978    +   H1x1_3  =    -1.66686655426537 * S_AcceptedCmpTotal
978979    +          +     1.67787744859875 * S_Frq  +     1.97664267386501 * S_Mnt
978980    +          +    -0.10252809999866 * S_MntMeatProducts
978981    +          +    -2.01730745054613 * S_NumCatalogPurchases
978982    +          +     0.36276273056202 * S_NumDealsPurchases
978983    +          +    -2.03441379397145 * S_NumWebVisitsMonth
978984    +          +     2.93250821506079 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -1.66686655426537 * S_AcceptedCmpTotal + 1.67787744859875 * 
S_Frq + 1.97664267386501 * S_Mnt + -0.10252809999866 * S_MntMeatProducts + -2.01730745054613 * 
S_NumCatalogPurchases + 0.36276273056202 * S_NumDealsPurchases + -2.03441379397145 * 
S_NumWebVisitsMonth + 2.93250821506079 * S_Recency ;
978985    +   H1x1_4  =     0.78243113686776 * S_AcceptedCmpTotal
978986    +          +    -1.82663131535617 * S_Frq  +      0.2881963502664 * S_Mnt
978987    +          +     8.03567059273376 * S_MntMeatProducts
978988    +          +     2.16664649845379 * S_NumCatalogPurchases
978989    +          +     0.84009978401032 * S_NumDealsPurchases
978990    +          +     0.11354933533503 * S_NumWebVisitsMonth
978991    +          +    -1.07901935721913 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.78243113686776 * S_AcceptedCmpTotal + -1.82663131535617 * 
S_Frq + 0.2881963502664 * S_Mnt + 8.03567059273376 * S_MntMeatProducts + 2.16664649845379 * 
S_NumCatalogPurchases + 0.84009978401032 * S_NumDealsPurchases + 0.11354933533503 * 
S_NumWebVisitsMonth + -1.07901935721913 * S_Recency ;
978992    +   H1x1_5  =       0.520662992966 * S_AcceptedCmpTotal
978993    +          +     2.30709719298221 * S_Frq  +    -1.24685702053791 * S_Mnt
978994    +          +     1.87107978843927 * S_MntMeatProducts
978995    +          +    -0.31123291719979 * S_NumCatalogPurchases
978996    +          +    -2.80886037303887 * S_NumDealsPurchases
978997    +          +     0.08829426076164 * S_NumWebVisitsMonth
978998    +          +     0.01139960588609 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 0.520662992966 * S_AcceptedCmpTotal + 2.30709719298221 * S_Frq 
+ -1.24685702053791 * S_Mnt + 1.87107978843927 * S_MntMeatProducts + -0.31123291719979 * 
S_NumCatalogPurchases + -2.80886037303887 * S_NumDealsPurchases + 0.08829426076164 * 
S_NumWebVisitsMonth + 0.01139960588609 * S_Recency ;
978999    +   H1x1_1  = H1x1_1  +    -0.51004374170231 * Marital_StatusDivorced
979000    +          +     0.50838467240268 * Marital_StatusMarried
979001    +          +    -0.57765911295879 * Marital_StatusSingle
979002    +          +    -0.24222335065155 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.51004374170231 * Marital_StatusDivorced + 
0.50838467240268 * Marital_StatusMarried + -0.57765911295879 * Marital_StatusSingle + 
-0.24222335065155 * Marital_StatusTogether ;
979003    +   H1x1_2  = H1x1_2  +     0.83738211384182 * Marital_StatusDivorced
979004    +          +     0.03531168852657 * Marital_StatusMarried
979005    +          +    -0.34417109081648 * Marital_StatusSingle
979006    +          +    -0.31315325265885 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.83738211384182 * Marital_StatusDivorced + 
0.03531168852657 * Marital_StatusMarried + -0.34417109081648 * Marital_StatusSingle + 
-0.31315325265885 * Marital_StatusTogether ;
979007    +   H1x1_3  = H1x1_3  +    -3.70783313474848 * Marital_StatusDivorced
979008    +          +      1.9516301625913 * Marital_StatusMarried
979009    +          +    -0.24904237582097 * Marital_StatusSingle
979010    +          +     1.51668241109596 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -3.70783313474848 * Marital_StatusDivorced + 
1.9516301625913 * Marital_StatusMarried + -0.24904237582097 * Marital_StatusSingle + 
1.51668241109596 * Marital_StatusTogether ;
979011    +   H1x1_4  = H1x1_4  +    -0.27676175212593 * Marital_StatusDivorced
979012    +          +     0.06718550412505 * Marital_StatusMarried
979013    +          +    -0.16735434131197 * Marital_StatusSingle
979014    +          +     1.06963270761532 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.27676175212593 * Marital_StatusDivorced + 
0.06718550412505 * Marital_StatusMarried + -0.16735434131197 * Marital_StatusSingle + 
1.06963270761532 * Marital_StatusTogether ;
979015    +   H1x1_5  = H1x1_5  +    -1.40244452255328 * Marital_StatusDivorced
979016    +          +    -1.79498797741807 * Marital_StatusMarried
979017    +          +     2.86341746904333 * Marital_StatusSingle
979018    +          +    -2.44061593695879 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -1.40244452255328 * Marital_StatusDivorced + 
-1.79498797741807 * Marital_StatusMarried + 2.86341746904333 * Marital_StatusSingle + 
-2.44061593695879 * Marital_StatusTogether ;
979019    +   H1x1_1  =     3.20180148936403 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 3.20180148936403 + H1x1_1 ;
979020    +   H1x1_2  =    -3.03978470440687 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -3.03978470440687 + H1x1_2 ;
979021    +   H1x1_3  =    -3.39567988555284 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -3.39567988555284 + H1x1_3 ;
979022    +   H1x1_4  =     4.55938081817653 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 4.55938081817653 + H1x1_4 ;
979023    +   H1x1_5  =     -6.4669834535491 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -6.4669834535491 + H1x1_5 ;
979024    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
979025    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
979026    +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
979027    +   H1x1_2  = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
979028    +   H1x1_3  = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
979029    +   H1x1_4  = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_4 = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
979030    +   H1x1_5  = 1.0 / (1.0 + EXP(MIN( - H1x1_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_5 = 1.0 / (1.0 + EXP(MIN( - H1x1_5 , _EXP_BAR)));
979031    +END;
MPRINT(EM_DIAGRAM):   END;
979032    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
979033    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
979034    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
979035    +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
979036    +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
979037    +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
979038    +END;
MPRINT(EM_DIAGRAM):   END;
979039    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
979040    +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
979041    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
979042    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
979043    +   H1x2_1  =    -0.57846605291128 * S_AcceptedCmpTotal
979044    +          +     0.46127801191304 * S_Frq  +    -0.14450302472938 * S_Mnt
979045    +          +    -0.19914740985847 * S_MntMeatProducts
979046    +          +    -0.96920717464092 * S_NumCatalogPurchases
979047    +          +    -1.68508588177508 * S_NumDealsPurchases
979048    +          +     -0.9404284924488 * S_NumWebVisitsMonth
979049    +          +     1.67147332768508 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -0.57846605291128 * S_AcceptedCmpTotal + 0.46127801191304 * 
S_Frq + -0.14450302472938 * S_Mnt + -0.19914740985847 * S_MntMeatProducts + -0.96920717464092 
* S_NumCatalogPurchases + -1.68508588177508 * S_NumDealsPurchases + -0.9404284924488 * 
S_NumWebVisitsMonth + 1.67147332768508 * S_Recency ;
979050    +   H1x2_2  =      1.0459354572297 * S_AcceptedCmpTotal
979051    +          +     2.82350241064269 * S_Frq  +     0.87895410649025 * S_Mnt
979052    +          +    -1.60286606361912 * S_MntMeatProducts
979053    +          +    -0.05010796315816 * S_NumCatalogPurchases
979054    +          +      1.1380574488234 * S_NumDealsPurchases
979055    +          +     0.25426721345204 * S_NumWebVisitsMonth
979056    +          +    -2.73625285283256 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 1.0459354572297 * S_AcceptedCmpTotal + 2.82350241064269 * S_Frq 
+ 0.87895410649025 * S_Mnt + -1.60286606361912 * S_MntMeatProducts + -0.05010796315816 * 
S_NumCatalogPurchases + 1.1380574488234 * S_NumDealsPurchases + 0.25426721345204 * 
S_NumWebVisitsMonth + -2.73625285283256 * S_Recency ;
979057    +   H1x2_3  =     1.05785663081938 * S_AcceptedCmpTotal
979058    +          +     0.04036906636666 * S_Frq  +     1.87139195780258 * S_Mnt
979059    +          +     2.58979830897092 * S_MntMeatProducts
979060    +          +      1.2569773545009 * S_NumCatalogPurchases
979061    +          +     0.21119951191653 * S_NumDealsPurchases
979062    +          +    -0.40993456334326 * S_NumWebVisitsMonth
979063    +          +    -0.07518138333775 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x2_3 = 1.05785663081938 * S_AcceptedCmpTotal + 0.04036906636666 * 
S_Frq + 1.87139195780258 * S_Mnt + 2.58979830897092 * S_MntMeatProducts + 1.2569773545009 * 
S_NumCatalogPurchases + 0.21119951191653 * S_NumDealsPurchases + -0.40993456334326 * 
S_NumWebVisitsMonth + -0.07518138333775 * S_Recency ;
979064    +   H1x2_4  =    -1.65169602183442 * S_AcceptedCmpTotal
979065    +          +     0.11259843816571 * S_Frq  +     -0.4909263110452 * S_Mnt
979066    +          +     1.58324428521578 * S_MntMeatProducts
979067    +          +    -0.64140579988939 * S_NumCatalogPurchases
979068    +          +    -0.07557073365385 * S_NumDealsPurchases
979069    +          +     0.27159109297915 * S_NumWebVisitsMonth
979070    +          +    -2.60734864081732 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -1.65169602183442 * S_AcceptedCmpTotal + 0.11259843816571 * 
S_Frq + -0.4909263110452 * S_Mnt + 1.58324428521578 * S_MntMeatProducts + -0.64140579988939 * 
S_NumCatalogPurchases + -0.07557073365385 * S_NumDealsPurchases + 0.27159109297915 * 
S_NumWebVisitsMonth + -2.60734864081732 * S_Recency ;
979071    +   H1x2_5  =     -0.0537738178774 * S_AcceptedCmpTotal
979072    +          +     0.77977253685316 * S_Frq  +      0.8350835949372 * S_Mnt
979073    +          +     0.02133290318048 * S_MntMeatProducts
979074    +          +    -0.37682732019302 * S_NumCatalogPurchases
979075    +          +     2.57483962426003 * S_NumDealsPurchases
979076    +          +    -0.76651867011773 * S_NumWebVisitsMonth
979077    +          +     1.79269108990868 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -0.0537738178774 * S_AcceptedCmpTotal + 0.77977253685316 * 
S_Frq + 0.8350835949372 * S_Mnt + 0.02133290318048 * S_MntMeatProducts + -0.37682732019302 * 
S_NumCatalogPurchases + 2.57483962426003 * S_NumDealsPurchases + -0.76651867011773 * 
S_NumWebVisitsMonth + 1.79269108990868 * S_Recency ;
979078    +   H1x2_1  = H1x2_1  +     -0.6785006078361 * Marital_StatusDivorced
979079    +          +     1.00798219323102 * Marital_StatusMarried
979080    +          +     -1.3878630687005 * Marital_StatusSingle
979081    +          +     0.38993646858937 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.6785006078361 * Marital_StatusDivorced + 
1.00798219323102 * Marital_StatusMarried + -1.3878630687005 * Marital_StatusSingle + 
0.38993646858937 * Marital_StatusTogether ;
979082    +   H1x2_2  = H1x2_2  +     2.09014978919778 * Marital_StatusDivorced
979083    +          +    -0.99149540204741 * Marital_StatusMarried
979084    +          +    -0.22772928542301 * Marital_StatusSingle
979085    +          +     2.92746205796719 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 2.09014978919778 * Marital_StatusDivorced + 
-0.99149540204741 * Marital_StatusMarried + -0.22772928542301 * Marital_StatusSingle + 
2.92746205796719 * Marital_StatusTogether ;
979086    +   H1x2_3  = H1x2_3  +     -0.9762988536771 * Marital_StatusDivorced
979087    +          +     1.54170826840021 * Marital_StatusMarried
979088    +          +    -0.09937587953829 * Marital_StatusSingle
979089    +          +     0.56302999728519 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + -0.9762988536771 * Marital_StatusDivorced + 
1.54170826840021 * Marital_StatusMarried + -0.09937587953829 * Marital_StatusSingle + 
0.56302999728519 * Marital_StatusTogether ;
979090    +   H1x2_4  = H1x2_4  +     0.25720612100596 * Marital_StatusDivorced
979091    +          +    -0.48775794259019 * Marital_StatusMarried
979092    +          +     0.87075561905397 * Marital_StatusSingle
979093    +          +     0.04810416118778 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 0.25720612100596 * Marital_StatusDivorced + 
-0.48775794259019 * Marital_StatusMarried + 0.87075561905397 * Marital_StatusSingle + 
0.04810416118778 * Marital_StatusTogether ;
979094    +   H1x2_5  = H1x2_5  +     0.43415973497838 * Marital_StatusDivorced
979095    +          +     0.01260332236695 * Marital_StatusMarried
979096    +          +     1.18815076116703 * Marital_StatusSingle
979097    +          +     0.48437203261339 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 0.43415973497838 * Marital_StatusDivorced + 
0.01260332236695 * Marital_StatusMarried + 1.18815076116703 * Marital_StatusSingle + 
0.48437203261339 * Marital_StatusTogether ;
979098    +   H1x2_1  =     0.59373524039937 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.59373524039937 + H1x2_1 ;
979099    +   H1x2_2  =    -0.71387492444638 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -0.71387492444638 + H1x2_2 ;
979100    +   H1x2_3  =    -0.87122218589138 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.87122218589138 + H1x2_3 ;
979101    +   H1x2_4  =    -0.13330305074809 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -0.13330305074809 + H1x2_4 ;
979102    +   H1x2_5  =    -0.21968490365757 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -0.21968490365757 + H1x2_5 ;
979103    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
979104    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
979105    +   H1x2_1  = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
979106    +   H1x2_2  = 1.0 / (1.0 + EXP(MIN( - H1x2_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_2 = 1.0 / (1.0 + EXP(MIN( - H1x2_2 , _EXP_BAR)));
979107    +   H1x2_3  = 1.0 / (1.0 + EXP(MIN( - H1x2_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_3 = 1.0 / (1.0 + EXP(MIN( - H1x2_3 , _EXP_BAR)));
979108    +   H1x2_4  = 1.0 / (1.0 + EXP(MIN( - H1x2_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_4 = 1.0 / (1.0 + EXP(MIN( - H1x2_4 , _EXP_BAR)));
979109    +   H1x2_5  = 1.0 / (1.0 + EXP(MIN( - H1x2_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_5 = 1.0 / (1.0 + EXP(MIN( - H1x2_5 , _EXP_BAR)));
979110    +END;
MPRINT(EM_DIAGRAM):   END;
979111    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
979112    +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
979113    +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
979114    +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
979115    +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
979116    +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
979117    +END;
MPRINT(EM_DIAGRAM):   END;
979118    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
979119    +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
979120    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
979121    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
979122    +   H2x1_1  =     1.45129577556868 * H1x1_1  +     -3.2081674830022 * H1x1_2
979123    +          +     3.42026207686484 * H1x1_3  +    -3.72024251386054 * H1x1_4
979124    +          +    -2.30130940015795 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.45129577556868 * H1x1_1 + -3.2081674830022 * H1x1_2 + 
3.42026207686484 * H1x1_3 + -3.72024251386054 * H1x1_4 + -2.30130940015795 * H1x1_5 ;
979125    +   H2x1_2  =    -4.02910663646154 * H1x1_1  +    -1.36266586214201 * H1x1_2
979126    +          +     -2.6741103337432 * H1x1_3  +     3.30152436221712 * H1x1_4
979127    +          +     4.60157490246583 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -4.02910663646154 * H1x1_1 + -1.36266586214201 * H1x1_2 + 
-2.6741103337432 * H1x1_3 + 3.30152436221712 * H1x1_4 + 4.60157490246583 * H1x1_5 ;
979128    +   H2x1_3  =    -2.71265022944259 * H1x1_1  +     3.25833541933639 * H1x1_2
979129    +          +    -4.27328627935531 * H1x1_3  +     3.44552729303863 * H1x1_4
979130    +          +     1.98222057652994 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -2.71265022944259 * H1x1_1 + 3.25833541933639 * H1x1_2 + 
-4.27328627935531 * H1x1_3 + 3.44552729303863 * H1x1_4 + 1.98222057652994 * H1x1_5 ;
979131    +   H2x1_4  =     2.28893869996771 * H1x1_1  +    -1.88060597031882 * H1x1_2
979132    +          +     2.73897702163351 * H1x1_3  +    -1.93112188328204 * H1x1_4
979133    +          +    -2.14551123022514 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 2.28893869996771 * H1x1_1 + -1.88060597031882 * H1x1_2 + 
2.73897702163351 * H1x1_3 + -1.93112188328204 * H1x1_4 + -2.14551123022514 * H1x1_5 ;
979134    +   H2x1_5  =     0.17403378809357 * H1x1_1  +     0.03207619288442 * H1x1_2
979135    +          +     0.88058789634283 * H1x1_3  +    -2.03707509730247 * H1x1_4
979136    +          +    -0.16844881046516 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = 0.17403378809357 * H1x1_1 + 0.03207619288442 * H1x1_2 + 
0.88058789634283 * H1x1_3 + -2.03707509730247 * H1x1_4 + -0.16844881046516 * H1x1_5 ;
979137    +   H2x1_1  = H2x1_1  +    -0.42620560083346 * H1x2_1
979138    +          +     2.61300451668579 * H1x2_2  +    -1.08729872311941 * H1x2_3
979139    +          +     0.36500562232913 * H1x2_4  +     0.78657990168531 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -0.42620560083346 * H1x2_1 + 2.61300451668579 * H1x2_2 
+ -1.08729872311941 * H1x2_3 + 0.36500562232913 * H1x2_4 + 0.78657990168531 * H1x2_5 ;
979140    +   H2x1_2  = H2x1_2  +     -3.3095282858933 * H1x2_1
979141    +          +    -1.16629762992585 * H1x2_2  +     0.33128267734744 * H1x2_3
979142    +          +     0.07369118606842 * H1x2_4  +      0.6553035374014 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + -3.3095282858933 * H1x2_1 + -1.16629762992585 * H1x2_2 
+ 0.33128267734744 * H1x2_3 + 0.07369118606842 * H1x2_4 + 0.6553035374014 * H1x2_5 ;
979143    +   H2x1_3  = H2x1_3  +     0.51835290812588 * H1x2_1
979144    +          +    -0.73350588958096 * H1x2_2  +     1.41475754999036 * H1x2_3
979145    +          +     0.14918618308538 * H1x2_4  +    -1.73283355686834 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + 0.51835290812588 * H1x2_1 + -0.73350588958096 * H1x2_2 
+ 1.41475754999036 * H1x2_3 + 0.14918618308538 * H1x2_4 + -1.73283355686834 * H1x2_5 ;
979146    +   H2x1_4  = H2x1_4  +     0.98984363206925 * H1x2_1
979147    +          +     2.36687848114553 * H1x2_2  +     0.03777540439167 * H1x2_3
979148    +          +    -0.73252777784956 * H1x2_4  +    -0.04184890910757 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + 0.98984363206925 * H1x2_1 + 2.36687848114553 * H1x2_2 
+ 0.03777540439167 * H1x2_3 + -0.73252777784956 * H1x2_4 + -0.04184890910757 * H1x2_5 ;
979149    +   H2x1_5  = H2x1_5  +    -2.05979445476877 * H1x2_1
979150    +          +     0.19598137322499 * H1x2_2  +    -1.96096261338489 * H1x2_3
979151    +          +    -1.87993721108869 * H1x2_4  +     1.19567303848292 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + -2.05979445476877 * H1x2_1 + 0.19598137322499 * H1x2_2 
+ -1.96096261338489 * H1x2_3 + -1.87993721108869 * H1x2_4 + 1.19567303848292 * H1x2_5 ;
979152    +   H2x1_1  =     1.99856910799552 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.99856910799552 + H2x1_1 ;
979153    +   H2x1_2  =    -0.68335198868759 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -0.68335198868759 + H2x1_2 ;
979154    +   H2x1_3  =    -1.47801222552286 + H2x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -1.47801222552286 + H2x1_3 ;
979155    +   H2x1_4  =    -0.64885772031774 + H2x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = -0.64885772031774 + H2x1_4 ;
979156    +   H2x1_5  =     1.36680339876645 + H2x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = 1.36680339876645 + H2x1_5 ;
979157    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
979158    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
979159    +   H2x1_1  = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
979160    +   H2x1_2  = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
979161    +   H2x1_3  = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_3 = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
979162    +   H2x1_4  = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_4 = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
979163    +   H2x1_5  = 1.0 / (1.0 + EXP(MIN( - H2x1_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_5 = 1.0 / (1.0 + EXP(MIN( - H2x1_5 , _EXP_BAR)));
979164    +END;
MPRINT(EM_DIAGRAM):   END;
979165    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
979166    +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
979167    +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
979168    +   H2x1_3  = .;
MPRINT(EM_DIAGRAM):   H2x1_3 = .;
979169    +   H2x1_4  = .;
MPRINT(EM_DIAGRAM):   H2x1_4 = .;
979170    +   H2x1_5  = .;
MPRINT(EM_DIAGRAM):   H2x1_5 = .;
979171    +END;
MPRINT(EM_DIAGRAM):   END;
979172    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
979173    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
979174    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
979175    +
979176    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
979177    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
979178    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
979179    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
979180    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
979181    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
979182    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
979183    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
979184    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
979185    +end;
MPRINT(EM_DIAGRAM):   end;
979186    +else do;
MPRINT(EM_DIAGRAM):   else do;
979187    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
979188    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
979189    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
979190    +   end;
MPRINT(EM_DIAGRAM):   end;
979191    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
979192    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
979193    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
979194    +   end;
MPRINT(EM_DIAGRAM):   end;
979195    +   else do;
MPRINT(EM_DIAGRAM):   else do;
979196    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
979197    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
979198    +   end;
MPRINT(EM_DIAGRAM):   end;
979199    +end;
MPRINT(EM_DIAGRAM):   end;
979200    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
979201    +   P_DepVar1  =    -8.53264166014568 * H2x1_1  +     9.59119828234132 * H2x1_2
979202    +          +     8.22466103889512 * H2x1_3  +    -7.77899855684839 * H2x1_4
979203    +          +    -2.21335603990809 * H2x1_5 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -8.53264166014568 * H2x1_1 + 9.59119828234132 * H2x1_2 + 
8.22466103889512 * H2x1_3 + -7.77899855684839 * H2x1_4 + -2.21335603990809 * H2x1_5 ;
979204    +   P_DepVar1  =     0.50239586442602 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.50239586442602 + P_DepVar1 ;
979205    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
979206    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
979207    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
979208    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
979209    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
979210    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
979211    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
979212    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
979213    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
979214    +END;
MPRINT(EM_DIAGRAM):   END;
979215    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
979216    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
979217    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
979218    +END;
MPRINT(EM_DIAGRAM):   END;
979219    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
979220    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
979221    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
979222    +END;
MPRINT(EM_DIAGRAM):   END;
979223    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
979224    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
979225    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
979226    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
979227    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
979228    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
979229    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
979230    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
979231    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
979232    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
979233    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
979234    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
979235    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
979236    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
979237    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
979238    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
979239    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
979240    +END;
MPRINT(EM_DIAGRAM):   END;
979241    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
979242    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
979243    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
979244    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
979245     run;

NOTE: DATA STEP view saved on file EMWS8.AUTONEURAL34_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.META3_VALIDATE.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
979246     quit;
979247     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
979248     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
979249     * AutoNeural34: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * AutoNeural34: Computing metadata for TRAIN data;
979250     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;

NOTE: View EMWS8.AUTONEURAL34_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural34\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS8.AutoNeural34_TRAIN out=_tempAdvisor 
noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS8.AutoNeural34_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS8.AutoNeural34_TRAIN out=WORK.M24XDHLM 
noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M24XDHLM;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20 
INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M24XDHLM(keep=name type length label format formatl 
formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then format = strip(format)!!strip(put(formatl, 
best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, 
best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then informat = 
strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, 
best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M24XDHLM;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M24XDHLM;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M2_AULJJ NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2_AULJJ;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M2_AULJJ;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1MV2FF7(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M2_AULJJ;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2_AULJJ;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 
FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M2_AULJJ;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" 
"MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" 
"QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" "YEAR" "YYMMDD" "YYMON" 
"YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" 
"EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) 
formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = 
"DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) 
formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" 
"NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" 
"SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = 
"DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then 
level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 
'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 
'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ 
('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 
'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 
'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2_AULJJ;
MPRINT(EMADVISECOLUMNS):   set WORK.M2_AULJJ;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= 
"Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= 
"Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower limit" UPPERLIMIT= 
"Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= 
"Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Meta3_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Meta3_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural34_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT 
LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "AutoNeural34";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("P_DEPVAR1") creator = "AutoNeural34";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR1") creator = "AutoNeural34";
MPRINT(EM_DIAGRAM):   when("P_DEPVAR0") creator = "AutoNeural34";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR0") creator = "AutoNeural34";
MPRINT(EM_DIAGRAM):   when("F_DEPVAR") creator = "AutoNeural34";
MPRINT(EM_DIAGRAM):   when("I_DEPVAR") creator = "AutoNeural34";
MPRINT(EM_DIAGRAM):   when("U_DEPVAR") creator = "AutoNeural34";
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "AutoNeural34";
MPRINT(EM_DIAGRAM):   when("DEPVAR") model = "AutoNeural34";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * AutoNeural34: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
979562     data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
979563     set EMWS8.AutoNeural34_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural34_EMINFO;
979564     where DATA='AutoNeural34' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='AutoNeural34' and KEY ^in('DECDATA', 'DECMETA', 
'IMPORTANCE', 'MODEL');
979565     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.AUTONEURAL34_EMINFO.
      WHERE (DATA='AutoNeural34') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

979566     data EMWS8.AutoNeural34_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural34_EMINFO;
979567     length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
979568     input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
979569     cards;
MPRINT(EM_DIAGRAM):   cards;

NOTE: The data set EMWS8.AUTONEURAL34_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   run;
979573     run;
979574     data EMWS8.AutoNeural34_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural34_EMINFO;
979575     set EMWS8.AutoNeural34_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural34_EMINFO WORK.MODELTEMP_INFO;
979576     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.AUTONEURAL34_EMINFO.
NOTE: There were 0 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS8.AUTONEURAL34_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

979577     proc sort data = EMWS8.AutoNeural34_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.AutoNeural34_EMINFO NOTHREADS;
979578     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
979579     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.AUTONEURAL34_EMINFO.
NOTE: The data set EMWS8.AUTONEURAL34_EMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

979580     proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
979581     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
979582     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set EMWS8.FIMPORT_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 1 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

979583     proc sort data = EMWS8.AutoNeural34_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS8.AutoNeural34_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
979584     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
979585     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 3 observations read from the data set EMWS8.AUTONEURAL34_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

979586     data EMWS8.AutoNeural34_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural34_EMINFO;
979587     merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
979588     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
979589     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 3 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS8.AUTONEURAL34_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

979590     proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
979591     delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
979592     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
979593     quit;
MPRINT(EM_DIAGRAM):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

NOTE: View EMWS8.AUTONEURAL34_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
NOTE: View EMWS8.AUTONEURAL34_VALIDATE.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
