MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "28. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "11.24 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                28. April 2016
Time:                11.24 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O1_QOS4R 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural34\EMSCORE.out" encoding="UTF-8" 
NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O1_QOS4R new;
MPRINT(EM_DIAGRAM):   run;
3341181    filename emflow
3341181  ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural34\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural34\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * AutoNeural34: Scoring DATA data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
3341182    *------------------------------------------------------------*;
3341183    * AutoNeural34: Scoring DATA data;
3341184    *------------------------------------------------------------*;
3341185    data EMWS8.AutoNeural34_TRAIN
3341186    / view=EMWS8.AutoNeural34_TRAIN
3341187    ;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural34_TRAIN / view=EMWS8.AutoNeural34_TRAIN ;
3341188    set EMWS8.Meta3_TRAIN
3341189    ;
MPRINT(EM_DIAGRAM):   set EMWS8.Meta3_TRAIN ;
3341190    %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural34\EMFLOWSCORE.sas.
3341191   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
3341192   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
3341193   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
3341194   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
3341195   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
3341196   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
3341197   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
3341198   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
3341199   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
3341200   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
3341201   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
3341202   +LENGTH _WARN_ $4
3341203   +      F_DepVar  $ 12
3341204   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
3341205   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
3341206   +
3341207   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
3341208   +
3341209   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
3341210   +
3341211   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
3341212   +
3341213   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
3341214   +
3341215   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
3341216   +
3341217   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
3341218   +
3341219   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
3341220   +
3341221   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
3341222   +
3341223   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
3341224   +
3341225   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
3341226   +
3341227   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
3341228   +
3341229   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
3341230   +
3341231   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
3341232   +
3341233   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
3341234   +
3341235   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
3341236   +
3341237   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
3341238   +
3341239   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
3341240   +
3341241   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
3341242   +
3341243   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
3341244   +
3341245   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
3341246   +
3341247   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
3341248   +
3341249   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
3341250   +
3341251   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
3341252   +
3341253   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
3341254   +
3341255   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
3341256   +
3341257   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
3341258   +
3341259   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
3341260   +
3341261   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
3341262   +
3341263   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
3341264   +
3341265   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
3341266   +
3341267   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
3341268   +
3341269   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
3341270   +
3341271   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
3341272   +
3341273   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
3341274   +
3341275   +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
3341276   +
3341277   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
3341278   +
3341279   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
3341280   +
3341281   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
3341282   +
3341283   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
3341284   +
3341285   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
3341286   +
3341287   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
3341288   +
3341289   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
3341290   +
3341291   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
3341292   +
3341293   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
3341294   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
3341295   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
3341296   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
3341297   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
3341298   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3341299   +end;
MPRINT(EM_DIAGRAM):   end;
3341300   +else do;
MPRINT(EM_DIAGRAM):   else do;
3341301   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
3341302   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
3341303   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3341304   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
3341305   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
3341306   +   end;
MPRINT(EM_DIAGRAM):   end;
3341307   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
3341308   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
3341309   +   end;
MPRINT(EM_DIAGRAM):   end;
3341310   +   else do;
MPRINT(EM_DIAGRAM):   else do;
3341311   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
3341312   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
3341313   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3341314   +   end;
MPRINT(EM_DIAGRAM):   end;
3341315   +end;
MPRINT(EM_DIAGRAM):   end;
3341316   +
3341317   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
3341318   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
3341319   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
3341320   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
3341321   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
3341322   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3341323   +end;
MPRINT(EM_DIAGRAM):   end;
3341324   +else do;
MPRINT(EM_DIAGRAM):   else do;
3341325   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
3341326   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
3341327   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3341328   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
3341329   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
3341330   +   end;
MPRINT(EM_DIAGRAM):   end;
3341331   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
3341332   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
3341333   +   end;
MPRINT(EM_DIAGRAM):   end;
3341334   +   else do;
MPRINT(EM_DIAGRAM):   else do;
3341335   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
3341336   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
3341337   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3341338   +   end;
MPRINT(EM_DIAGRAM):   end;
3341339   +end;
MPRINT(EM_DIAGRAM):   end;
3341340   +
3341341   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
3341342   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
3341343   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
3341344   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
3341345   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
3341346   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3341347   +end;
MPRINT(EM_DIAGRAM):   end;
3341348   +else do;
MPRINT(EM_DIAGRAM):   else do;
3341349   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
3341350   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
3341351   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3341352   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
3341353   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
3341354   +   end;
MPRINT(EM_DIAGRAM):   end;
3341355   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
3341356   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
3341357   +   end;
MPRINT(EM_DIAGRAM):   end;
3341358   +   else do;
MPRINT(EM_DIAGRAM):   else do;
3341359   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
3341360   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
3341361   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3341362   +   end;
MPRINT(EM_DIAGRAM):   end;
3341363   +end;
MPRINT(EM_DIAGRAM):   end;
3341364   +
3341365   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
3341366   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
3341367   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
3341368   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
3341369   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
3341370   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3341371   +end;
MPRINT(EM_DIAGRAM):   end;
3341372   +else do;
MPRINT(EM_DIAGRAM):   else do;
3341373   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
3341374   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
3341375   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3341376   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
3341377   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
3341378   +   end;
MPRINT(EM_DIAGRAM):   end;
3341379   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
3341380   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
3341381   +   end;
MPRINT(EM_DIAGRAM):   end;
3341382   +   else do;
MPRINT(EM_DIAGRAM):   else do;
3341383   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
3341384   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
3341385   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3341386   +   end;
MPRINT(EM_DIAGRAM):   end;
3341387   +end;
MPRINT(EM_DIAGRAM):   end;
3341388   +
3341389   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
3341390   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
3341391   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
3341392   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
3341393   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
3341394   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3341395   +end;
MPRINT(EM_DIAGRAM):   end;
3341396   +else do;
MPRINT(EM_DIAGRAM):   else do;
3341397   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
3341398   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
3341399   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3341400   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
3341401   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
3341402   +   end;
MPRINT(EM_DIAGRAM):   end;
3341403   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
3341404   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
3341405   +   end;
MPRINT(EM_DIAGRAM):   end;
3341406   +   else do;
MPRINT(EM_DIAGRAM):   else do;
3341407   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
3341408   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
3341409   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3341410   +   end;
MPRINT(EM_DIAGRAM):   end;
3341411   +end;
MPRINT(EM_DIAGRAM):   end;
3341412   +
3341413   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
3341414   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
3341415   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
3341416   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
3341417   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
3341418   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3341419   +end;
MPRINT(EM_DIAGRAM):   end;
3341420   +else do;
MPRINT(EM_DIAGRAM):   else do;
3341421   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
3341422   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
3341423   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3341424   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
3341425   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
3341426   +   end;
MPRINT(EM_DIAGRAM):   end;
3341427   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
3341428   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
3341429   +   end;
MPRINT(EM_DIAGRAM):   end;
3341430   +   else do;
MPRINT(EM_DIAGRAM):   else do;
3341431   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
3341432   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
3341433   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3341434   +   end;
MPRINT(EM_DIAGRAM):   end;
3341435   +end;
MPRINT(EM_DIAGRAM):   end;
3341436   +
3341437   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
3341438   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
3341439   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
3341440   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
3341441   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
3341442   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3341443   +end;
MPRINT(EM_DIAGRAM):   end;
3341444   +else do;
MPRINT(EM_DIAGRAM):   else do;
3341445   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
3341446   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
3341447   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3341448   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
3341449   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
3341450   +   end;
MPRINT(EM_DIAGRAM):   end;
3341451   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
3341452   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
3341453   +   end;
MPRINT(EM_DIAGRAM):   end;
3341454   +   else do;
MPRINT(EM_DIAGRAM):   else do;
3341455   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
3341456   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
3341457   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3341458   +   end;
MPRINT(EM_DIAGRAM):   end;
3341459   +end;
MPRINT(EM_DIAGRAM):   end;
3341460   +
3341461   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
3341462   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
3341463   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
3341464   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
3341465   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
3341466   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
3341467   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
3341468   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
3341469   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
3341470   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
3341471   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
3341472   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
3341473   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
3341474   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3341475   +end;
MPRINT(EM_DIAGRAM):   end;
3341476   +else do;
MPRINT(EM_DIAGRAM):   else do;
3341477   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
3341478   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
3341479   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3341480   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
3341481   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
3341482   +   end;
MPRINT(EM_DIAGRAM):   end;
3341483   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
3341484   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
3341485   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
3341486   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
3341487   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
3341488   +   end;
MPRINT(EM_DIAGRAM):   end;
3341489   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
3341490   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
3341491   +   end;
MPRINT(EM_DIAGRAM):   end;
3341492   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
3341493   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
3341494   +   end;
MPRINT(EM_DIAGRAM):   end;
3341495   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
3341496   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
3341497   +   end;
MPRINT(EM_DIAGRAM):   end;
3341498   +   else do;
MPRINT(EM_DIAGRAM):   else do;
3341499   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
3341500   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
3341501   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
3341502   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
3341503   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
3341504   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3341505   +   end;
MPRINT(EM_DIAGRAM):   end;
3341506   +end;
MPRINT(EM_DIAGRAM):   end;
3341507   +
3341508   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
3341509   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
3341510   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
3341511   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
3341512   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
3341513   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
3341514   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
3341515   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
3341516   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
3341517   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
3341518   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
3341519   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
3341520   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
3341521   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
3341522   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3341523   +end;
MPRINT(EM_DIAGRAM):   end;
3341524   +else do;
MPRINT(EM_DIAGRAM):   else do;
3341525   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
3341526   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
3341527   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3341528   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
3341529   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
3341530   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
3341531   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
3341532   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
3341533   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3341534   +         end;
MPRINT(EM_DIAGRAM):   end;
3341535   +         else do;
MPRINT(EM_DIAGRAM):   else do;
3341536   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
3341537   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
3341538   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3341539   +            end;
MPRINT(EM_DIAGRAM):   end;
3341540   +         end;
MPRINT(EM_DIAGRAM):   end;
3341541   +      end;
MPRINT(EM_DIAGRAM):   end;
3341542   +      else do;
MPRINT(EM_DIAGRAM):   else do;
3341543   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
3341544   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
3341545   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3341546   +         end;
MPRINT(EM_DIAGRAM):   end;
3341547   +      end;
MPRINT(EM_DIAGRAM):   end;
3341548   +   end;
MPRINT(EM_DIAGRAM):   end;
3341549   +   else do;
MPRINT(EM_DIAGRAM):   else do;
3341550   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
3341551   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
3341552   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3341553   +      end;
MPRINT(EM_DIAGRAM):   end;
3341554   +      else do;
MPRINT(EM_DIAGRAM):   else do;
3341555   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
3341556   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
3341557   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
3341558   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
3341559   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
3341560   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3341561   +         end;
MPRINT(EM_DIAGRAM):   end;
3341562   +      end;
MPRINT(EM_DIAGRAM):   end;
3341563   +   end;
MPRINT(EM_DIAGRAM):   end;
3341564   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
3341565   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
3341566   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
3341567   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
3341568   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
3341569   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
3341570   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3341571   +   end;
MPRINT(EM_DIAGRAM):   end;
3341572   +end;
MPRINT(EM_DIAGRAM):   end;
3341573   +
3341574   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3341575   +*** Checking missing input Interval
3341576   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
3341577   +
3341578   +IF NMISS(
3341579   +   AcceptedCmpTotal ,
3341580   +   Age ,
3341581   +   Frq ,
3341582   +   Income ,
3341583   +   Kidhome ,
3341584   +   MntFishProducts ,
3341585   +   MntFruits ,
3341586   +   MntGoldProds ,
3341587   +   MntSweetProducts ,
3341588   +   MonthsAsCustomer ,
3341589   +   NumDealsPurchases ,
3341590   +   NumWebVisitsMonth ,
3341591   +   RFMstat ,
3341592   +   RMntFrq ,
3341593   +   Recency ,
3341594   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , 
MntFishProducts , MntFruits , MntGoldProds , MntSweetProducts , MonthsAsCustomer , 
NumDealsPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , Teenhome ) THEN DO;
3341595   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
3341596   +
3341597   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3341598   +END;
MPRINT(EM_DIAGRAM):   END;
3341599   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3341600   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
3341601   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3341602   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
3341603   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
3341604   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
3341605   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
3341606   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
3341607   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
3341608   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
3341609   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
3341610   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
3341611   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
3341612   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
3341613   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
3341614   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
3341615   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
3341616   +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
3341617   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
3341618   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
3341619   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
3341620   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
3341621   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
3341622   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
3341623   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
3341624   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
3341625   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
3341626   +END;
MPRINT(EM_DIAGRAM):   END;
3341627   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
3341628   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
3341629   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
3341630   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
3341631   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
3341632   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
3341633   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
3341634   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
3341635   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
3341636   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
3341637   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
3341638   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
3341639   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
3341640   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
3341641   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
3341642   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
3341643   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
3341644   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
3341645   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
3341646   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
3341647   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
3341648   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
3341649   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
3341650   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
3341651   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
3341652   +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
3341653   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
3341654   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
3341655   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
3341656   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
3341657   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
3341658   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
3341659   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
3341660   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
3341661   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
3341662   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
3341663   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
3341664   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
3341665   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
3341666   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
3341667   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
3341668   +END;
MPRINT(EM_DIAGRAM):   END;
3341669   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3341670   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
3341671   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3341672   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3341673   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
3341674   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3341675   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3341676   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
3341677   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3341678   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
3341679   +   H1x1_1  =     0.41659167143273 * S_AcceptedCmpTotal
3341680   +          +    -0.43555779881125 * S_Age  +    -2.30840270296038 * S_Frq
3341681   +          +    -0.19595283430985 * S_Income  +     0.38317082020813 *
3341682   +        S_Kidhome  +    -0.80522492908143 * S_MntFishProducts
3341683   +          +    -0.11718232128175 * S_MntFruits  +     0.35136974187949 *
3341684   +        S_MntGoldProds  +     0.35653263985472 * S_MntSweetProducts
3341685   +          +     0.04740894983714 * S_MonthsAsCustomer
3341686   +          +     1.39008006467326 * S_NumDealsPurchases
3341687   +          +     0.21608999126738 * S_NumWebVisitsMonth
3341688   +          +     0.05554993295686 * S_RFMstat  +     0.72537114423538 *
3341689   +        S_RMntFrq  +    -0.30830265825486 * S_Recency
3341690   +          +     0.40535135320567 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.41659167143273 * S_AcceptedCmpTotal + -0.43555779881125 * 
S_Age + -2.30840270296038 * S_Frq + -0.19595283430985 * S_Income + 0.38317082020813 * 
S_Kidhome + -0.80522492908143 * S_MntFishProducts + -0.11718232128175 * S_MntFruits + 
0.35136974187949 * S_MntGoldProds + 0.35653263985472 * S_MntSweetProducts + 0.04740894983714 * 
S_MonthsAsCustomer + 1.39008006467326 * S_NumDealsPurchases + 0.21608999126738 * 
S_NumWebVisitsMonth + 0.05554993295686 * S_RFMstat + 0.72537114423538 * S_RMntFrq + 
-0.30830265825486 * S_Recency + 0.40535135320567 * S_Teenhome ;
3341691   +   H1x1_2  =    -1.31386211742069 * S_AcceptedCmpTotal
3341692   +          +    -0.68003628868004 * S_Age  +     0.59153203929335 * S_Frq
3341693   +          +    -0.79826058362974 * S_Income  +     0.00134219038557 *
3341694   +        S_Kidhome  +     0.14291973705288 * S_MntFishProducts
3341695   +          +    -0.35615254801925 * S_MntFruits  +    -0.65787491938607 *
3341696   +        S_MntGoldProds  +    -0.81826173843883 * S_MntSweetProducts
3341697   +          +     0.11090137331567 * S_MonthsAsCustomer
3341698   +          +     0.22617410760471 * S_NumDealsPurchases
3341699   +          +    -1.50612324994247 * S_NumWebVisitsMonth
3341700   +          +    -1.65797080727762 * S_RFMstat  +    -0.00402190774815 *
3341701   +        S_RMntFrq  +     1.36064773168913 * S_Recency
3341702   +          +     0.74568313622632 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -1.31386211742069 * S_AcceptedCmpTotal + -0.68003628868004 * 
S_Age + 0.59153203929335 * S_Frq + -0.79826058362974 * S_Income + 0.00134219038557 * S_Kidhome 
+ 0.14291973705288 * S_MntFishProducts + -0.35615254801925 * S_MntFruits + -0.65787491938607 * 
S_MntGoldProds + -0.81826173843883 * S_MntSweetProducts + 0.11090137331567 * 
S_MonthsAsCustomer + 0.22617410760471 * S_NumDealsPurchases + -1.50612324994247 * 
S_NumWebVisitsMonth + -1.65797080727762 * S_RFMstat + -0.00402190774815 * S_RMntFrq + 
1.36064773168913 * S_Recency + 0.74568313622632 * S_Teenhome ;
3341703   +   H1x1_3  =      0.0964601887805 * S_AcceptedCmpTotal
3341704   +          +     0.74252939620948 * S_Age  +    -0.53369097393206 * S_Frq
3341705   +          +    -1.05153636403464 * S_Income  +      1.6966882737615 *
3341706   +        S_Kidhome  +     -1.1927564753709 * S_MntFishProducts
3341707   +          +     0.29709638691214 * S_MntFruits  +     0.08254164506598 *
3341708   +        S_MntGoldProds  +     0.69694252258498 * S_MntSweetProducts
3341709   +          +     1.12489244540865 * S_MonthsAsCustomer
3341710   +          +     0.65186273365438 * S_NumDealsPurchases
3341711   +          +    -2.32770073685469 * S_NumWebVisitsMonth
3341712   +          +    -0.47647348844998 * S_RFMstat  +     0.99016859473564 *
3341713   +        S_RMntFrq  +     2.60277611818411 * S_Recency
3341714   +          +     0.85460652910726 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.0964601887805 * S_AcceptedCmpTotal + 0.74252939620948 * S_Age 
+ -0.53369097393206 * S_Frq + -1.05153636403464 * S_Income + 1.6966882737615 * S_Kidhome + 
-1.1927564753709 * S_MntFishProducts + 0.29709638691214 * S_MntFruits + 0.08254164506598 * 
S_MntGoldProds + 0.69694252258498 * S_MntSweetProducts + 1.12489244540865 * S_MonthsAsCustomer 
+ 0.65186273365438 * S_NumDealsPurchases + -2.32770073685469 * S_NumWebVisitsMonth + 
-0.47647348844998 * S_RFMstat + 0.99016859473564 * S_RMntFrq + 2.60277611818411 * S_Recency + 
0.85460652910726 * S_Teenhome ;
3341715   +   H1x1_4  =     0.29649216056803 * S_AcceptedCmpTotal
3341716   +          +    -0.02766114349884 * S_Age  +     0.24204272805161 * S_Frq
3341717   +          +     1.18769824983204 * S_Income  +    -0.68284444935451 *
3341718   +        S_Kidhome  +    -0.11979065412591 * S_MntFishProducts
3341719   +          +    -0.15995606022202 * S_MntFruits  +    -0.10230477550678 *
3341720   +        S_MntGoldProds  +    -0.12747851524837 * S_MntSweetProducts
3341721   +          +     0.30886829972356 * S_MonthsAsCustomer
3341722   +          +     0.65492907685123 * S_NumDealsPurchases
3341723   +          +     0.10822300736498 * S_NumWebVisitsMonth
3341724   +          +     0.08852254070372 * S_RFMstat  +     0.49057996875589 *
3341725   +        S_RMntFrq  +     -0.7378392134822 * S_Recency
3341726   +          +    -0.99040897413441 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.29649216056803 * S_AcceptedCmpTotal + -0.02766114349884 * 
S_Age + 0.24204272805161 * S_Frq + 1.18769824983204 * S_Income + -0.68284444935451 * S_Kidhome 
+ -0.11979065412591 * S_MntFishProducts + -0.15995606022202 * S_MntFruits + -0.10230477550678 
* S_MntGoldProds + -0.12747851524837 * S_MntSweetProducts + 0.30886829972356 * 
S_MonthsAsCustomer + 0.65492907685123 * S_NumDealsPurchases + 0.10822300736498 * 
S_NumWebVisitsMonth + 0.08852254070372 * S_RFMstat + 0.49057996875589 * S_RMntFrq + 
-0.7378392134822 * S_Recency + -0.99040897413441 * S_Teenhome ;
3341727   +   H1x1_1  = H1x1_1  +    -1.46086901919186 * AcceptedCmp10
3341728   +          +    -0.06086543707595 * AcceptedCmp20  +    -0.17639316937072 *
3341729   +        AcceptedCmp30  +    -0.92178496493897 * AcceptedCmp40
3341730   +          +     0.55970684984856 * AcceptedCmp50  +    -0.55527703641539 *
3341731   +        Complain0  +    -0.01739075877118 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -1.46086901919186 * AcceptedCmp10 + -0.06086543707595 
* AcceptedCmp20 + -0.17639316937072 * AcceptedCmp30 + -0.92178496493897 * AcceptedCmp40 + 
0.55970684984856 * AcceptedCmp50 + -0.55527703641539 * Complain0 + -0.01739075877118 * 
HigherEducationBinary0 ;
3341732   +   H1x1_2  = H1x1_2  +     -0.0768775139385 * AcceptedCmp10
3341733   +          +     0.16675663908361 * AcceptedCmp20  +    -0.24864607646531 *
3341734   +        AcceptedCmp30  +    -2.72835017974134 * AcceptedCmp40
3341735   +          +     2.50464945392047 * AcceptedCmp50  +    -0.57926150830705 *
3341736   +        Complain0  +     0.39982220960967 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.0768775139385 * AcceptedCmp10 + 0.16675663908361 * 
AcceptedCmp20 + -0.24864607646531 * AcceptedCmp30 + -2.72835017974134 * AcceptedCmp40 + 
2.50464945392047 * AcceptedCmp50 + -0.57926150830705 * Complain0 + 0.39982220960967 * 
HigherEducationBinary0 ;
3341737   +   H1x1_3  = H1x1_3  +    -0.54666498984131 * AcceptedCmp10
3341738   +          +     1.29686034270038 * AcceptedCmp20  +      0.2422221770056 *
3341739   +        AcceptedCmp30  +    -0.30436834269159 * AcceptedCmp40
3341740   +          +     0.80634953873096 * AcceptedCmp50  +    -1.80822548041633 *
3341741   +        Complain0  +    -0.40212927148666 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.54666498984131 * AcceptedCmp10 + 1.29686034270038 * 
AcceptedCmp20 + 0.2422221770056 * AcceptedCmp30 + -0.30436834269159 * AcceptedCmp40 + 
0.80634953873096 * AcceptedCmp50 + -1.80822548041633 * Complain0 + -0.40212927148666 * 
HigherEducationBinary0 ;
3341742   +   H1x1_4  = H1x1_4  +    -0.44403138924573 * AcceptedCmp10
3341743   +          +     0.13148228993691 * AcceptedCmp20  +    -0.68858891502154 *
3341744   +        AcceptedCmp30  +    -0.73562513066917 * AcceptedCmp40
3341745   +          +     0.14959106694889 * AcceptedCmp50  +    -0.62889493860419 *
3341746   +        Complain0  +     0.43482765846469 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.44403138924573 * AcceptedCmp10 + 0.13148228993691 * 
AcceptedCmp20 + -0.68858891502154 * AcceptedCmp30 + -0.73562513066917 * AcceptedCmp40 + 
0.14959106694889 * AcceptedCmp50 + -0.62889493860419 * Complain0 + 0.43482765846469 * 
HigherEducationBinary0 ;
3341747   +   H1x1_1  = H1x1_1  +    -0.45985316758065 * Education2n_Cycle
3341748   +          +     0.50059543788524 * EducationBasic  +    -0.03949874118569 *
3341749   +        EducationGraduation  +     0.30922934477029 * EducationMaster
3341750   +          +     0.01556098790048 * Marital_StatusDivorced
3341751   +          +     0.00512523764645 * Marital_StatusMarried
3341752   +          +    -0.33980799511448 * Marital_StatusSingle
3341753   +          +    -0.70457839004957 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.45985316758065 * Education2n_Cycle + 
0.50059543788524 * EducationBasic + -0.03949874118569 * EducationGraduation + 0.30922934477029 
* EducationMaster + 0.01556098790048 * Marital_StatusDivorced + 0.00512523764645 * 
Marital_StatusMarried + -0.33980799511448 * Marital_StatusSingle + -0.70457839004957 * 
Marital_StatusTogether ;
3341754   +   H1x1_2  = H1x1_2  +    -1.22651000864813 * Education2n_Cycle
3341755   +          +     1.57892586252081 * EducationBasic  +    -0.50402333879661 *
3341756   +        EducationGraduation  +     0.69751348344321 * EducationMaster
3341757   +          +     0.01069434029942 * Marital_StatusDivorced
3341758   +          +      0.3116587285334 * Marital_StatusMarried
3341759   +          +    -0.98635795023549 * Marital_StatusSingle
3341760   +          +    -1.19926386369298 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -1.22651000864813 * Education2n_Cycle + 
1.57892586252081 * EducationBasic + -0.50402333879661 * EducationGraduation + 0.69751348344321 
* EducationMaster + 0.01069434029942 * Marital_StatusDivorced + 0.3116587285334 * 
Marital_StatusMarried + -0.98635795023549 * Marital_StatusSingle + -1.19926386369298 * 
Marital_StatusTogether ;
3341761   +   H1x1_3  = H1x1_3  +     0.01113602290833 * Education2n_Cycle
3341762   +          +    -0.08151748589167 * EducationBasic  +     1.04895627364724 *
3341763   +        EducationGraduation  +     -0.8155628950024 * EducationMaster
3341764   +          +    -0.60393077836174 * Marital_StatusDivorced
3341765   +          +    -0.18138878944937 * Marital_StatusMarried
3341766   +          +     0.53013032587101 * Marital_StatusSingle
3341767   +          +    -0.48355749431477 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.01113602290833 * Education2n_Cycle + 
-0.08151748589167 * EducationBasic + 1.04895627364724 * EducationGraduation + -0.8155628950024 
* EducationMaster + -0.60393077836174 * Marital_StatusDivorced + -0.18138878944937 * 
Marital_StatusMarried + 0.53013032587101 * Marital_StatusSingle + -0.48355749431477 * 
Marital_StatusTogether ;
3341768   +   H1x1_4  = H1x1_4  +    -0.16183745161166 * Education2n_Cycle
3341769   +          +     0.24616875488483 * EducationBasic  +     0.33817097681105 *
3341770   +        EducationGraduation  +    -0.40675219343984 * EducationMaster
3341771   +          +     0.43223311502025 * Marital_StatusDivorced
3341772   +          +    -1.15741416919552 * Marital_StatusMarried
3341773   +          +     0.83939799284264 * Marital_StatusSingle
3341774   +          +     -1.4386179382289 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.16183745161166 * Education2n_Cycle + 
0.24616875488483 * EducationBasic + 0.33817097681105 * EducationGraduation + -0.40675219343984 
* EducationMaster + 0.43223311502025 * Marital_StatusDivorced + -1.15741416919552 * 
Marital_StatusMarried + 0.83939799284264 * Marital_StatusSingle + -1.4386179382289 * 
Marital_StatusTogether ;
3341775   +   H1x1_1  =    -1.10575074809008 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -1.10575074809008 + H1x1_1 ;
3341776   +   H1x1_2  =    -0.13208482087653 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.13208482087653 + H1x1_2 ;
3341777   +   H1x1_3  =    -0.62883550284187 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.62883550284187 + H1x1_3 ;
3341778   +   H1x1_4  =    -0.60467840532552 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -0.60467840532552 + H1x1_4 ;
3341779   +   H1x1_5  = 0;
MPRINT(EM_DIAGRAM):   H1x1_5 = 0;
3341780   +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 );
3341781   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
3341782   +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
3341783   +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
3341784   +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
3341785   +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
3341786   +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
3341787   +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
3341788   +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
3341789   +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
3341790   +   H1x1_5  = EXP(H1x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_5 = EXP(H1x1_5 - _MAX_);
3341791   +   _SUM_ = _SUM_ + H1x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_5 ;
3341792   +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
3341793   +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
3341794   +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
3341795   +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
3341796   +   H1x1_5  = H1x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 / _SUM_;
3341797   +END;
MPRINT(EM_DIAGRAM):   END;
3341798   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
3341799   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
3341800   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
3341801   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
3341802   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
3341803   +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
3341804   +END;
MPRINT(EM_DIAGRAM):   END;
3341805   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3341806   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
3341807   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3341808   +
3341809   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
3341810   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
3341811   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
3341812   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
3341813   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
3341814   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3341815   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
3341816   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
3341817   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
3341818   +end;
MPRINT(EM_DIAGRAM):   end;
3341819   +else do;
MPRINT(EM_DIAGRAM):   else do;
3341820   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
3341821   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
3341822   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
3341823   +   end;
MPRINT(EM_DIAGRAM):   end;
3341824   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
3341825   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
3341826   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
3341827   +   end;
MPRINT(EM_DIAGRAM):   end;
3341828   +   else do;
MPRINT(EM_DIAGRAM):   else do;
3341829   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
3341830   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
3341831   +   end;
MPRINT(EM_DIAGRAM):   end;
3341832   +end;
MPRINT(EM_DIAGRAM):   end;
3341833   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
3341834   +   P_DepVar1  =     13.9520296268246 * H1x1_1  +    -14.3029863704541 * H1x1_2
3341835   +          +    -2.99382524020275 * H1x1_3  +     6.44484431028575 * H1x1_4
3341836   +          +    -2.75024533065893 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 13.9520296268246 * H1x1_1 + -14.3029863704541 * H1x1_2 + 
-2.99382524020275 * H1x1_3 + 6.44484431028575 * H1x1_4 + -2.75024533065893 * H1x1_5 ;
3341837   +   P_DepVar1  =    -1.37523509009785 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.37523509009785 + P_DepVar1 ;
3341838   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
3341839   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
3341840   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
3341841   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
3341842   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
3341843   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
3341844   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
3341845   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
3341846   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
3341847   +END;
MPRINT(EM_DIAGRAM):   END;
3341848   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
3341849   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
3341850   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
3341851   +END;
MPRINT(EM_DIAGRAM):   END;
3341852   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
3341853   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
3341854   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
3341855   +END;
MPRINT(EM_DIAGRAM):   END;
3341856   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
3341857   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
3341858   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
3341859   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
3341860   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
3341861   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
3341862   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
3341863   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3341864   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
3341865   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3341866   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
3341867   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
3341868   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
3341869   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
3341870   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
3341871   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
3341872   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
3341873   +END;
MPRINT(EM_DIAGRAM):   END;
3341874   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
3341875   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
3341876   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
3341877   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
3341878    run;

NOTE: DATA STEP view saved on file EMWS8.AUTONEURAL34_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.META3_TRAIN.VIEW used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
      

MPRINT(EM_DIAGRAM):   quit;
3341879    quit;
3341880    filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
3341881    filename emflow
3341881  ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural34\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural34\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * AutoNeural34: Scoring VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
3341882    *------------------------------------------------------------*;
3341883    * AutoNeural34: Scoring VALIDATE data;
3341884    *------------------------------------------------------------*;
3341885    data EMWS8.AutoNeural34_VALIDATE
3341886    / view=EMWS8.AutoNeural34_VALIDATE
3341887    ;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural34_VALIDATE / view=EMWS8.AutoNeural34_VALIDATE ;
3341888    set EMWS8.Meta3_VALIDATE
3341889    ;
MPRINT(EM_DIAGRAM):   set EMWS8.Meta3_VALIDATE ;
3341890    %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural34\EMFLOWSCORE.sas.
3341891   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
3341892   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
3341893   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
3341894   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
3341895   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
3341896   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
3341897   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
3341898   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
3341899   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
3341900   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
3341901   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
3341902   +LENGTH _WARN_ $4
3341903   +      F_DepVar  $ 12
3341904   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
3341905   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
3341906   +
3341907   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
3341908   +
3341909   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
3341910   +
3341911   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
3341912   +
3341913   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
3341914   +
3341915   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
3341916   +
3341917   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
3341918   +
3341919   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
3341920   +
3341921   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
3341922   +
3341923   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
3341924   +
3341925   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
3341926   +
3341927   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
3341928   +
3341929   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
3341930   +
3341931   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
3341932   +
3341933   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
3341934   +
3341935   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
3341936   +
3341937   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
3341938   +
3341939   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
3341940   +
3341941   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
3341942   +
3341943   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
3341944   +
3341945   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
3341946   +
3341947   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
3341948   +
3341949   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
3341950   +
3341951   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
3341952   +
3341953   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
3341954   +
3341955   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
3341956   +
3341957   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
3341958   +
3341959   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
3341960   +
3341961   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
3341962   +
3341963   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
3341964   +
3341965   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
3341966   +
3341967   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
3341968   +
3341969   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
3341970   +
3341971   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
3341972   +
3341973   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
3341974   +
3341975   +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
3341976   +
3341977   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
3341978   +
3341979   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
3341980   +
3341981   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
3341982   +
3341983   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
3341984   +
3341985   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
3341986   +
3341987   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
3341988   +
3341989   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
3341990   +
3341991   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
3341992   +
3341993   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
3341994   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
3341995   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
3341996   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
3341997   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
3341998   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3341999   +end;
MPRINT(EM_DIAGRAM):   end;
3342000   +else do;
MPRINT(EM_DIAGRAM):   else do;
3342001   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
3342002   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
3342003   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3342004   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
3342005   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
3342006   +   end;
MPRINT(EM_DIAGRAM):   end;
3342007   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
3342008   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
3342009   +   end;
MPRINT(EM_DIAGRAM):   end;
3342010   +   else do;
MPRINT(EM_DIAGRAM):   else do;
3342011   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
3342012   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
3342013   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3342014   +   end;
MPRINT(EM_DIAGRAM):   end;
3342015   +end;
MPRINT(EM_DIAGRAM):   end;
3342016   +
3342017   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
3342018   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
3342019   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
3342020   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
3342021   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
3342022   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3342023   +end;
MPRINT(EM_DIAGRAM):   end;
3342024   +else do;
MPRINT(EM_DIAGRAM):   else do;
3342025   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
3342026   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
3342027   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3342028   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
3342029   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
3342030   +   end;
MPRINT(EM_DIAGRAM):   end;
3342031   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
3342032   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
3342033   +   end;
MPRINT(EM_DIAGRAM):   end;
3342034   +   else do;
MPRINT(EM_DIAGRAM):   else do;
3342035   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
3342036   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
3342037   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3342038   +   end;
MPRINT(EM_DIAGRAM):   end;
3342039   +end;
MPRINT(EM_DIAGRAM):   end;
3342040   +
3342041   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
3342042   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
3342043   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
3342044   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
3342045   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
3342046   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3342047   +end;
MPRINT(EM_DIAGRAM):   end;
3342048   +else do;
MPRINT(EM_DIAGRAM):   else do;
3342049   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
3342050   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
3342051   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3342052   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
3342053   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
3342054   +   end;
MPRINT(EM_DIAGRAM):   end;
3342055   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
3342056   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
3342057   +   end;
MPRINT(EM_DIAGRAM):   end;
3342058   +   else do;
MPRINT(EM_DIAGRAM):   else do;
3342059   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
3342060   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
3342061   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3342062   +   end;
MPRINT(EM_DIAGRAM):   end;
3342063   +end;
MPRINT(EM_DIAGRAM):   end;
3342064   +
3342065   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
3342066   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
3342067   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
3342068   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
3342069   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
3342070   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3342071   +end;
MPRINT(EM_DIAGRAM):   end;
3342072   +else do;
MPRINT(EM_DIAGRAM):   else do;
3342073   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
3342074   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
3342075   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3342076   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
3342077   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
3342078   +   end;
MPRINT(EM_DIAGRAM):   end;
3342079   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
3342080   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
3342081   +   end;
MPRINT(EM_DIAGRAM):   end;
3342082   +   else do;
MPRINT(EM_DIAGRAM):   else do;
3342083   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
3342084   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
3342085   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3342086   +   end;
MPRINT(EM_DIAGRAM):   end;
3342087   +end;
MPRINT(EM_DIAGRAM):   end;
3342088   +
3342089   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
3342090   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
3342091   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
3342092   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
3342093   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
3342094   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3342095   +end;
MPRINT(EM_DIAGRAM):   end;
3342096   +else do;
MPRINT(EM_DIAGRAM):   else do;
3342097   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
3342098   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
3342099   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3342100   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
3342101   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
3342102   +   end;
MPRINT(EM_DIAGRAM):   end;
3342103   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
3342104   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
3342105   +   end;
MPRINT(EM_DIAGRAM):   end;
3342106   +   else do;
MPRINT(EM_DIAGRAM):   else do;
3342107   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
3342108   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
3342109   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3342110   +   end;
MPRINT(EM_DIAGRAM):   end;
3342111   +end;
MPRINT(EM_DIAGRAM):   end;
3342112   +
3342113   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
3342114   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
3342115   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
3342116   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
3342117   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
3342118   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3342119   +end;
MPRINT(EM_DIAGRAM):   end;
3342120   +else do;
MPRINT(EM_DIAGRAM):   else do;
3342121   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
3342122   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
3342123   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3342124   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
3342125   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
3342126   +   end;
MPRINT(EM_DIAGRAM):   end;
3342127   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
3342128   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
3342129   +   end;
MPRINT(EM_DIAGRAM):   end;
3342130   +   else do;
MPRINT(EM_DIAGRAM):   else do;
3342131   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
3342132   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
3342133   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3342134   +   end;
MPRINT(EM_DIAGRAM):   end;
3342135   +end;
MPRINT(EM_DIAGRAM):   end;
3342136   +
3342137   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
3342138   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
3342139   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
3342140   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
3342141   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
3342142   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3342143   +end;
MPRINT(EM_DIAGRAM):   end;
3342144   +else do;
MPRINT(EM_DIAGRAM):   else do;
3342145   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
3342146   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
3342147   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3342148   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
3342149   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
3342150   +   end;
MPRINT(EM_DIAGRAM):   end;
3342151   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
3342152   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
3342153   +   end;
MPRINT(EM_DIAGRAM):   end;
3342154   +   else do;
MPRINT(EM_DIAGRAM):   else do;
3342155   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
3342156   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
3342157   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3342158   +   end;
MPRINT(EM_DIAGRAM):   end;
3342159   +end;
MPRINT(EM_DIAGRAM):   end;
3342160   +
3342161   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
3342162   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
3342163   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
3342164   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
3342165   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
3342166   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
3342167   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
3342168   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
3342169   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
3342170   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
3342171   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
3342172   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
3342173   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
3342174   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3342175   +end;
MPRINT(EM_DIAGRAM):   end;
3342176   +else do;
MPRINT(EM_DIAGRAM):   else do;
3342177   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
3342178   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
3342179   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3342180   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
3342181   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
3342182   +   end;
MPRINT(EM_DIAGRAM):   end;
3342183   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
3342184   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
3342185   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
3342186   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
3342187   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
3342188   +   end;
MPRINT(EM_DIAGRAM):   end;
3342189   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
3342190   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
3342191   +   end;
MPRINT(EM_DIAGRAM):   end;
3342192   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
3342193   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
3342194   +   end;
MPRINT(EM_DIAGRAM):   end;
3342195   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
3342196   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
3342197   +   end;
MPRINT(EM_DIAGRAM):   end;
3342198   +   else do;
MPRINT(EM_DIAGRAM):   else do;
3342199   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
3342200   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
3342201   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
3342202   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
3342203   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
3342204   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3342205   +   end;
MPRINT(EM_DIAGRAM):   end;
3342206   +end;
MPRINT(EM_DIAGRAM):   end;
3342207   +
3342208   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
3342209   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
3342210   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
3342211   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
3342212   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
3342213   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
3342214   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
3342215   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
3342216   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
3342217   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
3342218   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
3342219   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
3342220   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
3342221   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
3342222   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3342223   +end;
MPRINT(EM_DIAGRAM):   end;
3342224   +else do;
MPRINT(EM_DIAGRAM):   else do;
3342225   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
3342226   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
3342227   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3342228   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
3342229   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
3342230   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
3342231   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
3342232   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
3342233   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3342234   +         end;
MPRINT(EM_DIAGRAM):   end;
3342235   +         else do;
MPRINT(EM_DIAGRAM):   else do;
3342236   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
3342237   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
3342238   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3342239   +            end;
MPRINT(EM_DIAGRAM):   end;
3342240   +         end;
MPRINT(EM_DIAGRAM):   end;
3342241   +      end;
MPRINT(EM_DIAGRAM):   end;
3342242   +      else do;
MPRINT(EM_DIAGRAM):   else do;
3342243   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
3342244   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
3342245   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3342246   +         end;
MPRINT(EM_DIAGRAM):   end;
3342247   +      end;
MPRINT(EM_DIAGRAM):   end;
3342248   +   end;
MPRINT(EM_DIAGRAM):   end;
3342249   +   else do;
MPRINT(EM_DIAGRAM):   else do;
3342250   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
3342251   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
3342252   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3342253   +      end;
MPRINT(EM_DIAGRAM):   end;
3342254   +      else do;
MPRINT(EM_DIAGRAM):   else do;
3342255   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
3342256   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
3342257   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
3342258   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
3342259   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
3342260   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3342261   +         end;
MPRINT(EM_DIAGRAM):   end;
3342262   +      end;
MPRINT(EM_DIAGRAM):   end;
3342263   +   end;
MPRINT(EM_DIAGRAM):   end;
3342264   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
3342265   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
3342266   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
3342267   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
3342268   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
3342269   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
3342270   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3342271   +   end;
MPRINT(EM_DIAGRAM):   end;
3342272   +end;
MPRINT(EM_DIAGRAM):   end;
3342273   +
3342274   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3342275   +*** Checking missing input Interval
3342276   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
3342277   +
3342278   +IF NMISS(
3342279   +   AcceptedCmpTotal ,
3342280   +   Age ,
3342281   +   Frq ,
3342282   +   Income ,
3342283   +   Kidhome ,
3342284   +   MntFishProducts ,
3342285   +   MntFruits ,
3342286   +   MntGoldProds ,
3342287   +   MntSweetProducts ,
3342288   +   MonthsAsCustomer ,
3342289   +   NumDealsPurchases ,
3342290   +   NumWebVisitsMonth ,
3342291   +   RFMstat ,
3342292   +   RMntFrq ,
3342293   +   Recency ,
3342294   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , 
MntFishProducts , MntFruits , MntGoldProds , MntSweetProducts , MonthsAsCustomer , 
NumDealsPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , Teenhome ) THEN DO;
3342295   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
3342296   +
3342297   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3342298   +END;
MPRINT(EM_DIAGRAM):   END;
3342299   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3342300   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
3342301   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3342302   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
3342303   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
3342304   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
3342305   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
3342306   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
3342307   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
3342308   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
3342309   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
3342310   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
3342311   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
3342312   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
3342313   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
3342314   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
3342315   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
3342316   +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
3342317   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
3342318   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
3342319   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
3342320   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
3342321   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
3342322   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
3342323   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
3342324   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
3342325   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
3342326   +END;
MPRINT(EM_DIAGRAM):   END;
3342327   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
3342328   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
3342329   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
3342330   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
3342331   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
3342332   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
3342333   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
3342334   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
3342335   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
3342336   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
3342337   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
3342338   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
3342339   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
3342340   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
3342341   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
3342342   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
3342343   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
3342344   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
3342345   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
3342346   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
3342347   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
3342348   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
3342349   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
3342350   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
3342351   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
3342352   +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
3342353   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
3342354   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
3342355   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
3342356   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
3342357   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
3342358   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
3342359   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
3342360   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
3342361   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
3342362   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
3342363   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
3342364   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
3342365   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
3342366   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
3342367   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
3342368   +END;
MPRINT(EM_DIAGRAM):   END;
3342369   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3342370   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
3342371   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3342372   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3342373   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
3342374   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3342375   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3342376   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
3342377   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3342378   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
3342379   +   H1x1_1  =     0.41659167143273 * S_AcceptedCmpTotal
3342380   +          +    -0.43555779881125 * S_Age  +    -2.30840270296038 * S_Frq
3342381   +          +    -0.19595283430985 * S_Income  +     0.38317082020813 *
3342382   +        S_Kidhome  +    -0.80522492908143 * S_MntFishProducts
3342383   +          +    -0.11718232128175 * S_MntFruits  +     0.35136974187949 *
3342384   +        S_MntGoldProds  +     0.35653263985472 * S_MntSweetProducts
3342385   +          +     0.04740894983714 * S_MonthsAsCustomer
3342386   +          +     1.39008006467326 * S_NumDealsPurchases
3342387   +          +     0.21608999126738 * S_NumWebVisitsMonth
3342388   +          +     0.05554993295686 * S_RFMstat  +     0.72537114423538 *
3342389   +        S_RMntFrq  +    -0.30830265825486 * S_Recency
3342390   +          +     0.40535135320567 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.41659167143273 * S_AcceptedCmpTotal + -0.43555779881125 * 
S_Age + -2.30840270296038 * S_Frq + -0.19595283430985 * S_Income + 0.38317082020813 * 
S_Kidhome + -0.80522492908143 * S_MntFishProducts + -0.11718232128175 * S_MntFruits + 
0.35136974187949 * S_MntGoldProds + 0.35653263985472 * S_MntSweetProducts + 0.04740894983714 * 
S_MonthsAsCustomer + 1.39008006467326 * S_NumDealsPurchases + 0.21608999126738 * 
S_NumWebVisitsMonth + 0.05554993295686 * S_RFMstat + 0.72537114423538 * S_RMntFrq + 
-0.30830265825486 * S_Recency + 0.40535135320567 * S_Teenhome ;
3342391   +   H1x1_2  =    -1.31386211742069 * S_AcceptedCmpTotal
3342392   +          +    -0.68003628868004 * S_Age  +     0.59153203929335 * S_Frq
3342393   +          +    -0.79826058362974 * S_Income  +     0.00134219038557 *
3342394   +        S_Kidhome  +     0.14291973705288 * S_MntFishProducts
3342395   +          +    -0.35615254801925 * S_MntFruits  +    -0.65787491938607 *
3342396   +        S_MntGoldProds  +    -0.81826173843883 * S_MntSweetProducts
3342397   +          +     0.11090137331567 * S_MonthsAsCustomer
3342398   +          +     0.22617410760471 * S_NumDealsPurchases
3342399   +          +    -1.50612324994247 * S_NumWebVisitsMonth
3342400   +          +    -1.65797080727762 * S_RFMstat  +    -0.00402190774815 *
3342401   +        S_RMntFrq  +     1.36064773168913 * S_Recency
3342402   +          +     0.74568313622632 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -1.31386211742069 * S_AcceptedCmpTotal + -0.68003628868004 * 
S_Age + 0.59153203929335 * S_Frq + -0.79826058362974 * S_Income + 0.00134219038557 * S_Kidhome 
+ 0.14291973705288 * S_MntFishProducts + -0.35615254801925 * S_MntFruits + -0.65787491938607 * 
S_MntGoldProds + -0.81826173843883 * S_MntSweetProducts + 0.11090137331567 * 
S_MonthsAsCustomer + 0.22617410760471 * S_NumDealsPurchases + -1.50612324994247 * 
S_NumWebVisitsMonth + -1.65797080727762 * S_RFMstat + -0.00402190774815 * S_RMntFrq + 
1.36064773168913 * S_Recency + 0.74568313622632 * S_Teenhome ;
3342403   +   H1x1_3  =      0.0964601887805 * S_AcceptedCmpTotal
3342404   +          +     0.74252939620948 * S_Age  +    -0.53369097393206 * S_Frq
3342405   +          +    -1.05153636403464 * S_Income  +      1.6966882737615 *
3342406   +        S_Kidhome  +     -1.1927564753709 * S_MntFishProducts
3342407   +          +     0.29709638691214 * S_MntFruits  +     0.08254164506598 *
3342408   +        S_MntGoldProds  +     0.69694252258498 * S_MntSweetProducts
3342409   +          +     1.12489244540865 * S_MonthsAsCustomer
3342410   +          +     0.65186273365438 * S_NumDealsPurchases
3342411   +          +    -2.32770073685469 * S_NumWebVisitsMonth
3342412   +          +    -0.47647348844998 * S_RFMstat  +     0.99016859473564 *
3342413   +        S_RMntFrq  +     2.60277611818411 * S_Recency
3342414   +          +     0.85460652910726 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.0964601887805 * S_AcceptedCmpTotal + 0.74252939620948 * S_Age 
+ -0.53369097393206 * S_Frq + -1.05153636403464 * S_Income + 1.6966882737615 * S_Kidhome + 
-1.1927564753709 * S_MntFishProducts + 0.29709638691214 * S_MntFruits + 0.08254164506598 * 
S_MntGoldProds + 0.69694252258498 * S_MntSweetProducts + 1.12489244540865 * S_MonthsAsCustomer 
+ 0.65186273365438 * S_NumDealsPurchases + -2.32770073685469 * S_NumWebVisitsMonth + 
-0.47647348844998 * S_RFMstat + 0.99016859473564 * S_RMntFrq + 2.60277611818411 * S_Recency + 
0.85460652910726 * S_Teenhome ;
3342415   +   H1x1_4  =     0.29649216056803 * S_AcceptedCmpTotal
3342416   +          +    -0.02766114349884 * S_Age  +     0.24204272805161 * S_Frq
3342417   +          +     1.18769824983204 * S_Income  +    -0.68284444935451 *
3342418   +        S_Kidhome  +    -0.11979065412591 * S_MntFishProducts
3342419   +          +    -0.15995606022202 * S_MntFruits  +    -0.10230477550678 *
3342420   +        S_MntGoldProds  +    -0.12747851524837 * S_MntSweetProducts
3342421   +          +     0.30886829972356 * S_MonthsAsCustomer
3342422   +          +     0.65492907685123 * S_NumDealsPurchases
3342423   +          +     0.10822300736498 * S_NumWebVisitsMonth
3342424   +          +     0.08852254070372 * S_RFMstat  +     0.49057996875589 *
3342425   +        S_RMntFrq  +     -0.7378392134822 * S_Recency
3342426   +          +    -0.99040897413441 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.29649216056803 * S_AcceptedCmpTotal + -0.02766114349884 * 
S_Age + 0.24204272805161 * S_Frq + 1.18769824983204 * S_Income + -0.68284444935451 * S_Kidhome 
+ -0.11979065412591 * S_MntFishProducts + -0.15995606022202 * S_MntFruits + -0.10230477550678 
* S_MntGoldProds + -0.12747851524837 * S_MntSweetProducts + 0.30886829972356 * 
S_MonthsAsCustomer + 0.65492907685123 * S_NumDealsPurchases + 0.10822300736498 * 
S_NumWebVisitsMonth + 0.08852254070372 * S_RFMstat + 0.49057996875589 * S_RMntFrq + 
-0.7378392134822 * S_Recency + -0.99040897413441 * S_Teenhome ;
3342427   +   H1x1_1  = H1x1_1  +    -1.46086901919186 * AcceptedCmp10
3342428   +          +    -0.06086543707595 * AcceptedCmp20  +    -0.17639316937072 *
3342429   +        AcceptedCmp30  +    -0.92178496493897 * AcceptedCmp40
3342430   +          +     0.55970684984856 * AcceptedCmp50  +    -0.55527703641539 *
3342431   +        Complain0  +    -0.01739075877118 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -1.46086901919186 * AcceptedCmp10 + -0.06086543707595 
* AcceptedCmp20 + -0.17639316937072 * AcceptedCmp30 + -0.92178496493897 * AcceptedCmp40 + 
0.55970684984856 * AcceptedCmp50 + -0.55527703641539 * Complain0 + -0.01739075877118 * 
HigherEducationBinary0 ;
3342432   +   H1x1_2  = H1x1_2  +     -0.0768775139385 * AcceptedCmp10
3342433   +          +     0.16675663908361 * AcceptedCmp20  +    -0.24864607646531 *
3342434   +        AcceptedCmp30  +    -2.72835017974134 * AcceptedCmp40
3342435   +          +     2.50464945392047 * AcceptedCmp50  +    -0.57926150830705 *
3342436   +        Complain0  +     0.39982220960967 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.0768775139385 * AcceptedCmp10 + 0.16675663908361 * 
AcceptedCmp20 + -0.24864607646531 * AcceptedCmp30 + -2.72835017974134 * AcceptedCmp40 + 
2.50464945392047 * AcceptedCmp50 + -0.57926150830705 * Complain0 + 0.39982220960967 * 
HigherEducationBinary0 ;
3342437   +   H1x1_3  = H1x1_3  +    -0.54666498984131 * AcceptedCmp10
3342438   +          +     1.29686034270038 * AcceptedCmp20  +      0.2422221770056 *
3342439   +        AcceptedCmp30  +    -0.30436834269159 * AcceptedCmp40
3342440   +          +     0.80634953873096 * AcceptedCmp50  +    -1.80822548041633 *
3342441   +        Complain0  +    -0.40212927148666 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.54666498984131 * AcceptedCmp10 + 1.29686034270038 * 
AcceptedCmp20 + 0.2422221770056 * AcceptedCmp30 + -0.30436834269159 * AcceptedCmp40 + 
0.80634953873096 * AcceptedCmp50 + -1.80822548041633 * Complain0 + -0.40212927148666 * 
HigherEducationBinary0 ;
3342442   +   H1x1_4  = H1x1_4  +    -0.44403138924573 * AcceptedCmp10
3342443   +          +     0.13148228993691 * AcceptedCmp20  +    -0.68858891502154 *
3342444   +        AcceptedCmp30  +    -0.73562513066917 * AcceptedCmp40
3342445   +          +     0.14959106694889 * AcceptedCmp50  +    -0.62889493860419 *
3342446   +        Complain0  +     0.43482765846469 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.44403138924573 * AcceptedCmp10 + 0.13148228993691 * 
AcceptedCmp20 + -0.68858891502154 * AcceptedCmp30 + -0.73562513066917 * AcceptedCmp40 + 
0.14959106694889 * AcceptedCmp50 + -0.62889493860419 * Complain0 + 0.43482765846469 * 
HigherEducationBinary0 ;
3342447   +   H1x1_1  = H1x1_1  +    -0.45985316758065 * Education2n_Cycle
3342448   +          +     0.50059543788524 * EducationBasic  +    -0.03949874118569 *
3342449   +        EducationGraduation  +     0.30922934477029 * EducationMaster
3342450   +          +     0.01556098790048 * Marital_StatusDivorced
3342451   +          +     0.00512523764645 * Marital_StatusMarried
3342452   +          +    -0.33980799511448 * Marital_StatusSingle
3342453   +          +    -0.70457839004957 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.45985316758065 * Education2n_Cycle + 
0.50059543788524 * EducationBasic + -0.03949874118569 * EducationGraduation + 0.30922934477029 
* EducationMaster + 0.01556098790048 * Marital_StatusDivorced + 0.00512523764645 * 
Marital_StatusMarried + -0.33980799511448 * Marital_StatusSingle + -0.70457839004957 * 
Marital_StatusTogether ;
3342454   +   H1x1_2  = H1x1_2  +    -1.22651000864813 * Education2n_Cycle
3342455   +          +     1.57892586252081 * EducationBasic  +    -0.50402333879661 *
3342456   +        EducationGraduation  +     0.69751348344321 * EducationMaster
3342457   +          +     0.01069434029942 * Marital_StatusDivorced
3342458   +          +      0.3116587285334 * Marital_StatusMarried
3342459   +          +    -0.98635795023549 * Marital_StatusSingle
3342460   +          +    -1.19926386369298 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -1.22651000864813 * Education2n_Cycle + 
1.57892586252081 * EducationBasic + -0.50402333879661 * EducationGraduation + 0.69751348344321 
* EducationMaster + 0.01069434029942 * Marital_StatusDivorced + 0.3116587285334 * 
Marital_StatusMarried + -0.98635795023549 * Marital_StatusSingle + -1.19926386369298 * 
Marital_StatusTogether ;
3342461   +   H1x1_3  = H1x1_3  +     0.01113602290833 * Education2n_Cycle
3342462   +          +    -0.08151748589167 * EducationBasic  +     1.04895627364724 *
3342463   +        EducationGraduation  +     -0.8155628950024 * EducationMaster
3342464   +          +    -0.60393077836174 * Marital_StatusDivorced
3342465   +          +    -0.18138878944937 * Marital_StatusMarried
3342466   +          +     0.53013032587101 * Marital_StatusSingle
3342467   +          +    -0.48355749431477 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.01113602290833 * Education2n_Cycle + 
-0.08151748589167 * EducationBasic + 1.04895627364724 * EducationGraduation + -0.8155628950024 
* EducationMaster + -0.60393077836174 * Marital_StatusDivorced + -0.18138878944937 * 
Marital_StatusMarried + 0.53013032587101 * Marital_StatusSingle + -0.48355749431477 * 
Marital_StatusTogether ;
3342468   +   H1x1_4  = H1x1_4  +    -0.16183745161166 * Education2n_Cycle
3342469   +          +     0.24616875488483 * EducationBasic  +     0.33817097681105 *
3342470   +        EducationGraduation  +    -0.40675219343984 * EducationMaster
3342471   +          +     0.43223311502025 * Marital_StatusDivorced
3342472   +          +    -1.15741416919552 * Marital_StatusMarried
3342473   +          +     0.83939799284264 * Marital_StatusSingle
3342474   +          +     -1.4386179382289 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.16183745161166 * Education2n_Cycle + 
0.24616875488483 * EducationBasic + 0.33817097681105 * EducationGraduation + -0.40675219343984 
* EducationMaster + 0.43223311502025 * Marital_StatusDivorced + -1.15741416919552 * 
Marital_StatusMarried + 0.83939799284264 * Marital_StatusSingle + -1.4386179382289 * 
Marital_StatusTogether ;
3342475   +   H1x1_1  =    -1.10575074809008 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -1.10575074809008 + H1x1_1 ;
3342476   +   H1x1_2  =    -0.13208482087653 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.13208482087653 + H1x1_2 ;
3342477   +   H1x1_3  =    -0.62883550284187 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.62883550284187 + H1x1_3 ;
3342478   +   H1x1_4  =    -0.60467840532552 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -0.60467840532552 + H1x1_4 ;
3342479   +   H1x1_5  = 0;
MPRINT(EM_DIAGRAM):   H1x1_5 = 0;
3342480   +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 );
3342481   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
3342482   +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
3342483   +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
3342484   +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
3342485   +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
3342486   +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
3342487   +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
3342488   +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
3342489   +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
3342490   +   H1x1_5  = EXP(H1x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_5 = EXP(H1x1_5 - _MAX_);
3342491   +   _SUM_ = _SUM_ + H1x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_5 ;
3342492   +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
3342493   +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
3342494   +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
3342495   +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
3342496   +   H1x1_5  = H1x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 / _SUM_;
3342497   +END;
MPRINT(EM_DIAGRAM):   END;
3342498   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
3342499   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
3342500   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
3342501   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
3342502   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
3342503   +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
3342504   +END;
MPRINT(EM_DIAGRAM):   END;
3342505   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3342506   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
3342507   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3342508   +
3342509   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
3342510   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
3342511   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
3342512   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
3342513   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
3342514   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3342515   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
3342516   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
3342517   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
3342518   +end;
MPRINT(EM_DIAGRAM):   end;
3342519   +else do;
MPRINT(EM_DIAGRAM):   else do;
3342520   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
3342521   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
3342522   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
3342523   +   end;
MPRINT(EM_DIAGRAM):   end;
3342524   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
3342525   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
3342526   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
3342527   +   end;
MPRINT(EM_DIAGRAM):   end;
3342528   +   else do;
MPRINT(EM_DIAGRAM):   else do;
3342529   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
3342530   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
3342531   +   end;
MPRINT(EM_DIAGRAM):   end;
3342532   +end;
MPRINT(EM_DIAGRAM):   end;
3342533   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
3342534   +   P_DepVar1  =     13.9520296268246 * H1x1_1  +    -14.3029863704541 * H1x1_2
3342535   +          +    -2.99382524020275 * H1x1_3  +     6.44484431028575 * H1x1_4
3342536   +          +    -2.75024533065893 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 13.9520296268246 * H1x1_1 + -14.3029863704541 * H1x1_2 + 
-2.99382524020275 * H1x1_3 + 6.44484431028575 * H1x1_4 + -2.75024533065893 * H1x1_5 ;
3342537   +   P_DepVar1  =    -1.37523509009785 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.37523509009785 + P_DepVar1 ;
3342538   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
3342539   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
3342540   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
3342541   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
3342542   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
3342543   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
3342544   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
3342545   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
3342546   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
3342547   +END;
MPRINT(EM_DIAGRAM):   END;
3342548   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
3342549   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
3342550   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
3342551   +END;
MPRINT(EM_DIAGRAM):   END;
3342552   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
3342553   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
3342554   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
3342555   +END;
MPRINT(EM_DIAGRAM):   END;
3342556   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
3342557   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
3342558   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
3342559   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
3342560   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
3342561   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
3342562   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
3342563   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3342564   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
3342565   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
3342566   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
3342567   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
3342568   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
3342569   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
3342570   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
3342571   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
3342572   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
3342573   +END;
MPRINT(EM_DIAGRAM):   END;
3342574   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
3342575   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
3342576   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
3342577   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
3342578    run;

NOTE: DATA STEP view saved on file EMWS8.AUTONEURAL34_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.META3_VALIDATE.VIEW used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
      

MPRINT(EM_DIAGRAM):   quit;
3342579    quit;
3342580    filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
3342581    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
3342582    * AutoNeural34: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * AutoNeural34: Computing metadata for TRAIN data;
3342583    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;

NOTE: View EMWS8.AUTONEURAL34_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
      
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural34\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS8.AutoNeural34_TRAIN out=_tempAdvisor 
noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS8.AutoNeural34_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS8.AutoNeural34_TRAIN out=WORK.M2MHEA1Z 
noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2MHEA1Z;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20 
INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M2MHEA1Z(keep=name type length label format formatl 
formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then format = strip(format)!!strip(put(formatl, 
best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, 
best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then informat = 
strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, 
best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2MHEA1Z;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M2MHEA1Z;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M35FQ97D NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M35FQ97D;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M35FQ97D;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M12Z61QM(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M35FQ97D;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M35FQ97D;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 
FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M35FQ97D;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" 
"MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" 
"QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" "YEAR" "YYMMDD" "YYMON" 
"YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" 
"EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) 
formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = 
"DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) 
formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" 
"NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" 
"SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = 
"DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then 
level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 
'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 
'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ 
('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 
'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 
'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M35FQ97D;
MPRINT(EMADVISECOLUMNS):   set WORK.M35FQ97D;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= 
"Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= 
"Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower limit" UPPERLIMIT= 
"Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= 
"Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Meta3_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Meta3_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural34_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT 
LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "AutoNeural34";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("P_DEPVAR1") creator = "AutoNeural34";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR1") creator = "AutoNeural34";
MPRINT(EM_DIAGRAM):   when("P_DEPVAR0") creator = "AutoNeural34";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR0") creator = "AutoNeural34";
MPRINT(EM_DIAGRAM):   when("F_DEPVAR") creator = "AutoNeural34";
MPRINT(EM_DIAGRAM):   when("I_DEPVAR") creator = "AutoNeural34";
MPRINT(EM_DIAGRAM):   when("U_DEPVAR") creator = "AutoNeural34";
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "AutoNeural34";
MPRINT(EM_DIAGRAM):   when("DEPVAR") model = "AutoNeural34";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * AutoNeural34: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
3342895    data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
3342896    set EMWS8.AutoNeural34_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural34_EMINFO;
3342897    where DATA='AutoNeural34' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='AutoNeural34' and KEY ^in('DECDATA', 'DECMETA', 
'IMPORTANCE', 'MODEL');
3342898    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.AUTONEURAL34_EMINFO.
      WHERE (DATA='AutoNeural34') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

3342899    data EMWS8.AutoNeural34_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural34_EMINFO;
3342900    length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
3342901    input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
3342902    cards;
MPRINT(EM_DIAGRAM):   cards;

NOTE: The data set EMWS8.AUTONEURAL34_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   run;
3342906    run;
3342907    data EMWS8.AutoNeural34_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural34_EMINFO;
3342908    set EMWS8.AutoNeural34_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural34_EMINFO WORK.MODELTEMP_INFO;
3342909    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.AUTONEURAL34_EMINFO.
NOTE: There were 0 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS8.AUTONEURAL34_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

3342910    proc sort data = EMWS8.AutoNeural34_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.AutoNeural34_EMINFO NOTHREADS;
3342911    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
3342912    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.AUTONEURAL34_EMINFO.
NOTE: The data set EMWS8.AUTONEURAL34_EMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

3342913    proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
3342914    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
3342915    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set EMWS8.FIMPORT_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 1 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

3342916    proc sort data = EMWS8.AutoNeural34_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS8.AutoNeural34_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
3342917    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
3342918    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 3 observations read from the data set EMWS8.AUTONEURAL34_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

3342919    data EMWS8.AutoNeural34_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural34_EMINFO;
3342920    merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
3342921    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
3342922    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 3 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS8.AUTONEURAL34_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

3342923    proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
3342924    delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
3342925    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
3342926    quit;
MPRINT(EM_DIAGRAM):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.06 seconds
      cpu time            0.04 seconds
      

NOTE: View EMWS8.AUTONEURAL34_TRAIN.VIEW used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      
NOTE: View EMWS8.AUTONEURAL34_VALIDATE.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
