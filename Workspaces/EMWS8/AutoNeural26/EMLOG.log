*------------------------------------------------------------*
User:                Lukas Fahr
Date:                28. April 2016
Time:                16.54 Uhr
Site:                70107571
Platform:            X64_7PRO
Maintenance Release: 9.03.01M2P081512
EM Version:          12.1
* 
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "28. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "16.46 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Training Log
Date:                28. April 2016
Time:                16.46 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O26PP4XR
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural26\EMTRAIN.out" encoding="UTF-8"
NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O26PP4XR new;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOG
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural26\EMLOG.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "28. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "16.46 Uhr" );
MPRINT(EM_DIAGRAM):   file _LOG;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                Lukas Fahr";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "Site:                70107571";
MPRINT(EM_DIAGRAM):   put "Platform:            X64_7PRO";
MPRINT(EM_DIAGRAM):   put "Maintenance Release: 9.03.01M2P081512";
MPRINT(EM_DIAGRAM):   put "EM Version:          12.1";
MPRINT(EM_DIAGRAM):   put "* ";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural26\EMTRAIN.log" encoding="UTF-8"
NOBOM;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _LOG MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_LOGIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _LOGIN
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural26\EMSCORE.log" encoding="UTF-8"
NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural26\EMREPORT.log" encoding="UTF-8"
NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    filename _LOG;
MPRINT(EM_DIAGRAM):    filename _OUT
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural26\EMOUTPUT.out" encoding="UTF-8"
NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "28. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "16.46 Uhr" );
MPRINT(EM_DIAGRAM):   file _OUT;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                Lukas Fahr";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural26\EMTRAIN.out" encoding="UTF-8"
NOBOM;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _OUT MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_OUTIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural26\EMSCORE.out" encoding="UTF-8"
NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural26\EMREPORT.out" encoding="UTF-8"
NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    filename _OUT;
MPRINT(EM_DIAGRAM):    filename _emtool_
'C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural26\EMRUNSTATUS.xml' encoding="UTF-8"
NOBOM;
1126321    proc freq data=EMWS8.AutoNeural26_VariableSet noprint;
MPRINT(EM_DIAGRAM):    proc freq data=EMWS8.AutoNeural26_VariableSet noprint;
1126322    table ROLE*LEVEL/out=WORK.AutoNeural26META;
MPRINT(EM_DIAGRAM):   table ROLE*LEVEL/out=WORK.AutoNeural26META;
1126323    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 51 observations read from the data set EMWS8.AUTONEURAL26_VARIABLESET.
NOTE: The data set WORK.AUTONEURAL26META has 6 observations and 4 variables.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1126324    proc print data=WORK.AutoNeural26META label noobs;
MPRINT(EM_DIAGRAM):   proc print data=WORK.AutoNeural26META label noobs;
1126325    var ROLE LEVEL COUNT;
MPRINT(EM_DIAGRAM):   var ROLE LEVEL COUNT;
1126326    label ROLE = "%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel, NOQUOTE))" LEVEL =
1126326  ! "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" COUNT =
1126326  ! "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label ROLE = "Role" LEVEL = "Measurement Level" COUNT = "Frequency
Count";
1126327    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
1126328    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_varSummary_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Variable Summary";
MPRINT(EM_DIAGRAM):   run;
1126329    run;
 
NOTE: There were 6 observations read from the data set WORK.AUTONEURAL26META.
NOTE: The PROCEDURE PRINT printed page 840.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1126330    title10;
MPRINT(EM_DIAGRAM):   title10;
1126331    %let EMNORLEN = %DMNORLEN;
MPRINT(EM_DIAGRAM):
EMWS8.BINNING_TRAIN EMWS8.BINNING_TRAIN
EMWS8.BINNING_TRAIN EMWS8.BINNING_TRAIN EMWS8 BINNING_TRAIN
EMWS8.BINNING_TRAIN EMWS8.BINNING_TRAIN
EMWS8.BINNING_TRAIN EMWS8.BINNING_TRAIN EMWS8 BINNING_TRAIN
MPRINT(EM_DIAGRAM):    proc dmdb data=EMWS8.BINNING_TRAIN
classout=WORK._DMDBCLASSTARGET(keep=NAME NRAW CRAW LEVEL FREQUENCY NMISSPERCENT);
MPRINT(EM_DIAGRAM):   class DepVar(DESC) ;
MPRINT(EM_DIAGRAM):   run;
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _INIT >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL setMetaData >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL setMetaData >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _term >>
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set WORK._DMDBCLASSTARGET;
MPRINT(EM_DIAGRAM):   where ^(NRAW eq . and CRAW eq '') and NAME="DepVar";
MPRINT(EM_DIAGRAM):   if _N_=1 then call symput('_newevent', strip(LEVEL));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK._DMDBCLASSTARGET out=_TEMPCLASS(keep=LEVEL FREQUENCY
NMISSPERCENT rename=(LEVEL=DepVar));
MPRINT(EM_DIAGRAM):   by LEVEL;
MPRINT(EM_DIAGRAM):   where ^(NRAW eq . and CRAW eq '') and NAME="DepVar";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _TEMPCLASS;
MPRINT(EM_DIAGRAM):   set _TEMPCLASS;
MPRINT(EM_DIAGRAM):   NMISSPERCENT= NMISSPERCENT/100;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _sortedDecData;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural26_DepVar_DD;
MPRINT(EM_DIAGRAM):   _levelorder_=_N_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_sortedDecdata;
MPRINT(EM_DIAGRAM):   by DepVar;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   merge _TEMPCLASS(in=_a) _sortedDecdata(in=_b);
MPRINT(EM_DIAGRAM):   by DepVar;
MPRINT(EM_DIAGRAM):   if (_a and ^_b) or (^_a and _b) then call symput('_emresetDec', '1');
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural26_DepVar_DD;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural26_DepVar_DD;
MPRINT(EM_DIAGRAM):   _levelorder_=_N_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural26_DepVar_DD;
MPRINT(EM_DIAGRAM):   by DepVar;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural26_DepVar_DD;
MPRINT(EM_DIAGRAM):   merge EMWS8.AutoNeural26_DepVar_DD
_TEMPCLASS(rename=(NMISSPERCENT=TRAINPRIOR FREQUENCY=COUNT));
MPRINT(EM_DIAGRAM):   by DepVar;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural26_DepVar_DD
out=EMWS8.AutoNeural26_DepVar_DD(drop=_levelorder_);
MPRINT(EM_DIAGRAM):   by _levelorder_;
MPRINT(EM_DIAGRAM):   run;
1126378    data WORK.AutoNeural26_EVENT(KEEP=VARIABLE LABEL LEVEL EVENT NUMLEVELS ORDER);
MPRINT(EM_DIAGRAM):    data WORK.AutoNeural26_EVENT(KEEP=VARIABLE LABEL LEVEL EVENT NUMLEVELS
ORDER);
1126379    length ORDER $20;
MPRINT(EM_DIAGRAM):   length ORDER $20;
1126380    label VARIABLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel,  NOQUOTE))"
1126380  ! EVENT = "%sysfunc(sasmsg(sashelp.dmine, assmt_event_vlabel, NOQUOTE))" NUMLEVELS =
1126380  ! "%sysfunc(sasmsg(sashelp.dmine, rpt_numcat_vlabel, NOQUOTE))" LEVEL =
1126381       "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" ORDER =
1126381  ! "%sysfunc(sasmsg(sashelp.dmine, meta_order_vlabel, NOQUOTE))" LABEL =
1126381  ! "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label VARIABLE = "Target" EVENT = "Event" NUMLEVELS = "Number of Levels"
LEVEL = "Measurement Level" ORDER = "Order" LABEL = "Label";
1126382    set EMWS8.AUTONEURAL26_DEPVAR_DM( where=(_TYPE_="TARGET"));
MPRINT(EM_DIAGRAM):   set EMWS8.AUTONEURAL26_DEPVAR_DM( where=(_TYPE_="TARGET"));
1126383    NumLevels=2;
MPRINT(EM_DIAGRAM):   NumLevels=2;
1126384    select(upcase(ORDER));
MPRINT(EM_DIAGRAM):   select(upcase(ORDER));
1126385    when('DESC') ORDER = 'Descending';
MPRINT(EM_DIAGRAM):   when('DESC') ORDER = 'Descending';
1126386    when('ASC') ORDER = 'Ascending';
MPRINT(EM_DIAGRAM):   when('ASC') ORDER = 'Ascending';
1126387    when('FMTDESC') ORDER = 'Formatted Descending';
MPRINT(EM_DIAGRAM):   when('FMTDESC') ORDER = 'Formatted Descending';
1126388    when('FMTASC') ORDER = 'Formatted Ascending';
MPRINT(EM_DIAGRAM):   when('FMTASC') ORDER = 'Formatted Ascending';
1126389    otherwise ORDER = 'Descending';
MPRINT(EM_DIAGRAM):   otherwise ORDER = 'Descending';
1126390    end;
MPRINT(EM_DIAGRAM):   end;
1126391    output;
MPRINT(EM_DIAGRAM):   output;
1126392    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.AUTONEURAL26_DEPVAR_DM.
      WHERE _TYPE_='TARGET';
NOTE: The data set WORK.AUTONEURAL26_EVENT has 1 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1126393    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
1126394    proc print data=WORK.AutoNeural26_EVENT noobs label;
MPRINT(EM_DIAGRAM):   proc print data=WORK.AutoNeural26_EVENT noobs label;
1126395    var VARIABLE EVENT LEVEL NUMLEVELS ORDER LABEL;
MPRINT(EM_DIAGRAM):   var VARIABLE EVENT LEVEL NUMLEVELS ORDER LABEL;
1126396    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
1126397    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_modelEvent_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Model Events";
MPRINT(EM_DIAGRAM):   run;
1126398    run;
 
NOTE: There were 1 observations read from the data set WORK.AUTONEURAL26_EVENT.
NOTE: The PROCEDURE PRINT printed page 841.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1126399    title10;
MPRINT(EM_DIAGRAM):   title10;
"No decisions defined for target "DepVar"."
1126400    proc print data = EMWS8.AutoNeural26_DepVar_DM noobs label;
MPRINT(EM_DIAGRAM):    proc print data = EMWS8.AutoNeural26_DepVar_DM noobs label;
1126401    var _type_ variable label;
MPRINT(EM_DIAGRAM):   var _type_ variable label;
1126402    where _type_ ^in('MATRIX', 'DECISION', 'TRAINPRIOR', 'DATAPRIOR', 'DECPRIOR');
MPRINT(EM_DIAGRAM):   where _type_ ^in('MATRIX', 'DECISION', 'TRAINPRIOR', 'DATAPRIOR',
'DECPRIOR');
1126403    label _TYPE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_type_vlabel,     NOQUOTE))"
1126403  ! VARIABLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel, NOQUOTE))" LABEL =
1126403  ! "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _TYPE_ = "Type" VARIABLE = "Variable" LABEL = "Label";
1126404    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
1126405    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_predDecVars_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Predicted and decision variables";
MPRINT(EM_DIAGRAM):   run;
1126406    run;
 
NOTE: There were 7 observations read from the data set EMWS8.AUTONEURAL26_DEPVAR_DM.
      WHERE _type_ not in ('DATAPRIOR', 'DECISION', 'DECPRIOR', 'MATRIX', 'TRAINPRIOR');
NOTE: The PROCEDURE PRINT printed page 842.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1126407    title10;
MPRINT(EM_DIAGRAM):   title10;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * AutoNeural26: Preparing metadata for Training;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   data WORK.M2GDJYW2;
MPRINT(EM_DIAGRAM):   set WORK.M2GDJYW2;
MPRINT(EM_DIAGRAM):   where(use = 'Y' or (role = 'INPUT' and use = 'D'));
MPRINT(EM_DIAGRAM):   if (role = 'REJECTED') then role = 'INPUT';
MPRINT(EM_DIAGRAM):   run;
1126416    data WORK.M2GDJYW2;
MPRINT(EM_DIAGRAM):    data WORK.M2GDJYW2;
1126417    set WORK.M2GDJYW2 end=eof;
MPRINT(EM_DIAGRAM):   set WORK.M2GDJYW2 end=eof;
1126418    output;
MPRINT(EM_DIAGRAM):   output;
1126419    if eof then do;
MPRINT(EM_DIAGRAM):   if eof then do;
1126420    NAME="";
MPRINT(EM_DIAGRAM):   NAME="";
1126421    ROLE="COST";
MPRINT(EM_DIAGRAM):   ROLE="COST";
1126422    LEVEL="INTERVAL";
MPRINT(EM_DIAGRAM):   LEVEL="INTERVAL";
1126423    TYPE="N";
MPRINT(EM_DIAGRAM):   TYPE="N";
1126424    output;
MPRINT(EM_DIAGRAM):   output;
1126425    end;
MPRINT(EM_DIAGRAM):   end;
1126426    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 19 observations read from the data set WORK.M2GDJYW2.
NOTE: The data set WORK.M2GDJYW2 has 20 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
NOTE: There were 2 observations read from the data set EMWS8.AUTONEURAL26_DEPVAR_DD.
NOTE: The data set WORK.DEPVAR has 2 observations and 7 variables.
1126427    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
1126428    * AutoNeural26: Create decision matrix;
MPRINT(EM_DIAGRAM):   * AutoNeural26: Create decision matrix;
1126429    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1126430    data WORK.DepVar;
MPRINT(EM_DIAGRAM):   data WORK.DepVar;
1126431      length   DepVar                           $  32
1126432               COUNT                                8
1126433               DATAPRIOR                            8
1126434               TRAINPRIOR                           8
1126435               DECPRIOR                             8
1126436               DECISION1                            8
1126437               DECISION2                            8
1126438               ;
MPRINT(EM_DIAGRAM):   length DepVar $ 32 COUNT 8 DATAPRIOR 8 TRAINPRIOR 8 DECPRIOR 8 DECISION1
8 DECISION2 8 ;
1126439
1126440      label    COUNT="Level Counts"
1126441               DATAPRIOR="Data Proportions"
1126442               TRAINPRIOR="Training Proportions"
1126443               DECPRIOR="Decision Priors"
1126444               DECISION1="1"
1126445               DECISION2="0"
1126446               ;
MPRINT(EM_DIAGRAM):   label COUNT= "Level Counts" DATAPRIOR= "Data Proportions" TRAINPRIOR=
"Training Proportions" DECPRIOR= "Decision Priors" DECISION1= "1" DECISION2= "0" ;
1126447      format   COUNT 10.
1126448               ;
MPRINT(EM_DIAGRAM):   format COUNT 10. ;
1126449    DepVar="1"; COUNT=359; DATAPRIOR=0.151221567; TRAINPRIOR=0.15122156697556;
1126449  ! DECPRIOR=.; DECISION1=1; DECISION2=0;
MPRINT(EM_DIAGRAM):   DepVar="1";
MPRINT(EM_DIAGRAM):   COUNT=359;
MPRINT(EM_DIAGRAM):   DATAPRIOR=0.151221567;
MPRINT(EM_DIAGRAM):   TRAINPRIOR=0.15122156697556;
MPRINT(EM_DIAGRAM):   DECPRIOR=.;
MPRINT(EM_DIAGRAM):   DECISION1=1;
MPRINT(EM_DIAGRAM):   DECISION2=0;
1126450    output;
MPRINT(EM_DIAGRAM):   output;
1126451    DepVar="0"; COUNT=2015; DATAPRIOR=0.848778433; TRAINPRIOR=0.84877843302443;
1126451  ! DECPRIOR=.; DECISION1=0; DECISION2=1;
MPRINT(EM_DIAGRAM):   DepVar="0";
MPRINT(EM_DIAGRAM):   COUNT=2015;
MPRINT(EM_DIAGRAM):   DATAPRIOR=0.848778433;
MPRINT(EM_DIAGRAM):   TRAINPRIOR=0.84877843302443;
MPRINT(EM_DIAGRAM):   DECPRIOR=.;
MPRINT(EM_DIAGRAM):   DECISION1=0;
MPRINT(EM_DIAGRAM):   DECISION2=1;
1126452    output;
MPRINT(EM_DIAGRAM):   output;
1126453    ;
MPRINT(EM_DIAGRAM):   ;
1126454    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK.DEPVAR has 2 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1126455    proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
1126456    modify DepVar(type=PROFIT label=DepVar);
MPRINT(EM_DIAGRAM):   modify DepVar(type=PROFIT label= DepVar);
MPRINT(EM_DIAGRAM):   label DECISION1= '1';
MPRINT(EM_DIAGRAM):   label DECISION2= '0';
MPRINT(EM_DIAGRAM):   run;
1126457    label DECISION1= '1';
1126458    label DECISION2= '0';
1126459    run;
 
NOTE: MODIFY was successful for WORK.DEPVAR.DATA.
1126460    quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
1126461    data EM_AutoNeural26;
MPRINT(EM_DIAGRAM):   data EM_AutoNeural26;
1126462    set EMWS8.BINNING_TRAIN(keep=
1126463    DepVar GRP_AcceptedCmp5 GRP_AcceptedCmpTotal GRP_Frq GRP_Income GRP_Mnt
1126464    GRP_MntFishProducts GRP_MntGoldProds GRP_MntMeatProducts GRP_MntSweetProducts
1126465    GRP_MntWines GRP_NumCatalogPurchases GRP_NumDistPurchases GRP_NumWebPurchases
1126466    GRP_NumWebVisitsMonth GRP_RFMstat GRP_RMntFrq GRP_Recency Year_Birth );
MPRINT(EM_DIAGRAM):   set EMWS8.BINNING_TRAIN(keep= DepVar GRP_AcceptedCmp5
GRP_AcceptedCmpTotal GRP_Frq GRP_Income GRP_Mnt GRP_MntFishProducts GRP_MntGoldProds
GRP_MntMeatProducts GRP_MntSweetProducts GRP_MntWines GRP_NumCatalogPurchases
GRP_NumDistPurchases GRP_NumWebPurchases GRP_NumWebVisitsMonth GRP_RFMstat GRP_RMntFrq
GRP_Recency Year_Birth );
1126467    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: View EMWS8.BINNING_TRAIN.VIEW used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
NOTE: There were 2374 observations read from the data set EMWS8.PART_TRAIN.
NOTE: There were 2374 observations read from the data set EMWS8.BINNING_TRAIN.
NOTE: The data set WORK.EM_AUTONEURAL26 has 2374 observations and 19 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * AutoNeural26: DMDBClass Macro ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
1126468    *------------------------------------------------------------* ;
1126469    * AutoNeural26: DMDBClass Macro ;
1126470    *------------------------------------------------------------* ;
1126471    %macro DMDBClass;
1126472        DepVar(DESC) GRP_AcceptedCmp5(ASC) GRP_AcceptedCmpTotal(ASC) GRP_Frq(ASC)
1126473       GRP_Income(ASC) GRP_Mnt(ASC) GRP_MntFishProducts(ASC) GRP_MntGoldProds(ASC)
1126474       GRP_MntMeatProducts(ASC) GRP_MntSweetProducts(ASC) GRP_MntWines(ASC)
1126475       GRP_NumCatalogPurchases(ASC) GRP_NumDistPurchases(ASC) GRP_NumWebPurchases(ASC)
1126476       GRP_NumWebVisitsMonth(ASC) GRP_RFMstat(ASC) GRP_RMntFrq(ASC) GRP_Recency(ASC)
1126477    %mend DMDBClass;
1126478    *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
1126479    * AutoNeural26: DMDBVar Macro ;
MPRINT(EM_DIAGRAM):   * AutoNeural26: DMDBVar Macro ;
1126480    *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
1126481    %macro DMDBVar;
1126482        Year_Birth
1126483    %mend DMDBVar;
1126484    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1126485    * AutoNeural26: Create DMDB;
MPRINT(EM_DIAGRAM):   * AutoNeural26: Create DMDB;
1126486    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1126487    proc dmdb batch data=WORK.EM_AutoNeural26
1126488    dmdbcat=WORK.AutoNeural26_DMDB
1126489    maxlevel = 513
1126490    ;
MPRINT(EM_DIAGRAM):   proc dmdb batch data=WORK.EM_AutoNeural26 dmdbcat=WORK.AutoNeural26_DMDB
maxlevel = 513 ;
MPRINT(EM_DIAGRAM):   class
1126491    class %DMDBClass;
MPRINT(DMDBCLASS):   DepVar(DESC) GRP_AcceptedCmp5(ASC) GRP_AcceptedCmpTotal(ASC) GRP_Frq(ASC)
GRP_Income(ASC) GRP_Mnt(ASC) GRP_MntFishProducts(ASC) GRP_MntGoldProds(ASC)
GRP_MntMeatProducts(ASC) GRP_MntSweetProducts(ASC) GRP_MntWines(ASC)
GRP_NumCatalogPurchases(ASC) GRP_NumDistPurchases(ASC) GRP_NumWebPurchases(ASC)
GRP_NumWebVisitsMonth(ASC) GRP_RFMstat(ASC) GRP_RMntFrq(ASC) GRP_Recency(ASC)
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   var
1126492    var %DMDBVar;
MPRINT(DMDBVAR):   Year_Birth
MPRINT(EM_DIAGRAM):  ;
1126493    target
1126494    DepVar
1126495    ;
MPRINT(EM_DIAGRAM):   target DepVar ;
1126496    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Records processed = 2374   Memory used = 511K.
NOTE: There were 2374 observations read from the data set WORK.EM_AUTONEURAL26.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):   *--- end code ---*;
1126497    quit;
1126498    *--- end code ---*;
 
1126499    *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------* ;
1126500    * AutoNeural26: Interval Inputs Macro ;
MPRINT(EM_DIAGRAM):   * AutoNeural26: Interval Inputs Macro ;
1126501    *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
1126502    %macro INTINPUTS;
1126503        Year_Birth
1126504    %mend INTINPUTS;
1126505    *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
1126506    * AutoNeural26: Binary Inputs Macro ;
MPRINT(EM_DIAGRAM):   * AutoNeural26: Binary Inputs Macro ;
1126507    *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
1126508    %macro BININPUTS;
1126509
1126510    %mend BININPUTS;
1126511    *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
1126512    * AutoNeural26: Nominal Inputs Macro ;
MPRINT(EM_DIAGRAM):   * AutoNeural26: Nominal Inputs Macro ;
1126513    *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
1126514    %macro NOMINPUTS;
1126515        GRP_AcceptedCmp5 GRP_AcceptedCmpTotal GRP_Frq GRP_Income GRP_Mnt
1126516       GRP_MntFishProducts GRP_MntGoldProds GRP_MntMeatProducts GRP_MntSweetProducts
1126517       GRP_MntWines GRP_NumCatalogPurchases GRP_NumDistPurchases GRP_NumWebPurchases
1126518       GRP_NumWebVisitsMonth GRP_RFMstat GRP_RMntFrq GRP_Recency
1126519    %mend NOMINPUTS;
1126520    *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
1126521    * AutoNeural26: Ordinal Inputs Macro ;
MPRINT(EM_DIAGRAM):   * AutoNeural26: Ordinal Inputs Macro ;
1126522    *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
1126523    %macro ORDINPUTS;
1126524
1126525    %mend ORDINPUTS;
1126526    * set printing options;
MPRINT(EM_DIAGRAM):   * set printing options;
1126527    ;
MPRINT(EM_DIAGRAM):   ;
1126528    options linesize = 80;
MPRINT(EM_DIAGRAM):   options linesize = 80;
1126529    options pagesize = 6000;
The SAS System
 
MPRINT(EM_DIAGRAM):   options pagesize = 6000;
1126530    options nonumber;
MPRINT(EM_DIAGRAM):   options nonumber;
1126531    options nocenter;
MPRINT(EM_DIAGRAM):   options nocenter;
1126532    options nodate;
MPRINT(EM_DIAGRAM):   options nodate;
1126533    title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
1126534    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_autonet_title  ,
1126534  ! NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "AutoNet";
MPRINT(EM_DIAGRAM):   *;
1126535    *;
 
1126536    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1126537    * Autoneural: search / FUNNEL LAYERS;
MPRINT(EM_DIAGRAM):   * Autoneural: search / FUNNEL LAYERS;
1126538    ;
MPRINT(EM_DIAGRAM):   ;
1126539    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1126540    *;
MPRINT(EM_DIAGRAM):   *;
 
1126541    *;
MPRINT(EM_DIAGRAM):    *;
1126542    proc neural data=EM_AutoNeural26 dmdbcat=WORK.AutoNeural26_DMDB
1126543    validdata=EMWS8.BINNING_VALIDATE
1126544    ;
MPRINT(EM_DIAGRAM):   proc neural data=EM_AutoNeural26
dmdbcat=WORK.AutoNeural26_DMDB validdata=EMWS8.BINNING_VALIDATE ;
1126545    *;
MPRINT(EM_DIAGRAM):   *;
1126546    nloptions noprint;
MPRINT(EM_DIAGRAM):   nloptions noprint;
1126547    performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   input
1126548    input %INTINPUTS / level=interval id=interval;
MPRINT(INTINPUTS):   Year_Birth
MPRINT(EM_DIAGRAM):   / level=interval id=interval;
MPRINT(EM_DIAGRAM):   input
1126549    input %NOMINPUTS / level=nominal id=nominal;
MPRINT(NOMINPUTS):   GRP_AcceptedCmp5 GRP_AcceptedCmpTotal GRP_Frq GRP_Income
GRP_Mnt GRP_MntFishProducts GRP_MntGoldProds GRP_MntMeatProducts
GRP_MntSweetProducts GRP_MntWines GRP_NumCatalogPurchases GRP_NumDistPurchases
GRP_NumWebPurchases GRP_NumWebVisitsMonth GRP_RFMstat GRP_RMntFrq GRP_Recency
MPRINT(EM_DIAGRAM):   / level=nominal id=nominal;
1126550    target DepVar / level=NOMINAL id=DepVar
1126551    ;
MPRINT(EM_DIAGRAM):   target DepVar / level=NOMINAL id=DepVar ;
1126552    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1126553    * Direct connection;
MPRINT(EM_DIAGRAM):   * Direct connection;
1126554    ;
MPRINT(EM_DIAGRAM):   ;
1126555    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1126556    connect interval DepVar;
MPRINT(EM_DIAGRAM):   connect interval DepVar;
1126557    connect nominal DepVar;
MPRINT(EM_DIAGRAM):   connect nominal DepVar;
1126558    *;
MPRINT(EM_DIAGRAM):   *;
1126559    netoptions ranscale = 1;
MPRINT(EM_DIAGRAM):   netoptions ranscale = 1;
1126560    *;
MPRINT(EM_DIAGRAM):   *;
1126561    title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
1126562    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_train_title  ,NOQUOTE,
1126562  ! Search # 1 FUNNEL LAYERS trial # 1 : DIRECT : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 1 FUNNEL LAYERS trial # 1 : DIRECT :
Training";
MPRINT(EM_DIAGRAM):   train estiter=1 outest=_anest outfit=_anfit maxtime=1800
maxiter=50 tech = Default;
NOTE:  Synchronizing the objectives and the Solution.
WARNING: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 50 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANEST has 53 observations and 144 variables.
NOTE: The data set WORK._ANFIT has 104 observations and 36 variables.
MPRINT(EM_DIAGRAM):   ;
1126563    train estiter=1 outest=_anest outfit=_anfit maxtime=1800 maxiter=50
MPRINT(EM_DIAGRAM):   run;
1126564    tech = Default;
1126565    ;
1126566    run;
 
NOTE: The data set WORK.EM_AUTONEURAL26 has 2374 observations and 19 variables.
NOTE: The data set EMWS8.BINNING_VALIDATE has . observations and 62 variables.
NOTE: View EMWS8.BINNING_VALIDATE.VIEW used (Total process time):
      real time           1.54 seconds
      cpu time            1.52 seconds
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: Closing the Neural Application.
NOTE: PROCEDURE NEURAL used (Total process time):
      real time           1.55 seconds
      cpu time            1.54 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
1126567    *;
1126568    proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
MPRINT(EM_DIAGRAM):   proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
1126569    var _iter_ _aic_ _averr_ _misc_
1126570    _vaverr_ _vmisc_
1126571    ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
1126572    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _name_='OVERALL';
NOTE: The PROCEDURE PRINT printed page 843.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Extract best iteration;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1126573    *------------------------------------------------------------*;
1126574    * Extract best iteration;
1126575    ;
1126576    *------------------------------------------------------------*;
1126577    %global _iter;
1126578    data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
1126579    set _anfit(where=(_NAME_ eq 'OVERALL'));
MPRINT(EM_DIAGRAM):   set _anfit(where=(_NAME_ eq 'OVERALL'));
1126580    retain _min 1e+64;
MPRINT(EM_DIAGRAM):   retain _min 1e+64;
1126581    if _VMISC_ < _min then do;
MPRINT(EM_DIAGRAM):   if _VMISC_ < _min then do;
1126582    _min = _VMISC_;
MPRINT(EM_DIAGRAM):   _min = _VMISC_;
1126583    call symput('_iter',put(_ITER_, 6.));
MPRINT(EM_DIAGRAM):   call symput('_iter',put(_ITER_, 6.));
1126584    end;
MPRINT(EM_DIAGRAM):   end;
1126585    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _NAME_='OVERALL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
1126586    *;
 
1126587    data EMWS8.AutoNeural26_ESTDS;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural26_ESTDS;
1126588    set _anest;
MPRINT(EM_DIAGRAM):   set _anest;
1126589    if _ITER_ eq 49 then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 49 then do;
1126590    output;
MPRINT(EM_DIAGRAM):   output;
1126591    stop;
MPRINT(EM_DIAGRAM):   stop;
1126592    end;
MPRINT(EM_DIAGRAM):   end;
1126593    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 50 observations read from the data set WORK._ANEST.
NOTE: The data set EMWS8.AUTONEURAL26_ESTDS has 1 observations and 144
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
1126594    *;
1126595    data EMWS8.AutoNeural26_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural26_OUTFIT;
1126596    set _anfit;
MPRINT(EM_DIAGRAM):   set _anfit;
1126597    if _ITER_ eq 49 and _NAME_ eq "OVERALL" then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 49 and _NAME_ eq "OVERALL" then do;
1126598    output;
MPRINT(EM_DIAGRAM):   output;
1126599    stop;
MPRINT(EM_DIAGRAM):   stop;
1126600    end;
MPRINT(EM_DIAGRAM):   end;
1126601    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 100 observations read from the data set WORK._ANFIT.
NOTE: The data set EMWS8.AUTONEURAL26_OUTFIT has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1126602    *;
MPRINT(EM_DIAGRAM):    *;
1126603    title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
1126604    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_selectediteration_title
1126604  ! , NOQUOTE, _VMISC_))";
MPRINT(EM_DIAGRAM):   title10 "Selected Iteration based on _VMISC_";
1126605    proc print data=EMWS8.AutoNeural26_OUTFIT noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural26_OUTFIT noobs;
1126606    var _iter_ _aic_ _averr_ _misc_
1126607    _vaverr_ _vmisc_
1126608    ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
1126609    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL26_OUTFIT.
NOTE: The PROCEDURE PRINT printed page 844.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1126610    title9;
MPRINT(EM_DIAGRAM):   title9;
1126611    title10;
MPRINT(EM_DIAGRAM):   title10;
1126612    %sysfunc(sasmsg(sashelp.dmine, starthistory_note , NOQUOTE));
MPRINT(EM_DIAGRAM):    * Start history;
MPRINT(EM_DIAGRAM):  ;
1126613    data EMWS8.AutoNeural26_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural26_HISTORY;
1126614    length _func_ _status_ _step_ $16;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16;
1126615    label _func_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_function_vlabel  ,
1126615  !  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _func_ = "Function";
1126616    label _status_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_status_vlabel  ,
1126616  !  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _status_ = "Status";
1126617    label _iter_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_iteration_vlabel
1126617  ! , NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _iter_ = "Iteration";
1126618    label _step_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_step_vlabel  ,
1126618  ! NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _step_ = "Step";
1126619    _func_ = '';
MPRINT(EM_DIAGRAM):   _func_ = '';
1126620    _status_ = '';
MPRINT(EM_DIAGRAM):   _status_ = '';
1126621    _step_ = 'FUNNEL LAYERS 1';
MPRINT(EM_DIAGRAM):   _step_ = 'FUNNEL LAYERS 1';
1126622    set
1126623    _anfit(where=(_name_ eq 'OVERALL' and _iter_ eq 0))
1126624    ;
MPRINT(EM_DIAGRAM):   set _anfit(where=(_name_ eq 'OVERALL' and _iter_ eq 0)) ;
1126625    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK._ANFIT.
      WHERE (_name_='OVERALL') and (_iter_=0);
NOTE: The data set EMWS8.AUTONEURAL26_HISTORY has 1 observations and 39
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1126626    data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
1126627    set EMWS8.AutoNeural26_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural26_OUTFIT;
1126628    if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
1126629    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL26_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1126630    data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
1126631    set EMWS8.AutoNeural26_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural26_OUTFIT;
1126632    if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
1126633    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL26_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1126634    *SEARCH: copy estimates and fit to best buffer;
MPRINT(EM_DIAGRAM):    *SEARCH: copy estimates and fit to best buffer;
1126635    ;
MPRINT(EM_DIAGRAM):   ;
1126636    data WORK.SAVEDS_AUTONEUR_17P412E;
MPRINT(EM_DIAGRAM):   data WORK.SAVEDS_AUTONEUR_17P412E;
1126637    set EMWS8.AutoNeural26_ESTDS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural26_ESTDS;
1126638    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.AUTONEURAL26_ESTDS.
NOTE: The data set WORK.SAVEDS_AUTONEUR_17P412E has 1 observations and 144
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1126639    data EMWS8.AutoNeural26_BESTDS;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural26_BESTDS;
1126640    set EMWS8.AutoNeural26_ESTDS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural26_ESTDS;
1126641    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.AUTONEURAL26_ESTDS.
NOTE: The data set EMWS8.AUTONEURAL26_BESTDS has 1 observations and 144
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1126642    data WORK.BFITDS_AUTONEUR_17P412E;
MPRINT(EM_DIAGRAM):   data WORK.BFITDS_AUTONEUR_17P412E;
1126643    set EMWS8.AutoNeural26_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural26_OUTFIT;
1126644    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL26_OUTFIT.
NOTE: The data set WORK.BFITDS_AUTONEUR_17P412E has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1126645    * Add function info to new history;
MPRINT(EM_DIAGRAM):    * Add function info to new history;
1126646    ;
MPRINT(EM_DIAGRAM):   ;
1126647    data EMWS8.AutoNeural26_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural26_HISTORY;
1126648    set EMWS8.AutoNeural26_HISTORY;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural26_HISTORY;
1126649    _func_ = 'DIRECT';
MPRINT(EM_DIAGRAM):   _func_ = 'DIRECT';
1126650    _status_ = 'initial';
MPRINT(EM_DIAGRAM):   _status_ = 'initial';
1126651    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL26_HISTORY.
NOTE: The data set EMWS8.AUTONEURAL26_HISTORY has 1 observations and 39
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1126652    * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
1126653    ;
MPRINT(EM_DIAGRAM):   ;
1126654    data EMWS8.AutoNeural26_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural26_OUTFIT;
1126655    set EMWS8.AutoNeural26_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural26_OUTFIT;
1126656    length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
1126657    _func_ = "DIRECT";
MPRINT(EM_DIAGRAM):   _func_ = "DIRECT";
1126658    _status_ = "candidate";
MPRINT(EM_DIAGRAM):   _status_ = "candidate";
1126659    _step_ = "FUNNEL LAYERS 1";
MPRINT(EM_DIAGRAM):   _step_ = "FUNNEL LAYERS 1";
1126660    _index_ = 1;
MPRINT(EM_DIAGRAM):   _index_ = 1;
1126661    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL26_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL26_OUTFIT has 1 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1126662    data EMWS8.AutoNeural26_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural26_HISTORY;
1126663    set EMWS8.AutoNeural26_HISTORY EMWS8.AutoNeural26_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural26_HISTORY EMWS8.AutoNeural26_OUTFIT;
1126664    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL26_HISTORY.
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL26_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL26_HISTORY has 2 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1126665    *;
MPRINT(EM_DIAGRAM):    *;
1126666    proc neural data=EM_AutoNeural26 dmdbcat=WORK.AutoNeural26_DMDB
1126667    validdata=EMWS8.BINNING_VALIDATE
1126668    ;
MPRINT(EM_DIAGRAM):   proc neural data=EM_AutoNeural26
dmdbcat=WORK.AutoNeural26_DMDB validdata=EMWS8.BINNING_VALIDATE ;
1126669    *;
MPRINT(EM_DIAGRAM):   *;
1126670    nloptions noprint;
MPRINT(EM_DIAGRAM):   nloptions noprint;
1126671    performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   input
1126672    input %INTINPUTS / level=interval id=interval;
MPRINT(INTINPUTS):   Year_Birth
MPRINT(EM_DIAGRAM):   / level=interval id=interval;
MPRINT(EM_DIAGRAM):   input
1126673    input %NOMINPUTS / level=nominal id=nominal;
MPRINT(NOMINPUTS):   GRP_AcceptedCmp5 GRP_AcceptedCmpTotal GRP_Frq GRP_Income
GRP_Mnt GRP_MntFishProducts GRP_MntGoldProds GRP_MntMeatProducts
GRP_MntSweetProducts GRP_MntWines GRP_NumCatalogPurchases GRP_NumDistPurchases
GRP_NumWebPurchases GRP_NumWebVisitsMonth GRP_RFMstat GRP_RMntFrq GRP_Recency
MPRINT(EM_DIAGRAM):   / level=nominal id=nominal;
1126674    target DepVar / level=NOMINAL id=DepVar
1126675    ;
MPRINT(EM_DIAGRAM):   target DepVar / level=NOMINAL id=DepVar ;
1126676    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1126677    * Layer #1;
MPRINT(EM_DIAGRAM):   * Layer #1;
1126678    ;
MPRINT(EM_DIAGRAM):   ;
1126679    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1126680    Hidden 4 / id = H1x1_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 4 / id = H1x1_ act=LOG;
1126681    connect interval H1x1_;
MPRINT(EM_DIAGRAM):   connect interval H1x1_;
1126682    connect nominal H1x1_;
MPRINT(EM_DIAGRAM):   connect nominal H1x1_;
1126683    connect H1x1_ DepVar;
MPRINT(EM_DIAGRAM):   connect H1x1_ DepVar;
1126684    *;
MPRINT(EM_DIAGRAM):   *;
1126685    netoptions ranscale = 1;
MPRINT(EM_DIAGRAM):   netoptions ranscale = 1;
1126686    *;
MPRINT(EM_DIAGRAM):   *;
1126687    initial
1126688    ;
MPRINT(EM_DIAGRAM):   initial ;
1126689    *;
MPRINT(EM_DIAGRAM):   *;
1126690    title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
1126691    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_prelim_title  ,NOQUOTE,
1126691  ! Search # 1 FUNNEL LAYERS trial # 2 : LOGISTIC : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 1 FUNNEL LAYERS trial # 2 : LOGISTIC :
Prelim";
MPRINT(EM_DIAGRAM):   prelim 16 outest=_anpre pretime=56 preiter=25 tech =
Default ;
NOTE:  Synchronizing the objectives and the Solution.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANPRE has 33 observations and 536 variables.
MPRINT(EM_DIAGRAM):   *;
1126692    prelim 16 outest=_anpre pretime=56 preiter=25
1126693    tech = Default
1126694    ;
1126695    *;
1126696    title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
1126697    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_train_title  ,NOQUOTE,
1126697  ! Search # 1 FUNNEL LAYERS trial # 2 : LOGISTIC : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 1 FUNNEL LAYERS trial # 2 : LOGISTIC :
Training";
MPRINT(EM_DIAGRAM):   train estiter=1 outest=_anest outfit=_anfit maxtime=899
maxiter=50 tech = Default;
WARNING: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 50 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANEST has 53 observations and 536 variables.
NOTE: The data set WORK._ANFIT has 104 observations and 36 variables.
MPRINT(EM_DIAGRAM):   ;
1126698    train estiter=1 outest=_anest outfit=_anfit maxtime=899 maxiter=50
MPRINT(EM_DIAGRAM):   run;
1126699    tech = Default;
1126700    ;
1126701    run;
 
NOTE: The data set WORK.EM_AUTONEURAL26 has 2374 observations and 19 variables.
NOTE: The data set EMWS8.BINNING_VALIDATE has . observations and 62 variables.
NOTE: View EMWS8.BINNING_VALIDATE.VIEW used (Total process time):
      real time           22.51 seconds
      cpu time            22.30 seconds
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: Closing the Neural Application.
NOTE: The PROCEDURE NEURAL printed page 845.
NOTE: PROCEDURE NEURAL used (Total process time):
      real time           22.51 seconds
      cpu time            22.32 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
1126702    *;
1126703    proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
MPRINT(EM_DIAGRAM):   proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
1126704    var _iter_ _aic_ _averr_ _misc_
1126705    _vaverr_ _vmisc_
1126706    ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
1126707    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _name_='OVERALL';
NOTE: The PROCEDURE PRINT printed page 846.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Extract best iteration;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1126708    *------------------------------------------------------------*;
1126709    * Extract best iteration;
1126710    ;
1126711    *------------------------------------------------------------*;
1126712    %global _iter;
1126713    data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
1126714    set _anfit(where=(_NAME_ eq 'OVERALL'));
MPRINT(EM_DIAGRAM):   set _anfit(where=(_NAME_ eq 'OVERALL'));
1126715    retain _min 1e+64;
MPRINT(EM_DIAGRAM):   retain _min 1e+64;
1126716    if _VMISC_ < _min then do;
MPRINT(EM_DIAGRAM):   if _VMISC_ < _min then do;
1126717    _min = _VMISC_;
MPRINT(EM_DIAGRAM):   _min = _VMISC_;
1126718    call symput('_iter',put(_ITER_, 6.));
MPRINT(EM_DIAGRAM):   call symput('_iter',put(_ITER_, 6.));
1126719    end;
MPRINT(EM_DIAGRAM):   end;
1126720    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _NAME_='OVERALL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
1126721    *;
 
1126722    data EMWS8.AutoNeural26_ESTDS;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural26_ESTDS;
1126723    set _anest;
MPRINT(EM_DIAGRAM):   set _anest;
1126724    if _ITER_ eq 9 then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 9 then do;
1126725    output;
MPRINT(EM_DIAGRAM):   output;
1126726    stop;
MPRINT(EM_DIAGRAM):   stop;
1126727    end;
MPRINT(EM_DIAGRAM):   end;
1126728    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 10 observations read from the data set WORK._ANEST.
NOTE: The data set EMWS8.AUTONEURAL26_ESTDS has 1 observations and 536
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
1126729    *;
1126730    data EMWS8.AutoNeural26_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural26_OUTFIT;
1126731    set _anfit;
MPRINT(EM_DIAGRAM):   set _anfit;
1126732    if _ITER_ eq 9 and _NAME_ eq "OVERALL" then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 9 and _NAME_ eq "OVERALL" then do;
1126733    output;
MPRINT(EM_DIAGRAM):   output;
1126734    stop;
MPRINT(EM_DIAGRAM):   stop;
1126735    end;
MPRINT(EM_DIAGRAM):   end;
1126736    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 20 observations read from the data set WORK._ANFIT.
NOTE: The data set EMWS8.AUTONEURAL26_OUTFIT has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1126737    *;
MPRINT(EM_DIAGRAM):    *;
1126738    title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
1126739    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_selectediteration_title
1126739  ! , NOQUOTE, _VMISC_))";
MPRINT(EM_DIAGRAM):   title10 "Selected Iteration based on _VMISC_";
1126740    proc print data=EMWS8.AutoNeural26_OUTFIT noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural26_OUTFIT noobs;
1126741    var _iter_ _aic_ _averr_ _misc_
1126742    _vaverr_ _vmisc_
1126743    ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
1126744    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL26_OUTFIT.
NOTE: The PROCEDURE PRINT printed page 847.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1126745    title9;
MPRINT(EM_DIAGRAM):   title9;
1126746    title10;
MPRINT(EM_DIAGRAM):   title10;
1126747    data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
1126748    set EMWS8.AutoNeural26_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural26_OUTFIT;
1126749    if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
1126750    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL26_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1126751    data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
1126752    set EMWS8.AutoNeural26_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural26_OUTFIT;
1126753    if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
1126754    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL26_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1126755    * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
1126756    ;
MPRINT(EM_DIAGRAM):   ;
1126757    data EMWS8.AutoNeural26_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural26_OUTFIT;
1126758    set EMWS8.AutoNeural26_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural26_OUTFIT;
1126759    length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
1126760    _func_ = "LOGISTIC";
MPRINT(EM_DIAGRAM):   _func_ = "LOGISTIC";
1126761    _status_ = "reject";
MPRINT(EM_DIAGRAM):   _status_ = "reject";
1126762    _step_ = "FUNNEL LAYERS 1";
MPRINT(EM_DIAGRAM):   _step_ = "FUNNEL LAYERS 1";
1126763    _index_ = 1;
MPRINT(EM_DIAGRAM):   _index_ = 1;
1126764    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL26_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL26_OUTFIT has 1 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1126765    data EMWS8.AutoNeural26_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural26_HISTORY;
1126766    set EMWS8.AutoNeural26_HISTORY EMWS8.AutoNeural26_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural26_HISTORY EMWS8.AutoNeural26_OUTFIT;
1126767    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set
      EMWS8.AUTONEURAL26_HISTORY.
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL26_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL26_HISTORY has 3 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1126768    *;
MPRINT(EM_DIAGRAM):    *;
1126769    proc neural data=EM_AutoNeural26 dmdbcat=WORK.AutoNeural26_DMDB
1126770    validdata=EMWS8.BINNING_VALIDATE
1126771    ;
MPRINT(EM_DIAGRAM):   proc neural data=EM_AutoNeural26
dmdbcat=WORK.AutoNeural26_DMDB validdata=EMWS8.BINNING_VALIDATE ;
1126772    *;
MPRINT(EM_DIAGRAM):   *;
1126773    nloptions noprint;
MPRINT(EM_DIAGRAM):   nloptions noprint;
1126774    performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   input
1126775    input %INTINPUTS / level=interval id=interval;
MPRINT(INTINPUTS):   Year_Birth
MPRINT(EM_DIAGRAM):   / level=interval id=interval;
MPRINT(EM_DIAGRAM):   input
1126776    input %NOMINPUTS / level=nominal id=nominal;
MPRINT(NOMINPUTS):   GRP_AcceptedCmp5 GRP_AcceptedCmpTotal GRP_Frq GRP_Income
GRP_Mnt GRP_MntFishProducts GRP_MntGoldProds GRP_MntMeatProducts
GRP_MntSweetProducts GRP_MntWines GRP_NumCatalogPurchases GRP_NumDistPurchases
GRP_NumWebPurchases GRP_NumWebVisitsMonth GRP_RFMstat GRP_RMntFrq GRP_Recency
MPRINT(EM_DIAGRAM):   / level=nominal id=nominal;
1126777    target DepVar / level=NOMINAL id=DepVar
1126778    ;
MPRINT(EM_DIAGRAM):   target DepVar / level=NOMINAL id=DepVar ;
1126779    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1126780    * Layer #1;
MPRINT(EM_DIAGRAM):   * Layer #1;
1126781    ;
MPRINT(EM_DIAGRAM):   ;
1126782    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1126783    Hidden 4 / id = H1x1_ act=SINE;
MPRINT(EM_DIAGRAM):   Hidden 4 / id = H1x1_ act=SINE;
1126784    connect interval H1x1_;
MPRINT(EM_DIAGRAM):   connect interval H1x1_;
1126785    connect nominal H1x1_;
MPRINT(EM_DIAGRAM):   connect nominal H1x1_;
1126786    connect H1x1_ DepVar;
MPRINT(EM_DIAGRAM):   connect H1x1_ DepVar;
1126787    *;
MPRINT(EM_DIAGRAM):   *;
1126788    netoptions ranscale = 1;
MPRINT(EM_DIAGRAM):   netoptions ranscale = 1;
1126789    *;
MPRINT(EM_DIAGRAM):   *;
1126790    initial
1126791    ;
MPRINT(EM_DIAGRAM):   initial ;
1126792    *;
MPRINT(EM_DIAGRAM):   *;
1126793    title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
1126794    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_prelim_title  ,NOQUOTE,
1126794  ! Search # 1 FUNNEL LAYERS trial # 3 : SINE : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 1 FUNNEL LAYERS trial # 3 : SINE :
Prelim";
MPRINT(EM_DIAGRAM):   prelim 16 outest=_anpre pretime=55 preiter=25 tech =
Default ;
NOTE:  Synchronizing the objectives and the Solution.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANPRE has 33 observations and 536 variables.
MPRINT(EM_DIAGRAM):   *;
1126795    prelim 16 outest=_anpre pretime=55 preiter=25
1126796    tech = Default
1126797    ;
1126798    *;
1126799    title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
1126800    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_train_title  ,NOQUOTE,
1126800  ! Search # 1 FUNNEL LAYERS trial # 3 : SINE : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 1 FUNNEL LAYERS trial # 3 : SINE :
Training";
MPRINT(EM_DIAGRAM):   train estiter=1 outest=_anest outfit=_anfit maxtime=894
maxiter=50 tech = Default;
WARNING: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 50 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANEST has 53 observations and 536 variables.
NOTE: The data set WORK._ANFIT has 104 observations and 36 variables.
MPRINT(EM_DIAGRAM):   ;
1126801    train estiter=1 outest=_anest outfit=_anfit maxtime=894 maxiter=50
MPRINT(EM_DIAGRAM):   run;
1126802    tech = Default;
1126803    ;
1126804    run;
 
NOTE: The data set WORK.EM_AUTONEURAL26 has 2374 observations and 19 variables.
NOTE: The data set EMWS8.BINNING_VALIDATE has . observations and 62 variables.
NOTE: View EMWS8.BINNING_VALIDATE.VIEW used (Total process time):
      real time           19.90 seconds
      cpu time            19.57 seconds
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: Closing the Neural Application.
NOTE: The PROCEDURE NEURAL printed page 848.
NOTE: PROCEDURE NEURAL used (Total process time):
      real time           19.91 seconds
      cpu time            19.57 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
1126805    *;
1126806    proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
MPRINT(EM_DIAGRAM):   proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
1126807    var _iter_ _aic_ _averr_ _misc_
1126808    _vaverr_ _vmisc_
1126809    ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
1126810    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _name_='OVERALL';
NOTE: The PROCEDURE PRINT printed page 849.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Extract best iteration;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1126811    *------------------------------------------------------------*;
1126812    * Extract best iteration;
1126813    ;
1126814    *------------------------------------------------------------*;
1126815    %global _iter;
1126816    data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
1126817    set _anfit(where=(_NAME_ eq 'OVERALL'));
MPRINT(EM_DIAGRAM):   set _anfit(where=(_NAME_ eq 'OVERALL'));
1126818    retain _min 1e+64;
MPRINT(EM_DIAGRAM):   retain _min 1e+64;
1126819    if _VMISC_ < _min then do;
MPRINT(EM_DIAGRAM):   if _VMISC_ < _min then do;
1126820    _min = _VMISC_;
MPRINT(EM_DIAGRAM):   _min = _VMISC_;
1126821    call symput('_iter',put(_ITER_, 6.));
MPRINT(EM_DIAGRAM):   call symput('_iter',put(_ITER_, 6.));
1126822    end;
MPRINT(EM_DIAGRAM):   end;
1126823    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _NAME_='OVERALL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
1126824    *;
 
1126825    data EMWS8.AutoNeural26_ESTDS;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural26_ESTDS;
1126826    set _anest;
MPRINT(EM_DIAGRAM):   set _anest;
1126827    if _ITER_ eq 16 then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 16 then do;
1126828    output;
MPRINT(EM_DIAGRAM):   output;
1126829    stop;
MPRINT(EM_DIAGRAM):   stop;
1126830    end;
MPRINT(EM_DIAGRAM):   end;
1126831    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 17 observations read from the data set WORK._ANEST.
NOTE: The data set EMWS8.AUTONEURAL26_ESTDS has 1 observations and 536
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
1126832    *;
1126833    data EMWS8.AutoNeural26_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural26_OUTFIT;
1126834    set _anfit;
MPRINT(EM_DIAGRAM):   set _anfit;
1126835    if _ITER_ eq 16 and _NAME_ eq "OVERALL" then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 16 and _NAME_ eq "OVERALL" then do;
1126836    output;
MPRINT(EM_DIAGRAM):   output;
1126837    stop;
MPRINT(EM_DIAGRAM):   stop;
1126838    end;
MPRINT(EM_DIAGRAM):   end;
1126839    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._ANFIT.
NOTE: The data set EMWS8.AUTONEURAL26_OUTFIT has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1126840    *;
MPRINT(EM_DIAGRAM):    *;
1126841    title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
1126842    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_selectediteration_title
1126842  ! , NOQUOTE, _VMISC_))";
MPRINT(EM_DIAGRAM):   title10 "Selected Iteration based on _VMISC_";
1126843    proc print data=EMWS8.AutoNeural26_OUTFIT noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural26_OUTFIT noobs;
1126844    var _iter_ _aic_ _averr_ _misc_
1126845    _vaverr_ _vmisc_
1126846    ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
1126847    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL26_OUTFIT.
NOTE: The PROCEDURE PRINT printed page 850.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1126848    title9;
MPRINT(EM_DIAGRAM):   title9;
1126849    title10;
MPRINT(EM_DIAGRAM):   title10;
1126850    data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
1126851    set EMWS8.AutoNeural26_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural26_OUTFIT;
1126852    if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
1126853    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL26_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1126854    data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
1126855    set EMWS8.AutoNeural26_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural26_OUTFIT;
1126856    if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
1126857    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL26_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1126858    * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
1126859    ;
MPRINT(EM_DIAGRAM):   ;
1126860    data EMWS8.AutoNeural26_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural26_OUTFIT;
1126861    set EMWS8.AutoNeural26_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural26_OUTFIT;
1126862    length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
1126863    _func_ = "SINE";
MPRINT(EM_DIAGRAM):   _func_ = "SINE";
1126864    _status_ = "reject";
MPRINT(EM_DIAGRAM):   _status_ = "reject";
1126865    _step_ = "FUNNEL LAYERS 1";
MPRINT(EM_DIAGRAM):   _step_ = "FUNNEL LAYERS 1";
1126866    _index_ = 1;
MPRINT(EM_DIAGRAM):   _index_ = 1;
1126867    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL26_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL26_OUTFIT has 1 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1126868    data EMWS8.AutoNeural26_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural26_HISTORY;
1126869    set EMWS8.AutoNeural26_HISTORY EMWS8.AutoNeural26_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural26_HISTORY EMWS8.AutoNeural26_OUTFIT;
1126870    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set
      EMWS8.AUTONEURAL26_HISTORY.
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL26_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL26_HISTORY has 4 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1126871    *;
MPRINT(EM_DIAGRAM):    *;
1126872    proc neural data=EM_AutoNeural26 dmdbcat=WORK.AutoNeural26_DMDB
1126873    validdata=EMWS8.BINNING_VALIDATE
1126874    ;
MPRINT(EM_DIAGRAM):   proc neural data=EM_AutoNeural26
dmdbcat=WORK.AutoNeural26_DMDB validdata=EMWS8.BINNING_VALIDATE ;
1126875    *;
MPRINT(EM_DIAGRAM):   *;
1126876    nloptions noprint;
MPRINT(EM_DIAGRAM):   nloptions noprint;
1126877    performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   input
1126878    input %INTINPUTS / level=interval id=interval;
MPRINT(INTINPUTS):   Year_Birth
MPRINT(EM_DIAGRAM):   / level=interval id=interval;
MPRINT(EM_DIAGRAM):   input
1126879    input %NOMINPUTS / level=nominal id=nominal;
MPRINT(NOMINPUTS):   GRP_AcceptedCmp5 GRP_AcceptedCmpTotal GRP_Frq GRP_Income
GRP_Mnt GRP_MntFishProducts GRP_MntGoldProds GRP_MntMeatProducts
GRP_MntSweetProducts GRP_MntWines GRP_NumCatalogPurchases GRP_NumDistPurchases
GRP_NumWebPurchases GRP_NumWebVisitsMonth GRP_RFMstat GRP_RMntFrq GRP_Recency
MPRINT(EM_DIAGRAM):   / level=nominal id=nominal;
1126880    target DepVar / level=NOMINAL id=DepVar
1126881    ;
MPRINT(EM_DIAGRAM):   target DepVar / level=NOMINAL id=DepVar ;
1126882    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1126883    * Layer #1;
MPRINT(EM_DIAGRAM):   * Layer #1;
1126884    ;
MPRINT(EM_DIAGRAM):   ;
1126885    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1126886    Hidden 4 / id = H1x1_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 4 / id = H1x1_ act=SOFTMAX;
1126887    connect interval H1x1_;
MPRINT(EM_DIAGRAM):   connect interval H1x1_;
1126888    connect nominal H1x1_;
MPRINT(EM_DIAGRAM):   connect nominal H1x1_;
1126889    connect H1x1_ DepVar;
MPRINT(EM_DIAGRAM):   connect H1x1_ DepVar;
1126890    *;
MPRINT(EM_DIAGRAM):   *;
1126891    netoptions ranscale = 1;
MPRINT(EM_DIAGRAM):   netoptions ranscale = 1;
1126892    *;
MPRINT(EM_DIAGRAM):   *;
1126893    initial
1126894    ;
MPRINT(EM_DIAGRAM):   initial ;
1126895    *;
MPRINT(EM_DIAGRAM):   *;
1126896    title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
1126897    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_prelim_title  ,NOQUOTE,
1126897  ! Search # 1 FUNNEL LAYERS trial # 4 : SOFTMAX : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 1 FUNNEL LAYERS trial # 4 : SOFTMAX :
Prelim";
MPRINT(EM_DIAGRAM):   prelim 16 outest=_anpre pretime=55 preiter=25 tech =
Default ;
NOTE:  Synchronizing the objectives and the Solution.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 25 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANPRE has 33 observations and 407 variables.
MPRINT(EM_DIAGRAM):   *;
1126898    prelim 16 outest=_anpre pretime=55 preiter=25
1126899    tech = Default
1126900    ;
1126901    *;
1126902    title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
1126903    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_train_title  ,NOQUOTE,
1126903  ! Search # 1 FUNNEL LAYERS trial # 4 : SOFTMAX : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 1 FUNNEL LAYERS trial # 4 : SOFTMAX :
Training";
MPRINT(EM_DIAGRAM):   train estiter=1 outest=_anest outfit=_anfit maxtime=889
maxiter=50 tech = Default;
WARNING: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 50 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANEST has 53 observations and 407 variables.
NOTE: The data set WORK._ANFIT has 104 observations and 36 variables.
MPRINT(EM_DIAGRAM):   ;
1126904    train estiter=1 outest=_anest outfit=_anfit maxtime=889 maxiter=50
MPRINT(EM_DIAGRAM):   run;
1126905    tech = Default;
1126906    ;
1126907    run;
 
NOTE: The data set WORK.EM_AUTONEURAL26 has 2374 observations and 19 variables.
NOTE: The data set EMWS8.BINNING_VALIDATE has . observations and 62 variables.
NOTE: View EMWS8.BINNING_VALIDATE.VIEW used (Total process time):
      real time           17.27 seconds
      cpu time            17.19 seconds
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: Closing the Neural Application.
NOTE: The PROCEDURE NEURAL printed page 851.
NOTE: PROCEDURE NEURAL used (Total process time):
      real time           17.28 seconds
      cpu time            17.19 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
1126908    *;
1126909    proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
MPRINT(EM_DIAGRAM):   proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
1126910    var _iter_ _aic_ _averr_ _misc_
1126911    _vaverr_ _vmisc_
1126912    ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
1126913    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _name_='OVERALL';
NOTE: The PROCEDURE PRINT printed page 852.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Extract best iteration;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1126914    *------------------------------------------------------------*;
1126915    * Extract best iteration;
1126916    ;
1126917    *------------------------------------------------------------*;
1126918    %global _iter;
1126919    data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
1126920    set _anfit(where=(_NAME_ eq 'OVERALL'));
MPRINT(EM_DIAGRAM):   set _anfit(where=(_NAME_ eq 'OVERALL'));
1126921    retain _min 1e+64;
MPRINT(EM_DIAGRAM):   retain _min 1e+64;
1126922    if _VMISC_ < _min then do;
MPRINT(EM_DIAGRAM):   if _VMISC_ < _min then do;
1126923    _min = _VMISC_;
MPRINT(EM_DIAGRAM):   _min = _VMISC_;
1126924    call symput('_iter',put(_ITER_, 6.));
MPRINT(EM_DIAGRAM):   call symput('_iter',put(_ITER_, 6.));
1126925    end;
MPRINT(EM_DIAGRAM):   end;
1126926    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _NAME_='OVERALL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
1126927    *;
 
1126928    data EMWS8.AutoNeural26_ESTDS;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural26_ESTDS;
1126929    set _anest;
MPRINT(EM_DIAGRAM):   set _anest;
1126930    if _ITER_ eq 0 then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 0 then do;
1126931    output;
MPRINT(EM_DIAGRAM):   output;
1126932    stop;
MPRINT(EM_DIAGRAM):   stop;
1126933    end;
MPRINT(EM_DIAGRAM):   end;
1126934    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK._ANEST.
NOTE: The data set EMWS8.AUTONEURAL26_ESTDS has 1 observations and 407
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
1126935    *;
1126936    data EMWS8.AutoNeural26_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural26_OUTFIT;
1126937    set _anfit;
MPRINT(EM_DIAGRAM):   set _anfit;
1126938    if _ITER_ eq 0 and _NAME_ eq "OVERALL" then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 0 and _NAME_ eq "OVERALL" then do;
1126939    output;
MPRINT(EM_DIAGRAM):   output;
1126940    stop;
MPRINT(EM_DIAGRAM):   stop;
1126941    end;
MPRINT(EM_DIAGRAM):   end;
1126942    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set WORK._ANFIT.
NOTE: The data set EMWS8.AUTONEURAL26_OUTFIT has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1126943    *;
MPRINT(EM_DIAGRAM):    *;
1126944    title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
1126945    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_selectediteration_title
1126945  ! , NOQUOTE, _VMISC_))";
MPRINT(EM_DIAGRAM):   title10 "Selected Iteration based on _VMISC_";
1126946    proc print data=EMWS8.AutoNeural26_OUTFIT noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural26_OUTFIT noobs;
1126947    var _iter_ _aic_ _averr_ _misc_
1126948    _vaverr_ _vmisc_
1126949    ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
1126950    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL26_OUTFIT.
NOTE: The PROCEDURE PRINT printed page 853.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1126951    title9;
MPRINT(EM_DIAGRAM):   title9;
1126952    title10;
MPRINT(EM_DIAGRAM):   title10;
1126953    data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
1126954    set EMWS8.AutoNeural26_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural26_OUTFIT;
1126955    if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
1126956    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL26_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1126957    data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
1126958    set EMWS8.AutoNeural26_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural26_OUTFIT;
1126959    if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
1126960    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL26_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1126961    * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
1126962    ;
MPRINT(EM_DIAGRAM):   ;
1126963    data EMWS8.AutoNeural26_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural26_OUTFIT;
1126964    set EMWS8.AutoNeural26_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural26_OUTFIT;
1126965    length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
1126966    _func_ = "SOFTMAX";
MPRINT(EM_DIAGRAM):   _func_ = "SOFTMAX";
1126967    _status_ = "reject";
MPRINT(EM_DIAGRAM):   _status_ = "reject";
1126968    _step_ = "FUNNEL LAYERS 1";
MPRINT(EM_DIAGRAM):   _step_ = "FUNNEL LAYERS 1";
1126969    _index_ = 1;
MPRINT(EM_DIAGRAM):   _index_ = 1;
1126970    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL26_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL26_OUTFIT has 1 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1126971    data EMWS8.AutoNeural26_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural26_HISTORY;
1126972    set EMWS8.AutoNeural26_HISTORY EMWS8.AutoNeural26_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural26_HISTORY EMWS8.AutoNeural26_OUTFIT;
1126973    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set
      EMWS8.AUTONEURAL26_HISTORY.
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL26_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL26_HISTORY has 5 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1126974    *SEARCH: recall best estimates and fit;
MPRINT(EM_DIAGRAM):    *SEARCH: recall best estimates and fit;
1126975    ;
MPRINT(EM_DIAGRAM):   ;
1126976    data EMWS8.AutoNeural26_ESTDS;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural26_ESTDS;
1126977    set EMWS8.AutoNeural26_BESTDS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural26_BESTDS;
1126978    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL26_BESTDS.
NOTE: The data set EMWS8.AUTONEURAL26_ESTDS has 1 observations and 144
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1126979    data EMWS8.AutoNeural26_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural26_OUTFIT;
1126980    set WORK.BFITDS_AUTONEUR_17P412E;
MPRINT(EM_DIAGRAM):   set WORK.BFITDS_AUTONEUR_17P412E;
1126981    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      WORK.BFITDS_AUTONEUR_17P412E.
NOTE: The data set EMWS8.AUTONEURAL26_OUTFIT has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1126982    * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
1126983    ;
MPRINT(EM_DIAGRAM):   ;
1126984    data EMWS8.AutoNeural26_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural26_OUTFIT;
1126985    set EMWS8.AutoNeural26_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural26_OUTFIT;
1126986    length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
1126987    _func_ = "DIRECT";
MPRINT(EM_DIAGRAM):   _func_ = "DIRECT";
1126988    _status_ = "keep";
MPRINT(EM_DIAGRAM):   _status_ = "keep";
1126989    _step_ = "FUNNEL LAYERS 1";
MPRINT(EM_DIAGRAM):   _step_ = "FUNNEL LAYERS 1";
1126990    _index_ = 1;
MPRINT(EM_DIAGRAM):   _index_ = 1;
1126991    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL26_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL26_OUTFIT has 1 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1126992    data EMWS8.AutoNeural26_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural26_HISTORY;
1126993    set EMWS8.AutoNeural26_HISTORY EMWS8.AutoNeural26_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural26_HISTORY EMWS8.AutoNeural26_OUTFIT;
1126994    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 5 observations read from the data set
      EMWS8.AUTONEURAL26_HISTORY.
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL26_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL26_HISTORY has 6 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1126995    data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
1126996    set EMWS8.AutoNeural26_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural26_OUTFIT;
1126997    if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
1126998    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL26_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 40 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1126999    *;
MPRINT(EM_DIAGRAM):    *;
1127000    proc neural data=EM_AutoNeural26 dmdbcat=WORK.AutoNeural26_DMDB
1127001    validdata=EMWS8.BINNING_VALIDATE
1127002    ;
MPRINT(EM_DIAGRAM):   proc neural data=EM_AutoNeural26
dmdbcat=WORK.AutoNeural26_DMDB validdata=EMWS8.BINNING_VALIDATE ;
1127003    *;
MPRINT(EM_DIAGRAM):   *;
1127004    nloptions noprint;
MPRINT(EM_DIAGRAM):   nloptions noprint;
1127005    performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   input
1127006    input %INTINPUTS / level=interval id=interval;
MPRINT(INTINPUTS):   Year_Birth
MPRINT(EM_DIAGRAM):   / level=interval id=interval;
MPRINT(EM_DIAGRAM):   input
1127007    input %NOMINPUTS / level=nominal id=nominal;
MPRINT(NOMINPUTS):   GRP_AcceptedCmp5 GRP_AcceptedCmpTotal GRP_Frq GRP_Income
GRP_Mnt GRP_MntFishProducts GRP_MntGoldProds GRP_MntMeatProducts
GRP_MntSweetProducts GRP_MntWines GRP_NumCatalogPurchases GRP_NumDistPurchases
GRP_NumWebPurchases GRP_NumWebVisitsMonth GRP_RFMstat GRP_RMntFrq GRP_Recency
MPRINT(EM_DIAGRAM):   / level=nominal id=nominal;
1127008    target DepVar / level=NOMINAL id=DepVar
1127009    ;
MPRINT(EM_DIAGRAM):   target DepVar / level=NOMINAL id=DepVar ;
1127010    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1127011    * Direct connection;
MPRINT(EM_DIAGRAM):   * Direct connection;
1127012    ;
MPRINT(EM_DIAGRAM):   ;
1127013    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1127014    connect interval DepVar;
MPRINT(EM_DIAGRAM):   connect interval DepVar;
1127015    connect nominal DepVar;
MPRINT(EM_DIAGRAM):   connect nominal DepVar;
1127016    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1127017    * Layer #1;
MPRINT(EM_DIAGRAM):   * Layer #1;
1127018    ;
MPRINT(EM_DIAGRAM):   ;
1127019    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1127020    Hidden 4 / id = H1x1_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 4 / id = H1x1_ act=LOG;
1127021    connect interval H1x1_;
MPRINT(EM_DIAGRAM):   connect interval H1x1_;
1127022    connect nominal H1x1_;
MPRINT(EM_DIAGRAM):   connect nominal H1x1_;
1127023    connect H1x1_ DepVar;
MPRINT(EM_DIAGRAM):   connect H1x1_ DepVar;
1127024    *;
MPRINT(EM_DIAGRAM):   *;
1127025    netoptions ranscale = 1;
MPRINT(EM_DIAGRAM):   netoptions ranscale = 1;
1127026    *;
MPRINT(EM_DIAGRAM):   *;
1127027    initial
1127028    inest = EMWS8.AutoNeural26_ESTDS bylabel;
MPRINT(EM_DIAGRAM):   initial inest = EMWS8.AutoNeural26_ESTDS bylabel;
NOTE: The data set EMWS8.AUTONEURAL26_ESTDS has 1 observations and 144
      variables.
1127029    ;
MPRINT(EM_DIAGRAM):   ;
1127030    *;
MPRINT(EM_DIAGRAM):   *;
1127031    title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
1127032    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_prelim_title  ,NOQUOTE,
1127032  ! Search # 2 FUNNEL LAYERS trial # 1 : LOGISTIC : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 2 FUNNEL LAYERS trial # 1 : LOGISTIC :
Prelim";
1127033    prelim 16 outest=_anpre pretime=55 preiter=25
MPRINT(EM_DIAGRAM):   prelim 16 outest=_anpre pretime=55 preiter=25 tech =
Default inest = EMWS8.AutoNeural26_ESTDS bylabel ;
NOTE:  Synchronizing the objectives and the Solution.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: Convergence criterion (FCONV=0.0001) satisfied.
NOTE: The data set WORK._ANPRE has 33 observations and 664 variables.
NOTE: The data set EMWS8.AUTONEURAL26_ESTDS has 1 observations and 144
      variables.
MPRINT(EM_DIAGRAM):   *;
1127034    tech = Default
1127035    inest = EMWS8.AutoNeural26_ESTDS bylabel
1127036    ;
1127037    *;
1127038    title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
1127039    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_train_title  ,NOQUOTE,
1127039  ! Search # 2 FUNNEL LAYERS trial # 1 : LOGISTIC : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 2 FUNNEL LAYERS trial # 1 : LOGISTIC :
Training";
MPRINT(EM_DIAGRAM):   train estiter=1 outest=_anest outfit=_anfit maxtime=884
maxiter=50 tech = Default;
WARNING: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 50 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANEST has 53 observations and 664 variables.
NOTE: The data set WORK._ANFIT has 104 observations and 36 variables.
MPRINT(EM_DIAGRAM):   ;
1127040    train estiter=1 outest=_anest outfit=_anfit maxtime=884 maxiter=50
MPRINT(EM_DIAGRAM):   run;
1127041    tech = Default;
1127042    ;
1127043    run;
 
NOTE: The data set WORK.EM_AUTONEURAL26 has 2374 observations and 19 variables.
NOTE: The data set EMWS8.BINNING_VALIDATE has . observations and 62 variables.
NOTE: View EMWS8.BINNING_VALIDATE.VIEW used (Total process time):
      real time           28.89 seconds
      cpu time            28.76 seconds
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: Closing the Neural Application.
NOTE: The PROCEDURE NEURAL printed page 854.
NOTE: PROCEDURE NEURAL used (Total process time):
      real time           28.90 seconds
      cpu time            28.78 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
1127044    *;
1127045    proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
MPRINT(EM_DIAGRAM):   proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
1127046    var _iter_ _aic_ _averr_ _misc_
1127047    _vaverr_ _vmisc_
1127048    ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
1127049    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _name_='OVERALL';
NOTE: The PROCEDURE PRINT printed page 855.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Extract best iteration;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1127050    *------------------------------------------------------------*;
1127051    * Extract best iteration;
1127052    ;
1127053    *------------------------------------------------------------*;
1127054    %global _iter;
1127055    data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
1127056    set _anfit(where=(_NAME_ eq 'OVERALL'));
MPRINT(EM_DIAGRAM):   set _anfit(where=(_NAME_ eq 'OVERALL'));
1127057    retain _min 1e+64;
MPRINT(EM_DIAGRAM):   retain _min 1e+64;
1127058    if _VMISC_ < _min then do;
MPRINT(EM_DIAGRAM):   if _VMISC_ < _min then do;
1127059    _min = _VMISC_;
MPRINT(EM_DIAGRAM):   _min = _VMISC_;
1127060    call symput('_iter',put(_ITER_, 6.));
MPRINT(EM_DIAGRAM):   call symput('_iter',put(_ITER_, 6.));
1127061    end;
MPRINT(EM_DIAGRAM):   end;
1127062    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _NAME_='OVERALL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
1127063    *;
 
1127064    data EMWS8.AutoNeural26_ESTDS;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural26_ESTDS;
1127065    set _anest;
MPRINT(EM_DIAGRAM):   set _anest;
1127066    if _ITER_ eq 7 then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 7 then do;
1127067    output;
MPRINT(EM_DIAGRAM):   output;
1127068    stop;
MPRINT(EM_DIAGRAM):   stop;
1127069    end;
MPRINT(EM_DIAGRAM):   end;
1127070    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set WORK._ANEST.
NOTE: The data set EMWS8.AUTONEURAL26_ESTDS has 1 observations and 664
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
1127071    *;
1127072    data EMWS8.AutoNeural26_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural26_OUTFIT;
1127073    set _anfit;
MPRINT(EM_DIAGRAM):   set _anfit;
1127074    if _ITER_ eq 7 and _NAME_ eq "OVERALL" then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 7 and _NAME_ eq "OVERALL" then do;
1127075    output;
MPRINT(EM_DIAGRAM):   output;
1127076    stop;
MPRINT(EM_DIAGRAM):   stop;
1127077    end;
MPRINT(EM_DIAGRAM):   end;
1127078    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 16 observations read from the data set WORK._ANFIT.
NOTE: The data set EMWS8.AUTONEURAL26_OUTFIT has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1127079    *;
MPRINT(EM_DIAGRAM):    *;
1127080    title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
1127081    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_selectediteration_title
1127081  ! , NOQUOTE, _VMISC_))";
MPRINT(EM_DIAGRAM):   title10 "Selected Iteration based on _VMISC_";
1127082    proc print data=EMWS8.AutoNeural26_OUTFIT noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural26_OUTFIT noobs;
1127083    var _iter_ _aic_ _averr_ _misc_
1127084    _vaverr_ _vmisc_
1127085    ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
1127086    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL26_OUTFIT.
NOTE: The PROCEDURE PRINT printed page 856.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1127087    title9;
MPRINT(EM_DIAGRAM):   title9;
1127088    title10;
MPRINT(EM_DIAGRAM):   title10;
1127089    data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
1127090    set EMWS8.AutoNeural26_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural26_OUTFIT;
1127091    if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
1127092    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL26_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1127093    data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
1127094    set EMWS8.AutoNeural26_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural26_OUTFIT;
1127095    if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
1127096    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL26_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1127097    * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
1127098    ;
MPRINT(EM_DIAGRAM):   ;
1127099    data EMWS8.AutoNeural26_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural26_OUTFIT;
1127100    set EMWS8.AutoNeural26_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural26_OUTFIT;
1127101    length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
1127102    _func_ = "LOGISTIC";
MPRINT(EM_DIAGRAM):   _func_ = "LOGISTIC";
1127103    _status_ = "reject";
MPRINT(EM_DIAGRAM):   _status_ = "reject";
1127104    _step_ = "FUNNEL LAYERS 2";
MPRINT(EM_DIAGRAM):   _step_ = "FUNNEL LAYERS 2";
1127105    _index_ = 2;
MPRINT(EM_DIAGRAM):   _index_ = 2;
1127106    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL26_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL26_OUTFIT has 1 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1127107    data EMWS8.AutoNeural26_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural26_HISTORY;
1127108    set EMWS8.AutoNeural26_HISTORY EMWS8.AutoNeural26_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural26_HISTORY EMWS8.AutoNeural26_OUTFIT;
1127109    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 6 observations read from the data set
      EMWS8.AUTONEURAL26_HISTORY.
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL26_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL26_HISTORY has 7 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1127110    * SEARCH: recall starting estimates;
MPRINT(EM_DIAGRAM):    * SEARCH: recall starting estimates;
1127111    ;
MPRINT(EM_DIAGRAM):   ;
1127112    data EMWS8.AutoNeural26_ESTDS;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural26_ESTDS;
1127113    set EMWS8.AutoNeural26_BESTDS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural26_BESTDS;
1127114    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL26_BESTDS.
NOTE: The data set EMWS8.AUTONEURAL26_ESTDS has 1 observations and 144
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1127115    *;
MPRINT(EM_DIAGRAM):    *;
1127116    proc neural data=EM_AutoNeural26 dmdbcat=WORK.AutoNeural26_DMDB
1127117    validdata=EMWS8.BINNING_VALIDATE
1127118    ;
MPRINT(EM_DIAGRAM):   proc neural data=EM_AutoNeural26
dmdbcat=WORK.AutoNeural26_DMDB validdata=EMWS8.BINNING_VALIDATE ;
1127119    *;
MPRINT(EM_DIAGRAM):   *;
1127120    nloptions noprint;
MPRINT(EM_DIAGRAM):   nloptions noprint;
1127121    performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   input
1127122    input %INTINPUTS / level=interval id=interval;
MPRINT(INTINPUTS):   Year_Birth
MPRINT(EM_DIAGRAM):   / level=interval id=interval;
MPRINT(EM_DIAGRAM):   input
1127123    input %NOMINPUTS / level=nominal id=nominal;
MPRINT(NOMINPUTS):   GRP_AcceptedCmp5 GRP_AcceptedCmpTotal GRP_Frq GRP_Income
GRP_Mnt GRP_MntFishProducts GRP_MntGoldProds GRP_MntMeatProducts
GRP_MntSweetProducts GRP_MntWines GRP_NumCatalogPurchases GRP_NumDistPurchases
GRP_NumWebPurchases GRP_NumWebVisitsMonth GRP_RFMstat GRP_RMntFrq GRP_Recency
MPRINT(EM_DIAGRAM):   / level=nominal id=nominal;
1127124    target DepVar / level=NOMINAL id=DepVar
1127125    ;
MPRINT(EM_DIAGRAM):   target DepVar / level=NOMINAL id=DepVar ;
1127126    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1127127    * Direct connection;
MPRINT(EM_DIAGRAM):   * Direct connection;
1127128    ;
MPRINT(EM_DIAGRAM):   ;
1127129    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1127130    connect interval DepVar;
MPRINT(EM_DIAGRAM):   connect interval DepVar;
1127131    connect nominal DepVar;
MPRINT(EM_DIAGRAM):   connect nominal DepVar;
1127132    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1127133    * Layer #1;
MPRINT(EM_DIAGRAM):   * Layer #1;
1127134    ;
MPRINT(EM_DIAGRAM):   ;
1127135    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1127136    Hidden 4 / id = H1x1_ act=SINE;
MPRINT(EM_DIAGRAM):   Hidden 4 / id = H1x1_ act=SINE;
1127137    connect interval H1x1_;
MPRINT(EM_DIAGRAM):   connect interval H1x1_;
1127138    connect nominal H1x1_;
MPRINT(EM_DIAGRAM):   connect nominal H1x1_;
1127139    connect H1x1_ DepVar;
MPRINT(EM_DIAGRAM):   connect H1x1_ DepVar;
1127140    *;
MPRINT(EM_DIAGRAM):   *;
1127141    netoptions ranscale = 1;
MPRINT(EM_DIAGRAM):   netoptions ranscale = 1;
1127142    *;
MPRINT(EM_DIAGRAM):   *;
1127143    initial
1127144    inest = EMWS8.AutoNeural26_ESTDS bylabel;
MPRINT(EM_DIAGRAM):   initial inest = EMWS8.AutoNeural26_ESTDS bylabel;
NOTE: The data set EMWS8.AUTONEURAL26_ESTDS has 1 observations and 144
      variables.
1127145    ;
MPRINT(EM_DIAGRAM):   ;
1127146    *;
MPRINT(EM_DIAGRAM):   *;
1127147    title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
1127148    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_prelim_title  ,NOQUOTE,
1127148  ! Search # 2 FUNNEL LAYERS trial # 2 : SINE : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 2 FUNNEL LAYERS trial # 2 : SINE :
Prelim";
1127149    prelim 16 outest=_anpre pretime=54 preiter=25
MPRINT(EM_DIAGRAM):   prelim 16 outest=_anpre pretime=54 preiter=25 tech =
Default inest = EMWS8.AutoNeural26_ESTDS bylabel ;
NOTE:  Synchronizing the objectives and the Solution.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANPRE has 33 observations and 664 variables.
NOTE: The data set EMWS8.AUTONEURAL26_ESTDS has 1 observations and 144
      variables.
MPRINT(EM_DIAGRAM):   *;
1127150    tech = Default
1127151    inest = EMWS8.AutoNeural26_ESTDS bylabel
1127152    ;
1127153    *;
1127154    title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
1127155    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_train_title  ,NOQUOTE,
1127155  ! Search # 2 FUNNEL LAYERS trial # 2 : SINE : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 2 FUNNEL LAYERS trial # 2 : SINE :
Training";
MPRINT(EM_DIAGRAM):   train estiter=1 outest=_anest outfit=_anfit maxtime=877
maxiter=50 tech = Default;
WARNING: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 50 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANEST has 53 observations and 664 variables.
NOTE: The data set WORK._ANFIT has 104 observations and 36 variables.
MPRINT(EM_DIAGRAM):   ;
1127156    train estiter=1 outest=_anest outfit=_anfit maxtime=877 maxiter=50
MPRINT(EM_DIAGRAM):   run;
1127157    tech = Default;
1127158    ;
1127159    run;
 
NOTE: The data set WORK.EM_AUTONEURAL26 has 2374 observations and 19 variables.
NOTE: The data set EMWS8.BINNING_VALIDATE has . observations and 62 variables.
NOTE: View EMWS8.BINNING_VALIDATE.VIEW used (Total process time):
      real time           26.41 seconds
      cpu time            26.33 seconds
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: Closing the Neural Application.
NOTE: The PROCEDURE NEURAL printed page 857.
NOTE: PROCEDURE NEURAL used (Total process time):
      real time           26.42 seconds
      cpu time            26.33 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
1127160    *;
1127161    proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
MPRINT(EM_DIAGRAM):   proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
1127162    var _iter_ _aic_ _averr_ _misc_
1127163    _vaverr_ _vmisc_
1127164    ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
1127165    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _name_='OVERALL';
NOTE: The PROCEDURE PRINT printed page 858.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Extract best iteration;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1127166    *------------------------------------------------------------*;
1127167    * Extract best iteration;
1127168    ;
1127169    *------------------------------------------------------------*;
1127170    %global _iter;
1127171    data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
1127172    set _anfit(where=(_NAME_ eq 'OVERALL'));
MPRINT(EM_DIAGRAM):   set _anfit(where=(_NAME_ eq 'OVERALL'));
1127173    retain _min 1e+64;
MPRINT(EM_DIAGRAM):   retain _min 1e+64;
1127174    if _VMISC_ < _min then do;
MPRINT(EM_DIAGRAM):   if _VMISC_ < _min then do;
1127175    _min = _VMISC_;
MPRINT(EM_DIAGRAM):   _min = _VMISC_;
1127176    call symput('_iter',put(_ITER_, 6.));
MPRINT(EM_DIAGRAM):   call symput('_iter',put(_ITER_, 6.));
1127177    end;
MPRINT(EM_DIAGRAM):   end;
1127178    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _NAME_='OVERALL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
1127179    *;
 
1127180    data EMWS8.AutoNeural26_ESTDS;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural26_ESTDS;
1127181    set _anest;
MPRINT(EM_DIAGRAM):   set _anest;
1127182    if _ITER_ eq 0 then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 0 then do;
1127183    output;
MPRINT(EM_DIAGRAM):   output;
1127184    stop;
MPRINT(EM_DIAGRAM):   stop;
1127185    end;
MPRINT(EM_DIAGRAM):   end;
1127186    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK._ANEST.
NOTE: The data set EMWS8.AUTONEURAL26_ESTDS has 1 observations and 664
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
1127187    *;
1127188    data EMWS8.AutoNeural26_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural26_OUTFIT;
1127189    set _anfit;
MPRINT(EM_DIAGRAM):   set _anfit;
1127190    if _ITER_ eq 0 and _NAME_ eq "OVERALL" then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 0 and _NAME_ eq "OVERALL" then do;
1127191    output;
MPRINT(EM_DIAGRAM):   output;
1127192    stop;
MPRINT(EM_DIAGRAM):   stop;
1127193    end;
MPRINT(EM_DIAGRAM):   end;
1127194    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set WORK._ANFIT.
NOTE: The data set EMWS8.AUTONEURAL26_OUTFIT has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1127195    *;
MPRINT(EM_DIAGRAM):    *;
1127196    title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
1127197    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_selectediteration_title
1127197  ! , NOQUOTE, _VMISC_))";
MPRINT(EM_DIAGRAM):   title10 "Selected Iteration based on _VMISC_";
1127198    proc print data=EMWS8.AutoNeural26_OUTFIT noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural26_OUTFIT noobs;
1127199    var _iter_ _aic_ _averr_ _misc_
1127200    _vaverr_ _vmisc_
1127201    ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
1127202    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL26_OUTFIT.
NOTE: The PROCEDURE PRINT printed page 859.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1127203    title9;
MPRINT(EM_DIAGRAM):   title9;
1127204    title10;
MPRINT(EM_DIAGRAM):   title10;
1127205    data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
1127206    set EMWS8.AutoNeural26_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural26_OUTFIT;
1127207    if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
1127208    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL26_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1127209    data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
1127210    set EMWS8.AutoNeural26_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural26_OUTFIT;
1127211    if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
1127212    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL26_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1127213    * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
1127214    ;
MPRINT(EM_DIAGRAM):   ;
1127215    data EMWS8.AutoNeural26_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural26_OUTFIT;
1127216    set EMWS8.AutoNeural26_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural26_OUTFIT;
1127217    length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
1127218    _func_ = "SINE";
MPRINT(EM_DIAGRAM):   _func_ = "SINE";
1127219    _status_ = "reject";
MPRINT(EM_DIAGRAM):   _status_ = "reject";
1127220    _step_ = "FUNNEL LAYERS 2";
MPRINT(EM_DIAGRAM):   _step_ = "FUNNEL LAYERS 2";
1127221    _index_ = 2;
MPRINT(EM_DIAGRAM):   _index_ = 2;
1127222    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL26_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL26_OUTFIT has 1 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1127223    data EMWS8.AutoNeural26_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural26_HISTORY;
1127224    set EMWS8.AutoNeural26_HISTORY EMWS8.AutoNeural26_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural26_HISTORY EMWS8.AutoNeural26_OUTFIT;
1127225    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 7 observations read from the data set
      EMWS8.AUTONEURAL26_HISTORY.
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL26_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL26_HISTORY has 8 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1127226    * SEARCH: recall starting estimates;
MPRINT(EM_DIAGRAM):    * SEARCH: recall starting estimates;
1127227    ;
MPRINT(EM_DIAGRAM):   ;
1127228    data EMWS8.AutoNeural26_ESTDS;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural26_ESTDS;
1127229    set EMWS8.AutoNeural26_BESTDS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural26_BESTDS;
1127230    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL26_BESTDS.
NOTE: The data set EMWS8.AUTONEURAL26_ESTDS has 1 observations and 144
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1127231    *;
MPRINT(EM_DIAGRAM):    *;
1127232    proc neural data=EM_AutoNeural26 dmdbcat=WORK.AutoNeural26_DMDB
1127233    validdata=EMWS8.BINNING_VALIDATE
1127234    ;
MPRINT(EM_DIAGRAM):   proc neural data=EM_AutoNeural26
dmdbcat=WORK.AutoNeural26_DMDB validdata=EMWS8.BINNING_VALIDATE ;
1127235    *;
MPRINT(EM_DIAGRAM):   *;
1127236    nloptions noprint;
MPRINT(EM_DIAGRAM):   nloptions noprint;
1127237    performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   input
1127238    input %INTINPUTS / level=interval id=interval;
MPRINT(INTINPUTS):   Year_Birth
MPRINT(EM_DIAGRAM):   / level=interval id=interval;
MPRINT(EM_DIAGRAM):   input
1127239    input %NOMINPUTS / level=nominal id=nominal;
MPRINT(NOMINPUTS):   GRP_AcceptedCmp5 GRP_AcceptedCmpTotal GRP_Frq GRP_Income
GRP_Mnt GRP_MntFishProducts GRP_MntGoldProds GRP_MntMeatProducts
GRP_MntSweetProducts GRP_MntWines GRP_NumCatalogPurchases GRP_NumDistPurchases
GRP_NumWebPurchases GRP_NumWebVisitsMonth GRP_RFMstat GRP_RMntFrq GRP_Recency
MPRINT(EM_DIAGRAM):   / level=nominal id=nominal;
1127240    target DepVar / level=NOMINAL id=DepVar
1127241    ;
MPRINT(EM_DIAGRAM):   target DepVar / level=NOMINAL id=DepVar ;
1127242    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1127243    * Direct connection;
MPRINT(EM_DIAGRAM):   * Direct connection;
1127244    ;
MPRINT(EM_DIAGRAM):   ;
1127245    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1127246    connect interval DepVar;
MPRINT(EM_DIAGRAM):   connect interval DepVar;
1127247    connect nominal DepVar;
MPRINT(EM_DIAGRAM):   connect nominal DepVar;
1127248    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1127249    * Layer #1;
MPRINT(EM_DIAGRAM):   * Layer #1;
1127250    ;
MPRINT(EM_DIAGRAM):   ;
1127251    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1127252    Hidden 4 / id = H1x1_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 4 / id = H1x1_ act=SOFTMAX;
1127253    connect interval H1x1_;
MPRINT(EM_DIAGRAM):   connect interval H1x1_;
1127254    connect nominal H1x1_;
MPRINT(EM_DIAGRAM):   connect nominal H1x1_;
1127255    connect H1x1_ DepVar;
MPRINT(EM_DIAGRAM):   connect H1x1_ DepVar;
1127256    *;
MPRINT(EM_DIAGRAM):   *;
1127257    netoptions ranscale = 1;
MPRINT(EM_DIAGRAM):   netoptions ranscale = 1;
1127258    *;
MPRINT(EM_DIAGRAM):   *;
1127259    initial
1127260    inest = EMWS8.AutoNeural26_ESTDS bylabel;
MPRINT(EM_DIAGRAM):   initial inest = EMWS8.AutoNeural26_ESTDS bylabel;
NOTE: The data set EMWS8.AUTONEURAL26_ESTDS has 1 observations and 144
      variables.
1127261    ;
MPRINT(EM_DIAGRAM):   ;
1127262    *;
MPRINT(EM_DIAGRAM):   *;
1127263    title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
1127264    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_prelim_title  ,NOQUOTE,
1127264  ! Search # 2 FUNNEL LAYERS trial # 3 : SOFTMAX : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 2 FUNNEL LAYERS trial # 3 : SOFTMAX :
Prelim";
1127265    prelim 16 outest=_anpre pretime=54 preiter=25
MPRINT(EM_DIAGRAM):   prelim 16 outest=_anpre pretime=54 preiter=25 tech =
Default inest = EMWS8.AutoNeural26_ESTDS bylabel ;
NOTE:  Synchronizing the objectives and the Solution.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANPRE has 33 observations and 535 variables.
NOTE: The data set EMWS8.AUTONEURAL26_ESTDS has 1 observations and 144
      variables.
MPRINT(EM_DIAGRAM):   *;
1127266    tech = Default
1127267    inest = EMWS8.AutoNeural26_ESTDS bylabel
1127268    ;
1127269    *;
1127270    title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
1127271    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_train_title  ,NOQUOTE,
1127271  ! Search # 2 FUNNEL LAYERS trial # 3 : SOFTMAX : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 2 FUNNEL LAYERS trial # 3 : SOFTMAX :
Training";
MPRINT(EM_DIAGRAM):   train estiter=1 outest=_anest outfit=_anfit maxtime=870
maxiter=50 tech = Default;
WARNING: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 50 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANEST has 53 observations and 535 variables.
NOTE: The data set WORK._ANFIT has 104 observations and 36 variables.
MPRINT(EM_DIAGRAM):   ;
1127272    train estiter=1 outest=_anest outfit=_anfit maxtime=870 maxiter=50
MPRINT(EM_DIAGRAM):   run;
1127273    tech = Default;
1127274    ;
1127275    run;
 
NOTE: The data set WORK.EM_AUTONEURAL26 has 2374 observations and 19 variables.
NOTE: The data set EMWS8.BINNING_VALIDATE has . observations and 62 variables.
NOTE: View EMWS8.BINNING_VALIDATE.VIEW used (Total process time):
      real time           27.21 seconds
      cpu time            27.08 seconds
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: Closing the Neural Application.
NOTE: The PROCEDURE NEURAL printed page 860.
NOTE: PROCEDURE NEURAL used (Total process time):
      real time           27.22 seconds
      cpu time            27.08 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
1127276    *;
1127277    proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
MPRINT(EM_DIAGRAM):   proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
1127278    var _iter_ _aic_ _averr_ _misc_
1127279    _vaverr_ _vmisc_
1127280    ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
1127281    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _name_='OVERALL';
NOTE: The PROCEDURE PRINT printed page 861.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Extract best iteration;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1127282    *------------------------------------------------------------*;
1127283    * Extract best iteration;
1127284    ;
1127285    *------------------------------------------------------------*;
1127286    %global _iter;
1127287    data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
1127288    set _anfit(where=(_NAME_ eq 'OVERALL'));
MPRINT(EM_DIAGRAM):   set _anfit(where=(_NAME_ eq 'OVERALL'));
1127289    retain _min 1e+64;
MPRINT(EM_DIAGRAM):   retain _min 1e+64;
1127290    if _VMISC_ < _min then do;
MPRINT(EM_DIAGRAM):   if _VMISC_ < _min then do;
1127291    _min = _VMISC_;
MPRINT(EM_DIAGRAM):   _min = _VMISC_;
1127292    call symput('_iter',put(_ITER_, 6.));
MPRINT(EM_DIAGRAM):   call symput('_iter',put(_ITER_, 6.));
1127293    end;
MPRINT(EM_DIAGRAM):   end;
1127294    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _NAME_='OVERALL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
1127295    *;
 
1127296    data EMWS8.AutoNeural26_ESTDS;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural26_ESTDS;
1127297    set _anest;
MPRINT(EM_DIAGRAM):   set _anest;
1127298    if _ITER_ eq 2 then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 2 then do;
1127299    output;
MPRINT(EM_DIAGRAM):   output;
1127300    stop;
MPRINT(EM_DIAGRAM):   stop;
1127301    end;
MPRINT(EM_DIAGRAM):   end;
1127302    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set WORK._ANEST.
NOTE: The data set EMWS8.AUTONEURAL26_ESTDS has 1 observations and 535
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
1127303    *;
1127304    data EMWS8.AutoNeural26_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural26_OUTFIT;
1127305    set _anfit;
MPRINT(EM_DIAGRAM):   set _anfit;
1127306    if _ITER_ eq 2 and _NAME_ eq "OVERALL" then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 2 and _NAME_ eq "OVERALL" then do;
1127307    output;
MPRINT(EM_DIAGRAM):   output;
1127308    stop;
MPRINT(EM_DIAGRAM):   stop;
1127309    end;
MPRINT(EM_DIAGRAM):   end;
1127310    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 6 observations read from the data set WORK._ANFIT.
NOTE: The data set EMWS8.AUTONEURAL26_OUTFIT has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1127311    *;
MPRINT(EM_DIAGRAM):    *;
1127312    title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
1127313    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_selectediteration_title
1127313  ! , NOQUOTE, _VMISC_))";
MPRINT(EM_DIAGRAM):   title10 "Selected Iteration based on _VMISC_";
1127314    proc print data=EMWS8.AutoNeural26_OUTFIT noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural26_OUTFIT noobs;
1127315    var _iter_ _aic_ _averr_ _misc_
1127316    _vaverr_ _vmisc_
1127317    ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
1127318    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL26_OUTFIT.
NOTE: The PROCEDURE PRINT printed page 862.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1127319    title9;
MPRINT(EM_DIAGRAM):   title9;
1127320    title10;
MPRINT(EM_DIAGRAM):   title10;
1127321    data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
1127322    set EMWS8.AutoNeural26_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural26_OUTFIT;
1127323    if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
1127324    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL26_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1127325    data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
1127326    set EMWS8.AutoNeural26_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural26_OUTFIT;
1127327    if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
1127328    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL26_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1127329    *SEARCH: copy estimates and fit to best buffer;
MPRINT(EM_DIAGRAM):    *SEARCH: copy estimates and fit to best buffer;
1127330    ;
MPRINT(EM_DIAGRAM):   ;
1127331    data WORK.SAVEDS_AUTONEUR_17P412E;
MPRINT(EM_DIAGRAM):   data WORK.SAVEDS_AUTONEUR_17P412E;
1127332    set EMWS8.AutoNeural26_ESTDS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural26_ESTDS;
1127333    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.AUTONEURAL26_ESTDS.
NOTE: The data set WORK.SAVEDS_AUTONEUR_17P412E has 1 observations and 535
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1127334    data EMWS8.AutoNeural26_BESTDS;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural26_BESTDS;
1127335    set EMWS8.AutoNeural26_ESTDS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural26_ESTDS;
1127336    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.AUTONEURAL26_ESTDS.
NOTE: The data set EMWS8.AUTONEURAL26_BESTDS has 1 observations and 535
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1127337    data WORK.BFITDS_AUTONEUR_17P412E;
MPRINT(EM_DIAGRAM):   data WORK.BFITDS_AUTONEUR_17P412E;
1127338    set EMWS8.AutoNeural26_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural26_OUTFIT;
1127339    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL26_OUTFIT.
NOTE: The data set WORK.BFITDS_AUTONEUR_17P412E has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1127340    * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
1127341    ;
MPRINT(EM_DIAGRAM):   ;
1127342    data EMWS8.AutoNeural26_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural26_OUTFIT;
1127343    set EMWS8.AutoNeural26_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural26_OUTFIT;
1127344    length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
1127345    _func_ = "SOFTMAX";
MPRINT(EM_DIAGRAM):   _func_ = "SOFTMAX";
1127346    _status_ = "candidate";
MPRINT(EM_DIAGRAM):   _status_ = "candidate";
1127347    _step_ = "FUNNEL LAYERS 2";
MPRINT(EM_DIAGRAM):   _step_ = "FUNNEL LAYERS 2";
1127348    _index_ = 2;
MPRINT(EM_DIAGRAM):   _index_ = 2;
1127349    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL26_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL26_OUTFIT has 1 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1127350    data EMWS8.AutoNeural26_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural26_HISTORY;
1127351    set EMWS8.AutoNeural26_HISTORY EMWS8.AutoNeural26_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural26_HISTORY EMWS8.AutoNeural26_OUTFIT;
1127352    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set
      EMWS8.AUTONEURAL26_HISTORY.
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL26_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL26_HISTORY has 9 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1127353    *SEARCH: recall best estimates and fit;
MPRINT(EM_DIAGRAM):    *SEARCH: recall best estimates and fit;
1127354    ;
MPRINT(EM_DIAGRAM):   ;
1127355    data EMWS8.AutoNeural26_ESTDS;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural26_ESTDS;
1127356    set EMWS8.AutoNeural26_BESTDS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural26_BESTDS;
1127357    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL26_BESTDS.
NOTE: The data set EMWS8.AUTONEURAL26_ESTDS has 1 observations and 535
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1127358    data EMWS8.AutoNeural26_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural26_OUTFIT;
1127359    set WORK.BFITDS_AUTONEUR_17P412E;
MPRINT(EM_DIAGRAM):   set WORK.BFITDS_AUTONEUR_17P412E;
1127360    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      WORK.BFITDS_AUTONEUR_17P412E.
NOTE: The data set EMWS8.AUTONEURAL26_OUTFIT has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1127361    * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
1127362    ;
MPRINT(EM_DIAGRAM):   ;
1127363    data EMWS8.AutoNeural26_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural26_OUTFIT;
1127364    set EMWS8.AutoNeural26_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural26_OUTFIT;
1127365    length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
1127366    _func_ = "SOFTMAX";
MPRINT(EM_DIAGRAM):   _func_ = "SOFTMAX";
1127367    _status_ = "keep";
MPRINT(EM_DIAGRAM):   _status_ = "keep";
1127368    _step_ = "FUNNEL LAYERS 2";
MPRINT(EM_DIAGRAM):   _step_ = "FUNNEL LAYERS 2";
1127369    _index_ = 2;
MPRINT(EM_DIAGRAM):   _index_ = 2;
1127370    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL26_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL26_OUTFIT has 1 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1127371    data EMWS8.AutoNeural26_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural26_HISTORY;
1127372    set EMWS8.AutoNeural26_HISTORY EMWS8.AutoNeural26_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural26_HISTORY EMWS8.AutoNeural26_OUTFIT;
1127373    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 9 observations read from the data set
      EMWS8.AUTONEURAL26_HISTORY.
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL26_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL26_HISTORY has 10 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1127374    data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
1127375    set EMWS8.AutoNeural26_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural26_OUTFIT;
1127376    if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
1127377    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL26_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 40 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1127378    *;
MPRINT(EM_DIAGRAM):    *;
1127379    proc neural data=EM_AutoNeural26 dmdbcat=WORK.AutoNeural26_DMDB
1127380    validdata=EMWS8.BINNING_VALIDATE
1127381    ;
MPRINT(EM_DIAGRAM):   proc neural data=EM_AutoNeural26
dmdbcat=WORK.AutoNeural26_DMDB validdata=EMWS8.BINNING_VALIDATE ;
1127382    *;
MPRINT(EM_DIAGRAM):   *;
1127383    nloptions noprint;
MPRINT(EM_DIAGRAM):   nloptions noprint;
1127384    performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   input
1127385    input %INTINPUTS / level=interval id=interval;
MPRINT(INTINPUTS):   Year_Birth
MPRINT(EM_DIAGRAM):   / level=interval id=interval;
MPRINT(EM_DIAGRAM):   input
1127386    input %NOMINPUTS / level=nominal id=nominal;
MPRINT(NOMINPUTS):   GRP_AcceptedCmp5 GRP_AcceptedCmpTotal GRP_Frq GRP_Income
GRP_Mnt GRP_MntFishProducts GRP_MntGoldProds GRP_MntMeatProducts
GRP_MntSweetProducts GRP_MntWines GRP_NumCatalogPurchases GRP_NumDistPurchases
GRP_NumWebPurchases GRP_NumWebVisitsMonth GRP_RFMstat GRP_RMntFrq GRP_Recency
MPRINT(EM_DIAGRAM):   / level=nominal id=nominal;
1127387    target DepVar / level=NOMINAL id=DepVar
1127388    ;
MPRINT(EM_DIAGRAM):   target DepVar / level=NOMINAL id=DepVar ;
1127389    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1127390    * Direct connection;
MPRINT(EM_DIAGRAM):   * Direct connection;
1127391    ;
MPRINT(EM_DIAGRAM):   ;
1127392    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1127393    connect interval DepVar;
MPRINT(EM_DIAGRAM):   connect interval DepVar;
1127394    connect nominal DepVar;
MPRINT(EM_DIAGRAM):   connect nominal DepVar;
1127395    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1127396    * Layer #1;
MPRINT(EM_DIAGRAM):   * Layer #1;
1127397    ;
MPRINT(EM_DIAGRAM):   ;
1127398    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1127399    Hidden 4 / id = H1x1_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 4 / id = H1x1_ act=SOFTMAX;
1127400    connect interval H1x1_;
MPRINT(EM_DIAGRAM):   connect interval H1x1_;
1127401    connect nominal H1x1_;
MPRINT(EM_DIAGRAM):   connect nominal H1x1_;
1127402    Hidden 4 / id = H1x2_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 4 / id = H1x2_ act=SOFTMAX;
1127403    connect interval H1x2_;
MPRINT(EM_DIAGRAM):   connect interval H1x2_;
1127404    connect nominal H1x2_;
MPRINT(EM_DIAGRAM):   connect nominal H1x2_;
1127405    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1127406    * Layer #2;
MPRINT(EM_DIAGRAM):   * Layer #2;
1127407    ;
MPRINT(EM_DIAGRAM):   ;
1127408    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1127409    Hidden 4 / id = H2x1_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 4 / id = H2x1_ act=LOG;
1127410    connect H1x1_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x1_ H2x1_;
1127411    connect H1x2_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x2_ H2x1_;
1127412    connect H2x1_ DepVar;
MPRINT(EM_DIAGRAM):   connect H2x1_ DepVar;
1127413    *;
MPRINT(EM_DIAGRAM):   *;
1127414    netoptions ranscale = 1;
MPRINT(EM_DIAGRAM):   netoptions ranscale = 1;
1127415    *;
MPRINT(EM_DIAGRAM):   *;
1127416    initial
1127417    inest = EMWS8.AutoNeural26_ESTDS bylabel;
MPRINT(EM_DIAGRAM):   initial inest = EMWS8.AutoNeural26_ESTDS bylabel;
NOTE: The data set EMWS8.AUTONEURAL26_ESTDS has 1 observations and 535
      variables.
1127418    ;
MPRINT(EM_DIAGRAM):   ;
1127419    *;
MPRINT(EM_DIAGRAM):   *;
1127420    title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
1127421    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_prelim_title  ,NOQUOTE,
1127421  ! Search # 3 FUNNEL LAYERS trial # 1 : LOGISTIC : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 3 FUNNEL LAYERS trial # 1 : LOGISTIC :
Prelim";
1127422    prelim 20 outest=_anpre pretime=43 preiter=25
MPRINT(EM_DIAGRAM):   prelim 20 outest=_anpre pretime=43 preiter=25 tech =
Default inest = EMWS8.AutoNeural26_ESTDS bylabel ;
NOTE:  Synchronizing the objectives and the Solution.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANPRE has 41 observations and 958 variables.
NOTE: The data set EMWS8.AUTONEURAL26_ESTDS has 1 observations and 535
      variables.
MPRINT(EM_DIAGRAM):   *;
1127423    tech = Default
1127424    inest = EMWS8.AutoNeural26_ESTDS bylabel
1127425    ;
1127426    *;
1127427    title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
1127428    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_train_title  ,NOQUOTE,
1127428  ! Search # 3 FUNNEL LAYERS trial # 1 : LOGISTIC : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 3 FUNNEL LAYERS trial # 1 : LOGISTIC :
Training";
MPRINT(EM_DIAGRAM):   train estiter=1 outest=_anest outfit=_anfit maxtime=863
maxiter=50 tech = Default;
WARNING: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 50 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANEST has 53 observations and 958 variables.
NOTE: The data set WORK._ANFIT has 104 observations and 36 variables.
MPRINT(EM_DIAGRAM):   ;
1127429    train estiter=1 outest=_anest outfit=_anfit maxtime=863 maxiter=50
MPRINT(EM_DIAGRAM):   run;
1127430    tech = Default;
1127431    ;
1127432    run;
 
NOTE: The data set WORK.EM_AUTONEURAL26 has 2374 observations and 19 variables.
NOTE: The data set EMWS8.BINNING_VALIDATE has . observations and 62 variables.
NOTE: View EMWS8.BINNING_VALIDATE.VIEW used (Total process time):
      real time           41.19 seconds
      cpu time            40.91 seconds
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: Closing the Neural Application.
NOTE: The PROCEDURE NEURAL printed page 863.
NOTE: PROCEDURE NEURAL used (Total process time):
      real time           41.20 seconds
      cpu time            40.91 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
1127433    *;
1127434    proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
MPRINT(EM_DIAGRAM):   proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
1127435    var _iter_ _aic_ _averr_ _misc_
1127436    _vaverr_ _vmisc_
1127437    ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
1127438    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _name_='OVERALL';
NOTE: The PROCEDURE PRINT printed page 864.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Extract best iteration;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1127439    *------------------------------------------------------------*;
1127440    * Extract best iteration;
1127441    ;
1127442    *------------------------------------------------------------*;
1127443    %global _iter;
1127444    data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
1127445    set _anfit(where=(_NAME_ eq 'OVERALL'));
MPRINT(EM_DIAGRAM):   set _anfit(where=(_NAME_ eq 'OVERALL'));
1127446    retain _min 1e+64;
MPRINT(EM_DIAGRAM):   retain _min 1e+64;
1127447    if _VMISC_ < _min then do;
MPRINT(EM_DIAGRAM):   if _VMISC_ < _min then do;
1127448    _min = _VMISC_;
MPRINT(EM_DIAGRAM):   _min = _VMISC_;
1127449    call symput('_iter',put(_ITER_, 6.));
MPRINT(EM_DIAGRAM):   call symput('_iter',put(_ITER_, 6.));
1127450    end;
MPRINT(EM_DIAGRAM):   end;
1127451    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _NAME_='OVERALL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
1127452    *;
 
1127453    data EMWS8.AutoNeural26_ESTDS;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural26_ESTDS;
1127454    set _anest;
MPRINT(EM_DIAGRAM):   set _anest;
1127455    if _ITER_ eq 18 then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 18 then do;
1127456    output;
MPRINT(EM_DIAGRAM):   output;
1127457    stop;
MPRINT(EM_DIAGRAM):   stop;
1127458    end;
MPRINT(EM_DIAGRAM):   end;
1127459    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 19 observations read from the data set WORK._ANEST.
NOTE: The data set EMWS8.AUTONEURAL26_ESTDS has 1 observations and 958
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
1127460    *;
1127461    data EMWS8.AutoNeural26_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural26_OUTFIT;
1127462    set _anfit;
MPRINT(EM_DIAGRAM):   set _anfit;
1127463    if _ITER_ eq 18 and _NAME_ eq "OVERALL" then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 18 and _NAME_ eq "OVERALL" then do;
1127464    output;
MPRINT(EM_DIAGRAM):   output;
1127465    stop;
MPRINT(EM_DIAGRAM):   stop;
1127466    end;
MPRINT(EM_DIAGRAM):   end;
1127467    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 38 observations read from the data set WORK._ANFIT.
NOTE: The data set EMWS8.AUTONEURAL26_OUTFIT has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1127468    *;
MPRINT(EM_DIAGRAM):    *;
1127469    title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
1127470    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_selectediteration_title
1127470  ! , NOQUOTE, _VMISC_))";
MPRINT(EM_DIAGRAM):   title10 "Selected Iteration based on _VMISC_";
1127471    proc print data=EMWS8.AutoNeural26_OUTFIT noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural26_OUTFIT noobs;
1127472    var _iter_ _aic_ _averr_ _misc_
1127473    _vaverr_ _vmisc_
1127474    ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
1127475    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL26_OUTFIT.
NOTE: The PROCEDURE PRINT printed page 865.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1127476    title9;
MPRINT(EM_DIAGRAM):   title9;
1127477    title10;
MPRINT(EM_DIAGRAM):   title10;
1127478    data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
1127479    set EMWS8.AutoNeural26_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural26_OUTFIT;
1127480    if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
1127481    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL26_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1127482    data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
1127483    set EMWS8.AutoNeural26_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural26_OUTFIT;
1127484    if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
1127485    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL26_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1127486    * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
1127487    ;
MPRINT(EM_DIAGRAM):   ;
1127488    data EMWS8.AutoNeural26_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural26_OUTFIT;
1127489    set EMWS8.AutoNeural26_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural26_OUTFIT;
1127490    length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
1127491    _func_ = "LOGISTIC";
MPRINT(EM_DIAGRAM):   _func_ = "LOGISTIC";
1127492    _status_ = "reject";
MPRINT(EM_DIAGRAM):   _status_ = "reject";
1127493    _step_ = "FUNNEL LAYERS 3";
MPRINT(EM_DIAGRAM):   _step_ = "FUNNEL LAYERS 3";
1127494    _index_ = 3;
MPRINT(EM_DIAGRAM):   _index_ = 3;
1127495    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL26_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL26_OUTFIT has 1 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1127496    data EMWS8.AutoNeural26_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural26_HISTORY;
1127497    set EMWS8.AutoNeural26_HISTORY EMWS8.AutoNeural26_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural26_HISTORY EMWS8.AutoNeural26_OUTFIT;
1127498    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 10 observations read from the data set
      EMWS8.AUTONEURAL26_HISTORY.
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL26_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL26_HISTORY has 11 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1127499    * SEARCH: recall starting estimates;
MPRINT(EM_DIAGRAM):    * SEARCH: recall starting estimates;
1127500    ;
MPRINT(EM_DIAGRAM):   ;
1127501    data EMWS8.AutoNeural26_ESTDS;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural26_ESTDS;
1127502    set EMWS8.AutoNeural26_BESTDS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural26_BESTDS;
1127503    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL26_BESTDS.
NOTE: The data set EMWS8.AUTONEURAL26_ESTDS has 1 observations and 535
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1127504    *;
MPRINT(EM_DIAGRAM):    *;
1127505    proc neural data=EM_AutoNeural26 dmdbcat=WORK.AutoNeural26_DMDB
1127506    validdata=EMWS8.BINNING_VALIDATE
1127507    ;
MPRINT(EM_DIAGRAM):   proc neural data=EM_AutoNeural26
dmdbcat=WORK.AutoNeural26_DMDB validdata=EMWS8.BINNING_VALIDATE ;
1127508    *;
MPRINT(EM_DIAGRAM):   *;
1127509    nloptions noprint;
MPRINT(EM_DIAGRAM):   nloptions noprint;
1127510    performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   input
1127511    input %INTINPUTS / level=interval id=interval;
MPRINT(INTINPUTS):   Year_Birth
MPRINT(EM_DIAGRAM):   / level=interval id=interval;
MPRINT(EM_DIAGRAM):   input
1127512    input %NOMINPUTS / level=nominal id=nominal;
MPRINT(NOMINPUTS):   GRP_AcceptedCmp5 GRP_AcceptedCmpTotal GRP_Frq GRP_Income
GRP_Mnt GRP_MntFishProducts GRP_MntGoldProds GRP_MntMeatProducts
GRP_MntSweetProducts GRP_MntWines GRP_NumCatalogPurchases GRP_NumDistPurchases
GRP_NumWebPurchases GRP_NumWebVisitsMonth GRP_RFMstat GRP_RMntFrq GRP_Recency
MPRINT(EM_DIAGRAM):   / level=nominal id=nominal;
1127513    target DepVar / level=NOMINAL id=DepVar
1127514    ;
MPRINT(EM_DIAGRAM):   target DepVar / level=NOMINAL id=DepVar ;
1127515    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1127516    * Direct connection;
MPRINT(EM_DIAGRAM):   * Direct connection;
1127517    ;
MPRINT(EM_DIAGRAM):   ;
1127518    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1127519    connect interval DepVar;
MPRINT(EM_DIAGRAM):   connect interval DepVar;
1127520    connect nominal DepVar;
MPRINT(EM_DIAGRAM):   connect nominal DepVar;
1127521    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1127522    * Layer #1;
MPRINT(EM_DIAGRAM):   * Layer #1;
1127523    ;
MPRINT(EM_DIAGRAM):   ;
1127524    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1127525    Hidden 4 / id = H1x1_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 4 / id = H1x1_ act=SOFTMAX;
1127526    connect interval H1x1_;
MPRINT(EM_DIAGRAM):   connect interval H1x1_;
1127527    connect nominal H1x1_;
MPRINT(EM_DIAGRAM):   connect nominal H1x1_;
1127528    Hidden 4 / id = H1x2_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 4 / id = H1x2_ act=SOFTMAX;
1127529    connect interval H1x2_;
MPRINT(EM_DIAGRAM):   connect interval H1x2_;
1127530    connect nominal H1x2_;
MPRINT(EM_DIAGRAM):   connect nominal H1x2_;
1127531    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1127532    * Layer #2;
MPRINT(EM_DIAGRAM):   * Layer #2;
1127533    ;
MPRINT(EM_DIAGRAM):   ;
1127534    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1127535    Hidden 4 / id = H2x1_ act=SINE;
MPRINT(EM_DIAGRAM):   Hidden 4 / id = H2x1_ act=SINE;
1127536    connect H1x1_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x1_ H2x1_;
1127537    connect H1x2_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x2_ H2x1_;
1127538    connect H2x1_ DepVar;
MPRINT(EM_DIAGRAM):   connect H2x1_ DepVar;
1127539    *;
MPRINT(EM_DIAGRAM):   *;
1127540    netoptions ranscale = 1;
MPRINT(EM_DIAGRAM):   netoptions ranscale = 1;
1127541    *;
MPRINT(EM_DIAGRAM):   *;
1127542    initial
1127543    inest = EMWS8.AutoNeural26_ESTDS bylabel;
MPRINT(EM_DIAGRAM):   initial inest = EMWS8.AutoNeural26_ESTDS bylabel;
NOTE: The data set EMWS8.AUTONEURAL26_ESTDS has 1 observations and 535
      variables.
1127544    ;
MPRINT(EM_DIAGRAM):   ;
1127545    *;
MPRINT(EM_DIAGRAM):   *;
1127546    title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
1127547    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_prelim_title  ,NOQUOTE,
1127547  ! Search # 3 FUNNEL LAYERS trial # 2 : SINE : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 3 FUNNEL LAYERS trial # 2 : SINE :
Prelim";
1127548    prelim 20 outest=_anpre pretime=42 preiter=25
MPRINT(EM_DIAGRAM):   prelim 20 outest=_anpre pretime=42 preiter=25 tech =
Default inest = EMWS8.AutoNeural26_ESTDS bylabel ;
NOTE:  Synchronizing the objectives and the Solution.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANPRE has 41 observations and 958 variables.
NOTE: The data set EMWS8.AUTONEURAL26_ESTDS has 1 observations and 535
      variables.
MPRINT(EM_DIAGRAM):   *;
1127549    tech = Default
1127550    inest = EMWS8.AutoNeural26_ESTDS bylabel
1127551    ;
1127552    *;
1127553    title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
1127554    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_train_title  ,NOQUOTE,
1127554  ! Search # 3 FUNNEL LAYERS trial # 2 : SINE : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 3 FUNNEL LAYERS trial # 2 : SINE :
Training";
MPRINT(EM_DIAGRAM):   train estiter=1 outest=_anest outfit=_anfit maxtime=853
maxiter=50 tech = Default;
WARNING: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 50 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANEST has 53 observations and 958 variables.
NOTE: The data set WORK._ANFIT has 104 observations and 36 variables.
MPRINT(EM_DIAGRAM):   ;
1127555    train estiter=1 outest=_anest outfit=_anfit maxtime=853 maxiter=50
MPRINT(EM_DIAGRAM):   run;
1127556    tech = Default;
1127557    ;
1127558    run;
 
NOTE: The data set WORK.EM_AUTONEURAL26 has 2374 observations and 19 variables.
NOTE: The data set EMWS8.BINNING_VALIDATE has . observations and 62 variables.
NOTE: View EMWS8.BINNING_VALIDATE.VIEW used (Total process time):
      real time           38.06 seconds
      cpu time            37.68 seconds
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: Closing the Neural Application.
NOTE: The PROCEDURE NEURAL printed page 866.
NOTE: PROCEDURE NEURAL used (Total process time):
      real time           38.06 seconds
      cpu time            37.68 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
1127559    *;
1127560    proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
MPRINT(EM_DIAGRAM):   proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
1127561    var _iter_ _aic_ _averr_ _misc_
1127562    _vaverr_ _vmisc_
1127563    ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
1127564    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _name_='OVERALL';
NOTE: The PROCEDURE PRINT printed page 867.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Extract best iteration;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1127565    *------------------------------------------------------------*;
1127566    * Extract best iteration;
1127567    ;
1127568    *------------------------------------------------------------*;
1127569    %global _iter;
1127570    data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
1127571    set _anfit(where=(_NAME_ eq 'OVERALL'));
MPRINT(EM_DIAGRAM):   set _anfit(where=(_NAME_ eq 'OVERALL'));
1127572    retain _min 1e+64;
MPRINT(EM_DIAGRAM):   retain _min 1e+64;
1127573    if _VMISC_ < _min then do;
MPRINT(EM_DIAGRAM):   if _VMISC_ < _min then do;
1127574    _min = _VMISC_;
MPRINT(EM_DIAGRAM):   _min = _VMISC_;
1127575    call symput('_iter',put(_ITER_, 6.));
MPRINT(EM_DIAGRAM):   call symput('_iter',put(_ITER_, 6.));
1127576    end;
MPRINT(EM_DIAGRAM):   end;
1127577    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _NAME_='OVERALL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
1127578    *;
 
1127579    data EMWS8.AutoNeural26_ESTDS;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural26_ESTDS;
1127580    set _anest;
MPRINT(EM_DIAGRAM):   set _anest;
1127581    if _ITER_ eq 1 then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 1 then do;
1127582    output;
MPRINT(EM_DIAGRAM):   output;
1127583    stop;
MPRINT(EM_DIAGRAM):   stop;
1127584    end;
MPRINT(EM_DIAGRAM):   end;
1127585    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set WORK._ANEST.
NOTE: The data set EMWS8.AUTONEURAL26_ESTDS has 1 observations and 958
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
1127586    *;
1127587    data EMWS8.AutoNeural26_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural26_OUTFIT;
1127588    set _anfit;
MPRINT(EM_DIAGRAM):   set _anfit;
1127589    if _ITER_ eq 1 and _NAME_ eq "OVERALL" then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 1 and _NAME_ eq "OVERALL" then do;
1127590    output;
MPRINT(EM_DIAGRAM):   output;
1127591    stop;
MPRINT(EM_DIAGRAM):   stop;
1127592    end;
MPRINT(EM_DIAGRAM):   end;
1127593    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._ANFIT.
NOTE: The data set EMWS8.AUTONEURAL26_OUTFIT has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1127594    *;
MPRINT(EM_DIAGRAM):    *;
1127595    title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
1127596    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_selectediteration_title
1127596  ! , NOQUOTE, _VMISC_))";
MPRINT(EM_DIAGRAM):   title10 "Selected Iteration based on _VMISC_";
1127597    proc print data=EMWS8.AutoNeural26_OUTFIT noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural26_OUTFIT noobs;
1127598    var _iter_ _aic_ _averr_ _misc_
1127599    _vaverr_ _vmisc_
1127600    ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
1127601    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL26_OUTFIT.
NOTE: The PROCEDURE PRINT printed page 868.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1127602    title9;
MPRINT(EM_DIAGRAM):   title9;
1127603    title10;
MPRINT(EM_DIAGRAM):   title10;
1127604    data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
1127605    set EMWS8.AutoNeural26_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural26_OUTFIT;
1127606    if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
1127607    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL26_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1127608    data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
1127609    set EMWS8.AutoNeural26_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural26_OUTFIT;
1127610    if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
1127611    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL26_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1127612    * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
1127613    ;
MPRINT(EM_DIAGRAM):   ;
1127614    data EMWS8.AutoNeural26_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural26_OUTFIT;
1127615    set EMWS8.AutoNeural26_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural26_OUTFIT;
1127616    length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
1127617    _func_ = "SINE";
MPRINT(EM_DIAGRAM):   _func_ = "SINE";
1127618    _status_ = "reject";
MPRINT(EM_DIAGRAM):   _status_ = "reject";
1127619    _step_ = "FUNNEL LAYERS 3";
MPRINT(EM_DIAGRAM):   _step_ = "FUNNEL LAYERS 3";
1127620    _index_ = 3;
MPRINT(EM_DIAGRAM):   _index_ = 3;
1127621    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL26_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL26_OUTFIT has 1 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1127622    data EMWS8.AutoNeural26_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural26_HISTORY;
1127623    set EMWS8.AutoNeural26_HISTORY EMWS8.AutoNeural26_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural26_HISTORY EMWS8.AutoNeural26_OUTFIT;
1127624    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 11 observations read from the data set
      EMWS8.AUTONEURAL26_HISTORY.
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL26_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL26_HISTORY has 12 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1127625    * SEARCH: recall starting estimates;
MPRINT(EM_DIAGRAM):    * SEARCH: recall starting estimates;
1127626    ;
MPRINT(EM_DIAGRAM):   ;
1127627    data EMWS8.AutoNeural26_ESTDS;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural26_ESTDS;
1127628    set EMWS8.AutoNeural26_BESTDS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural26_BESTDS;
1127629    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL26_BESTDS.
NOTE: The data set EMWS8.AUTONEURAL26_ESTDS has 1 observations and 535
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1127630    *;
MPRINT(EM_DIAGRAM):    *;
1127631    proc neural data=EM_AutoNeural26 dmdbcat=WORK.AutoNeural26_DMDB
1127632    validdata=EMWS8.BINNING_VALIDATE
1127633    ;
MPRINT(EM_DIAGRAM):   proc neural data=EM_AutoNeural26
dmdbcat=WORK.AutoNeural26_DMDB validdata=EMWS8.BINNING_VALIDATE ;
1127634    *;
MPRINT(EM_DIAGRAM):   *;
1127635    nloptions noprint;
MPRINT(EM_DIAGRAM):   nloptions noprint;
1127636    performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   input
1127637    input %INTINPUTS / level=interval id=interval;
MPRINT(INTINPUTS):   Year_Birth
MPRINT(EM_DIAGRAM):   / level=interval id=interval;
MPRINT(EM_DIAGRAM):   input
1127638    input %NOMINPUTS / level=nominal id=nominal;
MPRINT(NOMINPUTS):   GRP_AcceptedCmp5 GRP_AcceptedCmpTotal GRP_Frq GRP_Income
GRP_Mnt GRP_MntFishProducts GRP_MntGoldProds GRP_MntMeatProducts
GRP_MntSweetProducts GRP_MntWines GRP_NumCatalogPurchases GRP_NumDistPurchases
GRP_NumWebPurchases GRP_NumWebVisitsMonth GRP_RFMstat GRP_RMntFrq GRP_Recency
MPRINT(EM_DIAGRAM):   / level=nominal id=nominal;
1127639    target DepVar / level=NOMINAL id=DepVar
1127640    ;
MPRINT(EM_DIAGRAM):   target DepVar / level=NOMINAL id=DepVar ;
1127641    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1127642    * Direct connection;
MPRINT(EM_DIAGRAM):   * Direct connection;
1127643    ;
MPRINT(EM_DIAGRAM):   ;
1127644    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1127645    connect interval DepVar;
MPRINT(EM_DIAGRAM):   connect interval DepVar;
1127646    connect nominal DepVar;
MPRINT(EM_DIAGRAM):   connect nominal DepVar;
1127647    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1127648    * Layer #1;
MPRINT(EM_DIAGRAM):   * Layer #1;
1127649    ;
MPRINT(EM_DIAGRAM):   ;
1127650    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1127651    Hidden 4 / id = H1x1_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 4 / id = H1x1_ act=SOFTMAX;
1127652    connect interval H1x1_;
MPRINT(EM_DIAGRAM):   connect interval H1x1_;
1127653    connect nominal H1x1_;
MPRINT(EM_DIAGRAM):   connect nominal H1x1_;
1127654    Hidden 4 / id = H1x2_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 4 / id = H1x2_ act=SOFTMAX;
1127655    connect interval H1x2_;
MPRINT(EM_DIAGRAM):   connect interval H1x2_;
1127656    connect nominal H1x2_;
MPRINT(EM_DIAGRAM):   connect nominal H1x2_;
1127657    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1127658    * Layer #2;
MPRINT(EM_DIAGRAM):   * Layer #2;
1127659    ;
MPRINT(EM_DIAGRAM):   ;
1127660    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1127661    Hidden 4 / id = H2x1_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 4 / id = H2x1_ act=SOFTMAX;
1127662    connect H1x1_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x1_ H2x1_;
1127663    connect H1x2_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x2_ H2x1_;
1127664    connect H2x1_ DepVar;
MPRINT(EM_DIAGRAM):   connect H2x1_ DepVar;
1127665    *;
MPRINT(EM_DIAGRAM):   *;
1127666    netoptions ranscale = 1;
MPRINT(EM_DIAGRAM):   netoptions ranscale = 1;
1127667    *;
MPRINT(EM_DIAGRAM):   *;
1127668    initial
1127669    inest = EMWS8.AutoNeural26_ESTDS bylabel;
MPRINT(EM_DIAGRAM):   initial inest = EMWS8.AutoNeural26_ESTDS bylabel;
NOTE: The data set EMWS8.AUTONEURAL26_ESTDS has 1 observations and 535
      variables.
1127670    ;
MPRINT(EM_DIAGRAM):   ;
1127671    *;
MPRINT(EM_DIAGRAM):   *;
1127672    title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
1127673    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_prelim_title  ,NOQUOTE,
1127673  ! Search # 3 FUNNEL LAYERS trial # 3 : SOFTMAX : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 3 FUNNEL LAYERS trial # 3 : SOFTMAX :
Prelim";
1127674    prelim 20 outest=_anpre pretime=42 preiter=25
MPRINT(EM_DIAGRAM):   prelim 20 outest=_anpre pretime=42 preiter=25 tech =
Default inest = EMWS8.AutoNeural26_ESTDS bylabel ;
NOTE:  Synchronizing the objectives and the Solution.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANPRE has 41 observations and 949 variables.
NOTE: The data set EMWS8.AUTONEURAL26_ESTDS has 1 observations and 535
      variables.
MPRINT(EM_DIAGRAM):   *;
1127675    tech = Default
1127676    inest = EMWS8.AutoNeural26_ESTDS bylabel
1127677    ;
1127678    *;
1127679    title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
1127680    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_train_title  ,NOQUOTE,
1127680  ! Search # 3 FUNNEL LAYERS trial # 3 : SOFTMAX : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 3 FUNNEL LAYERS trial # 3 : SOFTMAX :
Training";
MPRINT(EM_DIAGRAM):   train estiter=1 outest=_anest outfit=_anfit maxtime=844
maxiter=50 tech = Default;
WARNING: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 50 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANEST has 53 observations and 949 variables.
NOTE: The data set WORK._ANFIT has 104 observations and 36 variables.
MPRINT(EM_DIAGRAM):   ;
1127681    train estiter=1 outest=_anest outfit=_anfit maxtime=844 maxiter=50
MPRINT(EM_DIAGRAM):   run;
1127682    tech = Default;
1127683    ;
1127684    run;
 
NOTE: The data set WORK.EM_AUTONEURAL26 has 2374 observations and 19 variables.
NOTE: The data set EMWS8.BINNING_VALIDATE has . observations and 62 variables.
NOTE: View EMWS8.BINNING_VALIDATE.VIEW used (Total process time):
      real time           44.36 seconds
      cpu time            43.05 seconds
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: Closing the Neural Application.
NOTE: The PROCEDURE NEURAL printed page 869.
NOTE: PROCEDURE NEURAL used (Total process time):
      real time           44.37 seconds
      cpu time            43.05 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
1127685    *;
1127686    proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
MPRINT(EM_DIAGRAM):   proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
1127687    var _iter_ _aic_ _averr_ _misc_
1127688    _vaverr_ _vmisc_
1127689    ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
1127690    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _name_='OVERALL';
NOTE: The PROCEDURE PRINT printed page 870.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Extract best iteration;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1127691    *------------------------------------------------------------*;
1127692    * Extract best iteration;
1127693    ;
1127694    *------------------------------------------------------------*;
1127695    %global _iter;
1127696    data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
1127697    set _anfit(where=(_NAME_ eq 'OVERALL'));
MPRINT(EM_DIAGRAM):   set _anfit(where=(_NAME_ eq 'OVERALL'));
1127698    retain _min 1e+64;
MPRINT(EM_DIAGRAM):   retain _min 1e+64;
1127699    if _VMISC_ < _min then do;
MPRINT(EM_DIAGRAM):   if _VMISC_ < _min then do;
1127700    _min = _VMISC_;
MPRINT(EM_DIAGRAM):   _min = _VMISC_;
1127701    call symput('_iter',put(_ITER_, 6.));
MPRINT(EM_DIAGRAM):   call symput('_iter',put(_ITER_, 6.));
1127702    end;
MPRINT(EM_DIAGRAM):   end;
1127703    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _NAME_='OVERALL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
1127704    *;
 
1127705    data EMWS8.AutoNeural26_ESTDS;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural26_ESTDS;
1127706    set _anest;
MPRINT(EM_DIAGRAM):   set _anest;
1127707    if _ITER_ eq 14 then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 14 then do;
1127708    output;
MPRINT(EM_DIAGRAM):   output;
1127709    stop;
MPRINT(EM_DIAGRAM):   stop;
1127710    end;
MPRINT(EM_DIAGRAM):   end;
1127711    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 15 observations read from the data set WORK._ANEST.
NOTE: The data set EMWS8.AUTONEURAL26_ESTDS has 1 observations and 949
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
1127712    *;
1127713    data EMWS8.AutoNeural26_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural26_OUTFIT;
1127714    set _anfit;
MPRINT(EM_DIAGRAM):   set _anfit;
1127715    if _ITER_ eq 14 and _NAME_ eq "OVERALL" then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 14 and _NAME_ eq "OVERALL" then do;
1127716    output;
MPRINT(EM_DIAGRAM):   output;
1127717    stop;
MPRINT(EM_DIAGRAM):   stop;
1127718    end;
MPRINT(EM_DIAGRAM):   end;
1127719    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 30 observations read from the data set WORK._ANFIT.
NOTE: The data set EMWS8.AUTONEURAL26_OUTFIT has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1127720    *;
MPRINT(EM_DIAGRAM):    *;
1127721    title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
1127722    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_selectediteration_title
1127722  ! , NOQUOTE, _VMISC_))";
MPRINT(EM_DIAGRAM):   title10 "Selected Iteration based on _VMISC_";
1127723    proc print data=EMWS8.AutoNeural26_OUTFIT noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural26_OUTFIT noobs;
1127724    var _iter_ _aic_ _averr_ _misc_
1127725    _vaverr_ _vmisc_
1127726    ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
1127727    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL26_OUTFIT.
NOTE: The PROCEDURE PRINT printed page 871.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1127728    title9;
MPRINT(EM_DIAGRAM):   title9;
1127729    title10;
MPRINT(EM_DIAGRAM):   title10;
1127730    data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
1127731    set EMWS8.AutoNeural26_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural26_OUTFIT;
1127732    if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
1127733    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL26_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1127734    data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
1127735    set EMWS8.AutoNeural26_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural26_OUTFIT;
1127736    if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
1127737    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL26_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1127738    *SEARCH: copy estimates and fit to best buffer;
MPRINT(EM_DIAGRAM):    *SEARCH: copy estimates and fit to best buffer;
1127739    ;
MPRINT(EM_DIAGRAM):   ;
1127740    data WORK.SAVEDS_AUTONEUR_17P412E;
MPRINT(EM_DIAGRAM):   data WORK.SAVEDS_AUTONEUR_17P412E;
1127741    set EMWS8.AutoNeural26_ESTDS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural26_ESTDS;
1127742    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.AUTONEURAL26_ESTDS.
NOTE: The data set WORK.SAVEDS_AUTONEUR_17P412E has 1 observations and 949
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1127743    data EMWS8.AutoNeural26_BESTDS;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural26_BESTDS;
1127744    set EMWS8.AutoNeural26_ESTDS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural26_ESTDS;
1127745    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.AUTONEURAL26_ESTDS.
NOTE: The data set EMWS8.AUTONEURAL26_BESTDS has 1 observations and 949
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1127746    data WORK.BFITDS_AUTONEUR_17P412E;
MPRINT(EM_DIAGRAM):   data WORK.BFITDS_AUTONEUR_17P412E;
1127747    set EMWS8.AutoNeural26_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural26_OUTFIT;
1127748    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL26_OUTFIT.
NOTE: The data set WORK.BFITDS_AUTONEUR_17P412E has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1127749    * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
1127750    ;
MPRINT(EM_DIAGRAM):   ;
1127751    data EMWS8.AutoNeural26_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural26_OUTFIT;
1127752    set EMWS8.AutoNeural26_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural26_OUTFIT;
1127753    length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
1127754    _func_ = "SOFTMAX";
MPRINT(EM_DIAGRAM):   _func_ = "SOFTMAX";
1127755    _status_ = "candidate";
MPRINT(EM_DIAGRAM):   _status_ = "candidate";
1127756    _step_ = "FUNNEL LAYERS 3";
MPRINT(EM_DIAGRAM):   _step_ = "FUNNEL LAYERS 3";
1127757    _index_ = 3;
MPRINT(EM_DIAGRAM):   _index_ = 3;
1127758    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL26_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL26_OUTFIT has 1 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1127759    data EMWS8.AutoNeural26_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural26_HISTORY;
1127760    set EMWS8.AutoNeural26_HISTORY EMWS8.AutoNeural26_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural26_HISTORY EMWS8.AutoNeural26_OUTFIT;
1127761    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 12 observations read from the data set
      EMWS8.AUTONEURAL26_HISTORY.
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL26_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL26_HISTORY has 13 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1127762    *SEARCH: recall best estimates and fit;
MPRINT(EM_DIAGRAM):    *SEARCH: recall best estimates and fit;
1127763    ;
MPRINT(EM_DIAGRAM):   ;
1127764    data EMWS8.AutoNeural26_ESTDS;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural26_ESTDS;
1127765    set EMWS8.AutoNeural26_BESTDS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural26_BESTDS;
1127766    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL26_BESTDS.
NOTE: The data set EMWS8.AUTONEURAL26_ESTDS has 1 observations and 949
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1127767    data EMWS8.AutoNeural26_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural26_OUTFIT;
1127768    set WORK.BFITDS_AUTONEUR_17P412E;
MPRINT(EM_DIAGRAM):   set WORK.BFITDS_AUTONEUR_17P412E;
1127769    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      WORK.BFITDS_AUTONEUR_17P412E.
NOTE: The data set EMWS8.AUTONEURAL26_OUTFIT has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1127770    * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
1127771    ;
MPRINT(EM_DIAGRAM):   ;
1127772    data EMWS8.AutoNeural26_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural26_OUTFIT;
1127773    set EMWS8.AutoNeural26_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural26_OUTFIT;
1127774    length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
1127775    _func_ = "SOFTMAX";
MPRINT(EM_DIAGRAM):   _func_ = "SOFTMAX";
1127776    _status_ = "keep";
MPRINT(EM_DIAGRAM):   _status_ = "keep";
1127777    _step_ = "FUNNEL LAYERS 3";
MPRINT(EM_DIAGRAM):   _step_ = "FUNNEL LAYERS 3";
1127778    _index_ = 3;
MPRINT(EM_DIAGRAM):   _index_ = 3;
1127779    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL26_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL26_OUTFIT has 1 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1127780    data EMWS8.AutoNeural26_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural26_HISTORY;
1127781    set EMWS8.AutoNeural26_HISTORY EMWS8.AutoNeural26_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural26_HISTORY EMWS8.AutoNeural26_OUTFIT;
1127782    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 13 observations read from the data set
      EMWS8.AUTONEURAL26_HISTORY.
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL26_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL26_HISTORY has 14 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1127783    data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
1127784    set EMWS8.AutoNeural26_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural26_OUTFIT;
1127785    if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
1127786    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL26_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 40 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1127787    *;
MPRINT(EM_DIAGRAM):    *;
1127788    proc neural data=EM_AutoNeural26 dmdbcat=WORK.AutoNeural26_DMDB
1127789    validdata=EMWS8.BINNING_VALIDATE
1127790    ;
MPRINT(EM_DIAGRAM):   proc neural data=EM_AutoNeural26
dmdbcat=WORK.AutoNeural26_DMDB validdata=EMWS8.BINNING_VALIDATE ;
1127791    *;
MPRINT(EM_DIAGRAM):   *;
1127792    nloptions noprint;
MPRINT(EM_DIAGRAM):   nloptions noprint;
1127793    performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   input
1127794    input %INTINPUTS / level=interval id=interval;
MPRINT(INTINPUTS):   Year_Birth
MPRINT(EM_DIAGRAM):   / level=interval id=interval;
MPRINT(EM_DIAGRAM):   input
1127795    input %NOMINPUTS / level=nominal id=nominal;
MPRINT(NOMINPUTS):   GRP_AcceptedCmp5 GRP_AcceptedCmpTotal GRP_Frq GRP_Income
GRP_Mnt GRP_MntFishProducts GRP_MntGoldProds GRP_MntMeatProducts
GRP_MntSweetProducts GRP_MntWines GRP_NumCatalogPurchases GRP_NumDistPurchases
GRP_NumWebPurchases GRP_NumWebVisitsMonth GRP_RFMstat GRP_RMntFrq GRP_Recency
MPRINT(EM_DIAGRAM):   / level=nominal id=nominal;
1127796    target DepVar / level=NOMINAL id=DepVar
1127797    ;
MPRINT(EM_DIAGRAM):   target DepVar / level=NOMINAL id=DepVar ;
1127798    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1127799    * Direct connection;
MPRINT(EM_DIAGRAM):   * Direct connection;
1127800    ;
MPRINT(EM_DIAGRAM):   ;
1127801    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1127802    connect interval DepVar;
MPRINT(EM_DIAGRAM):   connect interval DepVar;
1127803    connect nominal DepVar;
MPRINT(EM_DIAGRAM):   connect nominal DepVar;
1127804    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1127805    * Layer #1;
MPRINT(EM_DIAGRAM):   * Layer #1;
1127806    ;
MPRINT(EM_DIAGRAM):   ;
1127807    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1127808    Hidden 4 / id = H1x1_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 4 / id = H1x1_ act=SOFTMAX;
1127809    connect interval H1x1_;
MPRINT(EM_DIAGRAM):   connect interval H1x1_;
1127810    connect nominal H1x1_;
MPRINT(EM_DIAGRAM):   connect nominal H1x1_;
1127811    Hidden 4 / id = H1x2_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 4 / id = H1x2_ act=SOFTMAX;
1127812    connect interval H1x2_;
MPRINT(EM_DIAGRAM):   connect interval H1x2_;
1127813    connect nominal H1x2_;
MPRINT(EM_DIAGRAM):   connect nominal H1x2_;
1127814    Hidden 4 / id = H1x3_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 4 / id = H1x3_ act=SOFTMAX;
1127815    connect interval H1x3_;
MPRINT(EM_DIAGRAM):   connect interval H1x3_;
1127816    connect nominal H1x3_;
MPRINT(EM_DIAGRAM):   connect nominal H1x3_;
1127817    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1127818    * Layer #2;
MPRINT(EM_DIAGRAM):   * Layer #2;
1127819    ;
MPRINT(EM_DIAGRAM):   ;
1127820    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1127821    Hidden 4 / id = H2x1_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 4 / id = H2x1_ act=SOFTMAX;
1127822    connect H1x1_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x1_ H2x1_;
1127823    connect H1x2_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x2_ H2x1_;
1127824    connect H1x3_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x3_ H2x1_;
1127825    Hidden 4 / id = H2x2_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 4 / id = H2x2_ act=SOFTMAX;
1127826    connect H1x1_ H2x2_;
MPRINT(EM_DIAGRAM):   connect H1x1_ H2x2_;
1127827    connect H1x2_ H2x2_;
MPRINT(EM_DIAGRAM):   connect H1x2_ H2x2_;
1127828    connect H1x3_ H2x2_;
MPRINT(EM_DIAGRAM):   connect H1x3_ H2x2_;
1127829    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1127830    * Layer #3;
MPRINT(EM_DIAGRAM):   * Layer #3;
1127831    ;
MPRINT(EM_DIAGRAM):   ;
1127832    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1127833    Hidden 4 / id = H3x1_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 4 / id = H3x1_ act=LOG;
1127834    connect H2x1_ H3x1_;
MPRINT(EM_DIAGRAM):   connect H2x1_ H3x1_;
1127835    connect H2x2_ H3x1_;
MPRINT(EM_DIAGRAM):   connect H2x2_ H3x1_;
1127836    connect H3x1_ DepVar;
MPRINT(EM_DIAGRAM):   connect H3x1_ DepVar;
1127837    *;
MPRINT(EM_DIAGRAM):   *;
1127838    netoptions ranscale = 1;
MPRINT(EM_DIAGRAM):   netoptions ranscale = 1;
1127839    *;
MPRINT(EM_DIAGRAM):   *;
1127840    initial
1127841    inest = EMWS8.AutoNeural26_ESTDS bylabel;
MPRINT(EM_DIAGRAM):   initial inest = EMWS8.AutoNeural26_ESTDS bylabel;
NOTE: The data set EMWS8.AUTONEURAL26_ESTDS has 1 observations and 949
      variables.
1127842    ;
MPRINT(EM_DIAGRAM):   ;
1127843    *;
MPRINT(EM_DIAGRAM):   *;
1127844    title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
1127845    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_prelim_title  ,NOQUOTE,
1127845  ! Search # 4 FUNNEL LAYERS trial # 1 : LOGISTIC : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 4 FUNNEL LAYERS trial # 1 : LOGISTIC :
Prelim";
1127846    prelim 24 outest=_anpre pretime=34 preiter=25
MPRINT(EM_DIAGRAM):   prelim 24 outest=_anpre pretime=34 preiter=25 tech =
Default inest = EMWS8.AutoNeural26_ESTDS bylabel ;
NOTE:  Synchronizing the objectives and the Solution.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANPRE has 49 observations and 1423 variables.
NOTE: The data set EMWS8.AUTONEURAL26_ESTDS has 1 observations and 949
      variables.
MPRINT(EM_DIAGRAM):   *;
1127847    tech = Default
1127848    inest = EMWS8.AutoNeural26_ESTDS bylabel
1127849    ;
1127850    *;
1127851    title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
1127852    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_train_title  ,NOQUOTE,
1127852  ! Search # 4 FUNNEL LAYERS trial # 1 : LOGISTIC : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 4 FUNNEL LAYERS trial # 1 : LOGISTIC :
Training";
MPRINT(EM_DIAGRAM):   train estiter=1 outest=_anest outfit=_anfit maxtime=832
maxiter=50 tech = Default;
WARNING: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 50 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANEST has 53 observations and 1423 variables.
NOTE: The data set WORK._ANFIT has 104 observations and 36 variables.
MPRINT(EM_DIAGRAM):   ;
1127853    train estiter=1 outest=_anest outfit=_anfit maxtime=832 maxiter=50
MPRINT(EM_DIAGRAM):   run;
1127854    tech = Default;
1127855    ;
1127856    run;
 
NOTE: The data set WORK.EM_AUTONEURAL26 has 2374 observations and 19 variables.
NOTE: The data set EMWS8.BINNING_VALIDATE has . observations and 62 variables.
NOTE: View EMWS8.BINNING_VALIDATE.VIEW used (Total process time):
      real time           1:04.46
      cpu time            1:03.21
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: Closing the Neural Application.
NOTE: The PROCEDURE NEURAL printed page 872.
NOTE: PROCEDURE NEURAL used (Total process time):
      real time           1:04.47
      cpu time            1:03.21
 
 
MPRINT(EM_DIAGRAM):   *;
1127857    *;
1127858    proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
MPRINT(EM_DIAGRAM):   proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
1127859    var _iter_ _aic_ _averr_ _misc_
1127860    _vaverr_ _vmisc_
1127861    ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
1127862    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _name_='OVERALL';
NOTE: The PROCEDURE PRINT printed page 873.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Extract best iteration;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1127863    *------------------------------------------------------------*;
1127864    * Extract best iteration;
1127865    ;
1127866    *------------------------------------------------------------*;
1127867    %global _iter;
1127868    data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
1127869    set _anfit(where=(_NAME_ eq 'OVERALL'));
MPRINT(EM_DIAGRAM):   set _anfit(where=(_NAME_ eq 'OVERALL'));
1127870    retain _min 1e+64;
MPRINT(EM_DIAGRAM):   retain _min 1e+64;
1127871    if _VMISC_ < _min then do;
MPRINT(EM_DIAGRAM):   if _VMISC_ < _min then do;
1127872    _min = _VMISC_;
MPRINT(EM_DIAGRAM):   _min = _VMISC_;
1127873    call symput('_iter',put(_ITER_, 6.));
MPRINT(EM_DIAGRAM):   call symput('_iter',put(_ITER_, 6.));
1127874    end;
MPRINT(EM_DIAGRAM):   end;
1127875    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _NAME_='OVERALL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
1127876    *;
 
1127877    data EMWS8.AutoNeural26_ESTDS;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural26_ESTDS;
1127878    set _anest;
MPRINT(EM_DIAGRAM):   set _anest;
1127879    if _ITER_ eq 16 then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 16 then do;
1127880    output;
MPRINT(EM_DIAGRAM):   output;
1127881    stop;
MPRINT(EM_DIAGRAM):   stop;
1127882    end;
MPRINT(EM_DIAGRAM):   end;
1127883    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 17 observations read from the data set WORK._ANEST.
NOTE: The data set EMWS8.AUTONEURAL26_ESTDS has 1 observations and 1423
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
1127884    *;
1127885    data EMWS8.AutoNeural26_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural26_OUTFIT;
1127886    set _anfit;
MPRINT(EM_DIAGRAM):   set _anfit;
1127887    if _ITER_ eq 16 and _NAME_ eq "OVERALL" then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 16 and _NAME_ eq "OVERALL" then do;
1127888    output;
MPRINT(EM_DIAGRAM):   output;
1127889    stop;
MPRINT(EM_DIAGRAM):   stop;
1127890    end;
MPRINT(EM_DIAGRAM):   end;
1127891    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._ANFIT.
NOTE: The data set EMWS8.AUTONEURAL26_OUTFIT has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1127892    *;
MPRINT(EM_DIAGRAM):    *;
1127893    title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
1127894    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_selectediteration_title
1127894  ! , NOQUOTE, _VMISC_))";
MPRINT(EM_DIAGRAM):   title10 "Selected Iteration based on _VMISC_";
1127895    proc print data=EMWS8.AutoNeural26_OUTFIT noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural26_OUTFIT noobs;
1127896    var _iter_ _aic_ _averr_ _misc_
1127897    _vaverr_ _vmisc_
1127898    ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
1127899    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL26_OUTFIT.
NOTE: The PROCEDURE PRINT printed page 874.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1127900    title9;
MPRINT(EM_DIAGRAM):   title9;
1127901    title10;
MPRINT(EM_DIAGRAM):   title10;
1127902    data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
1127903    set EMWS8.AutoNeural26_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural26_OUTFIT;
1127904    if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
1127905    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL26_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1127906    data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
1127907    set EMWS8.AutoNeural26_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural26_OUTFIT;
1127908    if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
1127909    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL26_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1127910    * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
1127911    ;
MPRINT(EM_DIAGRAM):   ;
1127912    data EMWS8.AutoNeural26_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural26_OUTFIT;
1127913    set EMWS8.AutoNeural26_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural26_OUTFIT;
1127914    length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
1127915    _func_ = "LOGISTIC";
MPRINT(EM_DIAGRAM):   _func_ = "LOGISTIC";
1127916    _status_ = "reject";
MPRINT(EM_DIAGRAM):   _status_ = "reject";
1127917    _step_ = "FUNNEL LAYERS 4";
MPRINT(EM_DIAGRAM):   _step_ = "FUNNEL LAYERS 4";
1127918    _index_ = 4;
MPRINT(EM_DIAGRAM):   _index_ = 4;
1127919    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL26_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL26_OUTFIT has 1 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1127920    data EMWS8.AutoNeural26_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural26_HISTORY;
1127921    set EMWS8.AutoNeural26_HISTORY EMWS8.AutoNeural26_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural26_HISTORY EMWS8.AutoNeural26_OUTFIT;
1127922    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 14 observations read from the data set
      EMWS8.AUTONEURAL26_HISTORY.
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL26_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL26_HISTORY has 15 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1127923    * SEARCH: recall starting estimates;
MPRINT(EM_DIAGRAM):    * SEARCH: recall starting estimates;
1127924    ;
MPRINT(EM_DIAGRAM):   ;
1127925    data EMWS8.AutoNeural26_ESTDS;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural26_ESTDS;
1127926    set EMWS8.AutoNeural26_BESTDS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural26_BESTDS;
1127927    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL26_BESTDS.
NOTE: The data set EMWS8.AUTONEURAL26_ESTDS has 1 observations and 949
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1127928    *;
MPRINT(EM_DIAGRAM):    *;
1127929    proc neural data=EM_AutoNeural26 dmdbcat=WORK.AutoNeural26_DMDB
1127930    validdata=EMWS8.BINNING_VALIDATE
1127931    ;
MPRINT(EM_DIAGRAM):   proc neural data=EM_AutoNeural26
dmdbcat=WORK.AutoNeural26_DMDB validdata=EMWS8.BINNING_VALIDATE ;
1127932    *;
MPRINT(EM_DIAGRAM):   *;
1127933    nloptions noprint;
MPRINT(EM_DIAGRAM):   nloptions noprint;
1127934    performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   input
1127935    input %INTINPUTS / level=interval id=interval;
MPRINT(INTINPUTS):   Year_Birth
MPRINT(EM_DIAGRAM):   / level=interval id=interval;
MPRINT(EM_DIAGRAM):   input
1127936    input %NOMINPUTS / level=nominal id=nominal;
MPRINT(NOMINPUTS):   GRP_AcceptedCmp5 GRP_AcceptedCmpTotal GRP_Frq GRP_Income
GRP_Mnt GRP_MntFishProducts GRP_MntGoldProds GRP_MntMeatProducts
GRP_MntSweetProducts GRP_MntWines GRP_NumCatalogPurchases GRP_NumDistPurchases
GRP_NumWebPurchases GRP_NumWebVisitsMonth GRP_RFMstat GRP_RMntFrq GRP_Recency
MPRINT(EM_DIAGRAM):   / level=nominal id=nominal;
1127937    target DepVar / level=NOMINAL id=DepVar
1127938    ;
MPRINT(EM_DIAGRAM):   target DepVar / level=NOMINAL id=DepVar ;
1127939    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1127940    * Direct connection;
MPRINT(EM_DIAGRAM):   * Direct connection;
1127941    ;
MPRINT(EM_DIAGRAM):   ;
1127942    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1127943    connect interval DepVar;
MPRINT(EM_DIAGRAM):   connect interval DepVar;
1127944    connect nominal DepVar;
MPRINT(EM_DIAGRAM):   connect nominal DepVar;
1127945    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1127946    * Layer #1;
MPRINT(EM_DIAGRAM):   * Layer #1;
1127947    ;
MPRINT(EM_DIAGRAM):   ;
1127948    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1127949    Hidden 4 / id = H1x1_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 4 / id = H1x1_ act=SOFTMAX;
1127950    connect interval H1x1_;
MPRINT(EM_DIAGRAM):   connect interval H1x1_;
1127951    connect nominal H1x1_;
MPRINT(EM_DIAGRAM):   connect nominal H1x1_;
1127952    Hidden 4 / id = H1x2_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 4 / id = H1x2_ act=SOFTMAX;
1127953    connect interval H1x2_;
MPRINT(EM_DIAGRAM):   connect interval H1x2_;
1127954    connect nominal H1x2_;
MPRINT(EM_DIAGRAM):   connect nominal H1x2_;
1127955    Hidden 4 / id = H1x3_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 4 / id = H1x3_ act=SOFTMAX;
1127956    connect interval H1x3_;
MPRINT(EM_DIAGRAM):   connect interval H1x3_;
1127957    connect nominal H1x3_;
MPRINT(EM_DIAGRAM):   connect nominal H1x3_;
1127958    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1127959    * Layer #2;
MPRINT(EM_DIAGRAM):   * Layer #2;
1127960    ;
MPRINT(EM_DIAGRAM):   ;
1127961    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1127962    Hidden 4 / id = H2x1_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 4 / id = H2x1_ act=SOFTMAX;
1127963    connect H1x1_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x1_ H2x1_;
1127964    connect H1x2_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x2_ H2x1_;
1127965    connect H1x3_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x3_ H2x1_;
1127966    Hidden 4 / id = H2x2_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 4 / id = H2x2_ act=SOFTMAX;
1127967    connect H1x1_ H2x2_;
MPRINT(EM_DIAGRAM):   connect H1x1_ H2x2_;
1127968    connect H1x2_ H2x2_;
MPRINT(EM_DIAGRAM):   connect H1x2_ H2x2_;
1127969    connect H1x3_ H2x2_;
MPRINT(EM_DIAGRAM):   connect H1x3_ H2x2_;
1127970    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1127971    * Layer #3;
MPRINT(EM_DIAGRAM):   * Layer #3;
1127972    ;
MPRINT(EM_DIAGRAM):   ;
1127973    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1127974    Hidden 4 / id = H3x1_ act=SINE;
MPRINT(EM_DIAGRAM):   Hidden 4 / id = H3x1_ act=SINE;
1127975    connect H2x1_ H3x1_;
MPRINT(EM_DIAGRAM):   connect H2x1_ H3x1_;
1127976    connect H2x2_ H3x1_;
MPRINT(EM_DIAGRAM):   connect H2x2_ H3x1_;
1127977    connect H3x1_ DepVar;
MPRINT(EM_DIAGRAM):   connect H3x1_ DepVar;
1127978    *;
MPRINT(EM_DIAGRAM):   *;
1127979    netoptions ranscale = 1;
MPRINT(EM_DIAGRAM):   netoptions ranscale = 1;
1127980    *;
MPRINT(EM_DIAGRAM):   *;
1127981    initial
1127982    inest = EMWS8.AutoNeural26_ESTDS bylabel;
MPRINT(EM_DIAGRAM):   initial inest = EMWS8.AutoNeural26_ESTDS bylabel;
NOTE: The data set EMWS8.AUTONEURAL26_ESTDS has 1 observations and 949
      variables.
1127983    ;
MPRINT(EM_DIAGRAM):   ;
1127984    *;
MPRINT(EM_DIAGRAM):   *;
1127985    title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
1127986    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_prelim_title  ,NOQUOTE,
1127986  ! Search # 4 FUNNEL LAYERS trial # 2 : SINE : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 4 FUNNEL LAYERS trial # 2 : SINE :
Prelim";
1127987    prelim 24 outest=_anpre pretime=34 preiter=25
MPRINT(EM_DIAGRAM):   prelim 24 outest=_anpre pretime=34 preiter=25 tech =
Default inest = EMWS8.AutoNeural26_ESTDS bylabel ;
NOTE:  Synchronizing the objectives and the Solution.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANPRE has 49 observations and 1423 variables.
NOTE: The data set EMWS8.AUTONEURAL26_ESTDS has 1 observations and 949
      variables.
MPRINT(EM_DIAGRAM):   *;
1127988    tech = Default
1127989    inest = EMWS8.AutoNeural26_ESTDS bylabel
1127990    ;
1127991    *;
1127992    title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
1127993    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_train_title  ,NOQUOTE,
1127993  ! Search # 4 FUNNEL LAYERS trial # 2 : SINE : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 4 FUNNEL LAYERS trial # 2 : SINE :
Training";
MPRINT(EM_DIAGRAM):   train estiter=1 outest=_anest outfit=_anfit maxtime=816
maxiter=50 tech = Default;
WARNING: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 50 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANEST has 53 observations and 1423 variables.
NOTE: The data set WORK._ANFIT has 104 observations and 36 variables.
MPRINT(EM_DIAGRAM):   ;
1127994    train estiter=1 outest=_anest outfit=_anfit maxtime=816 maxiter=50
MPRINT(EM_DIAGRAM):   run;
1127995    tech = Default;
1127996    ;
1127997    run;
 
NOTE: The data set WORK.EM_AUTONEURAL26 has 2374 observations and 19 variables.
NOTE: The data set EMWS8.BINNING_VALIDATE has . observations and 62 variables.
NOTE: View EMWS8.BINNING_VALIDATE.VIEW used (Total process time):
      real time           58.60 seconds
      cpu time            58.20 seconds
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: Closing the Neural Application.
NOTE: The PROCEDURE NEURAL printed page 875.
NOTE: PROCEDURE NEURAL used (Total process time):
      real time           58.60 seconds
      cpu time            58.20 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
1127998    *;
1127999    proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
MPRINT(EM_DIAGRAM):   proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
1128000    var _iter_ _aic_ _averr_ _misc_
1128001    _vaverr_ _vmisc_
1128002    ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
1128003    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _name_='OVERALL';
NOTE: The PROCEDURE PRINT printed page 876.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Extract best iteration;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1128004    *------------------------------------------------------------*;
1128005    * Extract best iteration;
1128006    ;
1128007    *------------------------------------------------------------*;
1128008    %global _iter;
1128009    data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
1128010    set _anfit(where=(_NAME_ eq 'OVERALL'));
MPRINT(EM_DIAGRAM):   set _anfit(where=(_NAME_ eq 'OVERALL'));
1128011    retain _min 1e+64;
MPRINT(EM_DIAGRAM):   retain _min 1e+64;
1128012    if _VMISC_ < _min then do;
MPRINT(EM_DIAGRAM):   if _VMISC_ < _min then do;
1128013    _min = _VMISC_;
MPRINT(EM_DIAGRAM):   _min = _VMISC_;
1128014    call symput('_iter',put(_ITER_, 6.));
MPRINT(EM_DIAGRAM):   call symput('_iter',put(_ITER_, 6.));
1128015    end;
MPRINT(EM_DIAGRAM):   end;
1128016    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _NAME_='OVERALL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
1128017    *;
 
1128018    data EMWS8.AutoNeural26_ESTDS;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural26_ESTDS;
1128019    set _anest;
MPRINT(EM_DIAGRAM):   set _anest;
1128020    if _ITER_ eq 6 then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 6 then do;
1128021    output;
MPRINT(EM_DIAGRAM):   output;
1128022    stop;
MPRINT(EM_DIAGRAM):   stop;
1128023    end;
MPRINT(EM_DIAGRAM):   end;
1128024    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 7 observations read from the data set WORK._ANEST.
NOTE: The data set EMWS8.AUTONEURAL26_ESTDS has 1 observations and 1423
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
1128025    *;
1128026    data EMWS8.AutoNeural26_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural26_OUTFIT;
1128027    set _anfit;
MPRINT(EM_DIAGRAM):   set _anfit;
1128028    if _ITER_ eq 6 and _NAME_ eq "OVERALL" then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 6 and _NAME_ eq "OVERALL" then do;
1128029    output;
MPRINT(EM_DIAGRAM):   output;
1128030    stop;
MPRINT(EM_DIAGRAM):   stop;
1128031    end;
MPRINT(EM_DIAGRAM):   end;
1128032    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 14 observations read from the data set WORK._ANFIT.
NOTE: The data set EMWS8.AUTONEURAL26_OUTFIT has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1128033    *;
MPRINT(EM_DIAGRAM):    *;
1128034    title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
1128035    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_selectediteration_title
1128035  ! , NOQUOTE, _VMISC_))";
MPRINT(EM_DIAGRAM):   title10 "Selected Iteration based on _VMISC_";
1128036    proc print data=EMWS8.AutoNeural26_OUTFIT noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural26_OUTFIT noobs;
1128037    var _iter_ _aic_ _averr_ _misc_
1128038    _vaverr_ _vmisc_
1128039    ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
1128040    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL26_OUTFIT.
NOTE: The PROCEDURE PRINT printed page 877.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1128041    title9;
MPRINT(EM_DIAGRAM):   title9;
1128042    title10;
MPRINT(EM_DIAGRAM):   title10;
1128043    data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
1128044    set EMWS8.AutoNeural26_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural26_OUTFIT;
1128045    if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
1128046    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL26_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1128047    data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
1128048    set EMWS8.AutoNeural26_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural26_OUTFIT;
1128049    if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
1128050    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL26_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1128051    * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
1128052    ;
MPRINT(EM_DIAGRAM):   ;
1128053    data EMWS8.AutoNeural26_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural26_OUTFIT;
1128054    set EMWS8.AutoNeural26_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural26_OUTFIT;
1128055    length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
1128056    _func_ = "SINE";
MPRINT(EM_DIAGRAM):   _func_ = "SINE";
1128057    _status_ = "reject";
MPRINT(EM_DIAGRAM):   _status_ = "reject";
1128058    _step_ = "FUNNEL LAYERS 4";
MPRINT(EM_DIAGRAM):   _step_ = "FUNNEL LAYERS 4";
1128059    _index_ = 4;
MPRINT(EM_DIAGRAM):   _index_ = 4;
1128060    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL26_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL26_OUTFIT has 1 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1128061    data EMWS8.AutoNeural26_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural26_HISTORY;
1128062    set EMWS8.AutoNeural26_HISTORY EMWS8.AutoNeural26_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural26_HISTORY EMWS8.AutoNeural26_OUTFIT;
1128063    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 15 observations read from the data set
      EMWS8.AUTONEURAL26_HISTORY.
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL26_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL26_HISTORY has 16 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1128064    * SEARCH: recall starting estimates;
MPRINT(EM_DIAGRAM):    * SEARCH: recall starting estimates;
1128065    ;
MPRINT(EM_DIAGRAM):   ;
1128066    data EMWS8.AutoNeural26_ESTDS;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural26_ESTDS;
1128067    set EMWS8.AutoNeural26_BESTDS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural26_BESTDS;
1128068    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL26_BESTDS.
NOTE: The data set EMWS8.AUTONEURAL26_ESTDS has 1 observations and 949
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1128069    *;
MPRINT(EM_DIAGRAM):    *;
1128070    proc neural data=EM_AutoNeural26 dmdbcat=WORK.AutoNeural26_DMDB
1128071    validdata=EMWS8.BINNING_VALIDATE
1128072    ;
MPRINT(EM_DIAGRAM):   proc neural data=EM_AutoNeural26
dmdbcat=WORK.AutoNeural26_DMDB validdata=EMWS8.BINNING_VALIDATE ;
1128073    *;
MPRINT(EM_DIAGRAM):   *;
1128074    nloptions noprint;
MPRINT(EM_DIAGRAM):   nloptions noprint;
1128075    performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   input
1128076    input %INTINPUTS / level=interval id=interval;
MPRINT(INTINPUTS):   Year_Birth
MPRINT(EM_DIAGRAM):   / level=interval id=interval;
MPRINT(EM_DIAGRAM):   input
1128077    input %NOMINPUTS / level=nominal id=nominal;
MPRINT(NOMINPUTS):   GRP_AcceptedCmp5 GRP_AcceptedCmpTotal GRP_Frq GRP_Income
GRP_Mnt GRP_MntFishProducts GRP_MntGoldProds GRP_MntMeatProducts
GRP_MntSweetProducts GRP_MntWines GRP_NumCatalogPurchases GRP_NumDistPurchases
GRP_NumWebPurchases GRP_NumWebVisitsMonth GRP_RFMstat GRP_RMntFrq GRP_Recency
MPRINT(EM_DIAGRAM):   / level=nominal id=nominal;
1128078    target DepVar / level=NOMINAL id=DepVar
1128079    ;
MPRINT(EM_DIAGRAM):   target DepVar / level=NOMINAL id=DepVar ;
1128080    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1128081    * Direct connection;
MPRINT(EM_DIAGRAM):   * Direct connection;
1128082    ;
MPRINT(EM_DIAGRAM):   ;
1128083    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1128084    connect interval DepVar;
MPRINT(EM_DIAGRAM):   connect interval DepVar;
1128085    connect nominal DepVar;
MPRINT(EM_DIAGRAM):   connect nominal DepVar;
1128086    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1128087    * Layer #1;
MPRINT(EM_DIAGRAM):   * Layer #1;
1128088    ;
MPRINT(EM_DIAGRAM):   ;
1128089    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1128090    Hidden 4 / id = H1x1_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 4 / id = H1x1_ act=SOFTMAX;
1128091    connect interval H1x1_;
MPRINT(EM_DIAGRAM):   connect interval H1x1_;
1128092    connect nominal H1x1_;
MPRINT(EM_DIAGRAM):   connect nominal H1x1_;
1128093    Hidden 4 / id = H1x2_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 4 / id = H1x2_ act=SOFTMAX;
1128094    connect interval H1x2_;
MPRINT(EM_DIAGRAM):   connect interval H1x2_;
1128095    connect nominal H1x2_;
MPRINT(EM_DIAGRAM):   connect nominal H1x2_;
1128096    Hidden 4 / id = H1x3_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 4 / id = H1x3_ act=SOFTMAX;
1128097    connect interval H1x3_;
MPRINT(EM_DIAGRAM):   connect interval H1x3_;
1128098    connect nominal H1x3_;
MPRINT(EM_DIAGRAM):   connect nominal H1x3_;
1128099    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1128100    * Layer #2;
MPRINT(EM_DIAGRAM):   * Layer #2;
1128101    ;
MPRINT(EM_DIAGRAM):   ;
1128102    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1128103    Hidden 4 / id = H2x1_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 4 / id = H2x1_ act=SOFTMAX;
1128104    connect H1x1_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x1_ H2x1_;
1128105    connect H1x2_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x2_ H2x1_;
1128106    connect H1x3_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x3_ H2x1_;
1128107    Hidden 4 / id = H2x2_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 4 / id = H2x2_ act=SOFTMAX;
1128108    connect H1x1_ H2x2_;
MPRINT(EM_DIAGRAM):   connect H1x1_ H2x2_;
1128109    connect H1x2_ H2x2_;
MPRINT(EM_DIAGRAM):   connect H1x2_ H2x2_;
1128110    connect H1x3_ H2x2_;
MPRINT(EM_DIAGRAM):   connect H1x3_ H2x2_;
1128111    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1128112    * Layer #3;
MPRINT(EM_DIAGRAM):   * Layer #3;
1128113    ;
MPRINT(EM_DIAGRAM):   ;
1128114    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1128115    Hidden 4 / id = H3x1_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 4 / id = H3x1_ act=SOFTMAX;
1128116    connect H2x1_ H3x1_;
MPRINT(EM_DIAGRAM):   connect H2x1_ H3x1_;
1128117    connect H2x2_ H3x1_;
MPRINT(EM_DIAGRAM):   connect H2x2_ H3x1_;
1128118    connect H3x1_ DepVar;
MPRINT(EM_DIAGRAM):   connect H3x1_ DepVar;
1128119    *;
MPRINT(EM_DIAGRAM):   *;
1128120    netoptions ranscale = 1;
MPRINT(EM_DIAGRAM):   netoptions ranscale = 1;
1128121    *;
MPRINT(EM_DIAGRAM):   *;
1128122    initial
1128123    inest = EMWS8.AutoNeural26_ESTDS bylabel;
MPRINT(EM_DIAGRAM):   initial inest = EMWS8.AutoNeural26_ESTDS bylabel;
NOTE: The data set EMWS8.AUTONEURAL26_ESTDS has 1 observations and 949
      variables.
1128124    ;
MPRINT(EM_DIAGRAM):   ;
1128125    *;
MPRINT(EM_DIAGRAM):   *;
1128126    title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
1128127    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_prelim_title  ,NOQUOTE,
1128127  ! Search # 4 FUNNEL LAYERS trial # 3 : SOFTMAX : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 4 FUNNEL LAYERS trial # 3 : SOFTMAX :
Prelim";
1128128    prelim 24 outest=_anpre pretime=33 preiter=25
MPRINT(EM_DIAGRAM):   prelim 24 outest=_anpre pretime=33 preiter=25 tech =
Default inest = EMWS8.AutoNeural26_ESTDS bylabel ;
NOTE:  Synchronizing the objectives and the Solution.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANPRE has 49 observations and 1414 variables.
NOTE: The data set EMWS8.AUTONEURAL26_ESTDS has 1 observations and 949
      variables.
MPRINT(EM_DIAGRAM):   *;
1128129    tech = Default
1128130    inest = EMWS8.AutoNeural26_ESTDS bylabel
1128131    ;
1128132    *;
1128133    title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
1128134    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_train_title  ,NOQUOTE,
1128134  ! Search # 4 FUNNEL LAYERS trial # 3 : SOFTMAX : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 4 FUNNEL LAYERS trial # 3 : SOFTMAX :
Training";
MPRINT(EM_DIAGRAM):   train estiter=1 outest=_anest outfit=_anfit maxtime=802
maxiter=50 tech = Default;
WARNING: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 50 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANEST has 53 observations and 1414 variables.
NOTE: The data set WORK._ANFIT has 104 observations and 36 variables.
MPRINT(EM_DIAGRAM):   ;
1128135    train estiter=1 outest=_anest outfit=_anfit maxtime=802 maxiter=50
MPRINT(EM_DIAGRAM):   run;
1128136    tech = Default;
1128137    ;
1128138    run;
 
NOTE: The data set WORK.EM_AUTONEURAL26 has 2374 observations and 19 variables.
NOTE: The data set EMWS8.BINNING_VALIDATE has . observations and 62 variables.
NOTE: View EMWS8.BINNING_VALIDATE.VIEW used (Total process time):
      real time           1:03.10
      cpu time            1:02.61
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: Closing the Neural Application.
NOTE: The PROCEDURE NEURAL printed page 878.
NOTE: PROCEDURE NEURAL used (Total process time):
      real time           1:03.11
      cpu time            1:02.61
 
 
MPRINT(EM_DIAGRAM):   *;
1128139    *;
1128140    proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
MPRINT(EM_DIAGRAM):   proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
1128141    var _iter_ _aic_ _averr_ _misc_
1128142    _vaverr_ _vmisc_
1128143    ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
1128144    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _name_='OVERALL';
NOTE: The PROCEDURE PRINT printed page 879.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Extract best iteration;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1128145    *------------------------------------------------------------*;
1128146    * Extract best iteration;
1128147    ;
1128148    *------------------------------------------------------------*;
1128149    %global _iter;
1128150    data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
1128151    set _anfit(where=(_NAME_ eq 'OVERALL'));
MPRINT(EM_DIAGRAM):   set _anfit(where=(_NAME_ eq 'OVERALL'));
1128152    retain _min 1e+64;
MPRINT(EM_DIAGRAM):   retain _min 1e+64;
1128153    if _VMISC_ < _min then do;
MPRINT(EM_DIAGRAM):   if _VMISC_ < _min then do;
1128154    _min = _VMISC_;
MPRINT(EM_DIAGRAM):   _min = _VMISC_;
1128155    call symput('_iter',put(_ITER_, 6.));
MPRINT(EM_DIAGRAM):   call symput('_iter',put(_ITER_, 6.));
1128156    end;
MPRINT(EM_DIAGRAM):   end;
1128157    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _NAME_='OVERALL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
1128158    *;
 
1128159    data EMWS8.AutoNeural26_ESTDS;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural26_ESTDS;
1128160    set _anest;
MPRINT(EM_DIAGRAM):   set _anest;
1128161    if _ITER_ eq 1 then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 1 then do;
1128162    output;
MPRINT(EM_DIAGRAM):   output;
1128163    stop;
MPRINT(EM_DIAGRAM):   stop;
1128164    end;
MPRINT(EM_DIAGRAM):   end;
1128165    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set WORK._ANEST.
NOTE: The data set EMWS8.AUTONEURAL26_ESTDS has 1 observations and 1414
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
1128166    *;
1128167    data EMWS8.AutoNeural26_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural26_OUTFIT;
1128168    set _anfit;
MPRINT(EM_DIAGRAM):   set _anfit;
1128169    if _ITER_ eq 1 and _NAME_ eq "OVERALL" then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 1 and _NAME_ eq "OVERALL" then do;
1128170    output;
MPRINT(EM_DIAGRAM):   output;
1128171    stop;
MPRINT(EM_DIAGRAM):   stop;
1128172    end;
MPRINT(EM_DIAGRAM):   end;
1128173    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._ANFIT.
NOTE: The data set EMWS8.AUTONEURAL26_OUTFIT has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1128174    *;
MPRINT(EM_DIAGRAM):    *;
1128175    title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
1128176    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_selectediteration_title
1128176  ! , NOQUOTE, _VMISC_))";
MPRINT(EM_DIAGRAM):   title10 "Selected Iteration based on _VMISC_";
1128177    proc print data=EMWS8.AutoNeural26_OUTFIT noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural26_OUTFIT noobs;
1128178    var _iter_ _aic_ _averr_ _misc_
1128179    _vaverr_ _vmisc_
1128180    ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
1128181    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL26_OUTFIT.
NOTE: The PROCEDURE PRINT printed page 880.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1128182    title9;
MPRINT(EM_DIAGRAM):   title9;
1128183    title10;
MPRINT(EM_DIAGRAM):   title10;
1128184    data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
1128185    set EMWS8.AutoNeural26_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural26_OUTFIT;
1128186    if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
1128187    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL26_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1128188    data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
1128189    set EMWS8.AutoNeural26_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural26_OUTFIT;
1128190    if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
1128191    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL26_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1128192    * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
1128193    ;
MPRINT(EM_DIAGRAM):   ;
1128194    data EMWS8.AutoNeural26_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural26_OUTFIT;
1128195    set EMWS8.AutoNeural26_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural26_OUTFIT;
1128196    length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
1128197    _func_ = "SOFTMAX";
MPRINT(EM_DIAGRAM):   _func_ = "SOFTMAX";
1128198    _status_ = "reject";
MPRINT(EM_DIAGRAM):   _status_ = "reject";
1128199    _step_ = "FUNNEL LAYERS 4";
MPRINT(EM_DIAGRAM):   _step_ = "FUNNEL LAYERS 4";
1128200    _index_ = 4;
MPRINT(EM_DIAGRAM):   _index_ = 4;
1128201    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL26_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL26_OUTFIT has 1 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1128202    data EMWS8.AutoNeural26_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural26_HISTORY;
1128203    set EMWS8.AutoNeural26_HISTORY EMWS8.AutoNeural26_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural26_HISTORY EMWS8.AutoNeural26_OUTFIT;
1128204    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 16 observations read from the data set
      EMWS8.AUTONEURAL26_HISTORY.
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL26_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL26_HISTORY has 17 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1128205    data EMWS8.AutoNeural26_ESTDS;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural26_ESTDS;
1128206    set WORK.SAVEDS_AUTONEUR_17P412E;
MPRINT(EM_DIAGRAM):   set WORK.SAVEDS_AUTONEUR_17P412E;
1128207    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      WORK.SAVEDS_AUTONEUR_17P412E.
NOTE: The data set EMWS8.AUTONEURAL26_ESTDS has 1 observations and 949
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1128208    *;
MPRINT(EM_DIAGRAM):    *;
1128209    proc neural data=EM_AutoNeural26 dmdbcat=WORK.AutoNeural26_DMDB
1128210    validdata=EMWS8.BINNING_VALIDATE
1128211    ;
MPRINT(EM_DIAGRAM):   proc neural data=EM_AutoNeural26
dmdbcat=WORK.AutoNeural26_DMDB validdata=EMWS8.BINNING_VALIDATE ;
1128212    *;
MPRINT(EM_DIAGRAM):   *;
1128213    nloptions noprint;
MPRINT(EM_DIAGRAM):   nloptions noprint;
1128214    performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   input
1128215    input %INTINPUTS / level=interval id=interval;
MPRINT(INTINPUTS):   Year_Birth
MPRINT(EM_DIAGRAM):   / level=interval id=interval;
MPRINT(EM_DIAGRAM):   input
1128216    input %NOMINPUTS / level=nominal id=nominal;
MPRINT(NOMINPUTS):   GRP_AcceptedCmp5 GRP_AcceptedCmpTotal GRP_Frq GRP_Income
GRP_Mnt GRP_MntFishProducts GRP_MntGoldProds GRP_MntMeatProducts
GRP_MntSweetProducts GRP_MntWines GRP_NumCatalogPurchases GRP_NumDistPurchases
GRP_NumWebPurchases GRP_NumWebVisitsMonth GRP_RFMstat GRP_RMntFrq GRP_Recency
MPRINT(EM_DIAGRAM):   / level=nominal id=nominal;
1128217    target DepVar / level=NOMINAL id=DepVar
1128218    ;
MPRINT(EM_DIAGRAM):   target DepVar / level=NOMINAL id=DepVar ;
1128219    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1128220    * Direct connection;
MPRINT(EM_DIAGRAM):   * Direct connection;
1128221    ;
MPRINT(EM_DIAGRAM):   ;
1128222    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1128223    connect interval DepVar;
MPRINT(EM_DIAGRAM):   connect interval DepVar;
1128224    connect nominal DepVar;
MPRINT(EM_DIAGRAM):   connect nominal DepVar;
1128225    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1128226    * Layer #1;
MPRINT(EM_DIAGRAM):   * Layer #1;
1128227    ;
MPRINT(EM_DIAGRAM):   ;
1128228    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1128229    Hidden 4 / id = H1x1_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 4 / id = H1x1_ act=SOFTMAX;
1128230    connect interval H1x1_;
MPRINT(EM_DIAGRAM):   connect interval H1x1_;
1128231    connect nominal H1x1_;
MPRINT(EM_DIAGRAM):   connect nominal H1x1_;
1128232    Hidden 4 / id = H1x2_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 4 / id = H1x2_ act=SOFTMAX;
1128233    connect interval H1x2_;
MPRINT(EM_DIAGRAM):   connect interval H1x2_;
1128234    connect nominal H1x2_;
MPRINT(EM_DIAGRAM):   connect nominal H1x2_;
1128235    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1128236    * Layer #2;
MPRINT(EM_DIAGRAM):   * Layer #2;
1128237    ;
MPRINT(EM_DIAGRAM):   ;
1128238    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1128239    Hidden 4 / id = H2x1_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 4 / id = H2x1_ act=SOFTMAX;
1128240    connect H1x1_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x1_ H2x1_;
1128241    connect H1x2_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x2_ H2x1_;
1128242    connect H2x1_ DepVar;
MPRINT(EM_DIAGRAM):   connect H2x1_ DepVar;
1128243    *;
MPRINT(EM_DIAGRAM):   *;
1128244    netoptions ranscale = 1;
MPRINT(EM_DIAGRAM):   netoptions ranscale = 1;
1128245    *;
MPRINT(EM_DIAGRAM):   *;
1128246    initial
1128247    inest = EMWS8.AutoNeural26_ESTDS bylabel;
MPRINT(EM_DIAGRAM):   initial inest = EMWS8.AutoNeural26_ESTDS bylabel;
NOTE: The data set EMWS8.AUTONEURAL26_ESTDS has 1 observations and 949
      variables.
1128248    ;
MPRINT(EM_DIAGRAM):   ;
1128249    *;
MPRINT(EM_DIAGRAM):   *;
1128250    title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
1128251    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_prelim_title  ,NOQUOTE,
1128251  ! Final Training))";
MPRINT(EM_DIAGRAM):   title10 "Final Training Prelim";
1128252    prelim 20 outest=_anpre pretime=39 preiter=25
MPRINT(EM_DIAGRAM):   prelim 20 outest=_anpre pretime=39 preiter=25 tech =
Default inest = EMWS8.AutoNeural26_ESTDS bylabel ;
NOTE:  Synchronizing the objectives and the Solution.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
The prelim will run only once. Use the randbias or randout option on the target
layer.
NOTE: The data set WORK._ANPRE has 3 observations and 949 variables.
NOTE: The data set EMWS8.AUTONEURAL26_ESTDS has 1 observations and 949
      variables.
MPRINT(EM_DIAGRAM):   *;
1128253    tech = Default
1128254    inest = EMWS8.AutoNeural26_ESTDS bylabel
1128255    ;
1128256    *;
1128257    title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
1128258    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_train_title  ,NOQUOTE,
1128258  ! Final Training))";
MPRINT(EM_DIAGRAM):   title10 "Final Training Training";
MPRINT(EM_DIAGRAM):   train estiter=1 outest=_anest outfit=_anfit maxtime=786
maxiter=5 tech = Default;
WARNING: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 5 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANEST has 8 observations and 949 variables.
NOTE: The data set WORK._ANFIT has 14 observations and 36 variables.
MPRINT(EM_DIAGRAM):   ;
1128259    train estiter=1 outest=_anest outfit=_anfit maxtime=786 maxiter=5
MPRINT(EM_DIAGRAM):   run;
1128260    tech = Default;
1128261    ;
1128262    run;
 
NOTE: The data set WORK.EM_AUTONEURAL26 has 2374 observations and 19 variables.
NOTE: The data set EMWS8.BINNING_VALIDATE has . observations and 62 variables.
NOTE: View EMWS8.BINNING_VALIDATE.VIEW used (Total process time):
      real time           2.65 seconds
      cpu time            2.65 seconds
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: Closing the Neural Application.
NOTE: The PROCEDURE NEURAL printed page 881.
NOTE: PROCEDURE NEURAL used (Total process time):
      real time           2.66 seconds
      cpu time            2.66 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
1128263    *;
1128264    proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
MPRINT(EM_DIAGRAM):   proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
1128265    var _iter_ _aic_ _averr_ _misc_
1128266    _vaverr_ _vmisc_
1128267    ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
1128268    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 7 observations read from the data set WORK._ANFIT.
      WHERE _name_='OVERALL';
NOTE: The PROCEDURE PRINT printed page 882.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Extract best iteration;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1128269    *------------------------------------------------------------*;
1128270    * Extract best iteration;
1128271    ;
1128272    *------------------------------------------------------------*;
1128273    %global _iter;
1128274    data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
1128275    set _anfit(where=(_NAME_ eq 'OVERALL'));
MPRINT(EM_DIAGRAM):   set _anfit(where=(_NAME_ eq 'OVERALL'));
1128276    retain _min 1e+64;
MPRINT(EM_DIAGRAM):   retain _min 1e+64;
1128277    if _VMISC_ < _min then do;
MPRINT(EM_DIAGRAM):   if _VMISC_ < _min then do;
1128278    _min = _VMISC_;
MPRINT(EM_DIAGRAM):   _min = _VMISC_;
1128279    call symput('_iter',put(_ITER_, 6.));
MPRINT(EM_DIAGRAM):   call symput('_iter',put(_ITER_, 6.));
1128280    end;
MPRINT(EM_DIAGRAM):   end;
1128281    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 7 observations read from the data set WORK._ANFIT.
      WHERE _NAME_='OVERALL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
1128282    *;
 
1128283    data EMWS8.AutoNeural26_ESTDS;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural26_ESTDS;
1128284    set _anest;
MPRINT(EM_DIAGRAM):   set _anest;
1128285    if _ITER_ eq 5 then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 5 then do;
1128286    output;
MPRINT(EM_DIAGRAM):   output;
1128287    stop;
MPRINT(EM_DIAGRAM):   stop;
1128288    end;
MPRINT(EM_DIAGRAM):   end;
1128289    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 6 observations read from the data set WORK._ANEST.
NOTE: The data set EMWS8.AUTONEURAL26_ESTDS has 1 observations and 949
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
1128290    *;
1128291    data EMWS8.AutoNeural26_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural26_OUTFIT;
1128292    set _anfit;
MPRINT(EM_DIAGRAM):   set _anfit;
1128293    if _ITER_ eq 5 and _NAME_ eq "OVERALL" then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 5 and _NAME_ eq "OVERALL" then do;
1128294    output;
MPRINT(EM_DIAGRAM):   output;
1128295    stop;
MPRINT(EM_DIAGRAM):   stop;
1128296    end;
MPRINT(EM_DIAGRAM):   end;
1128297    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 12 observations read from the data set WORK._ANFIT.
NOTE: The data set EMWS8.AUTONEURAL26_OUTFIT has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1128298    *;
MPRINT(EM_DIAGRAM):    *;
1128299    title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
1128300    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_selectediteration_title
1128300  ! , NOQUOTE, _VMISC_))";
MPRINT(EM_DIAGRAM):   title10 "Selected Iteration based on _VMISC_";
1128301    proc print data=EMWS8.AutoNeural26_OUTFIT noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural26_OUTFIT noobs;
1128302    var _iter_ _aic_ _averr_ _misc_
1128303    _vaverr_ _vmisc_
1128304    ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
1128305    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL26_OUTFIT.
NOTE: The PROCEDURE PRINT printed page 883.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1128306    title9;
MPRINT(EM_DIAGRAM):   title9;
1128307    title10;
MPRINT(EM_DIAGRAM):   title10;
1128308    * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
1128309    ;
MPRINT(EM_DIAGRAM):   ;
1128310    data EMWS8.AutoNeural26_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural26_OUTFIT;
1128311    set EMWS8.AutoNeural26_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural26_OUTFIT;
1128312    length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
1128313    _func_ = "";
MPRINT(EM_DIAGRAM):   _func_ = "";
1128314    _status_ = "Final";
MPRINT(EM_DIAGRAM):   _status_ = "Final";
1128315    _step_ = "";
MPRINT(EM_DIAGRAM):   _step_ = "";
1128316    _index_ = 4;
MPRINT(EM_DIAGRAM):   _index_ = 4;
1128317    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL26_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL26_OUTFIT has 1 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1128318    data EMWS8.AutoNeural26_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural26_HISTORY;
1128319    set EMWS8.AutoNeural26_HISTORY EMWS8.AutoNeural26_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural26_HISTORY EMWS8.AutoNeural26_OUTFIT;
1128320    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 17 observations read from the data set
      EMWS8.AUTONEURAL26_HISTORY.
The SAS System
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL26_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL26_HISTORY has 18 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1128321    title9 " ";
MPRINT(EM_DIAGRAM):    title9 " ";
1128322    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_finaltrainhistory_title
1128322  ! , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Final Training History";
1128323    proc print data=EMWS8.AutoNeural26_HISTORY noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural26_HISTORY noobs;
1128324    var _step_ _func_ _status_ _iter_ _averr_ _misc_ _aic_
1128325    _vaverr_ _vmisc_
1128326    ;
MPRINT(EM_DIAGRAM):   var _step_ _func_ _status_ _iter_ _averr_ _misc_ _aic_
_vaverr_ _vmisc_ ;
1128327    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 18 observations read from the data set
      EMWS8.AUTONEURAL26_HISTORY.
NOTE: The PROCEDURE PRINT printed page 884.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1128328    data work.keep_history;
MPRINT(EM_DIAGRAM):   data work.keep_history;
1128329    set EMWS8.AutoNeural26_HISTORY;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural26_HISTORY;
1128330    if _status_='keep';
MPRINT(EM_DIAGRAM):   if _status_='keep';
1128331    if _func_='DIRECT' then neurons=0;
MPRINT(EM_DIAGRAM):   if _func_='DIRECT' then neurons=0;
1128332    else neurons=4;
MPRINT(EM_DIAGRAM):   else neurons=4;
1128333    label neurons="%sysfunc(sasmsg(sashelp.dmine,
1128333  ! rpt_numberneurons_vlabel  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   label neurons= "Number of Neurons";
1128334    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 18 observations read from the data set
      EMWS8.AUTONEURAL26_HISTORY.
NOTE: The data set WORK.KEEP_HISTORY has 3 observations and 41 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1128335    title8 " ";
MPRINT(EM_DIAGRAM):   title8 " ";
1128336    title9 "%sysfunc(sasmsg(sashelp.dmine, rpt_finalmodel_title  ,
1128336  ! NOQUOTE))";
MPRINT(EM_DIAGRAM):   title9 "Final Model";
1128337    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_stopping_title  ,
1128337  ! NOQUOTE, %nrbquote(Termination criteria were satisfied: overfitting
1128337  ! based on _VMISC_)))";
MPRINT(EM_DIAGRAM):   title10 "Stopping: Termination criteria were satisfied:
overfitting based on _VMISC_";
1128338    proc print data=work.keep_history noobs;
MPRINT(EM_DIAGRAM):   proc print data=work.keep_history noobs;
1128339    var _func_ _averr_
1128340    _vaverr_
1128341    neurons;
MPRINT(EM_DIAGRAM):   var _func_ _averr_ _vaverr_ neurons;
1128342    sum neurons;
MPRINT(EM_DIAGRAM):   sum neurons;
1128343    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set WORK.KEEP_HISTORY.
NOTE: The PROCEDURE PRINT printed page 885.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1128344    title8;
MPRINT(EM_DIAGRAM):   title8;
1128345    title9;
MPRINT(EM_DIAGRAM):   title9;
1128346    title10;
MPRINT(EM_DIAGRAM):   title10;
1128347    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1128348    * AutoNeural Final Network;
MPRINT(EM_DIAGRAM):   * AutoNeural Final Network;
1128349    ;
MPRINT(EM_DIAGRAM):   ;
1128350    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1128351    *;
MPRINT(EM_DIAGRAM):   *;
1128352    proc neural data=EM_AutoNeural26 dmdbcat=WORK.AutoNeural26_DMDB
1128353    validdata=EMWS8.BINNING_VALIDATE
1128354    ;
MPRINT(EM_DIAGRAM):   proc neural data=EM_AutoNeural26
dmdbcat=WORK.AutoNeural26_DMDB validdata=EMWS8.BINNING_VALIDATE ;
1128355    *;
MPRINT(EM_DIAGRAM):   *;
1128356    nloptions noprint;
MPRINT(EM_DIAGRAM):   nloptions noprint;
1128357    performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   input
1128358    input %INTINPUTS / level=interval id=interval;
MPRINT(INTINPUTS):   Year_Birth
MPRINT(EM_DIAGRAM):   / level=interval id=interval;
MPRINT(EM_DIAGRAM):   input
1128359    input %NOMINPUTS / level=nominal id=nominal;
MPRINT(NOMINPUTS):   GRP_AcceptedCmp5 GRP_AcceptedCmpTotal GRP_Frq GRP_Income
GRP_Mnt GRP_MntFishProducts GRP_MntGoldProds GRP_MntMeatProducts
GRP_MntSweetProducts GRP_MntWines GRP_NumCatalogPurchases GRP_NumDistPurchases
GRP_NumWebPurchases GRP_NumWebVisitsMonth GRP_RFMstat GRP_RMntFrq GRP_Recency
MPRINT(EM_DIAGRAM):   / level=nominal id=nominal;
1128360    target DepVar / level=NOMINAL id=DepVar
1128361    ;
MPRINT(EM_DIAGRAM):   target DepVar / level=NOMINAL id=DepVar ;
1128362    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1128363    * Layer #1;
MPRINT(EM_DIAGRAM):   * Layer #1;
1128364    ;
MPRINT(EM_DIAGRAM):   ;
1128365    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1128366    Hidden 4 / id = H1x1_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 4 / id = H1x1_ act=SOFTMAX;
1128367    connect interval H1x1_;
MPRINT(EM_DIAGRAM):   connect interval H1x1_;
1128368    connect nominal H1x1_;
MPRINT(EM_DIAGRAM):   connect nominal H1x1_;
1128369    Hidden 4 / id = H1x2_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 4 / id = H1x2_ act=SOFTMAX;
1128370    connect interval H1x2_;
MPRINT(EM_DIAGRAM):   connect interval H1x2_;
1128371    connect nominal H1x2_;
MPRINT(EM_DIAGRAM):   connect nominal H1x2_;
1128372    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1128373    * Layer #2;
MPRINT(EM_DIAGRAM):   * Layer #2;
1128374    ;
MPRINT(EM_DIAGRAM):   ;
1128375    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1128376    Hidden 4 / id = H2x1_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 4 / id = H2x1_ act=SOFTMAX;
1128377    connect H1x1_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x1_ H2x1_;
1128378    connect H1x2_ H2x1_;
MPRINT(EM_DIAGRAM):   connect H1x2_ H2x1_;
1128379    connect H2x1_ DepVar;
MPRINT(EM_DIAGRAM):   connect H2x1_ DepVar;
1128380    *;
MPRINT(EM_DIAGRAM):   *;
1128381    initial inest= EMWS8.AutoNeural26_ESTDS bylabel;
MPRINT(EM_DIAGRAM):   initial inest= EMWS8.AutoNeural26_ESTDS bylabel;
NOTE: The data set EMWS8.AUTONEURAL26_ESTDS has 1 observations and 949
      variables.
1128382    train tech=none;
MPRINT(EM_DIAGRAM):   train tech=none;
NOTE: No optimization performed.
1128383    code
1128383  ! file="C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural26\SCO
1128383  ! RECODE.sas"
1128384    group=AutoNeural26
1128385    ;
MPRINT(EM_DIAGRAM):   code
file="C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural26\SCORECODE.sas"
 group=AutoNeural26 ;
NOTE: External file
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural26\SCORECODE.sas
      opened.
1128386    ;
MPRINT(EM_DIAGRAM):   ;
1128387    code
1128387  ! file="C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural26\RES
1128387  ! IDUALSCORECODE.sas"
1128388    group=AutoNeural26
1128389    residual
1128390    ;
MPRINT(EM_DIAGRAM):   code
file="C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural26\RESIDUALSCOREC
ODE.sas" group=AutoNeural26 residual ;
NOTE: External file
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural26\RESIDUALSCOREC
      ODE.sas opened.
1128391    ;
MPRINT(EM_DIAGRAM):   ;
1128392    score data=EMWS8.BINNING_TRAIN out=_NULL_
NOTE: View EMWS8.BINNING_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
 
1128393    outfit=WORK.FIT1
1128394    role=TRAIN
1128395    outkey=EMWS8.AutoNeural26_OUTKEY;
MPRINT(EM_DIAGRAM):   score data=EMWS8.BINNING_TRAIN out=_NULL_
outfit=WORK.FIT1 role=TRAIN outkey=EMWS8.AutoNeural26_OUTKEY;
NOTE: The data set EMWS8.AUTONEURAL26_OUTKEY has 152 observations and 8
      variables.
NOTE: The data set EMWS8.BINNING_TRAIN has . observations and 62 variables.
NOTE: There were 2374 observations read from the data set EMWS8.PART_TRAIN.
NOTE: The data set WORK.FIT1 has 2 observations and 23 variables.
1128396    score data=EMWS8.BINNING_VALIDATE out=_NULL_
NOTE: View EMWS8.BINNING_VALIDATE.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
 
1128397    outfit=WORK.FIT2
1128398    outkey=EMWS8.AutoNeural26_OUTKEY;
MPRINT(EM_DIAGRAM):   score data=EMWS8.BINNING_VALIDATE out=_NULL_
outfit=WORK.FIT2 outkey=EMWS8.AutoNeural26_OUTKEY;
NOTE: The data set EMWS8.AUTONEURAL26_OUTKEY has 152 observations and 8
      variables.
NOTE: The data set EMWS8.BINNING_VALIDATE has . observations and 62 variables.
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: The data set WORK.FIT2 has 2 observations and 15 variables.
1128399    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK.EM_AUTONEURAL26 has 2374 observations and 19 variables.
NOTE: The data set EMWS8.BINNING_VALIDATE has . observations and 62 variables.
NOTE: View EMWS8.BINNING_VALIDATE.VIEW used (Total process time):
      real time           0.32 seconds
      cpu time            0.35 seconds
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: Closing the Neural Application.
NOTE: PROCEDURE NEURAL used (Total process time):
      real time           0.33 seconds
      cpu time            0.35 seconds
 
 
1128400    data EMWS8.AutoNeural26_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural26_OUTFIT;
1128401    merge WORK.FIT1 WORK.FIT2;
MPRINT(EM_DIAGRAM):   merge WORK.FIT1 WORK.FIT2;
1128402    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set WORK.FIT1.
NOTE: There were 2 observations read from the data set WORK.FIT2.
NOTE: The data set EMWS8.AUTONEURAL26_OUTFIT has 2 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1128403    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1128404    * Generate Weights Plotting data set;
MPRINT(EM_DIAGRAM):   * Generate Weights Plotting data set;
1128405    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1128406    data tempweight ( drop = _tech_ _decay_ _seed_ _nobj_ _obj_ _objerr_
1128406  ! _averr_ _p_num_ where= (_type_ eq "PARMS"));
MPRINT(EM_DIAGRAM):   data tempweight ( drop = _tech_ _decay_ _seed_ _nobj_
_obj_ _objerr_ _averr_ _p_num_ where= (_type_ eq "PARMS"));
1128407    set EMWS8.AutoNeural26_ESTDS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural26_ESTDS;
1128408    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.AUTONEURAL26_ESTDS.
NOTE: The data set WORK.TEMPWEIGHT has 1 observations and 941 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1128409    proc sort;
MPRINT(EM_DIAGRAM):   proc sort;
1128410    by _name_;
MPRINT(EM_DIAGRAM):   by _name_;
1128411    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK.TEMPWEIGHT.
NOTE: The data set WORK.TEMPWEIGHT has 1 observations and 941 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1128412    proc transpose data=tempweight out=EMWS8.AutoNeural26_WEIGHTS;
MPRINT(EM_DIAGRAM):   proc transpose data=tempweight
out=EMWS8.AutoNeural26_WEIGHTS;
1128413    by _name_;
MPRINT(EM_DIAGRAM):   by _name_;
1128414    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK.TEMPWEIGHT.
NOTE: The data set EMWS8.AUTONEURAL26_WEIGHTS has 939 observations and 3
      variables.
NOTE: PROCEDURE TRANSPOSE used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1128415    data EMWS8.AutoNeural26_WEIGHTS;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural26_WEIGHTS;
1128416    set EMWS8.AutoNeural26_WEIGHTS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural26_WEIGHTS;
1128417    FROM = ktrim(kleft(kscan(_LABEL_, 1, '-->')));
MPRINT(EM_DIAGRAM):   FROM = ktrim(kleft(kscan(_LABEL_, 1, '-->')));
1128418    TO = ktrim(kleft(kscan(_LABEL_, 2, '>')));
MPRINT(EM_DIAGRAM):   TO = ktrim(kleft(kscan(_LABEL_, 2, '>')));
1128419    WEIGHT = COL1;
MPRINT(EM_DIAGRAM):   WEIGHT = COL1;
1128420    if (TO eq '') or (FROM eq '') then delete;
MPRINT(EM_DIAGRAM):   if (TO eq '') or (FROM eq '') then delete;
1128421    label _LABEL_ ="%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel  ,
1128421  ! NOQUOTE))" FROM = "%sysfunc(sasmsg(sashelp.dmine, rpt_from_vlabel  ,
1128421  ! NOQUOTE))" TO = "%sysfunc(sasmsg(sashelp.dmine, rpt_into_vlabel  ,
1128421  ! NOQUOTE))" WEIGHT =
1128422       "%sysfunc(sasmsg(sashelp.dmine, rpt_weight_vlabel  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _LABEL_ = "Label" FROM = "From" TO = "Into" WEIGHT
= "Weight";
1128423    keep FROM TO WEIGHT _LABEL_;
MPRINT(EM_DIAGRAM):   keep FROM TO WEIGHT _LABEL_;
1128424    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 939 observations read from the data set
      EMWS8.AUTONEURAL26_WEIGHTS.
NOTE: The data set EMWS8.AUTONEURAL26_WEIGHTS has 934 observations and 4
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   * restore printing options;
MPRINT(EM_DIAGRAM):   ;
1128425    * restore printing options;
1128426    ;
1128427    title10;
MPRINT(EM_DIAGRAM):   title10;
1128428    options linesize=95;
MPRINT(EM_DIAGRAM):   options linesize=95;
1128429    options pagesize=10000;
MPRINT(EM_DIAGRAM):   options pagesize=10000;
1128430    options nonumber;
MPRINT(EM_DIAGRAM):   options nonumber;
1128431    options nocenter;
MPRINT(EM_DIAGRAM):   options nocenter;
1128432    options nodate;
MPRINT(EM_DIAGRAM):   options nodate;
MPRINT(EM_DIAGRAM):   *;
1128433    *;
1128434    proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
1128435    delete EM_AutoNeural26;
MPRINT(EM_DIAGRAM):   delete EM_AutoNeural26;
1128436    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Deleting WORK.EM_AUTONEURAL26 (memtype=DATA).
1128437    quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
1128438    data EMWS8.AutoNeural26_HISTORY;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural26_HISTORY;
1128439    set EMWS8.AutoNeural26_HISTORY;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural26_HISTORY;
1128440    label _T_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_trainstep_vlabel  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _T_ = "Training Step";
1128441    label _iter_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_trainiterations_vlabel  ,
1128441  ! NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _iter_ = "Training Iterations";
1128442    _T_ = _N_ -1;
MPRINT(EM_DIAGRAM):   _T_ = _N_ -1;
1128443    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 18 observations read from the data set EMWS8.AUTONEURAL26_HISTORY.
NOTE: The data set EMWS8.AUTONEURAL26_HISTORY has 18 observations and 41 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "28. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "16.54 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                28. April 2016
Time:                16.54 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O341SWBU
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural26\EMSCORE.out" encoding="UTF-8"
NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O341SWBU new;
MPRINT(EM_DIAGRAM):   run;
1128545    filename emflow
1128545  ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural26\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural26\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * AutoNeural26: Scoring DATA data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1128546    *------------------------------------------------------------*;
1128547    * AutoNeural26: Scoring DATA data;
1128548    *------------------------------------------------------------*;
1128549    data EMWS8.AutoNeural26_TRAIN
1128550    / view=EMWS8.AutoNeural26_TRAIN
1128551    ;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural26_TRAIN / view=EMWS8.AutoNeural26_TRAIN ;
1128552    set EMWS8.BINNING_TRAIN
1128553    ;
MPRINT(EM_DIAGRAM):   set EMWS8.BINNING_TRAIN ;
1128554    %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural26\EMFLOWSCORE.sas.
1128555   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1128556   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1128557   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1128558   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1128559   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1128560   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1128561   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1128562   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1128563   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1128564   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1128565   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1128566   +LENGTH _WARN_ $4
1128567   +      F_DepVar  $ 12
1128568   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1128569   +      label S_Year_Birth = 'Standard: Year_Birth' ;
MPRINT(EM_DIAGRAM):   label S_Year_Birth = 'Standard: Year_Birth' ;
1128570   +
1128571   +      label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
MPRINT(EM_DIAGRAM):   label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
1128572   +
1128573   +      label GRP_AcceptedCmpTotal3 = 'Dummy: GRP_AcceptedCmpTotal=3' ;
MPRINT(EM_DIAGRAM):   label GRP_AcceptedCmpTotal3 = 'Dummy: GRP_AcceptedCmpTotal=3' ;
1128574   +
1128575   +      label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
1128576   +
1128577   +      label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
1128578   +
1128579   +      label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
1128580   +
1128581   +      label GRP_Frq5 = 'Dummy: GRP_Frq=5' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq5 = 'Dummy: GRP_Frq=5' ;
1128582   +
1128583   +      label GRP_Frq6 = 'Dummy: GRP_Frq=6' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq6 = 'Dummy: GRP_Frq=6' ;
1128584   +
1128585   +      label GRP_Frq7 = 'Dummy: GRP_Frq=7' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq7 = 'Dummy: GRP_Frq=7' ;
1128586   +
1128587   +      label GRP_Frq8 = 'Dummy: GRP_Frq=8' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq8 = 'Dummy: GRP_Frq=8' ;
1128588   +
1128589   +      label GRP_Frq9 = 'Dummy: GRP_Frq=9' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq9 = 'Dummy: GRP_Frq=9' ;
1128590   +
1128591   +      label GRP_Frq10 = 'Dummy: GRP_Frq=10' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq10 = 'Dummy: GRP_Frq=10' ;
1128592   +
1128593   +      label GRP_Income2 = 'Dummy: GRP_Income=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Income2 = 'Dummy: GRP_Income=2' ;
1128594   +
1128595   +      label GRP_Income3 = 'Dummy: GRP_Income=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Income3 = 'Dummy: GRP_Income=3' ;
1128596   +
1128597   +      label GRP_Income4 = 'Dummy: GRP_Income=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Income4 = 'Dummy: GRP_Income=4' ;
1128598   +
1128599   +      label GRP_Income5 = 'Dummy: GRP_Income=5' ;
MPRINT(EM_DIAGRAM):   label GRP_Income5 = 'Dummy: GRP_Income=5' ;
1128600   +
1128601   +      label GRP_Income6 = 'Dummy: GRP_Income=6' ;
MPRINT(EM_DIAGRAM):   label GRP_Income6 = 'Dummy: GRP_Income=6' ;
1128602   +
1128603   +      label GRP_Income7 = 'Dummy: GRP_Income=7' ;
MPRINT(EM_DIAGRAM):   label GRP_Income7 = 'Dummy: GRP_Income=7' ;
1128604   +
1128605   +      label GRP_Income8 = 'Dummy: GRP_Income=8' ;
MPRINT(EM_DIAGRAM):   label GRP_Income8 = 'Dummy: GRP_Income=8' ;
1128606   +
1128607   +      label GRP_Income9 = 'Dummy: GRP_Income=9' ;
MPRINT(EM_DIAGRAM):   label GRP_Income9 = 'Dummy: GRP_Income=9' ;
1128608   +
1128609   +      label GRP_Income10 = 'Dummy: GRP_Income=10' ;
MPRINT(EM_DIAGRAM):   label GRP_Income10 = 'Dummy: GRP_Income=10' ;
1128610   +
1128611   +      label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
1128612   +
1128613   +      label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
1128614   +
1128615   +      label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
1128616   +
1128617   +      label GRP_Mnt5 = 'Dummy: GRP_Mnt=5' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt5 = 'Dummy: GRP_Mnt=5' ;
1128618   +
1128619   +      label GRP_Mnt6 = 'Dummy: GRP_Mnt=6' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt6 = 'Dummy: GRP_Mnt=6' ;
1128620   +
1128621   +      label GRP_Mnt7 = 'Dummy: GRP_Mnt=7' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt7 = 'Dummy: GRP_Mnt=7' ;
1128622   +
1128623   +      label GRP_Mnt8 = 'Dummy: GRP_Mnt=8' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt8 = 'Dummy: GRP_Mnt=8' ;
1128624   +
1128625   +      label GRP_Mnt9 = 'Dummy: GRP_Mnt=9' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt9 = 'Dummy: GRP_Mnt=9' ;
1128626   +
1128627   +      label GRP_Mnt10 = 'Dummy: GRP_Mnt=10' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt10 = 'Dummy: GRP_Mnt=10' ;
1128628   +
1128629   +      label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
1128630   +
1128631   +      label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
1128632   +
1128633   +      label GRP_MntFishProducts5 = 'Dummy: GRP_MntFishProducts=5' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts5 = 'Dummy: GRP_MntFishProducts=5' ;
1128634   +
1128635   +      label GRP_MntFishProducts6 = 'Dummy: GRP_MntFishProducts=6' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts6 = 'Dummy: GRP_MntFishProducts=6' ;
1128636   +
1128637   +      label GRP_MntFishProducts7 = 'Dummy: GRP_MntFishProducts=7' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts7 = 'Dummy: GRP_MntFishProducts=7' ;
1128638   +
1128639   +      label GRP_MntFishProducts8 = 'Dummy: GRP_MntFishProducts=8' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts8 = 'Dummy: GRP_MntFishProducts=8' ;
1128640   +
1128641   +      label GRP_MntFishProducts9 = 'Dummy: GRP_MntFishProducts=9' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts9 = 'Dummy: GRP_MntFishProducts=9' ;
1128642   +
1128643   +      label GRP_MntFishProducts10 = 'Dummy: GRP_MntFishProducts=10' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts10 = 'Dummy: GRP_MntFishProducts=10' ;
1128644   +
1128645   +      label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
1128646   +
1128647   +      label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
1128648   +
1128649   +      label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
1128650   +
1128651   +      label GRP_MntGoldProds5 = 'Dummy: GRP_MntGoldProds=5' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds5 = 'Dummy: GRP_MntGoldProds=5' ;
1128652   +
1128653   +      label GRP_MntGoldProds6 = 'Dummy: GRP_MntGoldProds=6' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds6 = 'Dummy: GRP_MntGoldProds=6' ;
1128654   +
1128655   +      label GRP_MntGoldProds7 = 'Dummy: GRP_MntGoldProds=7' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds7 = 'Dummy: GRP_MntGoldProds=7' ;
1128656   +
1128657   +      label GRP_MntGoldProds8 = 'Dummy: GRP_MntGoldProds=8' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds8 = 'Dummy: GRP_MntGoldProds=8' ;
1128658   +
1128659   +      label GRP_MntGoldProds9 = 'Dummy: GRP_MntGoldProds=9' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds9 = 'Dummy: GRP_MntGoldProds=9' ;
1128660   +
1128661   +      label GRP_MntGoldProds10 = 'Dummy: GRP_MntGoldProds=10' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds10 = 'Dummy: GRP_MntGoldProds=10' ;
1128662   +
1128663   +      label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
1128664   +
1128665   +      label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
1128666   +
1128667   +      label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
1128668   +
1128669   +      label GRP_MntMeatProducts5 = 'Dummy: GRP_MntMeatProducts=5' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts5 = 'Dummy: GRP_MntMeatProducts=5' ;
1128670   +
1128671   +      label GRP_MntMeatProducts6 = 'Dummy: GRP_MntMeatProducts=6' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts6 = 'Dummy: GRP_MntMeatProducts=6' ;
1128672   +
1128673   +      label GRP_MntMeatProducts7 = 'Dummy: GRP_MntMeatProducts=7' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts7 = 'Dummy: GRP_MntMeatProducts=7' ;
1128674   +
1128675   +      label GRP_MntMeatProducts8 = 'Dummy: GRP_MntMeatProducts=8' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts8 = 'Dummy: GRP_MntMeatProducts=8' ;
1128676   +
1128677   +      label GRP_MntMeatProducts9 = 'Dummy: GRP_MntMeatProducts=9' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts9 = 'Dummy: GRP_MntMeatProducts=9' ;
1128678   +
1128679   +      label GRP_MntMeatProducts10 = 'Dummy: GRP_MntMeatProducts=10' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts10 = 'Dummy: GRP_MntMeatProducts=10' ;
1128680   +
1128681   +      label GRP_MntSweetProducts3 = 'Dummy: GRP_MntSweetProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntSweetProducts3 = 'Dummy: GRP_MntSweetProducts=3' ;
1128682   +
1128683   +      label GRP_MntSweetProducts4 = 'Dummy: GRP_MntSweetProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntSweetProducts4 = 'Dummy: GRP_MntSweetProducts=4' ;
1128684   +
1128685   +      label GRP_MntSweetProducts5 = 'Dummy: GRP_MntSweetProducts=5' ;
MPRINT(EM_DIAGRAM):   label GRP_MntSweetProducts5 = 'Dummy: GRP_MntSweetProducts=5' ;
1128686   +
1128687   +      label GRP_MntSweetProducts6 = 'Dummy: GRP_MntSweetProducts=6' ;
MPRINT(EM_DIAGRAM):   label GRP_MntSweetProducts6 = 'Dummy: GRP_MntSweetProducts=6' ;
1128688   +
1128689   +      label GRP_MntSweetProducts7 = 'Dummy: GRP_MntSweetProducts=7' ;
MPRINT(EM_DIAGRAM):   label GRP_MntSweetProducts7 = 'Dummy: GRP_MntSweetProducts=7' ;
1128690   +
1128691   +      label GRP_MntSweetProducts8 = 'Dummy: GRP_MntSweetProducts=8' ;
MPRINT(EM_DIAGRAM):   label GRP_MntSweetProducts8 = 'Dummy: GRP_MntSweetProducts=8' ;
1128692   +
1128693   +      label GRP_MntSweetProducts9 = 'Dummy: GRP_MntSweetProducts=9' ;
MPRINT(EM_DIAGRAM):   label GRP_MntSweetProducts9 = 'Dummy: GRP_MntSweetProducts=9' ;
1128694   +
1128695   +      label GRP_MntSweetProducts10 = 'Dummy: GRP_MntSweetProducts=10' ;
MPRINT(EM_DIAGRAM):   label GRP_MntSweetProducts10 = 'Dummy: GRP_MntSweetProducts=10' ;
1128696   +
1128697   +      label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
1128698   +
1128699   +      label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
1128700   +
1128701   +      label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
1128702   +
1128703   +      label GRP_MntWines5 = 'Dummy: GRP_MntWines=5' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines5 = 'Dummy: GRP_MntWines=5' ;
1128704   +
1128705   +      label GRP_MntWines6 = 'Dummy: GRP_MntWines=6' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines6 = 'Dummy: GRP_MntWines=6' ;
1128706   +
1128707   +      label GRP_MntWines7 = 'Dummy: GRP_MntWines=7' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines7 = 'Dummy: GRP_MntWines=7' ;
1128708   +
1128709   +      label GRP_MntWines8 = 'Dummy: GRP_MntWines=8' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines8 = 'Dummy: GRP_MntWines=8' ;
1128710   +
1128711   +      label GRP_MntWines9 = 'Dummy: GRP_MntWines=9' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines9 = 'Dummy: GRP_MntWines=9' ;
1128712   +
1128713   +      label GRP_MntWines10 = 'Dummy: GRP_MntWines=10' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines10 = 'Dummy: GRP_MntWines=10' ;
1128714   +
1128715   +      label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
1128716   +
1128717   +      label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
1128718   +
1128719   +      label GRP_NumCatalogPurchases5 = 'Dummy: GRP_NumCatalogPurchases=5' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases5 = 'Dummy: GRP_NumCatalogPurchases=5' ;
1128720   +
1128721   +      label GRP_NumCatalogPurchases6 = 'Dummy: GRP_NumCatalogPurchases=6' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases6 = 'Dummy: GRP_NumCatalogPurchases=6' ;
1128722   +
1128723   +      label GRP_NumCatalogPurchases7 = 'Dummy: GRP_NumCatalogPurchases=7' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases7 = 'Dummy: GRP_NumCatalogPurchases=7' ;
1128724   +
1128725   +      label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
1128726   +
1128727   +      label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
1128728   +
1128729   +      label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
1128730   +
1128731   +      label GRP_NumDistPurchases5 = 'Dummy: GRP_NumDistPurchases=5' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases5 = 'Dummy: GRP_NumDistPurchases=5' ;
1128732   +
1128733   +      label GRP_NumDistPurchases6 = 'Dummy: GRP_NumDistPurchases=6' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases6 = 'Dummy: GRP_NumDistPurchases=6' ;
1128734   +
1128735   +      label GRP_NumDistPurchases7 = 'Dummy: GRP_NumDistPurchases=7' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases7 = 'Dummy: GRP_NumDistPurchases=7' ;
1128736   +
1128737   +      label GRP_NumDistPurchases8 = 'Dummy: GRP_NumDistPurchases=8' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases8 = 'Dummy: GRP_NumDistPurchases=8' ;
1128738   +
1128739   +      label GRP_NumDistPurchases9 = 'Dummy: GRP_NumDistPurchases=9' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases9 = 'Dummy: GRP_NumDistPurchases=9' ;
1128740   +
1128741   +      label GRP_NumDistPurchases10 = 'Dummy: GRP_NumDistPurchases=10' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases10 = 'Dummy: GRP_NumDistPurchases=10' ;
1128742   +
1128743   +      label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
1128744   +
1128745   +      label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
1128746   +
1128747   +      label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
1128748   +
1128749   +      label GRP_NumWebPurchases5 = 'Dummy: GRP_NumWebPurchases=5' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases5 = 'Dummy: GRP_NumWebPurchases=5' ;
1128750   +
1128751   +      label GRP_NumWebPurchases6 = 'Dummy: GRP_NumWebPurchases=6' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases6 = 'Dummy: GRP_NumWebPurchases=6' ;
1128752   +
1128753   +      label GRP_NumWebPurchases7 = 'Dummy: GRP_NumWebPurchases=7' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases7 = 'Dummy: GRP_NumWebPurchases=7' ;
1128754   +
1128755   +      label GRP_NumWebPurchases8 = 'Dummy: GRP_NumWebPurchases=8' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases8 = 'Dummy: GRP_NumWebPurchases=8' ;
1128756   +
1128757   +      label GRP_NumWebVisitsMonth2 = 'Dummy: GRP_NumWebVisitsMonth=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebVisitsMonth2 = 'Dummy: GRP_NumWebVisitsMonth=2' ;
1128758   +
1128759   +      label GRP_NumWebVisitsMonth3 = 'Dummy: GRP_NumWebVisitsMonth=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebVisitsMonth3 = 'Dummy: GRP_NumWebVisitsMonth=3' ;
1128760   +
1128761   +      label GRP_NumWebVisitsMonth4 = 'Dummy: GRP_NumWebVisitsMonth=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebVisitsMonth4 = 'Dummy: GRP_NumWebVisitsMonth=4' ;
1128762   +
1128763   +      label GRP_NumWebVisitsMonth5 = 'Dummy: GRP_NumWebVisitsMonth=5' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebVisitsMonth5 = 'Dummy: GRP_NumWebVisitsMonth=5' ;
1128764   +
1128765   +      label GRP_NumWebVisitsMonth6 = 'Dummy: GRP_NumWebVisitsMonth=6' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebVisitsMonth6 = 'Dummy: GRP_NumWebVisitsMonth=6' ;
1128766   +
1128767   +      label GRP_NumWebVisitsMonth7 = 'Dummy: GRP_NumWebVisitsMonth=7' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebVisitsMonth7 = 'Dummy: GRP_NumWebVisitsMonth=7' ;
1128768   +
1128769   +      label GRP_NumWebVisitsMonth8 = 'Dummy: GRP_NumWebVisitsMonth=8' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebVisitsMonth8 = 'Dummy: GRP_NumWebVisitsMonth=8' ;
1128770   +
1128771   +      label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
1128772   +
1128773   +      label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
1128774   +
1128775   +      label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
1128776   +
1128777   +      label GRP_RFMstat5 = 'Dummy: GRP_RFMstat=5' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat5 = 'Dummy: GRP_RFMstat=5' ;
1128778   +
1128779   +      label GRP_RFMstat6 = 'Dummy: GRP_RFMstat=6' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat6 = 'Dummy: GRP_RFMstat=6' ;
1128780   +
1128781   +      label GRP_RFMstat7 = 'Dummy: GRP_RFMstat=7' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat7 = 'Dummy: GRP_RFMstat=7' ;
1128782   +
1128783   +      label GRP_RFMstat8 = 'Dummy: GRP_RFMstat=8' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat8 = 'Dummy: GRP_RFMstat=8' ;
1128784   +
1128785   +      label GRP_RFMstat9 = 'Dummy: GRP_RFMstat=9' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat9 = 'Dummy: GRP_RFMstat=9' ;
1128786   +
1128787   +      label GRP_RFMstat10 = 'Dummy: GRP_RFMstat=10' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat10 = 'Dummy: GRP_RFMstat=10' ;
1128788   +
1128789   +      label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
1128790   +
1128791   +      label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
1128792   +
1128793   +      label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
1128794   +
1128795   +      label GRP_RMntFrq5 = 'Dummy: GRP_RMntFrq=5' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq5 = 'Dummy: GRP_RMntFrq=5' ;
1128796   +
1128797   +      label GRP_RMntFrq6 = 'Dummy: GRP_RMntFrq=6' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq6 = 'Dummy: GRP_RMntFrq=6' ;
1128798   +
1128799   +      label GRP_RMntFrq7 = 'Dummy: GRP_RMntFrq=7' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq7 = 'Dummy: GRP_RMntFrq=7' ;
1128800   +
1128801   +      label GRP_RMntFrq8 = 'Dummy: GRP_RMntFrq=8' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq8 = 'Dummy: GRP_RMntFrq=8' ;
1128802   +
1128803   +      label GRP_RMntFrq9 = 'Dummy: GRP_RMntFrq=9' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq9 = 'Dummy: GRP_RMntFrq=9' ;
1128804   +
1128805   +      label GRP_RMntFrq10 = 'Dummy: GRP_RMntFrq=10' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq10 = 'Dummy: GRP_RMntFrq=10' ;
1128806   +
1128807   +      label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
1128808   +
1128809   +      label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
1128810   +
1128811   +      label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
1128812   +
1128813   +      label GRP_Recency5 = 'Dummy: GRP_Recency=5' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency5 = 'Dummy: GRP_Recency=5' ;
1128814   +
1128815   +      label GRP_Recency6 = 'Dummy: GRP_Recency=6' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency6 = 'Dummy: GRP_Recency=6' ;
1128816   +
1128817   +      label GRP_Recency7 = 'Dummy: GRP_Recency=7' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency7 = 'Dummy: GRP_Recency=7' ;
1128818   +
1128819   +      label GRP_Recency8 = 'Dummy: GRP_Recency=8' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency8 = 'Dummy: GRP_Recency=8' ;
1128820   +
1128821   +      label GRP_Recency9 = 'Dummy: GRP_Recency=9' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency9 = 'Dummy: GRP_Recency=9' ;
1128822   +
1128823   +      label GRP_Recency10 = 'Dummy: GRP_Recency=10' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency10 = 'Dummy: GRP_Recency=10' ;
1128824   +
1128825   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
1128826   +
1128827   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
1128828   +
1128829   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
1128830   +
1128831   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
1128832   +
1128833   +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
1128834   +
1128835   +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
1128836   +
1128837   +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
1128838   +
1128839   +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
1128840   +
1128841   +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
1128842   +
1128843   +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
1128844   +
1128845   +      label H2x1_3 = 'Hidden: H2x1_=3' ;
MPRINT(EM_DIAGRAM):   label H2x1_3 = 'Hidden: H2x1_=3' ;
1128846   +
1128847   +      label H2x1_4 = 'Hidden: H2x1_=4' ;
MPRINT(EM_DIAGRAM):   label H2x1_4 = 'Hidden: H2x1_=4' ;
1128848   +
1128849   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1128850   +
1128851   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1128852   +
1128853   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1128854   +
1128855   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1128856   +
1128857   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1128858   +
1128859   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1128860   +
1128861   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1128862   +
1128863   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1128864   +
1128865   +*** Generate dummy variables for GRP_AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_AcceptedCmp5 ;
1128866   +drop GRP_AcceptedCmp52 ;
MPRINT(EM_DIAGRAM):   drop GRP_AcceptedCmp52 ;
1128867   +if missing( GRP_AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_AcceptedCmp5 ) then do;
1128868   +   GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
1128869   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1128870   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1128871   +end;
MPRINT(EM_DIAGRAM):   end;
1128872   +else do;
MPRINT(EM_DIAGRAM):   else do;
1128873   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1128874   +   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
1128875   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1128876   +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
1128877   +      GRP_AcceptedCmp52 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = 1;
1128878   +   end;
MPRINT(EM_DIAGRAM):   end;
1128879   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1128880   +      GRP_AcceptedCmp52 = -1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = -1;
1128881   +   end;
MPRINT(EM_DIAGRAM):   end;
1128882   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1128883   +      GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
1128884   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1128885   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1128886   +   end;
MPRINT(EM_DIAGRAM):   end;
1128887   +end;
MPRINT(EM_DIAGRAM):   end;
1128888   +
1128889   +*** Generate dummy variables for GRP_AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_AcceptedCmpTotal ;
1128890   +drop GRP_AcceptedCmpTotal3 ;
MPRINT(EM_DIAGRAM):   drop GRP_AcceptedCmpTotal3 ;
1128891   +if missing( GRP_AcceptedCmpTotal ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_AcceptedCmpTotal ) then do;
1128892   +   GRP_AcceptedCmpTotal3 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmpTotal3 = .;
1128893   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1128894   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1128895   +end;
MPRINT(EM_DIAGRAM):   end;
1128896   +else do;
MPRINT(EM_DIAGRAM):   else do;
1128897   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1128898   +   _dm12 = put( GRP_AcceptedCmpTotal , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_AcceptedCmpTotal , BEST12. );
1128899   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1128900   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1128901   +      GRP_AcceptedCmpTotal3 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmpTotal3 = 1;
1128902   +   end;
MPRINT(EM_DIAGRAM):   end;
1128903   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1128904   +      GRP_AcceptedCmpTotal3 = -1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmpTotal3 = -1;
1128905   +   end;
MPRINT(EM_DIAGRAM):   end;
1128906   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1128907   +      GRP_AcceptedCmpTotal3 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmpTotal3 = .;
1128908   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1128909   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1128910   +   end;
MPRINT(EM_DIAGRAM):   end;
1128911   +end;
MPRINT(EM_DIAGRAM):   end;
1128912   +
1128913   +*** Generate dummy variables for GRP_Frq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Frq ;
1128914   +drop GRP_Frq2 GRP_Frq3 GRP_Frq4 GRP_Frq5 GRP_Frq6 GRP_Frq7 GRP_Frq8 GRP_Frq9
1128915   +        GRP_Frq10 ;
MPRINT(EM_DIAGRAM):   drop GRP_Frq2 GRP_Frq3 GRP_Frq4 GRP_Frq5 GRP_Frq6 GRP_Frq7 GRP_Frq8
GRP_Frq9 GRP_Frq10 ;
1128916   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1128917   +GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
1128918   +GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
1128919   +GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
1128920   +GRP_Frq5 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq5 = 0;
1128921   +GRP_Frq6 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq6 = 0;
1128922   +GRP_Frq7 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq7 = 0;
1128923   +GRP_Frq8 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq8 = 0;
1128924   +GRP_Frq9 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq9 = 0;
1128925   +GRP_Frq10 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq10 = 0;
1128926   +if missing( GRP_Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Frq ) then do;
1128927   +   GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
1128928   +   GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
1128929   +   GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
1128930   +   GRP_Frq5 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq5 = .;
1128931   +   GRP_Frq6 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq6 = .;
1128932   +   GRP_Frq7 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq7 = .;
1128933   +   GRP_Frq8 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq8 = .;
1128934   +   GRP_Frq9 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq9 = .;
1128935   +   GRP_Frq10 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq10 = .;
1128936   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1128937   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1128938   +end;
MPRINT(EM_DIAGRAM):   end;
1128939   +else do;
MPRINT(EM_DIAGRAM):   else do;
1128940   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1128941   +   _dm12 = put( GRP_Frq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Frq , BEST12. );
1128942   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1128943   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1128944   +   if _dm12 <= '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '4' then do;
1128945   +      if _dm12 <= '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '2' then do;
1128946   +         if _dm12 <= '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '11' then do;
1128947   +            if _dm12 = '10'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '10' then do;
1128948   +               GRP_Frq10 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq10 = 1;
1128949   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1128950   +            end;
MPRINT(EM_DIAGRAM):   end;
1128951   +            else do;
MPRINT(EM_DIAGRAM):   else do;
1128952   +               if _dm12 = '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '11' then do;
1128953   +                  GRP_Frq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = -1;
1128954   +                  GRP_Frq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = -1;
1128955   +                  GRP_Frq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = -1;
1128956   +                  GRP_Frq5 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq5 = -1;
1128957   +                  GRP_Frq6 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq6 = -1;
1128958   +                  GRP_Frq7 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq7 = -1;
1128959   +                  GRP_Frq8 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq8 = -1;
1128960   +                  GRP_Frq9 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq9 = -1;
1128961   +                  GRP_Frq10 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq10 = -1;
1128962   +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1128963   +               end;
MPRINT(EM_DIAGRAM):   end;
1128964   +            end;
MPRINT(EM_DIAGRAM):   end;
1128965   +         end;
MPRINT(EM_DIAGRAM):   end;
1128966   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1128967   +            if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
1128968   +               GRP_Frq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 1;
1128969   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1128970   +            end;
MPRINT(EM_DIAGRAM):   end;
1128971   +         end;
MPRINT(EM_DIAGRAM):   end;
1128972   +      end;
MPRINT(EM_DIAGRAM):   end;
1128973   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1128974   +         if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1128975   +            GRP_Frq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 1;
1128976   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1128977   +         end;
MPRINT(EM_DIAGRAM):   end;
1128978   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1128979   +            if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
1128980   +               GRP_Frq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 1;
1128981   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1128982   +            end;
MPRINT(EM_DIAGRAM):   end;
1128983   +         end;
MPRINT(EM_DIAGRAM):   end;
1128984   +      end;
MPRINT(EM_DIAGRAM):   end;
1128985   +   end;
MPRINT(EM_DIAGRAM):   end;
1128986   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1128987   +      if _dm12 <= '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '7' then do;
1128988   +         if _dm12 <= '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '6' then do;
1128989   +            if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1128990   +               GRP_Frq5 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq5 = 1;
1128991   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1128992   +            end;
MPRINT(EM_DIAGRAM):   end;
1128993   +            else do;
MPRINT(EM_DIAGRAM):   else do;
1128994   +               if _dm12 = '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '6' then do;
1128995   +                  GRP_Frq6 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq6 = 1;
1128996   +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1128997   +               end;
MPRINT(EM_DIAGRAM):   end;
1128998   +            end;
MPRINT(EM_DIAGRAM):   end;
1128999   +         end;
MPRINT(EM_DIAGRAM):   end;
1129000   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1129001   +            if _dm12 = '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '7' then do;
1129002   +               GRP_Frq7 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq7 = 1;
1129003   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1129004   +            end;
MPRINT(EM_DIAGRAM):   end;
1129005   +         end;
MPRINT(EM_DIAGRAM):   end;
1129006   +      end;
MPRINT(EM_DIAGRAM):   end;
1129007   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1129008   +         if _dm12 = '8'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '8' then do;
1129009   +            GRP_Frq8 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq8 = 1;
1129010   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1129011   +         end;
MPRINT(EM_DIAGRAM):   end;
1129012   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1129013   +            if _dm12 = '9'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '9' then do;
1129014   +               GRP_Frq9 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq9 = 1;
1129015   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1129016   +            end;
MPRINT(EM_DIAGRAM):   end;
1129017   +         end;
MPRINT(EM_DIAGRAM):   end;
1129018   +      end;
MPRINT(EM_DIAGRAM):   end;
1129019   +   end;
MPRINT(EM_DIAGRAM):   end;
1129020   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1129021   +      GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
1129022   +      GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
1129023   +      GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
1129024   +      GRP_Frq5 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq5 = .;
1129025   +      GRP_Frq6 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq6 = .;
1129026   +      GRP_Frq7 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq7 = .;
1129027   +      GRP_Frq8 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq8 = .;
1129028   +      GRP_Frq9 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq9 = .;
1129029   +      GRP_Frq10 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq10 = .;
1129030   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1129031   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1129032   +   end;
MPRINT(EM_DIAGRAM):   end;
1129033   +end;
MPRINT(EM_DIAGRAM):   end;
1129034   +
1129035   +*** Generate dummy variables for GRP_Income ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Income ;
1129036   +drop GRP_Income2 GRP_Income3 GRP_Income4 GRP_Income5 GRP_Income6 GRP_Income7
1129037   +        GRP_Income8 GRP_Income9 GRP_Income10 ;
MPRINT(EM_DIAGRAM):   drop GRP_Income2 GRP_Income3 GRP_Income4 GRP_Income5 GRP_Income6
GRP_Income7 GRP_Income8 GRP_Income9 GRP_Income10 ;
1129038   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1129039   +GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
1129040   +GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
1129041   +GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
1129042   +GRP_Income5 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income5 = 0;
1129043   +GRP_Income6 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income6 = 0;
1129044   +GRP_Income7 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income7 = 0;
1129045   +GRP_Income8 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income8 = 0;
1129046   +GRP_Income9 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income9 = 0;
1129047   +GRP_Income10 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income10 = 0;
1129048   +if missing( GRP_Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Income ) then do;
1129049   +   GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
1129050   +   GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
1129051   +   GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
1129052   +   GRP_Income5 = .;
MPRINT(EM_DIAGRAM):   GRP_Income5 = .;
1129053   +   GRP_Income6 = .;
MPRINT(EM_DIAGRAM):   GRP_Income6 = .;
1129054   +   GRP_Income7 = .;
MPRINT(EM_DIAGRAM):   GRP_Income7 = .;
1129055   +   GRP_Income8 = .;
MPRINT(EM_DIAGRAM):   GRP_Income8 = .;
1129056   +   GRP_Income9 = .;
MPRINT(EM_DIAGRAM):   GRP_Income9 = .;
1129057   +   GRP_Income10 = .;
MPRINT(EM_DIAGRAM):   GRP_Income10 = .;
1129058   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1129059   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1129060   +end;
MPRINT(EM_DIAGRAM):   end;
1129061   +else do;
MPRINT(EM_DIAGRAM):   else do;
1129062   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1129063   +   _dm12 = put( GRP_Income , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Income , BEST12. );
1129064   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1129065   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1129066   +   if _dm12 <= '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '4' then do;
1129067   +      if _dm12 <= '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '2' then do;
1129068   +         if _dm12 <= '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '11' then do;
1129069   +            if _dm12 = '10'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '10' then do;
1129070   +               GRP_Income10 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income10 = 1;
1129071   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1129072   +            end;
MPRINT(EM_DIAGRAM):   end;
1129073   +            else do;
MPRINT(EM_DIAGRAM):   else do;
1129074   +               if _dm12 = '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '11' then do;
1129075   +                  GRP_Income2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = -1;
1129076   +                  GRP_Income3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = -1;
1129077   +                  GRP_Income4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = -1;
1129078   +                  GRP_Income5 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income5 = -1;
1129079   +                  GRP_Income6 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income6 = -1;
1129080   +                  GRP_Income7 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income7 = -1;
1129081   +                  GRP_Income8 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income8 = -1;
1129082   +                  GRP_Income9 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income9 = -1;
1129083   +                  GRP_Income10 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income10 = -1;
1129084   +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1129085   +               end;
MPRINT(EM_DIAGRAM):   end;
1129086   +            end;
MPRINT(EM_DIAGRAM):   end;
1129087   +         end;
MPRINT(EM_DIAGRAM):   end;
1129088   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1129089   +            if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
1129090   +               GRP_Income2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 1;
1129091   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1129092   +            end;
MPRINT(EM_DIAGRAM):   end;
1129093   +         end;
MPRINT(EM_DIAGRAM):   end;
1129094   +      end;
MPRINT(EM_DIAGRAM):   end;
1129095   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1129096   +         if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1129097   +            GRP_Income3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 1;
1129098   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1129099   +         end;
MPRINT(EM_DIAGRAM):   end;
1129100   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1129101   +            if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
1129102   +               GRP_Income4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 1;
1129103   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1129104   +            end;
MPRINT(EM_DIAGRAM):   end;
1129105   +         end;
MPRINT(EM_DIAGRAM):   end;
1129106   +      end;
MPRINT(EM_DIAGRAM):   end;
1129107   +   end;
MPRINT(EM_DIAGRAM):   end;
1129108   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1129109   +      if _dm12 <= '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '7' then do;
1129110   +         if _dm12 <= '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '6' then do;
1129111   +            if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1129112   +               GRP_Income5 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income5 = 1;
1129113   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1129114   +            end;
MPRINT(EM_DIAGRAM):   end;
1129115   +            else do;
MPRINT(EM_DIAGRAM):   else do;
1129116   +               if _dm12 = '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '6' then do;
1129117   +                  GRP_Income6 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income6 = 1;
1129118   +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1129119   +               end;
MPRINT(EM_DIAGRAM):   end;
1129120   +            end;
MPRINT(EM_DIAGRAM):   end;
1129121   +         end;
MPRINT(EM_DIAGRAM):   end;
1129122   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1129123   +            if _dm12 = '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '7' then do;
1129124   +               GRP_Income7 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income7 = 1;
1129125   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1129126   +            end;
MPRINT(EM_DIAGRAM):   end;
1129127   +         end;
MPRINT(EM_DIAGRAM):   end;
1129128   +      end;
MPRINT(EM_DIAGRAM):   end;
1129129   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1129130   +         if _dm12 = '8'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '8' then do;
1129131   +            GRP_Income8 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income8 = 1;
1129132   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1129133   +         end;
MPRINT(EM_DIAGRAM):   end;
1129134   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1129135   +            if _dm12 = '9'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '9' then do;
1129136   +               GRP_Income9 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income9 = 1;
1129137   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1129138   +            end;
MPRINT(EM_DIAGRAM):   end;
1129139   +         end;
MPRINT(EM_DIAGRAM):   end;
1129140   +      end;
MPRINT(EM_DIAGRAM):   end;
1129141   +   end;
MPRINT(EM_DIAGRAM):   end;
1129142   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1129143   +      GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
1129144   +      GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
1129145   +      GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
1129146   +      GRP_Income5 = .;
MPRINT(EM_DIAGRAM):   GRP_Income5 = .;
1129147   +      GRP_Income6 = .;
MPRINT(EM_DIAGRAM):   GRP_Income6 = .;
1129148   +      GRP_Income7 = .;
MPRINT(EM_DIAGRAM):   GRP_Income7 = .;
1129149   +      GRP_Income8 = .;
MPRINT(EM_DIAGRAM):   GRP_Income8 = .;
1129150   +      GRP_Income9 = .;
MPRINT(EM_DIAGRAM):   GRP_Income9 = .;
1129151   +      GRP_Income10 = .;
MPRINT(EM_DIAGRAM):   GRP_Income10 = .;
1129152   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1129153   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1129154   +   end;
MPRINT(EM_DIAGRAM):   end;
1129155   +end;
MPRINT(EM_DIAGRAM):   end;
1129156   +
1129157   +*** Generate dummy variables for GRP_Mnt ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Mnt ;
1129158   +drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 GRP_Mnt5 GRP_Mnt6 GRP_Mnt7 GRP_Mnt8 GRP_Mnt9
1129159   +        GRP_Mnt10 ;
MPRINT(EM_DIAGRAM):   drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 GRP_Mnt5 GRP_Mnt6 GRP_Mnt7 GRP_Mnt8
GRP_Mnt9 GRP_Mnt10 ;
1129160   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1129161   +GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
1129162   +GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
1129163   +GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
1129164   +GRP_Mnt5 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt5 = 0;
1129165   +GRP_Mnt6 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt6 = 0;
1129166   +GRP_Mnt7 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt7 = 0;
1129167   +GRP_Mnt8 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt8 = 0;
1129168   +GRP_Mnt9 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt9 = 0;
1129169   +GRP_Mnt10 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt10 = 0;
1129170   +if missing( GRP_Mnt ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Mnt ) then do;
1129171   +   GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
1129172   +   GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
1129173   +   GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
1129174   +   GRP_Mnt5 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt5 = .;
1129175   +   GRP_Mnt6 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt6 = .;
1129176   +   GRP_Mnt7 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt7 = .;
1129177   +   GRP_Mnt8 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt8 = .;
1129178   +   GRP_Mnt9 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt9 = .;
1129179   +   GRP_Mnt10 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt10 = .;
1129180   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1129181   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1129182   +end;
MPRINT(EM_DIAGRAM):   end;
1129183   +else do;
MPRINT(EM_DIAGRAM):   else do;
1129184   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1129185   +   _dm12 = put( GRP_Mnt , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Mnt , BEST12. );
1129186   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1129187   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1129188   +   if _dm12 <= '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '4' then do;
1129189   +      if _dm12 <= '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '2' then do;
1129190   +         if _dm12 <= '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '11' then do;
1129191   +            if _dm12 = '10'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '10' then do;
1129192   +               GRP_Mnt10 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt10 = 1;
1129193   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1129194   +            end;
MPRINT(EM_DIAGRAM):   end;
1129195   +            else do;
MPRINT(EM_DIAGRAM):   else do;
1129196   +               if _dm12 = '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '11' then do;
1129197   +                  GRP_Mnt2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = -1;
1129198   +                  GRP_Mnt3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = -1;
1129199   +                  GRP_Mnt4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = -1;
1129200   +                  GRP_Mnt5 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt5 = -1;
1129201   +                  GRP_Mnt6 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt6 = -1;
1129202   +                  GRP_Mnt7 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt7 = -1;
1129203   +                  GRP_Mnt8 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt8 = -1;
1129204   +                  GRP_Mnt9 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt9 = -1;
1129205   +                  GRP_Mnt10 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt10 = -1;
1129206   +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1129207   +               end;
MPRINT(EM_DIAGRAM):   end;
1129208   +            end;
MPRINT(EM_DIAGRAM):   end;
1129209   +         end;
MPRINT(EM_DIAGRAM):   end;
1129210   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1129211   +            if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
1129212   +               GRP_Mnt2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 1;
1129213   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1129214   +            end;
MPRINT(EM_DIAGRAM):   end;
1129215   +         end;
MPRINT(EM_DIAGRAM):   end;
1129216   +      end;
MPRINT(EM_DIAGRAM):   end;
1129217   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1129218   +         if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1129219   +            GRP_Mnt3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 1;
1129220   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1129221   +         end;
MPRINT(EM_DIAGRAM):   end;
1129222   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1129223   +            if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
1129224   +               GRP_Mnt4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 1;
1129225   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1129226   +            end;
MPRINT(EM_DIAGRAM):   end;
1129227   +         end;
MPRINT(EM_DIAGRAM):   end;
1129228   +      end;
MPRINT(EM_DIAGRAM):   end;
1129229   +   end;
MPRINT(EM_DIAGRAM):   end;
1129230   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1129231   +      if _dm12 <= '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '7' then do;
1129232   +         if _dm12 <= '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '6' then do;
1129233   +            if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1129234   +               GRP_Mnt5 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt5 = 1;
1129235   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1129236   +            end;
MPRINT(EM_DIAGRAM):   end;
1129237   +            else do;
MPRINT(EM_DIAGRAM):   else do;
1129238   +               if _dm12 = '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '6' then do;
1129239   +                  GRP_Mnt6 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt6 = 1;
1129240   +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1129241   +               end;
MPRINT(EM_DIAGRAM):   end;
1129242   +            end;
MPRINT(EM_DIAGRAM):   end;
1129243   +         end;
MPRINT(EM_DIAGRAM):   end;
1129244   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1129245   +            if _dm12 = '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '7' then do;
1129246   +               GRP_Mnt7 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt7 = 1;
1129247   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1129248   +            end;
MPRINT(EM_DIAGRAM):   end;
1129249   +         end;
MPRINT(EM_DIAGRAM):   end;
1129250   +      end;
MPRINT(EM_DIAGRAM):   end;
1129251   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1129252   +         if _dm12 = '8'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '8' then do;
1129253   +            GRP_Mnt8 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt8 = 1;
1129254   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1129255   +         end;
MPRINT(EM_DIAGRAM):   end;
1129256   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1129257   +            if _dm12 = '9'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '9' then do;
1129258   +               GRP_Mnt9 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt9 = 1;
1129259   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1129260   +            end;
MPRINT(EM_DIAGRAM):   end;
1129261   +         end;
MPRINT(EM_DIAGRAM):   end;
1129262   +      end;
MPRINT(EM_DIAGRAM):   end;
1129263   +   end;
MPRINT(EM_DIAGRAM):   end;
1129264   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1129265   +      GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
1129266   +      GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
1129267   +      GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
1129268   +      GRP_Mnt5 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt5 = .;
1129269   +      GRP_Mnt6 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt6 = .;
1129270   +      GRP_Mnt7 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt7 = .;
1129271   +      GRP_Mnt8 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt8 = .;
1129272   +      GRP_Mnt9 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt9 = .;
1129273   +      GRP_Mnt10 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt10 = .;
1129274   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1129275   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1129276   +   end;
MPRINT(EM_DIAGRAM):   end;
1129277   +end;
MPRINT(EM_DIAGRAM):   end;
1129278   +
1129279   +*** Generate dummy variables for GRP_MntFishProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntFishProducts ;
1129280   +drop GRP_MntFishProducts3 GRP_MntFishProducts4 GRP_MntFishProducts5
1129281   +        GRP_MntFishProducts6 GRP_MntFishProducts7 GRP_MntFishProducts8
1129282   +        GRP_MntFishProducts9 GRP_MntFishProducts10 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntFishProducts3 GRP_MntFishProducts4 GRP_MntFishProducts5
GRP_MntFishProducts6 GRP_MntFishProducts7 GRP_MntFishProducts8 GRP_MntFishProducts9
GRP_MntFishProducts10 ;
1129283   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1129284   +GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
1129285   +GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
1129286   +GRP_MntFishProducts5 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts5 = 0;
1129287   +GRP_MntFishProducts6 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts6 = 0;
1129288   +GRP_MntFishProducts7 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts7 = 0;
1129289   +GRP_MntFishProducts8 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts8 = 0;
1129290   +GRP_MntFishProducts9 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts9 = 0;
1129291   +GRP_MntFishProducts10 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts10 = 0;
1129292   +if missing( GRP_MntFishProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntFishProducts ) then do;
1129293   +   GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
1129294   +   GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
1129295   +   GRP_MntFishProducts5 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts5 = .;
1129296   +   GRP_MntFishProducts6 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts6 = .;
1129297   +   GRP_MntFishProducts7 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts7 = .;
1129298   +   GRP_MntFishProducts8 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts8 = .;
1129299   +   GRP_MntFishProducts9 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts9 = .;
1129300   +   GRP_MntFishProducts10 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts10 = .;
1129301   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1129302   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1129303   +end;
MPRINT(EM_DIAGRAM):   end;
1129304   +else do;
MPRINT(EM_DIAGRAM):   else do;
1129305   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1129306   +   _dm12 = put( GRP_MntFishProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntFishProducts , BEST12. );
1129307   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1129308   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1129309   +   if _dm12 <= '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '5' then do;
1129310   +      if _dm12 <= '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '3' then do;
1129311   +         if _dm12 <= '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '11' then do;
1129312   +            if _dm12 = '10'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '10' then do;
1129313   +               GRP_MntFishProducts10 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts10 = 1;
1129314   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1129315   +            end;
MPRINT(EM_DIAGRAM):   end;
1129316   +            else do;
MPRINT(EM_DIAGRAM):   else do;
1129317   +               if _dm12 = '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '11' then do;
1129318   +                  GRP_MntFishProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = -1;
1129319   +                  GRP_MntFishProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = -1;
1129320   +                  GRP_MntFishProducts5 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts5 = -1;
1129321   +                  GRP_MntFishProducts6 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts6 = -1;
1129322   +                  GRP_MntFishProducts7 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts7 = -1;
1129323   +                  GRP_MntFishProducts8 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts8 = -1;
1129324   +                  GRP_MntFishProducts9 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts9 = -1;
1129325   +                  GRP_MntFishProducts10 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts10 = -1;
1129326   +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1129327   +               end;
MPRINT(EM_DIAGRAM):   end;
1129328   +            end;
MPRINT(EM_DIAGRAM):   end;
1129329   +         end;
MPRINT(EM_DIAGRAM):   end;
1129330   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1129331   +            if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1129332   +               GRP_MntFishProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 1;
1129333   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1129334   +            end;
MPRINT(EM_DIAGRAM):   end;
1129335   +         end;
MPRINT(EM_DIAGRAM):   end;
1129336   +      end;
MPRINT(EM_DIAGRAM):   end;
1129337   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1129338   +         if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
1129339   +            GRP_MntFishProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 1;
1129340   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1129341   +         end;
MPRINT(EM_DIAGRAM):   end;
1129342   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1129343   +            if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1129344   +               GRP_MntFishProducts5 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts5 = 1;
1129345   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1129346   +            end;
MPRINT(EM_DIAGRAM):   end;
1129347   +         end;
MPRINT(EM_DIAGRAM):   end;
1129348   +      end;
MPRINT(EM_DIAGRAM):   end;
1129349   +   end;
MPRINT(EM_DIAGRAM):   end;
1129350   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1129351   +      if _dm12 <= '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '7' then do;
1129352   +         if _dm12 = '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '6' then do;
1129353   +            GRP_MntFishProducts6 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts6 = 1;
1129354   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1129355   +         end;
MPRINT(EM_DIAGRAM):   end;
1129356   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1129357   +            if _dm12 = '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '7' then do;
1129358   +               GRP_MntFishProducts7 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts7 = 1;
1129359   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1129360   +            end;
MPRINT(EM_DIAGRAM):   end;
1129361   +         end;
MPRINT(EM_DIAGRAM):   end;
1129362   +      end;
MPRINT(EM_DIAGRAM):   end;
1129363   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1129364   +         if _dm12 = '8'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '8' then do;
1129365   +            GRP_MntFishProducts8 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts8 = 1;
1129366   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1129367   +         end;
MPRINT(EM_DIAGRAM):   end;
1129368   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1129369   +            if _dm12 = '9'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '9' then do;
1129370   +               GRP_MntFishProducts9 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts9 = 1;
1129371   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1129372   +            end;
MPRINT(EM_DIAGRAM):   end;
1129373   +         end;
MPRINT(EM_DIAGRAM):   end;
1129374   +      end;
MPRINT(EM_DIAGRAM):   end;
1129375   +   end;
MPRINT(EM_DIAGRAM):   end;
1129376   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1129377   +      GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
1129378   +      GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
1129379   +      GRP_MntFishProducts5 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts5 = .;
1129380   +      GRP_MntFishProducts6 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts6 = .;
1129381   +      GRP_MntFishProducts7 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts7 = .;
1129382   +      GRP_MntFishProducts8 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts8 = .;
1129383   +      GRP_MntFishProducts9 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts9 = .;
1129384   +      GRP_MntFishProducts10 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts10 = .;
1129385   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1129386   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1129387   +   end;
MPRINT(EM_DIAGRAM):   end;
1129388   +end;
MPRINT(EM_DIAGRAM):   end;
1129389   +
1129390   +*** Generate dummy variables for GRP_MntGoldProds ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntGoldProds ;
1129391   +drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 GRP_MntGoldProds5
1129392   +        GRP_MntGoldProds6 GRP_MntGoldProds7 GRP_MntGoldProds8
1129393   +        GRP_MntGoldProds9 GRP_MntGoldProds10 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4
GRP_MntGoldProds5 GRP_MntGoldProds6 GRP_MntGoldProds7 GRP_MntGoldProds8 GRP_MntGoldProds9
GRP_MntGoldProds10 ;
1129394   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1129395   +GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
1129396   +GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
1129397   +GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
1129398   +GRP_MntGoldProds5 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds5 = 0;
1129399   +GRP_MntGoldProds6 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds6 = 0;
1129400   +GRP_MntGoldProds7 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds7 = 0;
1129401   +GRP_MntGoldProds8 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds8 = 0;
1129402   +GRP_MntGoldProds9 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds9 = 0;
1129403   +GRP_MntGoldProds10 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds10 = 0;
1129404   +if missing( GRP_MntGoldProds ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntGoldProds ) then do;
1129405   +   GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
1129406   +   GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
1129407   +   GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
1129408   +   GRP_MntGoldProds5 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds5 = .;
1129409   +   GRP_MntGoldProds6 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds6 = .;
1129410   +   GRP_MntGoldProds7 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds7 = .;
1129411   +   GRP_MntGoldProds8 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds8 = .;
1129412   +   GRP_MntGoldProds9 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds9 = .;
1129413   +   GRP_MntGoldProds10 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds10 = .;
1129414   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1129415   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1129416   +end;
MPRINT(EM_DIAGRAM):   end;
1129417   +else do;
MPRINT(EM_DIAGRAM):   else do;
1129418   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1129419   +   _dm12 = put( GRP_MntGoldProds , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntGoldProds , BEST12. );
1129420   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1129421   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1129422   +   if _dm12 <= '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '4' then do;
1129423   +      if _dm12 <= '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '2' then do;
1129424   +         if _dm12 <= '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '11' then do;
1129425   +            if _dm12 = '10'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '10' then do;
1129426   +               GRP_MntGoldProds10 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds10 = 1;
1129427   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1129428   +            end;
MPRINT(EM_DIAGRAM):   end;
1129429   +            else do;
MPRINT(EM_DIAGRAM):   else do;
1129430   +               if _dm12 = '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '11' then do;
1129431   +                  GRP_MntGoldProds2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = -1;
1129432   +                  GRP_MntGoldProds3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = -1;
1129433   +                  GRP_MntGoldProds4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = -1;
1129434   +                  GRP_MntGoldProds5 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds5 = -1;
1129435   +                  GRP_MntGoldProds6 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds6 = -1;
1129436   +                  GRP_MntGoldProds7 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds7 = -1;
1129437   +                  GRP_MntGoldProds8 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds8 = -1;
1129438   +                  GRP_MntGoldProds9 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds9 = -1;
1129439   +                  GRP_MntGoldProds10 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds10 = -1;
1129440   +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1129441   +               end;
MPRINT(EM_DIAGRAM):   end;
1129442   +            end;
MPRINT(EM_DIAGRAM):   end;
1129443   +         end;
MPRINT(EM_DIAGRAM):   end;
1129444   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1129445   +            if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
1129446   +               GRP_MntGoldProds2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 1;
1129447   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1129448   +            end;
MPRINT(EM_DIAGRAM):   end;
1129449   +         end;
MPRINT(EM_DIAGRAM):   end;
1129450   +      end;
MPRINT(EM_DIAGRAM):   end;
1129451   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1129452   +         if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1129453   +            GRP_MntGoldProds3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 1;
1129454   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1129455   +         end;
MPRINT(EM_DIAGRAM):   end;
1129456   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1129457   +            if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
1129458   +               GRP_MntGoldProds4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 1;
1129459   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1129460   +            end;
MPRINT(EM_DIAGRAM):   end;
1129461   +         end;
MPRINT(EM_DIAGRAM):   end;
1129462   +      end;
MPRINT(EM_DIAGRAM):   end;
1129463   +   end;
MPRINT(EM_DIAGRAM):   end;
1129464   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1129465   +      if _dm12 <= '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '7' then do;
1129466   +         if _dm12 <= '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '6' then do;
1129467   +            if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1129468   +               GRP_MntGoldProds5 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds5 = 1;
1129469   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1129470   +            end;
MPRINT(EM_DIAGRAM):   end;
1129471   +            else do;
MPRINT(EM_DIAGRAM):   else do;
1129472   +               if _dm12 = '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '6' then do;
1129473   +                  GRP_MntGoldProds6 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds6 = 1;
1129474   +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1129475   +               end;
MPRINT(EM_DIAGRAM):   end;
1129476   +            end;
MPRINT(EM_DIAGRAM):   end;
1129477   +         end;
MPRINT(EM_DIAGRAM):   end;
1129478   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1129479   +            if _dm12 = '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '7' then do;
1129480   +               GRP_MntGoldProds7 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds7 = 1;
1129481   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1129482   +            end;
MPRINT(EM_DIAGRAM):   end;
1129483   +         end;
MPRINT(EM_DIAGRAM):   end;
1129484   +      end;
MPRINT(EM_DIAGRAM):   end;
1129485   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1129486   +         if _dm12 = '8'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '8' then do;
1129487   +            GRP_MntGoldProds8 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds8 = 1;
1129488   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1129489   +         end;
MPRINT(EM_DIAGRAM):   end;
1129490   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1129491   +            if _dm12 = '9'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '9' then do;
1129492   +               GRP_MntGoldProds9 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds9 = 1;
1129493   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1129494   +            end;
MPRINT(EM_DIAGRAM):   end;
1129495   +         end;
MPRINT(EM_DIAGRAM):   end;
1129496   +      end;
MPRINT(EM_DIAGRAM):   end;
1129497   +   end;
MPRINT(EM_DIAGRAM):   end;
1129498   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1129499   +      GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
1129500   +      GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
1129501   +      GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
1129502   +      GRP_MntGoldProds5 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds5 = .;
1129503   +      GRP_MntGoldProds6 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds6 = .;
1129504   +      GRP_MntGoldProds7 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds7 = .;
1129505   +      GRP_MntGoldProds8 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds8 = .;
1129506   +      GRP_MntGoldProds9 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds9 = .;
1129507   +      GRP_MntGoldProds10 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds10 = .;
1129508   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1129509   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1129510   +   end;
MPRINT(EM_DIAGRAM):   end;
1129511   +end;
MPRINT(EM_DIAGRAM):   end;
1129512   +
1129513   +*** Generate dummy variables for GRP_MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntMeatProducts ;
1129514   +drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4
1129515   +        GRP_MntMeatProducts5 GRP_MntMeatProducts6 GRP_MntMeatProducts7
1129516   +        GRP_MntMeatProducts8 GRP_MntMeatProducts9 GRP_MntMeatProducts10 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4
GRP_MntMeatProducts5 GRP_MntMeatProducts6 GRP_MntMeatProducts7 GRP_MntMeatProducts8
GRP_MntMeatProducts9 GRP_MntMeatProducts10 ;
1129517   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1129518   +GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
1129519   +GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
1129520   +GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
1129521   +GRP_MntMeatProducts5 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts5 = 0;
1129522   +GRP_MntMeatProducts6 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts6 = 0;
1129523   +GRP_MntMeatProducts7 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts7 = 0;
1129524   +GRP_MntMeatProducts8 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts8 = 0;
1129525   +GRP_MntMeatProducts9 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts9 = 0;
1129526   +GRP_MntMeatProducts10 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts10 = 0;
1129527   +if missing( GRP_MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntMeatProducts ) then do;
1129528   +   GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
1129529   +   GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
1129530   +   GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
1129531   +   GRP_MntMeatProducts5 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts5 = .;
1129532   +   GRP_MntMeatProducts6 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts6 = .;
1129533   +   GRP_MntMeatProducts7 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts7 = .;
1129534   +   GRP_MntMeatProducts8 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts8 = .;
1129535   +   GRP_MntMeatProducts9 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts9 = .;
1129536   +   GRP_MntMeatProducts10 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts10 = .;
1129537   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1129538   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1129539   +end;
MPRINT(EM_DIAGRAM):   end;
1129540   +else do;
MPRINT(EM_DIAGRAM):   else do;
1129541   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1129542   +   _dm12 = put( GRP_MntMeatProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntMeatProducts , BEST12. );
1129543   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1129544   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1129545   +   if _dm12 <= '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '4' then do;
1129546   +      if _dm12 <= '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '2' then do;
1129547   +         if _dm12 <= '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '11' then do;
1129548   +            if _dm12 = '10'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '10' then do;
1129549   +               GRP_MntMeatProducts10 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts10 = 1;
1129550   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1129551   +            end;
MPRINT(EM_DIAGRAM):   end;
1129552   +            else do;
MPRINT(EM_DIAGRAM):   else do;
1129553   +               if _dm12 = '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '11' then do;
1129554   +                  GRP_MntMeatProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = -1;
1129555   +                  GRP_MntMeatProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = -1;
1129556   +                  GRP_MntMeatProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = -1;
1129557   +                  GRP_MntMeatProducts5 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts5 = -1;
1129558   +                  GRP_MntMeatProducts6 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts6 = -1;
1129559   +                  GRP_MntMeatProducts7 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts7 = -1;
1129560   +                  GRP_MntMeatProducts8 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts8 = -1;
1129561   +                  GRP_MntMeatProducts9 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts9 = -1;
1129562   +                  GRP_MntMeatProducts10 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts10 = -1;
1129563   +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1129564   +               end;
MPRINT(EM_DIAGRAM):   end;
1129565   +            end;
MPRINT(EM_DIAGRAM):   end;
1129566   +         end;
MPRINT(EM_DIAGRAM):   end;
1129567   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1129568   +            if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
1129569   +               GRP_MntMeatProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 1;
1129570   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1129571   +            end;
MPRINT(EM_DIAGRAM):   end;
1129572   +         end;
MPRINT(EM_DIAGRAM):   end;
1129573   +      end;
MPRINT(EM_DIAGRAM):   end;
1129574   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1129575   +         if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1129576   +            GRP_MntMeatProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 1;
1129577   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1129578   +         end;
MPRINT(EM_DIAGRAM):   end;
1129579   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1129580   +            if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
1129581   +               GRP_MntMeatProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 1;
1129582   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1129583   +            end;
MPRINT(EM_DIAGRAM):   end;
1129584   +         end;
MPRINT(EM_DIAGRAM):   end;
1129585   +      end;
MPRINT(EM_DIAGRAM):   end;
1129586   +   end;
MPRINT(EM_DIAGRAM):   end;
1129587   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1129588   +      if _dm12 <= '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '7' then do;
1129589   +         if _dm12 <= '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '6' then do;
1129590   +            if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1129591   +               GRP_MntMeatProducts5 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts5 = 1;
1129592   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1129593   +            end;
MPRINT(EM_DIAGRAM):   end;
1129594   +            else do;
MPRINT(EM_DIAGRAM):   else do;
1129595   +               if _dm12 = '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '6' then do;
1129596   +                  GRP_MntMeatProducts6 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts6 = 1;
1129597   +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1129598   +               end;
MPRINT(EM_DIAGRAM):   end;
1129599   +            end;
MPRINT(EM_DIAGRAM):   end;
1129600   +         end;
MPRINT(EM_DIAGRAM):   end;
1129601   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1129602   +            if _dm12 = '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '7' then do;
1129603   +               GRP_MntMeatProducts7 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts7 = 1;
1129604   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1129605   +            end;
MPRINT(EM_DIAGRAM):   end;
1129606   +         end;
MPRINT(EM_DIAGRAM):   end;
1129607   +      end;
MPRINT(EM_DIAGRAM):   end;
1129608   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1129609   +         if _dm12 = '8'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '8' then do;
1129610   +            GRP_MntMeatProducts8 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts8 = 1;
1129611   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1129612   +         end;
MPRINT(EM_DIAGRAM):   end;
1129613   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1129614   +            if _dm12 = '9'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '9' then do;
1129615   +               GRP_MntMeatProducts9 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts9 = 1;
1129616   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1129617   +            end;
MPRINT(EM_DIAGRAM):   end;
1129618   +         end;
MPRINT(EM_DIAGRAM):   end;
1129619   +      end;
MPRINT(EM_DIAGRAM):   end;
1129620   +   end;
MPRINT(EM_DIAGRAM):   end;
1129621   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1129622   +      GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
1129623   +      GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
1129624   +      GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
1129625   +      GRP_MntMeatProducts5 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts5 = .;
1129626   +      GRP_MntMeatProducts6 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts6 = .;
1129627   +      GRP_MntMeatProducts7 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts7 = .;
1129628   +      GRP_MntMeatProducts8 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts8 = .;
1129629   +      GRP_MntMeatProducts9 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts9 = .;
1129630   +      GRP_MntMeatProducts10 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts10 = .;
1129631   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1129632   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1129633   +   end;
MPRINT(EM_DIAGRAM):   end;
1129634   +end;
MPRINT(EM_DIAGRAM):   end;
1129635   +
1129636   +*** Generate dummy variables for GRP_MntSweetProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntSweetProducts ;
1129637   +drop GRP_MntSweetProducts3 GRP_MntSweetProducts4 GRP_MntSweetProducts5
1129638   +        GRP_MntSweetProducts6 GRP_MntSweetProducts7 GRP_MntSweetProducts8
1129639   +        GRP_MntSweetProducts9 GRP_MntSweetProducts10 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntSweetProducts3 GRP_MntSweetProducts4 GRP_MntSweetProducts5
GRP_MntSweetProducts6 GRP_MntSweetProducts7 GRP_MntSweetProducts8 GRP_MntSweetProducts9
GRP_MntSweetProducts10 ;
1129640   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1129641   +GRP_MntSweetProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts3 = 0;
1129642   +GRP_MntSweetProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts4 = 0;
1129643   +GRP_MntSweetProducts5 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts5 = 0;
1129644   +GRP_MntSweetProducts6 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts6 = 0;
1129645   +GRP_MntSweetProducts7 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts7 = 0;
1129646   +GRP_MntSweetProducts8 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts8 = 0;
1129647   +GRP_MntSweetProducts9 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts9 = 0;
1129648   +GRP_MntSweetProducts10 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts10 = 0;
1129649   +if missing( GRP_MntSweetProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntSweetProducts ) then do;
1129650   +   GRP_MntSweetProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts3 = .;
1129651   +   GRP_MntSweetProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts4 = .;
1129652   +   GRP_MntSweetProducts5 = .;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts5 = .;
1129653   +   GRP_MntSweetProducts6 = .;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts6 = .;
1129654   +   GRP_MntSweetProducts7 = .;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts7 = .;
1129655   +   GRP_MntSweetProducts8 = .;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts8 = .;
1129656   +   GRP_MntSweetProducts9 = .;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts9 = .;
1129657   +   GRP_MntSweetProducts10 = .;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts10 = .;
1129658   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1129659   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1129660   +end;
MPRINT(EM_DIAGRAM):   end;
1129661   +else do;
MPRINT(EM_DIAGRAM):   else do;
1129662   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1129663   +   _dm12 = put( GRP_MntSweetProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntSweetProducts , BEST12. );
1129664   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1129665   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1129666   +   if _dm12 <= '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '5' then do;
1129667   +      if _dm12 <= '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '3' then do;
1129668   +         if _dm12 <= '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '11' then do;
1129669   +            if _dm12 = '10'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '10' then do;
1129670   +               GRP_MntSweetProducts10 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts10 = 1;
1129671   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1129672   +            end;
MPRINT(EM_DIAGRAM):   end;
1129673   +            else do;
MPRINT(EM_DIAGRAM):   else do;
1129674   +               if _dm12 = '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '11' then do;
1129675   +                  GRP_MntSweetProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts3 = -1;
1129676   +                  GRP_MntSweetProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts4 = -1;
1129677   +                  GRP_MntSweetProducts5 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts5 = -1;
1129678   +                  GRP_MntSweetProducts6 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts6 = -1;
1129679   +                  GRP_MntSweetProducts7 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts7 = -1;
1129680   +                  GRP_MntSweetProducts8 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts8 = -1;
1129681   +                  GRP_MntSweetProducts9 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts9 = -1;
1129682   +                  GRP_MntSweetProducts10 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts10 = -1;
1129683   +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1129684   +               end;
MPRINT(EM_DIAGRAM):   end;
1129685   +            end;
MPRINT(EM_DIAGRAM):   end;
1129686   +         end;
MPRINT(EM_DIAGRAM):   end;
1129687   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1129688   +            if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1129689   +               GRP_MntSweetProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts3 = 1;
1129690   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1129691   +            end;
MPRINT(EM_DIAGRAM):   end;
1129692   +         end;
MPRINT(EM_DIAGRAM):   end;
1129693   +      end;
MPRINT(EM_DIAGRAM):   end;
1129694   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1129695   +         if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
1129696   +            GRP_MntSweetProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts4 = 1;
1129697   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1129698   +         end;
MPRINT(EM_DIAGRAM):   end;
1129699   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1129700   +            if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1129701   +               GRP_MntSweetProducts5 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts5 = 1;
1129702   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1129703   +            end;
MPRINT(EM_DIAGRAM):   end;
1129704   +         end;
MPRINT(EM_DIAGRAM):   end;
1129705   +      end;
MPRINT(EM_DIAGRAM):   end;
1129706   +   end;
MPRINT(EM_DIAGRAM):   end;
1129707   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1129708   +      if _dm12 <= '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '7' then do;
1129709   +         if _dm12 = '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '6' then do;
1129710   +            GRP_MntSweetProducts6 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts6 = 1;
1129711   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1129712   +         end;
MPRINT(EM_DIAGRAM):   end;
1129713   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1129714   +            if _dm12 = '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '7' then do;
1129715   +               GRP_MntSweetProducts7 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts7 = 1;
1129716   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1129717   +            end;
MPRINT(EM_DIAGRAM):   end;
1129718   +         end;
MPRINT(EM_DIAGRAM):   end;
1129719   +      end;
MPRINT(EM_DIAGRAM):   end;
1129720   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1129721   +         if _dm12 = '8'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '8' then do;
1129722   +            GRP_MntSweetProducts8 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts8 = 1;
1129723   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1129724   +         end;
MPRINT(EM_DIAGRAM):   end;
1129725   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1129726   +            if _dm12 = '9'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '9' then do;
1129727   +               GRP_MntSweetProducts9 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts9 = 1;
1129728   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1129729   +            end;
MPRINT(EM_DIAGRAM):   end;
1129730   +         end;
MPRINT(EM_DIAGRAM):   end;
1129731   +      end;
MPRINT(EM_DIAGRAM):   end;
1129732   +   end;
MPRINT(EM_DIAGRAM):   end;
1129733   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1129734   +      GRP_MntSweetProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts3 = .;
1129735   +      GRP_MntSweetProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts4 = .;
1129736   +      GRP_MntSweetProducts5 = .;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts5 = .;
1129737   +      GRP_MntSweetProducts6 = .;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts6 = .;
1129738   +      GRP_MntSweetProducts7 = .;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts7 = .;
1129739   +      GRP_MntSweetProducts8 = .;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts8 = .;
1129740   +      GRP_MntSweetProducts9 = .;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts9 = .;
1129741   +      GRP_MntSweetProducts10 = .;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts10 = .;
1129742   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1129743   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1129744   +   end;
MPRINT(EM_DIAGRAM):   end;
1129745   +end;
MPRINT(EM_DIAGRAM):   end;
1129746   +
1129747   +*** Generate dummy variables for GRP_MntWines ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntWines ;
1129748   +drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 GRP_MntWines5 GRP_MntWines6
1129749   +        GRP_MntWines7 GRP_MntWines8 GRP_MntWines9 GRP_MntWines10 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 GRP_MntWines5
GRP_MntWines6 GRP_MntWines7 GRP_MntWines8 GRP_MntWines9 GRP_MntWines10 ;
1129750   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1129751   +GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
1129752   +GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
1129753   +GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
1129754   +GRP_MntWines5 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines5 = 0;
1129755   +GRP_MntWines6 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines6 = 0;
1129756   +GRP_MntWines7 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines7 = 0;
1129757   +GRP_MntWines8 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines8 = 0;
1129758   +GRP_MntWines9 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines9 = 0;
1129759   +GRP_MntWines10 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines10 = 0;
1129760   +if missing( GRP_MntWines ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntWines ) then do;
1129761   +   GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
1129762   +   GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
1129763   +   GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
1129764   +   GRP_MntWines5 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines5 = .;
1129765   +   GRP_MntWines6 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines6 = .;
1129766   +   GRP_MntWines7 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines7 = .;
1129767   +   GRP_MntWines8 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines8 = .;
1129768   +   GRP_MntWines9 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines9 = .;
1129769   +   GRP_MntWines10 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines10 = .;
1129770   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1129771   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1129772   +end;
MPRINT(EM_DIAGRAM):   end;
1129773   +else do;
MPRINT(EM_DIAGRAM):   else do;
1129774   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1129775   +   _dm12 = put( GRP_MntWines , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntWines , BEST12. );
1129776   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1129777   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1129778   +   if _dm12 <= '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '4' then do;
1129779   +      if _dm12 <= '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '2' then do;
1129780   +         if _dm12 <= '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '11' then do;
1129781   +            if _dm12 = '10'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '10' then do;
1129782   +               GRP_MntWines10 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines10 = 1;
1129783   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1129784   +            end;
MPRINT(EM_DIAGRAM):   end;
1129785   +            else do;
MPRINT(EM_DIAGRAM):   else do;
1129786   +               if _dm12 = '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '11' then do;
1129787   +                  GRP_MntWines2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = -1;
1129788   +                  GRP_MntWines3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = -1;
1129789   +                  GRP_MntWines4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = -1;
1129790   +                  GRP_MntWines5 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines5 = -1;
1129791   +                  GRP_MntWines6 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines6 = -1;
1129792   +                  GRP_MntWines7 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines7 = -1;
1129793   +                  GRP_MntWines8 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines8 = -1;
1129794   +                  GRP_MntWines9 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines9 = -1;
1129795   +                  GRP_MntWines10 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines10 = -1;
1129796   +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1129797   +               end;
MPRINT(EM_DIAGRAM):   end;
1129798   +            end;
MPRINT(EM_DIAGRAM):   end;
1129799   +         end;
MPRINT(EM_DIAGRAM):   end;
1129800   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1129801   +            if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
1129802   +               GRP_MntWines2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 1;
1129803   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1129804   +            end;
MPRINT(EM_DIAGRAM):   end;
1129805   +         end;
MPRINT(EM_DIAGRAM):   end;
1129806   +      end;
MPRINT(EM_DIAGRAM):   end;
1129807   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1129808   +         if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1129809   +            GRP_MntWines3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 1;
1129810   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1129811   +         end;
MPRINT(EM_DIAGRAM):   end;
1129812   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1129813   +            if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
1129814   +               GRP_MntWines4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 1;
1129815   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1129816   +            end;
MPRINT(EM_DIAGRAM):   end;
1129817   +         end;
MPRINT(EM_DIAGRAM):   end;
1129818   +      end;
MPRINT(EM_DIAGRAM):   end;
1129819   +   end;
MPRINT(EM_DIAGRAM):   end;
1129820   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1129821   +      if _dm12 <= '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '7' then do;
1129822   +         if _dm12 <= '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '6' then do;
1129823   +            if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1129824   +               GRP_MntWines5 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines5 = 1;
1129825   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1129826   +            end;
MPRINT(EM_DIAGRAM):   end;
1129827   +            else do;
MPRINT(EM_DIAGRAM):   else do;
1129828   +               if _dm12 = '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '6' then do;
1129829   +                  GRP_MntWines6 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines6 = 1;
1129830   +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1129831   +               end;
MPRINT(EM_DIAGRAM):   end;
1129832   +            end;
MPRINT(EM_DIAGRAM):   end;
1129833   +         end;
MPRINT(EM_DIAGRAM):   end;
1129834   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1129835   +            if _dm12 = '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '7' then do;
1129836   +               GRP_MntWines7 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines7 = 1;
1129837   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1129838   +            end;
MPRINT(EM_DIAGRAM):   end;
1129839   +         end;
MPRINT(EM_DIAGRAM):   end;
1129840   +      end;
MPRINT(EM_DIAGRAM):   end;
1129841   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1129842   +         if _dm12 = '8'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '8' then do;
1129843   +            GRP_MntWines8 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines8 = 1;
1129844   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1129845   +         end;
MPRINT(EM_DIAGRAM):   end;
1129846   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1129847   +            if _dm12 = '9'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '9' then do;
1129848   +               GRP_MntWines9 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines9 = 1;
1129849   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1129850   +            end;
MPRINT(EM_DIAGRAM):   end;
1129851   +         end;
MPRINT(EM_DIAGRAM):   end;
1129852   +      end;
MPRINT(EM_DIAGRAM):   end;
1129853   +   end;
MPRINT(EM_DIAGRAM):   end;
1129854   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1129855   +      GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
1129856   +      GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
1129857   +      GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
1129858   +      GRP_MntWines5 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines5 = .;
1129859   +      GRP_MntWines6 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines6 = .;
1129860   +      GRP_MntWines7 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines7 = .;
1129861   +      GRP_MntWines8 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines8 = .;
1129862   +      GRP_MntWines9 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines9 = .;
1129863   +      GRP_MntWines10 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines10 = .;
1129864   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1129865   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1129866   +   end;
MPRINT(EM_DIAGRAM):   end;
1129867   +end;
MPRINT(EM_DIAGRAM):   end;
1129868   +
1129869   +*** Generate dummy variables for GRP_NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumCatalogPurchases ;
1129870   +drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4
1129871   +        GRP_NumCatalogPurchases5 GRP_NumCatalogPurchases6
1129872   +        GRP_NumCatalogPurchases7 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4
GRP_NumCatalogPurchases5 GRP_NumCatalogPurchases6 GRP_NumCatalogPurchases7 ;
1129873   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1129874   +GRP_NumCatalogPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 0;
1129875   +GRP_NumCatalogPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 0;
1129876   +GRP_NumCatalogPurchases5 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases5 = 0;
1129877   +GRP_NumCatalogPurchases6 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases6 = 0;
1129878   +GRP_NumCatalogPurchases7 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases7 = 0;
1129879   +if missing( GRP_NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumCatalogPurchases ) then do;
1129880   +   GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
1129881   +   GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
1129882   +   GRP_NumCatalogPurchases5 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases5 = .;
1129883   +   GRP_NumCatalogPurchases6 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases6 = .;
1129884   +   GRP_NumCatalogPurchases7 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases7 = .;
1129885   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1129886   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1129887   +end;
MPRINT(EM_DIAGRAM):   end;
1129888   +else do;
MPRINT(EM_DIAGRAM):   else do;
1129889   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1129890   +   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
1129891   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1129892   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1129893   +   if _dm12 <= '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '5' then do;
1129894   +      if _dm12 <= '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '4' then do;
1129895   +         if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1129896   +            GRP_NumCatalogPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 1;
1129897   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1129898   +         end;
MPRINT(EM_DIAGRAM):   end;
1129899   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1129900   +            if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
1129901   +               GRP_NumCatalogPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 1;
1129902   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1129903   +            end;
MPRINT(EM_DIAGRAM):   end;
1129904   +         end;
MPRINT(EM_DIAGRAM):   end;
1129905   +      end;
MPRINT(EM_DIAGRAM):   end;
1129906   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1129907   +         if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1129908   +            GRP_NumCatalogPurchases5 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases5 = 1;
1129909   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1129910   +         end;
MPRINT(EM_DIAGRAM):   end;
1129911   +      end;
MPRINT(EM_DIAGRAM):   end;
1129912   +   end;
MPRINT(EM_DIAGRAM):   end;
1129913   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1129914   +      if _dm12 <= '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '7' then do;
1129915   +         if _dm12 = '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '6' then do;
1129916   +            GRP_NumCatalogPurchases6 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases6 = 1;
1129917   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1129918   +         end;
MPRINT(EM_DIAGRAM):   end;
1129919   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1129920   +            if _dm12 = '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '7' then do;
1129921   +               GRP_NumCatalogPurchases7 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases7 = 1;
1129922   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1129923   +            end;
MPRINT(EM_DIAGRAM):   end;
1129924   +         end;
MPRINT(EM_DIAGRAM):   end;
1129925   +      end;
MPRINT(EM_DIAGRAM):   end;
1129926   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1129927   +         if _dm12 = '8'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '8' then do;
1129928   +            GRP_NumCatalogPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = -1;
1129929   +            GRP_NumCatalogPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = -1;
1129930   +            GRP_NumCatalogPurchases5 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases5 = -1;
1129931   +            GRP_NumCatalogPurchases6 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases6 = -1;
1129932   +            GRP_NumCatalogPurchases7 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases7 = -1;
1129933   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1129934   +         end;
MPRINT(EM_DIAGRAM):   end;
1129935   +      end;
MPRINT(EM_DIAGRAM):   end;
1129936   +   end;
MPRINT(EM_DIAGRAM):   end;
1129937   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1129938   +      GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
1129939   +      GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
1129940   +      GRP_NumCatalogPurchases5 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases5 = .;
1129941   +      GRP_NumCatalogPurchases6 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases6 = .;
1129942   +      GRP_NumCatalogPurchases7 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases7 = .;
1129943   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1129944   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1129945   +   end;
MPRINT(EM_DIAGRAM):   end;
1129946   +end;
MPRINT(EM_DIAGRAM):   end;
1129947   +
1129948   +*** Generate dummy variables for GRP_NumDistPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumDistPurchases ;
1129949   +drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4
1129950   +        GRP_NumDistPurchases5 GRP_NumDistPurchases6 GRP_NumDistPurchases7
1129951   +        GRP_NumDistPurchases8 GRP_NumDistPurchases9 GRP_NumDistPurchases10 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4
GRP_NumDistPurchases5 GRP_NumDistPurchases6 GRP_NumDistPurchases7 GRP_NumDistPurchases8
GRP_NumDistPurchases9 GRP_NumDistPurchases10 ;
1129952   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1129953   +GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
1129954   +GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
1129955   +GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
1129956   +GRP_NumDistPurchases5 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases5 = 0;
1129957   +GRP_NumDistPurchases6 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases6 = 0;
1129958   +GRP_NumDistPurchases7 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases7 = 0;
1129959   +GRP_NumDistPurchases8 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases8 = 0;
1129960   +GRP_NumDistPurchases9 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases9 = 0;
1129961   +GRP_NumDistPurchases10 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases10 = 0;
1129962   +if missing( GRP_NumDistPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumDistPurchases ) then do;
1129963   +   GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
1129964   +   GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
1129965   +   GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
1129966   +   GRP_NumDistPurchases5 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases5 = .;
1129967   +   GRP_NumDistPurchases6 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases6 = .;
1129968   +   GRP_NumDistPurchases7 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases7 = .;
1129969   +   GRP_NumDistPurchases8 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases8 = .;
1129970   +   GRP_NumDistPurchases9 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases9 = .;
1129971   +   GRP_NumDistPurchases10 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases10 = .;
1129972   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1129973   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1129974   +end;
MPRINT(EM_DIAGRAM):   end;
1129975   +else do;
MPRINT(EM_DIAGRAM):   else do;
1129976   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1129977   +   _dm12 = put( GRP_NumDistPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumDistPurchases , BEST12. );
1129978   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1129979   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1129980   +   if _dm12 <= '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '4' then do;
1129981   +      if _dm12 <= '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '2' then do;
1129982   +         if _dm12 <= '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '11' then do;
1129983   +            if _dm12 = '10'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '10' then do;
1129984   +               GRP_NumDistPurchases10 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases10 = 1;
1129985   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1129986   +            end;
MPRINT(EM_DIAGRAM):   end;
1129987   +            else do;
MPRINT(EM_DIAGRAM):   else do;
1129988   +               if _dm12 = '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '11' then do;
1129989   +                  GRP_NumDistPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = -1;
1129990   +                  GRP_NumDistPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = -1;
1129991   +                  GRP_NumDistPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = -1;
1129992   +                  GRP_NumDistPurchases5 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases5 = -1;
1129993   +                  GRP_NumDistPurchases6 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases6 = -1;
1129994   +                  GRP_NumDistPurchases7 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases7 = -1;
1129995   +                  GRP_NumDistPurchases8 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases8 = -1;
1129996   +                  GRP_NumDistPurchases9 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases9 = -1;
1129997   +                  GRP_NumDistPurchases10 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases10 = -1;
1129998   +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1129999   +               end;
MPRINT(EM_DIAGRAM):   end;
1130000   +            end;
MPRINT(EM_DIAGRAM):   end;
1130001   +         end;
MPRINT(EM_DIAGRAM):   end;
1130002   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1130003   +            if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
1130004   +               GRP_NumDistPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 1;
1130005   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1130006   +            end;
MPRINT(EM_DIAGRAM):   end;
1130007   +         end;
MPRINT(EM_DIAGRAM):   end;
1130008   +      end;
MPRINT(EM_DIAGRAM):   end;
1130009   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1130010   +         if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1130011   +            GRP_NumDistPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 1;
1130012   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1130013   +         end;
MPRINT(EM_DIAGRAM):   end;
1130014   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1130015   +            if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
1130016   +               GRP_NumDistPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 1;
1130017   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1130018   +            end;
MPRINT(EM_DIAGRAM):   end;
1130019   +         end;
MPRINT(EM_DIAGRAM):   end;
1130020   +      end;
MPRINT(EM_DIAGRAM):   end;
1130021   +   end;
MPRINT(EM_DIAGRAM):   end;
1130022   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1130023   +      if _dm12 <= '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '7' then do;
1130024   +         if _dm12 <= '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '6' then do;
1130025   +            if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1130026   +               GRP_NumDistPurchases5 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases5 = 1;
1130027   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1130028   +            end;
MPRINT(EM_DIAGRAM):   end;
1130029   +            else do;
MPRINT(EM_DIAGRAM):   else do;
1130030   +               if _dm12 = '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '6' then do;
1130031   +                  GRP_NumDistPurchases6 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases6 = 1;
1130032   +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1130033   +               end;
MPRINT(EM_DIAGRAM):   end;
1130034   +            end;
MPRINT(EM_DIAGRAM):   end;
1130035   +         end;
MPRINT(EM_DIAGRAM):   end;
1130036   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1130037   +            if _dm12 = '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '7' then do;
1130038   +               GRP_NumDistPurchases7 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases7 = 1;
1130039   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1130040   +            end;
MPRINT(EM_DIAGRAM):   end;
1130041   +         end;
MPRINT(EM_DIAGRAM):   end;
1130042   +      end;
MPRINT(EM_DIAGRAM):   end;
1130043   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1130044   +         if _dm12 = '8'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '8' then do;
1130045   +            GRP_NumDistPurchases8 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases8 = 1;
1130046   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1130047   +         end;
MPRINT(EM_DIAGRAM):   end;
1130048   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1130049   +            if _dm12 = '9'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '9' then do;
1130050   +               GRP_NumDistPurchases9 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases9 = 1;
1130051   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1130052   +            end;
MPRINT(EM_DIAGRAM):   end;
1130053   +         end;
MPRINT(EM_DIAGRAM):   end;
1130054   +      end;
MPRINT(EM_DIAGRAM):   end;
1130055   +   end;
MPRINT(EM_DIAGRAM):   end;
1130056   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1130057   +      GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
1130058   +      GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
1130059   +      GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
1130060   +      GRP_NumDistPurchases5 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases5 = .;
1130061   +      GRP_NumDistPurchases6 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases6 = .;
1130062   +      GRP_NumDistPurchases7 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases7 = .;
1130063   +      GRP_NumDistPurchases8 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases8 = .;
1130064   +      GRP_NumDistPurchases9 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases9 = .;
1130065   +      GRP_NumDistPurchases10 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases10 = .;
1130066   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1130067   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1130068   +   end;
MPRINT(EM_DIAGRAM):   end;
1130069   +end;
MPRINT(EM_DIAGRAM):   end;
1130070   +
1130071   +*** Generate dummy variables for GRP_NumWebPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumWebPurchases ;
1130072   +drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4
1130073   +        GRP_NumWebPurchases5 GRP_NumWebPurchases6 GRP_NumWebPurchases7
1130074   +        GRP_NumWebPurchases8 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4
GRP_NumWebPurchases5 GRP_NumWebPurchases6 GRP_NumWebPurchases7 GRP_NumWebPurchases8 ;
1130075   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1130076   +GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
1130077   +GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
1130078   +GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
1130079   +GRP_NumWebPurchases5 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases5 = 0;
1130080   +GRP_NumWebPurchases6 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases6 = 0;
1130081   +GRP_NumWebPurchases7 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases7 = 0;
1130082   +GRP_NumWebPurchases8 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases8 = 0;
1130083   +if missing( GRP_NumWebPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumWebPurchases ) then do;
1130084   +   GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
1130085   +   GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
1130086   +   GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
1130087   +   GRP_NumWebPurchases5 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases5 = .;
1130088   +   GRP_NumWebPurchases6 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases6 = .;
1130089   +   GRP_NumWebPurchases7 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases7 = .;
1130090   +   GRP_NumWebPurchases8 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases8 = .;
1130091   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1130092   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1130093   +end;
MPRINT(EM_DIAGRAM):   end;
1130094   +else do;
MPRINT(EM_DIAGRAM):   else do;
1130095   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1130096   +   _dm12 = put( GRP_NumWebPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumWebPurchases , BEST12. );
1130097   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1130098   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1130099   +   if _dm12 <= '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '5' then do;
1130100   +      if _dm12 <= '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '3' then do;
1130101   +         if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
1130102   +            GRP_NumWebPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 1;
1130103   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1130104   +         end;
MPRINT(EM_DIAGRAM):   end;
1130105   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1130106   +            if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1130107   +               GRP_NumWebPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 1;
1130108   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1130109   +            end;
MPRINT(EM_DIAGRAM):   end;
1130110   +         end;
MPRINT(EM_DIAGRAM):   end;
1130111   +      end;
MPRINT(EM_DIAGRAM):   end;
1130112   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1130113   +         if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
1130114   +            GRP_NumWebPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 1;
1130115   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1130116   +         end;
MPRINT(EM_DIAGRAM):   end;
1130117   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1130118   +            if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1130119   +               GRP_NumWebPurchases5 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases5 = 1;
1130120   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1130121   +            end;
MPRINT(EM_DIAGRAM):   end;
1130122   +         end;
MPRINT(EM_DIAGRAM):   end;
1130123   +      end;
MPRINT(EM_DIAGRAM):   end;
1130124   +   end;
MPRINT(EM_DIAGRAM):   end;
1130125   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1130126   +      if _dm12 <= '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '7' then do;
1130127   +         if _dm12 = '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '6' then do;
1130128   +            GRP_NumWebPurchases6 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases6 = 1;
1130129   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1130130   +         end;
MPRINT(EM_DIAGRAM):   end;
1130131   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1130132   +            if _dm12 = '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '7' then do;
1130133   +               GRP_NumWebPurchases7 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases7 = 1;
1130134   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1130135   +            end;
MPRINT(EM_DIAGRAM):   end;
1130136   +         end;
MPRINT(EM_DIAGRAM):   end;
1130137   +      end;
MPRINT(EM_DIAGRAM):   end;
1130138   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1130139   +         if _dm12 = '8'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '8' then do;
1130140   +            GRP_NumWebPurchases8 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases8 = 1;
1130141   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1130142   +         end;
MPRINT(EM_DIAGRAM):   end;
1130143   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1130144   +            if _dm12 = '9'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '9' then do;
1130145   +               GRP_NumWebPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = -1;
1130146   +               GRP_NumWebPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = -1;
1130147   +               GRP_NumWebPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = -1;
1130148   +               GRP_NumWebPurchases5 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases5 = -1;
1130149   +               GRP_NumWebPurchases6 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases6 = -1;
1130150   +               GRP_NumWebPurchases7 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases7 = -1;
1130151   +               GRP_NumWebPurchases8 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases8 = -1;
1130152   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1130153   +            end;
MPRINT(EM_DIAGRAM):   end;
1130154   +         end;
MPRINT(EM_DIAGRAM):   end;
1130155   +      end;
MPRINT(EM_DIAGRAM):   end;
1130156   +   end;
MPRINT(EM_DIAGRAM):   end;
1130157   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1130158   +      GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
1130159   +      GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
1130160   +      GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
1130161   +      GRP_NumWebPurchases5 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases5 = .;
1130162   +      GRP_NumWebPurchases6 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases6 = .;
1130163   +      GRP_NumWebPurchases7 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases7 = .;
1130164   +      GRP_NumWebPurchases8 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases8 = .;
1130165   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1130166   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1130167   +   end;
MPRINT(EM_DIAGRAM):   end;
1130168   +end;
MPRINT(EM_DIAGRAM):   end;
1130169   +
1130170   +*** Generate dummy variables for GRP_NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumWebVisitsMonth ;
1130171   +drop GRP_NumWebVisitsMonth2 GRP_NumWebVisitsMonth3 GRP_NumWebVisitsMonth4
1130172   +        GRP_NumWebVisitsMonth5 GRP_NumWebVisitsMonth6 GRP_NumWebVisitsMonth7
1130173   +        GRP_NumWebVisitsMonth8 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumWebVisitsMonth2 GRP_NumWebVisitsMonth3
GRP_NumWebVisitsMonth4 GRP_NumWebVisitsMonth5 GRP_NumWebVisitsMonth6 GRP_NumWebVisitsMonth7
GRP_NumWebVisitsMonth8 ;
1130174   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1130175   +GRP_NumWebVisitsMonth2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth2 = 0;
1130176   +GRP_NumWebVisitsMonth3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth3 = 0;
1130177   +GRP_NumWebVisitsMonth4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth4 = 0;
1130178   +GRP_NumWebVisitsMonth5 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth5 = 0;
1130179   +GRP_NumWebVisitsMonth6 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth6 = 0;
1130180   +GRP_NumWebVisitsMonth7 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth7 = 0;
1130181   +GRP_NumWebVisitsMonth8 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth8 = 0;
1130182   +if missing( GRP_NumWebVisitsMonth ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumWebVisitsMonth ) then do;
1130183   +   GRP_NumWebVisitsMonth2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth2 = .;
1130184   +   GRP_NumWebVisitsMonth3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth3 = .;
1130185   +   GRP_NumWebVisitsMonth4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth4 = .;
1130186   +   GRP_NumWebVisitsMonth5 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth5 = .;
1130187   +   GRP_NumWebVisitsMonth6 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth6 = .;
1130188   +   GRP_NumWebVisitsMonth7 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth7 = .;
1130189   +   GRP_NumWebVisitsMonth8 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth8 = .;
1130190   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1130191   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1130192   +end;
MPRINT(EM_DIAGRAM):   end;
1130193   +else do;
MPRINT(EM_DIAGRAM):   else do;
1130194   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1130195   +   _dm12 = put( GRP_NumWebVisitsMonth , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumWebVisitsMonth , BEST12. );
1130196   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1130197   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1130198   +   if _dm12 <= '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '5' then do;
1130199   +      if _dm12 <= '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '3' then do;
1130200   +         if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
1130201   +            GRP_NumWebVisitsMonth2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth2 = 1;
1130202   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1130203   +         end;
MPRINT(EM_DIAGRAM):   end;
1130204   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1130205   +            if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1130206   +               GRP_NumWebVisitsMonth3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth3 = 1;
1130207   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1130208   +            end;
MPRINT(EM_DIAGRAM):   end;
1130209   +         end;
MPRINT(EM_DIAGRAM):   end;
1130210   +      end;
MPRINT(EM_DIAGRAM):   end;
1130211   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1130212   +         if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
1130213   +            GRP_NumWebVisitsMonth4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth4 = 1;
1130214   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1130215   +         end;
MPRINT(EM_DIAGRAM):   end;
1130216   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1130217   +            if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1130218   +               GRP_NumWebVisitsMonth5 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth5 = 1;
1130219   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1130220   +            end;
MPRINT(EM_DIAGRAM):   end;
1130221   +         end;
MPRINT(EM_DIAGRAM):   end;
1130222   +      end;
MPRINT(EM_DIAGRAM):   end;
1130223   +   end;
MPRINT(EM_DIAGRAM):   end;
1130224   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1130225   +      if _dm12 <= '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '7' then do;
1130226   +         if _dm12 = '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '6' then do;
1130227   +            GRP_NumWebVisitsMonth6 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth6 = 1;
1130228   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1130229   +         end;
MPRINT(EM_DIAGRAM):   end;
1130230   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1130231   +            if _dm12 = '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '7' then do;
1130232   +               GRP_NumWebVisitsMonth7 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth7 = 1;
1130233   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1130234   +            end;
MPRINT(EM_DIAGRAM):   end;
1130235   +         end;
MPRINT(EM_DIAGRAM):   end;
1130236   +      end;
MPRINT(EM_DIAGRAM):   end;
1130237   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1130238   +         if _dm12 = '8'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '8' then do;
1130239   +            GRP_NumWebVisitsMonth8 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth8 = 1;
1130240   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1130241   +         end;
MPRINT(EM_DIAGRAM):   end;
1130242   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1130243   +            if _dm12 = '9'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '9' then do;
1130244   +               GRP_NumWebVisitsMonth2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth2 = -1;
1130245   +               GRP_NumWebVisitsMonth3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth3 = -1;
1130246   +               GRP_NumWebVisitsMonth4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth4 = -1;
1130247   +               GRP_NumWebVisitsMonth5 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth5 = -1;
1130248   +               GRP_NumWebVisitsMonth6 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth6 = -1;
1130249   +               GRP_NumWebVisitsMonth7 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth7 = -1;
1130250   +               GRP_NumWebVisitsMonth8 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth8 = -1;
1130251   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1130252   +            end;
MPRINT(EM_DIAGRAM):   end;
1130253   +         end;
MPRINT(EM_DIAGRAM):   end;
1130254   +      end;
MPRINT(EM_DIAGRAM):   end;
1130255   +   end;
MPRINT(EM_DIAGRAM):   end;
1130256   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1130257   +      GRP_NumWebVisitsMonth2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth2 = .;
1130258   +      GRP_NumWebVisitsMonth3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth3 = .;
1130259   +      GRP_NumWebVisitsMonth4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth4 = .;
1130260   +      GRP_NumWebVisitsMonth5 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth5 = .;
1130261   +      GRP_NumWebVisitsMonth6 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth6 = .;
1130262   +      GRP_NumWebVisitsMonth7 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth7 = .;
1130263   +      GRP_NumWebVisitsMonth8 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth8 = .;
1130264   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1130265   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1130266   +   end;
MPRINT(EM_DIAGRAM):   end;
1130267   +end;
MPRINT(EM_DIAGRAM):   end;
1130268   +
1130269   +*** Generate dummy variables for GRP_RFMstat ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RFMstat ;
1130270   +drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 GRP_RFMstat5 GRP_RFMstat6
1130271   +        GRP_RFMstat7 GRP_RFMstat8 GRP_RFMstat9 GRP_RFMstat10 ;
MPRINT(EM_DIAGRAM):   drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 GRP_RFMstat5 GRP_RFMstat6
GRP_RFMstat7 GRP_RFMstat8 GRP_RFMstat9 GRP_RFMstat10 ;
1130272   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1130273   +GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
1130274   +GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
1130275   +GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
1130276   +GRP_RFMstat5 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat5 = 0;
1130277   +GRP_RFMstat6 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat6 = 0;
1130278   +GRP_RFMstat7 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat7 = 0;
1130279   +GRP_RFMstat8 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat8 = 0;
1130280   +GRP_RFMstat9 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat9 = 0;
1130281   +GRP_RFMstat10 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat10 = 0;
1130282   +if missing( GRP_RFMstat ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RFMstat ) then do;
1130283   +   GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
1130284   +   GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
1130285   +   GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
1130286   +   GRP_RFMstat5 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat5 = .;
1130287   +   GRP_RFMstat6 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat6 = .;
1130288   +   GRP_RFMstat7 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat7 = .;
1130289   +   GRP_RFMstat8 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat8 = .;
1130290   +   GRP_RFMstat9 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat9 = .;
1130291   +   GRP_RFMstat10 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat10 = .;
1130292   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1130293   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1130294   +end;
MPRINT(EM_DIAGRAM):   end;
1130295   +else do;
MPRINT(EM_DIAGRAM):   else do;
1130296   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1130297   +   _dm12 = put( GRP_RFMstat , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RFMstat , BEST12. );
1130298   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1130299   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1130300   +   if _dm12 <= '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '4' then do;
1130301   +      if _dm12 <= '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '2' then do;
1130302   +         if _dm12 <= '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '11' then do;
1130303   +            if _dm12 = '10'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '10' then do;
1130304   +               GRP_RFMstat10 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat10 = 1;
1130305   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1130306   +            end;
MPRINT(EM_DIAGRAM):   end;
1130307   +            else do;
MPRINT(EM_DIAGRAM):   else do;
1130308   +               if _dm12 = '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '11' then do;
1130309   +                  GRP_RFMstat2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = -1;
1130310   +                  GRP_RFMstat3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = -1;
1130311   +                  GRP_RFMstat4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = -1;
1130312   +                  GRP_RFMstat5 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat5 = -1;
1130313   +                  GRP_RFMstat6 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat6 = -1;
1130314   +                  GRP_RFMstat7 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat7 = -1;
1130315   +                  GRP_RFMstat8 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat8 = -1;
1130316   +                  GRP_RFMstat9 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat9 = -1;
1130317   +                  GRP_RFMstat10 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat10 = -1;
1130318   +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1130319   +               end;
MPRINT(EM_DIAGRAM):   end;
1130320   +            end;
MPRINT(EM_DIAGRAM):   end;
1130321   +         end;
MPRINT(EM_DIAGRAM):   end;
1130322   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1130323   +            if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
1130324   +               GRP_RFMstat2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 1;
1130325   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1130326   +            end;
MPRINT(EM_DIAGRAM):   end;
1130327   +         end;
MPRINT(EM_DIAGRAM):   end;
1130328   +      end;
MPRINT(EM_DIAGRAM):   end;
1130329   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1130330   +         if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1130331   +            GRP_RFMstat3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 1;
1130332   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1130333   +         end;
MPRINT(EM_DIAGRAM):   end;
1130334   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1130335   +            if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
1130336   +               GRP_RFMstat4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 1;
1130337   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1130338   +            end;
MPRINT(EM_DIAGRAM):   end;
1130339   +         end;
MPRINT(EM_DIAGRAM):   end;
1130340   +      end;
MPRINT(EM_DIAGRAM):   end;
1130341   +   end;
MPRINT(EM_DIAGRAM):   end;
1130342   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1130343   +      if _dm12 <= '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '7' then do;
1130344   +         if _dm12 <= '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '6' then do;
1130345   +            if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1130346   +               GRP_RFMstat5 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat5 = 1;
1130347   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1130348   +            end;
MPRINT(EM_DIAGRAM):   end;
1130349   +            else do;
MPRINT(EM_DIAGRAM):   else do;
1130350   +               if _dm12 = '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '6' then do;
1130351   +                  GRP_RFMstat6 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat6 = 1;
1130352   +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1130353   +               end;
MPRINT(EM_DIAGRAM):   end;
1130354   +            end;
MPRINT(EM_DIAGRAM):   end;
1130355   +         end;
MPRINT(EM_DIAGRAM):   end;
1130356   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1130357   +            if _dm12 = '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '7' then do;
1130358   +               GRP_RFMstat7 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat7 = 1;
1130359   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1130360   +            end;
MPRINT(EM_DIAGRAM):   end;
1130361   +         end;
MPRINT(EM_DIAGRAM):   end;
1130362   +      end;
MPRINT(EM_DIAGRAM):   end;
1130363   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1130364   +         if _dm12 = '8'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '8' then do;
1130365   +            GRP_RFMstat8 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat8 = 1;
1130366   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1130367   +         end;
MPRINT(EM_DIAGRAM):   end;
1130368   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1130369   +            if _dm12 = '9'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '9' then do;
1130370   +               GRP_RFMstat9 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat9 = 1;
1130371   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1130372   +            end;
MPRINT(EM_DIAGRAM):   end;
1130373   +         end;
MPRINT(EM_DIAGRAM):   end;
1130374   +      end;
MPRINT(EM_DIAGRAM):   end;
1130375   +   end;
MPRINT(EM_DIAGRAM):   end;
1130376   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1130377   +      GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
1130378   +      GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
1130379   +      GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
1130380   +      GRP_RFMstat5 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat5 = .;
1130381   +      GRP_RFMstat6 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat6 = .;
1130382   +      GRP_RFMstat7 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat7 = .;
1130383   +      GRP_RFMstat8 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat8 = .;
1130384   +      GRP_RFMstat9 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat9 = .;
1130385   +      GRP_RFMstat10 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat10 = .;
1130386   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1130387   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1130388   +   end;
MPRINT(EM_DIAGRAM):   end;
1130389   +end;
MPRINT(EM_DIAGRAM):   end;
1130390   +
1130391   +*** Generate dummy variables for GRP_RMntFrq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RMntFrq ;
1130392   +drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 GRP_RMntFrq5 GRP_RMntFrq6
1130393   +        GRP_RMntFrq7 GRP_RMntFrq8 GRP_RMntFrq9 GRP_RMntFrq10 ;
MPRINT(EM_DIAGRAM):   drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 GRP_RMntFrq5 GRP_RMntFrq6
GRP_RMntFrq7 GRP_RMntFrq8 GRP_RMntFrq9 GRP_RMntFrq10 ;
1130394   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1130395   +GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
1130396   +GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
1130397   +GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
1130398   +GRP_RMntFrq5 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq5 = 0;
1130399   +GRP_RMntFrq6 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq6 = 0;
1130400   +GRP_RMntFrq7 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq7 = 0;
1130401   +GRP_RMntFrq8 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq8 = 0;
1130402   +GRP_RMntFrq9 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq9 = 0;
1130403   +GRP_RMntFrq10 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq10 = 0;
1130404   +if missing( GRP_RMntFrq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RMntFrq ) then do;
1130405   +   GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
1130406   +   GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
1130407   +   GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
1130408   +   GRP_RMntFrq5 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq5 = .;
1130409   +   GRP_RMntFrq6 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq6 = .;
1130410   +   GRP_RMntFrq7 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq7 = .;
1130411   +   GRP_RMntFrq8 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq8 = .;
1130412   +   GRP_RMntFrq9 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq9 = .;
1130413   +   GRP_RMntFrq10 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq10 = .;
1130414   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1130415   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1130416   +end;
MPRINT(EM_DIAGRAM):   end;
1130417   +else do;
MPRINT(EM_DIAGRAM):   else do;
1130418   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1130419   +   _dm12 = put( GRP_RMntFrq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RMntFrq , BEST12. );
1130420   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1130421   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1130422   +   if _dm12 <= '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '4' then do;
1130423   +      if _dm12 <= '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '2' then do;
1130424   +         if _dm12 <= '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '11' then do;
1130425   +            if _dm12 = '10'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '10' then do;
1130426   +               GRP_RMntFrq10 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq10 = 1;
1130427   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1130428   +            end;
MPRINT(EM_DIAGRAM):   end;
1130429   +            else do;
MPRINT(EM_DIAGRAM):   else do;
1130430   +               if _dm12 = '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '11' then do;
1130431   +                  GRP_RMntFrq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = -1;
1130432   +                  GRP_RMntFrq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = -1;
1130433   +                  GRP_RMntFrq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = -1;
1130434   +                  GRP_RMntFrq5 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq5 = -1;
1130435   +                  GRP_RMntFrq6 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq6 = -1;
1130436   +                  GRP_RMntFrq7 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq7 = -1;
1130437   +                  GRP_RMntFrq8 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq8 = -1;
1130438   +                  GRP_RMntFrq9 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq9 = -1;
1130439   +                  GRP_RMntFrq10 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq10 = -1;
1130440   +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1130441   +               end;
MPRINT(EM_DIAGRAM):   end;
1130442   +            end;
MPRINT(EM_DIAGRAM):   end;
1130443   +         end;
MPRINT(EM_DIAGRAM):   end;
1130444   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1130445   +            if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
1130446   +               GRP_RMntFrq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 1;
1130447   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1130448   +            end;
MPRINT(EM_DIAGRAM):   end;
1130449   +         end;
MPRINT(EM_DIAGRAM):   end;
1130450   +      end;
MPRINT(EM_DIAGRAM):   end;
1130451   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1130452   +         if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1130453   +            GRP_RMntFrq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 1;
1130454   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1130455   +         end;
MPRINT(EM_DIAGRAM):   end;
1130456   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1130457   +            if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
1130458   +               GRP_RMntFrq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 1;
1130459   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1130460   +            end;
MPRINT(EM_DIAGRAM):   end;
1130461   +         end;
MPRINT(EM_DIAGRAM):   end;
1130462   +      end;
MPRINT(EM_DIAGRAM):   end;
1130463   +   end;
MPRINT(EM_DIAGRAM):   end;
1130464   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1130465   +      if _dm12 <= '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '7' then do;
1130466   +         if _dm12 <= '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '6' then do;
1130467   +            if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1130468   +               GRP_RMntFrq5 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq5 = 1;
1130469   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1130470   +            end;
MPRINT(EM_DIAGRAM):   end;
1130471   +            else do;
MPRINT(EM_DIAGRAM):   else do;
1130472   +               if _dm12 = '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '6' then do;
1130473   +                  GRP_RMntFrq6 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq6 = 1;
1130474   +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1130475   +               end;
MPRINT(EM_DIAGRAM):   end;
1130476   +            end;
MPRINT(EM_DIAGRAM):   end;
1130477   +         end;
MPRINT(EM_DIAGRAM):   end;
1130478   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1130479   +            if _dm12 = '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '7' then do;
1130480   +               GRP_RMntFrq7 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq7 = 1;
1130481   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1130482   +            end;
MPRINT(EM_DIAGRAM):   end;
1130483   +         end;
MPRINT(EM_DIAGRAM):   end;
1130484   +      end;
MPRINT(EM_DIAGRAM):   end;
1130485   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1130486   +         if _dm12 = '8'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '8' then do;
1130487   +            GRP_RMntFrq8 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq8 = 1;
1130488   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1130489   +         end;
MPRINT(EM_DIAGRAM):   end;
1130490   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1130491   +            if _dm12 = '9'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '9' then do;
1130492   +               GRP_RMntFrq9 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq9 = 1;
1130493   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1130494   +            end;
MPRINT(EM_DIAGRAM):   end;
1130495   +         end;
MPRINT(EM_DIAGRAM):   end;
1130496   +      end;
MPRINT(EM_DIAGRAM):   end;
1130497   +   end;
MPRINT(EM_DIAGRAM):   end;
1130498   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1130499   +      GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
1130500   +      GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
1130501   +      GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
1130502   +      GRP_RMntFrq5 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq5 = .;
1130503   +      GRP_RMntFrq6 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq6 = .;
1130504   +      GRP_RMntFrq7 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq7 = .;
1130505   +      GRP_RMntFrq8 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq8 = .;
1130506   +      GRP_RMntFrq9 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq9 = .;
1130507   +      GRP_RMntFrq10 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq10 = .;
1130508   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1130509   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1130510   +   end;
MPRINT(EM_DIAGRAM):   end;
1130511   +end;
MPRINT(EM_DIAGRAM):   end;
1130512   +
1130513   +*** Generate dummy variables for GRP_Recency ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Recency ;
1130514   +drop GRP_Recency2 GRP_Recency3 GRP_Recency4 GRP_Recency5 GRP_Recency6
1130515   +        GRP_Recency7 GRP_Recency8 GRP_Recency9 GRP_Recency10 ;
MPRINT(EM_DIAGRAM):   drop GRP_Recency2 GRP_Recency3 GRP_Recency4 GRP_Recency5 GRP_Recency6
GRP_Recency7 GRP_Recency8 GRP_Recency9 GRP_Recency10 ;
1130516   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1130517   +GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
1130518   +GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
1130519   +GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
1130520   +GRP_Recency5 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency5 = 0;
1130521   +GRP_Recency6 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency6 = 0;
1130522   +GRP_Recency7 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency7 = 0;
1130523   +GRP_Recency8 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency8 = 0;
1130524   +GRP_Recency9 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency9 = 0;
1130525   +GRP_Recency10 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency10 = 0;
1130526   +if missing( GRP_Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Recency ) then do;
1130527   +   GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
1130528   +   GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
1130529   +   GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
1130530   +   GRP_Recency5 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency5 = .;
1130531   +   GRP_Recency6 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency6 = .;
1130532   +   GRP_Recency7 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency7 = .;
1130533   +   GRP_Recency8 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency8 = .;
1130534   +   GRP_Recency9 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency9 = .;
1130535   +   GRP_Recency10 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency10 = .;
1130536   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1130537   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1130538   +end;
MPRINT(EM_DIAGRAM):   end;
1130539   +else do;
MPRINT(EM_DIAGRAM):   else do;
1130540   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1130541   +   _dm12 = put( GRP_Recency , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Recency , BEST12. );
1130542   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1130543   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1130544   +   if _dm12 <= '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '4' then do;
1130545   +      if _dm12 <= '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '2' then do;
1130546   +         if _dm12 <= '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '11' then do;
1130547   +            if _dm12 = '10'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '10' then do;
1130548   +               GRP_Recency10 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency10 = 1;
1130549   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1130550   +            end;
MPRINT(EM_DIAGRAM):   end;
1130551   +            else do;
MPRINT(EM_DIAGRAM):   else do;
1130552   +               if _dm12 = '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '11' then do;
1130553   +                  GRP_Recency2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = -1;
1130554   +                  GRP_Recency3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = -1;
1130555   +                  GRP_Recency4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = -1;
1130556   +                  GRP_Recency5 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency5 = -1;
1130557   +                  GRP_Recency6 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency6 = -1;
1130558   +                  GRP_Recency7 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency7 = -1;
1130559   +                  GRP_Recency8 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency8 = -1;
1130560   +                  GRP_Recency9 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency9 = -1;
1130561   +                  GRP_Recency10 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency10 = -1;
1130562   +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1130563   +               end;
MPRINT(EM_DIAGRAM):   end;
1130564   +            end;
MPRINT(EM_DIAGRAM):   end;
1130565   +         end;
MPRINT(EM_DIAGRAM):   end;
1130566   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1130567   +            if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
1130568   +               GRP_Recency2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 1;
1130569   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1130570   +            end;
MPRINT(EM_DIAGRAM):   end;
1130571   +         end;
MPRINT(EM_DIAGRAM):   end;
1130572   +      end;
MPRINT(EM_DIAGRAM):   end;
1130573   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1130574   +         if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1130575   +            GRP_Recency3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 1;
1130576   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1130577   +         end;
MPRINT(EM_DIAGRAM):   end;
1130578   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1130579   +            if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
1130580   +               GRP_Recency4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 1;
1130581   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1130582   +            end;
MPRINT(EM_DIAGRAM):   end;
1130583   +         end;
MPRINT(EM_DIAGRAM):   end;
1130584   +      end;
MPRINT(EM_DIAGRAM):   end;
1130585   +   end;
MPRINT(EM_DIAGRAM):   end;
1130586   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1130587   +      if _dm12 <= '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '7' then do;
1130588   +         if _dm12 <= '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '6' then do;
1130589   +            if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1130590   +               GRP_Recency5 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency5 = 1;
1130591   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1130592   +            end;
MPRINT(EM_DIAGRAM):   end;
1130593   +            else do;
MPRINT(EM_DIAGRAM):   else do;
1130594   +               if _dm12 = '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '6' then do;
1130595   +                  GRP_Recency6 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency6 = 1;
1130596   +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1130597   +               end;
MPRINT(EM_DIAGRAM):   end;
1130598   +            end;
MPRINT(EM_DIAGRAM):   end;
1130599   +         end;
MPRINT(EM_DIAGRAM):   end;
1130600   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1130601   +            if _dm12 = '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '7' then do;
1130602   +               GRP_Recency7 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency7 = 1;
1130603   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1130604   +            end;
MPRINT(EM_DIAGRAM):   end;
1130605   +         end;
MPRINT(EM_DIAGRAM):   end;
1130606   +      end;
MPRINT(EM_DIAGRAM):   end;
1130607   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1130608   +         if _dm12 = '8'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '8' then do;
1130609   +            GRP_Recency8 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency8 = 1;
1130610   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1130611   +         end;
MPRINT(EM_DIAGRAM):   end;
1130612   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1130613   +            if _dm12 = '9'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '9' then do;
1130614   +               GRP_Recency9 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency9 = 1;
1130615   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1130616   +            end;
MPRINT(EM_DIAGRAM):   end;
1130617   +         end;
MPRINT(EM_DIAGRAM):   end;
1130618   +      end;
MPRINT(EM_DIAGRAM):   end;
1130619   +   end;
MPRINT(EM_DIAGRAM):   end;
1130620   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1130621   +      GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
1130622   +      GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
1130623   +      GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
1130624   +      GRP_Recency5 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency5 = .;
1130625   +      GRP_Recency6 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency6 = .;
1130626   +      GRP_Recency7 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency7 = .;
1130627   +      GRP_Recency8 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency8 = .;
1130628   +      GRP_Recency9 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency9 = .;
1130629   +      GRP_Recency10 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency10 = .;
1130630   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1130631   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1130632   +   end;
MPRINT(EM_DIAGRAM):   end;
1130633   +end;
MPRINT(EM_DIAGRAM):   end;
1130634   +
1130635   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1130636   +*** Checking missing input Interval
1130637   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1130638   +
1130639   +IF NMISS(
1130640   +   Year_Birth   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Year_Birth ) THEN DO;
1130641   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1130642   +
1130643   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1130644   +END;
MPRINT(EM_DIAGRAM):   END;
1130645   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1130646   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
1130647   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1130648   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1130649   +   S_Year_Birth  =    -163.205330145852 +     0.08289609202864 * Year_Birth ;
MPRINT(EM_DIAGRAM):   S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
1130650   +END;
MPRINT(EM_DIAGRAM):   END;
1130651   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1130652   +   IF MISSING( Year_Birth ) THEN S_Year_Birth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Year_Birth ) THEN S_Year_Birth = . ;
1130653   +   ELSE S_Year_Birth  =    -163.205330145852 +     0.08289609202864 *
1130654   +        Year_Birth ;
MPRINT(EM_DIAGRAM):   ELSE S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
1130655   +END;
MPRINT(EM_DIAGRAM):   END;
1130656   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1130657   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
1130658   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1130659   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1130660   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
1130661   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1130662   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1130663   +   H1x1_1  =     48.9150991327121 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 48.9150991327121 * S_Year_Birth ;
1130664   +   H1x1_2  =     -1.2448778225302 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -1.2448778225302 * S_Year_Birth ;
1130665   +   H1x1_3  =    -1.17490240099498 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -1.17490240099498 * S_Year_Birth ;
1130666   +   H1x1_1  = H1x1_1  +      1.4952515081505 * GRP_AcceptedCmp52
1130667   +          +     1.14523176862382 * GRP_AcceptedCmpTotal3
1130668   +          +     0.93425623080229 * GRP_Frq2  +    -0.23764135713737 * GRP_Frq3
1130669   +          +     1.05225179768198 * GRP_Frq4  +     1.13893285231202 * GRP_Frq5
1130670   +          +    -0.27680259911931 * GRP_Frq6  +    -0.38613226683298 * GRP_Frq7
1130671   +          +     0.94138019603873 * GRP_Frq8  +    -0.96317020684084 * GRP_Frq9
1130672   +          +     1.74049706575335 * GRP_Frq10  +    -1.04039907773219 *
1130673   +        GRP_Income2  +     -0.3786016700082 * GRP_Income3
1130674   +          +     1.05648065329445 * GRP_Income4  +    -0.56495305593924 *
1130675   +        GRP_Income5  +      0.3223314463995 * GRP_Income6
1130676   +          +    -0.47141915296565 * GRP_Income7  +     0.72744850687316 *
1130677   +        GRP_Income8  +     0.36203320013679 * GRP_Income9
1130678   +          +     1.03998002924375 * GRP_Income10  +    -1.48754816106222 *
1130679   +        GRP_Mnt2  +    -0.30894429756232 * GRP_Mnt3  +    -0.95770423028109 *
1130680   +        GRP_Mnt4  +    -1.64539798690154 * GRP_Mnt5  +     0.41874777811787 *
1130681   +        GRP_Mnt6  +     -0.1532077512138 * GRP_Mnt7  +    -0.04430209280744 *
1130682   +        GRP_Mnt8  +     0.02050928860703 * GRP_Mnt9  +    -0.23141760714689 *
1130683   +        GRP_Mnt10  +     0.57065075916048 * GRP_MntFishProducts3
1130684   +          +     2.12207366601436 * GRP_MntFishProducts4
1130685   +          +     1.24477569664546 * GRP_MntFishProducts5
1130686   +          +    -0.15100981079052 * GRP_MntFishProducts6
1130687   +          +     0.46801413141905 * GRP_MntFishProducts7
1130688   +          +     1.01445048363237 * GRP_MntFishProducts8
1130689   +          +     0.13349988618819 * GRP_MntFishProducts9
1130690   +          +     0.63636065903854 * GRP_MntFishProducts10
1130691   +          +     0.35790281852262 * GRP_MntGoldProds2
1130692   +          +     0.11971728944951 * GRP_MntGoldProds3
1130693   +          +     1.37638045474104 * GRP_MntGoldProds4
1130694   +          +      0.7726977538873 * GRP_MntGoldProds5
1130695   +          +     1.54380129285603 * GRP_MntGoldProds6
1130696   +          +    -0.43867873229224 * GRP_MntGoldProds7
1130697   +          +     -0.0828489784008 * GRP_MntGoldProds8
1130698   +          +    -1.30553169816686 * GRP_MntGoldProds9
1130699   +          +     0.31517486136642 * GRP_MntGoldProds10
1130700   +          +     2.08926485272668 * GRP_MntMeatProducts2
1130701   +          +    -0.41323675739227 * GRP_MntMeatProducts3
1130702   +          +     0.77026554823296 * GRP_MntMeatProducts4
1130703   +          +     1.50837606673951 * GRP_MntMeatProducts5
1130704   +          +    -0.50610766287925 * GRP_MntMeatProducts6
1130705   +          +    -0.95808202669031 * GRP_MntMeatProducts7
1130706   +          +    -0.73210997972236 * GRP_MntMeatProducts8
1130707   +          +      0.4803662033036 * GRP_MntMeatProducts9
1130708   +          +    -0.42623536772485 * GRP_MntMeatProducts10
1130709   +          +    -0.98377710430047 * GRP_MntSweetProducts3
1130710   +          +     1.29812120945148 * GRP_MntSweetProducts4
1130711   +          +     1.13394147298504 * GRP_MntSweetProducts5
1130712   +          +     1.88553289457256 * GRP_MntSweetProducts6
1130713   +          +     1.01861533954881 * GRP_MntSweetProducts7
1130714   +          +    -0.96863877000054 * GRP_MntSweetProducts8
1130715   +          +    -0.62054685937371 * GRP_MntSweetProducts9
1130716   +          +     0.12973446109882 * GRP_MntSweetProducts10
1130717   +          +    -0.62846271426447 * GRP_MntWines2  +     -0.8813121582917 *
1130718   +        GRP_MntWines3  +     0.63705101351299 * GRP_MntWines4
1130719   +          +    -1.87236646995285 * GRP_MntWines5  +    -1.18525347066321 *
1130720   +        GRP_MntWines6  +     2.53144197387008 * GRP_MntWines7
1130721   +          +      0.4451263901865 * GRP_MntWines8  +      1.2759478420416 *
1130722   +        GRP_MntWines9  +    -0.31414756703531 * GRP_MntWines10
1130723   +          +     0.24125160079787 * GRP_NumCatalogPurchases3
1130724   +          +     0.92633573785462 * GRP_NumCatalogPurchases4
1130725   +          +     1.18471184481323 * GRP_NumCatalogPurchases5
1130726   +          +    -0.58925390407558 * GRP_NumCatalogPurchases6
1130727   +          +     0.17286372485467 * GRP_NumCatalogPurchases7
1130728   +          +    -0.33288324436397 * GRP_NumDistPurchases2
1130729   +          +    -0.00244246555209 * GRP_NumDistPurchases3
1130730   +          +    -0.68136277383147 * GRP_NumDistPurchases4
1130731   +          +    -0.39044423572436 * GRP_NumDistPurchases5
1130732   +          +    -0.63508124022502 * GRP_NumDistPurchases6
1130733   +          +     1.12448752949295 * GRP_NumDistPurchases7
1130734   +          +     0.02898721976687 * GRP_NumDistPurchases8
1130735   +          +     0.78422457187261 * GRP_NumDistPurchases9
1130736   +          +    -0.51157522383083 * GRP_NumDistPurchases10
1130737   +          +    -0.19655601102758 * GRP_NumWebPurchases2
1130738   +          +    -0.43353198133592 * GRP_NumWebPurchases3
1130739   +          +     0.57303663109299 * GRP_NumWebPurchases4
1130740   +          +     0.44298473255625 * GRP_NumWebPurchases5
1130741   +          +     1.64940181869571 * GRP_NumWebPurchases6
1130742   +          +    -0.25769995323951 * GRP_NumWebPurchases7
1130743   +          +    -1.80626838046671 * GRP_NumWebPurchases8
1130744   +          +    -0.39825837678237 * GRP_NumWebVisitsMonth2
1130745   +          +    -0.27886029046796 * GRP_NumWebVisitsMonth3
1130746   +          +    -0.78900900175098 * GRP_NumWebVisitsMonth4
1130747   +          +    -0.03893707525125 * GRP_NumWebVisitsMonth5
1130748   +          +    -0.46465177083799 * GRP_NumWebVisitsMonth6
1130749   +          +     0.42334277075131 * GRP_NumWebVisitsMonth7
1130750   +          +     0.95483884118217 * GRP_NumWebVisitsMonth8
1130751   +          +    -1.60737512717605 * GRP_RFMstat2  +     0.12532825553734 *
1130752   +        GRP_RFMstat3  +     -0.8715682423187 * GRP_RFMstat4
1130753   +          +    -1.58991314451625 * GRP_RFMstat5  +       1.561575688018 *
1130754   +        GRP_RFMstat6  +     1.02933022756158 * GRP_RFMstat7
1130755   +          +    -2.31915849609871 * GRP_RFMstat8  +    -2.84566628839516 *
1130756   +        GRP_RFMstat9  +    -0.57016541369574 * GRP_RFMstat10
1130757   +          +    -0.31514918770314 * GRP_RMntFrq2  +     0.63646656105106 *
1130758   +        GRP_RMntFrq3  +    -0.46293466192264 * GRP_RMntFrq4
1130759   +          +     0.54567569749056 * GRP_RMntFrq5  +     0.86979763512166 *
1130760   +        GRP_RMntFrq6  +     0.52805740997594 * GRP_RMntFrq7
1130761   +          +    -1.02676864365651 * GRP_RMntFrq8  +    -0.06036462998226 *
1130762   +        GRP_RMntFrq9  +     1.10224270504506 * GRP_RMntFrq10
1130763   +          +    -0.23825567927471 * GRP_Recency2  +     0.57752173954669 *
1130764   +        GRP_Recency3  +    -1.04299682241307 * GRP_Recency4
1130765   +          +     0.48450986361423 * GRP_Recency5  +    -0.27557230387919 *
1130766   +        GRP_Recency6  +     1.13777960768356 * GRP_Recency7
1130767   +          +     0.41680852213768 * GRP_Recency8  +    -0.32662764603354 *
1130768   +        GRP_Recency9  +     0.80671738024139 * GRP_Recency10 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 1.4952515081505 * GRP_AcceptedCmp52 + 1.14523176862382
* GRP_AcceptedCmpTotal3 + 0.93425623080229 * GRP_Frq2 + -0.23764135713737 * GRP_Frq3 +
1.05225179768198 * GRP_Frq4 + 1.13893285231202 * GRP_Frq5 + -0.27680259911931 * GRP_Frq6 +
-0.38613226683298 * GRP_Frq7 + 0.94138019603873 * GRP_Frq8 + -0.96317020684084 * GRP_Frq9 +
1.74049706575335 * GRP_Frq10 + -1.04039907773219 * GRP_Income2 + -0.3786016700082 *
GRP_Income3 + 1.05648065329445 * GRP_Income4 + -0.56495305593924 * GRP_Income5 +
0.3223314463995 * GRP_Income6 + -0.47141915296565 * GRP_Income7 + 0.72744850687316 *
GRP_Income8 + 0.36203320013679 * GRP_Income9 + 1.03998002924375 * GRP_Income10 +
-1.48754816106222 * GRP_Mnt2 + -0.30894429756232 * GRP_Mnt3 + -0.95770423028109 * GRP_Mnt4 +
-1.64539798690154 * GRP_Mnt5 + 0.41874777811787 * GRP_Mnt6 + -0.1532077512138 * GRP_Mnt7 +
-0.04430209280744 * GRP_Mnt8 + 0.02050928860703 * GRP_Mnt9 + -0.23141760714689 * GRP_Mnt10 +
0.57065075916048 * GRP_MntFishProducts3 + 2.12207366601436 * GRP_MntFishProducts4 +
1.24477569664546 * GRP_MntFishProducts5 + -0.15100981079052 * GRP_MntFishProducts6 +
0.46801413141905 * GRP_MntFishProducts7 + 1.01445048363237 * GRP_MntFishProducts8 +
0.13349988618819 * GRP_MntFishProducts9 + 0.63636065903854 * GRP_MntFishProducts10 +
0.35790281852262 * GRP_MntGoldProds2 + 0.11971728944951 * GRP_MntGoldProds3 + 1.37638045474104
* GRP_MntGoldProds4 + 0.7726977538873 * GRP_MntGoldProds5 + 1.54380129285603 *
GRP_MntGoldProds6 + -0.43867873229224 * GRP_MntGoldProds7 + -0.0828489784008 *
GRP_MntGoldProds8 + -1.30553169816686 * GRP_MntGoldProds9 + 0.31517486136642 *
GRP_MntGoldProds10 + 2.08926485272668 * GRP_MntMeatProducts2 + -0.41323675739227 *
GRP_MntMeatProducts3 + 0.77026554823296 * GRP_MntMeatProducts4 + 1.50837606673951 *
GRP_MntMeatProducts5 + -0.50610766287925 * GRP_MntMeatProducts6 + -0.95808202669031 *
GRP_MntMeatProducts7 + -0.73210997972236 * GRP_MntMeatProducts8 + 0.4803662033036 *
GRP_MntMeatProducts9 + -0.42623536772485 * GRP_MntMeatProducts10 + -0.98377710430047 *
GRP_MntSweetProducts3 + 1.29812120945148 * GRP_MntSweetProducts4 + 1.13394147298504 *
GRP_MntSweetProducts5 + 1.88553289457256 * GRP_MntSweetProducts6 + 1.01861533954881 *
GRP_MntSweetProducts7 + -0.96863877000054 * GRP_MntSweetProducts8 + -0.62054685937371 *
GRP_MntSweetProducts9 + 0.12973446109882 * GRP_MntSweetProducts10 + -0.62846271426447 *
GRP_MntWines2 + -0.8813121582917 * GRP_MntWines3 + 0.63705101351299 * GRP_MntWines4 +
-1.87236646995285 * GRP_MntWines5 + -1.18525347066321 * GRP_MntWines6 + 2.53144197387008 *
GRP_MntWines7 + 0.4451263901865 * GRP_MntWines8 + 1.2759478420416 * GRP_MntWines9 +
-0.31414756703531 * GRP_MntWines10 + 0.24125160079787 * GRP_NumCatalogPurchases3 +
0.92633573785462 * GRP_NumCatalogPurchases4 + 1.18471184481323 * GRP_NumCatalogPurchases5 +
-0.58925390407558 * GRP_NumCatalogPurchases6 + 0.17286372485467 * GRP_NumCatalogPurchases7 +
-0.33288324436397 * GRP_NumDistPurchases2 + -0.00244246555209 * GRP_NumDistPurchases3 +
-0.68136277383147 * GRP_NumDistPurchases4 + -0.39044423572436 * GRP_NumDistPurchases5 +
-0.63508124022502 * GRP_NumDistPurchases6 + 1.12448752949295 * GRP_NumDistPurchases7 +
0.02898721976687 * GRP_NumDistPurchases8 + 0.78422457187261 * GRP_NumDistPurchases9 +
-0.51157522383083 * GRP_NumDistPurchases10 + -0.19655601102758 * GRP_NumWebPurchases2 +
-0.43353198133592 * GRP_NumWebPurchases3 + 0.57303663109299 * GRP_NumWebPurchases4 +
0.44298473255625 * GRP_NumWebPurchases5 + 1.64940181869571 * GRP_NumWebPurchases6 +
-0.25769995323951 * GRP_NumWebPurchases7 + -1.80626838046671 * GRP_NumWebPurchases8 +
-0.39825837678237 * GRP_NumWebVisitsMonth2 + -0.27886029046796 * GRP_NumWebVisitsMonth3 +
-0.78900900175098 * GRP_NumWebVisitsMonth4 + -0.03893707525125 * GRP_NumWebVisitsMonth5 +
-0.46465177083799 * GRP_NumWebVisitsMonth6 + 0.42334277075131 * GRP_NumWebVisitsMonth7 +
0.95483884118217 * GRP_NumWebVisitsMonth8 + -1.60737512717605 * GRP_RFMstat2 +
0.12532825553734 * GRP_RFMstat3 + -0.8715682423187 * GRP_RFMstat4 + -1.58991314451625 *
GRP_RFMstat5 + 1.561575688018 * GRP_RFMstat6 + 1.02933022756158 * GRP_RFMstat7 +
-2.31915849609871 * GRP_RFMstat8 + -2.84566628839516 * GRP_RFMstat9 + -0.57016541369574 *
GRP_RFMstat10 + -0.31514918770314 * GRP_RMntFrq2 + 0.63646656105106 * GRP_RMntFrq3 +
-0.46293466192264 * GRP_RMntFrq4 + 0.54567569749056 * GRP_RMntFrq5 + 0.86979763512166 *
GRP_RMntFrq6 + 0.52805740997594 * GRP_RMntFrq7 + -1.02676864365651 * GRP_RMntFrq8 +
-0.06036462998226 * GRP_RMntFrq9 + 1.10224270504506 * GRP_RMntFrq10 + -0.23825567927471 *
GRP_Recency2 + 0.57752173954669 * GRP_Recency3 + -1.04299682241307 * GRP_Recency4 +
0.48450986361423 * GRP_Recency5 + -0.27557230387919 * GRP_Recency6 + 1.13777960768356 *
GRP_Recency7 + 0.41680852213768 * GRP_Recency8 + -0.32662764603354 * GRP_Recency9 +
0.80671738024139 * GRP_Recency10 ;
1130769   +   H1x1_2  = H1x1_2  +     0.32193368206173 * GRP_AcceptedCmp52
1130770   +          +     0.82326963141087 * GRP_AcceptedCmpTotal3
1130771   +          +     0.29199450204637 * GRP_Frq2  +    -0.20110326184849 * GRP_Frq3
1130772   +          +     1.15620288699913 * GRP_Frq4  +     1.91563433844484 * GRP_Frq5
1130773   +          +    -1.94417593954758 * GRP_Frq6  +    -0.47586232856071 * GRP_Frq7
1130774   +          +    -0.10925637884701 * GRP_Frq8  +     1.04074726941789 * GRP_Frq9
1130775   +          +    -1.19736074070766 * GRP_Frq10  +     1.23870153104153 *
1130776   +        GRP_Income2  +     1.32868254469642 * GRP_Income3
1130777   +          +    -1.43777045525805 * GRP_Income4  +    -3.47419008335802 *
1130778   +        GRP_Income5  +    -1.27020686562599 * GRP_Income6
1130779   +          +    -0.98522733275557 * GRP_Income7  +    -0.14168992699506 *
1130780   +        GRP_Income8  +    -0.85866324769247 * GRP_Income9
1130781   +          +    -1.23618327699367 * GRP_Income10  +     1.68515397455794 *
1130782   +        GRP_Mnt2  +    -0.47759836154745 * GRP_Mnt3  +     0.78983592820334 *
1130783   +        GRP_Mnt4  +    -0.68136197325175 * GRP_Mnt5  +    -1.12504577016144 *
1130784   +        GRP_Mnt6  +     0.04737591582113 * GRP_Mnt7  +     1.28481668963926 *
1130785   +        GRP_Mnt8  +    -0.80486225354961 * GRP_Mnt9  +     0.21161129936087 *
1130786   +        GRP_Mnt10  +    -0.36757535415244 * GRP_MntFishProducts3
1130787   +          +    -0.33143977879958 * GRP_MntFishProducts4
1130788   +          +     1.93255446105149 * GRP_MntFishProducts5
1130789   +          +    -1.04814780142169 * GRP_MntFishProducts6
1130790   +          +     0.55741771876452 * GRP_MntFishProducts7
1130791   +          +    -0.92346757070836 * GRP_MntFishProducts8
1130792   +          +    -2.06316504690909 * GRP_MntFishProducts9
1130793   +          +    -0.99663986972644 * GRP_MntFishProducts10
1130794   +          +     2.71588988290106 * GRP_MntGoldProds2
1130795   +          +    -2.95950500047378 * GRP_MntGoldProds3
1130796   +          +    -0.12315192366204 * GRP_MntGoldProds4
1130797   +          +     2.36302474420457 * GRP_MntGoldProds5
1130798   +          +    -1.11740173730236 * GRP_MntGoldProds6
1130799   +          +    -0.06629690891602 * GRP_MntGoldProds7
1130800   +          +     1.53811367494183 * GRP_MntGoldProds8
1130801   +          +    -0.74588656478301 * GRP_MntGoldProds9
1130802   +          +     -0.1802565447079 * GRP_MntGoldProds10
1130803   +          +    -0.01894056181534 * GRP_MntMeatProducts2
1130804   +          +    -1.15568679348089 * GRP_MntMeatProducts3
1130805   +          +    -0.58682052930966 * GRP_MntMeatProducts4
1130806   +          +     -0.6043543906002 * GRP_MntMeatProducts5
1130807   +          +     2.85692516249605 * GRP_MntMeatProducts6
1130808   +          +     0.73625924216854 * GRP_MntMeatProducts7
1130809   +          +     1.74214728746989 * GRP_MntMeatProducts8
1130810   +          +    -0.45744353564408 * GRP_MntMeatProducts9
1130811   +          +     -1.4723966813517 * GRP_MntMeatProducts10
1130812   +          +    -1.09495306347627 * GRP_MntSweetProducts3
1130813   +          +     -0.4054731731199 * GRP_MntSweetProducts4
1130814   +          +    -0.60803493417392 * GRP_MntSweetProducts5
1130815   +          +     0.20719345639414 * GRP_MntSweetProducts6
1130816   +          +     1.02644572280032 * GRP_MntSweetProducts7
1130817   +          +    -1.64943878087677 * GRP_MntSweetProducts8
1130818   +          +      2.5809291197819 * GRP_MntSweetProducts9
1130819   +          +    -1.12543901836329 * GRP_MntSweetProducts10
1130820   +          +     0.80918074561742 * GRP_MntWines2  +    -0.41223459539794 *
1130821   +        GRP_MntWines3  +    -1.98090391049585 * GRP_MntWines4
1130822   +          +     0.47010666911014 * GRP_MntWines5  +    -2.49811494662362 *
1130823   +        GRP_MntWines6  +    -0.66268495109454 * GRP_MntWines7
1130824   +          +     0.39873289333478 * GRP_MntWines8  +     0.59392453433629 *
1130825   +        GRP_MntWines9  +     1.76795712153005 * GRP_MntWines10
1130826   +          +     0.62443875288586 * GRP_NumCatalogPurchases3
1130827   +          +    -0.23239899520452 * GRP_NumCatalogPurchases4
1130828   +          +     0.77819270235427 * GRP_NumCatalogPurchases5
1130829   +          +    -0.66349897020768 * GRP_NumCatalogPurchases6
1130830   +          +    -0.28807954547855 * GRP_NumCatalogPurchases7
1130831   +          +     0.68100611767034 * GRP_NumDistPurchases2
1130832   +          +     -0.2983323877346 * GRP_NumDistPurchases3
1130833   +          +     1.45550232689859 * GRP_NumDistPurchases4
1130834   +          +     0.11615366779409 * GRP_NumDistPurchases5
1130835   +          +    -2.32779642988276 * GRP_NumDistPurchases6
1130836   +          +    -1.28135209220093 * GRP_NumDistPurchases7
1130837   +          +    -0.28870369893693 * GRP_NumDistPurchases8
1130838   +          +     0.19103763943343 * GRP_NumDistPurchases9
1130839   +          +    -0.45462159014129 * GRP_NumDistPurchases10
1130840   +          +     0.97366301040717 * GRP_NumWebPurchases2
1130841   +          +     3.15113200753743 * GRP_NumWebPurchases3
1130842   +          +     0.58917122105031 * GRP_NumWebPurchases4
1130843   +          +     0.12866676129391 * GRP_NumWebPurchases5
1130844   +          +     0.07041507244185 * GRP_NumWebPurchases6
1130845   +          +    -0.06632505905192 * GRP_NumWebPurchases7
1130846   +          +     1.50920205841058 * GRP_NumWebPurchases8
1130847   +          +    -2.47459746725091 * GRP_NumWebVisitsMonth2
1130848   +          +     1.21230732020908 * GRP_NumWebVisitsMonth3
1130849   +          +     0.02999057712001 * GRP_NumWebVisitsMonth4
1130850   +          +    -0.33433716782878 * GRP_NumWebVisitsMonth5
1130851   +          +     2.75617273064887 * GRP_NumWebVisitsMonth6
1130852   +          +     0.91205481253913 * GRP_NumWebVisitsMonth7
1130853   +          +    -1.40389237616488 * GRP_NumWebVisitsMonth8
1130854   +          +    -0.07601897093846 * GRP_RFMstat2  +    -0.17804688029525 *
1130855   +        GRP_RFMstat3  +    -1.25755712891617 * GRP_RFMstat4
1130856   +          +    -1.44373874040728 * GRP_RFMstat5  +     0.18486659716439 *
1130857   +        GRP_RFMstat6  +    -1.15261748039876 * GRP_RFMstat7
1130858   +          +     1.14394270249563 * GRP_RFMstat8  +    -1.50826640819395 *
1130859   +        GRP_RFMstat9  +     0.90336660848561 * GRP_RFMstat10
1130860   +          +     0.11901703475432 * GRP_RMntFrq2  +     0.14476182733312 *
1130861   +        GRP_RMntFrq3  +     0.32489702019702 * GRP_RMntFrq4
1130862   +          +    -1.57145901582776 * GRP_RMntFrq5  +     0.07677043753266 *
1130863   +        GRP_RMntFrq6  +     1.15426453256065 * GRP_RMntFrq7
1130864   +          +     1.61100197843951 * GRP_RMntFrq8  +    -0.55320583423719 *
1130865   +        GRP_RMntFrq9  +    -0.36289317306929 * GRP_RMntFrq10
1130866   +          +     -0.0602051134327 * GRP_Recency2  +     0.72031394040131 *
1130867   +        GRP_Recency3  +    -1.01324252973573 * GRP_Recency4
1130868   +          +     -0.2828776155712 * GRP_Recency5  +    -0.55661874182308 *
1130869   +        GRP_Recency6  +    -0.31727450762599 * GRP_Recency7
1130870   +          +     1.13540870611782 * GRP_Recency8  +    -1.13660380171875 *
1130871   +        GRP_Recency9  +     1.50200700925354 * GRP_Recency10 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.32193368206173 * GRP_AcceptedCmp52 +
0.82326963141087 * GRP_AcceptedCmpTotal3 + 0.29199450204637 * GRP_Frq2 + -0.20110326184849 *
GRP_Frq3 + 1.15620288699913 * GRP_Frq4 + 1.91563433844484 * GRP_Frq5 + -1.94417593954758 *
GRP_Frq6 + -0.47586232856071 * GRP_Frq7 + -0.10925637884701 * GRP_Frq8 + 1.04074726941789 *
GRP_Frq9 + -1.19736074070766 * GRP_Frq10 + 1.23870153104153 * GRP_Income2 + 1.32868254469642 *
GRP_Income3 + -1.43777045525805 * GRP_Income4 + -3.47419008335802 * GRP_Income5 +
-1.27020686562599 * GRP_Income6 + -0.98522733275557 * GRP_Income7 + -0.14168992699506 *
GRP_Income8 + -0.85866324769247 * GRP_Income9 + -1.23618327699367 * GRP_Income10 +
1.68515397455794 * GRP_Mnt2 + -0.47759836154745 * GRP_Mnt3 + 0.78983592820334 * GRP_Mnt4 +
-0.68136197325175 * GRP_Mnt5 + -1.12504577016144 * GRP_Mnt6 + 0.04737591582113 * GRP_Mnt7 +
1.28481668963926 * GRP_Mnt8 + -0.80486225354961 * GRP_Mnt9 + 0.21161129936087 * GRP_Mnt10 +
-0.36757535415244 * GRP_MntFishProducts3 + -0.33143977879958 * GRP_MntFishProducts4 +
1.93255446105149 * GRP_MntFishProducts5 + -1.04814780142169 * GRP_MntFishProducts6 +
0.55741771876452 * GRP_MntFishProducts7 + -0.92346757070836 * GRP_MntFishProducts8 +
-2.06316504690909 * GRP_MntFishProducts9 + -0.99663986972644 * GRP_MntFishProducts10 +
2.71588988290106 * GRP_MntGoldProds2 + -2.95950500047378 * GRP_MntGoldProds3 +
-0.12315192366204 * GRP_MntGoldProds4 + 2.36302474420457 * GRP_MntGoldProds5 +
-1.11740173730236 * GRP_MntGoldProds6 + -0.06629690891602 * GRP_MntGoldProds7 +
1.53811367494183 * GRP_MntGoldProds8 + -0.74588656478301 * GRP_MntGoldProds9 +
-0.1802565447079 * GRP_MntGoldProds10 + -0.01894056181534 * GRP_MntMeatProducts2 +
-1.15568679348089 * GRP_MntMeatProducts3 + -0.58682052930966 * GRP_MntMeatProducts4 +
-0.6043543906002 * GRP_MntMeatProducts5 + 2.85692516249605 * GRP_MntMeatProducts6 +
0.73625924216854 * GRP_MntMeatProducts7 + 1.74214728746989 * GRP_MntMeatProducts8 +
-0.45744353564408 * GRP_MntMeatProducts9 + -1.4723966813517 * GRP_MntMeatProducts10 +
-1.09495306347627 * GRP_MntSweetProducts3 + -0.4054731731199 * GRP_MntSweetProducts4 +
-0.60803493417392 * GRP_MntSweetProducts5 + 0.20719345639414 * GRP_MntSweetProducts6 +
1.02644572280032 * GRP_MntSweetProducts7 + -1.64943878087677 * GRP_MntSweetProducts8 +
2.5809291197819 * GRP_MntSweetProducts9 + -1.12543901836329 * GRP_MntSweetProducts10 +
0.80918074561742 * GRP_MntWines2 + -0.41223459539794 * GRP_MntWines3 + -1.98090391049585 *
GRP_MntWines4 + 0.47010666911014 * GRP_MntWines5 + -2.49811494662362 * GRP_MntWines6 +
-0.66268495109454 * GRP_MntWines7 + 0.39873289333478 * GRP_MntWines8 + 0.59392453433629 *
GRP_MntWines9 + 1.76795712153005 * GRP_MntWines10 + 0.62443875288586 *
GRP_NumCatalogPurchases3 + -0.23239899520452 * GRP_NumCatalogPurchases4 + 0.77819270235427 *
GRP_NumCatalogPurchases5 + -0.66349897020768 * GRP_NumCatalogPurchases6 + -0.28807954547855 *
GRP_NumCatalogPurchases7 + 0.68100611767034 * GRP_NumDistPurchases2 + -0.2983323877346 *
GRP_NumDistPurchases3 + 1.45550232689859 * GRP_NumDistPurchases4 + 0.11615366779409 *
GRP_NumDistPurchases5 + -2.32779642988276 * GRP_NumDistPurchases6 + -1.28135209220093 *
GRP_NumDistPurchases7 + -0.28870369893693 * GRP_NumDistPurchases8 + 0.19103763943343 *
GRP_NumDistPurchases9 + -0.45462159014129 * GRP_NumDistPurchases10 + 0.97366301040717 *
GRP_NumWebPurchases2 + 3.15113200753743 * GRP_NumWebPurchases3 + 0.58917122105031 *
GRP_NumWebPurchases4 + 0.12866676129391 * GRP_NumWebPurchases5 + 0.07041507244185 *
GRP_NumWebPurchases6 + -0.06632505905192 * GRP_NumWebPurchases7 + 1.50920205841058 *
GRP_NumWebPurchases8 + -2.47459746725091 * GRP_NumWebVisitsMonth2 + 1.21230732020908 *
GRP_NumWebVisitsMonth3 + 0.02999057712001 * GRP_NumWebVisitsMonth4 + -0.33433716782878 *
GRP_NumWebVisitsMonth5 + 2.75617273064887 * GRP_NumWebVisitsMonth6 + 0.91205481253913 *
GRP_NumWebVisitsMonth7 + -1.40389237616488 * GRP_NumWebVisitsMonth8 + -0.07601897093846 *
GRP_RFMstat2 + -0.17804688029525 * GRP_RFMstat3 + -1.25755712891617 * GRP_RFMstat4 +
-1.44373874040728 * GRP_RFMstat5 + 0.18486659716439 * GRP_RFMstat6 + -1.15261748039876 *
GRP_RFMstat7 + 1.14394270249563 * GRP_RFMstat8 + -1.50826640819395 * GRP_RFMstat9 +
0.90336660848561 * GRP_RFMstat10 + 0.11901703475432 * GRP_RMntFrq2 + 0.14476182733312 *
GRP_RMntFrq3 + 0.32489702019702 * GRP_RMntFrq4 + -1.57145901582776 * GRP_RMntFrq5 +
0.07677043753266 * GRP_RMntFrq6 + 1.15426453256065 * GRP_RMntFrq7 + 1.61100197843951 *
GRP_RMntFrq8 + -0.55320583423719 * GRP_RMntFrq9 + -0.36289317306929 * GRP_RMntFrq10 +
-0.0602051134327 * GRP_Recency2 + 0.72031394040131 * GRP_Recency3 + -1.01324252973573 *
GRP_Recency4 + -0.2828776155712 * GRP_Recency5 + -0.55661874182308 * GRP_Recency6 +
-0.31727450762599 * GRP_Recency7 + 1.13540870611782 * GRP_Recency8 + -1.13660380171875 *
GRP_Recency9 + 1.50200700925354 * GRP_Recency10 ;
1130872   +   H1x1_3  = H1x1_3  +    -1.03985555112012 * GRP_AcceptedCmp52
1130873   +          +     0.25775857203989 * GRP_AcceptedCmpTotal3
1130874   +          +    -0.71156531868268 * GRP_Frq2  +     0.67259022689422 * GRP_Frq3
1130875   +          +    -1.97845323119706 * GRP_Frq4  +    -1.52930723846502 * GRP_Frq5
1130876   +          +     0.28107074664618 * GRP_Frq6  +     1.14326791621936 * GRP_Frq7
1130877   +          +    -1.22814850699575 * GRP_Frq8  +     -0.1984823170485 * GRP_Frq9
1130878   +          +     1.55339967620915 * GRP_Frq10  +     0.40856006828913 *
1130879   +        GRP_Income2  +    -0.24937432220747 * GRP_Income3
1130880   +          +     0.77178170458781 * GRP_Income4  +     -0.1042181149455 *
1130881   +        GRP_Income5  +     0.83921353126936 * GRP_Income6
1130882   +          +     0.42897985145162 * GRP_Income7  +    -0.99399816643537 *
1130883   +        GRP_Income8  +     1.43456355062073 * GRP_Income9
1130884   +          +      2.0557598827554 * GRP_Income10  +     0.53153636588135 *
1130885   +        GRP_Mnt2  +      1.4499127888941 * GRP_Mnt3  +    -1.79642136320056 *
1130886   +        GRP_Mnt4  +     0.23742732777127 * GRP_Mnt5  +     0.66365989150128 *
1130887   +        GRP_Mnt6  +    -2.42545477483083 * GRP_Mnt7  +    -2.06918742851762 *
1130888   +        GRP_Mnt8  +     0.39193343300266 * GRP_Mnt9  +    -0.68271160013302 *
1130889   +        GRP_Mnt10  +    -0.40413771106033 * GRP_MntFishProducts3
1130890   +          +     1.62536744100755 * GRP_MntFishProducts4
1130891   +          +     1.00956771804097 * GRP_MntFishProducts5
1130892   +          +    -0.04807563648335 * GRP_MntFishProducts6
1130893   +          +    -0.27640554543874 * GRP_MntFishProducts7
1130894   +          +    -0.09019675678864 * GRP_MntFishProducts8
1130895   +          +     1.51664080485047 * GRP_MntFishProducts9
1130896   +          +     -1.2348175966111 * GRP_MntFishProducts10
1130897   +          +     0.84388560297705 * GRP_MntGoldProds2
1130898   +          +     0.21507152885146 * GRP_MntGoldProds3
1130899   +          +    -0.15826409097881 * GRP_MntGoldProds4
1130900   +          +    -2.20608646296521 * GRP_MntGoldProds5
1130901   +          +    -0.36898605604248 * GRP_MntGoldProds6
1130902   +          +     0.80401593320079 * GRP_MntGoldProds7
1130903   +          +     -0.0928561699183 * GRP_MntGoldProds8
1130904   +          +    -0.76260849885604 * GRP_MntGoldProds9
1130905   +          +     0.41599883721366 * GRP_MntGoldProds10
1130906   +          +    -0.58540441202927 * GRP_MntMeatProducts2
1130907   +          +     0.53713605550175 * GRP_MntMeatProducts3
1130908   +          +    -0.65152621681077 * GRP_MntMeatProducts4
1130909   +          +    -0.69756285035088 * GRP_MntMeatProducts5
1130910   +          +     0.05767888263587 * GRP_MntMeatProducts6
1130911   +          +     -0.1888350635322 * GRP_MntMeatProducts7
1130912   +          +     0.19414921399907 * GRP_MntMeatProducts8
1130913   +          +    -1.72928794783971 * GRP_MntMeatProducts9
1130914   +          +     -0.4799288615181 * GRP_MntMeatProducts10
1130915   +          +    -0.68909946079146 * GRP_MntSweetProducts3
1130916   +          +     0.63891877698479 * GRP_MntSweetProducts4
1130917   +          +     0.57432083655993 * GRP_MntSweetProducts5
1130918   +          +    -0.58035522854804 * GRP_MntSweetProducts6
1130919   +          +       1.935803556079 * GRP_MntSweetProducts7
1130920   +          +     0.18629207650306 * GRP_MntSweetProducts8
1130921   +          +     0.00378347159862 * GRP_MntSweetProducts9
1130922   +          +     1.81075447841433 * GRP_MntSweetProducts10
1130923   +          +    -0.19044365625491 * GRP_MntWines2  +     -0.2677543994646 *
1130924   +        GRP_MntWines3  +     0.68523737842149 * GRP_MntWines4
1130925   +          +     0.28487452840765 * GRP_MntWines5  +    -0.32830007597399 *
1130926   +        GRP_MntWines6  +    -1.01109771829124 * GRP_MntWines7
1130927   +          +    -0.44351213929191 * GRP_MntWines8  +    -0.79170922676093 *
1130928   +        GRP_MntWines9  +    -0.65765490294224 * GRP_MntWines10
1130929   +          +     0.35708705290413 * GRP_NumCatalogPurchases3
1130930   +          +     0.57640598587175 * GRP_NumCatalogPurchases4
1130931   +          +      1.0380514084777 * GRP_NumCatalogPurchases5
1130932   +          +    -0.21526014109961 * GRP_NumCatalogPurchases6
1130933   +          +     0.21188563678996 * GRP_NumCatalogPurchases7
1130934   +          +     0.92069365116707 * GRP_NumDistPurchases2
1130935   +          +    -1.32849502144337 * GRP_NumDistPurchases3
1130936   +          +     0.70446398487953 * GRP_NumDistPurchases4
1130937   +          +    -0.57133137108926 * GRP_NumDistPurchases5
1130938   +          +    -0.82186404546977 * GRP_NumDistPurchases6
1130939   +          +     0.46329271267276 * GRP_NumDistPurchases7
1130940   +          +    -0.66807540291648 * GRP_NumDistPurchases8
1130941   +          +    -1.44336206173897 * GRP_NumDistPurchases9
1130942   +          +    -1.13977568624017 * GRP_NumDistPurchases10
1130943   +          +    -1.70104902572474 * GRP_NumWebPurchases2
1130944   +          +     1.02036350016006 * GRP_NumWebPurchases3
1130945   +          +     0.39753119384781 * GRP_NumWebPurchases4
1130946   +          +     -1.0013941887276 * GRP_NumWebPurchases5
1130947   +          +    -1.86464684445185 * GRP_NumWebPurchases6
1130948   +          +    -0.34858626425799 * GRP_NumWebPurchases7
1130949   +          +    -1.44547405446756 * GRP_NumWebPurchases8
1130950   +          +     0.05140836436438 * GRP_NumWebVisitsMonth2
1130951   +          +     0.24015379584676 * GRP_NumWebVisitsMonth3
1130952   +          +    -0.49517632469744 * GRP_NumWebVisitsMonth4
1130953   +          +    -1.43605492927257 * GRP_NumWebVisitsMonth5
1130954   +          +     0.60170726736208 * GRP_NumWebVisitsMonth6
1130955   +          +     0.63411609486483 * GRP_NumWebVisitsMonth7
1130956   +          +     -1.2126844839861 * GRP_NumWebVisitsMonth8
1130957   +          +    -0.64965441128326 * GRP_RFMstat2  +     0.34697568605896 *
1130958   +        GRP_RFMstat3  +    -0.43341862711381 * GRP_RFMstat4
1130959   +          +     1.06858029248659 * GRP_RFMstat5  +    -0.56457302770384 *
1130960   +        GRP_RFMstat6  +     1.66706381189326 * GRP_RFMstat7
1130961   +          +    -2.17135319116775 * GRP_RFMstat8  +    -0.21450659726193 *
1130962   +        GRP_RFMstat9  +    -0.31077905350474 * GRP_RFMstat10
1130963   +          +      0.2192436825917 * GRP_RMntFrq2  +     1.83372548820854 *
1130964   +        GRP_RMntFrq3  +    -0.11145697947633 * GRP_RMntFrq4
1130965   +          +     0.55148891791064 * GRP_RMntFrq5  +     0.59018223296027 *
1130966   +        GRP_RMntFrq6  +    -1.05010790826944 * GRP_RMntFrq7
1130967   +          +     0.52934032045284 * GRP_RMntFrq8  +      0.2953493263513 *
1130968   +        GRP_RMntFrq9  +     -1.5124212512629 * GRP_RMntFrq10
1130969   +          +    -0.25342816485434 * GRP_Recency2  +    -1.06632533875501 *
1130970   +        GRP_Recency3  +     0.92243866019235 * GRP_Recency4
1130971   +          +    -0.69765274503358 * GRP_Recency5  +    -1.03684525826147 *
1130972   +        GRP_Recency6  +     0.92907236967862 * GRP_Recency7
1130973   +          +     0.67510319128245 * GRP_Recency8  +    -0.12563628417614 *
1130974   +        GRP_Recency9  +     0.22617805549496 * GRP_Recency10 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -1.03985555112012 * GRP_AcceptedCmp52 +
0.25775857203989 * GRP_AcceptedCmpTotal3 + -0.71156531868268 * GRP_Frq2 + 0.67259022689422 *
GRP_Frq3 + -1.97845323119706 * GRP_Frq4 + -1.52930723846502 * GRP_Frq5 + 0.28107074664618 *
GRP_Frq6 + 1.14326791621936 * GRP_Frq7 + -1.22814850699575 * GRP_Frq8 + -0.1984823170485 *
GRP_Frq9 + 1.55339967620915 * GRP_Frq10 + 0.40856006828913 * GRP_Income2 + -0.24937432220747 *
GRP_Income3 + 0.77178170458781 * GRP_Income4 + -0.1042181149455 * GRP_Income5 +
0.83921353126936 * GRP_Income6 + 0.42897985145162 * GRP_Income7 + -0.99399816643537 *
GRP_Income8 + 1.43456355062073 * GRP_Income9 + 2.0557598827554 * GRP_Income10 +
0.53153636588135 * GRP_Mnt2 + 1.4499127888941 * GRP_Mnt3 + -1.79642136320056 * GRP_Mnt4 +
0.23742732777127 * GRP_Mnt5 + 0.66365989150128 * GRP_Mnt6 + -2.42545477483083 * GRP_Mnt7 +
-2.06918742851762 * GRP_Mnt8 + 0.39193343300266 * GRP_Mnt9 + -0.68271160013302 * GRP_Mnt10 +
-0.40413771106033 * GRP_MntFishProducts3 + 1.62536744100755 * GRP_MntFishProducts4 +
1.00956771804097 * GRP_MntFishProducts5 + -0.04807563648335 * GRP_MntFishProducts6 +
-0.27640554543874 * GRP_MntFishProducts7 + -0.09019675678864 * GRP_MntFishProducts8 +
1.51664080485047 * GRP_MntFishProducts9 + -1.2348175966111 * GRP_MntFishProducts10 +
0.84388560297705 * GRP_MntGoldProds2 + 0.21507152885146 * GRP_MntGoldProds3 +
-0.15826409097881 * GRP_MntGoldProds4 + -2.20608646296521 * GRP_MntGoldProds5 +
-0.36898605604248 * GRP_MntGoldProds6 + 0.80401593320079 * GRP_MntGoldProds7 +
-0.0928561699183 * GRP_MntGoldProds8 + -0.76260849885604 * GRP_MntGoldProds9 +
0.41599883721366 * GRP_MntGoldProds10 + -0.58540441202927 * GRP_MntMeatProducts2 +
0.53713605550175 * GRP_MntMeatProducts3 + -0.65152621681077 * GRP_MntMeatProducts4 +
-0.69756285035088 * GRP_MntMeatProducts5 + 0.05767888263587 * GRP_MntMeatProducts6 +
-0.1888350635322 * GRP_MntMeatProducts7 + 0.19414921399907 * GRP_MntMeatProducts8 +
-1.72928794783971 * GRP_MntMeatProducts9 + -0.4799288615181 * GRP_MntMeatProducts10 +
-0.68909946079146 * GRP_MntSweetProducts3 + 0.63891877698479 * GRP_MntSweetProducts4 +
0.57432083655993 * GRP_MntSweetProducts5 + -0.58035522854804 * GRP_MntSweetProducts6 +
1.935803556079 * GRP_MntSweetProducts7 + 0.18629207650306 * GRP_MntSweetProducts8 +
0.00378347159862 * GRP_MntSweetProducts9 + 1.81075447841433 * GRP_MntSweetProducts10 +
-0.19044365625491 * GRP_MntWines2 + -0.2677543994646 * GRP_MntWines3 + 0.68523737842149 *
GRP_MntWines4 + 0.28487452840765 * GRP_MntWines5 + -0.32830007597399 * GRP_MntWines6 +
-1.01109771829124 * GRP_MntWines7 + -0.44351213929191 * GRP_MntWines8 + -0.79170922676093 *
GRP_MntWines9 + -0.65765490294224 * GRP_MntWines10 + 0.35708705290413 *
GRP_NumCatalogPurchases3 + 0.57640598587175 * GRP_NumCatalogPurchases4 + 1.0380514084777 *
GRP_NumCatalogPurchases5 + -0.21526014109961 * GRP_NumCatalogPurchases6 + 0.21188563678996 *
GRP_NumCatalogPurchases7 + 0.92069365116707 * GRP_NumDistPurchases2 + -1.32849502144337 *
GRP_NumDistPurchases3 + 0.70446398487953 * GRP_NumDistPurchases4 + -0.57133137108926 *
GRP_NumDistPurchases5 + -0.82186404546977 * GRP_NumDistPurchases6 + 0.46329271267276 *
GRP_NumDistPurchases7 + -0.66807540291648 * GRP_NumDistPurchases8 + -1.44336206173897 *
GRP_NumDistPurchases9 + -1.13977568624017 * GRP_NumDistPurchases10 + -1.70104902572474 *
GRP_NumWebPurchases2 + 1.02036350016006 * GRP_NumWebPurchases3 + 0.39753119384781 *
GRP_NumWebPurchases4 + -1.0013941887276 * GRP_NumWebPurchases5 + -1.86464684445185 *
GRP_NumWebPurchases6 + -0.34858626425799 * GRP_NumWebPurchases7 + -1.44547405446756 *
GRP_NumWebPurchases8 + 0.05140836436438 * GRP_NumWebVisitsMonth2 + 0.24015379584676 *
GRP_NumWebVisitsMonth3 + -0.49517632469744 * GRP_NumWebVisitsMonth4 + -1.43605492927257 *
GRP_NumWebVisitsMonth5 + 0.60170726736208 * GRP_NumWebVisitsMonth6 + 0.63411609486483 *
GRP_NumWebVisitsMonth7 + -1.2126844839861 * GRP_NumWebVisitsMonth8 + -0.64965441128326 *
GRP_RFMstat2 + 0.34697568605896 * GRP_RFMstat3 + -0.43341862711381 * GRP_RFMstat4 +
1.06858029248659 * GRP_RFMstat5 + -0.56457302770384 * GRP_RFMstat6 + 1.66706381189326 *
GRP_RFMstat7 + -2.17135319116775 * GRP_RFMstat8 + -0.21450659726193 * GRP_RFMstat9 +
-0.31077905350474 * GRP_RFMstat10 + 0.2192436825917 * GRP_RMntFrq2 + 1.83372548820854 *
GRP_RMntFrq3 + -0.11145697947633 * GRP_RMntFrq4 + 0.55148891791064 * GRP_RMntFrq5 +
0.59018223296027 * GRP_RMntFrq6 + -1.05010790826944 * GRP_RMntFrq7 + 0.52934032045284 *
GRP_RMntFrq8 + 0.2953493263513 * GRP_RMntFrq9 + -1.5124212512629 * GRP_RMntFrq10 +
-0.25342816485434 * GRP_Recency2 + -1.06632533875501 * GRP_Recency3 + 0.92243866019235 *
GRP_Recency4 + -0.69765274503358 * GRP_Recency5 + -1.03684525826147 * GRP_Recency6 +
0.92907236967862 * GRP_Recency7 + 0.67510319128245 * GRP_Recency8 + -0.12563628417614 *
GRP_Recency9 + 0.22617805549496 * GRP_Recency10 ;
1130975   +   H1x1_1  =     0.15531859064267 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.15531859064267 + H1x1_1 ;
1130976   +   H1x1_2  =     1.82135862068225 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.82135862068225 + H1x1_2 ;
1130977   +   H1x1_3  =      0.3038406758605 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.3038406758605 + H1x1_3 ;
1130978   +   H1x1_4  = 0;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0;
1130979   +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 );
1130980   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1130981   +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
1130982   +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
1130983   +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
1130984   +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
1130985   +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
1130986   +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
1130987   +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
1130988   +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
1130989   +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
1130990   +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
1130991   +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
1130992   +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
1130993   +END;
MPRINT(EM_DIAGRAM):   END;
1130994   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1130995   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
1130996   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
1130997   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
1130998   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
1130999   +END;
MPRINT(EM_DIAGRAM):   END;
1131000   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1131001   +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
1131002   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1131003   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1131004   +   H1x2_1  =    -1.12587004977911 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -1.12587004977911 * S_Year_Birth ;
1131005   +   H1x2_2  =     1.95303306784814 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 1.95303306784814 * S_Year_Birth ;
1131006   +   H1x2_3  =    -0.90076896361071 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.90076896361071 * S_Year_Birth ;
1131007   +   H1x2_1  = H1x2_1  +    -0.79126569643619 * GRP_AcceptedCmp52
1131008   +          +     1.43306912145272 * GRP_AcceptedCmpTotal3
1131009   +          +     1.22454618925923 * GRP_Frq2  +    -1.05161181420251 * GRP_Frq3
1131010   +          +     0.18863611173949 * GRP_Frq4  +    -1.53183971921525 * GRP_Frq5
1131011   +          +    -2.01595133665319 * GRP_Frq6  +     -1.0035007257827 * GRP_Frq7
1131012   +          +     0.15713490969217 * GRP_Frq8  +    -0.83347236903779 * GRP_Frq9
1131013   +          +     0.29577012385785 * GRP_Frq10  +    -0.62392105819131 *
1131014   +        GRP_Income2  +     0.50038805154482 * GRP_Income3
1131015   +          +    -3.13357648186361 * GRP_Income4  +     0.10711964638702 *
1131016   +        GRP_Income5  +     0.09871993128645 * GRP_Income6
1131017   +          +     1.58783603619041 * GRP_Income7  +    -2.39170088940171 *
1131018   +        GRP_Income8  +     0.84317235077516 * GRP_Income9
1131019   +          +     0.21927112782838 * GRP_Income10  +     1.44688080741688 *
1131020   +        GRP_Mnt2  +     0.98559424831742 * GRP_Mnt3  +    -0.83479015994315 *
1131021   +        GRP_Mnt4  +    -1.25208462521822 * GRP_Mnt5  +      0.5659903070034 *
1131022   +        GRP_Mnt6  +      1.1919814928293 * GRP_Mnt7  +    -0.57500802418483 *
1131023   +        GRP_Mnt8  +     0.01798716798387 * GRP_Mnt9  +     -0.9726123707811 *
1131024   +        GRP_Mnt10  +     -0.6415326473362 * GRP_MntFishProducts3
1131025   +          +    -0.10224099785309 * GRP_MntFishProducts4
1131026   +          +     0.72743835436702 * GRP_MntFishProducts5
1131027   +          +     0.29614489369863 * GRP_MntFishProducts6
1131028   +          +     1.63513523583267 * GRP_MntFishProducts7
1131029   +          +     2.82434082348947 * GRP_MntFishProducts8
1131030   +          +      0.5231937168513 * GRP_MntFishProducts9
1131031   +          +     0.55251870054858 * GRP_MntFishProducts10
1131032   +          +    -0.98753393210474 * GRP_MntGoldProds2
1131033   +          +     -0.1940135001606 * GRP_MntGoldProds3
1131034   +          +     0.91054070984291 * GRP_MntGoldProds4
1131035   +          +    -1.12994907018166 * GRP_MntGoldProds5
1131036   +          +     1.27179432245575 * GRP_MntGoldProds6
1131037   +          +     0.18442086794002 * GRP_MntGoldProds7
1131038   +          +     0.13785506159767 * GRP_MntGoldProds8
1131039   +          +     0.47959028032247 * GRP_MntGoldProds9
1131040   +          +     0.39229732865897 * GRP_MntGoldProds10
1131041   +          +     0.23926854234201 * GRP_MntMeatProducts2
1131042   +          +     0.85207763313609 * GRP_MntMeatProducts3
1131043   +          +     0.42240672557213 * GRP_MntMeatProducts4
1131044   +          +     1.34861801506289 * GRP_MntMeatProducts5
1131045   +          +    -1.90829994248939 * GRP_MntMeatProducts6
1131046   +          +    -1.20216774826328 * GRP_MntMeatProducts7
1131047   +          +     0.21149278031924 * GRP_MntMeatProducts8
1131048   +          +     0.56060387833343 * GRP_MntMeatProducts9
1131049   +          +     0.08240378464729 * GRP_MntMeatProducts10
1131050   +          +     0.16630337453841 * GRP_MntSweetProducts3
1131051   +          +    -0.76600764359826 * GRP_MntSweetProducts4
1131052   +          +     1.50792024107994 * GRP_MntSweetProducts5
1131053   +          +     1.43253580615881 * GRP_MntSweetProducts6
1131054   +          +     0.21920103392576 * GRP_MntSweetProducts7
1131055   +          +    -0.17220433340388 * GRP_MntSweetProducts8
1131056   +          +    -0.27184415375521 * GRP_MntSweetProducts9
1131057   +          +     1.06559352978761 * GRP_MntSweetProducts10
1131058   +          +      0.3638071493651 * GRP_MntWines2  +    -1.03089735689723 *
1131059   +        GRP_MntWines3  +    -0.28348074712993 * GRP_MntWines4
1131060   +          +    -1.16208580461502 * GRP_MntWines5  +     0.05256517522541 *
1131061   +        GRP_MntWines6  +    -3.45408294270214 * GRP_MntWines7
1131062   +          +     -1.3283333848315 * GRP_MntWines8  +    -0.31095479430398 *
1131063   +        GRP_MntWines9  +     0.15559494113085 * GRP_MntWines10
1131064   +          +     0.43779353849058 * GRP_NumCatalogPurchases3
1131065   +          +    -0.91049921837605 * GRP_NumCatalogPurchases4
1131066   +          +    -0.62690332918044 * GRP_NumCatalogPurchases5
1131067   +          +    -0.43739432912503 * GRP_NumCatalogPurchases6
1131068   +          +     0.16278086436799 * GRP_NumCatalogPurchases7
1131069   +          +     0.35715282562267 * GRP_NumDistPurchases2
1131070   +          +     1.84468920663071 * GRP_NumDistPurchases3
1131071   +          +    -2.73925942945889 * GRP_NumDistPurchases4
1131072   +          +     0.59074278753284 * GRP_NumDistPurchases5
1131073   +          +    -0.29365199688931 * GRP_NumDistPurchases6
1131074   +          +    -1.16685203020069 * GRP_NumDistPurchases7
1131075   +          +     -0.7875731631251 * GRP_NumDistPurchases8
1131076   +          +    -1.10510861301954 * GRP_NumDistPurchases9
1131077   +          +    -0.03346524636684 * GRP_NumDistPurchases10
1131078   +          +    -0.85072273160097 * GRP_NumWebPurchases2
1131079   +          +     0.90393600640139 * GRP_NumWebPurchases3
1131080   +          +    -0.25391465775867 * GRP_NumWebPurchases4
1131081   +          +     1.40214100313324 * GRP_NumWebPurchases5
1131082   +          +     0.50386388744504 * GRP_NumWebPurchases6
1131083   +          +    -0.38538022046144 * GRP_NumWebPurchases7
1131084   +          +    -0.90483081808977 * GRP_NumWebPurchases8
1131085   +          +    -0.63366478324154 * GRP_NumWebVisitsMonth2
1131086   +          +    -1.41147267846877 * GRP_NumWebVisitsMonth3
1131087   +          +     1.96455239930015 * GRP_NumWebVisitsMonth4
1131088   +          +     1.74571803237503 * GRP_NumWebVisitsMonth5
1131089   +          +     1.08303441803169 * GRP_NumWebVisitsMonth6
1131090   +          +     0.08841803401126 * GRP_NumWebVisitsMonth7
1131091   +          +     1.38561551238731 * GRP_NumWebVisitsMonth8
1131092   +          +     0.42159527214144 * GRP_RFMstat2  +     0.39205646681751 *
1131093   +        GRP_RFMstat3  +    -2.50004006229316 * GRP_RFMstat4
1131094   +          +     0.24218846060019 * GRP_RFMstat5  +    -0.52013661702385 *
1131095   +        GRP_RFMstat6  +     2.09715348886186 * GRP_RFMstat7
1131096   +          +     1.17945186200384 * GRP_RFMstat8  +    -0.19936602116765 *
1131097   +        GRP_RFMstat9  +     1.55749736422931 * GRP_RFMstat10
1131098   +          +     0.26371295729234 * GRP_RMntFrq2  +     0.21256291633719 *
1131099   +        GRP_RMntFrq3  +     1.61594740267638 * GRP_RMntFrq4
1131100   +          +     0.40518302938557 * GRP_RMntFrq5  +    -0.39917281851837 *
1131101   +        GRP_RMntFrq6  +     -0.4628652915326 * GRP_RMntFrq7
1131102   +          +    -0.38905036918399 * GRP_RMntFrq8  +    -2.18723781804534 *
1131103   +        GRP_RMntFrq9  +    -0.56209811155219 * GRP_RMntFrq10
1131104   +          +    -0.21941631743981 * GRP_Recency2  +     0.62365652451736 *
1131105   +        GRP_Recency3  +     0.16890109579365 * GRP_Recency4
1131106   +          +     1.18652000001776 * GRP_Recency5  +      1.2800112939146 *
1131107   +        GRP_Recency6  +     1.11205915793382 * GRP_Recency7
1131108   +          +    -0.01678209606086 * GRP_Recency8  +    -0.49049076797222 *
1131109   +        GRP_Recency9  +     -0.3017614099326 * GRP_Recency10 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.79126569643619 * GRP_AcceptedCmp52 +
1.43306912145272 * GRP_AcceptedCmpTotal3 + 1.22454618925923 * GRP_Frq2 + -1.05161181420251 *
GRP_Frq3 + 0.18863611173949 * GRP_Frq4 + -1.53183971921525 * GRP_Frq5 + -2.01595133665319 *
GRP_Frq6 + -1.0035007257827 * GRP_Frq7 + 0.15713490969217 * GRP_Frq8 + -0.83347236903779 *
GRP_Frq9 + 0.29577012385785 * GRP_Frq10 + -0.62392105819131 * GRP_Income2 + 0.50038805154482 *
GRP_Income3 + -3.13357648186361 * GRP_Income4 + 0.10711964638702 * GRP_Income5 +
0.09871993128645 * GRP_Income6 + 1.58783603619041 * GRP_Income7 + -2.39170088940171 *
GRP_Income8 + 0.84317235077516 * GRP_Income9 + 0.21927112782838 * GRP_Income10 +
1.44688080741688 * GRP_Mnt2 + 0.98559424831742 * GRP_Mnt3 + -0.83479015994315 * GRP_Mnt4 +
-1.25208462521822 * GRP_Mnt5 + 0.5659903070034 * GRP_Mnt6 + 1.1919814928293 * GRP_Mnt7 +
-0.57500802418483 * GRP_Mnt8 + 0.01798716798387 * GRP_Mnt9 + -0.9726123707811 * GRP_Mnt10 +
-0.6415326473362 * GRP_MntFishProducts3 + -0.10224099785309 * GRP_MntFishProducts4 +
0.72743835436702 * GRP_MntFishProducts5 + 0.29614489369863 * GRP_MntFishProducts6 +
1.63513523583267 * GRP_MntFishProducts7 + 2.82434082348947 * GRP_MntFishProducts8 +
0.5231937168513 * GRP_MntFishProducts9 + 0.55251870054858 * GRP_MntFishProducts10 +
-0.98753393210474 * GRP_MntGoldProds2 + -0.1940135001606 * GRP_MntGoldProds3 +
0.91054070984291 * GRP_MntGoldProds4 + -1.12994907018166 * GRP_MntGoldProds5 +
1.27179432245575 * GRP_MntGoldProds6 + 0.18442086794002 * GRP_MntGoldProds7 + 0.13785506159767
* GRP_MntGoldProds8 + 0.47959028032247 * GRP_MntGoldProds9 + 0.39229732865897 *
GRP_MntGoldProds10 + 0.23926854234201 * GRP_MntMeatProducts2 + 0.85207763313609 *
GRP_MntMeatProducts3 + 0.42240672557213 * GRP_MntMeatProducts4 + 1.34861801506289 *
GRP_MntMeatProducts5 + -1.90829994248939 * GRP_MntMeatProducts6 + -1.20216774826328 *
GRP_MntMeatProducts7 + 0.21149278031924 * GRP_MntMeatProducts8 + 0.56060387833343 *
GRP_MntMeatProducts9 + 0.08240378464729 * GRP_MntMeatProducts10 + 0.16630337453841 *
GRP_MntSweetProducts3 + -0.76600764359826 * GRP_MntSweetProducts4 + 1.50792024107994 *
GRP_MntSweetProducts5 + 1.43253580615881 * GRP_MntSweetProducts6 + 0.21920103392576 *
GRP_MntSweetProducts7 + -0.17220433340388 * GRP_MntSweetProducts8 + -0.27184415375521 *
GRP_MntSweetProducts9 + 1.06559352978761 * GRP_MntSweetProducts10 + 0.3638071493651 *
GRP_MntWines2 + -1.03089735689723 * GRP_MntWines3 + -0.28348074712993 * GRP_MntWines4 +
-1.16208580461502 * GRP_MntWines5 + 0.05256517522541 * GRP_MntWines6 + -3.45408294270214 *
GRP_MntWines7 + -1.3283333848315 * GRP_MntWines8 + -0.31095479430398 * GRP_MntWines9 +
0.15559494113085 * GRP_MntWines10 + 0.43779353849058 * GRP_NumCatalogPurchases3 +
-0.91049921837605 * GRP_NumCatalogPurchases4 + -0.62690332918044 * GRP_NumCatalogPurchases5 +
-0.43739432912503 * GRP_NumCatalogPurchases6 + 0.16278086436799 * GRP_NumCatalogPurchases7 +
0.35715282562267 * GRP_NumDistPurchases2 + 1.84468920663071 * GRP_NumDistPurchases3 +
-2.73925942945889 * GRP_NumDistPurchases4 + 0.59074278753284 * GRP_NumDistPurchases5 +
-0.29365199688931 * GRP_NumDistPurchases6 + -1.16685203020069 * GRP_NumDistPurchases7 +
-0.7875731631251 * GRP_NumDistPurchases8 + -1.10510861301954 * GRP_NumDistPurchases9 +
-0.03346524636684 * GRP_NumDistPurchases10 + -0.85072273160097 * GRP_NumWebPurchases2 +
0.90393600640139 * GRP_NumWebPurchases3 + -0.25391465775867 * GRP_NumWebPurchases4 +
1.40214100313324 * GRP_NumWebPurchases5 + 0.50386388744504 * GRP_NumWebPurchases6 +
-0.38538022046144 * GRP_NumWebPurchases7 + -0.90483081808977 * GRP_NumWebPurchases8 +
-0.63366478324154 * GRP_NumWebVisitsMonth2 + -1.41147267846877 * GRP_NumWebVisitsMonth3 +
1.96455239930015 * GRP_NumWebVisitsMonth4 + 1.74571803237503 * GRP_NumWebVisitsMonth5 +
1.08303441803169 * GRP_NumWebVisitsMonth6 + 0.08841803401126 * GRP_NumWebVisitsMonth7 +
1.38561551238731 * GRP_NumWebVisitsMonth8 + 0.42159527214144 * GRP_RFMstat2 + 0.39205646681751
* GRP_RFMstat3 + -2.50004006229316 * GRP_RFMstat4 + 0.24218846060019 * GRP_RFMstat5 +
-0.52013661702385 * GRP_RFMstat6 + 2.09715348886186 * GRP_RFMstat7 + 1.17945186200384 *
GRP_RFMstat8 + -0.19936602116765 * GRP_RFMstat9 + 1.55749736422931 * GRP_RFMstat10 +
0.26371295729234 * GRP_RMntFrq2 + 0.21256291633719 * GRP_RMntFrq3 + 1.61594740267638 *
GRP_RMntFrq4 + 0.40518302938557 * GRP_RMntFrq5 + -0.39917281851837 * GRP_RMntFrq6 +
-0.4628652915326 * GRP_RMntFrq7 + -0.38905036918399 * GRP_RMntFrq8 + -2.18723781804534 *
GRP_RMntFrq9 + -0.56209811155219 * GRP_RMntFrq10 + -0.21941631743981 * GRP_Recency2 +
0.62365652451736 * GRP_Recency3 + 0.16890109579365 * GRP_Recency4 + 1.18652000001776 *
GRP_Recency5 + 1.2800112939146 * GRP_Recency6 + 1.11205915793382 * GRP_Recency7 +
-0.01678209606086 * GRP_Recency8 + -0.49049076797222 * GRP_Recency9 + -0.3017614099326 *
GRP_Recency10 ;
1131110   +   H1x2_2  = H1x2_2  +     0.67398933015706 * GRP_AcceptedCmp52
1131111   +          +     -0.8751453503824 * GRP_AcceptedCmpTotal3
1131112   +          +    -0.39482876732264 * GRP_Frq2  +     1.47757467388321 * GRP_Frq3
1131113   +          +     1.83867441067752 * GRP_Frq4  +    -0.44009343778503 * GRP_Frq5
1131114   +          +     1.79969806004367 * GRP_Frq6  +    -0.73760862560354 * GRP_Frq7
1131115   +          +    -0.27901106932898 * GRP_Frq8  +     -0.2579404478755 * GRP_Frq9
1131116   +          +     0.92818121440017 * GRP_Frq10  +     1.23619934553523 *
1131117   +        GRP_Income2  +    -0.75075854848504 * GRP_Income3
1131118   +          +      2.6356052001789 * GRP_Income4  +     0.37936058080477 *
1131119   +        GRP_Income5  +    -0.20967950465903 * GRP_Income6
1131120   +          +     0.99334907985914 * GRP_Income7  +    -0.08920239779189 *
1131121   +        GRP_Income8  +    -0.22578219454998 * GRP_Income9
1131122   +          +     2.34062669066844 * GRP_Income10  +     1.22929044941773 *
1131123   +        GRP_Mnt2  +     0.14397695972183 * GRP_Mnt3  +     0.51032665988083 *
1131124   +        GRP_Mnt4  +    -1.38153126365165 * GRP_Mnt5  +     1.63106485668984 *
1131125   +        GRP_Mnt6  +     0.66336076908093 * GRP_Mnt7  +    -1.74416183994338 *
1131126   +        GRP_Mnt8  +     0.26066677250535 * GRP_Mnt9  +      0.3077437522773 *
1131127   +        GRP_Mnt10  +     0.31536873558672 * GRP_MntFishProducts3
1131128   +          +    -0.76193578413236 * GRP_MntFishProducts4
1131129   +          +     0.26441683863806 * GRP_MntFishProducts5
1131130   +          +    -1.13218530156836 * GRP_MntFishProducts6
1131131   +          +    -1.75837301022941 * GRP_MntFishProducts7
1131132   +          +    -0.60984304748028 * GRP_MntFishProducts8
1131133   +          +     0.02475727805659 * GRP_MntFishProducts9
1131134   +          +    -1.33855779072481 * GRP_MntFishProducts10
1131135   +          +    -1.92410927496765 * GRP_MntGoldProds2
1131136   +          +     1.37957021991927 * GRP_MntGoldProds3
1131137   +          +     -1.1577166761956 * GRP_MntGoldProds4
1131138   +          +     1.17595415699299 * GRP_MntGoldProds5
1131139   +          +    -1.44888413734615 * GRP_MntGoldProds6
1131140   +          +     -0.6269952213199 * GRP_MntGoldProds7
1131141   +          +     2.05006558590766 * GRP_MntGoldProds8
1131142   +          +       0.105525514708 * GRP_MntGoldProds9
1131143   +          +    -0.67797887575985 * GRP_MntGoldProds10
1131144   +          +     2.31770696034252 * GRP_MntMeatProducts2
1131145   +          +    -0.76500299288116 * GRP_MntMeatProducts3
1131146   +          +    -0.08828598934539 * GRP_MntMeatProducts4
1131147   +          +    -0.02140592940052 * GRP_MntMeatProducts5
1131148   +          +     1.03141631738102 * GRP_MntMeatProducts6
1131149   +          +     0.38981881043903 * GRP_MntMeatProducts7
1131150   +          +     0.40533105938471 * GRP_MntMeatProducts8
1131151   +          +     -0.3745105385612 * GRP_MntMeatProducts9
1131152   +          +    -1.05280123780042 * GRP_MntMeatProducts10
1131153   +          +    -0.65620511867931 * GRP_MntSweetProducts3
1131154   +          +     1.21474510355056 * GRP_MntSweetProducts4
1131155   +          +    -1.25507723676387 * GRP_MntSweetProducts5
1131156   +          +     0.92194675503686 * GRP_MntSweetProducts6
1131157   +          +     0.24570791052404 * GRP_MntSweetProducts7
1131158   +          +    -0.65553994719174 * GRP_MntSweetProducts8
1131159   +          +    -0.92841570255174 * GRP_MntSweetProducts9
1131160   +          +     0.30873152061447 * GRP_MntSweetProducts10
1131161   +          +      -0.076966369313 * GRP_MntWines2  +     -1.0025350275284 *
1131162   +        GRP_MntWines3  +     0.62441192788771 * GRP_MntWines4
1131163   +          +    -0.21651325463938 * GRP_MntWines5  +    -1.28062431918087 *
1131164   +        GRP_MntWines6  +     0.69883808355517 * GRP_MntWines7
1131165   +          +    -0.05950002086458 * GRP_MntWines8  +    -1.10191079055508 *
1131166   +        GRP_MntWines9  +     0.63137280145547 * GRP_MntWines10
1131167   +          +     0.76262347276195 * GRP_NumCatalogPurchases3
1131168   +          +     0.27178684022178 * GRP_NumCatalogPurchases4
1131169   +          +      0.7925446848717 * GRP_NumCatalogPurchases5
1131170   +          +     1.31986309150149 * GRP_NumCatalogPurchases6
1131171   +          +     0.13154865053956 * GRP_NumCatalogPurchases7
1131172   +          +     0.90300521816676 * GRP_NumDistPurchases2
1131173   +          +    -1.08143603674908 * GRP_NumDistPurchases3
1131174   +          +     1.45290495686195 * GRP_NumDistPurchases4
1131175   +          +    -0.27200074304672 * GRP_NumDistPurchases5
1131176   +          +    -1.22641713762099 * GRP_NumDistPurchases6
1131177   +          +     0.59896437874483 * GRP_NumDistPurchases7
1131178   +          +    -1.27615643084203 * GRP_NumDistPurchases8
1131179   +          +     1.56986239933089 * GRP_NumDistPurchases9
1131180   +          +     0.25700981555502 * GRP_NumDistPurchases10
1131181   +          +    -0.00592602966853 * GRP_NumWebPurchases2
1131182   +          +     -0.1326853227988 * GRP_NumWebPurchases3
1131183   +          +     -0.2104875425464 * GRP_NumWebPurchases4
1131184   +          +    -0.37786922546668 * GRP_NumWebPurchases5
1131185   +          +    -2.31891994594655 * GRP_NumWebPurchases6
1131186   +          +     0.21244077840762 * GRP_NumWebPurchases7
1131187   +          +     0.20544153361165 * GRP_NumWebPurchases8
1131188   +          +     0.25466867279004 * GRP_NumWebVisitsMonth2
1131189   +          +     0.27188060033621 * GRP_NumWebVisitsMonth3
1131190   +          +    -0.95934500827979 * GRP_NumWebVisitsMonth4
1131191   +          +     -1.0658065247518 * GRP_NumWebVisitsMonth5
1131192   +          +     0.29606991820625 * GRP_NumWebVisitsMonth6
1131193   +          +     1.39148292787476 * GRP_NumWebVisitsMonth7
1131194   +          +    -0.89682418536404 * GRP_NumWebVisitsMonth8
1131195   +          +    -0.29501845280237 * GRP_RFMstat2  +    -1.62706110727439 *
1131196   +        GRP_RFMstat3  +    -0.05816762603923 * GRP_RFMstat4
1131197   +          +     0.14056517927553 * GRP_RFMstat5  +     0.16264724605568 *
1131198   +        GRP_RFMstat6  +    -1.46819615066357 * GRP_RFMstat7
1131199   +          +    -3.13528696014007 * GRP_RFMstat8  +     0.01832687767367 *
1131200   +        GRP_RFMstat9  +     2.36690257733755 * GRP_RFMstat10
1131201   +          +     0.47170735684844 * GRP_RMntFrq2  +     0.76473788912988 *
1131202   +        GRP_RMntFrq3  +    -0.92101075362772 * GRP_RMntFrq4
1131203   +          +     0.42659547546303 * GRP_RMntFrq5  +    -0.39107990111087 *
1131204   +        GRP_RMntFrq6  +     1.22534154436379 * GRP_RMntFrq7
1131205   +          +     0.17325823510284 * GRP_RMntFrq8  +    -0.15337233078899 *
1131206   +        GRP_RMntFrq9  +     0.95961796320344 * GRP_RMntFrq10
1131207   +          +     0.78187566388581 * GRP_Recency2  +     0.32432493265807 *
1131208   +        GRP_Recency3  +    -0.36127769208093 * GRP_Recency4
1131209   +          +     0.49278466273238 * GRP_Recency5  +     1.02136259767421 *
1131210   +        GRP_Recency6  +     0.24565781332322 * GRP_Recency7
1131211   +          +    -0.01819850591897 * GRP_Recency8  +    -0.88865832552994 *
1131212   +        GRP_Recency9  +    -1.06023089287045 * GRP_Recency10 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 0.67398933015706 * GRP_AcceptedCmp52 +
-0.8751453503824 * GRP_AcceptedCmpTotal3 + -0.39482876732264 * GRP_Frq2 + 1.47757467388321 *
GRP_Frq3 + 1.83867441067752 * GRP_Frq4 + -0.44009343778503 * GRP_Frq5 + 1.79969806004367 *
GRP_Frq6 + -0.73760862560354 * GRP_Frq7 + -0.27901106932898 * GRP_Frq8 + -0.2579404478755 *
GRP_Frq9 + 0.92818121440017 * GRP_Frq10 + 1.23619934553523 * GRP_Income2 + -0.75075854848504 *
GRP_Income3 + 2.6356052001789 * GRP_Income4 + 0.37936058080477 * GRP_Income5 +
-0.20967950465903 * GRP_Income6 + 0.99334907985914 * GRP_Income7 + -0.08920239779189 *
GRP_Income8 + -0.22578219454998 * GRP_Income9 + 2.34062669066844 * GRP_Income10 +
1.22929044941773 * GRP_Mnt2 + 0.14397695972183 * GRP_Mnt3 + 0.51032665988083 * GRP_Mnt4 +
-1.38153126365165 * GRP_Mnt5 + 1.63106485668984 * GRP_Mnt6 + 0.66336076908093 * GRP_Mnt7 +
-1.74416183994338 * GRP_Mnt8 + 0.26066677250535 * GRP_Mnt9 + 0.3077437522773 * GRP_Mnt10 +
0.31536873558672 * GRP_MntFishProducts3 + -0.76193578413236 * GRP_MntFishProducts4 +
0.26441683863806 * GRP_MntFishProducts5 + -1.13218530156836 * GRP_MntFishProducts6 +
-1.75837301022941 * GRP_MntFishProducts7 + -0.60984304748028 * GRP_MntFishProducts8 +
0.02475727805659 * GRP_MntFishProducts9 + -1.33855779072481 * GRP_MntFishProducts10 +
-1.92410927496765 * GRP_MntGoldProds2 + 1.37957021991927 * GRP_MntGoldProds3 +
-1.1577166761956 * GRP_MntGoldProds4 + 1.17595415699299 * GRP_MntGoldProds5 +
-1.44888413734615 * GRP_MntGoldProds6 + -0.6269952213199 * GRP_MntGoldProds7 +
2.05006558590766 * GRP_MntGoldProds8 + 0.105525514708 * GRP_MntGoldProds9 + -0.67797887575985
* GRP_MntGoldProds10 + 2.31770696034252 * GRP_MntMeatProducts2 + -0.76500299288116 *
GRP_MntMeatProducts3 + -0.08828598934539 * GRP_MntMeatProducts4 + -0.02140592940052 *
GRP_MntMeatProducts5 + 1.03141631738102 * GRP_MntMeatProducts6 + 0.38981881043903 *
GRP_MntMeatProducts7 + 0.40533105938471 * GRP_MntMeatProducts8 + -0.3745105385612 *
GRP_MntMeatProducts9 + -1.05280123780042 * GRP_MntMeatProducts10 + -0.65620511867931 *
GRP_MntSweetProducts3 + 1.21474510355056 * GRP_MntSweetProducts4 + -1.25507723676387 *
GRP_MntSweetProducts5 + 0.92194675503686 * GRP_MntSweetProducts6 + 0.24570791052404 *
GRP_MntSweetProducts7 + -0.65553994719174 * GRP_MntSweetProducts8 + -0.92841570255174 *
GRP_MntSweetProducts9 + 0.30873152061447 * GRP_MntSweetProducts10 + -0.076966369313 *
GRP_MntWines2 + -1.0025350275284 * GRP_MntWines3 + 0.62441192788771 * GRP_MntWines4 +
-0.21651325463938 * GRP_MntWines5 + -1.28062431918087 * GRP_MntWines6 + 0.69883808355517 *
GRP_MntWines7 + -0.05950002086458 * GRP_MntWines8 + -1.10191079055508 * GRP_MntWines9 +
0.63137280145547 * GRP_MntWines10 + 0.76262347276195 * GRP_NumCatalogPurchases3 +
0.27178684022178 * GRP_NumCatalogPurchases4 + 0.7925446848717 * GRP_NumCatalogPurchases5 +
1.31986309150149 * GRP_NumCatalogPurchases6 + 0.13154865053956 * GRP_NumCatalogPurchases7 +
0.90300521816676 * GRP_NumDistPurchases2 + -1.08143603674908 * GRP_NumDistPurchases3 +
1.45290495686195 * GRP_NumDistPurchases4 + -0.27200074304672 * GRP_NumDistPurchases5 +
-1.22641713762099 * GRP_NumDistPurchases6 + 0.59896437874483 * GRP_NumDistPurchases7 +
-1.27615643084203 * GRP_NumDistPurchases8 + 1.56986239933089 * GRP_NumDistPurchases9 +
0.25700981555502 * GRP_NumDistPurchases10 + -0.00592602966853 * GRP_NumWebPurchases2 +
-0.1326853227988 * GRP_NumWebPurchases3 + -0.2104875425464 * GRP_NumWebPurchases4 +
-0.37786922546668 * GRP_NumWebPurchases5 + -2.31891994594655 * GRP_NumWebPurchases6 +
0.21244077840762 * GRP_NumWebPurchases7 + 0.20544153361165 * GRP_NumWebPurchases8 +
0.25466867279004 * GRP_NumWebVisitsMonth2 + 0.27188060033621 * GRP_NumWebVisitsMonth3 +
-0.95934500827979 * GRP_NumWebVisitsMonth4 + -1.0658065247518 * GRP_NumWebVisitsMonth5 +
0.29606991820625 * GRP_NumWebVisitsMonth6 + 1.39148292787476 * GRP_NumWebVisitsMonth7 +
-0.89682418536404 * GRP_NumWebVisitsMonth8 + -0.29501845280237 * GRP_RFMstat2 +
-1.62706110727439 * GRP_RFMstat3 + -0.05816762603923 * GRP_RFMstat4 + 0.14056517927553 *
GRP_RFMstat5 + 0.16264724605568 * GRP_RFMstat6 + -1.46819615066357 * GRP_RFMstat7 +
-3.13528696014007 * GRP_RFMstat8 + 0.01832687767367 * GRP_RFMstat9 + 2.36690257733755 *
GRP_RFMstat10 + 0.47170735684844 * GRP_RMntFrq2 + 0.76473788912988 * GRP_RMntFrq3 +
-0.92101075362772 * GRP_RMntFrq4 + 0.42659547546303 * GRP_RMntFrq5 + -0.39107990111087 *
GRP_RMntFrq6 + 1.22534154436379 * GRP_RMntFrq7 + 0.17325823510284 * GRP_RMntFrq8 +
-0.15337233078899 * GRP_RMntFrq9 + 0.95961796320344 * GRP_RMntFrq10 + 0.78187566388581 *
GRP_Recency2 + 0.32432493265807 * GRP_Recency3 + -0.36127769208093 * GRP_Recency4 +
0.49278466273238 * GRP_Recency5 + 1.02136259767421 * GRP_Recency6 + 0.24565781332322 *
GRP_Recency7 + -0.01819850591897 * GRP_Recency8 + -0.88865832552994 * GRP_Recency9 +
-1.06023089287045 * GRP_Recency10 ;
1131213   +   H1x2_3  = H1x2_3  +     0.72829233603077 * GRP_AcceptedCmp52
1131214   +          +    -0.64130750101094 * GRP_AcceptedCmpTotal3
1131215   +          +    -0.62578027971767 * GRP_Frq2  +    -1.71391822542149 * GRP_Frq3
1131216   +          +    -2.03690224986772 * GRP_Frq4  +     0.00250860268093 * GRP_Frq5
1131217   +          +     3.77431536270677 * GRP_Frq6  +    -0.98694179514917 * GRP_Frq7
1131218   +          +    -1.73466635264086 * GRP_Frq8  +    -0.55401738923895 * GRP_Frq9
1131219   +          +    -1.75356906289375 * GRP_Frq10  +     1.49171603856686 *
1131220   +        GRP_Income2  +     2.11511145525038 * GRP_Income3
1131221   +          +    -0.88783509763572 * GRP_Income4  +     0.16185380039783 *
1131222   +        GRP_Income5  +      0.4509467817404 * GRP_Income6
1131223   +          +     0.42854496757248 * GRP_Income7  +    -0.62868012410212 *
1131224   +        GRP_Income8  +    -1.38694404635062 * GRP_Income9
1131225   +          +    -0.74342405534619 * GRP_Income10  +     2.14444292945881 *
1131226   +        GRP_Mnt2  +    -1.40243675049805 * GRP_Mnt3  +     1.59454244242313 *
1131227   +        GRP_Mnt4  +     0.96363567691465 * GRP_Mnt5  +    -0.62891559534925 *
1131228   +        GRP_Mnt6  +    -0.28268355612216 * GRP_Mnt7  +     2.66118539089177 *
1131229   +        GRP_Mnt8  +    -1.43910408435818 * GRP_Mnt9  +     1.56729239602888 *
1131230   +        GRP_Mnt10  +     0.10200954846302 * GRP_MntFishProducts3
1131231   +          +     0.11287042668469 * GRP_MntFishProducts4
1131232   +          +    -0.89531289481293 * GRP_MntFishProducts5
1131233   +          +     0.08643547718119 * GRP_MntFishProducts6
1131234   +          +    -0.17770650235868 * GRP_MntFishProducts7
1131235   +          +    -1.30659888536456 * GRP_MntFishProducts8
1131236   +          +     2.06257011493102 * GRP_MntFishProducts9
1131237   +          +    -0.57535905840521 * GRP_MntFishProducts10
1131238   +          +     1.61685583269611 * GRP_MntGoldProds2
1131239   +          +     0.76201845089384 * GRP_MntGoldProds3
1131240   +          +    -0.20116109553599 * GRP_MntGoldProds4
1131241   +          +    -0.35354590570837 * GRP_MntGoldProds5
1131242   +          +    -0.07414881491148 * GRP_MntGoldProds6
1131243   +          +    -0.93265516833704 * GRP_MntGoldProds7
1131244   +          +     0.27562090724475 * GRP_MntGoldProds8
1131245   +          +     0.21497600131343 * GRP_MntGoldProds9
1131246   +          +    -1.31728109344577 * GRP_MntGoldProds10
1131247   +          +     2.04761490869712 * GRP_MntMeatProducts2
1131248   +          +    -1.25735539389252 * GRP_MntMeatProducts3
1131249   +          +     2.53856697441095 * GRP_MntMeatProducts4
1131250   +          +    -0.01594190004707 * GRP_MntMeatProducts5
1131251   +          +     2.15096647695357 * GRP_MntMeatProducts6
1131252   +          +     0.57494957107204 * GRP_MntMeatProducts7
1131253   +          +     2.00730679226119 * GRP_MntMeatProducts8
1131254   +          +    -0.71668533381607 * GRP_MntMeatProducts9
1131255   +          +     0.53556599855475 * GRP_MntMeatProducts10
1131256   +          +     1.54693619731858 * GRP_MntSweetProducts3
1131257   +          +    -0.74400819703128 * GRP_MntSweetProducts4
1131258   +          +    -1.02827729809733 * GRP_MntSweetProducts5
1131259   +          +    -0.23410492711421 * GRP_MntSweetProducts6
1131260   +          +    -1.04201907068576 * GRP_MntSweetProducts7
1131261   +          +    -1.60007026788916 * GRP_MntSweetProducts8
1131262   +          +    -2.09407617502035 * GRP_MntSweetProducts9
1131263   +          +    -0.26803603659514 * GRP_MntSweetProducts10
1131264   +          +    -1.71265459102005 * GRP_MntWines2  +     2.46887341207122 *
1131265   +        GRP_MntWines3  +     0.34837694975842 * GRP_MntWines4
1131266   +          +      0.7876281786545 * GRP_MntWines5  +    -0.30368035070812 *
1131267   +        GRP_MntWines6  +    -0.58629960316924 * GRP_MntWines7
1131268   +          +     1.95937960001866 * GRP_MntWines8  +    -0.25505243271449 *
1131269   +        GRP_MntWines9  +    -1.17987872337491 * GRP_MntWines10
1131270   +          +     0.22023604608467 * GRP_NumCatalogPurchases3
1131271   +          +    -2.56871980434954 * GRP_NumCatalogPurchases4
1131272   +          +    -1.44764737334028 * GRP_NumCatalogPurchases5
1131273   +          +     -0.2446195910135 * GRP_NumCatalogPurchases6
1131274   +          +     2.90538414905594 * GRP_NumCatalogPurchases7
1131275   +          +     0.88336976623421 * GRP_NumDistPurchases2
1131276   +          +     2.13942226719201 * GRP_NumDistPurchases3
1131277   +          +     1.34320499597894 * GRP_NumDistPurchases4
1131278   +          +    -1.51639001105393 * GRP_NumDistPurchases5
1131279   +          +     0.57368953355036 * GRP_NumDistPurchases6
1131280   +          +     0.70444554339708 * GRP_NumDistPurchases7
1131281   +          +     1.28554266385595 * GRP_NumDistPurchases8
1131282   +          +     1.37825141302574 * GRP_NumDistPurchases9
1131283   +          +    -1.43691218320245 * GRP_NumDistPurchases10
1131284   +          +    -0.66804085143805 * GRP_NumWebPurchases2
1131285   +          +     0.07392237122103 * GRP_NumWebPurchases3
1131286   +          +    -1.49905765103392 * GRP_NumWebPurchases4
1131287   +          +     -1.5187477833321 * GRP_NumWebPurchases5
1131288   +          +     0.48158072068531 * GRP_NumWebPurchases6
1131289   +          +     0.23079702131182 * GRP_NumWebPurchases7
1131290   +          +    -0.20622792691222 * GRP_NumWebPurchases8
1131291   +          +     0.30007609674528 * GRP_NumWebVisitsMonth2
1131292   +          +     1.12205187145706 * GRP_NumWebVisitsMonth3
1131293   +          +     0.51718549115979 * GRP_NumWebVisitsMonth4
1131294   +          +    -1.04703503782865 * GRP_NumWebVisitsMonth5
1131295   +          +     0.22390337037879 * GRP_NumWebVisitsMonth6
1131296   +          +    -0.18626487429236 * GRP_NumWebVisitsMonth7
1131297   +          +     1.57022893774879 * GRP_NumWebVisitsMonth8
1131298   +          +    -0.18955402131625 * GRP_RFMstat2  +     1.36375958279816 *
1131299   +        GRP_RFMstat3  +     0.69388690636651 * GRP_RFMstat4
1131300   +          +    -0.14096513433405 * GRP_RFMstat5  +     0.06232569479305 *
1131301   +        GRP_RFMstat6  +    -1.98686981980517 * GRP_RFMstat7
1131302   +          +    -0.04208886647313 * GRP_RFMstat8  +     0.13969094966118 *
1131303   +        GRP_RFMstat9  +    -0.78889510235752 * GRP_RFMstat10
1131304   +          +     0.00773524086935 * GRP_RMntFrq2  +     0.42760129795181 *
1131305   +        GRP_RMntFrq3  +     1.20654035825086 * GRP_RMntFrq4
1131306   +          +    -1.96326294005559 * GRP_RMntFrq5  +     0.19508572570635 *
1131307   +        GRP_RMntFrq6  +     0.64155838577241 * GRP_RMntFrq7
1131308   +          +     0.29646831812974 * GRP_RMntFrq8  +    -1.79415071937644 *
1131309   +        GRP_RMntFrq9  +     0.50025621373087 * GRP_RMntFrq10
1131310   +          +    -1.09969223947409 * GRP_Recency2  +     0.28522088439434 *
1131311   +        GRP_Recency3  +     0.00277105517522 * GRP_Recency4
1131312   +          +     0.84025488137705 * GRP_Recency5  +    -0.15771429015941 *
1131313   +        GRP_Recency6  +     0.60418796843171 * GRP_Recency7
1131314   +          +    -0.08237018446397 * GRP_Recency8  +    -0.48067966796564 *
1131315   +        GRP_Recency9  +     1.24119420047225 * GRP_Recency10 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 0.72829233603077 * GRP_AcceptedCmp52 +
-0.64130750101094 * GRP_AcceptedCmpTotal3 + -0.62578027971767 * GRP_Frq2 + -1.71391822542149 *
GRP_Frq3 + -2.03690224986772 * GRP_Frq4 + 0.00250860268093 * GRP_Frq5 + 3.77431536270677 *
GRP_Frq6 + -0.98694179514917 * GRP_Frq7 + -1.73466635264086 * GRP_Frq8 + -0.55401738923895 *
GRP_Frq9 + -1.75356906289375 * GRP_Frq10 + 1.49171603856686 * GRP_Income2 + 2.11511145525038 *
GRP_Income3 + -0.88783509763572 * GRP_Income4 + 0.16185380039783 * GRP_Income5 +
0.4509467817404 * GRP_Income6 + 0.42854496757248 * GRP_Income7 + -0.62868012410212 *
GRP_Income8 + -1.38694404635062 * GRP_Income9 + -0.74342405534619 * GRP_Income10 +
2.14444292945881 * GRP_Mnt2 + -1.40243675049805 * GRP_Mnt3 + 1.59454244242313 * GRP_Mnt4 +
0.96363567691465 * GRP_Mnt5 + -0.62891559534925 * GRP_Mnt6 + -0.28268355612216 * GRP_Mnt7 +
2.66118539089177 * GRP_Mnt8 + -1.43910408435818 * GRP_Mnt9 + 1.56729239602888 * GRP_Mnt10 +
0.10200954846302 * GRP_MntFishProducts3 + 0.11287042668469 * GRP_MntFishProducts4 +
-0.89531289481293 * GRP_MntFishProducts5 + 0.08643547718119 * GRP_MntFishProducts6 +
-0.17770650235868 * GRP_MntFishProducts7 + -1.30659888536456 * GRP_MntFishProducts8 +
2.06257011493102 * GRP_MntFishProducts9 + -0.57535905840521 * GRP_MntFishProducts10 +
1.61685583269611 * GRP_MntGoldProds2 + 0.76201845089384 * GRP_MntGoldProds3 +
-0.20116109553599 * GRP_MntGoldProds4 + -0.35354590570837 * GRP_MntGoldProds5 +
-0.07414881491148 * GRP_MntGoldProds6 + -0.93265516833704 * GRP_MntGoldProds7 +
0.27562090724475 * GRP_MntGoldProds8 + 0.21497600131343 * GRP_MntGoldProds9 +
-1.31728109344577 * GRP_MntGoldProds10 + 2.04761490869712 * GRP_MntMeatProducts2 +
-1.25735539389252 * GRP_MntMeatProducts3 + 2.53856697441095 * GRP_MntMeatProducts4 +
-0.01594190004707 * GRP_MntMeatProducts5 + 2.15096647695357 * GRP_MntMeatProducts6 +
0.57494957107204 * GRP_MntMeatProducts7 + 2.00730679226119 * GRP_MntMeatProducts8 +
-0.71668533381607 * GRP_MntMeatProducts9 + 0.53556599855475 * GRP_MntMeatProducts10 +
1.54693619731858 * GRP_MntSweetProducts3 + -0.74400819703128 * GRP_MntSweetProducts4 +
-1.02827729809733 * GRP_MntSweetProducts5 + -0.23410492711421 * GRP_MntSweetProducts6 +
-1.04201907068576 * GRP_MntSweetProducts7 + -1.60007026788916 * GRP_MntSweetProducts8 +
-2.09407617502035 * GRP_MntSweetProducts9 + -0.26803603659514 * GRP_MntSweetProducts10 +
-1.71265459102005 * GRP_MntWines2 + 2.46887341207122 * GRP_MntWines3 + 0.34837694975842 *
GRP_MntWines4 + 0.7876281786545 * GRP_MntWines5 + -0.30368035070812 * GRP_MntWines6 +
-0.58629960316924 * GRP_MntWines7 + 1.95937960001866 * GRP_MntWines8 + -0.25505243271449 *
GRP_MntWines9 + -1.17987872337491 * GRP_MntWines10 + 0.22023604608467 *
GRP_NumCatalogPurchases3 + -2.56871980434954 * GRP_NumCatalogPurchases4 + -1.44764737334028 *
GRP_NumCatalogPurchases5 + -0.2446195910135 * GRP_NumCatalogPurchases6 + 2.90538414905594 *
GRP_NumCatalogPurchases7 + 0.88336976623421 * GRP_NumDistPurchases2 + 2.13942226719201 *
GRP_NumDistPurchases3 + 1.34320499597894 * GRP_NumDistPurchases4 + -1.51639001105393 *
GRP_NumDistPurchases5 + 0.57368953355036 * GRP_NumDistPurchases6 + 0.70444554339708 *
GRP_NumDistPurchases7 + 1.28554266385595 * GRP_NumDistPurchases8 + 1.37825141302574 *
GRP_NumDistPurchases9 + -1.43691218320245 * GRP_NumDistPurchases10 + -0.66804085143805 *
GRP_NumWebPurchases2 + 0.07392237122103 * GRP_NumWebPurchases3 + -1.49905765103392 *
GRP_NumWebPurchases4 + -1.5187477833321 * GRP_NumWebPurchases5 + 0.48158072068531 *
GRP_NumWebPurchases6 + 0.23079702131182 * GRP_NumWebPurchases7 + -0.20622792691222 *
GRP_NumWebPurchases8 + 0.30007609674528 * GRP_NumWebVisitsMonth2 + 1.12205187145706 *
GRP_NumWebVisitsMonth3 + 0.51718549115979 * GRP_NumWebVisitsMonth4 + -1.04703503782865 *
GRP_NumWebVisitsMonth5 + 0.22390337037879 * GRP_NumWebVisitsMonth6 + -0.18626487429236 *
GRP_NumWebVisitsMonth7 + 1.57022893774879 * GRP_NumWebVisitsMonth8 + -0.18955402131625 *
GRP_RFMstat2 + 1.36375958279816 * GRP_RFMstat3 + 0.69388690636651 * GRP_RFMstat4 +
-0.14096513433405 * GRP_RFMstat5 + 0.06232569479305 * GRP_RFMstat6 + -1.98686981980517 *
GRP_RFMstat7 + -0.04208886647313 * GRP_RFMstat8 + 0.13969094966118 * GRP_RFMstat9 +
-0.78889510235752 * GRP_RFMstat10 + 0.00773524086935 * GRP_RMntFrq2 + 0.42760129795181 *
GRP_RMntFrq3 + 1.20654035825086 * GRP_RMntFrq4 + -1.96326294005559 * GRP_RMntFrq5 +
0.19508572570635 * GRP_RMntFrq6 + 0.64155838577241 * GRP_RMntFrq7 + 0.29646831812974 *
GRP_RMntFrq8 + -1.79415071937644 * GRP_RMntFrq9 + 0.50025621373087 * GRP_RMntFrq10 +
-1.09969223947409 * GRP_Recency2 + 0.28522088439434 * GRP_Recency3 + 0.00277105517522 *
GRP_Recency4 + 0.84025488137705 * GRP_Recency5 + -0.15771429015941 * GRP_Recency6 +
0.60418796843171 * GRP_Recency7 + -0.08237018446397 * GRP_Recency8 + -0.48067966796564 *
GRP_Recency9 + 1.24119420047225 * GRP_Recency10 ;
1131316   +   H1x2_1  =     1.77895259501913 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.77895259501913 + H1x2_1 ;
1131317   +   H1x2_2  =    -0.15319898291656 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -0.15319898291656 + H1x2_2 ;
1131318   +   H1x2_3  =     1.06881294227229 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = 1.06881294227229 + H1x2_3 ;
1131319   +   H1x2_4  = 0;
MPRINT(EM_DIAGRAM):   H1x2_4 = 0;
1131320   +   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 );
1131321   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1131322   +   H1x2_1  = EXP(H1x2_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_1 = EXP(H1x2_1 - _MAX_);
1131323   +   _SUM_ = _SUM_ + H1x2_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_1 ;
1131324   +   H1x2_2  = EXP(H1x2_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_2 = EXP(H1x2_2 - _MAX_);
1131325   +   _SUM_ = _SUM_ + H1x2_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_2 ;
1131326   +   H1x2_3  = EXP(H1x2_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_3 = EXP(H1x2_3 - _MAX_);
1131327   +   _SUM_ = _SUM_ + H1x2_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_3 ;
1131328   +   H1x2_4  = EXP(H1x2_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_4 = EXP(H1x2_4 - _MAX_);
1131329   +   _SUM_ = _SUM_ + H1x2_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_4 ;
1131330   +   H1x2_1  = H1x2_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 / _SUM_;
1131331   +   H1x2_2  = H1x2_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 / _SUM_;
1131332   +   H1x2_3  = H1x2_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 / _SUM_;
1131333   +   H1x2_4  = H1x2_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 / _SUM_;
1131334   +END;
MPRINT(EM_DIAGRAM):   END;
1131335   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1131336   +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
1131337   +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
1131338   +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
1131339   +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
1131340   +END;
MPRINT(EM_DIAGRAM):   END;
1131341   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1131342   +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
1131343   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1131344   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1131345   +   H2x1_1  =     0.60543735927278 * H1x1_1  +     3.85958773643111 * H1x1_2
1131346   +          +    -0.13813806296693 * H1x1_3  +    -2.68183941928297 * H1x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 0.60543735927278 * H1x1_1 + 3.85958773643111 * H1x1_2 +
-0.13813806296693 * H1x1_3 + -2.68183941928297 * H1x1_4 ;
1131347   +   H2x1_2  =    -0.14350534886194 * H1x1_1  +    -0.58869275717393 * H1x1_2
1131348   +          +     0.27201202126987 * H1x1_3  +     0.84944711792034 * H1x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -0.14350534886194 * H1x1_1 + -0.58869275717393 * H1x1_2 +
0.27201202126987 * H1x1_3 + 0.84944711792034 * H1x1_4 ;
1131349   +   H2x1_3  =     0.16377235892809 * H1x1_1  +     0.32450938656975 * H1x1_2
1131350   +          +    -0.96313538220557 * H1x1_3  +      -1.179254081075 * H1x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = 0.16377235892809 * H1x1_1 + 0.32450938656975 * H1x1_2 +
-0.96313538220557 * H1x1_3 + -1.179254081075 * H1x1_4 ;
1131351   +   H2x1_1  = H2x1_1  +     0.15983017127833 * H1x2_1
1131352   +          +    -2.52556013675769 * H1x2_2  +     1.74538330689549 * H1x2_3
1131353   +          +     0.68913073131319 * H1x2_4 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + 0.15983017127833 * H1x2_1 + -2.52556013675769 * H1x2_2
+ 1.74538330689549 * H1x2_3 + 0.68913073131319 * H1x2_4 ;
1131354   +   H2x1_2  = H2x1_2  +     0.40540171537462 * H1x2_1
1131355   +          +     2.27830241234825 * H1x2_2  +     0.15661386543073 * H1x2_3
1131356   +          +    -0.12036833619531 * H1x2_4 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + 0.40540171537462 * H1x2_1 + 2.27830241234825 * H1x2_2
+ 0.15661386543073 * H1x2_3 + -0.12036833619531 * H1x2_4 ;
1131357   +   H2x1_3  = H2x1_3  +     -0.8609897463305 * H1x2_1
1131358   +          +     1.80866840044437 * H1x2_2  +    -0.99524522029584 * H1x2_3
1131359   +          +    -0.16746987063494 * H1x2_4 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + -0.8609897463305 * H1x2_1 + 1.80866840044437 * H1x2_2
+ -0.99524522029584 * H1x2_3 + -0.16746987063494 * H1x2_4 ;
1131360   +   H2x1_1  =    -0.00538470720937 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -0.00538470720937 + H2x1_1 ;
1131361   +   H2x1_2  =    -0.26197576528123 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -0.26197576528123 + H2x1_2 ;
1131362   +   H2x1_3  =    -1.06687812193911 + H2x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -1.06687812193911 + H2x1_3 ;
1131363   +   H2x1_4  = 0;
MPRINT(EM_DIAGRAM):   H2x1_4 = 0;
1131364   +   _MAX_ = MAX (H2x1_1 , H2x1_2 , H2x1_3 , H2x1_4 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H2x1_1 , H2x1_2 , H2x1_3 , H2x1_4 );
1131365   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1131366   +   H2x1_1  = EXP(H2x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_1 = EXP(H2x1_1 - _MAX_);
1131367   +   _SUM_ = _SUM_ + H2x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_1 ;
1131368   +   H2x1_2  = EXP(H2x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_2 = EXP(H2x1_2 - _MAX_);
1131369   +   _SUM_ = _SUM_ + H2x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_2 ;
1131370   +   H2x1_3  = EXP(H2x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_3 = EXP(H2x1_3 - _MAX_);
1131371   +   _SUM_ = _SUM_ + H2x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_3 ;
1131372   +   H2x1_4  = EXP(H2x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_4 = EXP(H2x1_4 - _MAX_);
1131373   +   _SUM_ = _SUM_ + H2x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_4 ;
1131374   +   H2x1_1  = H2x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 / _SUM_;
1131375   +   H2x1_2  = H2x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 / _SUM_;
1131376   +   H2x1_3  = H2x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 / _SUM_;
1131377   +   H2x1_4  = H2x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 / _SUM_;
1131378   +END;
MPRINT(EM_DIAGRAM):   END;
1131379   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1131380   +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
1131381   +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
1131382   +   H2x1_3  = .;
MPRINT(EM_DIAGRAM):   H2x1_3 = .;
1131383   +   H2x1_4  = .;
MPRINT(EM_DIAGRAM):   H2x1_4 = .;
1131384   +END;
MPRINT(EM_DIAGRAM):   END;
1131385   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1131386   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1131387   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1131388   +
1131389   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1131390   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1131391   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1131392   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1131393   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1131394   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1131395   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1131396   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1131397   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1131398   +end;
MPRINT(EM_DIAGRAM):   end;
1131399   +else do;
MPRINT(EM_DIAGRAM):   else do;
1131400   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1131401   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1131402   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1131403   +   end;
MPRINT(EM_DIAGRAM):   end;
1131404   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1131405   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1131406   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1131407   +   end;
MPRINT(EM_DIAGRAM):   end;
1131408   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1131409   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1131410   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1131411   +   end;
MPRINT(EM_DIAGRAM):   end;
1131412   +end;
MPRINT(EM_DIAGRAM):   end;
1131413   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1131414   +   P_DepVar1  =    -6.74158110639118 * H2x1_1  +     3.33281062877513 * H2x1_2
1131415   +          +     0.83315809661207 * H2x1_3  +     2.92602608104015 * H2x1_4 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -6.74158110639118 * H2x1_1 + 3.33281062877513 * H2x1_2 +
0.83315809661207 * H2x1_3 + 2.92602608104015 * H2x1_4 ;
1131416   +   P_DepVar1  =    -3.28186383811869 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.28186383811869 + P_DepVar1 ;
1131417   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1131418   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1131419   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1131420   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1131421   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1131422   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1131423   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1131424   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1131425   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1131426   +END;
MPRINT(EM_DIAGRAM):   END;
1131427   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1131428   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1131429   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1131430   +END;
MPRINT(EM_DIAGRAM):   END;
1131431   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1131432   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1131433   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1131434   +END;
MPRINT(EM_DIAGRAM):   END;
1131435   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1131436   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1131437   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1131438   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1131439   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1131440   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1131441   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1131442   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1131443   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1131444   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1131445   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1131446   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1131447   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1131448   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1131449   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1131450   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1131451   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1131452   +END;
MPRINT(EM_DIAGRAM):   END;
1131453   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1131454   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1131455   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1131456   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1131457    run;
 
NOTE: DATA STEP view saved on file EMWS8.AUTONEURAL26_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.BINNING_TRAIN.VIEW used (Total process time):
      real time           0.10 seconds
      cpu time            0.09 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.11 seconds
      cpu time            0.12 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1131458    quit;
1131459    filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
1131460    filename emflow
1131460  ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural26\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural26\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * AutoNeural26: Scoring VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1131461    *------------------------------------------------------------*;
1131462    * AutoNeural26: Scoring VALIDATE data;
1131463    *------------------------------------------------------------*;
1131464    data EMWS8.AutoNeural26_VALIDATE
1131465    / view=EMWS8.AutoNeural26_VALIDATE
1131466    ;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural26_VALIDATE / view=EMWS8.AutoNeural26_VALIDATE ;
1131467    set EMWS8.BINNING_VALIDATE
1131468    ;
MPRINT(EM_DIAGRAM):   set EMWS8.BINNING_VALIDATE ;
1131469    %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural26\EMFLOWSCORE.sas.
1131470   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1131471   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1131472   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1131473   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1131474   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1131475   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1131476   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1131477   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1131478   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1131479   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1131480   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1131481   +LENGTH _WARN_ $4
1131482   +      F_DepVar  $ 12
1131483   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1131484   +      label S_Year_Birth = 'Standard: Year_Birth' ;
MPRINT(EM_DIAGRAM):   label S_Year_Birth = 'Standard: Year_Birth' ;
1131485   +
1131486   +      label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
MPRINT(EM_DIAGRAM):   label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
1131487   +
1131488   +      label GRP_AcceptedCmpTotal3 = 'Dummy: GRP_AcceptedCmpTotal=3' ;
MPRINT(EM_DIAGRAM):   label GRP_AcceptedCmpTotal3 = 'Dummy: GRP_AcceptedCmpTotal=3' ;
1131489   +
1131490   +      label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
1131491   +
1131492   +      label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
1131493   +
1131494   +      label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
1131495   +
1131496   +      label GRP_Frq5 = 'Dummy: GRP_Frq=5' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq5 = 'Dummy: GRP_Frq=5' ;
1131497   +
1131498   +      label GRP_Frq6 = 'Dummy: GRP_Frq=6' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq6 = 'Dummy: GRP_Frq=6' ;
1131499   +
1131500   +      label GRP_Frq7 = 'Dummy: GRP_Frq=7' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq7 = 'Dummy: GRP_Frq=7' ;
1131501   +
1131502   +      label GRP_Frq8 = 'Dummy: GRP_Frq=8' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq8 = 'Dummy: GRP_Frq=8' ;
1131503   +
1131504   +      label GRP_Frq9 = 'Dummy: GRP_Frq=9' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq9 = 'Dummy: GRP_Frq=9' ;
1131505   +
1131506   +      label GRP_Frq10 = 'Dummy: GRP_Frq=10' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq10 = 'Dummy: GRP_Frq=10' ;
1131507   +
1131508   +      label GRP_Income2 = 'Dummy: GRP_Income=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Income2 = 'Dummy: GRP_Income=2' ;
1131509   +
1131510   +      label GRP_Income3 = 'Dummy: GRP_Income=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Income3 = 'Dummy: GRP_Income=3' ;
1131511   +
1131512   +      label GRP_Income4 = 'Dummy: GRP_Income=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Income4 = 'Dummy: GRP_Income=4' ;
1131513   +
1131514   +      label GRP_Income5 = 'Dummy: GRP_Income=5' ;
MPRINT(EM_DIAGRAM):   label GRP_Income5 = 'Dummy: GRP_Income=5' ;
1131515   +
1131516   +      label GRP_Income6 = 'Dummy: GRP_Income=6' ;
MPRINT(EM_DIAGRAM):   label GRP_Income6 = 'Dummy: GRP_Income=6' ;
1131517   +
1131518   +      label GRP_Income7 = 'Dummy: GRP_Income=7' ;
MPRINT(EM_DIAGRAM):   label GRP_Income7 = 'Dummy: GRP_Income=7' ;
1131519   +
1131520   +      label GRP_Income8 = 'Dummy: GRP_Income=8' ;
MPRINT(EM_DIAGRAM):   label GRP_Income8 = 'Dummy: GRP_Income=8' ;
1131521   +
1131522   +      label GRP_Income9 = 'Dummy: GRP_Income=9' ;
MPRINT(EM_DIAGRAM):   label GRP_Income9 = 'Dummy: GRP_Income=9' ;
1131523   +
1131524   +      label GRP_Income10 = 'Dummy: GRP_Income=10' ;
MPRINT(EM_DIAGRAM):   label GRP_Income10 = 'Dummy: GRP_Income=10' ;
1131525   +
1131526   +      label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
1131527   +
1131528   +      label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
1131529   +
1131530   +      label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
1131531   +
1131532   +      label GRP_Mnt5 = 'Dummy: GRP_Mnt=5' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt5 = 'Dummy: GRP_Mnt=5' ;
1131533   +
1131534   +      label GRP_Mnt6 = 'Dummy: GRP_Mnt=6' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt6 = 'Dummy: GRP_Mnt=6' ;
1131535   +
1131536   +      label GRP_Mnt7 = 'Dummy: GRP_Mnt=7' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt7 = 'Dummy: GRP_Mnt=7' ;
1131537   +
1131538   +      label GRP_Mnt8 = 'Dummy: GRP_Mnt=8' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt8 = 'Dummy: GRP_Mnt=8' ;
1131539   +
1131540   +      label GRP_Mnt9 = 'Dummy: GRP_Mnt=9' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt9 = 'Dummy: GRP_Mnt=9' ;
1131541   +
1131542   +      label GRP_Mnt10 = 'Dummy: GRP_Mnt=10' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt10 = 'Dummy: GRP_Mnt=10' ;
1131543   +
1131544   +      label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
1131545   +
1131546   +      label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
1131547   +
1131548   +      label GRP_MntFishProducts5 = 'Dummy: GRP_MntFishProducts=5' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts5 = 'Dummy: GRP_MntFishProducts=5' ;
1131549   +
1131550   +      label GRP_MntFishProducts6 = 'Dummy: GRP_MntFishProducts=6' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts6 = 'Dummy: GRP_MntFishProducts=6' ;
1131551   +
1131552   +      label GRP_MntFishProducts7 = 'Dummy: GRP_MntFishProducts=7' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts7 = 'Dummy: GRP_MntFishProducts=7' ;
1131553   +
1131554   +      label GRP_MntFishProducts8 = 'Dummy: GRP_MntFishProducts=8' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts8 = 'Dummy: GRP_MntFishProducts=8' ;
1131555   +
1131556   +      label GRP_MntFishProducts9 = 'Dummy: GRP_MntFishProducts=9' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts9 = 'Dummy: GRP_MntFishProducts=9' ;
1131557   +
1131558   +      label GRP_MntFishProducts10 = 'Dummy: GRP_MntFishProducts=10' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts10 = 'Dummy: GRP_MntFishProducts=10' ;
1131559   +
1131560   +      label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
1131561   +
1131562   +      label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
1131563   +
1131564   +      label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
1131565   +
1131566   +      label GRP_MntGoldProds5 = 'Dummy: GRP_MntGoldProds=5' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds5 = 'Dummy: GRP_MntGoldProds=5' ;
1131567   +
1131568   +      label GRP_MntGoldProds6 = 'Dummy: GRP_MntGoldProds=6' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds6 = 'Dummy: GRP_MntGoldProds=6' ;
1131569   +
1131570   +      label GRP_MntGoldProds7 = 'Dummy: GRP_MntGoldProds=7' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds7 = 'Dummy: GRP_MntGoldProds=7' ;
1131571   +
1131572   +      label GRP_MntGoldProds8 = 'Dummy: GRP_MntGoldProds=8' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds8 = 'Dummy: GRP_MntGoldProds=8' ;
1131573   +
1131574   +      label GRP_MntGoldProds9 = 'Dummy: GRP_MntGoldProds=9' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds9 = 'Dummy: GRP_MntGoldProds=9' ;
1131575   +
1131576   +      label GRP_MntGoldProds10 = 'Dummy: GRP_MntGoldProds=10' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds10 = 'Dummy: GRP_MntGoldProds=10' ;
1131577   +
1131578   +      label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
1131579   +
1131580   +      label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
1131581   +
1131582   +      label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
1131583   +
1131584   +      label GRP_MntMeatProducts5 = 'Dummy: GRP_MntMeatProducts=5' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts5 = 'Dummy: GRP_MntMeatProducts=5' ;
1131585   +
1131586   +      label GRP_MntMeatProducts6 = 'Dummy: GRP_MntMeatProducts=6' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts6 = 'Dummy: GRP_MntMeatProducts=6' ;
1131587   +
1131588   +      label GRP_MntMeatProducts7 = 'Dummy: GRP_MntMeatProducts=7' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts7 = 'Dummy: GRP_MntMeatProducts=7' ;
1131589   +
1131590   +      label GRP_MntMeatProducts8 = 'Dummy: GRP_MntMeatProducts=8' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts8 = 'Dummy: GRP_MntMeatProducts=8' ;
1131591   +
1131592   +      label GRP_MntMeatProducts9 = 'Dummy: GRP_MntMeatProducts=9' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts9 = 'Dummy: GRP_MntMeatProducts=9' ;
1131593   +
1131594   +      label GRP_MntMeatProducts10 = 'Dummy: GRP_MntMeatProducts=10' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts10 = 'Dummy: GRP_MntMeatProducts=10' ;
1131595   +
1131596   +      label GRP_MntSweetProducts3 = 'Dummy: GRP_MntSweetProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntSweetProducts3 = 'Dummy: GRP_MntSweetProducts=3' ;
1131597   +
1131598   +      label GRP_MntSweetProducts4 = 'Dummy: GRP_MntSweetProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntSweetProducts4 = 'Dummy: GRP_MntSweetProducts=4' ;
1131599   +
1131600   +      label GRP_MntSweetProducts5 = 'Dummy: GRP_MntSweetProducts=5' ;
MPRINT(EM_DIAGRAM):   label GRP_MntSweetProducts5 = 'Dummy: GRP_MntSweetProducts=5' ;
1131601   +
1131602   +      label GRP_MntSweetProducts6 = 'Dummy: GRP_MntSweetProducts=6' ;
MPRINT(EM_DIAGRAM):   label GRP_MntSweetProducts6 = 'Dummy: GRP_MntSweetProducts=6' ;
1131603   +
1131604   +      label GRP_MntSweetProducts7 = 'Dummy: GRP_MntSweetProducts=7' ;
MPRINT(EM_DIAGRAM):   label GRP_MntSweetProducts7 = 'Dummy: GRP_MntSweetProducts=7' ;
1131605   +
1131606   +      label GRP_MntSweetProducts8 = 'Dummy: GRP_MntSweetProducts=8' ;
MPRINT(EM_DIAGRAM):   label GRP_MntSweetProducts8 = 'Dummy: GRP_MntSweetProducts=8' ;
1131607   +
1131608   +      label GRP_MntSweetProducts9 = 'Dummy: GRP_MntSweetProducts=9' ;
MPRINT(EM_DIAGRAM):   label GRP_MntSweetProducts9 = 'Dummy: GRP_MntSweetProducts=9' ;
1131609   +
1131610   +      label GRP_MntSweetProducts10 = 'Dummy: GRP_MntSweetProducts=10' ;
MPRINT(EM_DIAGRAM):   label GRP_MntSweetProducts10 = 'Dummy: GRP_MntSweetProducts=10' ;
1131611   +
1131612   +      label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
1131613   +
1131614   +      label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
1131615   +
1131616   +      label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
1131617   +
1131618   +      label GRP_MntWines5 = 'Dummy: GRP_MntWines=5' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines5 = 'Dummy: GRP_MntWines=5' ;
1131619   +
1131620   +      label GRP_MntWines6 = 'Dummy: GRP_MntWines=6' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines6 = 'Dummy: GRP_MntWines=6' ;
1131621   +
1131622   +      label GRP_MntWines7 = 'Dummy: GRP_MntWines=7' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines7 = 'Dummy: GRP_MntWines=7' ;
1131623   +
1131624   +      label GRP_MntWines8 = 'Dummy: GRP_MntWines=8' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines8 = 'Dummy: GRP_MntWines=8' ;
1131625   +
1131626   +      label GRP_MntWines9 = 'Dummy: GRP_MntWines=9' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines9 = 'Dummy: GRP_MntWines=9' ;
1131627   +
1131628   +      label GRP_MntWines10 = 'Dummy: GRP_MntWines=10' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines10 = 'Dummy: GRP_MntWines=10' ;
1131629   +
1131630   +      label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
1131631   +
1131632   +      label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
1131633   +
1131634   +      label GRP_NumCatalogPurchases5 = 'Dummy: GRP_NumCatalogPurchases=5' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases5 = 'Dummy: GRP_NumCatalogPurchases=5' ;
1131635   +
1131636   +      label GRP_NumCatalogPurchases6 = 'Dummy: GRP_NumCatalogPurchases=6' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases6 = 'Dummy: GRP_NumCatalogPurchases=6' ;
1131637   +
1131638   +      label GRP_NumCatalogPurchases7 = 'Dummy: GRP_NumCatalogPurchases=7' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases7 = 'Dummy: GRP_NumCatalogPurchases=7' ;
1131639   +
1131640   +      label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
1131641   +
1131642   +      label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
1131643   +
1131644   +      label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
1131645   +
1131646   +      label GRP_NumDistPurchases5 = 'Dummy: GRP_NumDistPurchases=5' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases5 = 'Dummy: GRP_NumDistPurchases=5' ;
1131647   +
1131648   +      label GRP_NumDistPurchases6 = 'Dummy: GRP_NumDistPurchases=6' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases6 = 'Dummy: GRP_NumDistPurchases=6' ;
1131649   +
1131650   +      label GRP_NumDistPurchases7 = 'Dummy: GRP_NumDistPurchases=7' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases7 = 'Dummy: GRP_NumDistPurchases=7' ;
1131651   +
1131652   +      label GRP_NumDistPurchases8 = 'Dummy: GRP_NumDistPurchases=8' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases8 = 'Dummy: GRP_NumDistPurchases=8' ;
1131653   +
1131654   +      label GRP_NumDistPurchases9 = 'Dummy: GRP_NumDistPurchases=9' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases9 = 'Dummy: GRP_NumDistPurchases=9' ;
1131655   +
1131656   +      label GRP_NumDistPurchases10 = 'Dummy: GRP_NumDistPurchases=10' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases10 = 'Dummy: GRP_NumDistPurchases=10' ;
1131657   +
1131658   +      label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
1131659   +
1131660   +      label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
1131661   +
1131662   +      label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
1131663   +
1131664   +      label GRP_NumWebPurchases5 = 'Dummy: GRP_NumWebPurchases=5' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases5 = 'Dummy: GRP_NumWebPurchases=5' ;
1131665   +
1131666   +      label GRP_NumWebPurchases6 = 'Dummy: GRP_NumWebPurchases=6' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases6 = 'Dummy: GRP_NumWebPurchases=6' ;
1131667   +
1131668   +      label GRP_NumWebPurchases7 = 'Dummy: GRP_NumWebPurchases=7' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases7 = 'Dummy: GRP_NumWebPurchases=7' ;
1131669   +
1131670   +      label GRP_NumWebPurchases8 = 'Dummy: GRP_NumWebPurchases=8' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases8 = 'Dummy: GRP_NumWebPurchases=8' ;
1131671   +
1131672   +      label GRP_NumWebVisitsMonth2 = 'Dummy: GRP_NumWebVisitsMonth=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebVisitsMonth2 = 'Dummy: GRP_NumWebVisitsMonth=2' ;
1131673   +
1131674   +      label GRP_NumWebVisitsMonth3 = 'Dummy: GRP_NumWebVisitsMonth=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebVisitsMonth3 = 'Dummy: GRP_NumWebVisitsMonth=3' ;
1131675   +
1131676   +      label GRP_NumWebVisitsMonth4 = 'Dummy: GRP_NumWebVisitsMonth=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebVisitsMonth4 = 'Dummy: GRP_NumWebVisitsMonth=4' ;
1131677   +
1131678   +      label GRP_NumWebVisitsMonth5 = 'Dummy: GRP_NumWebVisitsMonth=5' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebVisitsMonth5 = 'Dummy: GRP_NumWebVisitsMonth=5' ;
1131679   +
1131680   +      label GRP_NumWebVisitsMonth6 = 'Dummy: GRP_NumWebVisitsMonth=6' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebVisitsMonth6 = 'Dummy: GRP_NumWebVisitsMonth=6' ;
1131681   +
1131682   +      label GRP_NumWebVisitsMonth7 = 'Dummy: GRP_NumWebVisitsMonth=7' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebVisitsMonth7 = 'Dummy: GRP_NumWebVisitsMonth=7' ;
1131683   +
1131684   +      label GRP_NumWebVisitsMonth8 = 'Dummy: GRP_NumWebVisitsMonth=8' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebVisitsMonth8 = 'Dummy: GRP_NumWebVisitsMonth=8' ;
1131685   +
1131686   +      label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
1131687   +
1131688   +      label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
1131689   +
1131690   +      label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
1131691   +
1131692   +      label GRP_RFMstat5 = 'Dummy: GRP_RFMstat=5' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat5 = 'Dummy: GRP_RFMstat=5' ;
1131693   +
1131694   +      label GRP_RFMstat6 = 'Dummy: GRP_RFMstat=6' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat6 = 'Dummy: GRP_RFMstat=6' ;
1131695   +
1131696   +      label GRP_RFMstat7 = 'Dummy: GRP_RFMstat=7' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat7 = 'Dummy: GRP_RFMstat=7' ;
1131697   +
1131698   +      label GRP_RFMstat8 = 'Dummy: GRP_RFMstat=8' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat8 = 'Dummy: GRP_RFMstat=8' ;
1131699   +
1131700   +      label GRP_RFMstat9 = 'Dummy: GRP_RFMstat=9' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat9 = 'Dummy: GRP_RFMstat=9' ;
1131701   +
1131702   +      label GRP_RFMstat10 = 'Dummy: GRP_RFMstat=10' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat10 = 'Dummy: GRP_RFMstat=10' ;
1131703   +
1131704   +      label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
1131705   +
1131706   +      label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
1131707   +
1131708   +      label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
1131709   +
1131710   +      label GRP_RMntFrq5 = 'Dummy: GRP_RMntFrq=5' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq5 = 'Dummy: GRP_RMntFrq=5' ;
1131711   +
1131712   +      label GRP_RMntFrq6 = 'Dummy: GRP_RMntFrq=6' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq6 = 'Dummy: GRP_RMntFrq=6' ;
1131713   +
1131714   +      label GRP_RMntFrq7 = 'Dummy: GRP_RMntFrq=7' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq7 = 'Dummy: GRP_RMntFrq=7' ;
1131715   +
1131716   +      label GRP_RMntFrq8 = 'Dummy: GRP_RMntFrq=8' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq8 = 'Dummy: GRP_RMntFrq=8' ;
1131717   +
1131718   +      label GRP_RMntFrq9 = 'Dummy: GRP_RMntFrq=9' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq9 = 'Dummy: GRP_RMntFrq=9' ;
1131719   +
1131720   +      label GRP_RMntFrq10 = 'Dummy: GRP_RMntFrq=10' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq10 = 'Dummy: GRP_RMntFrq=10' ;
1131721   +
1131722   +      label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
1131723   +
1131724   +      label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
1131725   +
1131726   +      label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
1131727   +
1131728   +      label GRP_Recency5 = 'Dummy: GRP_Recency=5' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency5 = 'Dummy: GRP_Recency=5' ;
1131729   +
1131730   +      label GRP_Recency6 = 'Dummy: GRP_Recency=6' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency6 = 'Dummy: GRP_Recency=6' ;
1131731   +
1131732   +      label GRP_Recency7 = 'Dummy: GRP_Recency=7' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency7 = 'Dummy: GRP_Recency=7' ;
1131733   +
1131734   +      label GRP_Recency8 = 'Dummy: GRP_Recency=8' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency8 = 'Dummy: GRP_Recency=8' ;
1131735   +
1131736   +      label GRP_Recency9 = 'Dummy: GRP_Recency=9' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency9 = 'Dummy: GRP_Recency=9' ;
1131737   +
1131738   +      label GRP_Recency10 = 'Dummy: GRP_Recency=10' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency10 = 'Dummy: GRP_Recency=10' ;
1131739   +
1131740   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
1131741   +
1131742   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
1131743   +
1131744   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
1131745   +
1131746   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
1131747   +
1131748   +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
1131749   +
1131750   +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
1131751   +
1131752   +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
1131753   +
1131754   +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
1131755   +
1131756   +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
1131757   +
1131758   +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
1131759   +
1131760   +      label H2x1_3 = 'Hidden: H2x1_=3' ;
MPRINT(EM_DIAGRAM):   label H2x1_3 = 'Hidden: H2x1_=3' ;
1131761   +
1131762   +      label H2x1_4 = 'Hidden: H2x1_=4' ;
MPRINT(EM_DIAGRAM):   label H2x1_4 = 'Hidden: H2x1_=4' ;
1131763   +
1131764   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1131765   +
1131766   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1131767   +
1131768   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1131769   +
1131770   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1131771   +
1131772   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1131773   +
1131774   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1131775   +
1131776   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1131777   +
1131778   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1131779   +
1131780   +*** Generate dummy variables for GRP_AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_AcceptedCmp5 ;
1131781   +drop GRP_AcceptedCmp52 ;
MPRINT(EM_DIAGRAM):   drop GRP_AcceptedCmp52 ;
1131782   +if missing( GRP_AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_AcceptedCmp5 ) then do;
1131783   +   GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
1131784   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1131785   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1131786   +end;
MPRINT(EM_DIAGRAM):   end;
1131787   +else do;
MPRINT(EM_DIAGRAM):   else do;
1131788   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1131789   +   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
1131790   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1131791   +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
1131792   +      GRP_AcceptedCmp52 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = 1;
1131793   +   end;
MPRINT(EM_DIAGRAM):   end;
1131794   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1131795   +      GRP_AcceptedCmp52 = -1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = -1;
1131796   +   end;
MPRINT(EM_DIAGRAM):   end;
1131797   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1131798   +      GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
1131799   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1131800   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1131801   +   end;
MPRINT(EM_DIAGRAM):   end;
1131802   +end;
MPRINT(EM_DIAGRAM):   end;
1131803   +
1131804   +*** Generate dummy variables for GRP_AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_AcceptedCmpTotal ;
1131805   +drop GRP_AcceptedCmpTotal3 ;
MPRINT(EM_DIAGRAM):   drop GRP_AcceptedCmpTotal3 ;
1131806   +if missing( GRP_AcceptedCmpTotal ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_AcceptedCmpTotal ) then do;
1131807   +   GRP_AcceptedCmpTotal3 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmpTotal3 = .;
1131808   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1131809   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1131810   +end;
MPRINT(EM_DIAGRAM):   end;
1131811   +else do;
MPRINT(EM_DIAGRAM):   else do;
1131812   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1131813   +   _dm12 = put( GRP_AcceptedCmpTotal , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_AcceptedCmpTotal , BEST12. );
1131814   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1131815   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1131816   +      GRP_AcceptedCmpTotal3 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmpTotal3 = 1;
1131817   +   end;
MPRINT(EM_DIAGRAM):   end;
1131818   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1131819   +      GRP_AcceptedCmpTotal3 = -1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmpTotal3 = -1;
1131820   +   end;
MPRINT(EM_DIAGRAM):   end;
1131821   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1131822   +      GRP_AcceptedCmpTotal3 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmpTotal3 = .;
1131823   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1131824   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1131825   +   end;
MPRINT(EM_DIAGRAM):   end;
1131826   +end;
MPRINT(EM_DIAGRAM):   end;
1131827   +
1131828   +*** Generate dummy variables for GRP_Frq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Frq ;
1131829   +drop GRP_Frq2 GRP_Frq3 GRP_Frq4 GRP_Frq5 GRP_Frq6 GRP_Frq7 GRP_Frq8 GRP_Frq9
1131830   +        GRP_Frq10 ;
MPRINT(EM_DIAGRAM):   drop GRP_Frq2 GRP_Frq3 GRP_Frq4 GRP_Frq5 GRP_Frq6 GRP_Frq7 GRP_Frq8
GRP_Frq9 GRP_Frq10 ;
1131831   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1131832   +GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
1131833   +GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
1131834   +GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
1131835   +GRP_Frq5 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq5 = 0;
1131836   +GRP_Frq6 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq6 = 0;
1131837   +GRP_Frq7 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq7 = 0;
1131838   +GRP_Frq8 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq8 = 0;
1131839   +GRP_Frq9 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq9 = 0;
1131840   +GRP_Frq10 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq10 = 0;
1131841   +if missing( GRP_Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Frq ) then do;
1131842   +   GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
1131843   +   GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
1131844   +   GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
1131845   +   GRP_Frq5 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq5 = .;
1131846   +   GRP_Frq6 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq6 = .;
1131847   +   GRP_Frq7 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq7 = .;
1131848   +   GRP_Frq8 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq8 = .;
1131849   +   GRP_Frq9 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq9 = .;
1131850   +   GRP_Frq10 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq10 = .;
1131851   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1131852   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1131853   +end;
MPRINT(EM_DIAGRAM):   end;
1131854   +else do;
MPRINT(EM_DIAGRAM):   else do;
1131855   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1131856   +   _dm12 = put( GRP_Frq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Frq , BEST12. );
1131857   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1131858   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1131859   +   if _dm12 <= '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '4' then do;
1131860   +      if _dm12 <= '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '2' then do;
1131861   +         if _dm12 <= '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '11' then do;
1131862   +            if _dm12 = '10'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '10' then do;
1131863   +               GRP_Frq10 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq10 = 1;
1131864   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1131865   +            end;
MPRINT(EM_DIAGRAM):   end;
1131866   +            else do;
MPRINT(EM_DIAGRAM):   else do;
1131867   +               if _dm12 = '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '11' then do;
1131868   +                  GRP_Frq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = -1;
1131869   +                  GRP_Frq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = -1;
1131870   +                  GRP_Frq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = -1;
1131871   +                  GRP_Frq5 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq5 = -1;
1131872   +                  GRP_Frq6 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq6 = -1;
1131873   +                  GRP_Frq7 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq7 = -1;
1131874   +                  GRP_Frq8 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq8 = -1;
1131875   +                  GRP_Frq9 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq9 = -1;
1131876   +                  GRP_Frq10 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq10 = -1;
1131877   +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1131878   +               end;
MPRINT(EM_DIAGRAM):   end;
1131879   +            end;
MPRINT(EM_DIAGRAM):   end;
1131880   +         end;
MPRINT(EM_DIAGRAM):   end;
1131881   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1131882   +            if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
1131883   +               GRP_Frq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 1;
1131884   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1131885   +            end;
MPRINT(EM_DIAGRAM):   end;
1131886   +         end;
MPRINT(EM_DIAGRAM):   end;
1131887   +      end;
MPRINT(EM_DIAGRAM):   end;
1131888   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1131889   +         if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1131890   +            GRP_Frq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 1;
1131891   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1131892   +         end;
MPRINT(EM_DIAGRAM):   end;
1131893   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1131894   +            if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
1131895   +               GRP_Frq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 1;
1131896   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1131897   +            end;
MPRINT(EM_DIAGRAM):   end;
1131898   +         end;
MPRINT(EM_DIAGRAM):   end;
1131899   +      end;
MPRINT(EM_DIAGRAM):   end;
1131900   +   end;
MPRINT(EM_DIAGRAM):   end;
1131901   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1131902   +      if _dm12 <= '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '7' then do;
1131903   +         if _dm12 <= '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '6' then do;
1131904   +            if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1131905   +               GRP_Frq5 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq5 = 1;
1131906   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1131907   +            end;
MPRINT(EM_DIAGRAM):   end;
1131908   +            else do;
MPRINT(EM_DIAGRAM):   else do;
1131909   +               if _dm12 = '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '6' then do;
1131910   +                  GRP_Frq6 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq6 = 1;
1131911   +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1131912   +               end;
MPRINT(EM_DIAGRAM):   end;
1131913   +            end;
MPRINT(EM_DIAGRAM):   end;
1131914   +         end;
MPRINT(EM_DIAGRAM):   end;
1131915   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1131916   +            if _dm12 = '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '7' then do;
1131917   +               GRP_Frq7 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq7 = 1;
1131918   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1131919   +            end;
MPRINT(EM_DIAGRAM):   end;
1131920   +         end;
MPRINT(EM_DIAGRAM):   end;
1131921   +      end;
MPRINT(EM_DIAGRAM):   end;
1131922   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1131923   +         if _dm12 = '8'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '8' then do;
1131924   +            GRP_Frq8 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq8 = 1;
1131925   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1131926   +         end;
MPRINT(EM_DIAGRAM):   end;
1131927   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1131928   +            if _dm12 = '9'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '9' then do;
1131929   +               GRP_Frq9 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq9 = 1;
1131930   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1131931   +            end;
MPRINT(EM_DIAGRAM):   end;
1131932   +         end;
MPRINT(EM_DIAGRAM):   end;
1131933   +      end;
MPRINT(EM_DIAGRAM):   end;
1131934   +   end;
MPRINT(EM_DIAGRAM):   end;
1131935   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1131936   +      GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
1131937   +      GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
1131938   +      GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
1131939   +      GRP_Frq5 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq5 = .;
1131940   +      GRP_Frq6 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq6 = .;
1131941   +      GRP_Frq7 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq7 = .;
1131942   +      GRP_Frq8 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq8 = .;
1131943   +      GRP_Frq9 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq9 = .;
1131944   +      GRP_Frq10 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq10 = .;
1131945   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1131946   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1131947   +   end;
MPRINT(EM_DIAGRAM):   end;
1131948   +end;
MPRINT(EM_DIAGRAM):   end;
1131949   +
1131950   +*** Generate dummy variables for GRP_Income ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Income ;
1131951   +drop GRP_Income2 GRP_Income3 GRP_Income4 GRP_Income5 GRP_Income6 GRP_Income7
1131952   +        GRP_Income8 GRP_Income9 GRP_Income10 ;
MPRINT(EM_DIAGRAM):   drop GRP_Income2 GRP_Income3 GRP_Income4 GRP_Income5 GRP_Income6
GRP_Income7 GRP_Income8 GRP_Income9 GRP_Income10 ;
1131953   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1131954   +GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
1131955   +GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
1131956   +GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
1131957   +GRP_Income5 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income5 = 0;
1131958   +GRP_Income6 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income6 = 0;
1131959   +GRP_Income7 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income7 = 0;
1131960   +GRP_Income8 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income8 = 0;
1131961   +GRP_Income9 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income9 = 0;
1131962   +GRP_Income10 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income10 = 0;
1131963   +if missing( GRP_Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Income ) then do;
1131964   +   GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
1131965   +   GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
1131966   +   GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
1131967   +   GRP_Income5 = .;
MPRINT(EM_DIAGRAM):   GRP_Income5 = .;
1131968   +   GRP_Income6 = .;
MPRINT(EM_DIAGRAM):   GRP_Income6 = .;
1131969   +   GRP_Income7 = .;
MPRINT(EM_DIAGRAM):   GRP_Income7 = .;
1131970   +   GRP_Income8 = .;
MPRINT(EM_DIAGRAM):   GRP_Income8 = .;
1131971   +   GRP_Income9 = .;
MPRINT(EM_DIAGRAM):   GRP_Income9 = .;
1131972   +   GRP_Income10 = .;
MPRINT(EM_DIAGRAM):   GRP_Income10 = .;
1131973   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1131974   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1131975   +end;
MPRINT(EM_DIAGRAM):   end;
1131976   +else do;
MPRINT(EM_DIAGRAM):   else do;
1131977   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1131978   +   _dm12 = put( GRP_Income , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Income , BEST12. );
1131979   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1131980   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1131981   +   if _dm12 <= '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '4' then do;
1131982   +      if _dm12 <= '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '2' then do;
1131983   +         if _dm12 <= '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '11' then do;
1131984   +            if _dm12 = '10'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '10' then do;
1131985   +               GRP_Income10 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income10 = 1;
1131986   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1131987   +            end;
MPRINT(EM_DIAGRAM):   end;
1131988   +            else do;
MPRINT(EM_DIAGRAM):   else do;
1131989   +               if _dm12 = '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '11' then do;
1131990   +                  GRP_Income2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = -1;
1131991   +                  GRP_Income3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = -1;
1131992   +                  GRP_Income4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = -1;
1131993   +                  GRP_Income5 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income5 = -1;
1131994   +                  GRP_Income6 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income6 = -1;
1131995   +                  GRP_Income7 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income7 = -1;
1131996   +                  GRP_Income8 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income8 = -1;
1131997   +                  GRP_Income9 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income9 = -1;
1131998   +                  GRP_Income10 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income10 = -1;
1131999   +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1132000   +               end;
MPRINT(EM_DIAGRAM):   end;
1132001   +            end;
MPRINT(EM_DIAGRAM):   end;
1132002   +         end;
MPRINT(EM_DIAGRAM):   end;
1132003   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1132004   +            if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
1132005   +               GRP_Income2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 1;
1132006   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1132007   +            end;
MPRINT(EM_DIAGRAM):   end;
1132008   +         end;
MPRINT(EM_DIAGRAM):   end;
1132009   +      end;
MPRINT(EM_DIAGRAM):   end;
1132010   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1132011   +         if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1132012   +            GRP_Income3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 1;
1132013   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1132014   +         end;
MPRINT(EM_DIAGRAM):   end;
1132015   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1132016   +            if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
1132017   +               GRP_Income4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 1;
1132018   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1132019   +            end;
MPRINT(EM_DIAGRAM):   end;
1132020   +         end;
MPRINT(EM_DIAGRAM):   end;
1132021   +      end;
MPRINT(EM_DIAGRAM):   end;
1132022   +   end;
MPRINT(EM_DIAGRAM):   end;
1132023   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1132024   +      if _dm12 <= '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '7' then do;
1132025   +         if _dm12 <= '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '6' then do;
1132026   +            if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1132027   +               GRP_Income5 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income5 = 1;
1132028   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1132029   +            end;
MPRINT(EM_DIAGRAM):   end;
1132030   +            else do;
MPRINT(EM_DIAGRAM):   else do;
1132031   +               if _dm12 = '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '6' then do;
1132032   +                  GRP_Income6 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income6 = 1;
1132033   +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1132034   +               end;
MPRINT(EM_DIAGRAM):   end;
1132035   +            end;
MPRINT(EM_DIAGRAM):   end;
1132036   +         end;
MPRINT(EM_DIAGRAM):   end;
1132037   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1132038   +            if _dm12 = '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '7' then do;
1132039   +               GRP_Income7 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income7 = 1;
1132040   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1132041   +            end;
MPRINT(EM_DIAGRAM):   end;
1132042   +         end;
MPRINT(EM_DIAGRAM):   end;
1132043   +      end;
MPRINT(EM_DIAGRAM):   end;
1132044   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1132045   +         if _dm12 = '8'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '8' then do;
1132046   +            GRP_Income8 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income8 = 1;
1132047   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1132048   +         end;
MPRINT(EM_DIAGRAM):   end;
1132049   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1132050   +            if _dm12 = '9'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '9' then do;
1132051   +               GRP_Income9 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income9 = 1;
1132052   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1132053   +            end;
MPRINT(EM_DIAGRAM):   end;
1132054   +         end;
MPRINT(EM_DIAGRAM):   end;
1132055   +      end;
MPRINT(EM_DIAGRAM):   end;
1132056   +   end;
MPRINT(EM_DIAGRAM):   end;
1132057   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1132058   +      GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
1132059   +      GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
1132060   +      GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
1132061   +      GRP_Income5 = .;
MPRINT(EM_DIAGRAM):   GRP_Income5 = .;
1132062   +      GRP_Income6 = .;
MPRINT(EM_DIAGRAM):   GRP_Income6 = .;
1132063   +      GRP_Income7 = .;
MPRINT(EM_DIAGRAM):   GRP_Income7 = .;
1132064   +      GRP_Income8 = .;
MPRINT(EM_DIAGRAM):   GRP_Income8 = .;
1132065   +      GRP_Income9 = .;
MPRINT(EM_DIAGRAM):   GRP_Income9 = .;
1132066   +      GRP_Income10 = .;
MPRINT(EM_DIAGRAM):   GRP_Income10 = .;
1132067   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1132068   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1132069   +   end;
MPRINT(EM_DIAGRAM):   end;
1132070   +end;
MPRINT(EM_DIAGRAM):   end;
1132071   +
1132072   +*** Generate dummy variables for GRP_Mnt ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Mnt ;
1132073   +drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 GRP_Mnt5 GRP_Mnt6 GRP_Mnt7 GRP_Mnt8 GRP_Mnt9
1132074   +        GRP_Mnt10 ;
MPRINT(EM_DIAGRAM):   drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 GRP_Mnt5 GRP_Mnt6 GRP_Mnt7 GRP_Mnt8
GRP_Mnt9 GRP_Mnt10 ;
1132075   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1132076   +GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
1132077   +GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
1132078   +GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
1132079   +GRP_Mnt5 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt5 = 0;
1132080   +GRP_Mnt6 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt6 = 0;
1132081   +GRP_Mnt7 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt7 = 0;
1132082   +GRP_Mnt8 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt8 = 0;
1132083   +GRP_Mnt9 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt9 = 0;
1132084   +GRP_Mnt10 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt10 = 0;
1132085   +if missing( GRP_Mnt ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Mnt ) then do;
1132086   +   GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
1132087   +   GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
1132088   +   GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
1132089   +   GRP_Mnt5 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt5 = .;
1132090   +   GRP_Mnt6 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt6 = .;
1132091   +   GRP_Mnt7 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt7 = .;
1132092   +   GRP_Mnt8 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt8 = .;
1132093   +   GRP_Mnt9 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt9 = .;
1132094   +   GRP_Mnt10 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt10 = .;
1132095   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1132096   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1132097   +end;
MPRINT(EM_DIAGRAM):   end;
1132098   +else do;
MPRINT(EM_DIAGRAM):   else do;
1132099   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1132100   +   _dm12 = put( GRP_Mnt , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Mnt , BEST12. );
1132101   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1132102   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1132103   +   if _dm12 <= '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '4' then do;
1132104   +      if _dm12 <= '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '2' then do;
1132105   +         if _dm12 <= '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '11' then do;
1132106   +            if _dm12 = '10'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '10' then do;
1132107   +               GRP_Mnt10 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt10 = 1;
1132108   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1132109   +            end;
MPRINT(EM_DIAGRAM):   end;
1132110   +            else do;
MPRINT(EM_DIAGRAM):   else do;
1132111   +               if _dm12 = '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '11' then do;
1132112   +                  GRP_Mnt2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = -1;
1132113   +                  GRP_Mnt3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = -1;
1132114   +                  GRP_Mnt4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = -1;
1132115   +                  GRP_Mnt5 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt5 = -1;
1132116   +                  GRP_Mnt6 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt6 = -1;
1132117   +                  GRP_Mnt7 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt7 = -1;
1132118   +                  GRP_Mnt8 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt8 = -1;
1132119   +                  GRP_Mnt9 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt9 = -1;
1132120   +                  GRP_Mnt10 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt10 = -1;
1132121   +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1132122   +               end;
MPRINT(EM_DIAGRAM):   end;
1132123   +            end;
MPRINT(EM_DIAGRAM):   end;
1132124   +         end;
MPRINT(EM_DIAGRAM):   end;
1132125   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1132126   +            if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
1132127   +               GRP_Mnt2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 1;
1132128   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1132129   +            end;
MPRINT(EM_DIAGRAM):   end;
1132130   +         end;
MPRINT(EM_DIAGRAM):   end;
1132131   +      end;
MPRINT(EM_DIAGRAM):   end;
1132132   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1132133   +         if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1132134   +            GRP_Mnt3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 1;
1132135   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1132136   +         end;
MPRINT(EM_DIAGRAM):   end;
1132137   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1132138   +            if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
1132139   +               GRP_Mnt4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 1;
1132140   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1132141   +            end;
MPRINT(EM_DIAGRAM):   end;
1132142   +         end;
MPRINT(EM_DIAGRAM):   end;
1132143   +      end;
MPRINT(EM_DIAGRAM):   end;
1132144   +   end;
MPRINT(EM_DIAGRAM):   end;
1132145   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1132146   +      if _dm12 <= '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '7' then do;
1132147   +         if _dm12 <= '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '6' then do;
1132148   +            if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1132149   +               GRP_Mnt5 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt5 = 1;
1132150   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1132151   +            end;
MPRINT(EM_DIAGRAM):   end;
1132152   +            else do;
MPRINT(EM_DIAGRAM):   else do;
1132153   +               if _dm12 = '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '6' then do;
1132154   +                  GRP_Mnt6 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt6 = 1;
1132155   +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1132156   +               end;
MPRINT(EM_DIAGRAM):   end;
1132157   +            end;
MPRINT(EM_DIAGRAM):   end;
1132158   +         end;
MPRINT(EM_DIAGRAM):   end;
1132159   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1132160   +            if _dm12 = '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '7' then do;
1132161   +               GRP_Mnt7 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt7 = 1;
1132162   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1132163   +            end;
MPRINT(EM_DIAGRAM):   end;
1132164   +         end;
MPRINT(EM_DIAGRAM):   end;
1132165   +      end;
MPRINT(EM_DIAGRAM):   end;
1132166   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1132167   +         if _dm12 = '8'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '8' then do;
1132168   +            GRP_Mnt8 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt8 = 1;
1132169   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1132170   +         end;
MPRINT(EM_DIAGRAM):   end;
1132171   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1132172   +            if _dm12 = '9'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '9' then do;
1132173   +               GRP_Mnt9 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt9 = 1;
1132174   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1132175   +            end;
MPRINT(EM_DIAGRAM):   end;
1132176   +         end;
MPRINT(EM_DIAGRAM):   end;
1132177   +      end;
MPRINT(EM_DIAGRAM):   end;
1132178   +   end;
MPRINT(EM_DIAGRAM):   end;
1132179   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1132180   +      GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
1132181   +      GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
1132182   +      GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
1132183   +      GRP_Mnt5 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt5 = .;
1132184   +      GRP_Mnt6 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt6 = .;
1132185   +      GRP_Mnt7 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt7 = .;
1132186   +      GRP_Mnt8 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt8 = .;
1132187   +      GRP_Mnt9 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt9 = .;
1132188   +      GRP_Mnt10 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt10 = .;
1132189   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1132190   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1132191   +   end;
MPRINT(EM_DIAGRAM):   end;
1132192   +end;
MPRINT(EM_DIAGRAM):   end;
1132193   +
1132194   +*** Generate dummy variables for GRP_MntFishProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntFishProducts ;
1132195   +drop GRP_MntFishProducts3 GRP_MntFishProducts4 GRP_MntFishProducts5
1132196   +        GRP_MntFishProducts6 GRP_MntFishProducts7 GRP_MntFishProducts8
1132197   +        GRP_MntFishProducts9 GRP_MntFishProducts10 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntFishProducts3 GRP_MntFishProducts4 GRP_MntFishProducts5
GRP_MntFishProducts6 GRP_MntFishProducts7 GRP_MntFishProducts8 GRP_MntFishProducts9
GRP_MntFishProducts10 ;
1132198   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1132199   +GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
1132200   +GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
1132201   +GRP_MntFishProducts5 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts5 = 0;
1132202   +GRP_MntFishProducts6 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts6 = 0;
1132203   +GRP_MntFishProducts7 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts7 = 0;
1132204   +GRP_MntFishProducts8 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts8 = 0;
1132205   +GRP_MntFishProducts9 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts9 = 0;
1132206   +GRP_MntFishProducts10 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts10 = 0;
1132207   +if missing( GRP_MntFishProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntFishProducts ) then do;
1132208   +   GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
1132209   +   GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
1132210   +   GRP_MntFishProducts5 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts5 = .;
1132211   +   GRP_MntFishProducts6 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts6 = .;
1132212   +   GRP_MntFishProducts7 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts7 = .;
1132213   +   GRP_MntFishProducts8 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts8 = .;
1132214   +   GRP_MntFishProducts9 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts9 = .;
1132215   +   GRP_MntFishProducts10 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts10 = .;
1132216   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1132217   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1132218   +end;
MPRINT(EM_DIAGRAM):   end;
1132219   +else do;
MPRINT(EM_DIAGRAM):   else do;
1132220   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1132221   +   _dm12 = put( GRP_MntFishProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntFishProducts , BEST12. );
1132222   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1132223   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1132224   +   if _dm12 <= '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '5' then do;
1132225   +      if _dm12 <= '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '3' then do;
1132226   +         if _dm12 <= '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '11' then do;
1132227   +            if _dm12 = '10'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '10' then do;
1132228   +               GRP_MntFishProducts10 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts10 = 1;
1132229   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1132230   +            end;
MPRINT(EM_DIAGRAM):   end;
1132231   +            else do;
MPRINT(EM_DIAGRAM):   else do;
1132232   +               if _dm12 = '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '11' then do;
1132233   +                  GRP_MntFishProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = -1;
1132234   +                  GRP_MntFishProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = -1;
1132235   +                  GRP_MntFishProducts5 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts5 = -1;
1132236   +                  GRP_MntFishProducts6 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts6 = -1;
1132237   +                  GRP_MntFishProducts7 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts7 = -1;
1132238   +                  GRP_MntFishProducts8 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts8 = -1;
1132239   +                  GRP_MntFishProducts9 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts9 = -1;
1132240   +                  GRP_MntFishProducts10 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts10 = -1;
1132241   +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1132242   +               end;
MPRINT(EM_DIAGRAM):   end;
1132243   +            end;
MPRINT(EM_DIAGRAM):   end;
1132244   +         end;
MPRINT(EM_DIAGRAM):   end;
1132245   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1132246   +            if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1132247   +               GRP_MntFishProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 1;
1132248   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1132249   +            end;
MPRINT(EM_DIAGRAM):   end;
1132250   +         end;
MPRINT(EM_DIAGRAM):   end;
1132251   +      end;
MPRINT(EM_DIAGRAM):   end;
1132252   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1132253   +         if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
1132254   +            GRP_MntFishProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 1;
1132255   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1132256   +         end;
MPRINT(EM_DIAGRAM):   end;
1132257   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1132258   +            if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1132259   +               GRP_MntFishProducts5 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts5 = 1;
1132260   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1132261   +            end;
MPRINT(EM_DIAGRAM):   end;
1132262   +         end;
MPRINT(EM_DIAGRAM):   end;
1132263   +      end;
MPRINT(EM_DIAGRAM):   end;
1132264   +   end;
MPRINT(EM_DIAGRAM):   end;
1132265   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1132266   +      if _dm12 <= '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '7' then do;
1132267   +         if _dm12 = '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '6' then do;
1132268   +            GRP_MntFishProducts6 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts6 = 1;
1132269   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1132270   +         end;
MPRINT(EM_DIAGRAM):   end;
1132271   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1132272   +            if _dm12 = '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '7' then do;
1132273   +               GRP_MntFishProducts7 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts7 = 1;
1132274   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1132275   +            end;
MPRINT(EM_DIAGRAM):   end;
1132276   +         end;
MPRINT(EM_DIAGRAM):   end;
1132277   +      end;
MPRINT(EM_DIAGRAM):   end;
1132278   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1132279   +         if _dm12 = '8'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '8' then do;
1132280   +            GRP_MntFishProducts8 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts8 = 1;
1132281   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1132282   +         end;
MPRINT(EM_DIAGRAM):   end;
1132283   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1132284   +            if _dm12 = '9'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '9' then do;
1132285   +               GRP_MntFishProducts9 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts9 = 1;
1132286   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1132287   +            end;
MPRINT(EM_DIAGRAM):   end;
1132288   +         end;
MPRINT(EM_DIAGRAM):   end;
1132289   +      end;
MPRINT(EM_DIAGRAM):   end;
1132290   +   end;
MPRINT(EM_DIAGRAM):   end;
1132291   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1132292   +      GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
1132293   +      GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
1132294   +      GRP_MntFishProducts5 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts5 = .;
1132295   +      GRP_MntFishProducts6 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts6 = .;
1132296   +      GRP_MntFishProducts7 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts7 = .;
1132297   +      GRP_MntFishProducts8 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts8 = .;
1132298   +      GRP_MntFishProducts9 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts9 = .;
1132299   +      GRP_MntFishProducts10 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts10 = .;
1132300   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1132301   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1132302   +   end;
MPRINT(EM_DIAGRAM):   end;
1132303   +end;
MPRINT(EM_DIAGRAM):   end;
1132304   +
1132305   +*** Generate dummy variables for GRP_MntGoldProds ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntGoldProds ;
1132306   +drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 GRP_MntGoldProds5
1132307   +        GRP_MntGoldProds6 GRP_MntGoldProds7 GRP_MntGoldProds8
1132308   +        GRP_MntGoldProds9 GRP_MntGoldProds10 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4
GRP_MntGoldProds5 GRP_MntGoldProds6 GRP_MntGoldProds7 GRP_MntGoldProds8 GRP_MntGoldProds9
GRP_MntGoldProds10 ;
1132309   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1132310   +GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
1132311   +GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
1132312   +GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
1132313   +GRP_MntGoldProds5 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds5 = 0;
1132314   +GRP_MntGoldProds6 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds6 = 0;
1132315   +GRP_MntGoldProds7 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds7 = 0;
1132316   +GRP_MntGoldProds8 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds8 = 0;
1132317   +GRP_MntGoldProds9 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds9 = 0;
1132318   +GRP_MntGoldProds10 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds10 = 0;
1132319   +if missing( GRP_MntGoldProds ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntGoldProds ) then do;
1132320   +   GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
1132321   +   GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
1132322   +   GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
1132323   +   GRP_MntGoldProds5 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds5 = .;
1132324   +   GRP_MntGoldProds6 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds6 = .;
1132325   +   GRP_MntGoldProds7 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds7 = .;
1132326   +   GRP_MntGoldProds8 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds8 = .;
1132327   +   GRP_MntGoldProds9 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds9 = .;
1132328   +   GRP_MntGoldProds10 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds10 = .;
1132329   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1132330   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1132331   +end;
MPRINT(EM_DIAGRAM):   end;
1132332   +else do;
MPRINT(EM_DIAGRAM):   else do;
1132333   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1132334   +   _dm12 = put( GRP_MntGoldProds , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntGoldProds , BEST12. );
1132335   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1132336   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1132337   +   if _dm12 <= '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '4' then do;
1132338   +      if _dm12 <= '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '2' then do;
1132339   +         if _dm12 <= '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '11' then do;
1132340   +            if _dm12 = '10'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '10' then do;
1132341   +               GRP_MntGoldProds10 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds10 = 1;
1132342   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1132343   +            end;
MPRINT(EM_DIAGRAM):   end;
1132344   +            else do;
MPRINT(EM_DIAGRAM):   else do;
1132345   +               if _dm12 = '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '11' then do;
1132346   +                  GRP_MntGoldProds2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = -1;
1132347   +                  GRP_MntGoldProds3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = -1;
1132348   +                  GRP_MntGoldProds4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = -1;
1132349   +                  GRP_MntGoldProds5 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds5 = -1;
1132350   +                  GRP_MntGoldProds6 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds6 = -1;
1132351   +                  GRP_MntGoldProds7 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds7 = -1;
1132352   +                  GRP_MntGoldProds8 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds8 = -1;
1132353   +                  GRP_MntGoldProds9 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds9 = -1;
1132354   +                  GRP_MntGoldProds10 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds10 = -1;
1132355   +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1132356   +               end;
MPRINT(EM_DIAGRAM):   end;
1132357   +            end;
MPRINT(EM_DIAGRAM):   end;
1132358   +         end;
MPRINT(EM_DIAGRAM):   end;
1132359   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1132360   +            if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
1132361   +               GRP_MntGoldProds2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 1;
1132362   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1132363   +            end;
MPRINT(EM_DIAGRAM):   end;
1132364   +         end;
MPRINT(EM_DIAGRAM):   end;
1132365   +      end;
MPRINT(EM_DIAGRAM):   end;
1132366   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1132367   +         if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1132368   +            GRP_MntGoldProds3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 1;
1132369   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1132370   +         end;
MPRINT(EM_DIAGRAM):   end;
1132371   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1132372   +            if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
1132373   +               GRP_MntGoldProds4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 1;
1132374   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1132375   +            end;
MPRINT(EM_DIAGRAM):   end;
1132376   +         end;
MPRINT(EM_DIAGRAM):   end;
1132377   +      end;
MPRINT(EM_DIAGRAM):   end;
1132378   +   end;
MPRINT(EM_DIAGRAM):   end;
1132379   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1132380   +      if _dm12 <= '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '7' then do;
1132381   +         if _dm12 <= '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '6' then do;
1132382   +            if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1132383   +               GRP_MntGoldProds5 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds5 = 1;
1132384   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1132385   +            end;
MPRINT(EM_DIAGRAM):   end;
1132386   +            else do;
MPRINT(EM_DIAGRAM):   else do;
1132387   +               if _dm12 = '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '6' then do;
1132388   +                  GRP_MntGoldProds6 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds6 = 1;
1132389   +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1132390   +               end;
MPRINT(EM_DIAGRAM):   end;
1132391   +            end;
MPRINT(EM_DIAGRAM):   end;
1132392   +         end;
MPRINT(EM_DIAGRAM):   end;
1132393   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1132394   +            if _dm12 = '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '7' then do;
1132395   +               GRP_MntGoldProds7 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds7 = 1;
1132396   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1132397   +            end;
MPRINT(EM_DIAGRAM):   end;
1132398   +         end;
MPRINT(EM_DIAGRAM):   end;
1132399   +      end;
MPRINT(EM_DIAGRAM):   end;
1132400   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1132401   +         if _dm12 = '8'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '8' then do;
1132402   +            GRP_MntGoldProds8 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds8 = 1;
1132403   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1132404   +         end;
MPRINT(EM_DIAGRAM):   end;
1132405   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1132406   +            if _dm12 = '9'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '9' then do;
1132407   +               GRP_MntGoldProds9 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds9 = 1;
1132408   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1132409   +            end;
MPRINT(EM_DIAGRAM):   end;
1132410   +         end;
MPRINT(EM_DIAGRAM):   end;
1132411   +      end;
MPRINT(EM_DIAGRAM):   end;
1132412   +   end;
MPRINT(EM_DIAGRAM):   end;
1132413   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1132414   +      GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
1132415   +      GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
1132416   +      GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
1132417   +      GRP_MntGoldProds5 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds5 = .;
1132418   +      GRP_MntGoldProds6 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds6 = .;
1132419   +      GRP_MntGoldProds7 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds7 = .;
1132420   +      GRP_MntGoldProds8 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds8 = .;
1132421   +      GRP_MntGoldProds9 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds9 = .;
1132422   +      GRP_MntGoldProds10 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds10 = .;
1132423   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1132424   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1132425   +   end;
MPRINT(EM_DIAGRAM):   end;
1132426   +end;
MPRINT(EM_DIAGRAM):   end;
1132427   +
1132428   +*** Generate dummy variables for GRP_MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntMeatProducts ;
1132429   +drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4
1132430   +        GRP_MntMeatProducts5 GRP_MntMeatProducts6 GRP_MntMeatProducts7
1132431   +        GRP_MntMeatProducts8 GRP_MntMeatProducts9 GRP_MntMeatProducts10 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4
GRP_MntMeatProducts5 GRP_MntMeatProducts6 GRP_MntMeatProducts7 GRP_MntMeatProducts8
GRP_MntMeatProducts9 GRP_MntMeatProducts10 ;
1132432   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1132433   +GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
1132434   +GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
1132435   +GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
1132436   +GRP_MntMeatProducts5 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts5 = 0;
1132437   +GRP_MntMeatProducts6 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts6 = 0;
1132438   +GRP_MntMeatProducts7 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts7 = 0;
1132439   +GRP_MntMeatProducts8 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts8 = 0;
1132440   +GRP_MntMeatProducts9 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts9 = 0;
1132441   +GRP_MntMeatProducts10 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts10 = 0;
1132442   +if missing( GRP_MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntMeatProducts ) then do;
1132443   +   GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
1132444   +   GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
1132445   +   GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
1132446   +   GRP_MntMeatProducts5 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts5 = .;
1132447   +   GRP_MntMeatProducts6 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts6 = .;
1132448   +   GRP_MntMeatProducts7 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts7 = .;
1132449   +   GRP_MntMeatProducts8 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts8 = .;
1132450   +   GRP_MntMeatProducts9 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts9 = .;
1132451   +   GRP_MntMeatProducts10 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts10 = .;
1132452   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1132453   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1132454   +end;
MPRINT(EM_DIAGRAM):   end;
1132455   +else do;
MPRINT(EM_DIAGRAM):   else do;
1132456   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1132457   +   _dm12 = put( GRP_MntMeatProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntMeatProducts , BEST12. );
1132458   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1132459   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1132460   +   if _dm12 <= '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '4' then do;
1132461   +      if _dm12 <= '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '2' then do;
1132462   +         if _dm12 <= '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '11' then do;
1132463   +            if _dm12 = '10'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '10' then do;
1132464   +               GRP_MntMeatProducts10 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts10 = 1;
1132465   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1132466   +            end;
MPRINT(EM_DIAGRAM):   end;
1132467   +            else do;
MPRINT(EM_DIAGRAM):   else do;
1132468   +               if _dm12 = '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '11' then do;
1132469   +                  GRP_MntMeatProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = -1;
1132470   +                  GRP_MntMeatProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = -1;
1132471   +                  GRP_MntMeatProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = -1;
1132472   +                  GRP_MntMeatProducts5 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts5 = -1;
1132473   +                  GRP_MntMeatProducts6 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts6 = -1;
1132474   +                  GRP_MntMeatProducts7 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts7 = -1;
1132475   +                  GRP_MntMeatProducts8 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts8 = -1;
1132476   +                  GRP_MntMeatProducts9 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts9 = -1;
1132477   +                  GRP_MntMeatProducts10 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts10 = -1;
1132478   +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1132479   +               end;
MPRINT(EM_DIAGRAM):   end;
1132480   +            end;
MPRINT(EM_DIAGRAM):   end;
1132481   +         end;
MPRINT(EM_DIAGRAM):   end;
1132482   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1132483   +            if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
1132484   +               GRP_MntMeatProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 1;
1132485   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1132486   +            end;
MPRINT(EM_DIAGRAM):   end;
1132487   +         end;
MPRINT(EM_DIAGRAM):   end;
1132488   +      end;
MPRINT(EM_DIAGRAM):   end;
1132489   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1132490   +         if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1132491   +            GRP_MntMeatProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 1;
1132492   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1132493   +         end;
MPRINT(EM_DIAGRAM):   end;
1132494   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1132495   +            if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
1132496   +               GRP_MntMeatProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 1;
1132497   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1132498   +            end;
MPRINT(EM_DIAGRAM):   end;
1132499   +         end;
MPRINT(EM_DIAGRAM):   end;
1132500   +      end;
MPRINT(EM_DIAGRAM):   end;
1132501   +   end;
MPRINT(EM_DIAGRAM):   end;
1132502   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1132503   +      if _dm12 <= '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '7' then do;
1132504   +         if _dm12 <= '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '6' then do;
1132505   +            if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1132506   +               GRP_MntMeatProducts5 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts5 = 1;
1132507   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1132508   +            end;
MPRINT(EM_DIAGRAM):   end;
1132509   +            else do;
MPRINT(EM_DIAGRAM):   else do;
1132510   +               if _dm12 = '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '6' then do;
1132511   +                  GRP_MntMeatProducts6 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts6 = 1;
1132512   +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1132513   +               end;
MPRINT(EM_DIAGRAM):   end;
1132514   +            end;
MPRINT(EM_DIAGRAM):   end;
1132515   +         end;
MPRINT(EM_DIAGRAM):   end;
1132516   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1132517   +            if _dm12 = '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '7' then do;
1132518   +               GRP_MntMeatProducts7 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts7 = 1;
1132519   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1132520   +            end;
MPRINT(EM_DIAGRAM):   end;
1132521   +         end;
MPRINT(EM_DIAGRAM):   end;
1132522   +      end;
MPRINT(EM_DIAGRAM):   end;
1132523   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1132524   +         if _dm12 = '8'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '8' then do;
1132525   +            GRP_MntMeatProducts8 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts8 = 1;
1132526   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1132527   +         end;
MPRINT(EM_DIAGRAM):   end;
1132528   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1132529   +            if _dm12 = '9'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '9' then do;
1132530   +               GRP_MntMeatProducts9 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts9 = 1;
1132531   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1132532   +            end;
MPRINT(EM_DIAGRAM):   end;
1132533   +         end;
MPRINT(EM_DIAGRAM):   end;
1132534   +      end;
MPRINT(EM_DIAGRAM):   end;
1132535   +   end;
MPRINT(EM_DIAGRAM):   end;
1132536   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1132537   +      GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
1132538   +      GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
1132539   +      GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
1132540   +      GRP_MntMeatProducts5 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts5 = .;
1132541   +      GRP_MntMeatProducts6 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts6 = .;
1132542   +      GRP_MntMeatProducts7 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts7 = .;
1132543   +      GRP_MntMeatProducts8 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts8 = .;
1132544   +      GRP_MntMeatProducts9 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts9 = .;
1132545   +      GRP_MntMeatProducts10 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts10 = .;
1132546   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1132547   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1132548   +   end;
MPRINT(EM_DIAGRAM):   end;
1132549   +end;
MPRINT(EM_DIAGRAM):   end;
1132550   +
1132551   +*** Generate dummy variables for GRP_MntSweetProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntSweetProducts ;
1132552   +drop GRP_MntSweetProducts3 GRP_MntSweetProducts4 GRP_MntSweetProducts5
1132553   +        GRP_MntSweetProducts6 GRP_MntSweetProducts7 GRP_MntSweetProducts8
1132554   +        GRP_MntSweetProducts9 GRP_MntSweetProducts10 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntSweetProducts3 GRP_MntSweetProducts4 GRP_MntSweetProducts5
GRP_MntSweetProducts6 GRP_MntSweetProducts7 GRP_MntSweetProducts8 GRP_MntSweetProducts9
GRP_MntSweetProducts10 ;
1132555   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1132556   +GRP_MntSweetProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts3 = 0;
1132557   +GRP_MntSweetProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts4 = 0;
1132558   +GRP_MntSweetProducts5 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts5 = 0;
1132559   +GRP_MntSweetProducts6 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts6 = 0;
1132560   +GRP_MntSweetProducts7 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts7 = 0;
1132561   +GRP_MntSweetProducts8 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts8 = 0;
1132562   +GRP_MntSweetProducts9 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts9 = 0;
1132563   +GRP_MntSweetProducts10 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts10 = 0;
1132564   +if missing( GRP_MntSweetProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntSweetProducts ) then do;
1132565   +   GRP_MntSweetProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts3 = .;
1132566   +   GRP_MntSweetProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts4 = .;
1132567   +   GRP_MntSweetProducts5 = .;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts5 = .;
1132568   +   GRP_MntSweetProducts6 = .;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts6 = .;
1132569   +   GRP_MntSweetProducts7 = .;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts7 = .;
1132570   +   GRP_MntSweetProducts8 = .;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts8 = .;
1132571   +   GRP_MntSweetProducts9 = .;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts9 = .;
1132572   +   GRP_MntSweetProducts10 = .;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts10 = .;
1132573   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1132574   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1132575   +end;
MPRINT(EM_DIAGRAM):   end;
1132576   +else do;
MPRINT(EM_DIAGRAM):   else do;
1132577   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1132578   +   _dm12 = put( GRP_MntSweetProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntSweetProducts , BEST12. );
1132579   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1132580   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1132581   +   if _dm12 <= '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '5' then do;
1132582   +      if _dm12 <= '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '3' then do;
1132583   +         if _dm12 <= '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '11' then do;
1132584   +            if _dm12 = '10'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '10' then do;
1132585   +               GRP_MntSweetProducts10 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts10 = 1;
1132586   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1132587   +            end;
MPRINT(EM_DIAGRAM):   end;
1132588   +            else do;
MPRINT(EM_DIAGRAM):   else do;
1132589   +               if _dm12 = '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '11' then do;
1132590   +                  GRP_MntSweetProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts3 = -1;
1132591   +                  GRP_MntSweetProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts4 = -1;
1132592   +                  GRP_MntSweetProducts5 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts5 = -1;
1132593   +                  GRP_MntSweetProducts6 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts6 = -1;
1132594   +                  GRP_MntSweetProducts7 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts7 = -1;
1132595   +                  GRP_MntSweetProducts8 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts8 = -1;
1132596   +                  GRP_MntSweetProducts9 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts9 = -1;
1132597   +                  GRP_MntSweetProducts10 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts10 = -1;
1132598   +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1132599   +               end;
MPRINT(EM_DIAGRAM):   end;
1132600   +            end;
MPRINT(EM_DIAGRAM):   end;
1132601   +         end;
MPRINT(EM_DIAGRAM):   end;
1132602   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1132603   +            if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1132604   +               GRP_MntSweetProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts3 = 1;
1132605   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1132606   +            end;
MPRINT(EM_DIAGRAM):   end;
1132607   +         end;
MPRINT(EM_DIAGRAM):   end;
1132608   +      end;
MPRINT(EM_DIAGRAM):   end;
1132609   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1132610   +         if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
1132611   +            GRP_MntSweetProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts4 = 1;
1132612   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1132613   +         end;
MPRINT(EM_DIAGRAM):   end;
1132614   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1132615   +            if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1132616   +               GRP_MntSweetProducts5 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts5 = 1;
1132617   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1132618   +            end;
MPRINT(EM_DIAGRAM):   end;
1132619   +         end;
MPRINT(EM_DIAGRAM):   end;
1132620   +      end;
MPRINT(EM_DIAGRAM):   end;
1132621   +   end;
MPRINT(EM_DIAGRAM):   end;
1132622   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1132623   +      if _dm12 <= '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '7' then do;
1132624   +         if _dm12 = '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '6' then do;
1132625   +            GRP_MntSweetProducts6 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts6 = 1;
1132626   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1132627   +         end;
MPRINT(EM_DIAGRAM):   end;
1132628   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1132629   +            if _dm12 = '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '7' then do;
1132630   +               GRP_MntSweetProducts7 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts7 = 1;
1132631   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1132632   +            end;
MPRINT(EM_DIAGRAM):   end;
1132633   +         end;
MPRINT(EM_DIAGRAM):   end;
1132634   +      end;
MPRINT(EM_DIAGRAM):   end;
1132635   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1132636   +         if _dm12 = '8'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '8' then do;
1132637   +            GRP_MntSweetProducts8 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts8 = 1;
1132638   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1132639   +         end;
MPRINT(EM_DIAGRAM):   end;
1132640   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1132641   +            if _dm12 = '9'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '9' then do;
1132642   +               GRP_MntSweetProducts9 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts9 = 1;
1132643   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1132644   +            end;
MPRINT(EM_DIAGRAM):   end;
1132645   +         end;
MPRINT(EM_DIAGRAM):   end;
1132646   +      end;
MPRINT(EM_DIAGRAM):   end;
1132647   +   end;
MPRINT(EM_DIAGRAM):   end;
1132648   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1132649   +      GRP_MntSweetProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts3 = .;
1132650   +      GRP_MntSweetProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts4 = .;
1132651   +      GRP_MntSweetProducts5 = .;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts5 = .;
1132652   +      GRP_MntSweetProducts6 = .;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts6 = .;
1132653   +      GRP_MntSweetProducts7 = .;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts7 = .;
1132654   +      GRP_MntSweetProducts8 = .;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts8 = .;
1132655   +      GRP_MntSweetProducts9 = .;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts9 = .;
1132656   +      GRP_MntSweetProducts10 = .;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts10 = .;
1132657   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1132658   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1132659   +   end;
MPRINT(EM_DIAGRAM):   end;
1132660   +end;
MPRINT(EM_DIAGRAM):   end;
1132661   +
1132662   +*** Generate dummy variables for GRP_MntWines ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntWines ;
1132663   +drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 GRP_MntWines5 GRP_MntWines6
1132664   +        GRP_MntWines7 GRP_MntWines8 GRP_MntWines9 GRP_MntWines10 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 GRP_MntWines5
GRP_MntWines6 GRP_MntWines7 GRP_MntWines8 GRP_MntWines9 GRP_MntWines10 ;
1132665   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1132666   +GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
1132667   +GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
1132668   +GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
1132669   +GRP_MntWines5 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines5 = 0;
1132670   +GRP_MntWines6 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines6 = 0;
1132671   +GRP_MntWines7 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines7 = 0;
1132672   +GRP_MntWines8 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines8 = 0;
1132673   +GRP_MntWines9 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines9 = 0;
1132674   +GRP_MntWines10 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines10 = 0;
1132675   +if missing( GRP_MntWines ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntWines ) then do;
1132676   +   GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
1132677   +   GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
1132678   +   GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
1132679   +   GRP_MntWines5 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines5 = .;
1132680   +   GRP_MntWines6 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines6 = .;
1132681   +   GRP_MntWines7 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines7 = .;
1132682   +   GRP_MntWines8 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines8 = .;
1132683   +   GRP_MntWines9 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines9 = .;
1132684   +   GRP_MntWines10 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines10 = .;
1132685   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1132686   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1132687   +end;
MPRINT(EM_DIAGRAM):   end;
1132688   +else do;
MPRINT(EM_DIAGRAM):   else do;
1132689   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1132690   +   _dm12 = put( GRP_MntWines , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntWines , BEST12. );
1132691   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1132692   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1132693   +   if _dm12 <= '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '4' then do;
1132694   +      if _dm12 <= '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '2' then do;
1132695   +         if _dm12 <= '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '11' then do;
1132696   +            if _dm12 = '10'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '10' then do;
1132697   +               GRP_MntWines10 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines10 = 1;
1132698   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1132699   +            end;
MPRINT(EM_DIAGRAM):   end;
1132700   +            else do;
MPRINT(EM_DIAGRAM):   else do;
1132701   +               if _dm12 = '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '11' then do;
1132702   +                  GRP_MntWines2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = -1;
1132703   +                  GRP_MntWines3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = -1;
1132704   +                  GRP_MntWines4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = -1;
1132705   +                  GRP_MntWines5 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines5 = -1;
1132706   +                  GRP_MntWines6 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines6 = -1;
1132707   +                  GRP_MntWines7 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines7 = -1;
1132708   +                  GRP_MntWines8 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines8 = -1;
1132709   +                  GRP_MntWines9 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines9 = -1;
1132710   +                  GRP_MntWines10 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines10 = -1;
1132711   +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1132712   +               end;
MPRINT(EM_DIAGRAM):   end;
1132713   +            end;
MPRINT(EM_DIAGRAM):   end;
1132714   +         end;
MPRINT(EM_DIAGRAM):   end;
1132715   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1132716   +            if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
1132717   +               GRP_MntWines2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 1;
1132718   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1132719   +            end;
MPRINT(EM_DIAGRAM):   end;
1132720   +         end;
MPRINT(EM_DIAGRAM):   end;
1132721   +      end;
MPRINT(EM_DIAGRAM):   end;
1132722   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1132723   +         if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1132724   +            GRP_MntWines3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 1;
1132725   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1132726   +         end;
MPRINT(EM_DIAGRAM):   end;
1132727   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1132728   +            if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
1132729   +               GRP_MntWines4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 1;
1132730   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1132731   +            end;
MPRINT(EM_DIAGRAM):   end;
1132732   +         end;
MPRINT(EM_DIAGRAM):   end;
1132733   +      end;
MPRINT(EM_DIAGRAM):   end;
1132734   +   end;
MPRINT(EM_DIAGRAM):   end;
1132735   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1132736   +      if _dm12 <= '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '7' then do;
1132737   +         if _dm12 <= '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '6' then do;
1132738   +            if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1132739   +               GRP_MntWines5 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines5 = 1;
1132740   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1132741   +            end;
MPRINT(EM_DIAGRAM):   end;
1132742   +            else do;
MPRINT(EM_DIAGRAM):   else do;
1132743   +               if _dm12 = '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '6' then do;
1132744   +                  GRP_MntWines6 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines6 = 1;
1132745   +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1132746   +               end;
MPRINT(EM_DIAGRAM):   end;
1132747   +            end;
MPRINT(EM_DIAGRAM):   end;
1132748   +         end;
MPRINT(EM_DIAGRAM):   end;
1132749   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1132750   +            if _dm12 = '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '7' then do;
1132751   +               GRP_MntWines7 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines7 = 1;
1132752   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1132753   +            end;
MPRINT(EM_DIAGRAM):   end;
1132754   +         end;
MPRINT(EM_DIAGRAM):   end;
1132755   +      end;
MPRINT(EM_DIAGRAM):   end;
1132756   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1132757   +         if _dm12 = '8'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '8' then do;
1132758   +            GRP_MntWines8 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines8 = 1;
1132759   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1132760   +         end;
MPRINT(EM_DIAGRAM):   end;
1132761   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1132762   +            if _dm12 = '9'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '9' then do;
1132763   +               GRP_MntWines9 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines9 = 1;
1132764   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1132765   +            end;
MPRINT(EM_DIAGRAM):   end;
1132766   +         end;
MPRINT(EM_DIAGRAM):   end;
1132767   +      end;
MPRINT(EM_DIAGRAM):   end;
1132768   +   end;
MPRINT(EM_DIAGRAM):   end;
1132769   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1132770   +      GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
1132771   +      GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
1132772   +      GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
1132773   +      GRP_MntWines5 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines5 = .;
1132774   +      GRP_MntWines6 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines6 = .;
1132775   +      GRP_MntWines7 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines7 = .;
1132776   +      GRP_MntWines8 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines8 = .;
1132777   +      GRP_MntWines9 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines9 = .;
1132778   +      GRP_MntWines10 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines10 = .;
1132779   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1132780   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1132781   +   end;
MPRINT(EM_DIAGRAM):   end;
1132782   +end;
MPRINT(EM_DIAGRAM):   end;
1132783   +
1132784   +*** Generate dummy variables for GRP_NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumCatalogPurchases ;
1132785   +drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4
1132786   +        GRP_NumCatalogPurchases5 GRP_NumCatalogPurchases6
1132787   +        GRP_NumCatalogPurchases7 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4
GRP_NumCatalogPurchases5 GRP_NumCatalogPurchases6 GRP_NumCatalogPurchases7 ;
1132788   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1132789   +GRP_NumCatalogPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 0;
1132790   +GRP_NumCatalogPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 0;
1132791   +GRP_NumCatalogPurchases5 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases5 = 0;
1132792   +GRP_NumCatalogPurchases6 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases6 = 0;
1132793   +GRP_NumCatalogPurchases7 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases7 = 0;
1132794   +if missing( GRP_NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumCatalogPurchases ) then do;
1132795   +   GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
1132796   +   GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
1132797   +   GRP_NumCatalogPurchases5 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases5 = .;
1132798   +   GRP_NumCatalogPurchases6 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases6 = .;
1132799   +   GRP_NumCatalogPurchases7 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases7 = .;
1132800   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1132801   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1132802   +end;
MPRINT(EM_DIAGRAM):   end;
1132803   +else do;
MPRINT(EM_DIAGRAM):   else do;
1132804   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1132805   +   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
1132806   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1132807   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1132808   +   if _dm12 <= '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '5' then do;
1132809   +      if _dm12 <= '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '4' then do;
1132810   +         if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1132811   +            GRP_NumCatalogPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 1;
1132812   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1132813   +         end;
MPRINT(EM_DIAGRAM):   end;
1132814   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1132815   +            if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
1132816   +               GRP_NumCatalogPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 1;
1132817   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1132818   +            end;
MPRINT(EM_DIAGRAM):   end;
1132819   +         end;
MPRINT(EM_DIAGRAM):   end;
1132820   +      end;
MPRINT(EM_DIAGRAM):   end;
1132821   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1132822   +         if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1132823   +            GRP_NumCatalogPurchases5 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases5 = 1;
1132824   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1132825   +         end;
MPRINT(EM_DIAGRAM):   end;
1132826   +      end;
MPRINT(EM_DIAGRAM):   end;
1132827   +   end;
MPRINT(EM_DIAGRAM):   end;
1132828   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1132829   +      if _dm12 <= '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '7' then do;
1132830   +         if _dm12 = '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '6' then do;
1132831   +            GRP_NumCatalogPurchases6 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases6 = 1;
1132832   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1132833   +         end;
MPRINT(EM_DIAGRAM):   end;
1132834   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1132835   +            if _dm12 = '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '7' then do;
1132836   +               GRP_NumCatalogPurchases7 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases7 = 1;
1132837   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1132838   +            end;
MPRINT(EM_DIAGRAM):   end;
1132839   +         end;
MPRINT(EM_DIAGRAM):   end;
1132840   +      end;
MPRINT(EM_DIAGRAM):   end;
1132841   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1132842   +         if _dm12 = '8'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '8' then do;
1132843   +            GRP_NumCatalogPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = -1;
1132844   +            GRP_NumCatalogPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = -1;
1132845   +            GRP_NumCatalogPurchases5 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases5 = -1;
1132846   +            GRP_NumCatalogPurchases6 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases6 = -1;
1132847   +            GRP_NumCatalogPurchases7 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases7 = -1;
1132848   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1132849   +         end;
MPRINT(EM_DIAGRAM):   end;
1132850   +      end;
MPRINT(EM_DIAGRAM):   end;
1132851   +   end;
MPRINT(EM_DIAGRAM):   end;
1132852   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1132853   +      GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
1132854   +      GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
1132855   +      GRP_NumCatalogPurchases5 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases5 = .;
1132856   +      GRP_NumCatalogPurchases6 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases6 = .;
1132857   +      GRP_NumCatalogPurchases7 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases7 = .;
1132858   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1132859   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1132860   +   end;
MPRINT(EM_DIAGRAM):   end;
1132861   +end;
MPRINT(EM_DIAGRAM):   end;
1132862   +
1132863   +*** Generate dummy variables for GRP_NumDistPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumDistPurchases ;
1132864   +drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4
1132865   +        GRP_NumDistPurchases5 GRP_NumDistPurchases6 GRP_NumDistPurchases7
1132866   +        GRP_NumDistPurchases8 GRP_NumDistPurchases9 GRP_NumDistPurchases10 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4
GRP_NumDistPurchases5 GRP_NumDistPurchases6 GRP_NumDistPurchases7 GRP_NumDistPurchases8
GRP_NumDistPurchases9 GRP_NumDistPurchases10 ;
1132867   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1132868   +GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
1132869   +GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
1132870   +GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
1132871   +GRP_NumDistPurchases5 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases5 = 0;
1132872   +GRP_NumDistPurchases6 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases6 = 0;
1132873   +GRP_NumDistPurchases7 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases7 = 0;
1132874   +GRP_NumDistPurchases8 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases8 = 0;
1132875   +GRP_NumDistPurchases9 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases9 = 0;
1132876   +GRP_NumDistPurchases10 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases10 = 0;
1132877   +if missing( GRP_NumDistPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumDistPurchases ) then do;
1132878   +   GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
1132879   +   GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
1132880   +   GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
1132881   +   GRP_NumDistPurchases5 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases5 = .;
1132882   +   GRP_NumDistPurchases6 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases6 = .;
1132883   +   GRP_NumDistPurchases7 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases7 = .;
1132884   +   GRP_NumDistPurchases8 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases8 = .;
1132885   +   GRP_NumDistPurchases9 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases9 = .;
1132886   +   GRP_NumDistPurchases10 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases10 = .;
1132887   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1132888   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1132889   +end;
MPRINT(EM_DIAGRAM):   end;
1132890   +else do;
MPRINT(EM_DIAGRAM):   else do;
1132891   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1132892   +   _dm12 = put( GRP_NumDistPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumDistPurchases , BEST12. );
1132893   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1132894   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1132895   +   if _dm12 <= '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '4' then do;
1132896   +      if _dm12 <= '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '2' then do;
1132897   +         if _dm12 <= '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '11' then do;
1132898   +            if _dm12 = '10'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '10' then do;
1132899   +               GRP_NumDistPurchases10 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases10 = 1;
1132900   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1132901   +            end;
MPRINT(EM_DIAGRAM):   end;
1132902   +            else do;
MPRINT(EM_DIAGRAM):   else do;
1132903   +               if _dm12 = '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '11' then do;
1132904   +                  GRP_NumDistPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = -1;
1132905   +                  GRP_NumDistPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = -1;
1132906   +                  GRP_NumDistPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = -1;
1132907   +                  GRP_NumDistPurchases5 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases5 = -1;
1132908   +                  GRP_NumDistPurchases6 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases6 = -1;
1132909   +                  GRP_NumDistPurchases7 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases7 = -1;
1132910   +                  GRP_NumDistPurchases8 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases8 = -1;
1132911   +                  GRP_NumDistPurchases9 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases9 = -1;
1132912   +                  GRP_NumDistPurchases10 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases10 = -1;
1132913   +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1132914   +               end;
MPRINT(EM_DIAGRAM):   end;
1132915   +            end;
MPRINT(EM_DIAGRAM):   end;
1132916   +         end;
MPRINT(EM_DIAGRAM):   end;
1132917   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1132918   +            if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
1132919   +               GRP_NumDistPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 1;
1132920   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1132921   +            end;
MPRINT(EM_DIAGRAM):   end;
1132922   +         end;
MPRINT(EM_DIAGRAM):   end;
1132923   +      end;
MPRINT(EM_DIAGRAM):   end;
1132924   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1132925   +         if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1132926   +            GRP_NumDistPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 1;
1132927   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1132928   +         end;
MPRINT(EM_DIAGRAM):   end;
1132929   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1132930   +            if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
1132931   +               GRP_NumDistPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 1;
1132932   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1132933   +            end;
MPRINT(EM_DIAGRAM):   end;
1132934   +         end;
MPRINT(EM_DIAGRAM):   end;
1132935   +      end;
MPRINT(EM_DIAGRAM):   end;
1132936   +   end;
MPRINT(EM_DIAGRAM):   end;
1132937   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1132938   +      if _dm12 <= '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '7' then do;
1132939   +         if _dm12 <= '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '6' then do;
1132940   +            if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1132941   +               GRP_NumDistPurchases5 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases5 = 1;
1132942   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1132943   +            end;
MPRINT(EM_DIAGRAM):   end;
1132944   +            else do;
MPRINT(EM_DIAGRAM):   else do;
1132945   +               if _dm12 = '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '6' then do;
1132946   +                  GRP_NumDistPurchases6 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases6 = 1;
1132947   +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1132948   +               end;
MPRINT(EM_DIAGRAM):   end;
1132949   +            end;
MPRINT(EM_DIAGRAM):   end;
1132950   +         end;
MPRINT(EM_DIAGRAM):   end;
1132951   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1132952   +            if _dm12 = '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '7' then do;
1132953   +               GRP_NumDistPurchases7 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases7 = 1;
1132954   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1132955   +            end;
MPRINT(EM_DIAGRAM):   end;
1132956   +         end;
MPRINT(EM_DIAGRAM):   end;
1132957   +      end;
MPRINT(EM_DIAGRAM):   end;
1132958   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1132959   +         if _dm12 = '8'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '8' then do;
1132960   +            GRP_NumDistPurchases8 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases8 = 1;
1132961   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1132962   +         end;
MPRINT(EM_DIAGRAM):   end;
1132963   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1132964   +            if _dm12 = '9'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '9' then do;
1132965   +               GRP_NumDistPurchases9 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases9 = 1;
1132966   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1132967   +            end;
MPRINT(EM_DIAGRAM):   end;
1132968   +         end;
MPRINT(EM_DIAGRAM):   end;
1132969   +      end;
MPRINT(EM_DIAGRAM):   end;
1132970   +   end;
MPRINT(EM_DIAGRAM):   end;
1132971   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1132972   +      GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
1132973   +      GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
1132974   +      GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
1132975   +      GRP_NumDistPurchases5 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases5 = .;
1132976   +      GRP_NumDistPurchases6 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases6 = .;
1132977   +      GRP_NumDistPurchases7 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases7 = .;
1132978   +      GRP_NumDistPurchases8 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases8 = .;
1132979   +      GRP_NumDistPurchases9 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases9 = .;
1132980   +      GRP_NumDistPurchases10 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases10 = .;
1132981   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1132982   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1132983   +   end;
MPRINT(EM_DIAGRAM):   end;
1132984   +end;
MPRINT(EM_DIAGRAM):   end;
1132985   +
1132986   +*** Generate dummy variables for GRP_NumWebPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumWebPurchases ;
1132987   +drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4
1132988   +        GRP_NumWebPurchases5 GRP_NumWebPurchases6 GRP_NumWebPurchases7
1132989   +        GRP_NumWebPurchases8 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4
GRP_NumWebPurchases5 GRP_NumWebPurchases6 GRP_NumWebPurchases7 GRP_NumWebPurchases8 ;
1132990   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1132991   +GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
1132992   +GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
1132993   +GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
1132994   +GRP_NumWebPurchases5 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases5 = 0;
1132995   +GRP_NumWebPurchases6 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases6 = 0;
1132996   +GRP_NumWebPurchases7 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases7 = 0;
1132997   +GRP_NumWebPurchases8 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases8 = 0;
1132998   +if missing( GRP_NumWebPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumWebPurchases ) then do;
1132999   +   GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
1133000   +   GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
1133001   +   GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
1133002   +   GRP_NumWebPurchases5 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases5 = .;
1133003   +   GRP_NumWebPurchases6 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases6 = .;
1133004   +   GRP_NumWebPurchases7 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases7 = .;
1133005   +   GRP_NumWebPurchases8 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases8 = .;
1133006   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1133007   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1133008   +end;
MPRINT(EM_DIAGRAM):   end;
1133009   +else do;
MPRINT(EM_DIAGRAM):   else do;
1133010   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1133011   +   _dm12 = put( GRP_NumWebPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumWebPurchases , BEST12. );
1133012   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1133013   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1133014   +   if _dm12 <= '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '5' then do;
1133015   +      if _dm12 <= '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '3' then do;
1133016   +         if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
1133017   +            GRP_NumWebPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 1;
1133018   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1133019   +         end;
MPRINT(EM_DIAGRAM):   end;
1133020   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1133021   +            if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1133022   +               GRP_NumWebPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 1;
1133023   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1133024   +            end;
MPRINT(EM_DIAGRAM):   end;
1133025   +         end;
MPRINT(EM_DIAGRAM):   end;
1133026   +      end;
MPRINT(EM_DIAGRAM):   end;
1133027   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1133028   +         if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
1133029   +            GRP_NumWebPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 1;
1133030   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1133031   +         end;
MPRINT(EM_DIAGRAM):   end;
1133032   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1133033   +            if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1133034   +               GRP_NumWebPurchases5 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases5 = 1;
1133035   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1133036   +            end;
MPRINT(EM_DIAGRAM):   end;
1133037   +         end;
MPRINT(EM_DIAGRAM):   end;
1133038   +      end;
MPRINT(EM_DIAGRAM):   end;
1133039   +   end;
MPRINT(EM_DIAGRAM):   end;
1133040   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1133041   +      if _dm12 <= '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '7' then do;
1133042   +         if _dm12 = '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '6' then do;
1133043   +            GRP_NumWebPurchases6 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases6 = 1;
1133044   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1133045   +         end;
MPRINT(EM_DIAGRAM):   end;
1133046   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1133047   +            if _dm12 = '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '7' then do;
1133048   +               GRP_NumWebPurchases7 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases7 = 1;
1133049   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1133050   +            end;
MPRINT(EM_DIAGRAM):   end;
1133051   +         end;
MPRINT(EM_DIAGRAM):   end;
1133052   +      end;
MPRINT(EM_DIAGRAM):   end;
1133053   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1133054   +         if _dm12 = '8'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '8' then do;
1133055   +            GRP_NumWebPurchases8 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases8 = 1;
1133056   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1133057   +         end;
MPRINT(EM_DIAGRAM):   end;
1133058   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1133059   +            if _dm12 = '9'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '9' then do;
1133060   +               GRP_NumWebPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = -1;
1133061   +               GRP_NumWebPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = -1;
1133062   +               GRP_NumWebPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = -1;
1133063   +               GRP_NumWebPurchases5 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases5 = -1;
1133064   +               GRP_NumWebPurchases6 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases6 = -1;
1133065   +               GRP_NumWebPurchases7 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases7 = -1;
1133066   +               GRP_NumWebPurchases8 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases8 = -1;
1133067   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1133068   +            end;
MPRINT(EM_DIAGRAM):   end;
1133069   +         end;
MPRINT(EM_DIAGRAM):   end;
1133070   +      end;
MPRINT(EM_DIAGRAM):   end;
1133071   +   end;
MPRINT(EM_DIAGRAM):   end;
1133072   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1133073   +      GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
1133074   +      GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
1133075   +      GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
1133076   +      GRP_NumWebPurchases5 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases5 = .;
1133077   +      GRP_NumWebPurchases6 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases6 = .;
1133078   +      GRP_NumWebPurchases7 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases7 = .;
1133079   +      GRP_NumWebPurchases8 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases8 = .;
1133080   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1133081   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1133082   +   end;
MPRINT(EM_DIAGRAM):   end;
1133083   +end;
MPRINT(EM_DIAGRAM):   end;
1133084   +
1133085   +*** Generate dummy variables for GRP_NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumWebVisitsMonth ;
1133086   +drop GRP_NumWebVisitsMonth2 GRP_NumWebVisitsMonth3 GRP_NumWebVisitsMonth4
1133087   +        GRP_NumWebVisitsMonth5 GRP_NumWebVisitsMonth6 GRP_NumWebVisitsMonth7
1133088   +        GRP_NumWebVisitsMonth8 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumWebVisitsMonth2 GRP_NumWebVisitsMonth3
GRP_NumWebVisitsMonth4 GRP_NumWebVisitsMonth5 GRP_NumWebVisitsMonth6 GRP_NumWebVisitsMonth7
GRP_NumWebVisitsMonth8 ;
1133089   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1133090   +GRP_NumWebVisitsMonth2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth2 = 0;
1133091   +GRP_NumWebVisitsMonth3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth3 = 0;
1133092   +GRP_NumWebVisitsMonth4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth4 = 0;
1133093   +GRP_NumWebVisitsMonth5 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth5 = 0;
1133094   +GRP_NumWebVisitsMonth6 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth6 = 0;
1133095   +GRP_NumWebVisitsMonth7 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth7 = 0;
1133096   +GRP_NumWebVisitsMonth8 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth8 = 0;
1133097   +if missing( GRP_NumWebVisitsMonth ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumWebVisitsMonth ) then do;
1133098   +   GRP_NumWebVisitsMonth2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth2 = .;
1133099   +   GRP_NumWebVisitsMonth3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth3 = .;
1133100   +   GRP_NumWebVisitsMonth4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth4 = .;
1133101   +   GRP_NumWebVisitsMonth5 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth5 = .;
1133102   +   GRP_NumWebVisitsMonth6 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth6 = .;
1133103   +   GRP_NumWebVisitsMonth7 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth7 = .;
1133104   +   GRP_NumWebVisitsMonth8 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth8 = .;
1133105   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1133106   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1133107   +end;
MPRINT(EM_DIAGRAM):   end;
1133108   +else do;
MPRINT(EM_DIAGRAM):   else do;
1133109   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1133110   +   _dm12 = put( GRP_NumWebVisitsMonth , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumWebVisitsMonth , BEST12. );
1133111   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1133112   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1133113   +   if _dm12 <= '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '5' then do;
1133114   +      if _dm12 <= '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '3' then do;
1133115   +         if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
1133116   +            GRP_NumWebVisitsMonth2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth2 = 1;
1133117   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1133118   +         end;
MPRINT(EM_DIAGRAM):   end;
1133119   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1133120   +            if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1133121   +               GRP_NumWebVisitsMonth3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth3 = 1;
1133122   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1133123   +            end;
MPRINT(EM_DIAGRAM):   end;
1133124   +         end;
MPRINT(EM_DIAGRAM):   end;
1133125   +      end;
MPRINT(EM_DIAGRAM):   end;
1133126   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1133127   +         if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
1133128   +            GRP_NumWebVisitsMonth4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth4 = 1;
1133129   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1133130   +         end;
MPRINT(EM_DIAGRAM):   end;
1133131   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1133132   +            if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1133133   +               GRP_NumWebVisitsMonth5 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth5 = 1;
1133134   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1133135   +            end;
MPRINT(EM_DIAGRAM):   end;
1133136   +         end;
MPRINT(EM_DIAGRAM):   end;
1133137   +      end;
MPRINT(EM_DIAGRAM):   end;
1133138   +   end;
MPRINT(EM_DIAGRAM):   end;
1133139   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1133140   +      if _dm12 <= '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '7' then do;
1133141   +         if _dm12 = '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '6' then do;
1133142   +            GRP_NumWebVisitsMonth6 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth6 = 1;
1133143   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1133144   +         end;
MPRINT(EM_DIAGRAM):   end;
1133145   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1133146   +            if _dm12 = '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '7' then do;
1133147   +               GRP_NumWebVisitsMonth7 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth7 = 1;
1133148   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1133149   +            end;
MPRINT(EM_DIAGRAM):   end;
1133150   +         end;
MPRINT(EM_DIAGRAM):   end;
1133151   +      end;
MPRINT(EM_DIAGRAM):   end;
1133152   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1133153   +         if _dm12 = '8'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '8' then do;
1133154   +            GRP_NumWebVisitsMonth8 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth8 = 1;
1133155   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1133156   +         end;
MPRINT(EM_DIAGRAM):   end;
1133157   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1133158   +            if _dm12 = '9'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '9' then do;
1133159   +               GRP_NumWebVisitsMonth2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth2 = -1;
1133160   +               GRP_NumWebVisitsMonth3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth3 = -1;
1133161   +               GRP_NumWebVisitsMonth4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth4 = -1;
1133162   +               GRP_NumWebVisitsMonth5 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth5 = -1;
1133163   +               GRP_NumWebVisitsMonth6 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth6 = -1;
1133164   +               GRP_NumWebVisitsMonth7 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth7 = -1;
1133165   +               GRP_NumWebVisitsMonth8 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth8 = -1;
1133166   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1133167   +            end;
MPRINT(EM_DIAGRAM):   end;
1133168   +         end;
MPRINT(EM_DIAGRAM):   end;
1133169   +      end;
MPRINT(EM_DIAGRAM):   end;
1133170   +   end;
MPRINT(EM_DIAGRAM):   end;
1133171   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1133172   +      GRP_NumWebVisitsMonth2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth2 = .;
1133173   +      GRP_NumWebVisitsMonth3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth3 = .;
1133174   +      GRP_NumWebVisitsMonth4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth4 = .;
1133175   +      GRP_NumWebVisitsMonth5 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth5 = .;
1133176   +      GRP_NumWebVisitsMonth6 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth6 = .;
1133177   +      GRP_NumWebVisitsMonth7 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth7 = .;
1133178   +      GRP_NumWebVisitsMonth8 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth8 = .;
1133179   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1133180   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1133181   +   end;
MPRINT(EM_DIAGRAM):   end;
1133182   +end;
MPRINT(EM_DIAGRAM):   end;
1133183   +
1133184   +*** Generate dummy variables for GRP_RFMstat ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RFMstat ;
1133185   +drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 GRP_RFMstat5 GRP_RFMstat6
1133186   +        GRP_RFMstat7 GRP_RFMstat8 GRP_RFMstat9 GRP_RFMstat10 ;
MPRINT(EM_DIAGRAM):   drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 GRP_RFMstat5 GRP_RFMstat6
GRP_RFMstat7 GRP_RFMstat8 GRP_RFMstat9 GRP_RFMstat10 ;
1133187   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1133188   +GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
1133189   +GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
1133190   +GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
1133191   +GRP_RFMstat5 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat5 = 0;
1133192   +GRP_RFMstat6 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat6 = 0;
1133193   +GRP_RFMstat7 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat7 = 0;
1133194   +GRP_RFMstat8 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat8 = 0;
1133195   +GRP_RFMstat9 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat9 = 0;
1133196   +GRP_RFMstat10 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat10 = 0;
1133197   +if missing( GRP_RFMstat ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RFMstat ) then do;
1133198   +   GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
1133199   +   GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
1133200   +   GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
1133201   +   GRP_RFMstat5 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat5 = .;
1133202   +   GRP_RFMstat6 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat6 = .;
1133203   +   GRP_RFMstat7 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat7 = .;
1133204   +   GRP_RFMstat8 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat8 = .;
1133205   +   GRP_RFMstat9 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat9 = .;
1133206   +   GRP_RFMstat10 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat10 = .;
1133207   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1133208   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1133209   +end;
MPRINT(EM_DIAGRAM):   end;
1133210   +else do;
MPRINT(EM_DIAGRAM):   else do;
1133211   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1133212   +   _dm12 = put( GRP_RFMstat , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RFMstat , BEST12. );
1133213   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1133214   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1133215   +   if _dm12 <= '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '4' then do;
1133216   +      if _dm12 <= '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '2' then do;
1133217   +         if _dm12 <= '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '11' then do;
1133218   +            if _dm12 = '10'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '10' then do;
1133219   +               GRP_RFMstat10 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat10 = 1;
1133220   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1133221   +            end;
MPRINT(EM_DIAGRAM):   end;
1133222   +            else do;
MPRINT(EM_DIAGRAM):   else do;
1133223   +               if _dm12 = '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '11' then do;
1133224   +                  GRP_RFMstat2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = -1;
1133225   +                  GRP_RFMstat3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = -1;
1133226   +                  GRP_RFMstat4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = -1;
1133227   +                  GRP_RFMstat5 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat5 = -1;
1133228   +                  GRP_RFMstat6 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat6 = -1;
1133229   +                  GRP_RFMstat7 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat7 = -1;
1133230   +                  GRP_RFMstat8 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat8 = -1;
1133231   +                  GRP_RFMstat9 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat9 = -1;
1133232   +                  GRP_RFMstat10 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat10 = -1;
1133233   +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1133234   +               end;
MPRINT(EM_DIAGRAM):   end;
1133235   +            end;
MPRINT(EM_DIAGRAM):   end;
1133236   +         end;
MPRINT(EM_DIAGRAM):   end;
1133237   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1133238   +            if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
1133239   +               GRP_RFMstat2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 1;
1133240   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1133241   +            end;
MPRINT(EM_DIAGRAM):   end;
1133242   +         end;
MPRINT(EM_DIAGRAM):   end;
1133243   +      end;
MPRINT(EM_DIAGRAM):   end;
1133244   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1133245   +         if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1133246   +            GRP_RFMstat3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 1;
1133247   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1133248   +         end;
MPRINT(EM_DIAGRAM):   end;
1133249   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1133250   +            if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
1133251   +               GRP_RFMstat4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 1;
1133252   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1133253   +            end;
MPRINT(EM_DIAGRAM):   end;
1133254   +         end;
MPRINT(EM_DIAGRAM):   end;
1133255   +      end;
MPRINT(EM_DIAGRAM):   end;
1133256   +   end;
MPRINT(EM_DIAGRAM):   end;
1133257   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1133258   +      if _dm12 <= '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '7' then do;
1133259   +         if _dm12 <= '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '6' then do;
1133260   +            if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1133261   +               GRP_RFMstat5 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat5 = 1;
1133262   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1133263   +            end;
MPRINT(EM_DIAGRAM):   end;
1133264   +            else do;
MPRINT(EM_DIAGRAM):   else do;
1133265   +               if _dm12 = '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '6' then do;
1133266   +                  GRP_RFMstat6 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat6 = 1;
1133267   +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1133268   +               end;
MPRINT(EM_DIAGRAM):   end;
1133269   +            end;
MPRINT(EM_DIAGRAM):   end;
1133270   +         end;
MPRINT(EM_DIAGRAM):   end;
1133271   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1133272   +            if _dm12 = '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '7' then do;
1133273   +               GRP_RFMstat7 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat7 = 1;
1133274   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1133275   +            end;
MPRINT(EM_DIAGRAM):   end;
1133276   +         end;
MPRINT(EM_DIAGRAM):   end;
1133277   +      end;
MPRINT(EM_DIAGRAM):   end;
1133278   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1133279   +         if _dm12 = '8'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '8' then do;
1133280   +            GRP_RFMstat8 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat8 = 1;
1133281   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1133282   +         end;
MPRINT(EM_DIAGRAM):   end;
1133283   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1133284   +            if _dm12 = '9'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '9' then do;
1133285   +               GRP_RFMstat9 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat9 = 1;
1133286   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1133287   +            end;
MPRINT(EM_DIAGRAM):   end;
1133288   +         end;
MPRINT(EM_DIAGRAM):   end;
1133289   +      end;
MPRINT(EM_DIAGRAM):   end;
1133290   +   end;
MPRINT(EM_DIAGRAM):   end;
1133291   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1133292   +      GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
1133293   +      GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
1133294   +      GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
1133295   +      GRP_RFMstat5 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat5 = .;
1133296   +      GRP_RFMstat6 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat6 = .;
1133297   +      GRP_RFMstat7 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat7 = .;
1133298   +      GRP_RFMstat8 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat8 = .;
1133299   +      GRP_RFMstat9 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat9 = .;
1133300   +      GRP_RFMstat10 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat10 = .;
1133301   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1133302   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1133303   +   end;
MPRINT(EM_DIAGRAM):   end;
1133304   +end;
MPRINT(EM_DIAGRAM):   end;
1133305   +
1133306   +*** Generate dummy variables for GRP_RMntFrq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RMntFrq ;
1133307   +drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 GRP_RMntFrq5 GRP_RMntFrq6
1133308   +        GRP_RMntFrq7 GRP_RMntFrq8 GRP_RMntFrq9 GRP_RMntFrq10 ;
MPRINT(EM_DIAGRAM):   drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 GRP_RMntFrq5 GRP_RMntFrq6
GRP_RMntFrq7 GRP_RMntFrq8 GRP_RMntFrq9 GRP_RMntFrq10 ;
1133309   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1133310   +GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
1133311   +GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
1133312   +GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
1133313   +GRP_RMntFrq5 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq5 = 0;
1133314   +GRP_RMntFrq6 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq6 = 0;
1133315   +GRP_RMntFrq7 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq7 = 0;
1133316   +GRP_RMntFrq8 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq8 = 0;
1133317   +GRP_RMntFrq9 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq9 = 0;
1133318   +GRP_RMntFrq10 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq10 = 0;
1133319   +if missing( GRP_RMntFrq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RMntFrq ) then do;
1133320   +   GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
1133321   +   GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
1133322   +   GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
1133323   +   GRP_RMntFrq5 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq5 = .;
1133324   +   GRP_RMntFrq6 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq6 = .;
1133325   +   GRP_RMntFrq7 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq7 = .;
1133326   +   GRP_RMntFrq8 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq8 = .;
1133327   +   GRP_RMntFrq9 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq9 = .;
1133328   +   GRP_RMntFrq10 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq10 = .;
1133329   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1133330   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1133331   +end;
MPRINT(EM_DIAGRAM):   end;
1133332   +else do;
MPRINT(EM_DIAGRAM):   else do;
1133333   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1133334   +   _dm12 = put( GRP_RMntFrq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RMntFrq , BEST12. );
1133335   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1133336   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1133337   +   if _dm12 <= '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '4' then do;
1133338   +      if _dm12 <= '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '2' then do;
1133339   +         if _dm12 <= '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '11' then do;
1133340   +            if _dm12 = '10'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '10' then do;
1133341   +               GRP_RMntFrq10 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq10 = 1;
1133342   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1133343   +            end;
MPRINT(EM_DIAGRAM):   end;
1133344   +            else do;
MPRINT(EM_DIAGRAM):   else do;
1133345   +               if _dm12 = '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '11' then do;
1133346   +                  GRP_RMntFrq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = -1;
1133347   +                  GRP_RMntFrq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = -1;
1133348   +                  GRP_RMntFrq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = -1;
1133349   +                  GRP_RMntFrq5 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq5 = -1;
1133350   +                  GRP_RMntFrq6 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq6 = -1;
1133351   +                  GRP_RMntFrq7 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq7 = -1;
1133352   +                  GRP_RMntFrq8 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq8 = -1;
1133353   +                  GRP_RMntFrq9 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq9 = -1;
1133354   +                  GRP_RMntFrq10 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq10 = -1;
1133355   +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1133356   +               end;
MPRINT(EM_DIAGRAM):   end;
1133357   +            end;
MPRINT(EM_DIAGRAM):   end;
1133358   +         end;
MPRINT(EM_DIAGRAM):   end;
1133359   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1133360   +            if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
1133361   +               GRP_RMntFrq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 1;
1133362   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1133363   +            end;
MPRINT(EM_DIAGRAM):   end;
1133364   +         end;
MPRINT(EM_DIAGRAM):   end;
1133365   +      end;
MPRINT(EM_DIAGRAM):   end;
1133366   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1133367   +         if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1133368   +            GRP_RMntFrq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 1;
1133369   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1133370   +         end;
MPRINT(EM_DIAGRAM):   end;
1133371   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1133372   +            if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
1133373   +               GRP_RMntFrq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 1;
1133374   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1133375   +            end;
MPRINT(EM_DIAGRAM):   end;
1133376   +         end;
MPRINT(EM_DIAGRAM):   end;
1133377   +      end;
MPRINT(EM_DIAGRAM):   end;
1133378   +   end;
MPRINT(EM_DIAGRAM):   end;
1133379   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1133380   +      if _dm12 <= '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '7' then do;
1133381   +         if _dm12 <= '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '6' then do;
1133382   +            if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1133383   +               GRP_RMntFrq5 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq5 = 1;
1133384   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1133385   +            end;
MPRINT(EM_DIAGRAM):   end;
1133386   +            else do;
MPRINT(EM_DIAGRAM):   else do;
1133387   +               if _dm12 = '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '6' then do;
1133388   +                  GRP_RMntFrq6 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq6 = 1;
1133389   +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1133390   +               end;
MPRINT(EM_DIAGRAM):   end;
1133391   +            end;
MPRINT(EM_DIAGRAM):   end;
1133392   +         end;
MPRINT(EM_DIAGRAM):   end;
1133393   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1133394   +            if _dm12 = '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '7' then do;
1133395   +               GRP_RMntFrq7 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq7 = 1;
1133396   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1133397   +            end;
MPRINT(EM_DIAGRAM):   end;
1133398   +         end;
MPRINT(EM_DIAGRAM):   end;
1133399   +      end;
MPRINT(EM_DIAGRAM):   end;
1133400   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1133401   +         if _dm12 = '8'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '8' then do;
1133402   +            GRP_RMntFrq8 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq8 = 1;
1133403   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1133404   +         end;
MPRINT(EM_DIAGRAM):   end;
1133405   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1133406   +            if _dm12 = '9'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '9' then do;
1133407   +               GRP_RMntFrq9 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq9 = 1;
1133408   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1133409   +            end;
MPRINT(EM_DIAGRAM):   end;
1133410   +         end;
MPRINT(EM_DIAGRAM):   end;
1133411   +      end;
MPRINT(EM_DIAGRAM):   end;
1133412   +   end;
MPRINT(EM_DIAGRAM):   end;
1133413   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1133414   +      GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
1133415   +      GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
1133416   +      GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
1133417   +      GRP_RMntFrq5 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq5 = .;
1133418   +      GRP_RMntFrq6 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq6 = .;
1133419   +      GRP_RMntFrq7 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq7 = .;
1133420   +      GRP_RMntFrq8 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq8 = .;
1133421   +      GRP_RMntFrq9 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq9 = .;
1133422   +      GRP_RMntFrq10 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq10 = .;
1133423   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1133424   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1133425   +   end;
MPRINT(EM_DIAGRAM):   end;
1133426   +end;
MPRINT(EM_DIAGRAM):   end;
1133427   +
1133428   +*** Generate dummy variables for GRP_Recency ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Recency ;
1133429   +drop GRP_Recency2 GRP_Recency3 GRP_Recency4 GRP_Recency5 GRP_Recency6
1133430   +        GRP_Recency7 GRP_Recency8 GRP_Recency9 GRP_Recency10 ;
MPRINT(EM_DIAGRAM):   drop GRP_Recency2 GRP_Recency3 GRP_Recency4 GRP_Recency5 GRP_Recency6
GRP_Recency7 GRP_Recency8 GRP_Recency9 GRP_Recency10 ;
1133431   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1133432   +GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
1133433   +GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
1133434   +GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
1133435   +GRP_Recency5 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency5 = 0;
1133436   +GRP_Recency6 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency6 = 0;
1133437   +GRP_Recency7 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency7 = 0;
1133438   +GRP_Recency8 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency8 = 0;
1133439   +GRP_Recency9 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency9 = 0;
1133440   +GRP_Recency10 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency10 = 0;
1133441   +if missing( GRP_Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Recency ) then do;
1133442   +   GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
1133443   +   GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
1133444   +   GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
1133445   +   GRP_Recency5 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency5 = .;
1133446   +   GRP_Recency6 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency6 = .;
1133447   +   GRP_Recency7 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency7 = .;
1133448   +   GRP_Recency8 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency8 = .;
1133449   +   GRP_Recency9 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency9 = .;
1133450   +   GRP_Recency10 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency10 = .;
1133451   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1133452   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1133453   +end;
MPRINT(EM_DIAGRAM):   end;
1133454   +else do;
MPRINT(EM_DIAGRAM):   else do;
1133455   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1133456   +   _dm12 = put( GRP_Recency , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Recency , BEST12. );
1133457   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1133458   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1133459   +   if _dm12 <= '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '4' then do;
1133460   +      if _dm12 <= '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '2' then do;
1133461   +         if _dm12 <= '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '11' then do;
1133462   +            if _dm12 = '10'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '10' then do;
1133463   +               GRP_Recency10 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency10 = 1;
1133464   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1133465   +            end;
MPRINT(EM_DIAGRAM):   end;
1133466   +            else do;
MPRINT(EM_DIAGRAM):   else do;
1133467   +               if _dm12 = '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '11' then do;
1133468   +                  GRP_Recency2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = -1;
1133469   +                  GRP_Recency3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = -1;
1133470   +                  GRP_Recency4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = -1;
1133471   +                  GRP_Recency5 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency5 = -1;
1133472   +                  GRP_Recency6 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency6 = -1;
1133473   +                  GRP_Recency7 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency7 = -1;
1133474   +                  GRP_Recency8 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency8 = -1;
1133475   +                  GRP_Recency9 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency9 = -1;
1133476   +                  GRP_Recency10 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency10 = -1;
1133477   +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1133478   +               end;
MPRINT(EM_DIAGRAM):   end;
1133479   +            end;
MPRINT(EM_DIAGRAM):   end;
1133480   +         end;
MPRINT(EM_DIAGRAM):   end;
1133481   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1133482   +            if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
1133483   +               GRP_Recency2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 1;
1133484   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1133485   +            end;
MPRINT(EM_DIAGRAM):   end;
1133486   +         end;
MPRINT(EM_DIAGRAM):   end;
1133487   +      end;
MPRINT(EM_DIAGRAM):   end;
1133488   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1133489   +         if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1133490   +            GRP_Recency3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 1;
1133491   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1133492   +         end;
MPRINT(EM_DIAGRAM):   end;
1133493   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1133494   +            if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
1133495   +               GRP_Recency4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 1;
1133496   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1133497   +            end;
MPRINT(EM_DIAGRAM):   end;
1133498   +         end;
MPRINT(EM_DIAGRAM):   end;
1133499   +      end;
MPRINT(EM_DIAGRAM):   end;
1133500   +   end;
The SAS System
 
MPRINT(EM_DIAGRAM):   end;
1133501   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1133502   +      if _dm12 <= '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '7' then do;
1133503   +         if _dm12 <= '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '6' then do;
1133504   +            if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1133505   +               GRP_Recency5 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency5 = 1;
1133506   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1133507   +            end;
MPRINT(EM_DIAGRAM):   end;
1133508   +            else do;
MPRINT(EM_DIAGRAM):   else do;
1133509   +               if _dm12 = '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '6' then do;
1133510   +                  GRP_Recency6 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency6 = 1;
1133511   +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1133512   +               end;
MPRINT(EM_DIAGRAM):   end;
1133513   +            end;
MPRINT(EM_DIAGRAM):   end;
1133514   +         end;
MPRINT(EM_DIAGRAM):   end;
1133515   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1133516   +            if _dm12 = '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '7' then do;
1133517   +               GRP_Recency7 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency7 = 1;
1133518   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1133519   +            end;
MPRINT(EM_DIAGRAM):   end;
1133520   +         end;
MPRINT(EM_DIAGRAM):   end;
1133521   +      end;
MPRINT(EM_DIAGRAM):   end;
1133522   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1133523   +         if _dm12 = '8'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '8' then do;
1133524   +            GRP_Recency8 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency8 = 1;
1133525   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1133526   +         end;
MPRINT(EM_DIAGRAM):   end;
1133527   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1133528   +            if _dm12 = '9'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '9' then do;
1133529   +               GRP_Recency9 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency9 = 1;
1133530   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1133531   +            end;
MPRINT(EM_DIAGRAM):   end;
1133532   +         end;
MPRINT(EM_DIAGRAM):   end;
1133533   +      end;
MPRINT(EM_DIAGRAM):   end;
1133534   +   end;
MPRINT(EM_DIAGRAM):   end;
1133535   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1133536   +      GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
1133537   +      GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
1133538   +      GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
1133539   +      GRP_Recency5 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency5 = .;
1133540   +      GRP_Recency6 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency6 = .;
1133541   +      GRP_Recency7 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency7 = .;
1133542   +      GRP_Recency8 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency8 = .;
1133543   +      GRP_Recency9 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency9 = .;
1133544   +      GRP_Recency10 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency10 = .;
1133545   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1133546   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1133547   +   end;
MPRINT(EM_DIAGRAM):   end;
1133548   +end;
MPRINT(EM_DIAGRAM):   end;
1133549   +
1133550   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1133551   +*** Checking missing input Interval
1133552   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1133553   +
1133554   +IF NMISS(
1133555   +   Year_Birth   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Year_Birth ) THEN DO;
1133556   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1133557   +
1133558   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1133559   +END;
MPRINT(EM_DIAGRAM):   END;
1133560   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1133561   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
1133562   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1133563   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1133564   +   S_Year_Birth  =    -163.205330145852 +     0.08289609202864 * Year_Birth ;
MPRINT(EM_DIAGRAM):   S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
1133565   +END;
MPRINT(EM_DIAGRAM):   END;
1133566   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1133567   +   IF MISSING( Year_Birth ) THEN S_Year_Birth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Year_Birth ) THEN S_Year_Birth = . ;
1133568   +   ELSE S_Year_Birth  =    -163.205330145852 +     0.08289609202864 *
1133569   +        Year_Birth ;
MPRINT(EM_DIAGRAM):   ELSE S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
1133570   +END;
MPRINT(EM_DIAGRAM):   END;
1133571   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1133572   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
1133573   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1133574   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1133575   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
1133576   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1133577   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1133578   +   H1x1_1  =     48.9150991327121 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 48.9150991327121 * S_Year_Birth ;
1133579   +   H1x1_2  =     -1.2448778225302 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -1.2448778225302 * S_Year_Birth ;
1133580   +   H1x1_3  =    -1.17490240099498 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -1.17490240099498 * S_Year_Birth ;
1133581   +   H1x1_1  = H1x1_1  +      1.4952515081505 * GRP_AcceptedCmp52
1133582   +          +     1.14523176862382 * GRP_AcceptedCmpTotal3
1133583   +          +     0.93425623080229 * GRP_Frq2  +    -0.23764135713737 * GRP_Frq3
1133584   +          +     1.05225179768198 * GRP_Frq4  +     1.13893285231202 * GRP_Frq5
1133585   +          +    -0.27680259911931 * GRP_Frq6  +    -0.38613226683298 * GRP_Frq7
1133586   +          +     0.94138019603873 * GRP_Frq8  +    -0.96317020684084 * GRP_Frq9
1133587   +          +     1.74049706575335 * GRP_Frq10  +    -1.04039907773219 *
1133588   +        GRP_Income2  +     -0.3786016700082 * GRP_Income3
1133589   +          +     1.05648065329445 * GRP_Income4  +    -0.56495305593924 *
1133590   +        GRP_Income5  +      0.3223314463995 * GRP_Income6
1133591   +          +    -0.47141915296565 * GRP_Income7  +     0.72744850687316 *
1133592   +        GRP_Income8  +     0.36203320013679 * GRP_Income9
1133593   +          +     1.03998002924375 * GRP_Income10  +    -1.48754816106222 *
1133594   +        GRP_Mnt2  +    -0.30894429756232 * GRP_Mnt3  +    -0.95770423028109 *
1133595   +        GRP_Mnt4  +    -1.64539798690154 * GRP_Mnt5  +     0.41874777811787 *
1133596   +        GRP_Mnt6  +     -0.1532077512138 * GRP_Mnt7  +    -0.04430209280744 *
1133597   +        GRP_Mnt8  +     0.02050928860703 * GRP_Mnt9  +    -0.23141760714689 *
1133598   +        GRP_Mnt10  +     0.57065075916048 * GRP_MntFishProducts3
1133599   +          +     2.12207366601436 * GRP_MntFishProducts4
1133600   +          +     1.24477569664546 * GRP_MntFishProducts5
1133601   +          +    -0.15100981079052 * GRP_MntFishProducts6
1133602   +          +     0.46801413141905 * GRP_MntFishProducts7
1133603   +          +     1.01445048363237 * GRP_MntFishProducts8
1133604   +          +     0.13349988618819 * GRP_MntFishProducts9
1133605   +          +     0.63636065903854 * GRP_MntFishProducts10
1133606   +          +     0.35790281852262 * GRP_MntGoldProds2
1133607   +          +     0.11971728944951 * GRP_MntGoldProds3
1133608   +          +     1.37638045474104 * GRP_MntGoldProds4
1133609   +          +      0.7726977538873 * GRP_MntGoldProds5
1133610   +          +     1.54380129285603 * GRP_MntGoldProds6
1133611   +          +    -0.43867873229224 * GRP_MntGoldProds7
1133612   +          +     -0.0828489784008 * GRP_MntGoldProds8
1133613   +          +    -1.30553169816686 * GRP_MntGoldProds9
1133614   +          +     0.31517486136642 * GRP_MntGoldProds10
1133615   +          +     2.08926485272668 * GRP_MntMeatProducts2
1133616   +          +    -0.41323675739227 * GRP_MntMeatProducts3
1133617   +          +     0.77026554823296 * GRP_MntMeatProducts4
1133618   +          +     1.50837606673951 * GRP_MntMeatProducts5
1133619   +          +    -0.50610766287925 * GRP_MntMeatProducts6
1133620   +          +    -0.95808202669031 * GRP_MntMeatProducts7
1133621   +          +    -0.73210997972236 * GRP_MntMeatProducts8
1133622   +          +      0.4803662033036 * GRP_MntMeatProducts9
1133623   +          +    -0.42623536772485 * GRP_MntMeatProducts10
1133624   +          +    -0.98377710430047 * GRP_MntSweetProducts3
1133625   +          +     1.29812120945148 * GRP_MntSweetProducts4
1133626   +          +     1.13394147298504 * GRP_MntSweetProducts5
1133627   +          +     1.88553289457256 * GRP_MntSweetProducts6
1133628   +          +     1.01861533954881 * GRP_MntSweetProducts7
1133629   +          +    -0.96863877000054 * GRP_MntSweetProducts8
1133630   +          +    -0.62054685937371 * GRP_MntSweetProducts9
1133631   +          +     0.12973446109882 * GRP_MntSweetProducts10
1133632   +          +    -0.62846271426447 * GRP_MntWines2  +     -0.8813121582917 *
1133633   +        GRP_MntWines3  +     0.63705101351299 * GRP_MntWines4
1133634   +          +    -1.87236646995285 * GRP_MntWines5  +    -1.18525347066321 *
1133635   +        GRP_MntWines6  +     2.53144197387008 * GRP_MntWines7
1133636   +          +      0.4451263901865 * GRP_MntWines8  +      1.2759478420416 *
1133637   +        GRP_MntWines9  +    -0.31414756703531 * GRP_MntWines10
1133638   +          +     0.24125160079787 * GRP_NumCatalogPurchases3
1133639   +          +     0.92633573785462 * GRP_NumCatalogPurchases4
1133640   +          +     1.18471184481323 * GRP_NumCatalogPurchases5
1133641   +          +    -0.58925390407558 * GRP_NumCatalogPurchases6
1133642   +          +     0.17286372485467 * GRP_NumCatalogPurchases7
1133643   +          +    -0.33288324436397 * GRP_NumDistPurchases2
1133644   +          +    -0.00244246555209 * GRP_NumDistPurchases3
1133645   +          +    -0.68136277383147 * GRP_NumDistPurchases4
1133646   +          +    -0.39044423572436 * GRP_NumDistPurchases5
1133647   +          +    -0.63508124022502 * GRP_NumDistPurchases6
1133648   +          +     1.12448752949295 * GRP_NumDistPurchases7
1133649   +          +     0.02898721976687 * GRP_NumDistPurchases8
1133650   +          +     0.78422457187261 * GRP_NumDistPurchases9
1133651   +          +    -0.51157522383083 * GRP_NumDistPurchases10
1133652   +          +    -0.19655601102758 * GRP_NumWebPurchases2
1133653   +          +    -0.43353198133592 * GRP_NumWebPurchases3
1133654   +          +     0.57303663109299 * GRP_NumWebPurchases4
1133655   +          +     0.44298473255625 * GRP_NumWebPurchases5
1133656   +          +     1.64940181869571 * GRP_NumWebPurchases6
1133657   +          +    -0.25769995323951 * GRP_NumWebPurchases7
1133658   +          +    -1.80626838046671 * GRP_NumWebPurchases8
1133659   +          +    -0.39825837678237 * GRP_NumWebVisitsMonth2
1133660   +          +    -0.27886029046796 * GRP_NumWebVisitsMonth3
1133661   +          +    -0.78900900175098 * GRP_NumWebVisitsMonth4
1133662   +          +    -0.03893707525125 * GRP_NumWebVisitsMonth5
1133663   +          +    -0.46465177083799 * GRP_NumWebVisitsMonth6
1133664   +          +     0.42334277075131 * GRP_NumWebVisitsMonth7
1133665   +          +     0.95483884118217 * GRP_NumWebVisitsMonth8
1133666   +          +    -1.60737512717605 * GRP_RFMstat2  +     0.12532825553734 *
1133667   +        GRP_RFMstat3  +     -0.8715682423187 * GRP_RFMstat4
1133668   +          +    -1.58991314451625 * GRP_RFMstat5  +       1.561575688018 *
1133669   +        GRP_RFMstat6  +     1.02933022756158 * GRP_RFMstat7
1133670   +          +    -2.31915849609871 * GRP_RFMstat8  +    -2.84566628839516 *
1133671   +        GRP_RFMstat9  +    -0.57016541369574 * GRP_RFMstat10
1133672   +          +    -0.31514918770314 * GRP_RMntFrq2  +     0.63646656105106 *
1133673   +        GRP_RMntFrq3  +    -0.46293466192264 * GRP_RMntFrq4
1133674   +          +     0.54567569749056 * GRP_RMntFrq5  +     0.86979763512166 *
1133675   +        GRP_RMntFrq6  +     0.52805740997594 * GRP_RMntFrq7
1133676   +          +    -1.02676864365651 * GRP_RMntFrq8  +    -0.06036462998226 *
1133677   +        GRP_RMntFrq9  +     1.10224270504506 * GRP_RMntFrq10
1133678   +          +    -0.23825567927471 * GRP_Recency2  +     0.57752173954669 *
1133679   +        GRP_Recency3  +    -1.04299682241307 * GRP_Recency4
1133680   +          +     0.48450986361423 * GRP_Recency5  +    -0.27557230387919 *
1133681   +        GRP_Recency6  +     1.13777960768356 * GRP_Recency7
1133682   +          +     0.41680852213768 * GRP_Recency8  +    -0.32662764603354 *
1133683   +        GRP_Recency9  +     0.80671738024139 * GRP_Recency10 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 1.4952515081505 * GRP_AcceptedCmp52 + 1.14523176862382
* GRP_AcceptedCmpTotal3 + 0.93425623080229 * GRP_Frq2 + -0.23764135713737 * GRP_Frq3 +
1.05225179768198 * GRP_Frq4 + 1.13893285231202 * GRP_Frq5 + -0.27680259911931 * GRP_Frq6 +
-0.38613226683298 * GRP_Frq7 + 0.94138019603873 * GRP_Frq8 + -0.96317020684084 * GRP_Frq9 +
1.74049706575335 * GRP_Frq10 + -1.04039907773219 * GRP_Income2 + -0.3786016700082 *
GRP_Income3 + 1.05648065329445 * GRP_Income4 + -0.56495305593924 * GRP_Income5 +
0.3223314463995 * GRP_Income6 + -0.47141915296565 * GRP_Income7 + 0.72744850687316 *
GRP_Income8 + 0.36203320013679 * GRP_Income9 + 1.03998002924375 * GRP_Income10 +
-1.48754816106222 * GRP_Mnt2 + -0.30894429756232 * GRP_Mnt3 + -0.95770423028109 * GRP_Mnt4 +
-1.64539798690154 * GRP_Mnt5 + 0.41874777811787 * GRP_Mnt6 + -0.1532077512138 * GRP_Mnt7 +
-0.04430209280744 * GRP_Mnt8 + 0.02050928860703 * GRP_Mnt9 + -0.23141760714689 * GRP_Mnt10 +
0.57065075916048 * GRP_MntFishProducts3 + 2.12207366601436 * GRP_MntFishProducts4 +
1.24477569664546 * GRP_MntFishProducts5 + -0.15100981079052 * GRP_MntFishProducts6 +
0.46801413141905 * GRP_MntFishProducts7 + 1.01445048363237 * GRP_MntFishProducts8 +
0.13349988618819 * GRP_MntFishProducts9 + 0.63636065903854 * GRP_MntFishProducts10 +
0.35790281852262 * GRP_MntGoldProds2 + 0.11971728944951 * GRP_MntGoldProds3 + 1.37638045474104
* GRP_MntGoldProds4 + 0.7726977538873 * GRP_MntGoldProds5 + 1.54380129285603 *
GRP_MntGoldProds6 + -0.43867873229224 * GRP_MntGoldProds7 + -0.0828489784008 *
GRP_MntGoldProds8 + -1.30553169816686 * GRP_MntGoldProds9 + 0.31517486136642 *
GRP_MntGoldProds10 + 2.08926485272668 * GRP_MntMeatProducts2 + -0.41323675739227 *
GRP_MntMeatProducts3 + 0.77026554823296 * GRP_MntMeatProducts4 + 1.50837606673951 *
GRP_MntMeatProducts5 + -0.50610766287925 * GRP_MntMeatProducts6 + -0.95808202669031 *
GRP_MntMeatProducts7 + -0.73210997972236 * GRP_MntMeatProducts8 + 0.4803662033036 *
GRP_MntMeatProducts9 + -0.42623536772485 * GRP_MntMeatProducts10 + -0.98377710430047 *
GRP_MntSweetProducts3 + 1.29812120945148 * GRP_MntSweetProducts4 + 1.13394147298504 *
GRP_MntSweetProducts5 + 1.88553289457256 * GRP_MntSweetProducts6 + 1.01861533954881 *
GRP_MntSweetProducts7 + -0.96863877000054 * GRP_MntSweetProducts8 + -0.62054685937371 *
GRP_MntSweetProducts9 + 0.12973446109882 * GRP_MntSweetProducts10 + -0.62846271426447 *
GRP_MntWines2 + -0.8813121582917 * GRP_MntWines3 + 0.63705101351299 * GRP_MntWines4 +
-1.87236646995285 * GRP_MntWines5 + -1.18525347066321 * GRP_MntWines6 + 2.53144197387008 *
GRP_MntWines7 + 0.4451263901865 * GRP_MntWines8 + 1.2759478420416 * GRP_MntWines9 +
-0.31414756703531 * GRP_MntWines10 + 0.24125160079787 * GRP_NumCatalogPurchases3 +
0.92633573785462 * GRP_NumCatalogPurchases4 + 1.18471184481323 * GRP_NumCatalogPurchases5 +
-0.58925390407558 * GRP_NumCatalogPurchases6 + 0.17286372485467 * GRP_NumCatalogPurchases7 +
-0.33288324436397 * GRP_NumDistPurchases2 + -0.00244246555209 * GRP_NumDistPurchases3 +
-0.68136277383147 * GRP_NumDistPurchases4 + -0.39044423572436 * GRP_NumDistPurchases5 +
-0.63508124022502 * GRP_NumDistPurchases6 + 1.12448752949295 * GRP_NumDistPurchases7 +
0.02898721976687 * GRP_NumDistPurchases8 + 0.78422457187261 * GRP_NumDistPurchases9 +
-0.51157522383083 * GRP_NumDistPurchases10 + -0.19655601102758 * GRP_NumWebPurchases2 +
-0.43353198133592 * GRP_NumWebPurchases3 + 0.57303663109299 * GRP_NumWebPurchases4 +
0.44298473255625 * GRP_NumWebPurchases5 + 1.64940181869571 * GRP_NumWebPurchases6 +
-0.25769995323951 * GRP_NumWebPurchases7 + -1.80626838046671 * GRP_NumWebPurchases8 +
-0.39825837678237 * GRP_NumWebVisitsMonth2 + -0.27886029046796 * GRP_NumWebVisitsMonth3 +
-0.78900900175098 * GRP_NumWebVisitsMonth4 + -0.03893707525125 * GRP_NumWebVisitsMonth5 +
-0.46465177083799 * GRP_NumWebVisitsMonth6 + 0.42334277075131 * GRP_NumWebVisitsMonth7 +
0.95483884118217 * GRP_NumWebVisitsMonth8 + -1.60737512717605 * GRP_RFMstat2 +
0.12532825553734 * GRP_RFMstat3 + -0.8715682423187 * GRP_RFMstat4 + -1.58991314451625 *
GRP_RFMstat5 + 1.561575688018 * GRP_RFMstat6 + 1.02933022756158 * GRP_RFMstat7 +
-2.31915849609871 * GRP_RFMstat8 + -2.84566628839516 * GRP_RFMstat9 + -0.57016541369574 *
GRP_RFMstat10 + -0.31514918770314 * GRP_RMntFrq2 + 0.63646656105106 * GRP_RMntFrq3 +
-0.46293466192264 * GRP_RMntFrq4 + 0.54567569749056 * GRP_RMntFrq5 + 0.86979763512166 *
GRP_RMntFrq6 + 0.52805740997594 * GRP_RMntFrq7 + -1.02676864365651 * GRP_RMntFrq8 +
-0.06036462998226 * GRP_RMntFrq9 + 1.10224270504506 * GRP_RMntFrq10 + -0.23825567927471 *
GRP_Recency2 + 0.57752173954669 * GRP_Recency3 + -1.04299682241307 * GRP_Recency4 +
0.48450986361423 * GRP_Recency5 + -0.27557230387919 * GRP_Recency6 + 1.13777960768356 *
GRP_Recency7 + 0.41680852213768 * GRP_Recency8 + -0.32662764603354 * GRP_Recency9 +
0.80671738024139 * GRP_Recency10 ;
1133684   +   H1x1_2  = H1x1_2  +     0.32193368206173 * GRP_AcceptedCmp52
1133685   +          +     0.82326963141087 * GRP_AcceptedCmpTotal3
1133686   +          +     0.29199450204637 * GRP_Frq2  +    -0.20110326184849 * GRP_Frq3
1133687   +          +     1.15620288699913 * GRP_Frq4  +     1.91563433844484 * GRP_Frq5
1133688   +          +    -1.94417593954758 * GRP_Frq6  +    -0.47586232856071 * GRP_Frq7
1133689   +          +    -0.10925637884701 * GRP_Frq8  +     1.04074726941789 * GRP_Frq9
1133690   +          +    -1.19736074070766 * GRP_Frq10  +     1.23870153104153 *
1133691   +        GRP_Income2  +     1.32868254469642 * GRP_Income3
1133692   +          +    -1.43777045525805 * GRP_Income4  +    -3.47419008335802 *
1133693   +        GRP_Income5  +    -1.27020686562599 * GRP_Income6
1133694   +          +    -0.98522733275557 * GRP_Income7  +    -0.14168992699506 *
1133695   +        GRP_Income8  +    -0.85866324769247 * GRP_Income9
1133696   +          +    -1.23618327699367 * GRP_Income10  +     1.68515397455794 *
1133697   +        GRP_Mnt2  +    -0.47759836154745 * GRP_Mnt3  +     0.78983592820334 *
1133698   +        GRP_Mnt4  +    -0.68136197325175 * GRP_Mnt5  +    -1.12504577016144 *
1133699   +        GRP_Mnt6  +     0.04737591582113 * GRP_Mnt7  +     1.28481668963926 *
1133700   +        GRP_Mnt8  +    -0.80486225354961 * GRP_Mnt9  +     0.21161129936087 *
1133701   +        GRP_Mnt10  +    -0.36757535415244 * GRP_MntFishProducts3
1133702   +          +    -0.33143977879958 * GRP_MntFishProducts4
1133703   +          +     1.93255446105149 * GRP_MntFishProducts5
1133704   +          +    -1.04814780142169 * GRP_MntFishProducts6
1133705   +          +     0.55741771876452 * GRP_MntFishProducts7
1133706   +          +    -0.92346757070836 * GRP_MntFishProducts8
1133707   +          +    -2.06316504690909 * GRP_MntFishProducts9
1133708   +          +    -0.99663986972644 * GRP_MntFishProducts10
1133709   +          +     2.71588988290106 * GRP_MntGoldProds2
1133710   +          +    -2.95950500047378 * GRP_MntGoldProds3
1133711   +          +    -0.12315192366204 * GRP_MntGoldProds4
1133712   +          +     2.36302474420457 * GRP_MntGoldProds5
1133713   +          +    -1.11740173730236 * GRP_MntGoldProds6
1133714   +          +    -0.06629690891602 * GRP_MntGoldProds7
1133715   +          +     1.53811367494183 * GRP_MntGoldProds8
1133716   +          +    -0.74588656478301 * GRP_MntGoldProds9
1133717   +          +     -0.1802565447079 * GRP_MntGoldProds10
1133718   +          +    -0.01894056181534 * GRP_MntMeatProducts2
1133719   +          +    -1.15568679348089 * GRP_MntMeatProducts3
1133720   +          +    -0.58682052930966 * GRP_MntMeatProducts4
1133721   +          +     -0.6043543906002 * GRP_MntMeatProducts5
1133722   +          +     2.85692516249605 * GRP_MntMeatProducts6
1133723   +          +     0.73625924216854 * GRP_MntMeatProducts7
1133724   +          +     1.74214728746989 * GRP_MntMeatProducts8
1133725   +          +    -0.45744353564408 * GRP_MntMeatProducts9
1133726   +          +     -1.4723966813517 * GRP_MntMeatProducts10
1133727   +          +    -1.09495306347627 * GRP_MntSweetProducts3
1133728   +          +     -0.4054731731199 * GRP_MntSweetProducts4
1133729   +          +    -0.60803493417392 * GRP_MntSweetProducts5
1133730   +          +     0.20719345639414 * GRP_MntSweetProducts6
1133731   +          +     1.02644572280032 * GRP_MntSweetProducts7
1133732   +          +    -1.64943878087677 * GRP_MntSweetProducts8
1133733   +          +      2.5809291197819 * GRP_MntSweetProducts9
1133734   +          +    -1.12543901836329 * GRP_MntSweetProducts10
1133735   +          +     0.80918074561742 * GRP_MntWines2  +    -0.41223459539794 *
1133736   +        GRP_MntWines3  +    -1.98090391049585 * GRP_MntWines4
1133737   +          +     0.47010666911014 * GRP_MntWines5  +    -2.49811494662362 *
1133738   +        GRP_MntWines6  +    -0.66268495109454 * GRP_MntWines7
1133739   +          +     0.39873289333478 * GRP_MntWines8  +     0.59392453433629 *
1133740   +        GRP_MntWines9  +     1.76795712153005 * GRP_MntWines10
1133741   +          +     0.62443875288586 * GRP_NumCatalogPurchases3
1133742   +          +    -0.23239899520452 * GRP_NumCatalogPurchases4
1133743   +          +     0.77819270235427 * GRP_NumCatalogPurchases5
1133744   +          +    -0.66349897020768 * GRP_NumCatalogPurchases6
1133745   +          +    -0.28807954547855 * GRP_NumCatalogPurchases7
1133746   +          +     0.68100611767034 * GRP_NumDistPurchases2
1133747   +          +     -0.2983323877346 * GRP_NumDistPurchases3
1133748   +          +     1.45550232689859 * GRP_NumDistPurchases4
1133749   +          +     0.11615366779409 * GRP_NumDistPurchases5
1133750   +          +    -2.32779642988276 * GRP_NumDistPurchases6
1133751   +          +    -1.28135209220093 * GRP_NumDistPurchases7
1133752   +          +    -0.28870369893693 * GRP_NumDistPurchases8
1133753   +          +     0.19103763943343 * GRP_NumDistPurchases9
1133754   +          +    -0.45462159014129 * GRP_NumDistPurchases10
1133755   +          +     0.97366301040717 * GRP_NumWebPurchases2
1133756   +          +     3.15113200753743 * GRP_NumWebPurchases3
1133757   +          +     0.58917122105031 * GRP_NumWebPurchases4
1133758   +          +     0.12866676129391 * GRP_NumWebPurchases5
1133759   +          +     0.07041507244185 * GRP_NumWebPurchases6
1133760   +          +    -0.06632505905192 * GRP_NumWebPurchases7
1133761   +          +     1.50920205841058 * GRP_NumWebPurchases8
1133762   +          +    -2.47459746725091 * GRP_NumWebVisitsMonth2
1133763   +          +     1.21230732020908 * GRP_NumWebVisitsMonth3
1133764   +          +     0.02999057712001 * GRP_NumWebVisitsMonth4
1133765   +          +    -0.33433716782878 * GRP_NumWebVisitsMonth5
1133766   +          +     2.75617273064887 * GRP_NumWebVisitsMonth6
1133767   +          +     0.91205481253913 * GRP_NumWebVisitsMonth7
1133768   +          +    -1.40389237616488 * GRP_NumWebVisitsMonth8
1133769   +          +    -0.07601897093846 * GRP_RFMstat2  +    -0.17804688029525 *
1133770   +        GRP_RFMstat3  +    -1.25755712891617 * GRP_RFMstat4
1133771   +          +    -1.44373874040728 * GRP_RFMstat5  +     0.18486659716439 *
1133772   +        GRP_RFMstat6  +    -1.15261748039876 * GRP_RFMstat7
1133773   +          +     1.14394270249563 * GRP_RFMstat8  +    -1.50826640819395 *
1133774   +        GRP_RFMstat9  +     0.90336660848561 * GRP_RFMstat10
1133775   +          +     0.11901703475432 * GRP_RMntFrq2  +     0.14476182733312 *
1133776   +        GRP_RMntFrq3  +     0.32489702019702 * GRP_RMntFrq4
1133777   +          +    -1.57145901582776 * GRP_RMntFrq5  +     0.07677043753266 *
1133778   +        GRP_RMntFrq6  +     1.15426453256065 * GRP_RMntFrq7
1133779   +          +     1.61100197843951 * GRP_RMntFrq8  +    -0.55320583423719 *
1133780   +        GRP_RMntFrq9  +    -0.36289317306929 * GRP_RMntFrq10
1133781   +          +     -0.0602051134327 * GRP_Recency2  +     0.72031394040131 *
1133782   +        GRP_Recency3  +    -1.01324252973573 * GRP_Recency4
1133783   +          +     -0.2828776155712 * GRP_Recency5  +    -0.55661874182308 *
1133784   +        GRP_Recency6  +    -0.31727450762599 * GRP_Recency7
1133785   +          +     1.13540870611782 * GRP_Recency8  +    -1.13660380171875 *
1133786   +        GRP_Recency9  +     1.50200700925354 * GRP_Recency10 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.32193368206173 * GRP_AcceptedCmp52 +
0.82326963141087 * GRP_AcceptedCmpTotal3 + 0.29199450204637 * GRP_Frq2 + -0.20110326184849 *
GRP_Frq3 + 1.15620288699913 * GRP_Frq4 + 1.91563433844484 * GRP_Frq5 + -1.94417593954758 *
GRP_Frq6 + -0.47586232856071 * GRP_Frq7 + -0.10925637884701 * GRP_Frq8 + 1.04074726941789 *
GRP_Frq9 + -1.19736074070766 * GRP_Frq10 + 1.23870153104153 * GRP_Income2 + 1.32868254469642 *
GRP_Income3 + -1.43777045525805 * GRP_Income4 + -3.47419008335802 * GRP_Income5 +
-1.27020686562599 * GRP_Income6 + -0.98522733275557 * GRP_Income7 + -0.14168992699506 *
GRP_Income8 + -0.85866324769247 * GRP_Income9 + -1.23618327699367 * GRP_Income10 +
1.68515397455794 * GRP_Mnt2 + -0.47759836154745 * GRP_Mnt3 + 0.78983592820334 * GRP_Mnt4 +
-0.68136197325175 * GRP_Mnt5 + -1.12504577016144 * GRP_Mnt6 + 0.04737591582113 * GRP_Mnt7 +
1.28481668963926 * GRP_Mnt8 + -0.80486225354961 * GRP_Mnt9 + 0.21161129936087 * GRP_Mnt10 +
-0.36757535415244 * GRP_MntFishProducts3 + -0.33143977879958 * GRP_MntFishProducts4 +
1.93255446105149 * GRP_MntFishProducts5 + -1.04814780142169 * GRP_MntFishProducts6 +
0.55741771876452 * GRP_MntFishProducts7 + -0.92346757070836 * GRP_MntFishProducts8 +
-2.06316504690909 * GRP_MntFishProducts9 + -0.99663986972644 * GRP_MntFishProducts10 +
2.71588988290106 * GRP_MntGoldProds2 + -2.95950500047378 * GRP_MntGoldProds3 +
-0.12315192366204 * GRP_MntGoldProds4 + 2.36302474420457 * GRP_MntGoldProds5 +
-1.11740173730236 * GRP_MntGoldProds6 + -0.06629690891602 * GRP_MntGoldProds7 +
1.53811367494183 * GRP_MntGoldProds8 + -0.74588656478301 * GRP_MntGoldProds9 +
-0.1802565447079 * GRP_MntGoldProds10 + -0.01894056181534 * GRP_MntMeatProducts2 +
-1.15568679348089 * GRP_MntMeatProducts3 + -0.58682052930966 * GRP_MntMeatProducts4 +
-0.6043543906002 * GRP_MntMeatProducts5 + 2.85692516249605 * GRP_MntMeatProducts6 +
0.73625924216854 * GRP_MntMeatProducts7 + 1.74214728746989 * GRP_MntMeatProducts8 +
-0.45744353564408 * GRP_MntMeatProducts9 + -1.4723966813517 * GRP_MntMeatProducts10 +
-1.09495306347627 * GRP_MntSweetProducts3 + -0.4054731731199 * GRP_MntSweetProducts4 +
-0.60803493417392 * GRP_MntSweetProducts5 + 0.20719345639414 * GRP_MntSweetProducts6 +
1.02644572280032 * GRP_MntSweetProducts7 + -1.64943878087677 * GRP_MntSweetProducts8 +
2.5809291197819 * GRP_MntSweetProducts9 + -1.12543901836329 * GRP_MntSweetProducts10 +
0.80918074561742 * GRP_MntWines2 + -0.41223459539794 * GRP_MntWines3 + -1.98090391049585 *
GRP_MntWines4 + 0.47010666911014 * GRP_MntWines5 + -2.49811494662362 * GRP_MntWines6 +
-0.66268495109454 * GRP_MntWines7 + 0.39873289333478 * GRP_MntWines8 + 0.59392453433629 *
GRP_MntWines9 + 1.76795712153005 * GRP_MntWines10 + 0.62443875288586 *
GRP_NumCatalogPurchases3 + -0.23239899520452 * GRP_NumCatalogPurchases4 + 0.77819270235427 *
GRP_NumCatalogPurchases5 + -0.66349897020768 * GRP_NumCatalogPurchases6 + -0.28807954547855 *
GRP_NumCatalogPurchases7 + 0.68100611767034 * GRP_NumDistPurchases2 + -0.2983323877346 *
GRP_NumDistPurchases3 + 1.45550232689859 * GRP_NumDistPurchases4 + 0.11615366779409 *
GRP_NumDistPurchases5 + -2.32779642988276 * GRP_NumDistPurchases6 + -1.28135209220093 *
GRP_NumDistPurchases7 + -0.28870369893693 * GRP_NumDistPurchases8 + 0.19103763943343 *
GRP_NumDistPurchases9 + -0.45462159014129 * GRP_NumDistPurchases10 + 0.97366301040717 *
GRP_NumWebPurchases2 + 3.15113200753743 * GRP_NumWebPurchases3 + 0.58917122105031 *
GRP_NumWebPurchases4 + 0.12866676129391 * GRP_NumWebPurchases5 + 0.07041507244185 *
GRP_NumWebPurchases6 + -0.06632505905192 * GRP_NumWebPurchases7 + 1.50920205841058 *
GRP_NumWebPurchases8 + -2.47459746725091 * GRP_NumWebVisitsMonth2 + 1.21230732020908 *
GRP_NumWebVisitsMonth3 + 0.02999057712001 * GRP_NumWebVisitsMonth4 + -0.33433716782878 *
GRP_NumWebVisitsMonth5 + 2.75617273064887 * GRP_NumWebVisitsMonth6 + 0.91205481253913 *
GRP_NumWebVisitsMonth7 + -1.40389237616488 * GRP_NumWebVisitsMonth8 + -0.07601897093846 *
GRP_RFMstat2 + -0.17804688029525 * GRP_RFMstat3 + -1.25755712891617 * GRP_RFMstat4 +
-1.44373874040728 * GRP_RFMstat5 + 0.18486659716439 * GRP_RFMstat6 + -1.15261748039876 *
GRP_RFMstat7 + 1.14394270249563 * GRP_RFMstat8 + -1.50826640819395 * GRP_RFMstat9 +
0.90336660848561 * GRP_RFMstat10 + 0.11901703475432 * GRP_RMntFrq2 + 0.14476182733312 *
GRP_RMntFrq3 + 0.32489702019702 * GRP_RMntFrq4 + -1.57145901582776 * GRP_RMntFrq5 +
0.07677043753266 * GRP_RMntFrq6 + 1.15426453256065 * GRP_RMntFrq7 + 1.61100197843951 *
GRP_RMntFrq8 + -0.55320583423719 * GRP_RMntFrq9 + -0.36289317306929 * GRP_RMntFrq10 +
-0.0602051134327 * GRP_Recency2 + 0.72031394040131 * GRP_Recency3 + -1.01324252973573 *
GRP_Recency4 + -0.2828776155712 * GRP_Recency5 + -0.55661874182308 * GRP_Recency6 +
-0.31727450762599 * GRP_Recency7 + 1.13540870611782 * GRP_Recency8 + -1.13660380171875 *
GRP_Recency9 + 1.50200700925354 * GRP_Recency10 ;
1133787   +   H1x1_3  = H1x1_3  +    -1.03985555112012 * GRP_AcceptedCmp52
1133788   +          +     0.25775857203989 * GRP_AcceptedCmpTotal3
1133789   +          +    -0.71156531868268 * GRP_Frq2  +     0.67259022689422 * GRP_Frq3
1133790   +          +    -1.97845323119706 * GRP_Frq4  +    -1.52930723846502 * GRP_Frq5
1133791   +          +     0.28107074664618 * GRP_Frq6  +     1.14326791621936 * GRP_Frq7
1133792   +          +    -1.22814850699575 * GRP_Frq8  +     -0.1984823170485 * GRP_Frq9
1133793   +          +     1.55339967620915 * GRP_Frq10  +     0.40856006828913 *
1133794   +        GRP_Income2  +    -0.24937432220747 * GRP_Income3
1133795   +          +     0.77178170458781 * GRP_Income4  +     -0.1042181149455 *
1133796   +        GRP_Income5  +     0.83921353126936 * GRP_Income6
1133797   +          +     0.42897985145162 * GRP_Income7  +    -0.99399816643537 *
1133798   +        GRP_Income8  +     1.43456355062073 * GRP_Income9
1133799   +          +      2.0557598827554 * GRP_Income10  +     0.53153636588135 *
1133800   +        GRP_Mnt2  +      1.4499127888941 * GRP_Mnt3  +    -1.79642136320056 *
1133801   +        GRP_Mnt4  +     0.23742732777127 * GRP_Mnt5  +     0.66365989150128 *
1133802   +        GRP_Mnt6  +    -2.42545477483083 * GRP_Mnt7  +    -2.06918742851762 *
1133803   +        GRP_Mnt8  +     0.39193343300266 * GRP_Mnt9  +    -0.68271160013302 *
1133804   +        GRP_Mnt10  +    -0.40413771106033 * GRP_MntFishProducts3
1133805   +          +     1.62536744100755 * GRP_MntFishProducts4
1133806   +          +     1.00956771804097 * GRP_MntFishProducts5
1133807   +          +    -0.04807563648335 * GRP_MntFishProducts6
1133808   +          +    -0.27640554543874 * GRP_MntFishProducts7
1133809   +          +    -0.09019675678864 * GRP_MntFishProducts8
1133810   +          +     1.51664080485047 * GRP_MntFishProducts9
1133811   +          +     -1.2348175966111 * GRP_MntFishProducts10
1133812   +          +     0.84388560297705 * GRP_MntGoldProds2
1133813   +          +     0.21507152885146 * GRP_MntGoldProds3
1133814   +          +    -0.15826409097881 * GRP_MntGoldProds4
1133815   +          +    -2.20608646296521 * GRP_MntGoldProds5
1133816   +          +    -0.36898605604248 * GRP_MntGoldProds6
1133817   +          +     0.80401593320079 * GRP_MntGoldProds7
1133818   +          +     -0.0928561699183 * GRP_MntGoldProds8
1133819   +          +    -0.76260849885604 * GRP_MntGoldProds9
1133820   +          +     0.41599883721366 * GRP_MntGoldProds10
1133821   +          +    -0.58540441202927 * GRP_MntMeatProducts2
1133822   +          +     0.53713605550175 * GRP_MntMeatProducts3
1133823   +          +    -0.65152621681077 * GRP_MntMeatProducts4
1133824   +          +    -0.69756285035088 * GRP_MntMeatProducts5
1133825   +          +     0.05767888263587 * GRP_MntMeatProducts6
1133826   +          +     -0.1888350635322 * GRP_MntMeatProducts7
1133827   +          +     0.19414921399907 * GRP_MntMeatProducts8
1133828   +          +    -1.72928794783971 * GRP_MntMeatProducts9
1133829   +          +     -0.4799288615181 * GRP_MntMeatProducts10
1133830   +          +    -0.68909946079146 * GRP_MntSweetProducts3
1133831   +          +     0.63891877698479 * GRP_MntSweetProducts4
1133832   +          +     0.57432083655993 * GRP_MntSweetProducts5
1133833   +          +    -0.58035522854804 * GRP_MntSweetProducts6
1133834   +          +       1.935803556079 * GRP_MntSweetProducts7
1133835   +          +     0.18629207650306 * GRP_MntSweetProducts8
1133836   +          +     0.00378347159862 * GRP_MntSweetProducts9
1133837   +          +     1.81075447841433 * GRP_MntSweetProducts10
1133838   +          +    -0.19044365625491 * GRP_MntWines2  +     -0.2677543994646 *
1133839   +        GRP_MntWines3  +     0.68523737842149 * GRP_MntWines4
1133840   +          +     0.28487452840765 * GRP_MntWines5  +    -0.32830007597399 *
1133841   +        GRP_MntWines6  +    -1.01109771829124 * GRP_MntWines7
1133842   +          +    -0.44351213929191 * GRP_MntWines8  +    -0.79170922676093 *
1133843   +        GRP_MntWines9  +    -0.65765490294224 * GRP_MntWines10
1133844   +          +     0.35708705290413 * GRP_NumCatalogPurchases3
1133845   +          +     0.57640598587175 * GRP_NumCatalogPurchases4
1133846   +          +      1.0380514084777 * GRP_NumCatalogPurchases5
1133847   +          +    -0.21526014109961 * GRP_NumCatalogPurchases6
1133848   +          +     0.21188563678996 * GRP_NumCatalogPurchases7
1133849   +          +     0.92069365116707 * GRP_NumDistPurchases2
1133850   +          +    -1.32849502144337 * GRP_NumDistPurchases3
1133851   +          +     0.70446398487953 * GRP_NumDistPurchases4
1133852   +          +    -0.57133137108926 * GRP_NumDistPurchases5
1133853   +          +    -0.82186404546977 * GRP_NumDistPurchases6
1133854   +          +     0.46329271267276 * GRP_NumDistPurchases7
1133855   +          +    -0.66807540291648 * GRP_NumDistPurchases8
1133856   +          +    -1.44336206173897 * GRP_NumDistPurchases9
1133857   +          +    -1.13977568624017 * GRP_NumDistPurchases10
1133858   +          +    -1.70104902572474 * GRP_NumWebPurchases2
1133859   +          +     1.02036350016006 * GRP_NumWebPurchases3
1133860   +          +     0.39753119384781 * GRP_NumWebPurchases4
1133861   +          +     -1.0013941887276 * GRP_NumWebPurchases5
1133862   +          +    -1.86464684445185 * GRP_NumWebPurchases6
1133863   +          +    -0.34858626425799 * GRP_NumWebPurchases7
1133864   +          +    -1.44547405446756 * GRP_NumWebPurchases8
1133865   +          +     0.05140836436438 * GRP_NumWebVisitsMonth2
1133866   +          +     0.24015379584676 * GRP_NumWebVisitsMonth3
1133867   +          +    -0.49517632469744 * GRP_NumWebVisitsMonth4
1133868   +          +    -1.43605492927257 * GRP_NumWebVisitsMonth5
1133869   +          +     0.60170726736208 * GRP_NumWebVisitsMonth6
1133870   +          +     0.63411609486483 * GRP_NumWebVisitsMonth7
1133871   +          +     -1.2126844839861 * GRP_NumWebVisitsMonth8
1133872   +          +    -0.64965441128326 * GRP_RFMstat2  +     0.34697568605896 *
1133873   +        GRP_RFMstat3  +    -0.43341862711381 * GRP_RFMstat4
1133874   +          +     1.06858029248659 * GRP_RFMstat5  +    -0.56457302770384 *
1133875   +        GRP_RFMstat6  +     1.66706381189326 * GRP_RFMstat7
1133876   +          +    -2.17135319116775 * GRP_RFMstat8  +    -0.21450659726193 *
1133877   +        GRP_RFMstat9  +    -0.31077905350474 * GRP_RFMstat10
1133878   +          +      0.2192436825917 * GRP_RMntFrq2  +     1.83372548820854 *
1133879   +        GRP_RMntFrq3  +    -0.11145697947633 * GRP_RMntFrq4
1133880   +          +     0.55148891791064 * GRP_RMntFrq5  +     0.59018223296027 *
1133881   +        GRP_RMntFrq6  +    -1.05010790826944 * GRP_RMntFrq7
1133882   +          +     0.52934032045284 * GRP_RMntFrq8  +      0.2953493263513 *
1133883   +        GRP_RMntFrq9  +     -1.5124212512629 * GRP_RMntFrq10
1133884   +          +    -0.25342816485434 * GRP_Recency2  +    -1.06632533875501 *
1133885   +        GRP_Recency3  +     0.92243866019235 * GRP_Recency4
1133886   +          +    -0.69765274503358 * GRP_Recency5  +    -1.03684525826147 *
1133887   +        GRP_Recency6  +     0.92907236967862 * GRP_Recency7
1133888   +          +     0.67510319128245 * GRP_Recency8  +    -0.12563628417614 *
1133889   +        GRP_Recency9  +     0.22617805549496 * GRP_Recency10 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -1.03985555112012 * GRP_AcceptedCmp52 +
0.25775857203989 * GRP_AcceptedCmpTotal3 + -0.71156531868268 * GRP_Frq2 + 0.67259022689422 *
GRP_Frq3 + -1.97845323119706 * GRP_Frq4 + -1.52930723846502 * GRP_Frq5 + 0.28107074664618 *
GRP_Frq6 + 1.14326791621936 * GRP_Frq7 + -1.22814850699575 * GRP_Frq8 + -0.1984823170485 *
GRP_Frq9 + 1.55339967620915 * GRP_Frq10 + 0.40856006828913 * GRP_Income2 + -0.24937432220747 *
GRP_Income3 + 0.77178170458781 * GRP_Income4 + -0.1042181149455 * GRP_Income5 +
0.83921353126936 * GRP_Income6 + 0.42897985145162 * GRP_Income7 + -0.99399816643537 *
GRP_Income8 + 1.43456355062073 * GRP_Income9 + 2.0557598827554 * GRP_Income10 +
0.53153636588135 * GRP_Mnt2 + 1.4499127888941 * GRP_Mnt3 + -1.79642136320056 * GRP_Mnt4 +
0.23742732777127 * GRP_Mnt5 + 0.66365989150128 * GRP_Mnt6 + -2.42545477483083 * GRP_Mnt7 +
-2.06918742851762 * GRP_Mnt8 + 0.39193343300266 * GRP_Mnt9 + -0.68271160013302 * GRP_Mnt10 +
-0.40413771106033 * GRP_MntFishProducts3 + 1.62536744100755 * GRP_MntFishProducts4 +
1.00956771804097 * GRP_MntFishProducts5 + -0.04807563648335 * GRP_MntFishProducts6 +
-0.27640554543874 * GRP_MntFishProducts7 + -0.09019675678864 * GRP_MntFishProducts8 +
1.51664080485047 * GRP_MntFishProducts9 + -1.2348175966111 * GRP_MntFishProducts10 +
0.84388560297705 * GRP_MntGoldProds2 + 0.21507152885146 * GRP_MntGoldProds3 +
-0.15826409097881 * GRP_MntGoldProds4 + -2.20608646296521 * GRP_MntGoldProds5 +
-0.36898605604248 * GRP_MntGoldProds6 + 0.80401593320079 * GRP_MntGoldProds7 +
-0.0928561699183 * GRP_MntGoldProds8 + -0.76260849885604 * GRP_MntGoldProds9 +
0.41599883721366 * GRP_MntGoldProds10 + -0.58540441202927 * GRP_MntMeatProducts2 +
0.53713605550175 * GRP_MntMeatProducts3 + -0.65152621681077 * GRP_MntMeatProducts4 +
-0.69756285035088 * GRP_MntMeatProducts5 + 0.05767888263587 * GRP_MntMeatProducts6 +
-0.1888350635322 * GRP_MntMeatProducts7 + 0.19414921399907 * GRP_MntMeatProducts8 +
-1.72928794783971 * GRP_MntMeatProducts9 + -0.4799288615181 * GRP_MntMeatProducts10 +
-0.68909946079146 * GRP_MntSweetProducts3 + 0.63891877698479 * GRP_MntSweetProducts4 +
0.57432083655993 * GRP_MntSweetProducts5 + -0.58035522854804 * GRP_MntSweetProducts6 +
1.935803556079 * GRP_MntSweetProducts7 + 0.18629207650306 * GRP_MntSweetProducts8 +
0.00378347159862 * GRP_MntSweetProducts9 + 1.81075447841433 * GRP_MntSweetProducts10 +
-0.19044365625491 * GRP_MntWines2 + -0.2677543994646 * GRP_MntWines3 + 0.68523737842149 *
GRP_MntWines4 + 0.28487452840765 * GRP_MntWines5 + -0.32830007597399 * GRP_MntWines6 +
-1.01109771829124 * GRP_MntWines7 + -0.44351213929191 * GRP_MntWines8 + -0.79170922676093 *
GRP_MntWines9 + -0.65765490294224 * GRP_MntWines10 + 0.35708705290413 *
GRP_NumCatalogPurchases3 + 0.57640598587175 * GRP_NumCatalogPurchases4 + 1.0380514084777 *
GRP_NumCatalogPurchases5 + -0.21526014109961 * GRP_NumCatalogPurchases6 + 0.21188563678996 *
GRP_NumCatalogPurchases7 + 0.92069365116707 * GRP_NumDistPurchases2 + -1.32849502144337 *
GRP_NumDistPurchases3 + 0.70446398487953 * GRP_NumDistPurchases4 + -0.57133137108926 *
GRP_NumDistPurchases5 + -0.82186404546977 * GRP_NumDistPurchases6 + 0.46329271267276 *
GRP_NumDistPurchases7 + -0.66807540291648 * GRP_NumDistPurchases8 + -1.44336206173897 *
GRP_NumDistPurchases9 + -1.13977568624017 * GRP_NumDistPurchases10 + -1.70104902572474 *
GRP_NumWebPurchases2 + 1.02036350016006 * GRP_NumWebPurchases3 + 0.39753119384781 *
GRP_NumWebPurchases4 + -1.0013941887276 * GRP_NumWebPurchases5 + -1.86464684445185 *
GRP_NumWebPurchases6 + -0.34858626425799 * GRP_NumWebPurchases7 + -1.44547405446756 *
GRP_NumWebPurchases8 + 0.05140836436438 * GRP_NumWebVisitsMonth2 + 0.24015379584676 *
GRP_NumWebVisitsMonth3 + -0.49517632469744 * GRP_NumWebVisitsMonth4 + -1.43605492927257 *
GRP_NumWebVisitsMonth5 + 0.60170726736208 * GRP_NumWebVisitsMonth6 + 0.63411609486483 *
GRP_NumWebVisitsMonth7 + -1.2126844839861 * GRP_NumWebVisitsMonth8 + -0.64965441128326 *
GRP_RFMstat2 + 0.34697568605896 * GRP_RFMstat3 + -0.43341862711381 * GRP_RFMstat4 +
1.06858029248659 * GRP_RFMstat5 + -0.56457302770384 * GRP_RFMstat6 + 1.66706381189326 *
GRP_RFMstat7 + -2.17135319116775 * GRP_RFMstat8 + -0.21450659726193 * GRP_RFMstat9 +
-0.31077905350474 * GRP_RFMstat10 + 0.2192436825917 * GRP_RMntFrq2 + 1.83372548820854 *
GRP_RMntFrq3 + -0.11145697947633 * GRP_RMntFrq4 + 0.55148891791064 * GRP_RMntFrq5 +
0.59018223296027 * GRP_RMntFrq6 + -1.05010790826944 * GRP_RMntFrq7 + 0.52934032045284 *
GRP_RMntFrq8 + 0.2953493263513 * GRP_RMntFrq9 + -1.5124212512629 * GRP_RMntFrq10 +
-0.25342816485434 * GRP_Recency2 + -1.06632533875501 * GRP_Recency3 + 0.92243866019235 *
GRP_Recency4 + -0.69765274503358 * GRP_Recency5 + -1.03684525826147 * GRP_Recency6 +
0.92907236967862 * GRP_Recency7 + 0.67510319128245 * GRP_Recency8 + -0.12563628417614 *
GRP_Recency9 + 0.22617805549496 * GRP_Recency10 ;
1133890   +   H1x1_1  =     0.15531859064267 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.15531859064267 + H1x1_1 ;
1133891   +   H1x1_2  =     1.82135862068225 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.82135862068225 + H1x1_2 ;
1133892   +   H1x1_3  =      0.3038406758605 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.3038406758605 + H1x1_3 ;
1133893   +   H1x1_4  = 0;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0;
1133894   +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 );
1133895   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1133896   +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
1133897   +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
1133898   +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
1133899   +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
1133900   +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
1133901   +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
1133902   +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
1133903   +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
1133904   +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
1133905   +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
1133906   +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
1133907   +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
1133908   +END;
MPRINT(EM_DIAGRAM):   END;
1133909   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1133910   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
1133911   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
1133912   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
1133913   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
1133914   +END;
MPRINT(EM_DIAGRAM):   END;
1133915   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1133916   +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
1133917   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1133918   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1133919   +   H1x2_1  =    -1.12587004977911 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -1.12587004977911 * S_Year_Birth ;
1133920   +   H1x2_2  =     1.95303306784814 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 1.95303306784814 * S_Year_Birth ;
1133921   +   H1x2_3  =    -0.90076896361071 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.90076896361071 * S_Year_Birth ;
1133922   +   H1x2_1  = H1x2_1  +    -0.79126569643619 * GRP_AcceptedCmp52
1133923   +          +     1.43306912145272 * GRP_AcceptedCmpTotal3
1133924   +          +     1.22454618925923 * GRP_Frq2  +    -1.05161181420251 * GRP_Frq3
1133925   +          +     0.18863611173949 * GRP_Frq4  +    -1.53183971921525 * GRP_Frq5
1133926   +          +    -2.01595133665319 * GRP_Frq6  +     -1.0035007257827 * GRP_Frq7
1133927   +          +     0.15713490969217 * GRP_Frq8  +    -0.83347236903779 * GRP_Frq9
1133928   +          +     0.29577012385785 * GRP_Frq10  +    -0.62392105819131 *
1133929   +        GRP_Income2  +     0.50038805154482 * GRP_Income3
1133930   +          +    -3.13357648186361 * GRP_Income4  +     0.10711964638702 *
1133931   +        GRP_Income5  +     0.09871993128645 * GRP_Income6
1133932   +          +     1.58783603619041 * GRP_Income7  +    -2.39170088940171 *
1133933   +        GRP_Income8  +     0.84317235077516 * GRP_Income9
1133934   +          +     0.21927112782838 * GRP_Income10  +     1.44688080741688 *
1133935   +        GRP_Mnt2  +     0.98559424831742 * GRP_Mnt3  +    -0.83479015994315 *
1133936   +        GRP_Mnt4  +    -1.25208462521822 * GRP_Mnt5  +      0.5659903070034 *
1133937   +        GRP_Mnt6  +      1.1919814928293 * GRP_Mnt7  +    -0.57500802418483 *
1133938   +        GRP_Mnt8  +     0.01798716798387 * GRP_Mnt9  +     -0.9726123707811 *
1133939   +        GRP_Mnt10  +     -0.6415326473362 * GRP_MntFishProducts3
1133940   +          +    -0.10224099785309 * GRP_MntFishProducts4
1133941   +          +     0.72743835436702 * GRP_MntFishProducts5
1133942   +          +     0.29614489369863 * GRP_MntFishProducts6
1133943   +          +     1.63513523583267 * GRP_MntFishProducts7
1133944   +          +     2.82434082348947 * GRP_MntFishProducts8
1133945   +          +      0.5231937168513 * GRP_MntFishProducts9
1133946   +          +     0.55251870054858 * GRP_MntFishProducts10
1133947   +          +    -0.98753393210474 * GRP_MntGoldProds2
1133948   +          +     -0.1940135001606 * GRP_MntGoldProds3
1133949   +          +     0.91054070984291 * GRP_MntGoldProds4
1133950   +          +    -1.12994907018166 * GRP_MntGoldProds5
1133951   +          +     1.27179432245575 * GRP_MntGoldProds6
1133952   +          +     0.18442086794002 * GRP_MntGoldProds7
1133953   +          +     0.13785506159767 * GRP_MntGoldProds8
1133954   +          +     0.47959028032247 * GRP_MntGoldProds9
1133955   +          +     0.39229732865897 * GRP_MntGoldProds10
1133956   +          +     0.23926854234201 * GRP_MntMeatProducts2
1133957   +          +     0.85207763313609 * GRP_MntMeatProducts3
1133958   +          +     0.42240672557213 * GRP_MntMeatProducts4
1133959   +          +     1.34861801506289 * GRP_MntMeatProducts5
1133960   +          +    -1.90829994248939 * GRP_MntMeatProducts6
1133961   +          +    -1.20216774826328 * GRP_MntMeatProducts7
1133962   +          +     0.21149278031924 * GRP_MntMeatProducts8
1133963   +          +     0.56060387833343 * GRP_MntMeatProducts9
1133964   +          +     0.08240378464729 * GRP_MntMeatProducts10
1133965   +          +     0.16630337453841 * GRP_MntSweetProducts3
1133966   +          +    -0.76600764359826 * GRP_MntSweetProducts4
1133967   +          +     1.50792024107994 * GRP_MntSweetProducts5
1133968   +          +     1.43253580615881 * GRP_MntSweetProducts6
1133969   +          +     0.21920103392576 * GRP_MntSweetProducts7
1133970   +          +    -0.17220433340388 * GRP_MntSweetProducts8
1133971   +          +    -0.27184415375521 * GRP_MntSweetProducts9
1133972   +          +     1.06559352978761 * GRP_MntSweetProducts10
1133973   +          +      0.3638071493651 * GRP_MntWines2  +    -1.03089735689723 *
1133974   +        GRP_MntWines3  +    -0.28348074712993 * GRP_MntWines4
1133975   +          +    -1.16208580461502 * GRP_MntWines5  +     0.05256517522541 *
1133976   +        GRP_MntWines6  +    -3.45408294270214 * GRP_MntWines7
1133977   +          +     -1.3283333848315 * GRP_MntWines8  +    -0.31095479430398 *
1133978   +        GRP_MntWines9  +     0.15559494113085 * GRP_MntWines10
1133979   +          +     0.43779353849058 * GRP_NumCatalogPurchases3
1133980   +          +    -0.91049921837605 * GRP_NumCatalogPurchases4
1133981   +          +    -0.62690332918044 * GRP_NumCatalogPurchases5
1133982   +          +    -0.43739432912503 * GRP_NumCatalogPurchases6
1133983   +          +     0.16278086436799 * GRP_NumCatalogPurchases7
1133984   +          +     0.35715282562267 * GRP_NumDistPurchases2
1133985   +          +     1.84468920663071 * GRP_NumDistPurchases3
1133986   +          +    -2.73925942945889 * GRP_NumDistPurchases4
1133987   +          +     0.59074278753284 * GRP_NumDistPurchases5
1133988   +          +    -0.29365199688931 * GRP_NumDistPurchases6
1133989   +          +    -1.16685203020069 * GRP_NumDistPurchases7
1133990   +          +     -0.7875731631251 * GRP_NumDistPurchases8
1133991   +          +    -1.10510861301954 * GRP_NumDistPurchases9
1133992   +          +    -0.03346524636684 * GRP_NumDistPurchases10
1133993   +          +    -0.85072273160097 * GRP_NumWebPurchases2
1133994   +          +     0.90393600640139 * GRP_NumWebPurchases3
1133995   +          +    -0.25391465775867 * GRP_NumWebPurchases4
1133996   +          +     1.40214100313324 * GRP_NumWebPurchases5
1133997   +          +     0.50386388744504 * GRP_NumWebPurchases6
1133998   +          +    -0.38538022046144 * GRP_NumWebPurchases7
1133999   +          +    -0.90483081808977 * GRP_NumWebPurchases8
1134000   +          +    -0.63366478324154 * GRP_NumWebVisitsMonth2
1134001   +          +    -1.41147267846877 * GRP_NumWebVisitsMonth3
1134002   +          +     1.96455239930015 * GRP_NumWebVisitsMonth4
1134003   +          +     1.74571803237503 * GRP_NumWebVisitsMonth5
1134004   +          +     1.08303441803169 * GRP_NumWebVisitsMonth6
1134005   +          +     0.08841803401126 * GRP_NumWebVisitsMonth7
1134006   +          +     1.38561551238731 * GRP_NumWebVisitsMonth8
1134007   +          +     0.42159527214144 * GRP_RFMstat2  +     0.39205646681751 *
1134008   +        GRP_RFMstat3  +    -2.50004006229316 * GRP_RFMstat4
1134009   +          +     0.24218846060019 * GRP_RFMstat5  +    -0.52013661702385 *
1134010   +        GRP_RFMstat6  +     2.09715348886186 * GRP_RFMstat7
1134011   +          +     1.17945186200384 * GRP_RFMstat8  +    -0.19936602116765 *
1134012   +        GRP_RFMstat9  +     1.55749736422931 * GRP_RFMstat10
1134013   +          +     0.26371295729234 * GRP_RMntFrq2  +     0.21256291633719 *
1134014   +        GRP_RMntFrq3  +     1.61594740267638 * GRP_RMntFrq4
1134015   +          +     0.40518302938557 * GRP_RMntFrq5  +    -0.39917281851837 *
1134016   +        GRP_RMntFrq6  +     -0.4628652915326 * GRP_RMntFrq7
1134017   +          +    -0.38905036918399 * GRP_RMntFrq8  +    -2.18723781804534 *
1134018   +        GRP_RMntFrq9  +    -0.56209811155219 * GRP_RMntFrq10
1134019   +          +    -0.21941631743981 * GRP_Recency2  +     0.62365652451736 *
1134020   +        GRP_Recency3  +     0.16890109579365 * GRP_Recency4
1134021   +          +     1.18652000001776 * GRP_Recency5  +      1.2800112939146 *
1134022   +        GRP_Recency6  +     1.11205915793382 * GRP_Recency7
1134023   +          +    -0.01678209606086 * GRP_Recency8  +    -0.49049076797222 *
1134024   +        GRP_Recency9  +     -0.3017614099326 * GRP_Recency10 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.79126569643619 * GRP_AcceptedCmp52 +
1.43306912145272 * GRP_AcceptedCmpTotal3 + 1.22454618925923 * GRP_Frq2 + -1.05161181420251 *
GRP_Frq3 + 0.18863611173949 * GRP_Frq4 + -1.53183971921525 * GRP_Frq5 + -2.01595133665319 *
GRP_Frq6 + -1.0035007257827 * GRP_Frq7 + 0.15713490969217 * GRP_Frq8 + -0.83347236903779 *
GRP_Frq9 + 0.29577012385785 * GRP_Frq10 + -0.62392105819131 * GRP_Income2 + 0.50038805154482 *
GRP_Income3 + -3.13357648186361 * GRP_Income4 + 0.10711964638702 * GRP_Income5 +
0.09871993128645 * GRP_Income6 + 1.58783603619041 * GRP_Income7 + -2.39170088940171 *
GRP_Income8 + 0.84317235077516 * GRP_Income9 + 0.21927112782838 * GRP_Income10 +
1.44688080741688 * GRP_Mnt2 + 0.98559424831742 * GRP_Mnt3 + -0.83479015994315 * GRP_Mnt4 +
-1.25208462521822 * GRP_Mnt5 + 0.5659903070034 * GRP_Mnt6 + 1.1919814928293 * GRP_Mnt7 +
-0.57500802418483 * GRP_Mnt8 + 0.01798716798387 * GRP_Mnt9 + -0.9726123707811 * GRP_Mnt10 +
-0.6415326473362 * GRP_MntFishProducts3 + -0.10224099785309 * GRP_MntFishProducts4 +
0.72743835436702 * GRP_MntFishProducts5 + 0.29614489369863 * GRP_MntFishProducts6 +
1.63513523583267 * GRP_MntFishProducts7 + 2.82434082348947 * GRP_MntFishProducts8 +
0.5231937168513 * GRP_MntFishProducts9 + 0.55251870054858 * GRP_MntFishProducts10 +
-0.98753393210474 * GRP_MntGoldProds2 + -0.1940135001606 * GRP_MntGoldProds3 +
0.91054070984291 * GRP_MntGoldProds4 + -1.12994907018166 * GRP_MntGoldProds5 +
1.27179432245575 * GRP_MntGoldProds6 + 0.18442086794002 * GRP_MntGoldProds7 + 0.13785506159767
* GRP_MntGoldProds8 + 0.47959028032247 * GRP_MntGoldProds9 + 0.39229732865897 *
GRP_MntGoldProds10 + 0.23926854234201 * GRP_MntMeatProducts2 + 0.85207763313609 *
GRP_MntMeatProducts3 + 0.42240672557213 * GRP_MntMeatProducts4 + 1.34861801506289 *
GRP_MntMeatProducts5 + -1.90829994248939 * GRP_MntMeatProducts6 + -1.20216774826328 *
GRP_MntMeatProducts7 + 0.21149278031924 * GRP_MntMeatProducts8 + 0.56060387833343 *
GRP_MntMeatProducts9 + 0.08240378464729 * GRP_MntMeatProducts10 + 0.16630337453841 *
GRP_MntSweetProducts3 + -0.76600764359826 * GRP_MntSweetProducts4 + 1.50792024107994 *
GRP_MntSweetProducts5 + 1.43253580615881 * GRP_MntSweetProducts6 + 0.21920103392576 *
GRP_MntSweetProducts7 + -0.17220433340388 * GRP_MntSweetProducts8 + -0.27184415375521 *
GRP_MntSweetProducts9 + 1.06559352978761 * GRP_MntSweetProducts10 + 0.3638071493651 *
GRP_MntWines2 + -1.03089735689723 * GRP_MntWines3 + -0.28348074712993 * GRP_MntWines4 +
-1.16208580461502 * GRP_MntWines5 + 0.05256517522541 * GRP_MntWines6 + -3.45408294270214 *
GRP_MntWines7 + -1.3283333848315 * GRP_MntWines8 + -0.31095479430398 * GRP_MntWines9 +
0.15559494113085 * GRP_MntWines10 + 0.43779353849058 * GRP_NumCatalogPurchases3 +
-0.91049921837605 * GRP_NumCatalogPurchases4 + -0.62690332918044 * GRP_NumCatalogPurchases5 +
-0.43739432912503 * GRP_NumCatalogPurchases6 + 0.16278086436799 * GRP_NumCatalogPurchases7 +
0.35715282562267 * GRP_NumDistPurchases2 + 1.84468920663071 * GRP_NumDistPurchases3 +
-2.73925942945889 * GRP_NumDistPurchases4 + 0.59074278753284 * GRP_NumDistPurchases5 +
-0.29365199688931 * GRP_NumDistPurchases6 + -1.16685203020069 * GRP_NumDistPurchases7 +
-0.7875731631251 * GRP_NumDistPurchases8 + -1.10510861301954 * GRP_NumDistPurchases9 +
-0.03346524636684 * GRP_NumDistPurchases10 + -0.85072273160097 * GRP_NumWebPurchases2 +
0.90393600640139 * GRP_NumWebPurchases3 + -0.25391465775867 * GRP_NumWebPurchases4 +
1.40214100313324 * GRP_NumWebPurchases5 + 0.50386388744504 * GRP_NumWebPurchases6 +
-0.38538022046144 * GRP_NumWebPurchases7 + -0.90483081808977 * GRP_NumWebPurchases8 +
-0.63366478324154 * GRP_NumWebVisitsMonth2 + -1.41147267846877 * GRP_NumWebVisitsMonth3 +
1.96455239930015 * GRP_NumWebVisitsMonth4 + 1.74571803237503 * GRP_NumWebVisitsMonth5 +
1.08303441803169 * GRP_NumWebVisitsMonth6 + 0.08841803401126 * GRP_NumWebVisitsMonth7 +
1.38561551238731 * GRP_NumWebVisitsMonth8 + 0.42159527214144 * GRP_RFMstat2 + 0.39205646681751
* GRP_RFMstat3 + -2.50004006229316 * GRP_RFMstat4 + 0.24218846060019 * GRP_RFMstat5 +
-0.52013661702385 * GRP_RFMstat6 + 2.09715348886186 * GRP_RFMstat7 + 1.17945186200384 *
GRP_RFMstat8 + -0.19936602116765 * GRP_RFMstat9 + 1.55749736422931 * GRP_RFMstat10 +
0.26371295729234 * GRP_RMntFrq2 + 0.21256291633719 * GRP_RMntFrq3 + 1.61594740267638 *
GRP_RMntFrq4 + 0.40518302938557 * GRP_RMntFrq5 + -0.39917281851837 * GRP_RMntFrq6 +
-0.4628652915326 * GRP_RMntFrq7 + -0.38905036918399 * GRP_RMntFrq8 + -2.18723781804534 *
GRP_RMntFrq9 + -0.56209811155219 * GRP_RMntFrq10 + -0.21941631743981 * GRP_Recency2 +
0.62365652451736 * GRP_Recency3 + 0.16890109579365 * GRP_Recency4 + 1.18652000001776 *
GRP_Recency5 + 1.2800112939146 * GRP_Recency6 + 1.11205915793382 * GRP_Recency7 +
-0.01678209606086 * GRP_Recency8 + -0.49049076797222 * GRP_Recency9 + -0.3017614099326 *
GRP_Recency10 ;
1134025   +   H1x2_2  = H1x2_2  +     0.67398933015706 * GRP_AcceptedCmp52
1134026   +          +     -0.8751453503824 * GRP_AcceptedCmpTotal3
1134027   +          +    -0.39482876732264 * GRP_Frq2  +     1.47757467388321 * GRP_Frq3
1134028   +          +     1.83867441067752 * GRP_Frq4  +    -0.44009343778503 * GRP_Frq5
1134029   +          +     1.79969806004367 * GRP_Frq6  +    -0.73760862560354 * GRP_Frq7
1134030   +          +    -0.27901106932898 * GRP_Frq8  +     -0.2579404478755 * GRP_Frq9
1134031   +          +     0.92818121440017 * GRP_Frq10  +     1.23619934553523 *
1134032   +        GRP_Income2  +    -0.75075854848504 * GRP_Income3
1134033   +          +      2.6356052001789 * GRP_Income4  +     0.37936058080477 *
1134034   +        GRP_Income5  +    -0.20967950465903 * GRP_Income6
1134035   +          +     0.99334907985914 * GRP_Income7  +    -0.08920239779189 *
1134036   +        GRP_Income8  +    -0.22578219454998 * GRP_Income9
1134037   +          +     2.34062669066844 * GRP_Income10  +     1.22929044941773 *
1134038   +        GRP_Mnt2  +     0.14397695972183 * GRP_Mnt3  +     0.51032665988083 *
1134039   +        GRP_Mnt4  +    -1.38153126365165 * GRP_Mnt5  +     1.63106485668984 *
1134040   +        GRP_Mnt6  +     0.66336076908093 * GRP_Mnt7  +    -1.74416183994338 *
1134041   +        GRP_Mnt8  +     0.26066677250535 * GRP_Mnt9  +      0.3077437522773 *
1134042   +        GRP_Mnt10  +     0.31536873558672 * GRP_MntFishProducts3
1134043   +          +    -0.76193578413236 * GRP_MntFishProducts4
1134044   +          +     0.26441683863806 * GRP_MntFishProducts5
1134045   +          +    -1.13218530156836 * GRP_MntFishProducts6
1134046   +          +    -1.75837301022941 * GRP_MntFishProducts7
1134047   +          +    -0.60984304748028 * GRP_MntFishProducts8
1134048   +          +     0.02475727805659 * GRP_MntFishProducts9
1134049   +          +    -1.33855779072481 * GRP_MntFishProducts10
1134050   +          +    -1.92410927496765 * GRP_MntGoldProds2
1134051   +          +     1.37957021991927 * GRP_MntGoldProds3
1134052   +          +     -1.1577166761956 * GRP_MntGoldProds4
1134053   +          +     1.17595415699299 * GRP_MntGoldProds5
1134054   +          +    -1.44888413734615 * GRP_MntGoldProds6
1134055   +          +     -0.6269952213199 * GRP_MntGoldProds7
1134056   +          +     2.05006558590766 * GRP_MntGoldProds8
1134057   +          +       0.105525514708 * GRP_MntGoldProds9
1134058   +          +    -0.67797887575985 * GRP_MntGoldProds10
1134059   +          +     2.31770696034252 * GRP_MntMeatProducts2
1134060   +          +    -0.76500299288116 * GRP_MntMeatProducts3
1134061   +          +    -0.08828598934539 * GRP_MntMeatProducts4
1134062   +          +    -0.02140592940052 * GRP_MntMeatProducts5
1134063   +          +     1.03141631738102 * GRP_MntMeatProducts6
1134064   +          +     0.38981881043903 * GRP_MntMeatProducts7
1134065   +          +     0.40533105938471 * GRP_MntMeatProducts8
1134066   +          +     -0.3745105385612 * GRP_MntMeatProducts9
1134067   +          +    -1.05280123780042 * GRP_MntMeatProducts10
1134068   +          +    -0.65620511867931 * GRP_MntSweetProducts3
1134069   +          +     1.21474510355056 * GRP_MntSweetProducts4
1134070   +          +    -1.25507723676387 * GRP_MntSweetProducts5
1134071   +          +     0.92194675503686 * GRP_MntSweetProducts6
1134072   +          +     0.24570791052404 * GRP_MntSweetProducts7
1134073   +          +    -0.65553994719174 * GRP_MntSweetProducts8
1134074   +          +    -0.92841570255174 * GRP_MntSweetProducts9
1134075   +          +     0.30873152061447 * GRP_MntSweetProducts10
1134076   +          +      -0.076966369313 * GRP_MntWines2  +     -1.0025350275284 *
1134077   +        GRP_MntWines3  +     0.62441192788771 * GRP_MntWines4
1134078   +          +    -0.21651325463938 * GRP_MntWines5  +    -1.28062431918087 *
1134079   +        GRP_MntWines6  +     0.69883808355517 * GRP_MntWines7
1134080   +          +    -0.05950002086458 * GRP_MntWines8  +    -1.10191079055508 *
1134081   +        GRP_MntWines9  +     0.63137280145547 * GRP_MntWines10
1134082   +          +     0.76262347276195 * GRP_NumCatalogPurchases3
1134083   +          +     0.27178684022178 * GRP_NumCatalogPurchases4
1134084   +          +      0.7925446848717 * GRP_NumCatalogPurchases5
1134085   +          +     1.31986309150149 * GRP_NumCatalogPurchases6
1134086   +          +     0.13154865053956 * GRP_NumCatalogPurchases7
1134087   +          +     0.90300521816676 * GRP_NumDistPurchases2
1134088   +          +    -1.08143603674908 * GRP_NumDistPurchases3
1134089   +          +     1.45290495686195 * GRP_NumDistPurchases4
1134090   +          +    -0.27200074304672 * GRP_NumDistPurchases5
1134091   +          +    -1.22641713762099 * GRP_NumDistPurchases6
1134092   +          +     0.59896437874483 * GRP_NumDistPurchases7
1134093   +          +    -1.27615643084203 * GRP_NumDistPurchases8
1134094   +          +     1.56986239933089 * GRP_NumDistPurchases9
1134095   +          +     0.25700981555502 * GRP_NumDistPurchases10
1134096   +          +    -0.00592602966853 * GRP_NumWebPurchases2
1134097   +          +     -0.1326853227988 * GRP_NumWebPurchases3
1134098   +          +     -0.2104875425464 * GRP_NumWebPurchases4
1134099   +          +    -0.37786922546668 * GRP_NumWebPurchases5
1134100   +          +    -2.31891994594655 * GRP_NumWebPurchases6
1134101   +          +     0.21244077840762 * GRP_NumWebPurchases7
1134102   +          +     0.20544153361165 * GRP_NumWebPurchases8
1134103   +          +     0.25466867279004 * GRP_NumWebVisitsMonth2
1134104   +          +     0.27188060033621 * GRP_NumWebVisitsMonth3
1134105   +          +    -0.95934500827979 * GRP_NumWebVisitsMonth4
1134106   +          +     -1.0658065247518 * GRP_NumWebVisitsMonth5
1134107   +          +     0.29606991820625 * GRP_NumWebVisitsMonth6
1134108   +          +     1.39148292787476 * GRP_NumWebVisitsMonth7
1134109   +          +    -0.89682418536404 * GRP_NumWebVisitsMonth8
1134110   +          +    -0.29501845280237 * GRP_RFMstat2  +    -1.62706110727439 *
1134111   +        GRP_RFMstat3  +    -0.05816762603923 * GRP_RFMstat4
1134112   +          +     0.14056517927553 * GRP_RFMstat5  +     0.16264724605568 *
1134113   +        GRP_RFMstat6  +    -1.46819615066357 * GRP_RFMstat7
1134114   +          +    -3.13528696014007 * GRP_RFMstat8  +     0.01832687767367 *
1134115   +        GRP_RFMstat9  +     2.36690257733755 * GRP_RFMstat10
1134116   +          +     0.47170735684844 * GRP_RMntFrq2  +     0.76473788912988 *
1134117   +        GRP_RMntFrq3  +    -0.92101075362772 * GRP_RMntFrq4
1134118   +          +     0.42659547546303 * GRP_RMntFrq5  +    -0.39107990111087 *
1134119   +        GRP_RMntFrq6  +     1.22534154436379 * GRP_RMntFrq7
1134120   +          +     0.17325823510284 * GRP_RMntFrq8  +    -0.15337233078899 *
1134121   +        GRP_RMntFrq9  +     0.95961796320344 * GRP_RMntFrq10
1134122   +          +     0.78187566388581 * GRP_Recency2  +     0.32432493265807 *
1134123   +        GRP_Recency3  +    -0.36127769208093 * GRP_Recency4
1134124   +          +     0.49278466273238 * GRP_Recency5  +     1.02136259767421 *
1134125   +        GRP_Recency6  +     0.24565781332322 * GRP_Recency7
1134126   +          +    -0.01819850591897 * GRP_Recency8  +    -0.88865832552994 *
1134127   +        GRP_Recency9  +    -1.06023089287045 * GRP_Recency10 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 0.67398933015706 * GRP_AcceptedCmp52 +
-0.8751453503824 * GRP_AcceptedCmpTotal3 + -0.39482876732264 * GRP_Frq2 + 1.47757467388321 *
GRP_Frq3 + 1.83867441067752 * GRP_Frq4 + -0.44009343778503 * GRP_Frq5 + 1.79969806004367 *
GRP_Frq6 + -0.73760862560354 * GRP_Frq7 + -0.27901106932898 * GRP_Frq8 + -0.2579404478755 *
GRP_Frq9 + 0.92818121440017 * GRP_Frq10 + 1.23619934553523 * GRP_Income2 + -0.75075854848504 *
GRP_Income3 + 2.6356052001789 * GRP_Income4 + 0.37936058080477 * GRP_Income5 +
-0.20967950465903 * GRP_Income6 + 0.99334907985914 * GRP_Income7 + -0.08920239779189 *
GRP_Income8 + -0.22578219454998 * GRP_Income9 + 2.34062669066844 * GRP_Income10 +
1.22929044941773 * GRP_Mnt2 + 0.14397695972183 * GRP_Mnt3 + 0.51032665988083 * GRP_Mnt4 +
-1.38153126365165 * GRP_Mnt5 + 1.63106485668984 * GRP_Mnt6 + 0.66336076908093 * GRP_Mnt7 +
-1.74416183994338 * GRP_Mnt8 + 0.26066677250535 * GRP_Mnt9 + 0.3077437522773 * GRP_Mnt10 +
0.31536873558672 * GRP_MntFishProducts3 + -0.76193578413236 * GRP_MntFishProducts4 +
0.26441683863806 * GRP_MntFishProducts5 + -1.13218530156836 * GRP_MntFishProducts6 +
-1.75837301022941 * GRP_MntFishProducts7 + -0.60984304748028 * GRP_MntFishProducts8 +
0.02475727805659 * GRP_MntFishProducts9 + -1.33855779072481 * GRP_MntFishProducts10 +
-1.92410927496765 * GRP_MntGoldProds2 + 1.37957021991927 * GRP_MntGoldProds3 +
-1.1577166761956 * GRP_MntGoldProds4 + 1.17595415699299 * GRP_MntGoldProds5 +
-1.44888413734615 * GRP_MntGoldProds6 + -0.6269952213199 * GRP_MntGoldProds7 +
2.05006558590766 * GRP_MntGoldProds8 + 0.105525514708 * GRP_MntGoldProds9 + -0.67797887575985
* GRP_MntGoldProds10 + 2.31770696034252 * GRP_MntMeatProducts2 + -0.76500299288116 *
GRP_MntMeatProducts3 + -0.08828598934539 * GRP_MntMeatProducts4 + -0.02140592940052 *
GRP_MntMeatProducts5 + 1.03141631738102 * GRP_MntMeatProducts6 + 0.38981881043903 *
GRP_MntMeatProducts7 + 0.40533105938471 * GRP_MntMeatProducts8 + -0.3745105385612 *
GRP_MntMeatProducts9 + -1.05280123780042 * GRP_MntMeatProducts10 + -0.65620511867931 *
GRP_MntSweetProducts3 + 1.21474510355056 * GRP_MntSweetProducts4 + -1.25507723676387 *
GRP_MntSweetProducts5 + 0.92194675503686 * GRP_MntSweetProducts6 + 0.24570791052404 *
GRP_MntSweetProducts7 + -0.65553994719174 * GRP_MntSweetProducts8 + -0.92841570255174 *
GRP_MntSweetProducts9 + 0.30873152061447 * GRP_MntSweetProducts10 + -0.076966369313 *
GRP_MntWines2 + -1.0025350275284 * GRP_MntWines3 + 0.62441192788771 * GRP_MntWines4 +
-0.21651325463938 * GRP_MntWines5 + -1.28062431918087 * GRP_MntWines6 + 0.69883808355517 *
GRP_MntWines7 + -0.05950002086458 * GRP_MntWines8 + -1.10191079055508 * GRP_MntWines9 +
0.63137280145547 * GRP_MntWines10 + 0.76262347276195 * GRP_NumCatalogPurchases3 +
0.27178684022178 * GRP_NumCatalogPurchases4 + 0.7925446848717 * GRP_NumCatalogPurchases5 +
1.31986309150149 * GRP_NumCatalogPurchases6 + 0.13154865053956 * GRP_NumCatalogPurchases7 +
0.90300521816676 * GRP_NumDistPurchases2 + -1.08143603674908 * GRP_NumDistPurchases3 +
1.45290495686195 * GRP_NumDistPurchases4 + -0.27200074304672 * GRP_NumDistPurchases5 +
-1.22641713762099 * GRP_NumDistPurchases6 + 0.59896437874483 * GRP_NumDistPurchases7 +
-1.27615643084203 * GRP_NumDistPurchases8 + 1.56986239933089 * GRP_NumDistPurchases9 +
0.25700981555502 * GRP_NumDistPurchases10 + -0.00592602966853 * GRP_NumWebPurchases2 +
-0.1326853227988 * GRP_NumWebPurchases3 + -0.2104875425464 * GRP_NumWebPurchases4 +
-0.37786922546668 * GRP_NumWebPurchases5 + -2.31891994594655 * GRP_NumWebPurchases6 +
0.21244077840762 * GRP_NumWebPurchases7 + 0.20544153361165 * GRP_NumWebPurchases8 +
0.25466867279004 * GRP_NumWebVisitsMonth2 + 0.27188060033621 * GRP_NumWebVisitsMonth3 +
-0.95934500827979 * GRP_NumWebVisitsMonth4 + -1.0658065247518 * GRP_NumWebVisitsMonth5 +
0.29606991820625 * GRP_NumWebVisitsMonth6 + 1.39148292787476 * GRP_NumWebVisitsMonth7 +
-0.89682418536404 * GRP_NumWebVisitsMonth8 + -0.29501845280237 * GRP_RFMstat2 +
-1.62706110727439 * GRP_RFMstat3 + -0.05816762603923 * GRP_RFMstat4 + 0.14056517927553 *
GRP_RFMstat5 + 0.16264724605568 * GRP_RFMstat6 + -1.46819615066357 * GRP_RFMstat7 +
-3.13528696014007 * GRP_RFMstat8 + 0.01832687767367 * GRP_RFMstat9 + 2.36690257733755 *
GRP_RFMstat10 + 0.47170735684844 * GRP_RMntFrq2 + 0.76473788912988 * GRP_RMntFrq3 +
-0.92101075362772 * GRP_RMntFrq4 + 0.42659547546303 * GRP_RMntFrq5 + -0.39107990111087 *
GRP_RMntFrq6 + 1.22534154436379 * GRP_RMntFrq7 + 0.17325823510284 * GRP_RMntFrq8 +
-0.15337233078899 * GRP_RMntFrq9 + 0.95961796320344 * GRP_RMntFrq10 + 0.78187566388581 *
GRP_Recency2 + 0.32432493265807 * GRP_Recency3 + -0.36127769208093 * GRP_Recency4 +
0.49278466273238 * GRP_Recency5 + 1.02136259767421 * GRP_Recency6 + 0.24565781332322 *
GRP_Recency7 + -0.01819850591897 * GRP_Recency8 + -0.88865832552994 * GRP_Recency9 +
-1.06023089287045 * GRP_Recency10 ;
1134128   +   H1x2_3  = H1x2_3  +     0.72829233603077 * GRP_AcceptedCmp52
1134129   +          +    -0.64130750101094 * GRP_AcceptedCmpTotal3
1134130   +          +    -0.62578027971767 * GRP_Frq2  +    -1.71391822542149 * GRP_Frq3
1134131   +          +    -2.03690224986772 * GRP_Frq4  +     0.00250860268093 * GRP_Frq5
1134132   +          +     3.77431536270677 * GRP_Frq6  +    -0.98694179514917 * GRP_Frq7
1134133   +          +    -1.73466635264086 * GRP_Frq8  +    -0.55401738923895 * GRP_Frq9
1134134   +          +    -1.75356906289375 * GRP_Frq10  +     1.49171603856686 *
1134135   +        GRP_Income2  +     2.11511145525038 * GRP_Income3
1134136   +          +    -0.88783509763572 * GRP_Income4  +     0.16185380039783 *
1134137   +        GRP_Income5  +      0.4509467817404 * GRP_Income6
1134138   +          +     0.42854496757248 * GRP_Income7  +    -0.62868012410212 *
1134139   +        GRP_Income8  +    -1.38694404635062 * GRP_Income9
1134140   +          +    -0.74342405534619 * GRP_Income10  +     2.14444292945881 *
1134141   +        GRP_Mnt2  +    -1.40243675049805 * GRP_Mnt3  +     1.59454244242313 *
1134142   +        GRP_Mnt4  +     0.96363567691465 * GRP_Mnt5  +    -0.62891559534925 *
1134143   +        GRP_Mnt6  +    -0.28268355612216 * GRP_Mnt7  +     2.66118539089177 *
1134144   +        GRP_Mnt8  +    -1.43910408435818 * GRP_Mnt9  +     1.56729239602888 *
1134145   +        GRP_Mnt10  +     0.10200954846302 * GRP_MntFishProducts3
1134146   +          +     0.11287042668469 * GRP_MntFishProducts4
1134147   +          +    -0.89531289481293 * GRP_MntFishProducts5
1134148   +          +     0.08643547718119 * GRP_MntFishProducts6
1134149   +          +    -0.17770650235868 * GRP_MntFishProducts7
1134150   +          +    -1.30659888536456 * GRP_MntFishProducts8
1134151   +          +     2.06257011493102 * GRP_MntFishProducts9
1134152   +          +    -0.57535905840521 * GRP_MntFishProducts10
1134153   +          +     1.61685583269611 * GRP_MntGoldProds2
1134154   +          +     0.76201845089384 * GRP_MntGoldProds3
1134155   +          +    -0.20116109553599 * GRP_MntGoldProds4
1134156   +          +    -0.35354590570837 * GRP_MntGoldProds5
1134157   +          +    -0.07414881491148 * GRP_MntGoldProds6
1134158   +          +    -0.93265516833704 * GRP_MntGoldProds7
1134159   +          +     0.27562090724475 * GRP_MntGoldProds8
1134160   +          +     0.21497600131343 * GRP_MntGoldProds9
1134161   +          +    -1.31728109344577 * GRP_MntGoldProds10
1134162   +          +     2.04761490869712 * GRP_MntMeatProducts2
1134163   +          +    -1.25735539389252 * GRP_MntMeatProducts3
1134164   +          +     2.53856697441095 * GRP_MntMeatProducts4
1134165   +          +    -0.01594190004707 * GRP_MntMeatProducts5
1134166   +          +     2.15096647695357 * GRP_MntMeatProducts6
1134167   +          +     0.57494957107204 * GRP_MntMeatProducts7
1134168   +          +     2.00730679226119 * GRP_MntMeatProducts8
1134169   +          +    -0.71668533381607 * GRP_MntMeatProducts9
1134170   +          +     0.53556599855475 * GRP_MntMeatProducts10
1134171   +          +     1.54693619731858 * GRP_MntSweetProducts3
1134172   +          +    -0.74400819703128 * GRP_MntSweetProducts4
1134173   +          +    -1.02827729809733 * GRP_MntSweetProducts5
1134174   +          +    -0.23410492711421 * GRP_MntSweetProducts6
1134175   +          +    -1.04201907068576 * GRP_MntSweetProducts7
1134176   +          +    -1.60007026788916 * GRP_MntSweetProducts8
1134177   +          +    -2.09407617502035 * GRP_MntSweetProducts9
1134178   +          +    -0.26803603659514 * GRP_MntSweetProducts10
1134179   +          +    -1.71265459102005 * GRP_MntWines2  +     2.46887341207122 *
1134180   +        GRP_MntWines3  +     0.34837694975842 * GRP_MntWines4
1134181   +          +      0.7876281786545 * GRP_MntWines5  +    -0.30368035070812 *
1134182   +        GRP_MntWines6  +    -0.58629960316924 * GRP_MntWines7
1134183   +          +     1.95937960001866 * GRP_MntWines8  +    -0.25505243271449 *
1134184   +        GRP_MntWines9  +    -1.17987872337491 * GRP_MntWines10
1134185   +          +     0.22023604608467 * GRP_NumCatalogPurchases3
1134186   +          +    -2.56871980434954 * GRP_NumCatalogPurchases4
1134187   +          +    -1.44764737334028 * GRP_NumCatalogPurchases5
1134188   +          +     -0.2446195910135 * GRP_NumCatalogPurchases6
1134189   +          +     2.90538414905594 * GRP_NumCatalogPurchases7
1134190   +          +     0.88336976623421 * GRP_NumDistPurchases2
1134191   +          +     2.13942226719201 * GRP_NumDistPurchases3
1134192   +          +     1.34320499597894 * GRP_NumDistPurchases4
1134193   +          +    -1.51639001105393 * GRP_NumDistPurchases5
1134194   +          +     0.57368953355036 * GRP_NumDistPurchases6
1134195   +          +     0.70444554339708 * GRP_NumDistPurchases7
1134196   +          +     1.28554266385595 * GRP_NumDistPurchases8
1134197   +          +     1.37825141302574 * GRP_NumDistPurchases9
1134198   +          +    -1.43691218320245 * GRP_NumDistPurchases10
1134199   +          +    -0.66804085143805 * GRP_NumWebPurchases2
1134200   +          +     0.07392237122103 * GRP_NumWebPurchases3
1134201   +          +    -1.49905765103392 * GRP_NumWebPurchases4
1134202   +          +     -1.5187477833321 * GRP_NumWebPurchases5
1134203   +          +     0.48158072068531 * GRP_NumWebPurchases6
1134204   +          +     0.23079702131182 * GRP_NumWebPurchases7
1134205   +          +    -0.20622792691222 * GRP_NumWebPurchases8
1134206   +          +     0.30007609674528 * GRP_NumWebVisitsMonth2
1134207   +          +     1.12205187145706 * GRP_NumWebVisitsMonth3
1134208   +          +     0.51718549115979 * GRP_NumWebVisitsMonth4
1134209   +          +    -1.04703503782865 * GRP_NumWebVisitsMonth5
1134210   +          +     0.22390337037879 * GRP_NumWebVisitsMonth6
1134211   +          +    -0.18626487429236 * GRP_NumWebVisitsMonth7
1134212   +          +     1.57022893774879 * GRP_NumWebVisitsMonth8
1134213   +          +    -0.18955402131625 * GRP_RFMstat2  +     1.36375958279816 *
1134214   +        GRP_RFMstat3  +     0.69388690636651 * GRP_RFMstat4
1134215   +          +    -0.14096513433405 * GRP_RFMstat5  +     0.06232569479305 *
1134216   +        GRP_RFMstat6  +    -1.98686981980517 * GRP_RFMstat7
1134217   +          +    -0.04208886647313 * GRP_RFMstat8  +     0.13969094966118 *
1134218   +        GRP_RFMstat9  +    -0.78889510235752 * GRP_RFMstat10
1134219   +          +     0.00773524086935 * GRP_RMntFrq2  +     0.42760129795181 *
1134220   +        GRP_RMntFrq3  +     1.20654035825086 * GRP_RMntFrq4
1134221   +          +    -1.96326294005559 * GRP_RMntFrq5  +     0.19508572570635 *
1134222   +        GRP_RMntFrq6  +     0.64155838577241 * GRP_RMntFrq7
1134223   +          +     0.29646831812974 * GRP_RMntFrq8  +    -1.79415071937644 *
1134224   +        GRP_RMntFrq9  +     0.50025621373087 * GRP_RMntFrq10
1134225   +          +    -1.09969223947409 * GRP_Recency2  +     0.28522088439434 *
1134226   +        GRP_Recency3  +     0.00277105517522 * GRP_Recency4
1134227   +          +     0.84025488137705 * GRP_Recency5  +    -0.15771429015941 *
1134228   +        GRP_Recency6  +     0.60418796843171 * GRP_Recency7
1134229   +          +    -0.08237018446397 * GRP_Recency8  +    -0.48067966796564 *
1134230   +        GRP_Recency9  +     1.24119420047225 * GRP_Recency10 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 0.72829233603077 * GRP_AcceptedCmp52 +
-0.64130750101094 * GRP_AcceptedCmpTotal3 + -0.62578027971767 * GRP_Frq2 + -1.71391822542149 *
GRP_Frq3 + -2.03690224986772 * GRP_Frq4 + 0.00250860268093 * GRP_Frq5 + 3.77431536270677 *
GRP_Frq6 + -0.98694179514917 * GRP_Frq7 + -1.73466635264086 * GRP_Frq8 + -0.55401738923895 *
GRP_Frq9 + -1.75356906289375 * GRP_Frq10 + 1.49171603856686 * GRP_Income2 + 2.11511145525038 *
GRP_Income3 + -0.88783509763572 * GRP_Income4 + 0.16185380039783 * GRP_Income5 +
0.4509467817404 * GRP_Income6 + 0.42854496757248 * GRP_Income7 + -0.62868012410212 *
GRP_Income8 + -1.38694404635062 * GRP_Income9 + -0.74342405534619 * GRP_Income10 +
2.14444292945881 * GRP_Mnt2 + -1.40243675049805 * GRP_Mnt3 + 1.59454244242313 * GRP_Mnt4 +
0.96363567691465 * GRP_Mnt5 + -0.62891559534925 * GRP_Mnt6 + -0.28268355612216 * GRP_Mnt7 +
2.66118539089177 * GRP_Mnt8 + -1.43910408435818 * GRP_Mnt9 + 1.56729239602888 * GRP_Mnt10 +
0.10200954846302 * GRP_MntFishProducts3 + 0.11287042668469 * GRP_MntFishProducts4 +
-0.89531289481293 * GRP_MntFishProducts5 + 0.08643547718119 * GRP_MntFishProducts6 +
-0.17770650235868 * GRP_MntFishProducts7 + -1.30659888536456 * GRP_MntFishProducts8 +
2.06257011493102 * GRP_MntFishProducts9 + -0.57535905840521 * GRP_MntFishProducts10 +
1.61685583269611 * GRP_MntGoldProds2 + 0.76201845089384 * GRP_MntGoldProds3 +
-0.20116109553599 * GRP_MntGoldProds4 + -0.35354590570837 * GRP_MntGoldProds5 +
-0.07414881491148 * GRP_MntGoldProds6 + -0.93265516833704 * GRP_MntGoldProds7 +
0.27562090724475 * GRP_MntGoldProds8 + 0.21497600131343 * GRP_MntGoldProds9 +
-1.31728109344577 * GRP_MntGoldProds10 + 2.04761490869712 * GRP_MntMeatProducts2 +
-1.25735539389252 * GRP_MntMeatProducts3 + 2.53856697441095 * GRP_MntMeatProducts4 +
-0.01594190004707 * GRP_MntMeatProducts5 + 2.15096647695357 * GRP_MntMeatProducts6 +
0.57494957107204 * GRP_MntMeatProducts7 + 2.00730679226119 * GRP_MntMeatProducts8 +
-0.71668533381607 * GRP_MntMeatProducts9 + 0.53556599855475 * GRP_MntMeatProducts10 +
1.54693619731858 * GRP_MntSweetProducts3 + -0.74400819703128 * GRP_MntSweetProducts4 +
-1.02827729809733 * GRP_MntSweetProducts5 + -0.23410492711421 * GRP_MntSweetProducts6 +
-1.04201907068576 * GRP_MntSweetProducts7 + -1.60007026788916 * GRP_MntSweetProducts8 +
-2.09407617502035 * GRP_MntSweetProducts9 + -0.26803603659514 * GRP_MntSweetProducts10 +
-1.71265459102005 * GRP_MntWines2 + 2.46887341207122 * GRP_MntWines3 + 0.34837694975842 *
GRP_MntWines4 + 0.7876281786545 * GRP_MntWines5 + -0.30368035070812 * GRP_MntWines6 +
-0.58629960316924 * GRP_MntWines7 + 1.95937960001866 * GRP_MntWines8 + -0.25505243271449 *
GRP_MntWines9 + -1.17987872337491 * GRP_MntWines10 + 0.22023604608467 *
GRP_NumCatalogPurchases3 + -2.56871980434954 * GRP_NumCatalogPurchases4 + -1.44764737334028 *
GRP_NumCatalogPurchases5 + -0.2446195910135 * GRP_NumCatalogPurchases6 + 2.90538414905594 *
GRP_NumCatalogPurchases7 + 0.88336976623421 * GRP_NumDistPurchases2 + 2.13942226719201 *
GRP_NumDistPurchases3 + 1.34320499597894 * GRP_NumDistPurchases4 + -1.51639001105393 *
GRP_NumDistPurchases5 + 0.57368953355036 * GRP_NumDistPurchases6 + 0.70444554339708 *
GRP_NumDistPurchases7 + 1.28554266385595 * GRP_NumDistPurchases8 + 1.37825141302574 *
GRP_NumDistPurchases9 + -1.43691218320245 * GRP_NumDistPurchases10 + -0.66804085143805 *
GRP_NumWebPurchases2 + 0.07392237122103 * GRP_NumWebPurchases3 + -1.49905765103392 *
GRP_NumWebPurchases4 + -1.5187477833321 * GRP_NumWebPurchases5 + 0.48158072068531 *
GRP_NumWebPurchases6 + 0.23079702131182 * GRP_NumWebPurchases7 + -0.20622792691222 *
GRP_NumWebPurchases8 + 0.30007609674528 * GRP_NumWebVisitsMonth2 + 1.12205187145706 *
GRP_NumWebVisitsMonth3 + 0.51718549115979 * GRP_NumWebVisitsMonth4 + -1.04703503782865 *
GRP_NumWebVisitsMonth5 + 0.22390337037879 * GRP_NumWebVisitsMonth6 + -0.18626487429236 *
GRP_NumWebVisitsMonth7 + 1.57022893774879 * GRP_NumWebVisitsMonth8 + -0.18955402131625 *
GRP_RFMstat2 + 1.36375958279816 * GRP_RFMstat3 + 0.69388690636651 * GRP_RFMstat4 +
-0.14096513433405 * GRP_RFMstat5 + 0.06232569479305 * GRP_RFMstat6 + -1.98686981980517 *
GRP_RFMstat7 + -0.04208886647313 * GRP_RFMstat8 + 0.13969094966118 * GRP_RFMstat9 +
-0.78889510235752 * GRP_RFMstat10 + 0.00773524086935 * GRP_RMntFrq2 + 0.42760129795181 *
GRP_RMntFrq3 + 1.20654035825086 * GRP_RMntFrq4 + -1.96326294005559 * GRP_RMntFrq5 +
0.19508572570635 * GRP_RMntFrq6 + 0.64155838577241 * GRP_RMntFrq7 + 0.29646831812974 *
GRP_RMntFrq8 + -1.79415071937644 * GRP_RMntFrq9 + 0.50025621373087 * GRP_RMntFrq10 +
-1.09969223947409 * GRP_Recency2 + 0.28522088439434 * GRP_Recency3 + 0.00277105517522 *
GRP_Recency4 + 0.84025488137705 * GRP_Recency5 + -0.15771429015941 * GRP_Recency6 +
0.60418796843171 * GRP_Recency7 + -0.08237018446397 * GRP_Recency8 + -0.48067966796564 *
GRP_Recency9 + 1.24119420047225 * GRP_Recency10 ;
1134231   +   H1x2_1  =     1.77895259501913 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.77895259501913 + H1x2_1 ;
1134232   +   H1x2_2  =    -0.15319898291656 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -0.15319898291656 + H1x2_2 ;
1134233   +   H1x2_3  =     1.06881294227229 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = 1.06881294227229 + H1x2_3 ;
1134234   +   H1x2_4  = 0;
MPRINT(EM_DIAGRAM):   H1x2_4 = 0;
1134235   +   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 );
1134236   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1134237   +   H1x2_1  = EXP(H1x2_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_1 = EXP(H1x2_1 - _MAX_);
1134238   +   _SUM_ = _SUM_ + H1x2_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_1 ;
1134239   +   H1x2_2  = EXP(H1x2_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_2 = EXP(H1x2_2 - _MAX_);
1134240   +   _SUM_ = _SUM_ + H1x2_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_2 ;
1134241   +   H1x2_3  = EXP(H1x2_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_3 = EXP(H1x2_3 - _MAX_);
1134242   +   _SUM_ = _SUM_ + H1x2_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_3 ;
1134243   +   H1x2_4  = EXP(H1x2_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_4 = EXP(H1x2_4 - _MAX_);
1134244   +   _SUM_ = _SUM_ + H1x2_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_4 ;
1134245   +   H1x2_1  = H1x2_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 / _SUM_;
1134246   +   H1x2_2  = H1x2_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 / _SUM_;
1134247   +   H1x2_3  = H1x2_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 / _SUM_;
1134248   +   H1x2_4  = H1x2_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 / _SUM_;
1134249   +END;
MPRINT(EM_DIAGRAM):   END;
1134250   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1134251   +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
1134252   +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
1134253   +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
1134254   +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
1134255   +END;
MPRINT(EM_DIAGRAM):   END;
1134256   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1134257   +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
1134258   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1134259   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1134260   +   H2x1_1  =     0.60543735927278 * H1x1_1  +     3.85958773643111 * H1x1_2
1134261   +          +    -0.13813806296693 * H1x1_3  +    -2.68183941928297 * H1x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 0.60543735927278 * H1x1_1 + 3.85958773643111 * H1x1_2 +
-0.13813806296693 * H1x1_3 + -2.68183941928297 * H1x1_4 ;
1134262   +   H2x1_2  =    -0.14350534886194 * H1x1_1  +    -0.58869275717393 * H1x1_2
1134263   +          +     0.27201202126987 * H1x1_3  +     0.84944711792034 * H1x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -0.14350534886194 * H1x1_1 + -0.58869275717393 * H1x1_2 +
0.27201202126987 * H1x1_3 + 0.84944711792034 * H1x1_4 ;
1134264   +   H2x1_3  =     0.16377235892809 * H1x1_1  +     0.32450938656975 * H1x1_2
1134265   +          +    -0.96313538220557 * H1x1_3  +      -1.179254081075 * H1x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = 0.16377235892809 * H1x1_1 + 0.32450938656975 * H1x1_2 +
-0.96313538220557 * H1x1_3 + -1.179254081075 * H1x1_4 ;
1134266   +   H2x1_1  = H2x1_1  +     0.15983017127833 * H1x2_1
1134267   +          +    -2.52556013675769 * H1x2_2  +     1.74538330689549 * H1x2_3
1134268   +          +     0.68913073131319 * H1x2_4 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + 0.15983017127833 * H1x2_1 + -2.52556013675769 * H1x2_2
+ 1.74538330689549 * H1x2_3 + 0.68913073131319 * H1x2_4 ;
1134269   +   H2x1_2  = H2x1_2  +     0.40540171537462 * H1x2_1
1134270   +          +     2.27830241234825 * H1x2_2  +     0.15661386543073 * H1x2_3
1134271   +          +    -0.12036833619531 * H1x2_4 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + 0.40540171537462 * H1x2_1 + 2.27830241234825 * H1x2_2
+ 0.15661386543073 * H1x2_3 + -0.12036833619531 * H1x2_4 ;
1134272   +   H2x1_3  = H2x1_3  +     -0.8609897463305 * H1x2_1
1134273   +          +     1.80866840044437 * H1x2_2  +    -0.99524522029584 * H1x2_3
1134274   +          +    -0.16746987063494 * H1x2_4 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + -0.8609897463305 * H1x2_1 + 1.80866840044437 * H1x2_2
+ -0.99524522029584 * H1x2_3 + -0.16746987063494 * H1x2_4 ;
1134275   +   H2x1_1  =    -0.00538470720937 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -0.00538470720937 + H2x1_1 ;
1134276   +   H2x1_2  =    -0.26197576528123 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -0.26197576528123 + H2x1_2 ;
1134277   +   H2x1_3  =    -1.06687812193911 + H2x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -1.06687812193911 + H2x1_3 ;
1134278   +   H2x1_4  = 0;
MPRINT(EM_DIAGRAM):   H2x1_4 = 0;
1134279   +   _MAX_ = MAX (H2x1_1 , H2x1_2 , H2x1_3 , H2x1_4 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H2x1_1 , H2x1_2 , H2x1_3 , H2x1_4 );
1134280   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1134281   +   H2x1_1  = EXP(H2x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_1 = EXP(H2x1_1 - _MAX_);
1134282   +   _SUM_ = _SUM_ + H2x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_1 ;
1134283   +   H2x1_2  = EXP(H2x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_2 = EXP(H2x1_2 - _MAX_);
1134284   +   _SUM_ = _SUM_ + H2x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_2 ;
1134285   +   H2x1_3  = EXP(H2x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_3 = EXP(H2x1_3 - _MAX_);
1134286   +   _SUM_ = _SUM_ + H2x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_3 ;
1134287   +   H2x1_4  = EXP(H2x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_4 = EXP(H2x1_4 - _MAX_);
1134288   +   _SUM_ = _SUM_ + H2x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_4 ;
1134289   +   H2x1_1  = H2x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 / _SUM_;
1134290   +   H2x1_2  = H2x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 / _SUM_;
1134291   +   H2x1_3  = H2x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 / _SUM_;
1134292   +   H2x1_4  = H2x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 / _SUM_;
1134293   +END;
MPRINT(EM_DIAGRAM):   END;
1134294   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1134295   +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
1134296   +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
1134297   +   H2x1_3  = .;
MPRINT(EM_DIAGRAM):   H2x1_3 = .;
1134298   +   H2x1_4  = .;
MPRINT(EM_DIAGRAM):   H2x1_4 = .;
1134299   +END;
MPRINT(EM_DIAGRAM):   END;
1134300   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1134301   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1134302   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1134303   +
1134304   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1134305   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1134306   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1134307   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1134308   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1134309   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1134310   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1134311   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1134312   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1134313   +end;
MPRINT(EM_DIAGRAM):   end;
1134314   +else do;
MPRINT(EM_DIAGRAM):   else do;
1134315   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1134316   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1134317   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1134318   +   end;
MPRINT(EM_DIAGRAM):   end;
1134319   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1134320   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1134321   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1134322   +   end;
MPRINT(EM_DIAGRAM):   end;
1134323   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1134324   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1134325   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1134326   +   end;
MPRINT(EM_DIAGRAM):   end;
1134327   +end;
MPRINT(EM_DIAGRAM):   end;
1134328   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1134329   +   P_DepVar1  =    -6.74158110639118 * H2x1_1  +     3.33281062877513 * H2x1_2
1134330   +          +     0.83315809661207 * H2x1_3  +     2.92602608104015 * H2x1_4 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -6.74158110639118 * H2x1_1 + 3.33281062877513 * H2x1_2 +
0.83315809661207 * H2x1_3 + 2.92602608104015 * H2x1_4 ;
1134331   +   P_DepVar1  =    -3.28186383811869 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.28186383811869 + P_DepVar1 ;
1134332   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1134333   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1134334   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1134335   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1134336   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1134337   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1134338   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1134339   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1134340   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1134341   +END;
MPRINT(EM_DIAGRAM):   END;
1134342   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1134343   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1134344   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1134345   +END;
MPRINT(EM_DIAGRAM):   END;
1134346   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1134347   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1134348   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1134349   +END;
MPRINT(EM_DIAGRAM):   END;
1134350   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1134351   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1134352   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1134353   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1134354   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1134355   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1134356   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1134357   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1134358   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1134359   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1134360   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1134361   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1134362   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1134363   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1134364   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1134365   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1134366   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1134367   +END;
MPRINT(EM_DIAGRAM):   END;
1134368   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1134369   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1134370   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1134371   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1134372    run;
 
NOTE: DATA STEP view saved on file EMWS8.AUTONEURAL26_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.BINNING_VALIDATE.VIEW used (Total process time):
      real time           0.10 seconds
      cpu time            0.10 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.11 seconds
      cpu time            0.10 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1134373    quit;
1134374    filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
1134375    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
1134376    * AutoNeural26: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * AutoNeural26: Computing metadata for TRAIN data;
1134377    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
 
NOTE: View EMWS8.AUTONEURAL26_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural26\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS8.AutoNeural26_TRAIN out=_tempAdvisor
noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS8.AutoNeural26_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS8.AutoNeural26_TRAIN out=WORK.M1061DLN
noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1061DLN;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20
INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M1061DLN(keep=name type length label format formatl
formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then format = strip(format)!!strip(put(formatl,
best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd,
best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then informat =
strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl,
best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1061DLN;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M1061DLN;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M0FMMDMK NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0FMMDMK;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M0FMMDMK;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2ME51G5(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M0FMMDMK;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0FMMDMK;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32
FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M0FMMDMK;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN"
"MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO"
"QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" "YEAR" "YYMMDD" "YYMON"
"YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD"
"EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" ))
formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype =
"DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" ))
formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT"
"NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB"
"SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType =
"DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then
level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA',
'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W',
'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_
('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL',
'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT',
'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0FMMDMK;
MPRINT(EMADVISECOLUMNS):   set WORK.M0FMMDMK;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL=
"Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY=
"Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower limit" UPPERLIMIT=
"Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL=
"Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.BINNING_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.BINNING_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural26_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT
LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "AutoNeural26";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("P_DEPVAR1") creator = "AutoNeural26";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR1") creator = "AutoNeural26";
MPRINT(EM_DIAGRAM):   when("P_DEPVAR0") creator = "AutoNeural26";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR0") creator = "AutoNeural26";
MPRINT(EM_DIAGRAM):   when("F_DEPVAR") creator = "AutoNeural26";
MPRINT(EM_DIAGRAM):   when("I_DEPVAR") creator = "AutoNeural26";
MPRINT(EM_DIAGRAM):   when("U_DEPVAR") creator = "AutoNeural26";
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "AutoNeural26";
MPRINT(EM_DIAGRAM):   when("DEPVAR") model = "AutoNeural26";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * AutoNeural26: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
1134689    data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
1134690    set EMWS8.AutoNeural26_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural26_EMINFO;
1134691    where DATA='AutoNeural26' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='AutoNeural26' and KEY ^in('DECDATA', 'DECMETA',
'IMPORTANCE', 'MODEL');
1134692    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.AUTONEURAL26_EMINFO.
      WHERE (DATA='AutoNeural26') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1134693    data EMWS8.AutoNeural26_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural26_EMINFO;
1134694    length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
1134695    input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
1134696    cards;
MPRINT(EM_DIAGRAM):   cards;
 
NOTE: The data set EMWS8.AUTONEURAL26_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   run;
1134700    run;
1134701    data EMWS8.AutoNeural26_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural26_EMINFO;
1134702    set EMWS8.AutoNeural26_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural26_EMINFO WORK.MODELTEMP_INFO;
1134703    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set EMWS8.AUTONEURAL26_EMINFO.
NOTE: There were 0 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS8.AUTONEURAL26_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1134704    proc sort data = EMWS8.AutoNeural26_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.AutoNeural26_EMINFO NOTHREADS;
1134705    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
1134706    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set EMWS8.AUTONEURAL26_EMINFO.
NOTE: The data set EMWS8.AUTONEURAL26_EMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1134707    proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
1134708    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
1134709    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.FIMPORT_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 1 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1134710    proc sort data = EMWS8.AutoNeural26_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS8.AutoNeural26_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
1134711    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
1134712    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 3 observations read from the data set EMWS8.AUTONEURAL26_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1134713    data EMWS8.AutoNeural26_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural26_EMINFO;
1134714    merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
1134715    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
1134716    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 3 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS8.AUTONEURAL26_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1134717    proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
1134718    delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
1134719    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
1134720    quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
 
 
NOTE: View EMWS8.AUTONEURAL26_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
NOTE: View EMWS8.AUTONEURAL26_VALIDATE.VIEW used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "28. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "16.54 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Report Log
Date:                28. April 2016
Time:                16.54 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O3Q8W3HM
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural26\EMREPORT.out" encoding="UTF-8"
NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O3Q8W3HM new;
MPRINT(EM_DIAGRAM):   run;
1134744    proc sort data=EMWS8.AutoNeural26_OUTFIT nodupkey;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS8.AutoNeural26_OUTFIT nodupkey;
1134745    by _NAME_;
MPRINT(EM_DIAGRAM):   by _NAME_;
1134746    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set EMWS8.AUTONEURAL26_OUTFIT.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set EMWS8.AUTONEURAL26_OUTFIT has 2 observations and 36 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1134747    data EMWS8.AutoNeural26_EMOUTFIT(rename=(_NAME_=TARGET));
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural26_EMOUTFIT(rename=(_NAME_=TARGET));
1134748    set EMWS8.AutoNeural26_OUTFIT(where=(_NAME_ eq 'OVERALL'));
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural26_OUTFIT(where=(_NAME_ eq 'OVERALL'));
1134749    label _NAME_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _NAME_ = "Target";
1134750    if _NAME_='OVERALL' then _NAME_='DepVar';
MPRINT(EM_DIAGRAM):   if _NAME_='OVERALL' then _NAME_='DepVar';
1134751    drop _ITER_;
MPRINT(EM_DIAGRAM):   drop _ITER_;
1134752    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.AUTONEURAL26_OUTFIT.
      WHERE _NAME_='OVERALL';
NOTE: The data set EMWS8.AUTONEURAL26_EMOUTFIT has 1 observations and 35 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1134753    data EMWS8.AutoNeural26_EMOUTFIT;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural26_EMOUTFIT;
1134754    set EMWS8.AutoNeural26_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural26_EMOUTFIT;
1134755    length TargetLabel $200;
MPRINT(EM_DIAGRAM):   length TargetLabel $200;
1134756    label targetLabel = "%sysfunc(sasmsg(sashelp.dmine, meta_targetlabel_vlabel,
1134756  ! NOQUOTE))";
MPRINT(EM_DIAGRAM):   label targetLabel = "Target Label";
1134757    if upcase(TARGET) eq "DEPVAR" then TargetLabel = 'DepVar';
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TargetLabel = 'DepVar';
1134758    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.AUTONEURAL26_EMOUTFIT.
NOTE: The data set EMWS8.AUTONEURAL26_EMOUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1134759    proc sort data=EMWS8.AutoNeural26_EMREPORTFIT nothreads;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS8.AutoNeural26_EMREPORTFIT nothreads;
1134760    by TARGET;
MPRINT(EM_DIAGRAM):   by TARGET;
1134761    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 21 observations read from the data set EMWS8.AUTONEURAL26_EMREPORTFIT.
NOTE: The data set EMWS8.AUTONEURAL26_EMREPORTFIT has 21 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1134762    %let _EMwarndup = 0;
1134763    %let _EMtargetdup =;
1134764    %let _EMASEtargetdup =;
1134765    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
1134766    set EMWS8.AutoNeural26_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural26_EMOUTFIT;
1134767    if .<_ASE_<0.000001 then do;
MPRINT(EM_DIAGRAM):   if .<_ASE_<0.000001 then do;
1134768    call symput('_EMwarndup', '1');
MPRINT(EM_DIAGRAM):   call symput('_EMwarndup', '1');
1134769    call symput('_EMtargetdup', target);
MPRINT(EM_DIAGRAM):   call symput('_EMtargetdup', target);
1134770    call symput('_EMASEtargetdup', put(_ASE_, best.));
MPRINT(EM_DIAGRAM):   call symput('_EMASEtargetdup', put(_ASE_, best.));
1134771    end;
MPRINT(EM_DIAGRAM):   end;
1134772    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.AUTONEURAL26_EMOUTFIT.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1134773    proc sort data=EMWS8.BINNING_CMeta_TRAIN out=WORK.SUBSETINMETA;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS8.BINNING_CMeta_TRAIN out=WORK.SUBSETINMETA;
1134774    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1134775    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 53 observations read from the data set EMWS8.BINNING_CMETA_TRAIN.
NOTE: The data set WORK.SUBSETINMETA has 53 observations and 20 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1134776    proc sort data=EMWS8.AutoNeural26_VariableSet out=WORK.SUBSETVARSET(keep=NAME
1134776  ! REPORT);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural26_VariableSet
out=WORK.SUBSETVARSET(keep=NAME REPORT);
1134777    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1134778    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 51 observations read from the data set EMWS8.AUTONEURAL26_VARIABLESET.
NOTE: The data set WORK.SUBSETVARSET has 51 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1134779    data WORK.ASSESS_META;
MPRINT(EM_DIAGRAM):   data WORK.ASSESS_META;
1134780    merge WORK.SUBSETINMETA WORK.SUBSETVARSET;
MPRINT(EM_DIAGRAM):   merge WORK.SUBSETINMETA WORK.SUBSETVARSET;
1134781    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1134782    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 53 observations read from the data set WORK.SUBSETINMETA.
NOTE: There were 51 observations read from the data set WORK.SUBSETVARSET.
NOTE: The data set WORK.ASSESS_META has 53 observations and 20 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1134783    data EM_temp_assessMeta;
MPRINT(EM_DIAGRAM):    data EM_temp_assessMeta;
1134784    set EMWS8.AutoNeural26_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural26_CMeta_TRAIN;
1134785    where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION', 'ASSESS', 'COST')
1134785  ! ;
MPRINT(EM_DIAGRAM):   where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION',
'ASSESS', 'COST');
1134786    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set EMWS8.AUTONEURAL26_CMETA_TRAIN.
      WHERE role in ('ASSESS', 'CLASSIFICATION', 'COST', 'DECISION', 'PREDICT', 'RESIDUAL');
NOTE: The data set WORK.EM_TEMP_ASSESSMETA has 8 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1134787    data EM_temp_assessdata;
MPRINT(EM_DIAGRAM):    data EM_temp_assessdata;
1134788    set EMWS8.AutoNeural26_TRAIN(keep=
1134789    F_DepVar
1134790    I_DepVar
1134791    P_DepVar0
1134792    P_DepVar1
1134793    R_DepVar0
1134794    R_DepVar1
1134795    U_DepVar
1134796    _WARN_
1134797    DepVar
1134798    );
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural26_TRAIN(keep= F_DepVar I_DepVar P_DepVar0 P_DepVar1
R_DepVar0 R_DepVar1 U_DepVar _WARN_ DepVar );
1134799    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2374 observations read from the data set EMWS8.PART_TRAIN.
NOTE: View EMWS8.AUTONEURAL26_TRAIN.VIEW used (Total process time):
      real time           0.08 seconds
      cpu time            0.07 seconds
 
NOTE: There were 2374 observations read from the data set EMWS8.BINNING_TRAIN.
NOTE: There were 2374 observations read from the data set EMWS8.AUTONEURAL26_TRAIN.
NOTE: The data set WORK.EM_TEMP_ASSESSDATA has 2374 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.10 seconds
      cpu time            0.09 seconds
 
 
MPRINT(EM_DIAGRAM):    proc freq data=EM_temp_assessdata noprint;
MPRINT(EM_DIAGRAM):   table I_DepVar*F_DepVar / out = WORK.AutoNeural26_05S58VY nocol norow
outpct;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.AutoNeural26_05S58VY;
MPRINT(EM_DIAGRAM):   length _TYPE_ $10 DATAROLE TARGET $32 TARGETLABEL $200 FROM INTO $32
CORRECTTEXT $40 ;
MPRINT(EM_DIAGRAM):   label _TYPE_ = "Outcome Type";
MPRINT(EM_DIAGRAM):   label DATAROLE = "Data Role";
MPRINT(EM_DIAGRAM):   label TARGET = "Target Variable";
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   label FROM = "Target";
MPRINT(EM_DIAGRAM):   label INTO = "Outcome";
MPRINT(EM_DIAGRAM):   label PCT_ROW = "Target Percentage";
MPRINT(EM_DIAGRAM):   label PCT_COL = "Outcome Percentage";
MPRINT(EM_DIAGRAM):   label COUNT = "Frequency Count";
MPRINT(EM_DIAGRAM):   label PERCENT = "Total Percentage";
MPRINT(EM_DIAGRAM):   label CORRECTTEXT = "Correct Text";
MPRINT(EM_DIAGRAM):   label CORRECT = "Correct";
MPRINT(EM_DIAGRAM):   set WORK.AutoNeural26_05S58VY(rename=(F_DepVar=FROM I_DepVar=INTO));
MPRINT(EM_DIAGRAM):   retain _TYPE_ 'PREDICTION' DATAROLE "TRAIN" TARGET "DepVar";
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TARGETLABEL = 'DepVar';
MPRINT(EM_DIAGRAM):   if FROM eq INTO then do;
MPRINT(EM_DIAGRAM):   CORRECT = 0;
MPRINT(EM_DIAGRAM):   CORRECTTEXT="Correct";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   CORRECT = 1;
MPRINT(EM_DIAGRAM):   CORRECTTEXT="Incorrect";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural26_EMCLASSIFICATION;
MPRINT(EM_DIAGRAM):   set WORK.AutoNeural26_05S58VY;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   set WORK.AutoNeural26_05S58VY;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.MISCREPORT(drop=INTO FROM _TYPE_);
MPRINT(EM_DIAGRAM):   set WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   length MISC $12;
MPRINT(EM_DIAGRAM):   if FROM='1' and INTO='1' then MISC='TRUEEVENT';
MPRINT(EM_DIAGRAM):   else if FROM='1' and INTO ne '1' then MISC='FALSENEVENT';
MPRINT(EM_DIAGRAM):   else if FROM ne '1' and INTO='1' then MISC='FALSEEVENT';
MPRINT(EM_DIAGRAM):   else if FROM ne'1' and INTO ne '1' then MISC='TRUENEVENT';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.MISCREPORT nothreads;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc summary data=WORK.MISCREPORT NWAY;
MPRINT(EM_DIAGRAM):   output out=WORK.MISCCOUNT(drop=_FREQ_ _TYPE_) SUM=COUNT;
MPRINT(EM_DIAGRAM):   CLASS MISC;
MPRINT(EM_DIAGRAM):   VAR COUNT;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc transpose data=WORK.MISCCOUNT out=WORK.MISCREPORT(drop=_NAME_
_LABEL_);
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   ID MISC;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural26_EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   length TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TARGETLABEL = 'DepVar';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data ASSESS_REPORTMETA;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural26_VariableSet;
MPRINT(EM_DIAGRAM):   where REPORT='Y';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename temp catalog 'sashelp.emassmt.em_assess.source';
MPRINT(EM_DIAGRAM):   filename temp;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural26_DepVar_DM;
MPRINT(EM_DIAGRAM):   where _TYPE_="TARGET";
MPRINT(EM_DIAGRAM):   call symput('ASSMT_EVENT', strip(event));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):
MPRINT(EM_ASSESS):   data _ea_tmpdata;
MPRINT(EM_ASSESS):   set EM_temp_assessdata;
MPRINT(EM_ASSESS):   _tmpfreqvar_=1;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_CHECKEMSETINIT):   DATA _NULL_;
MPRINT(EM_CHECKEMSETINIT):   EM_SETINIT = 'N';
MPRINT(EM_CHECKEMSETINIT):   IF SYSPROD('PRODNUM50') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM448') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM102') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM103') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   CALL SYMPUT('EM_SETINIT', EM_SETINIT);
MPRINT(EM_CHECKEMSETINIT):   RUN;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Reading in reporting data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET ASSESS_REPORTMETA END = EOF;
MPRINT(EM_ASSESS):   IF TYPE = "C" OR UPCASE (LEVEL) IN ("NOMINAL", "BINARY" , "ORDINAL") THEN
DO;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) NE UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   NUMCTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTC" || LEFT (PUT (NUMCTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "C");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF UPCASE(NAME) NE UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   NUMNTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTN" || LEFT (PUT (NUMNTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMNTOREPORT", NUMNTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMCTOREPORT", NUMCTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMTOREPORT", SUM (NUMNTOREPORT, NUMCTOREPORT));
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   PROC DMDB DATA = _ea_tmpdata VAROUT = VAROUT DMDBCAT = _D CLASSOUT =
_ASSMT_CLASSOUT;
MPRINT(EM_ASSESS):   CLASS F_DepVar ;
 
MPRINT(EM_ASSESS):   VAR P_DepVar1 _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_;
MPRINT(EM_ASSESS):   RUN ;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   PROC SORT DATA = _ASSMT_CLASSOUT;
MPRINT(EM_ASSESS):   BY NAME;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _auxeventname (keep = __event__) ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ...FLAG0_1 = ..... TARGET IS 0, 1 & EVENT = 1;
 
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   length __event__ $ 32;
MPRINT(EM_ASSESS):   RETAIN FLAG0_1 1 NUM1 . NUM0 . __event__ "_missing_" ;
 
MPRINT(EM_ASSESS):   SET _ASSMT_CLASSOUT END = EOF;
MPRINT(EM_ASSESS):   BY NAME;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ....... LEVEL = BINARY OR NOMINAL OR ORDINAL;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   IF UPCASE(NAME) = UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   CUMFREQ + FREQUENCY;
MPRINT(EM_ASSESS):   IF LEVEL NE "." THEN DO;
MPRINT(EM_ASSESS):   N1 + 1;
MPRINT(EM_ASSESS):   IF (NRAW NE 0 AND NRAW NE 1) OR TYPE NE "N" OR "" > " " THEN FLAG0_1 = 0;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ......................... IF EVENT NE BLANK;
MPRINT(EM_ASSESS):   * ....................LEVEL IS CHAR VAR ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   IF UPCASE("1") = UPCASE(LEVEL) THEN DO;
MPRINT(EM_ASSESS):   NUM1 = FREQUENCY;
MPRINT(EM_ASSESS):   IF TYPE = "C" THEN do;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("EVENTVALUERAW", CRAW );
MPRINT(EM_ASSESS):   __event__ = craw;
MPRINT(EM_ASSESS):   end;
MPRINT(EM_ASSESS):   ELSE do;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("EVENTVALUERAW", NRAW );
MPRINT(EM_ASSESS):   __event__ = nraw;
MPRINT(EM_ASSESS):   end;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF LAST.NAME THEN DO;
 
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * .............. IN NOMINAL CASE, NEED TO GROUP ALL '0' ;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   NUM0 = SUM (CUMFREQ, - NUM1);
MPRINT(EM_ASSESS):   IF NUM0 < 0 THEN NUM0 = 0;
MPRINT(EM_ASSESS):   IF NUM1 = . THEN NUM1 = 0;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUM0", NUM0 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUM1", NUM1);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PNUM1", NUM1 / CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PNUM0", (CUMFREQ - NUM1) / CUMFREQ);
MPRINT(EM_ASSESS):   IF TYPE = "C" THEN DO;
MPRINT(EM_ASSESS):   FLAG0_1 = 0;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "C" );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF "" = " " THEN DO;
MPRINT(EM_ASSESS):   IF "1" NE "1" THEN FLAG0_1 = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "N" );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ................... IF TYPE = N;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("FLAG0_1", FLAG0_1 );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..................IF LAST.NAME ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ...............IF LEVEL NE '.' ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * .............. IF NAME = TARGET;
MPRINT(EM_ASSESS):   ELSE IF "" > " " AND UPCASE(NAME) = UPCASE("") THEN DO;
MPRINT(EM_ASSESS):   NUMDECISIONS + 1;
MPRINT(EM_ASSESS):   LEVEL = TRANSLATE (LEVEL, "_", "'", "_", '"');
MPRINT(EM_ASSESS):   CALL SYMPUTX ("D_LABEL" || LEFT (PUT (NUMDECISIONS, 3.)), LEVEL );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..................... ELSE IF UPCASE;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   output _auxeventname;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMOBS", CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMDECISIONS", NUMDECISIONS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET VAROUT END = EOF;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) = UPCASE ("P_DepVar1") THEN DO;
MPRINT(EM_ASSESS):   IF N = 0 THEN DO;
MPRINT(EM_ASSESS):   PUT //// "          Warning: All posterior probabilities are missing
values ";
MPRINT(EM_ASSESS):   PUT ///;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("ALLMISS", 1);
MPRINT(EM_ASSESS):   STOP;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("ALLMISS", 0);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB", MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB", MAX);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("DIFF", MAX - MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NMISSPROB", NMISS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF UPCASE (NAME) = UPCASE ("_tmpfreqvar_") THEN DO;
MPRINT(EM_ASSESS):   AUXMIN = MIN - INT (MIN);
MPRINT(EM_ASSESS):   AUXMAX = MAX - INT (MAX);
MPRINT(EM_ASSESS):   IF AUXMIN > 0 OR AUXMAX > 0 THEN CALL SYMPUTX ("USEWEIGHT", "Y");
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("USEWEIGHT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _ANY0;
MPRINT(EM_ASSESS):   SET _ea_tmpdata (KEEP = F_DepVar P_DepVar1 _tmpfreqvar_ );
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................... No Formats;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF LEFT ( F_DepVar ) = "1" THEN NTARGET = 1;
MPRINT(EM_ASSESS):   ELSE NTARGET = 0;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .............. Before proc summary of binary case;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC SUMMARY DATA = _ANY0 (KEEP = P_DepVar1 NTARGET _tmpfreqvar_ WHERE =
(NTARGET > . )) NWAY MISSING;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   CLASS P_DepVar1 ;
MPRINT(EM_ASSESS):   VAR NTARGET ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   OUTPUT OUT = ANYSUM (DROP = _TYPE_) MEAN = _MEANTARGET _MEANFREQVAR ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... Main Data Set Processing, Binary case;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK (KEEP = BASECAPC BASECAP __EVENT__ BASEEVENTS
BASEGAIN BASELIFT BASERESP BASERESPC BESTCAP BESTCAPC BESTGAIN BESTLIFT BESTLIFTC
BESTNUMEVENTS BESTRESP BESTRESPC BIN CBASELIFT C_LIFT C_P_CAPT_RESP C_P_RESP GAIN LIFT MAXPROB
MINPROB MNPROB NUMNONRESP NUMOBS NUMRESP PERCENTILE P_CAPT_RESP P_RESP ) WORK._TEMPSCOREDIST
(KEEP = BIN LOWERPROB UPPERPROB EVENTVALUE SCR_NUMEVENTS MODELSCORE SCR_NUMNONEVENTS RANGE
NUMOBSINGROUP PERCOBSINGROUP C_PERCOBSINGROUP SCR_P_EVENTS SCR_CP_EVENTS SCR_P_NONEVENTS
SCR_CP_NONEVENTS SCR_MNPROB SCR_MINPROB SCR_MAXPROB ) ;
 
MPRINT(EM_ASSESS):   SET ANYSUM END = EOF;
 
MPRINT(EM_ASSESS):   IF _N_ = 1 THEN SET _AUXEVENTNAME;
 
MPRINT(EM_ASSESS):   RETAIN MINPROB1 - MINPROB20 1 MAXPROB1 - MAXPROB20 0 MNPROB1 - MNPROB20 0
NUMOBS1 - NUMOBS20 0 NUMRESP1 - NUMRESP20 0 TRUEPOS1 - TRUEPOS100 0 TRUENEG1 - TRUENEG100 0
FALSEPOS1 - FALSEPOS100 0 FALSENEG1 - FALSENEG100 0 EVENTS1 - EVENTS100 NONEVENTS1 -
NONEVENTS100 0 FIRSTIN1 - FIRSTIN100 . LASTIN1 - LASTIN100 . RESPRATE 0.151221567 _NEVENTS 359
_NNONEVENTS 2015 TARGET "NTARGET" ;
MPRINT(EM_ASSESS):   ARRAY MINPROBS (20) MINPROB1 - MINPROB20;
MPRINT(EM_ASSESS):   ARRAY MAXPROBS (20) MAXPROB1 - MAXPROB20;
MPRINT(EM_ASSESS):   ARRAY MNPROBS (20) MNPROB1 - MNPROB20;
MPRINT(EM_ASSESS):   ARRAY NUMOBSS (20) NUMOBS1 - NUMOBS20;
MPRINT(EM_ASSESS):   ARRAY NUMRESPS (20) NUMRESP1 - NUMRESP20;
MPRINT(EM_ASSESS):   ARRAY TRUEPOSX (100) TRUEPOS1 - TRUEPOS100;
MPRINT(EM_ASSESS):   ARRAY FALSEPOSX (100) FALSEPOS1 - FALSEPOS100;
MPRINT(EM_ASSESS):   ARRAY FALSENEGX (100) FALSENEG1 - FALSENEG100;
MPRINT(EM_ASSESS):   ARRAY TRUENEGX (100) TRUENEG1 - TRUENEG100;
MPRINT(EM_ASSESS):   ARRAY _EVENTS (100) EVENTS1 - EVENTS100;
MPRINT(EM_ASSESS):   ARRAY NONEVENTS (100) NONEVENTS1 - NONEVENTS100;
MPRINT(EM_ASSESS):   ARRAY FIRSTIN (100) FIRSTIN1 - FIRSTIN100;
MPRINT(EM_ASSESS):   ARRAY LASTIN (100) LASTIN1 - LASTIN100;
MPRINT(EM_ASSESS):   RETAIN SCR_MNPROB1 - SCR_MNPROB100 0 SCR_MINPROB1 - SCR_MINPROB100 1
SCR_MAXPROB1 - SCR_MAXPROB100 0;
MPRINT(EM_ASSESS):   ARRAY SCR_MNPROBS (100) SCR_MNPROB1 - SCR_MNPROB100;
MPRINT(EM_ASSESS):   ARRAY SCR_MINPROBS (100) SCR_MINPROB1 - SCR_MINPROB100;
MPRINT(EM_ASSESS):   ARRAY SCR_MAXPROBS (100) SCR_MAXPROB1 - SCR_MAXPROB100;
MPRINT(EM_ASSESS):   DROP SCR_MINPROB1 - SCR_MINPROB100 SCR_MAXPROB1 - SCR_MAXPROB100
SCR_MNPROB1 - SCR_MNPROB100 ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...... Area For 8 Financials ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF _MEANTARGET = . THEN _MEANTARGET = RESPRATE;
MPRINT(EM_ASSESS):   DROP N1 _K SUMWEIGHTS ;
MPRINT(EM_ASSESS):   SUMWEIGHTS = 1;
 
MPRINT(EM_ASSESS):   DO _K = 1 TO CEIL (_FREQ_);
MPRINT(EM_ASSESS):   IF _K = CEIL (_FREQ_) THEN DO;
MPRINT(EM_ASSESS):   IF _FREQ_ < CEIL (_FREQ_) THEN _WEIGHT = _FREQ_ - FLOOR (_FREQ_);
MPRINT(EM_ASSESS):   ELSE _WEIGHT = 1;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE _WEIGHT = 1;
MPRINT(EM_ASSESS):   N1 + _WEIGHT;
MPRINT(EM_ASSESS):   NTARGET = _MEANTARGET ;
MPRINT(EM_ASSESS):   DECILE = MIN (20, CEIL (N1 * 20 / 2374));
MPRINT(EM_ASSESS):   MINPROBS ( DECILE) = MIN (MINPROBS ( DECILE), P_DepVar1 );
MPRINT(EM_ASSESS):   MAXPROBS ( DECILE) = MAX (MAXPROBS ( DECILE), P_DepVar1 );
MPRINT(EM_ASSESS):   MNPROBS ( DECILE) = SUM (MNPROBS ( DECILE), P_DepVar1 * _WEIGHT);
MPRINT(EM_ASSESS):   NUMOBSS ( DECILE) = NUMOBSS ( DECILE) + _WEIGHT;
MPRINT(EM_ASSESS):   NUMRESPS ( DECILE) = NUMRESPS ( DECILE) + _MEANTARGET * _WEIGHT;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ outside of do loop, Area for final ROC;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   RANKDELTA = (ROUND ( _FREQ_ ) + 1) / 2;
MPRINT(EM_ASSESS):   RANK = UNTIEDRANK + RANKDELTA;
MPRINT(EM_ASSESS):   DROP RANK ;
MPRINT(EM_ASSESS):   SUMRANK1 + RANK * ROUND (_MEANTARGET * _FREQ_, .0000001);
MPRINT(EM_ASSESS):   UNTIEDRANK + ROUND (_FREQ_, .00000001);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Area For ROC Curve;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DO _K = 1 TO 100;
MPRINT(EM_ASSESS):   IF P_DepVar1 * 100 >= _K THEN DO;
MPRINT(EM_ASSESS):   TRUEPOSX ( _K ) + _FREQ_ * _MEANTARGET ;
MPRINT(EM_ASSESS):   FALSEPOSX ( _K ) + _FREQ_ * (1 - _MEANTARGET) ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   TRUENEGX ( _K ) + _FREQ_ * ( 1 - _MEANTARGET) ;
MPRINT(EM_ASSESS):   FALSENEGX ( _K ) + _FREQ_ * _MEANTARGET ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   SLOT = MIN (MAX (CEIL (P_DepVar1 * 100), 1), 100) ;
MPRINT(EM_ASSESS):   DROP SLOT;
MPRINT(EM_ASSESS):   FIRSTIN ( SLOT ) = MIN ( FIRSTIN ( SLOT ), P_DepVar1);
MPRINT(EM_ASSESS):   LASTIN ( SLOT ) = MAX ( LASTIN ( SLOT ), P_DepVar1);
MPRINT(EM_ASSESS):   _EVENTS ( SLOT) = _EVENTS ( SLOT) + _FREQ_ * _MEANTARGET;
MPRINT(EM_ASSESS):   NONEVENTS ( SLOT) = NONEVENTS ( SLOT) + _FREQ_ * (1 - _MEANTARGET);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ START OF OUTDIST IN BINARY CASE MAIN DATA STEP ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   SCR_MNPROBS ( SLOT ) = SUM (SCR_MNPROBS (SLOT), P_DepVar1 * _FREQ_ );
MPRINT(EM_ASSESS):   SCR_MINPROBS ( SLOT ) = MIN (SCR_MINPROBS (SLOT), P_DepVar1 );
MPRINT(EM_ASSESS):   SCR_MAXPROBS ( SLOT ) = MAX (SCR_MAXPROBS (SLOT), P_DepVar1 );
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ End of Outdist in Binary case main DATA STEP ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   PUT //;
MPRINT(EM_ASSESS):   DO K = 1 TO 20;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LENGTH EVENTVALUE $ 32;
MPRINT(EM_ASSESS):   RETAIN EVENTVALUE "1" ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ......... Start of EOF area of BINARY processing of main data set ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SUMRANK1", SUMRANK1);
MPRINT(EM_ASSESS):   LENGTH DATAROLE $ 10;
MPRINT(EM_ASSESS):   RETAIN DATAROLE "TRAIN" ;
MPRINT(EM_ASSESS):   RETAIN OVLMIN 0.0000470385 OVLMAX 0.4750278633 ;
MPRINT(EM_ASSESS):   DROP OVLMIN OVLMAX ;
MPRINT(EM_ASSESS):   C_NUMOBS = 0;
MPRINT(EM_ASSESS):   C_NUM_RESP = 0;
MPRINT(EM_ASSESS):   C_NUM_NONRESP = 0;
MPRINT(EM_ASSESS):   C_P_RESP = 0;
MPRINT(EM_ASSESS):   P_CAPT_RESP = 0;
MPRINT(EM_ASSESS):   C_P_CAPT_RESP = 0;
MPRINT(EM_ASSESS):   PREVIOUSPROFIT = 0;
MPRINT(EM_ASSESS):   MAXPROFIT = 0;
MPRINT(EM_ASSESS):   _KS_BIN_ = 0;
MPRINT(EM_ASSESS):   DROP _KS_BIN_;
MPRINT(EM_ASSESS):   AVGNUMRESP = _NEVENTS / 20;
MPRINT(EM_ASSESS):   BASERESP = 100 * RESPRATE;
MPRINT(EM_ASSESS):   BASERESPC = BASERESP;
MPRINT(EM_ASSESS):   BASECAP = 100 / 20;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................Start OF Gainschart = Outranks Area;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   _KS_BIN_PROB = 0;
MPRINT(EM_ASSESS):   DO GROUP = 20 TO 1 BY -1;
 
MPRINT(EM_ASSESS):   BASECAPC + BASECAP;
MPRINT(EM_ASSESS):   PERCENTILE = GROUP * (100 / 20);
MPRINT(EM_ASSESS):   MINPROB = MINPROBS ( GROUP);
MPRINT(EM_ASSESS):   MAXPROB = MAXPROBS ( GROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB" || LEFT ( PUT (GROUP, 3.)), MINPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB" || LEFT ( PUT (GROUP, 3.)), MAXPROB);
MPRINT(EM_ASSESS):   NUMOBS = NUMOBSS ( GROUP);
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN MNPROB = MNPROBS ( GROUP) / NUMOBS;
MPRINT(EM_ASSESS):   ELSE MNPROB = .;
MPRINT(EM_ASSESS):   C_NUMOBS = SUM (NUMOBS, C_NUMOBS);
MPRINT(EM_ASSESS):   NUMRESP = NUMRESPS ( GROUP);
MPRINT(EM_ASSESS):   NUMNONRESP = NUMOBS - NUMRESP;
MPRINT(EM_ASSESS):   C_AVGNUM_RESP + AVGNUMRESP;
MPRINT(EM_ASSESS):   IF C_NUMOBS <= _NEVENTS THEN DO;
MPRINT(EM_ASSESS):   BESTNUMEVENTS = NUMOBS;
MPRINT(EM_ASSESS):   BESTCAPC = C_NUMOBS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   BASEEVENTS = _NEVENTS / 20;
MPRINT(EM_ASSESS):   BASENONEVENTS = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   FLAG + 1;
MPRINT(EM_ASSESS):   DROP FLAG;
MPRINT(EM_ASSESS):   BESTNUMEVENTS = _NEVENTS - C_NUMOBS + NUMOBS;
MPRINT(EM_ASSESS):   IF FLAG > 1 THEN BESTNUMEVENTS = 0;
MPRINT(EM_ASSESS):   BESTCAPC = 100;
MPRINT(EM_ASSESS):   IF C_NUMOBS - _NEVENTS <= NUMOBS THEN DO;
MPRINT(EM_ASSESS):   BASEEVENTS = C_NUMOBS - _NEVENTS;
MPRINT(EM_ASSESS):   BASENONEVENTS = NUMOBS - C_NUMOBS + _NEVENTS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BASEEVENTS = 0;
MPRINT(EM_ASSESS):   BASENONEVENTS = NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   BESTCAP = BESTNUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   BESTLIFT = BESTNUMEVENTS / AVGNUMRESP;
MPRINT(EM_ASSESS):   C_BESTNUMEVENTS + BESTNUMEVENTS;
MPRINT(EM_ASSESS):   DROP C_BESTNUMEVENTS;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN BESTLIFTC = C_BESTNUMEVENTS / (_NEVENTS / 2374 *
C_NUMOBS);
MPRINT(EM_ASSESS):   ELSE BESTLIFTC = .;
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BESTRESP = BESTNUMEVENTS * 100 / NUMOBS;
MPRINT(EM_ASSESS):   P_RESP = NUMRESP * 100 / NUMOBS;
MPRINT(EM_ASSESS):   P_NONRESP = NUMNONRESP * 100 / NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTRESP = .;
MPRINT(EM_ASSESS):   P_RESP = .;
MPRINT(EM_ASSESS):   P_NONRESP = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BESTRESPC = C_BESTNUMEVENTS * 100 / C_NUMOBS;
MPRINT(EM_ASSESS):   BESTGAIN = MAX (0, ((C_BESTNUMEVENTS / C_NUMOBS ) / ( AVGNUMRESP /
NUMOBS) - 1) * 100);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTRESPC = .;
MPRINT(EM_ASSESS):   BESTGAIN = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF NUMNONRESP > 0 THEN ODDS = NUMRESP / NUMNONRESP;
MPRINT(EM_ASSESS):   ELSE ODDS = .;
MPRINT(EM_ASSESS):   C_NUM_RESP = SUM (C_NUM_RESP , NUMRESP );
MPRINT(EM_ASSESS):   C_NUM_NONRESP = SUM (C_NUM_NONRESP, NUMNONRESP );
MPRINT(EM_ASSESS):   IF C_NUM_NONRESP > 0 THEN C_ODDS = C_NUM_RESP / C_NUM_NONRESP;
MPRINT(EM_ASSESS):   ELSE C_ODDS = .;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   C_P_RESP = C_NUM_RESP * 100 / C_NUMOBS;
MPRINT(EM_ASSESS):   GAIN = ABS(100 * (((C_NUM_RESP / C_NUMOBS ) / (_NEVENTS / 2374)) - 1));
MPRINT(EM_ASSESS):   BASEGAIN = 100 * (( (C_AVGNUM_RESP / C_NUMOBS) / ( AVGNUMRESP / NUMOBS))
- 1);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   GAIN = .;
MPRINT(EM_ASSESS):   BASEGAIN = .;
MPRINT(EM_ASSESS):   C_P_RESP = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF BASEGAIN <= 0 THEN BASEGAIN = 0;
MPRINT(EM_ASSESS):   P_CAPT_RESP = NUMRESP * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   P_CAPT_NONRESP = NUMNONRESP * 100 / ( 2374 - _NEVENTS);
MPRINT(EM_ASSESS):   C_P_CAPT_RESP = C_NUM_RESP * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   C_P_CAPT_NONRESP = C_NUM_NONRESP * 100 / ( 2374 - _NEVENTS);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Area For Binned KS in Outranks area;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   _DIFFERENCE = C_P_CAPT_RESP - C_P_CAPT_NONRESP ;
MPRINT(EM_ASSESS):   IF _KS_BIN_ < _DIFFERENCE THEN DO;
MPRINT(EM_ASSESS):   _KS_BIN_ = _DIFFERENCE;
MPRINT(EM_ASSESS):   _KS_BIN_PROB = MINPROB + (MAXPROB - MINPROB) / 2 ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LIFT = P_RESP * .01 / RESPRATE ;
MPRINT(EM_ASSESS):   C_LIFT = C_P_RESP * .01 / RESPRATE;
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BASELIFT = AVGNUMRESP / ( RESPRATE * NUMOBS );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE BASELIFT = .;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN CBASELIFT = C_AVGNUM_RESP / (RESPRATE * C_NUMOBS);
MPRINT(EM_ASSESS):   ELSE CBASELIFT = .;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ WITHIN DO LOOP FOR OUTRANKS;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   BIN = 20 + 1 - GROUP;
MPRINT(EM_ASSESS):   PERCENTILE = BIN * (100 / 20);
MPRINT(EM_ASSESS):   B_C_P_RESP = PERCENTILE;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPRANK ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................ END OF GAINSCHART = OUTRANKS AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROFITGROUP" , MAXPROFITGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROFIT" , MAXPROFIT );
MPRINT(EM_ASSESS):   KS_ABSDIFF = 0 ;
MPRINT(EM_ASSESS):   MINPRECTPR = 9999;
MPRINT(EM_ASSESS):   Y0 = 1 - RESPRATE;
MPRINT(EM_ASSESS):   Y1 = RESPRATE;
MPRINT(EM_ASSESS):   MAXMUTUAL = 0;
MPRINT(EM_ASSESS):   DROP MAXMUTUAL KSPROB Y0 Y1 KS_ABSDIFF MINPRECTPR;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .....................About to start Processing Outroc ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................... Finished Processing Outroc ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .............. Outdist ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   BIN = 20 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS96 - EVENTS100 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS96 - NONEVENTS100);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB96 -
SCR_MNPROB100) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB96 - SCR_MINPROB100) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB96 - SCR_MAXPROB100) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 20;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 19 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS91 - EVENTS95 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS91 - NONEVENTS95);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB91 -
SCR_MNPROB95) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB91 - SCR_MINPROB95) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB91 - SCR_MAXPROB95) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 19;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 18 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS86 - EVENTS90 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS86 - NONEVENTS90);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB86 -
SCR_MNPROB90) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB86 - SCR_MINPROB90) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB86 - SCR_MAXPROB90) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 18;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 17 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS81 - EVENTS85 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS81 - NONEVENTS85);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB81 -
SCR_MNPROB85) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB81 - SCR_MINPROB85) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB81 - SCR_MAXPROB85) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 17;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 16 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS76 - EVENTS80 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS76 - NONEVENTS80);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB76 -
SCR_MNPROB80) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB76 - SCR_MINPROB80) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB76 - SCR_MAXPROB80) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 16;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 15 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS71 - EVENTS75 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS71 - NONEVENTS75);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB71 -
SCR_MNPROB75) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB71 - SCR_MINPROB75) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB71 - SCR_MAXPROB75) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 15;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 14 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS66 - EVENTS70 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS66 - NONEVENTS70);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB66 -
SCR_MNPROB70) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB66 - SCR_MINPROB70) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB66 - SCR_MAXPROB70) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 14;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 13 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS61 - EVENTS65 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS61 - NONEVENTS65);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB61 -
SCR_MNPROB65) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB61 - SCR_MINPROB65) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB61 - SCR_MAXPROB65) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 13;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 12 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS56 - EVENTS60 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS56 - NONEVENTS60);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB56 -
SCR_MNPROB60) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB56 - SCR_MINPROB60) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB56 - SCR_MAXPROB60) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 12;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 11 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS51 - EVENTS55 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS51 - NONEVENTS55);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB51 -
SCR_MNPROB55) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB51 - SCR_MINPROB55) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB51 - SCR_MAXPROB55) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 11;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 10 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS46 - EVENTS50 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS46 - NONEVENTS50);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB46 -
SCR_MNPROB50) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB46 - SCR_MINPROB50) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB46 - SCR_MAXPROB50) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 10;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 9 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS41 - EVENTS45 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS41 - NONEVENTS45);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB41 -
SCR_MNPROB45) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB41 - SCR_MINPROB45) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB41 - SCR_MAXPROB45) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 9;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 8 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS36 - EVENTS40 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS36 - NONEVENTS40);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB36 -
SCR_MNPROB40) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB36 - SCR_MINPROB40) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB36 - SCR_MAXPROB40) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 8;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 7 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS31 - EVENTS35 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS31 - NONEVENTS35);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB31 -
SCR_MNPROB35) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB31 - SCR_MINPROB35) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB31 - SCR_MAXPROB35) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 7;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 6 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS26 - EVENTS30 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS26 - NONEVENTS30);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB26 -
SCR_MNPROB30) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB26 - SCR_MINPROB30) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB26 - SCR_MAXPROB30) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 6;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 5 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS21 - EVENTS25 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS21 - NONEVENTS25);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB21 -
SCR_MNPROB25) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB21 - SCR_MINPROB25) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB21 - SCR_MAXPROB25) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 5;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 4 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS16 - EVENTS20 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS16 - NONEVENTS20);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB16 -
SCR_MNPROB20) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB16 - SCR_MINPROB20) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB16 - SCR_MAXPROB20) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 4;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 3 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS11 - EVENTS15 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS11 - NONEVENTS15);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB11 -
SCR_MNPROB15) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB11 - SCR_MINPROB15) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB11 - SCR_MAXPROB15) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 3;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 2 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS6 - EVENTS10 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS6 - NONEVENTS10);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB6 -
SCR_MNPROB10) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB6 - SCR_MINPROB10) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB6 - SCR_MAXPROB10) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 2;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 1 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS1 - EVENTS5 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS1 - NONEVENTS5);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB1 - SCR_MNPROB5)
/ NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB1 - SCR_MINPROB5) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB1 - SCR_MAXPROB5) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 1;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("KSPROB" , PUT (KSPROB, 5.3 ) );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("_KS_BIN_PROB" , _KS_BIN_PROB );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("_KS_BIN_" , _KS_BIN_ / 100 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("KSDIFF" , KS_ABSDIFF );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PRECTPR" , PRECTPR );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXMUTUALPROB" , MAXMUTUALPROB);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LABEL __EVENT__ = "Event" DECILE = "Depth" BIN = "Bin" NUMOBS = "Number
of Observations" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * RUN for large data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST;
MPRINT(EM_ASSESS):   DELETE _AUXEVENTNAME;
MPRINT(EM_ASSESS):   QUIT;
 
MPRINT(EM_ASSESS):   OPTION NOCENTER LS = 95;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Report Vars Area.;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start OF Outdist Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPSCOREDIST;
MPRINT(EM_ASSESS):   RENAME MODELSCORE = SCORE UPPERPROB = UPPOSTERIOR SCR_CP_EVENTS =
CUMULATIVEPERCENTAGEOFEVENTS SCR_CP_NONEVENTS = CUMULATIVEPERCENTAGEOFNONEVENTS EVENTVALUE =
EVENT LOWERPROB = LOWPOSTERIOR NUMOBSINGROUP = N PERCOBSINGROUP = PERCENTAGE SCR_MINPROB =
_MINP_ SCR_MAXPROB = _MAXP_ SCR_MNPROB = _MEANP_ RANGE = P_LABEL C_PERCOBSINGROUP =
CUMULATIVEPERCENTAGE SCR_NUMEVENTS = NUMBEROFEVENTS SCR_NUMNONEVENTS = NUMBEROFNONEVENTS
SCR_P_EVENTS = PERCENTAGEOFEVENTS SCR_P_NONEVENTS = PERCENTAGEOFNONEVENTS ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... OUTDIST MODIFICATION LABEL AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL BIN = "Bin" N = "Number of Observations" P_LABEL = "Posterior
Probability Range" EVENT = "Event" LOWPOSTERIOR = "Lower Bound Posterior Probability"
PERCENTAGEOFEVENTS = "Percentage of Events" CUMULATIVEPERCENTAGEOFNONEVENTS = "Cumulative
Percentage of Nonevents" CUMULATIVEPERCENTAGE = "Cumulative Percentage" PERCENTAGEOFEVENTS =
"Percentage of Events" PERCENTAGEOFNONEVENTS = "Percentage of Nonevents"
CUMULATIVEPERCENTAGEOFEVENTS = "Cumulative Percentage of Events" UPPOSTERIOR = "Upper Bound
Posterior Probability" NUMBEROFEVENTS = "Number of Events" PERCENTAGE = "Percentage"
NUMBEROFNONEVENTS = "Number of Nonevents" _MEANP_ = "Mean Posterior Probability" _MINP_ = "Min
Posterior Probability" _MAXP_ = "Max Posterior Probability" SCORE = "Model Score" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   SET WORK._TEMPSCOREDIST (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........... END OF OUTDIST MODIFICATION;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start of OUTRANKS Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPRANK;
MPRINT(EM_ASSESS):   RENAME __EVENT__ = EVENT P_RESP = RESP C_P_CAPT_RESP = CAPC P_CAPT_RESP =
CAP NUMNONRESP = NUMNEVENT NUMRESP = NUMEVENT BASEEVENTS = BASENUMBEROFEVENTS BESTNUMEVENTS =
BESTNUMBEROFEVENTS MAXPROB = _MAXP_ MINPROB = _MINP_ CBASELIFT = BASELIFTC C_LIFT = LIFTC
MNPROB = _MEANP_ PERCENTILE = DECILE NUMOBS = N NUMEVENT = NUMBEROFEVENTS C_P_RESP = RESPC ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................. OUTRANKS;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL _MAXP_ = "Max Posterior Probability" _MINP_ = "Min Posterior
Probability" _MEANP_ = "Mean Posterior Probability" BASECAP = "Baseline % Captured Response"
BASECAPC = "Baseline Cumulative % Captured Response" BASENUMBEROFEVENTS = "Baseline Number of
Events" BASEGAIN = "Baseline Gain" BASELIFT = "Baseline Lift" BASELIFTC = "Baseline Cumulative
Lift" BASERESP = "Baseline % Response" BASERESPC = "Baseline Cumulative % Response" BASELIFTC
= "Baseline Cumulative Lift" BESTCAP = "Best % Captured Response" BESTCAPC = "Best Cumulative
% Captured Response" BESTGAIN = "Best Gain" BESTRESP = "Best % Response" BESTRESPC = "Best
Cumulative % Response" BESTLIFT = "Best Lift" BESTLIFTC = "Best Cumulative Lift"
BESTNUMBEROFEVENTS = "Best Number of Events" CAP = "% Captured Response" CAPC = "Cumulative %
Captured Response" DECILE = "Depth" GAIN = "Gain" LIFT = "Lift" LIFTC = "Cumulative Lift"
NUMNEVENT = "Number of Nonevents" N = "Number of Observations" EVENT = "Event" RESPC =
"Cumulative % Response" NUMBEROFEVENTS = "Number of Events" RESP = "% Response" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK;
MPRINT(EM_ASSESS):   SET WORK._TEMPRANK (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   proc datasets lib=work nolist;
MPRINT(EM_ASSESS):   delete _ea_tmpdata;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_ASSESS):   quit;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   OPTION ERRORS = 20;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):    data WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   retain target "DepVar";
MPRINT(EM_DIAGRAM):   retain TARGETLABEL 'DepVar';
MPRINT(EM_DIAGRAM):   retain dataRole "TRAIN";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural26_EMRANK;
MPRINT(EM_DIAGRAM):   set WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   retain target "DepVar";
MPRINT(EM_DIAGRAM):   retain TARGETLABEL 'DepVar';
MPRINT(EM_DIAGRAM):   retain dataRole "TRAIN";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural26_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   set WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   run;
1139065    data EM_temp_assessMeta;
MPRINT(EM_DIAGRAM):    data EM_temp_assessMeta;
1139066    set EMWS8.AutoNeural26_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural26_CMeta_TRAIN;
1139067    where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION', 'ASSESS', 'COST')
1139067  ! ;
MPRINT(EM_DIAGRAM):   where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION',
'ASSESS', 'COST');
1139068    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set EMWS8.AUTONEURAL26_CMETA_TRAIN.
      WHERE role in ('ASSESS', 'CLASSIFICATION', 'COST', 'DECISION', 'PREDICT', 'RESIDUAL');
NOTE: The data set WORK.EM_TEMP_ASSESSMETA has 8 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1139069    data EM_temp_assessdata;
MPRINT(EM_DIAGRAM):    data EM_temp_assessdata;
1139070    set EMWS8.AutoNeural26_VALIDATE(keep=
1139071    F_DepVar
1139072    I_DepVar
1139073    P_DepVar0
1139074    P_DepVar1
1139075    R_DepVar0
1139076    R_DepVar1
1139077    U_DepVar
1139078    _WARN_
1139079    DepVar
1139080    );
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural26_VALIDATE(keep= F_DepVar I_DepVar P_DepVar0
P_DepVar1 R_DepVar0 R_DepVar1 U_DepVar _WARN_ DepVar );
1139081    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: View EMWS8.AUTONEURAL26_VALIDATE.VIEW used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
 
NOTE: There were 1018 observations read from the data set EMWS8.BINNING_VALIDATE.
NOTE: There were 1018 observations read from the data set EMWS8.AUTONEURAL26_VALIDATE.
NOTE: The data set WORK.EM_TEMP_ASSESSDATA has 1018 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.08 seconds
      cpu time            0.07 seconds
 
 
MPRINT(EM_DIAGRAM):    proc freq data=EM_temp_assessdata noprint;
MPRINT(EM_DIAGRAM):   table I_DepVar*F_DepVar / out = WORK.AutoNeural26_3N2Z84A nocol norow
outpct;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.AutoNeural26_3N2Z84A;
MPRINT(EM_DIAGRAM):   length _TYPE_ $10 DATAROLE TARGET $32 TARGETLABEL $200 FROM INTO $32
CORRECTTEXT $40 ;
MPRINT(EM_DIAGRAM):   label _TYPE_ = "Outcome Type";
MPRINT(EM_DIAGRAM):   label DATAROLE = "Data Role";
MPRINT(EM_DIAGRAM):   label TARGET = "Target Variable";
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   label FROM = "Target";
MPRINT(EM_DIAGRAM):   label INTO = "Outcome";
MPRINT(EM_DIAGRAM):   label PCT_ROW = "Target Percentage";
MPRINT(EM_DIAGRAM):   label PCT_COL = "Outcome Percentage";
MPRINT(EM_DIAGRAM):   label COUNT = "Frequency Count";
MPRINT(EM_DIAGRAM):   label PERCENT = "Total Percentage";
MPRINT(EM_DIAGRAM):   label CORRECTTEXT = "Correct Text";
MPRINT(EM_DIAGRAM):   label CORRECT = "Correct";
MPRINT(EM_DIAGRAM):   set WORK.AutoNeural26_3N2Z84A(rename=(F_DepVar=FROM I_DepVar=INTO));
MPRINT(EM_DIAGRAM):   retain _TYPE_ 'PREDICTION' DATAROLE "VALIDATE" TARGET "DepVar";
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TARGETLABEL = 'DepVar';
MPRINT(EM_DIAGRAM):   if FROM eq INTO then do;
MPRINT(EM_DIAGRAM):   CORRECT = 0;
MPRINT(EM_DIAGRAM):   CORRECTTEXT="Correct";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   CORRECT = 1;
MPRINT(EM_DIAGRAM):   CORRECTTEXT="Incorrect";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural26_EMCLASSIFICATION;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural26_EMCLASSIFICATION WORK.AutoNeural26_3N2Z84A;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   set WORK.AutoNeural26_3N2Z84A;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.MISCREPORT(drop=INTO FROM _TYPE_);
MPRINT(EM_DIAGRAM):   set WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   length MISC $12;
MPRINT(EM_DIAGRAM):   if FROM='1' and INTO='1' then MISC='TRUEEVENT';
MPRINT(EM_DIAGRAM):   else if FROM='1' and INTO ne '1' then MISC='FALSENEVENT';
MPRINT(EM_DIAGRAM):   else if FROM ne '1' and INTO='1' then MISC='FALSEEVENT';
MPRINT(EM_DIAGRAM):   else if FROM ne'1' and INTO ne '1' then MISC='TRUENEVENT';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.MISCREPORT nothreads;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc summary data=WORK.MISCREPORT NWAY;
MPRINT(EM_DIAGRAM):   output out=WORK.MISCCOUNT(drop=_FREQ_ _TYPE_) SUM=COUNT;
MPRINT(EM_DIAGRAM):   CLASS MISC;
MPRINT(EM_DIAGRAM):   VAR COUNT;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc transpose data=WORK.MISCCOUNT out=WORK.MISCREPORT(drop=_NAME_
_LABEL_);
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   ID MISC;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural26_EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   length TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural26_EMEVENTREPORT WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TARGETLABEL = 'DepVar';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data ASSESS_REPORTMETA;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural26_VariableSet;
MPRINT(EM_DIAGRAM):   where REPORT='Y';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename temp catalog 'sashelp.emassmt.em_assess.source';
MPRINT(EM_DIAGRAM):   filename temp;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural26_DepVar_DM;
MPRINT(EM_DIAGRAM):   where _TYPE_="TARGET";
MPRINT(EM_DIAGRAM):   call symput('ASSMT_EVENT', strip(event));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):
MPRINT(EM_ASSESS):   data _ea_tmpdata;
MPRINT(EM_ASSESS):   set EM_temp_assessdata;
MPRINT(EM_ASSESS):   _tmpfreqvar_=1;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_CHECKEMSETINIT):   DATA _NULL_;
MPRINT(EM_CHECKEMSETINIT):   EM_SETINIT = 'N';
MPRINT(EM_CHECKEMSETINIT):   IF SYSPROD('PRODNUM50') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM448') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM102') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM103') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   CALL SYMPUT('EM_SETINIT', EM_SETINIT);
MPRINT(EM_CHECKEMSETINIT):   RUN;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Reading in reporting data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET ASSESS_REPORTMETA END = EOF;
MPRINT(EM_ASSESS):   IF TYPE = "C" OR UPCASE (LEVEL) IN ("NOMINAL", "BINARY" , "ORDINAL") THEN
DO;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) NE UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   NUMCTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTC" || LEFT (PUT (NUMCTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "C");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF UPCASE(NAME) NE UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   NUMNTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTN" || LEFT (PUT (NUMNTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMNTOREPORT", NUMNTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMCTOREPORT", NUMCTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMTOREPORT", SUM (NUMNTOREPORT, NUMCTOREPORT));
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   PROC DMDB DATA = _ea_tmpdata VAROUT = VAROUT DMDBCAT = _D CLASSOUT =
_ASSMT_CLASSOUT;
MPRINT(EM_ASSESS):   CLASS F_DepVar ;
 
MPRINT(EM_ASSESS):   VAR P_DepVar1 _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_;
MPRINT(EM_ASSESS):   RUN ;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   PROC SORT DATA = _ASSMT_CLASSOUT;
MPRINT(EM_ASSESS):   BY NAME;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _auxeventname (keep = __event__) ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ...FLAG0_1 = ..... TARGET IS 0, 1 & EVENT = 1;
 
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   length __event__ $ 32;
MPRINT(EM_ASSESS):   RETAIN FLAG0_1 1 NUM1 . NUM0 . __event__ "_missing_" ;
 
MPRINT(EM_ASSESS):   SET _ASSMT_CLASSOUT END = EOF;
MPRINT(EM_ASSESS):   BY NAME;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ....... LEVEL = BINARY OR NOMINAL OR ORDINAL;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   IF UPCASE(NAME) = UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   CUMFREQ + FREQUENCY;
MPRINT(EM_ASSESS):   IF LEVEL NE "." THEN DO;
MPRINT(EM_ASSESS):   N1 + 1;
MPRINT(EM_ASSESS):   IF (NRAW NE 0 AND NRAW NE 1) OR TYPE NE "N" OR "" > " " THEN FLAG0_1 = 0;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ......................... IF EVENT NE BLANK;
MPRINT(EM_ASSESS):   * ....................LEVEL IS CHAR VAR ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   IF UPCASE("1") = UPCASE(LEVEL) THEN DO;
MPRINT(EM_ASSESS):   NUM1 = FREQUENCY;
MPRINT(EM_ASSESS):   IF TYPE = "C" THEN do;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("EVENTVALUERAW", CRAW );
MPRINT(EM_ASSESS):   __event__ = craw;
MPRINT(EM_ASSESS):   end;
MPRINT(EM_ASSESS):   ELSE do;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("EVENTVALUERAW", NRAW );
MPRINT(EM_ASSESS):   __event__ = nraw;
MPRINT(EM_ASSESS):   end;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF LAST.NAME THEN DO;
 
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * .............. IN NOMINAL CASE, NEED TO GROUP ALL '0' ;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   NUM0 = SUM (CUMFREQ, - NUM1);
MPRINT(EM_ASSESS):   IF NUM0 < 0 THEN NUM0 = 0;
MPRINT(EM_ASSESS):   IF NUM1 = . THEN NUM1 = 0;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUM0", NUM0 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUM1", NUM1);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PNUM1", NUM1 / CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PNUM0", (CUMFREQ - NUM1) / CUMFREQ);
MPRINT(EM_ASSESS):   IF TYPE = "C" THEN DO;
MPRINT(EM_ASSESS):   FLAG0_1 = 0;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "C" );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF "" = " " THEN DO;
MPRINT(EM_ASSESS):   IF "1" NE "1" THEN FLAG0_1 = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "N" );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ................... IF TYPE = N;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("FLAG0_1", FLAG0_1 );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..................IF LAST.NAME ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ...............IF LEVEL NE '.' ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * .............. IF NAME = TARGET;
MPRINT(EM_ASSESS):   ELSE IF "" > " " AND UPCASE(NAME) = UPCASE("") THEN DO;
MPRINT(EM_ASSESS):   NUMDECISIONS + 1;
MPRINT(EM_ASSESS):   LEVEL = TRANSLATE (LEVEL, "_", "'", "_", '"');
MPRINT(EM_ASSESS):   CALL SYMPUTX ("D_LABEL" || LEFT (PUT (NUMDECISIONS, 3.)), LEVEL );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..................... ELSE IF UPCASE;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   output _auxeventname;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMOBS", CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMDECISIONS", NUMDECISIONS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET VAROUT END = EOF;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) = UPCASE ("P_DepVar1") THEN DO;
MPRINT(EM_ASSESS):   IF N = 0 THEN DO;
MPRINT(EM_ASSESS):   PUT //// "          Warning: All posterior probabilities are missing
values ";
MPRINT(EM_ASSESS):   PUT ///;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("ALLMISS", 1);
MPRINT(EM_ASSESS):   STOP;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("ALLMISS", 0);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB", MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB", MAX);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("DIFF", MAX - MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NMISSPROB", NMISS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF UPCASE (NAME) = UPCASE ("_tmpfreqvar_") THEN DO;
MPRINT(EM_ASSESS):   AUXMIN = MIN - INT (MIN);
MPRINT(EM_ASSESS):   AUXMAX = MAX - INT (MAX);
MPRINT(EM_ASSESS):   IF AUXMIN > 0 OR AUXMAX > 0 THEN CALL SYMPUTX ("USEWEIGHT", "Y");
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("USEWEIGHT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _ANY0;
MPRINT(EM_ASSESS):   SET _ea_tmpdata (KEEP = F_DepVar P_DepVar1 _tmpfreqvar_ );
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................... No Formats;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF LEFT ( F_DepVar ) = "1" THEN NTARGET = 1;
MPRINT(EM_ASSESS):   ELSE NTARGET = 0;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .............. Before proc summary of binary case;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC SUMMARY DATA = _ANY0 (KEEP = P_DepVar1 NTARGET _tmpfreqvar_ WHERE =
(NTARGET > . )) NWAY MISSING;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   CLASS P_DepVar1 ;
MPRINT(EM_ASSESS):   VAR NTARGET ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   OUTPUT OUT = ANYSUM (DROP = _TYPE_) MEAN = _MEANTARGET _MEANFREQVAR ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... Main Data Set Processing, Binary case;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK (KEEP = BASECAPC BASECAP __EVENT__ BASEEVENTS
BASEGAIN BASELIFT BASERESP BASERESPC BESTCAP BESTCAPC BESTGAIN BESTLIFT BESTLIFTC
BESTNUMEVENTS BESTRESP BESTRESPC BIN CBASELIFT C_LIFT C_P_CAPT_RESP C_P_RESP GAIN LIFT MAXPROB
MINPROB MNPROB NUMNONRESP NUMOBS NUMRESP PERCENTILE P_CAPT_RESP P_RESP ) WORK._TEMPSCOREDIST
(KEEP = BIN LOWERPROB UPPERPROB EVENTVALUE SCR_NUMEVENTS MODELSCORE SCR_NUMNONEVENTS RANGE
NUMOBSINGROUP PERCOBSINGROUP C_PERCOBSINGROUP SCR_P_EVENTS SCR_CP_EVENTS SCR_P_NONEVENTS
SCR_CP_NONEVENTS SCR_MNPROB SCR_MINPROB SCR_MAXPROB ) ;
 
MPRINT(EM_ASSESS):   SET ANYSUM END = EOF;
 
MPRINT(EM_ASSESS):   IF _N_ = 1 THEN SET _AUXEVENTNAME;
 
MPRINT(EM_ASSESS):   RETAIN MINPROB1 - MINPROB20 1 MAXPROB1 - MAXPROB20 0 MNPROB1 - MNPROB20 0
NUMOBS1 - NUMOBS20 0 NUMRESP1 - NUMRESP20 0 TRUEPOS1 - TRUEPOS100 0 TRUENEG1 - TRUENEG100 0
FALSEPOS1 - FALSEPOS100 0 FALSENEG1 - FALSENEG100 0 EVENTS1 - EVENTS100 NONEVENTS1 -
NONEVENTS100 0 FIRSTIN1 - FIRSTIN100 . LASTIN1 - LASTIN100 . RESPRATE 0.152259332 _NEVENTS 155
_NNONEVENTS 863 TARGET "NTARGET" ;
MPRINT(EM_ASSESS):   ARRAY MINPROBS (20) MINPROB1 - MINPROB20;
MPRINT(EM_ASSESS):   ARRAY MAXPROBS (20) MAXPROB1 - MAXPROB20;
MPRINT(EM_ASSESS):   ARRAY MNPROBS (20) MNPROB1 - MNPROB20;
MPRINT(EM_ASSESS):   ARRAY NUMOBSS (20) NUMOBS1 - NUMOBS20;
MPRINT(EM_ASSESS):   ARRAY NUMRESPS (20) NUMRESP1 - NUMRESP20;
MPRINT(EM_ASSESS):   ARRAY TRUEPOSX (100) TRUEPOS1 - TRUEPOS100;
MPRINT(EM_ASSESS):   ARRAY FALSEPOSX (100) FALSEPOS1 - FALSEPOS100;
MPRINT(EM_ASSESS):   ARRAY FALSENEGX (100) FALSENEG1 - FALSENEG100;
MPRINT(EM_ASSESS):   ARRAY TRUENEGX (100) TRUENEG1 - TRUENEG100;
MPRINT(EM_ASSESS):   ARRAY _EVENTS (100) EVENTS1 - EVENTS100;
MPRINT(EM_ASSESS):   ARRAY NONEVENTS (100) NONEVENTS1 - NONEVENTS100;
MPRINT(EM_ASSESS):   ARRAY FIRSTIN (100) FIRSTIN1 - FIRSTIN100;
MPRINT(EM_ASSESS):   ARRAY LASTIN (100) LASTIN1 - LASTIN100;
MPRINT(EM_ASSESS):   RETAIN SCR_MNPROB1 - SCR_MNPROB100 0 SCR_MINPROB1 - SCR_MINPROB100 1
SCR_MAXPROB1 - SCR_MAXPROB100 0;
MPRINT(EM_ASSESS):   ARRAY SCR_MNPROBS (100) SCR_MNPROB1 - SCR_MNPROB100;
MPRINT(EM_ASSESS):   ARRAY SCR_MINPROBS (100) SCR_MINPROB1 - SCR_MINPROB100;
MPRINT(EM_ASSESS):   ARRAY SCR_MAXPROBS (100) SCR_MAXPROB1 - SCR_MAXPROB100;
MPRINT(EM_ASSESS):   DROP SCR_MINPROB1 - SCR_MINPROB100 SCR_MAXPROB1 - SCR_MAXPROB100
SCR_MNPROB1 - SCR_MNPROB100 ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...... Area For 8 Financials ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF _MEANTARGET = . THEN _MEANTARGET = RESPRATE;
MPRINT(EM_ASSESS):   DROP N1 _K SUMWEIGHTS ;
MPRINT(EM_ASSESS):   SUMWEIGHTS = 1;
 
MPRINT(EM_ASSESS):   DO _K = 1 TO CEIL (_FREQ_);
MPRINT(EM_ASSESS):   IF _K = CEIL (_FREQ_) THEN DO;
MPRINT(EM_ASSESS):   IF _FREQ_ < CEIL (_FREQ_) THEN _WEIGHT = _FREQ_ - FLOOR (_FREQ_);
MPRINT(EM_ASSESS):   ELSE _WEIGHT = 1;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE _WEIGHT = 1;
MPRINT(EM_ASSESS):   N1 + _WEIGHT;
MPRINT(EM_ASSESS):   NTARGET = _MEANTARGET ;
MPRINT(EM_ASSESS):   DECILE = MIN (20, CEIL (N1 * 20 / 1018));
MPRINT(EM_ASSESS):   MINPROBS ( DECILE) = MIN (MINPROBS ( DECILE), P_DepVar1 );
MPRINT(EM_ASSESS):   MAXPROBS ( DECILE) = MAX (MAXPROBS ( DECILE), P_DepVar1 );
MPRINT(EM_ASSESS):   MNPROBS ( DECILE) = SUM (MNPROBS ( DECILE), P_DepVar1 * _WEIGHT);
MPRINT(EM_ASSESS):   NUMOBSS ( DECILE) = NUMOBSS ( DECILE) + _WEIGHT;
MPRINT(EM_ASSESS):   NUMRESPS ( DECILE) = NUMRESPS ( DECILE) + _MEANTARGET * _WEIGHT;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ outside of do loop, Area for final ROC;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   RANKDELTA = (ROUND ( _FREQ_ ) + 1) / 2;
MPRINT(EM_ASSESS):   RANK = UNTIEDRANK + RANKDELTA;
MPRINT(EM_ASSESS):   DROP RANK ;
MPRINT(EM_ASSESS):   SUMRANK1 + RANK * ROUND (_MEANTARGET * _FREQ_, .0000001);
MPRINT(EM_ASSESS):   UNTIEDRANK + ROUND (_FREQ_, .00000001);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Area For ROC Curve;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DO _K = 1 TO 100;
MPRINT(EM_ASSESS):   IF P_DepVar1 * 100 >= _K THEN DO;
MPRINT(EM_ASSESS):   TRUEPOSX ( _K ) + _FREQ_ * _MEANTARGET ;
MPRINT(EM_ASSESS):   FALSEPOSX ( _K ) + _FREQ_ * (1 - _MEANTARGET) ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   TRUENEGX ( _K ) + _FREQ_ * ( 1 - _MEANTARGET) ;
MPRINT(EM_ASSESS):   FALSENEGX ( _K ) + _FREQ_ * _MEANTARGET ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   SLOT = MIN (MAX (CEIL (P_DepVar1 * 100), 1), 100) ;
MPRINT(EM_ASSESS):   DROP SLOT;
MPRINT(EM_ASSESS):   FIRSTIN ( SLOT ) = MIN ( FIRSTIN ( SLOT ), P_DepVar1);
MPRINT(EM_ASSESS):   LASTIN ( SLOT ) = MAX ( LASTIN ( SLOT ), P_DepVar1);
MPRINT(EM_ASSESS):   _EVENTS ( SLOT) = _EVENTS ( SLOT) + _FREQ_ * _MEANTARGET;
MPRINT(EM_ASSESS):   NONEVENTS ( SLOT) = NONEVENTS ( SLOT) + _FREQ_ * (1 - _MEANTARGET);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ START OF OUTDIST IN BINARY CASE MAIN DATA STEP ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   SCR_MNPROBS ( SLOT ) = SUM (SCR_MNPROBS (SLOT), P_DepVar1 * _FREQ_ );
MPRINT(EM_ASSESS):   SCR_MINPROBS ( SLOT ) = MIN (SCR_MINPROBS (SLOT), P_DepVar1 );
MPRINT(EM_ASSESS):   SCR_MAXPROBS ( SLOT ) = MAX (SCR_MAXPROBS (SLOT), P_DepVar1 );
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ End of Outdist in Binary case main DATA STEP ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   PUT //;
MPRINT(EM_ASSESS):   DO K = 1 TO 20;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LENGTH EVENTVALUE $ 32;
MPRINT(EM_ASSESS):   RETAIN EVENTVALUE "1" ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ......... Start of EOF area of BINARY processing of main data set ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SUMRANK1", SUMRANK1);
MPRINT(EM_ASSESS):   LENGTH DATAROLE $ 10;
MPRINT(EM_ASSESS):   RETAIN DATAROLE "VALIDATE" ;
MPRINT(EM_ASSESS):   RETAIN OVLMIN 0.0000470392 OVLMAX 0.4737523289 ;
MPRINT(EM_ASSESS):   DROP OVLMIN OVLMAX ;
MPRINT(EM_ASSESS):   C_NUMOBS = 0;
MPRINT(EM_ASSESS):   C_NUM_RESP = 0;
MPRINT(EM_ASSESS):   C_NUM_NONRESP = 0;
MPRINT(EM_ASSESS):   C_P_RESP = 0;
MPRINT(EM_ASSESS):   P_CAPT_RESP = 0;
MPRINT(EM_ASSESS):   C_P_CAPT_RESP = 0;
MPRINT(EM_ASSESS):   PREVIOUSPROFIT = 0;
MPRINT(EM_ASSESS):   MAXPROFIT = 0;
MPRINT(EM_ASSESS):   _KS_BIN_ = 0;
MPRINT(EM_ASSESS):   DROP _KS_BIN_;
MPRINT(EM_ASSESS):   AVGNUMRESP = _NEVENTS / 20;
MPRINT(EM_ASSESS):   BASERESP = 100 * RESPRATE;
MPRINT(EM_ASSESS):   BASERESPC = BASERESP;
MPRINT(EM_ASSESS):   BASECAP = 100 / 20;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................Start OF Gainschart = Outranks Area;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   _KS_BIN_PROB = 0;
MPRINT(EM_ASSESS):   DO GROUP = 20 TO 1 BY -1;
 
MPRINT(EM_ASSESS):   BASECAPC + BASECAP;
MPRINT(EM_ASSESS):   PERCENTILE = GROUP * (100 / 20);
MPRINT(EM_ASSESS):   MINPROB = MINPROBS ( GROUP);
MPRINT(EM_ASSESS):   MAXPROB = MAXPROBS ( GROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB" || LEFT ( PUT (GROUP, 3.)), MINPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB" || LEFT ( PUT (GROUP, 3.)), MAXPROB);
MPRINT(EM_ASSESS):   NUMOBS = NUMOBSS ( GROUP);
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN MNPROB = MNPROBS ( GROUP) / NUMOBS;
MPRINT(EM_ASSESS):   ELSE MNPROB = .;
MPRINT(EM_ASSESS):   C_NUMOBS = SUM (NUMOBS, C_NUMOBS);
MPRINT(EM_ASSESS):   NUMRESP = NUMRESPS ( GROUP);
MPRINT(EM_ASSESS):   NUMNONRESP = NUMOBS - NUMRESP;
MPRINT(EM_ASSESS):   C_AVGNUM_RESP + AVGNUMRESP;
MPRINT(EM_ASSESS):   IF C_NUMOBS <= _NEVENTS THEN DO;
MPRINT(EM_ASSESS):   BESTNUMEVENTS = NUMOBS;
MPRINT(EM_ASSESS):   BESTCAPC = C_NUMOBS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   BASEEVENTS = _NEVENTS / 20;
MPRINT(EM_ASSESS):   BASENONEVENTS = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   FLAG + 1;
MPRINT(EM_ASSESS):   DROP FLAG;
MPRINT(EM_ASSESS):   BESTNUMEVENTS = _NEVENTS - C_NUMOBS + NUMOBS;
MPRINT(EM_ASSESS):   IF FLAG > 1 THEN BESTNUMEVENTS = 0;
MPRINT(EM_ASSESS):   BESTCAPC = 100;
MPRINT(EM_ASSESS):   IF C_NUMOBS - _NEVENTS <= NUMOBS THEN DO;
MPRINT(EM_ASSESS):   BASEEVENTS = C_NUMOBS - _NEVENTS;
MPRINT(EM_ASSESS):   BASENONEVENTS = NUMOBS - C_NUMOBS + _NEVENTS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BASEEVENTS = 0;
MPRINT(EM_ASSESS):   BASENONEVENTS = NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   BESTCAP = BESTNUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   BESTLIFT = BESTNUMEVENTS / AVGNUMRESP;
MPRINT(EM_ASSESS):   C_BESTNUMEVENTS + BESTNUMEVENTS;
MPRINT(EM_ASSESS):   DROP C_BESTNUMEVENTS;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN BESTLIFTC = C_BESTNUMEVENTS / (_NEVENTS / 1018 *
C_NUMOBS);
MPRINT(EM_ASSESS):   ELSE BESTLIFTC = .;
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BESTRESP = BESTNUMEVENTS * 100 / NUMOBS;
MPRINT(EM_ASSESS):   P_RESP = NUMRESP * 100 / NUMOBS;
MPRINT(EM_ASSESS):   P_NONRESP = NUMNONRESP * 100 / NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTRESP = .;
MPRINT(EM_ASSESS):   P_RESP = .;
MPRINT(EM_ASSESS):   P_NONRESP = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BESTRESPC = C_BESTNUMEVENTS * 100 / C_NUMOBS;
MPRINT(EM_ASSESS):   BESTGAIN = MAX (0, ((C_BESTNUMEVENTS / C_NUMOBS ) / ( AVGNUMRESP /
NUMOBS) - 1) * 100);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTRESPC = .;
MPRINT(EM_ASSESS):   BESTGAIN = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF NUMNONRESP > 0 THEN ODDS = NUMRESP / NUMNONRESP;
MPRINT(EM_ASSESS):   ELSE ODDS = .;
MPRINT(EM_ASSESS):   C_NUM_RESP = SUM (C_NUM_RESP , NUMRESP );
MPRINT(EM_ASSESS):   C_NUM_NONRESP = SUM (C_NUM_NONRESP, NUMNONRESP );
MPRINT(EM_ASSESS):   IF C_NUM_NONRESP > 0 THEN C_ODDS = C_NUM_RESP / C_NUM_NONRESP;
MPRINT(EM_ASSESS):   ELSE C_ODDS = .;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   C_P_RESP = C_NUM_RESP * 100 / C_NUMOBS;
MPRINT(EM_ASSESS):   GAIN = ABS(100 * (((C_NUM_RESP / C_NUMOBS ) / (_NEVENTS / 1018)) - 1));
MPRINT(EM_ASSESS):   BASEGAIN = 100 * (( (C_AVGNUM_RESP / C_NUMOBS) / ( AVGNUMRESP / NUMOBS))
- 1);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   GAIN = .;
MPRINT(EM_ASSESS):   BASEGAIN = .;
MPRINT(EM_ASSESS):   C_P_RESP = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF BASEGAIN <= 0 THEN BASEGAIN = 0;
MPRINT(EM_ASSESS):   P_CAPT_RESP = NUMRESP * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   P_CAPT_NONRESP = NUMNONRESP * 100 / ( 1018 - _NEVENTS);
MPRINT(EM_ASSESS):   C_P_CAPT_RESP = C_NUM_RESP * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   C_P_CAPT_NONRESP = C_NUM_NONRESP * 100 / ( 1018 - _NEVENTS);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Area For Binned KS in Outranks area;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   _DIFFERENCE = C_P_CAPT_RESP - C_P_CAPT_NONRESP ;
MPRINT(EM_ASSESS):   IF _KS_BIN_ < _DIFFERENCE THEN DO;
MPRINT(EM_ASSESS):   _KS_BIN_ = _DIFFERENCE;
MPRINT(EM_ASSESS):   _KS_BIN_PROB = MINPROB + (MAXPROB - MINPROB) / 2 ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LIFT = P_RESP * .01 / RESPRATE ;
MPRINT(EM_ASSESS):   C_LIFT = C_P_RESP * .01 / RESPRATE;
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BASELIFT = AVGNUMRESP / ( RESPRATE * NUMOBS );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE BASELIFT = .;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN CBASELIFT = C_AVGNUM_RESP / (RESPRATE * C_NUMOBS);
MPRINT(EM_ASSESS):   ELSE CBASELIFT = .;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ WITHIN DO LOOP FOR OUTRANKS;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   BIN = 20 + 1 - GROUP;
MPRINT(EM_ASSESS):   PERCENTILE = BIN * (100 / 20);
MPRINT(EM_ASSESS):   B_C_P_RESP = PERCENTILE;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPRANK ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................ END OF GAINSCHART = OUTRANKS AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROFITGROUP" , MAXPROFITGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROFIT" , MAXPROFIT );
MPRINT(EM_ASSESS):   KS_ABSDIFF = 0 ;
MPRINT(EM_ASSESS):   MINPRECTPR = 9999;
MPRINT(EM_ASSESS):   Y0 = 1 - RESPRATE;
MPRINT(EM_ASSESS):   Y1 = RESPRATE;
MPRINT(EM_ASSESS):   MAXMUTUAL = 0;
MPRINT(EM_ASSESS):   DROP MAXMUTUAL KSPROB Y0 Y1 KS_ABSDIFF MINPRECTPR;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .....................About to start Processing Outroc ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................... Finished Processing Outroc ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .............. Outdist ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   BIN = 20 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS96 - EVENTS100 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS96 - NONEVENTS100);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB96 -
SCR_MNPROB100) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB96 - SCR_MINPROB100) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB96 - SCR_MAXPROB100) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 20;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 19 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS91 - EVENTS95 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS91 - NONEVENTS95);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB91 -
SCR_MNPROB95) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB91 - SCR_MINPROB95) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB91 - SCR_MAXPROB95) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 19;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 18 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS86 - EVENTS90 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS86 - NONEVENTS90);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB86 -
SCR_MNPROB90) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB86 - SCR_MINPROB90) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB86 - SCR_MAXPROB90) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 18;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 17 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS81 - EVENTS85 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS81 - NONEVENTS85);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB81 -
SCR_MNPROB85) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB81 - SCR_MINPROB85) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB81 - SCR_MAXPROB85) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 17;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 16 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS76 - EVENTS80 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS76 - NONEVENTS80);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB76 -
SCR_MNPROB80) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB76 - SCR_MINPROB80) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB76 - SCR_MAXPROB80) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 16;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 15 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS71 - EVENTS75 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS71 - NONEVENTS75);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB71 -
SCR_MNPROB75) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB71 - SCR_MINPROB75) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB71 - SCR_MAXPROB75) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 15;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 14 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS66 - EVENTS70 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS66 - NONEVENTS70);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB66 -
SCR_MNPROB70) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB66 - SCR_MINPROB70) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB66 - SCR_MAXPROB70) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 14;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 13 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS61 - EVENTS65 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS61 - NONEVENTS65);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB61 -
SCR_MNPROB65) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB61 - SCR_MINPROB65) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB61 - SCR_MAXPROB65) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 13;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 12 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS56 - EVENTS60 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS56 - NONEVENTS60);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB56 -
SCR_MNPROB60) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB56 - SCR_MINPROB60) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB56 - SCR_MAXPROB60) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 12;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 11 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS51 - EVENTS55 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS51 - NONEVENTS55);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB51 -
SCR_MNPROB55) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB51 - SCR_MINPROB55) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB51 - SCR_MAXPROB55) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 11;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 10 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS46 - EVENTS50 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS46 - NONEVENTS50);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB46 -
SCR_MNPROB50) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB46 - SCR_MINPROB50) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB46 - SCR_MAXPROB50) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 10;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 9 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS41 - EVENTS45 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS41 - NONEVENTS45);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB41 -
SCR_MNPROB45) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB41 - SCR_MINPROB45) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB41 - SCR_MAXPROB45) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 9;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 8 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS36 - EVENTS40 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS36 - NONEVENTS40);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB36 -
SCR_MNPROB40) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB36 - SCR_MINPROB40) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB36 - SCR_MAXPROB40) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 8;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 7 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS31 - EVENTS35 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS31 - NONEVENTS35);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB31 -
SCR_MNPROB35) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB31 - SCR_MINPROB35) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB31 - SCR_MAXPROB35) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 7;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 6 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS26 - EVENTS30 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS26 - NONEVENTS30);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB26 -
SCR_MNPROB30) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB26 - SCR_MINPROB30) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB26 - SCR_MAXPROB30) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 6;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 5 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS21 - EVENTS25 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS21 - NONEVENTS25);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB21 -
SCR_MNPROB25) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB21 - SCR_MINPROB25) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB21 - SCR_MAXPROB25) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 5;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 4 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS16 - EVENTS20 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS16 - NONEVENTS20);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB16 -
SCR_MNPROB20) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB16 - SCR_MINPROB20) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB16 - SCR_MAXPROB20) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 4;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 3 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS11 - EVENTS15 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS11 - NONEVENTS15);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB11 -
SCR_MNPROB15) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB11 - SCR_MINPROB15) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB11 - SCR_MAXPROB15) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 3;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 2 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS6 - EVENTS10 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS6 - NONEVENTS10);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB6 -
SCR_MNPROB10) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB6 - SCR_MINPROB10) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB6 - SCR_MAXPROB10) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 2;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 1 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS1 - EVENTS5 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS1 - NONEVENTS5);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB1 - SCR_MNPROB5)
/ NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB1 - SCR_MINPROB5) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB1 - SCR_MAXPROB5) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 1;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("KSPROB" , PUT (KSPROB, 5.3 ) );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("_KS_BIN_PROB" , _KS_BIN_PROB );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("_KS_BIN_" , _KS_BIN_ / 100 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("KSDIFF" , KS_ABSDIFF );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PRECTPR" , PRECTPR );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXMUTUALPROB" , MAXMUTUALPROB);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LABEL __EVENT__ = "Event" DECILE = "Depth" BIN = "Bin" NUMOBS = "Number
of Observations" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * RUN for large data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST;
MPRINT(EM_ASSESS):   DELETE _AUXEVENTNAME;
MPRINT(EM_ASSESS):   QUIT;
 
MPRINT(EM_ASSESS):   OPTION NOCENTER LS = 95;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Report Vars Area.;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start OF Outdist Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPSCOREDIST;
MPRINT(EM_ASSESS):   RENAME MODELSCORE = SCORE UPPERPROB = UPPOSTERIOR SCR_CP_EVENTS =
CUMULATIVEPERCENTAGEOFEVENTS SCR_CP_NONEVENTS = CUMULATIVEPERCENTAGEOFNONEVENTS EVENTVALUE =
EVENT LOWERPROB = LOWPOSTERIOR NUMOBSINGROUP = N PERCOBSINGROUP = PERCENTAGE SCR_MINPROB =
_MINP_ SCR_MAXPROB = _MAXP_ SCR_MNPROB = _MEANP_ RANGE = P_LABEL C_PERCOBSINGROUP =
CUMULATIVEPERCENTAGE SCR_NUMEVENTS = NUMBEROFEVENTS SCR_NUMNONEVENTS = NUMBEROFNONEVENTS
SCR_P_EVENTS = PERCENTAGEOFEVENTS SCR_P_NONEVENTS = PERCENTAGEOFNONEVENTS ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... OUTDIST MODIFICATION LABEL AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL BIN = "Bin" N = "Number of Observations" P_LABEL = "Posterior
Probability Range" EVENT = "Event" LOWPOSTERIOR = "Lower Bound Posterior Probability"
PERCENTAGEOFEVENTS = "Percentage of Events" CUMULATIVEPERCENTAGEOFNONEVENTS = "Cumulative
Percentage of Nonevents" CUMULATIVEPERCENTAGE = "Cumulative Percentage" PERCENTAGEOFEVENTS =
"Percentage of Events" PERCENTAGEOFNONEVENTS = "Percentage of Nonevents"
CUMULATIVEPERCENTAGEOFEVENTS = "Cumulative Percentage of Events" UPPOSTERIOR = "Upper Bound
Posterior Probability" NUMBEROFEVENTS = "Number of Events" PERCENTAGE = "Percentage"
NUMBEROFNONEVENTS = "Number of Nonevents" _MEANP_ = "Mean Posterior Probability" _MINP_ = "Min
Posterior Probability" _MAXP_ = "Max Posterior Probability" SCORE = "Model Score" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   SET WORK._TEMPSCOREDIST (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........... END OF OUTDIST MODIFICATION;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start of OUTRANKS Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPRANK;
MPRINT(EM_ASSESS):   RENAME __EVENT__ = EVENT P_RESP = RESP C_P_CAPT_RESP = CAPC P_CAPT_RESP =
CAP NUMNONRESP = NUMNEVENT NUMRESP = NUMEVENT BASEEVENTS = BASENUMBEROFEVENTS BESTNUMEVENTS =
BESTNUMBEROFEVENTS MAXPROB = _MAXP_ MINPROB = _MINP_ CBASELIFT = BASELIFTC C_LIFT = LIFTC
MNPROB = _MEANP_ PERCENTILE = DECILE NUMOBS = N NUMEVENT = NUMBEROFEVENTS C_P_RESP = RESPC ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................. OUTRANKS;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL _MAXP_ = "Max Posterior Probability" _MINP_ = "Min Posterior
Probability" _MEANP_ = "Mean Posterior Probability" BASECAP = "Baseline % Captured Response"
BASECAPC = "Baseline Cumulative % Captured Response" BASENUMBEROFEVENTS = "Baseline Number of
Events" BASEGAIN = "Baseline Gain" BASELIFT = "Baseline Lift" BASELIFTC = "Baseline Cumulative
Lift" BASERESP = "Baseline % Response" BASERESPC = "Baseline Cumulative % Response" BASELIFTC
= "Baseline Cumulative Lift" BESTCAP = "Best % Captured Response" BESTCAPC = "Best Cumulative
% Captured Response" BESTGAIN = "Best Gain" BESTRESP = "Best % Response" BESTRESPC = "Best
Cumulative % Response" BESTLIFT = "Best Lift" BESTLIFTC = "Best Cumulative Lift"
BESTNUMBEROFEVENTS = "Best Number of Events" CAP = "% Captured Response" CAPC = "Cumulative %
Captured Response" DECILE = "Depth" GAIN = "Gain" LIFT = "Lift" LIFTC = "Cumulative Lift"
NUMNEVENT = "Number of Nonevents" N = "Number of Observations" EVENT = "Event" RESPC =
"Cumulative % Response" NUMBEROFEVENTS = "Number of Events" RESP = "% Response" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK;
MPRINT(EM_ASSESS):   SET WORK._TEMPRANK (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   proc datasets lib=work nolist;
MPRINT(EM_ASSESS):   delete _ea_tmpdata;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_ASSESS):   quit;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   OPTION ERRORS = 20;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):    data WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   retain target "DepVar";
MPRINT(EM_DIAGRAM):   retain TARGETLABEL 'DepVar';
MPRINT(EM_DIAGRAM):   retain dataRole "VALIDATE";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural26_EMRANK;
MPRINT(EM_DIAGRAM):   length target $32;
MPRINT(EM_DIAGRAM):   length TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   length dataRole $20;
MPRINT(EM_DIAGRAM):   length EVENT $32;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural26_EMRANK WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   retain target "DepVar";
MPRINT(EM_DIAGRAM):   retain TARGETLABEL 'DepVar';
MPRINT(EM_DIAGRAM):   retain dataRole "VALIDATE";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural26_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   length target $32;
MPRINT(EM_DIAGRAM):   length TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   length dataRole $20;
MPRINT(EM_DIAGRAM):   length EVENT $32;
MPRINT(EM_DIAGRAM):   length P_LABEL $9;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural26_EMSCOREDIST WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   run;
1143356    %let _cn = %sysfunc(getoption(CENTER));
1143357    options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
1143358    proc print data=EMWS8.AutoNeural26_EMREPORTFIT noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural26_EMREPORTFIT noobs label;
1143359    var STAT LABEL TRAIN
1143360    VALIDATE
1143361    ;
MPRINT(EM_DIAGRAM):   var STAT LABEL TRAIN VALIDATE ;
1143362    by TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by TARGET TARGETLABEL;
1143363    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
1143364    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_fitstat_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Fit Statistics";
MPRINT(EM_DIAGRAM):   run;
1143365    run;
 
NOTE: There were 21 observations read from the data set EMWS8.AUTONEURAL26_EMREPORTFIT.
NOTE: The PROCEDURE PRINT printed page 886.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1143366    title10;
MPRINT(EM_DIAGRAM):   title10;
1143367    options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
1143368    proc sort data=EMWS8.AutoNeural26_EMCLASSIFICATION nothreads;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS8.AutoNeural26_EMCLASSIFICATION nothreads;
1143369    by DATAROLE TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET TARGETLABEL;
1143370    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set EMWS8.AUTONEURAL26_EMCLASSIFICATION.
NOTE: The data set EMWS8.AUTONEURAL26_EMCLASSIFICATION has 4 observations and 12 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1143371    %let _cn = %sysfunc(getoption(CENTER));
1143372    options nocenter;
MPRINT(EM_DIAGRAM):   options nocenter;
1143373    proc print data=EMWS8.AutoNeural26_EMCLASSIFICATION noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural26_EMCLASSIFICATION noobs label;
1143374    var from into pct_row pct_col count percent
1143375    ;
MPRINT(EM_DIAGRAM):   var from into pct_row pct_col count percent ;
1143376    by DATAROLE TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET TARGETLABEL;
1143377    label FROM = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel ,     NOQUOTE))";
MPRINT(EM_DIAGRAM):   label FROM = "Target";
1143378    label INTO = "%sysfunc(sasmsg(sashelp.dmine, rpt_outcome_vlabel ,    NOQUOTE))";
MPRINT(EM_DIAGRAM):   label INTO = "Outcome";
1143379    label PCT_ROW = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetpct_vlabel ,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PCT_ROW = "Target Percentage";
1143380    label PCT_COL = "%sysfunc(sasmsg(sashelp.dmine, rpt_outcomepct_vlabel , NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PCT_COL = "Outcome Percentage";
1143381    label COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel ,      NOQUOTE))";
MPRINT(EM_DIAGRAM):   label COUNT = "Frequency Count";
1143382    label PERCENT = "%sysfunc(sasmsg(sashelp.dmine, rpt_totalpct_vlabel ,   NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PERCENT = "Total Percentage";
1143383    where _TYPE_='PREDICTION';
MPRINT(EM_DIAGRAM):   where _TYPE_='PREDICTION';
1143384    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
1143385    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_classification_title    , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Classification Table";
MPRINT(EM_DIAGRAM):   run;
1143386    run;
 
NOTE: There were 4 observations read from the data set EMWS8.AUTONEURAL26_EMCLASSIFICATION.
      WHERE _TYPE_='PREDICTION';
NOTE: The PROCEDURE PRINT printed page 887.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
1143387    title9;
MPRINT(EM_DIAGRAM):   title9;
1143388    title10;
MPRINT(EM_DIAGRAM):   title10;
1143389    options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
1143390    %let _cn = %sysfunc(getoption(CENTER));
1143391    options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
1143392    data EMWS8.AutoNeural26_EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural26_EMEVENTREPORT;
1143393    length DATAROLE TARGET $32 TARGETLABEL $200 FALSENEVENT TRUENEVENT FALSEEVENT
1143393  ! TRUEEVENT 8;
MPRINT(EM_DIAGRAM):   length DATAROLE TARGET $32 TARGETLABEL $200 FALSENEVENT TRUENEVENT
FALSEEVENT TRUEEVENT 8;
1143394    label DATAROLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))"
1143394  !  TARGET = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel ,      NOQUOTE))"
1143394  ! TARGETLABEL = "%sysfunc(sasmsg(sashelp.dmine, meta_targetlabel_vlabel, NOQUOTE))"
1143394  ! FALSEEVENT
1143395    = "%sysfunc(sasmsg(sashelp.dmine, rpt_falseevent_vlabel ,  NOQUOTE))" FALSENEVENT =
1143395  ! "%sysfunc(sasmsg(sashelp.dmine, rpt_falsenevent_vlabel , NOQUOTE))" TRUEEVENT =
1143395  ! "%sysfunc(sasmsg(sashelp.dmine, rpt_trueevent_vlabel ,   NOQUOTE))" TRUENEVENT =
1143396       "%sysfunc(sasmsg(sashelp.dmine, rpt_truenevent_vlabel ,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label DATAROLE = "Data Role" TARGET = "Target" TARGETLABEL = "Target
Label" FALSEEVENT = "False Positive" FALSENEVENT = "False Negative" TRUEEVENT = "True
Positive" TRUENEVENT = "True Negative";
1143397    FALSEEVENT=0;
MPRINT(EM_DIAGRAM):   FALSEEVENT=0;
1143398    FALSENEVENT=0;
MPRINT(EM_DIAGRAM):   FALSENEVENT=0;
1143399    TRUEEVENT=0;
MPRINT(EM_DIAGRAM):   TRUEEVENT=0;
1143400    TRUENEVENT=0;
MPRINT(EM_DIAGRAM):   TRUENEVENT=0;
1143401    set EMWS8.AutoNeural26_EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural26_EMEVENTREPORT;
1143402    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set EMWS8.AUTONEURAL26_EMEVENTREPORT.
NOTE: The data set EMWS8.AUTONEURAL26_EMEVENTREPORT has 2 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1143403    proc print data=EMWS8.AutoNeural26_EMEVENTREPORT noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural26_EMEVENTREPORT noobs label;
1143404    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
1143405    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_eventtable_title    , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Event Classification Table";
MPRINT(EM_DIAGRAM):   by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL;
MPRINT(EM_DIAGRAM):   run;
1143406    by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL;
1143407    run;
 
NOTE: There were 2 observations read from the data set EMWS8.AUTONEURAL26_EMEVENTREPORT.
NOTE: The PROCEDURE PRINT printed page 888.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1143408    title10;
MPRINT(EM_DIAGRAM):   title10;
1143409    options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
1143410    proc datasets library=EMWS8 nolist;
MPRINT(EM_DIAGRAM):    proc datasets library=EMWS8 nolist;
1143411    modify AutoNeural26_EMRANK;
MPRINT(EM_DIAGRAM):   modify AutoNeural26_EMRANK;
MPRINT(EM_DIAGRAM):   label target = "Target Variable";
1143412    label target = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetvar_vlabel ,   NOQUOTE))";
MPRINT(EM_DIAGRAM):   label datarole = "Data Role";
1143413    label datarole = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))"
1143413  ! ;
MPRINT(EM_DIAGRAM):   run;
1143414    run;
 
NOTE: MODIFY was successful for EMWS8.AUTONEURAL26_EMRANK.DATA.
1143415    quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.16 seconds
      cpu time            0.14 seconds
 
 
1143416    %let _cn = %sysfunc(getoption(CENTER));
1143417    options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
1143418    proc print data=EMWS8.AutoNeural26_EMRANK label noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural26_EMRANK label noobs;
1143419    var
1143420    decile gain lift liftc resp respc N _meanP_;
MPRINT(EM_DIAGRAM):   var decile gain lift liftc resp respc N _meanP_;
1143421    by
1143422    notsorted DATAROLE
1143423    notsorted TARGET
1143424    notsorted TARGETLABEL
1143425    ;
MPRINT(EM_DIAGRAM):   by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL ;
1143426    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
1143427    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_scoreranking_title , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Assessment Score Rankings";
MPRINT(EM_DIAGRAM):   run;
1143428    run;
 
NOTE: There were 40 observations read from the data set EMWS8.AUTONEURAL26_EMRANK.
NOTE: The PROCEDURE PRINT printed page 889.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1143429    title10;
MPRINT(EM_DIAGRAM):   title10;
1143430    options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
1143431    proc datasets library=EMWS8 nolist;
MPRINT(EM_DIAGRAM):    proc datasets library=EMWS8 nolist;
1143432    modify AutoNeural26_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   modify AutoNeural26_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   label target = "Target Variable";
1143433    label target = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetvar_vlabel ,
1143433  ! NOQUOTE))";
MPRINT(EM_DIAGRAM):   label datarole = "Data Role";
1143434    label datarole = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))"
1143434  ! ;
MPRINT(EM_DIAGRAM):   run;
1143435    run;
 
NOTE: MODIFY was successful for EMWS8.AUTONEURAL26_EMSCOREDIST.DATA.
1143436    quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.17 seconds
      cpu time            0.17 seconds
 
 
MPRINT(EM_DIAGRAM):    options nocenter;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural26_EMSCOREDIST label noobs;
MPRINT(EM_DIAGRAM):   var p_label numberOfEvents numberOfNonEvents _meanp_ percentage;
MPRINT(EM_DIAGRAM):   by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL ;
MPRINT(EM_DIAGRAM):   where TARGET in( "DepVar" );
MPRINT(EM_DIAGRAM):   title9 ' ';
MPRINT(EM_DIAGRAM):   title10 "Assessment Score Distribution";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   title10;
MPRINT(EM_DIAGRAM):   options NOCENTER;
MPRINT(EM_DIAGRAM):   proc printto;
MPRINT(EM_DIAGRAM):   run;
