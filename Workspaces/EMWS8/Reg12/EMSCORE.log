MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "28. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "11.16 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                28. April 2016
Time:                11.16 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O3T5LE_I 
"C:\\predictive-models-project\Workspaces\EMWS8\Reg12\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O3T5LE_I new;
MPRINT(EM_DIAGRAM):   run;
3138702    proc transpose data=EMWS8.Reg12_EMESTIMATE out=WORK.TEMPREG;
MPRINT(EM_DIAGRAM):    proc transpose data=EMWS8.Reg12_EMESTIMATE out=WORK.TEMPREG;
3138703    where _CHOSEN_ ne '' and _TYPE_='PARMS';
MPRINT(EM_DIAGRAM):   where _CHOSEN_ ne '' and _TYPE_='PARMS';
3138704    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set EMWS8.REG12_EMESTIMATE.
      WHERE (_CHOSEN_ not = ' ') and (_TYPE_='PARMS');
NOTE: The data set WORK.TEMPREG has 65 observations and 3 variables.
NOTE: PROCEDURE TRANSPOSE used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

3138705    proc transpose data=EMWS8.Reg12_MAPDS out=WORK.TEMPREG2;
MPRINT(EM_DIAGRAM):   proc transpose data=EMWS8.Reg12_MAPDS out=WORK.TEMPREG2;
3138706    var "AcceptedCmp10"n--"Teenhome"n;
MPRINT(EM_DIAGRAM):   var "AcceptedCmp10"n--"Teenhome"n;
3138707    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2 observations read from the data set EMWS8.REG12_MAPDS.
NOTE: The data set WORK.TEMPREG2 has 31 observations and 4 variables.
NOTE: PROCEDURE TRANSPOSE used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

3138708    proc sort data=WORK.TEMPREG NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.TEMPREG NOTHREADS;
3138709    by _NAME_;
MPRINT(EM_DIAGRAM):   by _NAME_;
3138710    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 65 observations read from the data set WORK.TEMPREG.
NOTE: The data set WORK.TEMPREG has 65 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

3138711    proc sort data=WORK.TEMPREG2 NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.TEMPREG2 NOTHREADS;
3138712    by _NAME_;
MPRINT(EM_DIAGRAM):   by _NAME_;
3138713    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 31 observations read from the data set WORK.TEMPREG2.
NOTE: The data set WORK.TEMPREG2 has 31 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

3138714    data WORK.TEMPREG3;
MPRINT(EM_DIAGRAM):   data WORK.TEMPREG3;
3138715    merge WORK.TEMPREG(in=ina) WORK.TEMPREG2(in=inb);
MPRINT(EM_DIAGRAM):   merge WORK.TEMPREG(in=ina) WORK.TEMPREG2(in=inb);
3138716    by _NAME_;
MPRINT(EM_DIAGRAM):   by _NAME_;
3138717    if (ina and inb) and DepVar ne . then output;
MPRINT(EM_DIAGRAM):   if (ina and inb) and DepVar ne . then output;
3138718    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 65 observations read from the data set WORK.TEMPREG.
NOTE: There were 31 observations read from the data set WORK.TEMPREG2.
NOTE: The data set WORK.TEMPREG3 has 15 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

3138719    data WORK.TEMPREG3(KEEP=TERM);
MPRINT(EM_DIAGRAM):   data WORK.TEMPREG3(KEEP=TERM);
3138720    length term $32;
MPRINT(EM_DIAGRAM):   length term $32;
3138721    set WORK.TEMPREG3;
MPRINT(EM_DIAGRAM):   set WORK.TEMPREG3;
3138722    i=1;
MPRINT(EM_DIAGRAM):   i=1;
3138723    do while( scan(input , i, '*') ne '' );
MPRINT(EM_DIAGRAM):   do while( scan(input , i, '*') ne '' );
3138724    term= scan(input , i, '*');
MPRINT(EM_DIAGRAM):   term= scan(input , i, '*');
3138725    i=i+1;
MPRINT(EM_DIAGRAM):   i=i+1;
3138726    output;
MPRINT(EM_DIAGRAM):   output;
3138727    end;
MPRINT(EM_DIAGRAM):   end;
3138728    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 15 observations read from the data set WORK.TEMPREG3.
NOTE: The data set WORK.TEMPREG3 has 15 observations and 1 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

3138729    proc sort data=WORK.TEMPREG3 nodupkey NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.TEMPREG3 nodupkey NOTHREADS;
3138730    by TERM;
MPRINT(EM_DIAGRAM):   by TERM;
3138731    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 15 observations read from the data set WORK.TEMPREG3.
NOTE: 3 observations with duplicate key values were deleted.
NOTE: The data set WORK.TEMPREG3 has 12 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

3138732    filename emflow
3138732  ! "C:\\predictive-models-project\Workspaces\EMWS8\Reg12\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\Reg12\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Reg12: Scoring DATA data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
3138733    *------------------------------------------------------------*;
3138734    * Reg12: Scoring DATA data;
3138735    *------------------------------------------------------------*;
3138736    data EMWS8.Reg12_TRAIN
3138737    / view=EMWS8.Reg12_TRAIN
3138738    ;
MPRINT(EM_DIAGRAM):   data EMWS8.Reg12_TRAIN / view=EMWS8.Reg12_TRAIN ;
3138739    set EMWS8.Meta3_TRAIN
3138740    ;
MPRINT(EM_DIAGRAM):   set EMWS8.Meta3_TRAIN ;
3138741    %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Reg12\EMFLOWSCORE.sas.
3138742   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
3138743   +*** begin scoring code for regression;
MPRINT(EM_DIAGRAM):   *** begin scoring code for regression;
3138744   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
3138745   +
3138746   +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
3138747   +label _WARN_ = 'Warnings' ;
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings' ;
3138748   +
3138749   +length I_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length I_DepVar $ 12;
3138750   +label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
3138751   +*** Target Values;
MPRINT(EM_DIAGRAM):   *** Target Values;
3138752   +array REG12DRF [2] $12 _temporary_ ('1' '0' );
MPRINT(EM_DIAGRAM):   array REG12DRF [2] $12 _temporary_ ('1' '0' );
3138753   +label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
3138754   +format U_DepVar BEST.;
MPRINT(EM_DIAGRAM):   format U_DepVar BEST.;
3138755   +*** Unnormalized target values;
MPRINT(EM_DIAGRAM):   *** Unnormalized target values;
3138756   +ARRAY REG12DRU[2]  _TEMPORARY_ (1 0);
MPRINT(EM_DIAGRAM):   ARRAY REG12DRU[2] _TEMPORARY_ (1 0);
3138757   +
3138758   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
3138759   +drop _Y ;
MPRINT(EM_DIAGRAM):   drop _Y ;
3138760   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
3138761   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
3138762   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
3138763   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3138764   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
3138765   +   _Y = .;
MPRINT(EM_DIAGRAM):   _Y = .;
3138766   +end;
MPRINT(EM_DIAGRAM):   end;
3138767   +else do;
MPRINT(EM_DIAGRAM):   else do;
3138768   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
3138769   +      _Y = 1;
MPRINT(EM_DIAGRAM):   _Y = 1;
3138770   +   end;
MPRINT(EM_DIAGRAM):   end;
3138771   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
3138772   +      _Y = 0;
MPRINT(EM_DIAGRAM):   _Y = 0;
3138773   +   end;
MPRINT(EM_DIAGRAM):   end;
3138774   +   else do;
MPRINT(EM_DIAGRAM):   else do;
3138775   +      _Y = .;
MPRINT(EM_DIAGRAM):   _Y = .;
3138776   +   end;
MPRINT(EM_DIAGRAM):   end;
3138777   +end;
MPRINT(EM_DIAGRAM):   end;
3138778   +
3138779   +drop _DM_BAD;
MPRINT(EM_DIAGRAM):   drop _DM_BAD;
3138780   +_DM_BAD=0;
MPRINT(EM_DIAGRAM):   _DM_BAD=0;
3138781   +
3138782   +*** Check AcceptedCmpTotal for missing values ;
MPRINT(EM_DIAGRAM):   *** Check AcceptedCmpTotal for missing values ;
3138783   +if missing( AcceptedCmpTotal ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmpTotal ) then do;
3138784   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
3138785   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3138786   +end;
MPRINT(EM_DIAGRAM):   end;
3138787   +
3138788   +*** Check Age for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Age for missing values ;
3138789   +if missing( Age ) then do;
MPRINT(EM_DIAGRAM):   if missing( Age ) then do;
3138790   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
3138791   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3138792   +end;
MPRINT(EM_DIAGRAM):   end;
3138793   +
3138794   +*** Check Frq for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Frq for missing values ;
3138795   +if missing( Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( Frq ) then do;
3138796   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
3138797   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3138798   +end;
MPRINT(EM_DIAGRAM):   end;
3138799   +
3138800   +*** Check Income for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Income for missing values ;
3138801   +if missing( Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( Income ) then do;
3138802   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
3138803   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3138804   +end;
MPRINT(EM_DIAGRAM):   end;
3138805   +
3138806   +*** Check NumDealsPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumDealsPurchases for missing values ;
3138807   +if missing( NumDealsPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumDealsPurchases ) then do;
3138808   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
3138809   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3138810   +end;
MPRINT(EM_DIAGRAM):   end;
3138811   +
3138812   +*** Check NumWebVisitsMonth for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumWebVisitsMonth for missing values ;
3138813   +if missing( NumWebVisitsMonth ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumWebVisitsMonth ) then do;
3138814   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
3138815   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3138816   +end;
MPRINT(EM_DIAGRAM):   end;
3138817   +
3138818   +*** Check RMntFrq for missing values ;
MPRINT(EM_DIAGRAM):   *** Check RMntFrq for missing values ;
3138819   +if missing( RMntFrq ) then do;
MPRINT(EM_DIAGRAM):   if missing( RMntFrq ) then do;
3138820   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
3138821   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3138822   +end;
MPRINT(EM_DIAGRAM):   end;
3138823   +
3138824   +*** Check Recency for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Recency for missing values ;
3138825   +if missing( Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( Recency ) then do;
3138826   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
3138827   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3138828   +end;
MPRINT(EM_DIAGRAM):   end;
3138829   +
3138830   +*** Check Teenhome for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Teenhome for missing values ;
3138831   +if missing( Teenhome ) then do;
MPRINT(EM_DIAGRAM):   if missing( Teenhome ) then do;
3138832   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
3138833   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3138834   +end;
MPRINT(EM_DIAGRAM):   end;
3138835   +
3138836   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
3138837   +drop _3_0 ;
MPRINT(EM_DIAGRAM):   drop _3_0 ;
3138838   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
3138839   +   _3_0 = .;
MPRINT(EM_DIAGRAM):   _3_0 = .;
3138840   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
3138841   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3138842   +end;
MPRINT(EM_DIAGRAM):   end;
3138843   +else do;
MPRINT(EM_DIAGRAM):   else do;
3138844   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
3138845   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
3138846   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3138847   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
3138848   +      _3_0 = 1;
MPRINT(EM_DIAGRAM):   _3_0 = 1;
3138849   +   end;
MPRINT(EM_DIAGRAM):   end;
3138850   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
3138851   +      _3_0 = -1;
MPRINT(EM_DIAGRAM):   _3_0 = -1;
3138852   +   end;
MPRINT(EM_DIAGRAM):   end;
3138853   +   else do;
MPRINT(EM_DIAGRAM):   else do;
3138854   +      _3_0 = .;
MPRINT(EM_DIAGRAM):   _3_0 = .;
3138855   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
3138856   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3138857   +   end;
MPRINT(EM_DIAGRAM):   end;
3138858   +end;
MPRINT(EM_DIAGRAM):   end;
3138859   +
3138860   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
3138861   +drop _4_0 ;
MPRINT(EM_DIAGRAM):   drop _4_0 ;
3138862   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
3138863   +   _4_0 = .;
MPRINT(EM_DIAGRAM):   _4_0 = .;
3138864   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
3138865   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3138866   +end;
MPRINT(EM_DIAGRAM):   end;
3138867   +else do;
MPRINT(EM_DIAGRAM):   else do;
3138868   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
3138869   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
3138870   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3138871   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
3138872   +      _4_0 = 1;
MPRINT(EM_DIAGRAM):   _4_0 = 1;
3138873   +   end;
MPRINT(EM_DIAGRAM):   end;
3138874   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
3138875   +      _4_0 = -1;
MPRINT(EM_DIAGRAM):   _4_0 = -1;
3138876   +   end;
MPRINT(EM_DIAGRAM):   end;
3138877   +   else do;
MPRINT(EM_DIAGRAM):   else do;
3138878   +      _4_0 = .;
MPRINT(EM_DIAGRAM):   _4_0 = .;
3138879   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
3138880   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3138881   +   end;
MPRINT(EM_DIAGRAM):   end;
3138882   +end;
MPRINT(EM_DIAGRAM):   end;
3138883   +
3138884   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
3138885   +drop _9_0 _9_1 _9_2 _9_3 ;
MPRINT(EM_DIAGRAM):   drop _9_0 _9_1 _9_2 _9_3 ;
3138886   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
3138887   +_9_0 = 0;
MPRINT(EM_DIAGRAM):   _9_0 = 0;
3138888   +_9_1 = 0;
MPRINT(EM_DIAGRAM):   _9_1 = 0;
3138889   +_9_2 = 0;
MPRINT(EM_DIAGRAM):   _9_2 = 0;
3138890   +_9_3 = 0;
MPRINT(EM_DIAGRAM):   _9_3 = 0;
3138891   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
3138892   +   _9_0 = .;
MPRINT(EM_DIAGRAM):   _9_0 = .;
3138893   +   _9_1 = .;
MPRINT(EM_DIAGRAM):   _9_1 = .;
3138894   +   _9_2 = .;
MPRINT(EM_DIAGRAM):   _9_2 = .;
3138895   +   _9_3 = .;
MPRINT(EM_DIAGRAM):   _9_3 = .;
3138896   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
3138897   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3138898   +end;
MPRINT(EM_DIAGRAM):   end;
3138899   +else do;
MPRINT(EM_DIAGRAM):   else do;
3138900   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
3138901   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
3138902   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3138903   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
3138904   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
3138905   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
3138906   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
3138907   +            _9_0 = 1;
MPRINT(EM_DIAGRAM):   _9_0 = 1;
3138908   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3138909   +         end;
MPRINT(EM_DIAGRAM):   end;
3138910   +         else do;
MPRINT(EM_DIAGRAM):   else do;
3138911   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
3138912   +               _9_1 = 1;
MPRINT(EM_DIAGRAM):   _9_1 = 1;
3138913   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3138914   +            end;
MPRINT(EM_DIAGRAM):   end;
3138915   +         end;
MPRINT(EM_DIAGRAM):   end;
3138916   +      end;
MPRINT(EM_DIAGRAM):   end;
3138917   +      else do;
MPRINT(EM_DIAGRAM):   else do;
3138918   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
3138919   +            _9_2 = 1;
MPRINT(EM_DIAGRAM):   _9_2 = 1;
3138920   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3138921   +         end;
MPRINT(EM_DIAGRAM):   end;
3138922   +      end;
MPRINT(EM_DIAGRAM):   end;
3138923   +   end;
MPRINT(EM_DIAGRAM):   end;
3138924   +   else do;
MPRINT(EM_DIAGRAM):   else do;
3138925   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
3138926   +         _9_3 = 1;
MPRINT(EM_DIAGRAM):   _9_3 = 1;
3138927   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3138928   +      end;
MPRINT(EM_DIAGRAM):   end;
3138929   +      else do;
MPRINT(EM_DIAGRAM):   else do;
3138930   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
3138931   +            _9_0 = -1;
MPRINT(EM_DIAGRAM):   _9_0 = -1;
3138932   +            _9_1 = -1;
MPRINT(EM_DIAGRAM):   _9_1 = -1;
3138933   +            _9_2 = -1;
MPRINT(EM_DIAGRAM):   _9_2 = -1;
3138934   +            _9_3 = -1;
MPRINT(EM_DIAGRAM):   _9_3 = -1;
3138935   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3138936   +         end;
MPRINT(EM_DIAGRAM):   end;
3138937   +      end;
MPRINT(EM_DIAGRAM):   end;
3138938   +   end;
MPRINT(EM_DIAGRAM):   end;
3138939   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
3138940   +      _9_0 = .;
MPRINT(EM_DIAGRAM):   _9_0 = .;
3138941   +      _9_1 = .;
MPRINT(EM_DIAGRAM):   _9_1 = .;
3138942   +      _9_2 = .;
MPRINT(EM_DIAGRAM):   _9_2 = .;
3138943   +      _9_3 = .;
MPRINT(EM_DIAGRAM):   _9_3 = .;
3138944   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
3138945   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3138946   +   end;
MPRINT(EM_DIAGRAM):   end;
3138947   +end;
MPRINT(EM_DIAGRAM):   end;
3138948   +
3138949   +*** If missing inputs, use averages;
MPRINT(EM_DIAGRAM):   *** If missing inputs, use averages;
3138950   +if _DM_BAD > 0 then do;
MPRINT(EM_DIAGRAM):   if _DM_BAD > 0 then do;
3138951   +   _P0 = 0.151221567;
MPRINT(EM_DIAGRAM):   _P0 = 0.151221567;
3138952   +   _P1 = 0.848778433;
MPRINT(EM_DIAGRAM):   _P1 = 0.848778433;
3138953   +   goto REG12DR1;
MPRINT(EM_DIAGRAM):   goto REG12DR1;
3138954   +end;
MPRINT(EM_DIAGRAM):   end;
3138955   +
3138956   +*** Compute Linear Predictor;
MPRINT(EM_DIAGRAM):   *** Compute Linear Predictor;
3138957   +drop _TEMP;
MPRINT(EM_DIAGRAM):   drop _TEMP;
3138958   +drop _LP0;
MPRINT(EM_DIAGRAM):   drop _LP0;
3138959   +_LP0 = 0;
MPRINT(EM_DIAGRAM):   _LP0 = 0;
3138960   +
3138961   +***  Effect: AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Effect: AcceptedCmp3 ;
3138962   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
3138963   +_LP0 = _LP0 + (   -0.41254575292144) * _TEMP * _3_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.41254575292144) * _TEMP * _3_0;
3138964   +
3138965   +***  Effect: AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Effect: AcceptedCmp4 ;
3138966   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
3138967   +_LP0 = _LP0 + (    0.34675190501967) * _TEMP * _4_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.34675190501967) * _TEMP * _4_0;
3138968   +
3138969   +***  Effect: AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   *** Effect: AcceptedCmpTotal ;
3138970   +_TEMP = AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   _TEMP = AcceptedCmpTotal ;
3138971   +_LP0 = _LP0 + (    1.80745311910799 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.80745311910799 * _TEMP);
3138972   +
3138973   +***  Effect: Age ;
MPRINT(EM_DIAGRAM):   *** Effect: Age ;
3138974   +_TEMP = Age ;
MPRINT(EM_DIAGRAM):   _TEMP = Age ;
3138975   +_LP0 = _LP0 + (   -0.01852391433447 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.01852391433447 * _TEMP);
3138976   +
3138977   +***  Effect: Frq ;
MPRINT(EM_DIAGRAM):   *** Effect: Frq ;
3138978   +_TEMP = Frq ;
MPRINT(EM_DIAGRAM):   _TEMP = Frq ;
3138979   +_LP0 = _LP0 + (   -0.05045980295154 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.05045980295154 * _TEMP);
3138980   +
3138981   +***  Effect: Income ;
MPRINT(EM_DIAGRAM):   *** Effect: Income ;
3138982   +_TEMP = Income ;
MPRINT(EM_DIAGRAM):   _TEMP = Income ;
3138983   +_LP0 = _LP0 + (     0.0000456777011 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.0000456777011 * _TEMP);
3138984   +
3138985   +***  Effect: Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Effect: Marital_Status ;
3138986   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
3138987   +_LP0 = _LP0 + (    0.19470733105664) * _TEMP * _9_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.19470733105664) * _TEMP * _9_0;
3138988   +_LP0 = _LP0 + (   -0.66737124261283) * _TEMP * _9_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.66737124261283) * _TEMP * _9_1;
3138989   +_LP0 = _LP0 + (    0.47354458382979) * _TEMP * _9_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.47354458382979) * _TEMP * _9_2;
3138990   +_LP0 = _LP0 + (   -0.76484617755918) * _TEMP * _9_3;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.76484617755918) * _TEMP * _9_3;
3138991   +
3138992   +***  Effect: NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumDealsPurchases ;
3138993   +_TEMP = NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumDealsPurchases ;
3138994   +_LP0 = _LP0 + (    0.38683487817532 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.38683487817532 * _TEMP);
3138995   +
3138996   +***  Effect: NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   *** Effect: NumWebVisitsMonth ;
3138997   +_TEMP = NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   _TEMP = NumWebVisitsMonth ;
3138998   +_LP0 = _LP0 + (    0.30399773949187 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.30399773949187 * _TEMP);
3138999   +
3139000   +***  Effect: RMntFrq ;
MPRINT(EM_DIAGRAM):   *** Effect: RMntFrq ;
3139001   +_TEMP = RMntFrq ;
MPRINT(EM_DIAGRAM):   _TEMP = RMntFrq ;
3139002   +_LP0 = _LP0 + (    0.01122718563179 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.01122718563179 * _TEMP);
3139003   +
3139004   +***  Effect: Recency ;
MPRINT(EM_DIAGRAM):   *** Effect: Recency ;
3139005   +_TEMP = Recency ;
MPRINT(EM_DIAGRAM):   _TEMP = Recency ;
3139006   +_LP0 = _LP0 + (   -0.06483187112579 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.06483187112579 * _TEMP);
3139007   +
3139008   +***  Effect: Teenhome ;
MPRINT(EM_DIAGRAM):   *** Effect: Teenhome ;
3139009   +_TEMP = Teenhome ;
MPRINT(EM_DIAGRAM):   _TEMP = Teenhome ;
3139010   +_LP0 = _LP0 + (   -1.33693437973843 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.33693437973843 * _TEMP);
3139011   +
3139012   +*** Naive Posterior Probabilities;
MPRINT(EM_DIAGRAM):   *** Naive Posterior Probabilities;
3139013   +drop _MAXP _IY _P0 _P1;
MPRINT(EM_DIAGRAM):   drop _MAXP _IY _P0 _P1;
3139014   +_TEMP =    -3.46388239032287 + _LP0;
MPRINT(EM_DIAGRAM):   _TEMP = -3.46388239032287 + _LP0;
3139015   +if (_TEMP < 0) then do;
MPRINT(EM_DIAGRAM):   if (_TEMP < 0) then do;
3139016   +   _TEMP = exp(_TEMP);
MPRINT(EM_DIAGRAM):   _TEMP = exp(_TEMP);
3139017   +   _P0 = _TEMP / (1 + _TEMP);
MPRINT(EM_DIAGRAM):   _P0 = _TEMP / (1 + _TEMP);
3139018   +end;
MPRINT(EM_DIAGRAM):   end;
3139019   +else _P0 = 1 / (1 + exp(-_TEMP));
MPRINT(EM_DIAGRAM):   else _P0 = 1 / (1 + exp(-_TEMP));
3139020   +_P1 = 1.0 - _P0;
MPRINT(EM_DIAGRAM):   _P1 = 1.0 - _P0;
3139021   +
3139022   +REG12DR1:
3139023   +
3139024   +*** Residuals;
MPRINT(EM_DIAGRAM):   REG12DR1: *** Residuals;
3139025   +if (_Y = .) then do;
MPRINT(EM_DIAGRAM):   if (_Y = .) then do;
3139026   +   R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
3139027   +   R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
3139028   +end;
MPRINT(EM_DIAGRAM):   end;
3139029   +else do;
MPRINT(EM_DIAGRAM):   else do;
3139030   +    label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
3139031   +    label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
3139032   +   R_DepVar1 = - _P0;
MPRINT(EM_DIAGRAM):   R_DepVar1 = - _P0;
3139033   +   R_DepVar0 = - _P1;
MPRINT(EM_DIAGRAM):   R_DepVar0 = - _P1;
3139034   +   select( _Y );
MPRINT(EM_DIAGRAM):   select( _Y );
3139035   +      when (0)  R_DepVar1 = R_DepVar1 + 1;
MPRINT(EM_DIAGRAM):   when (0) R_DepVar1 = R_DepVar1 + 1;
3139036   +      when (1)  R_DepVar0 = R_DepVar0 + 1;
MPRINT(EM_DIAGRAM):   when (1) R_DepVar0 = R_DepVar0 + 1;
3139037   +   end;
MPRINT(EM_DIAGRAM):   end;
3139038   +end;
MPRINT(EM_DIAGRAM):   end;
3139039   +
3139040   +*** Posterior Probabilities and Predicted Level;
MPRINT(EM_DIAGRAM):   *** Posterior Probabilities and Predicted Level;
3139041   +label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
3139042   +label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
3139043   +P_DepVar1 = _P0;
MPRINT(EM_DIAGRAM):   P_DepVar1 = _P0;
3139044   +_MAXP = _P0;
MPRINT(EM_DIAGRAM):   _MAXP = _P0;
3139045   +_IY = 1;
MPRINT(EM_DIAGRAM):   _IY = 1;
3139046   +P_DepVar0 = _P1;
MPRINT(EM_DIAGRAM):   P_DepVar0 = _P1;
3139047   +if (_P1 >  _MAXP + 1E-8) then do;
MPRINT(EM_DIAGRAM):   if (_P1 > _MAXP + 1E-8) then do;
3139048   +   _MAXP = _P1;
MPRINT(EM_DIAGRAM):   _MAXP = _P1;
3139049   +   _IY = 2;
MPRINT(EM_DIAGRAM):   _IY = 2;
3139050   +end;
MPRINT(EM_DIAGRAM):   end;
3139051   +I_DepVar = REG12DRF[_IY];
MPRINT(EM_DIAGRAM):   I_DepVar = REG12DRF[_IY];
3139052   +U_DepVar = REG12DRU[_IY];
MPRINT(EM_DIAGRAM):   U_DepVar = REG12DRU[_IY];
3139053   +
3139054   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
3139055   +***** end scoring code for regression;
MPRINT(EM_DIAGRAM):   ***** end scoring code for regression;
3139056   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
3139057    run;

NOTE: DATA STEP view saved on file EMWS8.REG12_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.META3_TRAIN.VIEW used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
3139058    quit;
3139059    filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
3139060    filename emflow
3139060  ! "C:\\predictive-models-project\Workspaces\EMWS8\Reg12\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\Reg12\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Reg12: Scoring VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
3139061    *------------------------------------------------------------*;
3139062    * Reg12: Scoring VALIDATE data;
3139063    *------------------------------------------------------------*;
3139064    data EMWS8.Reg12_VALIDATE
3139065    / view=EMWS8.Reg12_VALIDATE
3139066    ;
MPRINT(EM_DIAGRAM):   data EMWS8.Reg12_VALIDATE / view=EMWS8.Reg12_VALIDATE ;
3139067    set EMWS8.Meta3_VALIDATE
3139068    ;
MPRINT(EM_DIAGRAM):   set EMWS8.Meta3_VALIDATE ;
3139069    %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Reg12\EMFLOWSCORE.sas.
3139070   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
3139071   +*** begin scoring code for regression;
MPRINT(EM_DIAGRAM):   *** begin scoring code for regression;
3139072   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
3139073   +
3139074   +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
3139075   +label _WARN_ = 'Warnings' ;
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings' ;
3139076   +
3139077   +length I_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length I_DepVar $ 12;
3139078   +label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
3139079   +*** Target Values;
MPRINT(EM_DIAGRAM):   *** Target Values;
3139080   +array REG12DRF [2] $12 _temporary_ ('1' '0' );
MPRINT(EM_DIAGRAM):   array REG12DRF [2] $12 _temporary_ ('1' '0' );
3139081   +label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
3139082   +format U_DepVar BEST.;
MPRINT(EM_DIAGRAM):   format U_DepVar BEST.;
3139083   +*** Unnormalized target values;
MPRINT(EM_DIAGRAM):   *** Unnormalized target values;
3139084   +ARRAY REG12DRU[2]  _TEMPORARY_ (1 0);
MPRINT(EM_DIAGRAM):   ARRAY REG12DRU[2] _TEMPORARY_ (1 0);
3139085   +
3139086   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
3139087   +drop _Y ;
MPRINT(EM_DIAGRAM):   drop _Y ;
3139088   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
3139089   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
3139090   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
3139091   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3139092   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
3139093   +   _Y = .;
MPRINT(EM_DIAGRAM):   _Y = .;
3139094   +end;
MPRINT(EM_DIAGRAM):   end;
3139095   +else do;
MPRINT(EM_DIAGRAM):   else do;
3139096   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
3139097   +      _Y = 1;
MPRINT(EM_DIAGRAM):   _Y = 1;
3139098   +   end;
MPRINT(EM_DIAGRAM):   end;
3139099   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
3139100   +      _Y = 0;
MPRINT(EM_DIAGRAM):   _Y = 0;
3139101   +   end;
MPRINT(EM_DIAGRAM):   end;
3139102   +   else do;
MPRINT(EM_DIAGRAM):   else do;
3139103   +      _Y = .;
MPRINT(EM_DIAGRAM):   _Y = .;
3139104   +   end;
MPRINT(EM_DIAGRAM):   end;
3139105   +end;
MPRINT(EM_DIAGRAM):   end;
3139106   +
3139107   +drop _DM_BAD;
MPRINT(EM_DIAGRAM):   drop _DM_BAD;
3139108   +_DM_BAD=0;
MPRINT(EM_DIAGRAM):   _DM_BAD=0;
3139109   +
3139110   +*** Check AcceptedCmpTotal for missing values ;
MPRINT(EM_DIAGRAM):   *** Check AcceptedCmpTotal for missing values ;
3139111   +if missing( AcceptedCmpTotal ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmpTotal ) then do;
3139112   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
3139113   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3139114   +end;
MPRINT(EM_DIAGRAM):   end;
3139115   +
3139116   +*** Check Age for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Age for missing values ;
3139117   +if missing( Age ) then do;
MPRINT(EM_DIAGRAM):   if missing( Age ) then do;
3139118   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
3139119   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3139120   +end;
MPRINT(EM_DIAGRAM):   end;
3139121   +
3139122   +*** Check Frq for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Frq for missing values ;
3139123   +if missing( Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( Frq ) then do;
3139124   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
3139125   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3139126   +end;
MPRINT(EM_DIAGRAM):   end;
3139127   +
3139128   +*** Check Income for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Income for missing values ;
3139129   +if missing( Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( Income ) then do;
3139130   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
3139131   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3139132   +end;
MPRINT(EM_DIAGRAM):   end;
3139133   +
3139134   +*** Check NumDealsPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumDealsPurchases for missing values ;
3139135   +if missing( NumDealsPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumDealsPurchases ) then do;
3139136   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
3139137   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3139138   +end;
MPRINT(EM_DIAGRAM):   end;
3139139   +
3139140   +*** Check NumWebVisitsMonth for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumWebVisitsMonth for missing values ;
3139141   +if missing( NumWebVisitsMonth ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumWebVisitsMonth ) then do;
3139142   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
3139143   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3139144   +end;
MPRINT(EM_DIAGRAM):   end;
3139145   +
3139146   +*** Check RMntFrq for missing values ;
MPRINT(EM_DIAGRAM):   *** Check RMntFrq for missing values ;
3139147   +if missing( RMntFrq ) then do;
MPRINT(EM_DIAGRAM):   if missing( RMntFrq ) then do;
3139148   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
3139149   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3139150   +end;
MPRINT(EM_DIAGRAM):   end;
3139151   +
3139152   +*** Check Recency for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Recency for missing values ;
3139153   +if missing( Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( Recency ) then do;
3139154   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
3139155   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3139156   +end;
MPRINT(EM_DIAGRAM):   end;
3139157   +
3139158   +*** Check Teenhome for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Teenhome for missing values ;
3139159   +if missing( Teenhome ) then do;
MPRINT(EM_DIAGRAM):   if missing( Teenhome ) then do;
3139160   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
3139161   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3139162   +end;
MPRINT(EM_DIAGRAM):   end;
3139163   +
3139164   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
3139165   +drop _3_0 ;
MPRINT(EM_DIAGRAM):   drop _3_0 ;
3139166   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
3139167   +   _3_0 = .;
MPRINT(EM_DIAGRAM):   _3_0 = .;
3139168   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
3139169   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3139170   +end;
MPRINT(EM_DIAGRAM):   end;
3139171   +else do;
MPRINT(EM_DIAGRAM):   else do;
3139172   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
3139173   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
3139174   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3139175   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
3139176   +      _3_0 = 1;
MPRINT(EM_DIAGRAM):   _3_0 = 1;
3139177   +   end;
MPRINT(EM_DIAGRAM):   end;
3139178   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
3139179   +      _3_0 = -1;
MPRINT(EM_DIAGRAM):   _3_0 = -1;
3139180   +   end;
MPRINT(EM_DIAGRAM):   end;
3139181   +   else do;
MPRINT(EM_DIAGRAM):   else do;
3139182   +      _3_0 = .;
MPRINT(EM_DIAGRAM):   _3_0 = .;
3139183   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
3139184   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3139185   +   end;
MPRINT(EM_DIAGRAM):   end;
3139186   +end;
MPRINT(EM_DIAGRAM):   end;
3139187   +
3139188   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
3139189   +drop _4_0 ;
MPRINT(EM_DIAGRAM):   drop _4_0 ;
3139190   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
3139191   +   _4_0 = .;
MPRINT(EM_DIAGRAM):   _4_0 = .;
3139192   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
3139193   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3139194   +end;
MPRINT(EM_DIAGRAM):   end;
3139195   +else do;
MPRINT(EM_DIAGRAM):   else do;
3139196   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
3139197   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
3139198   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3139199   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
3139200   +      _4_0 = 1;
MPRINT(EM_DIAGRAM):   _4_0 = 1;
3139201   +   end;
MPRINT(EM_DIAGRAM):   end;
3139202   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
3139203   +      _4_0 = -1;
MPRINT(EM_DIAGRAM):   _4_0 = -1;
3139204   +   end;
MPRINT(EM_DIAGRAM):   end;
3139205   +   else do;
MPRINT(EM_DIAGRAM):   else do;
3139206   +      _4_0 = .;
MPRINT(EM_DIAGRAM):   _4_0 = .;
3139207   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
3139208   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3139209   +   end;
MPRINT(EM_DIAGRAM):   end;
3139210   +end;
MPRINT(EM_DIAGRAM):   end;
3139211   +
3139212   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
3139213   +drop _9_0 _9_1 _9_2 _9_3 ;
MPRINT(EM_DIAGRAM):   drop _9_0 _9_1 _9_2 _9_3 ;
3139214   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
3139215   +_9_0 = 0;
MPRINT(EM_DIAGRAM):   _9_0 = 0;
3139216   +_9_1 = 0;
MPRINT(EM_DIAGRAM):   _9_1 = 0;
3139217   +_9_2 = 0;
MPRINT(EM_DIAGRAM):   _9_2 = 0;
3139218   +_9_3 = 0;
MPRINT(EM_DIAGRAM):   _9_3 = 0;
3139219   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
3139220   +   _9_0 = .;
MPRINT(EM_DIAGRAM):   _9_0 = .;
3139221   +   _9_1 = .;
MPRINT(EM_DIAGRAM):   _9_1 = .;
3139222   +   _9_2 = .;
MPRINT(EM_DIAGRAM):   _9_2 = .;
3139223   +   _9_3 = .;
MPRINT(EM_DIAGRAM):   _9_3 = .;
3139224   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
3139225   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3139226   +end;
MPRINT(EM_DIAGRAM):   end;
3139227   +else do;
MPRINT(EM_DIAGRAM):   else do;
3139228   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
3139229   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
3139230   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
3139231   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
3139232   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
3139233   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
3139234   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
3139235   +            _9_0 = 1;
MPRINT(EM_DIAGRAM):   _9_0 = 1;
3139236   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3139237   +         end;
MPRINT(EM_DIAGRAM):   end;
3139238   +         else do;
MPRINT(EM_DIAGRAM):   else do;
3139239   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
3139240   +               _9_1 = 1;
MPRINT(EM_DIAGRAM):   _9_1 = 1;
3139241   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3139242   +            end;
MPRINT(EM_DIAGRAM):   end;
3139243   +         end;
MPRINT(EM_DIAGRAM):   end;
3139244   +      end;
MPRINT(EM_DIAGRAM):   end;
3139245   +      else do;
MPRINT(EM_DIAGRAM):   else do;
3139246   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
3139247   +            _9_2 = 1;
MPRINT(EM_DIAGRAM):   _9_2 = 1;
3139248   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3139249   +         end;
MPRINT(EM_DIAGRAM):   end;
3139250   +      end;
MPRINT(EM_DIAGRAM):   end;
3139251   +   end;
MPRINT(EM_DIAGRAM):   end;
3139252   +   else do;
MPRINT(EM_DIAGRAM):   else do;
3139253   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
3139254   +         _9_3 = 1;
MPRINT(EM_DIAGRAM):   _9_3 = 1;
3139255   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3139256   +      end;
MPRINT(EM_DIAGRAM):   end;
3139257   +      else do;
MPRINT(EM_DIAGRAM):   else do;
3139258   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
3139259   +            _9_0 = -1;
MPRINT(EM_DIAGRAM):   _9_0 = -1;
3139260   +            _9_1 = -1;
MPRINT(EM_DIAGRAM):   _9_1 = -1;
3139261   +            _9_2 = -1;
MPRINT(EM_DIAGRAM):   _9_2 = -1;
3139262   +            _9_3 = -1;
MPRINT(EM_DIAGRAM):   _9_3 = -1;
3139263   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
3139264   +         end;
MPRINT(EM_DIAGRAM):   end;
3139265   +      end;
MPRINT(EM_DIAGRAM):   end;
3139266   +   end;
MPRINT(EM_DIAGRAM):   end;
3139267   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
3139268   +      _9_0 = .;
MPRINT(EM_DIAGRAM):   _9_0 = .;
3139269   +      _9_1 = .;
MPRINT(EM_DIAGRAM):   _9_1 = .;
3139270   +      _9_2 = .;
MPRINT(EM_DIAGRAM):   _9_2 = .;
3139271   +      _9_3 = .;
MPRINT(EM_DIAGRAM):   _9_3 = .;
3139272   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
3139273   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
3139274   +   end;
MPRINT(EM_DIAGRAM):   end;
3139275   +end;
MPRINT(EM_DIAGRAM):   end;
3139276   +
3139277   +*** If missing inputs, use averages;
MPRINT(EM_DIAGRAM):   *** If missing inputs, use averages;
3139278   +if _DM_BAD > 0 then do;
MPRINT(EM_DIAGRAM):   if _DM_BAD > 0 then do;
3139279   +   _P0 = 0.151221567;
MPRINT(EM_DIAGRAM):   _P0 = 0.151221567;
3139280   +   _P1 = 0.848778433;
MPRINT(EM_DIAGRAM):   _P1 = 0.848778433;
3139281   +   goto REG12DR1;
MPRINT(EM_DIAGRAM):   goto REG12DR1;
3139282   +end;
MPRINT(EM_DIAGRAM):   end;
3139283   +
3139284   +*** Compute Linear Predictor;
MPRINT(EM_DIAGRAM):   *** Compute Linear Predictor;
3139285   +drop _TEMP;
MPRINT(EM_DIAGRAM):   drop _TEMP;
3139286   +drop _LP0;
MPRINT(EM_DIAGRAM):   drop _LP0;
3139287   +_LP0 = 0;
MPRINT(EM_DIAGRAM):   _LP0 = 0;
3139288   +
3139289   +***  Effect: AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Effect: AcceptedCmp3 ;
3139290   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
3139291   +_LP0 = _LP0 + (   -0.41254575292144) * _TEMP * _3_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.41254575292144) * _TEMP * _3_0;
3139292   +
3139293   +***  Effect: AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Effect: AcceptedCmp4 ;
3139294   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
3139295   +_LP0 = _LP0 + (    0.34675190501967) * _TEMP * _4_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.34675190501967) * _TEMP * _4_0;
3139296   +
3139297   +***  Effect: AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   *** Effect: AcceptedCmpTotal ;
3139298   +_TEMP = AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   _TEMP = AcceptedCmpTotal ;
3139299   +_LP0 = _LP0 + (    1.80745311910799 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.80745311910799 * _TEMP);
3139300   +
3139301   +***  Effect: Age ;
MPRINT(EM_DIAGRAM):   *** Effect: Age ;
3139302   +_TEMP = Age ;
MPRINT(EM_DIAGRAM):   _TEMP = Age ;
3139303   +_LP0 = _LP0 + (   -0.01852391433447 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.01852391433447 * _TEMP);
3139304   +
3139305   +***  Effect: Frq ;
MPRINT(EM_DIAGRAM):   *** Effect: Frq ;
3139306   +_TEMP = Frq ;
MPRINT(EM_DIAGRAM):   _TEMP = Frq ;
3139307   +_LP0 = _LP0 + (   -0.05045980295154 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.05045980295154 * _TEMP);
3139308   +
3139309   +***  Effect: Income ;
MPRINT(EM_DIAGRAM):   *** Effect: Income ;
3139310   +_TEMP = Income ;
MPRINT(EM_DIAGRAM):   _TEMP = Income ;
3139311   +_LP0 = _LP0 + (     0.0000456777011 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.0000456777011 * _TEMP);
3139312   +
3139313   +***  Effect: Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Effect: Marital_Status ;
3139314   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
3139315   +_LP0 = _LP0 + (    0.19470733105664) * _TEMP * _9_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.19470733105664) * _TEMP * _9_0;
3139316   +_LP0 = _LP0 + (   -0.66737124261283) * _TEMP * _9_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.66737124261283) * _TEMP * _9_1;
3139317   +_LP0 = _LP0 + (    0.47354458382979) * _TEMP * _9_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.47354458382979) * _TEMP * _9_2;
3139318   +_LP0 = _LP0 + (   -0.76484617755918) * _TEMP * _9_3;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.76484617755918) * _TEMP * _9_3;
3139319   +
3139320   +***  Effect: NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumDealsPurchases ;
3139321   +_TEMP = NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumDealsPurchases ;
3139322   +_LP0 = _LP0 + (    0.38683487817532 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.38683487817532 * _TEMP);
3139323   +
3139324   +***  Effect: NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   *** Effect: NumWebVisitsMonth ;
3139325   +_TEMP = NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   _TEMP = NumWebVisitsMonth ;
3139326   +_LP0 = _LP0 + (    0.30399773949187 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.30399773949187 * _TEMP);
3139327   +
3139328   +***  Effect: RMntFrq ;
MPRINT(EM_DIAGRAM):   *** Effect: RMntFrq ;
3139329   +_TEMP = RMntFrq ;
MPRINT(EM_DIAGRAM):   _TEMP = RMntFrq ;
3139330   +_LP0 = _LP0 + (    0.01122718563179 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.01122718563179 * _TEMP);
3139331   +
3139332   +***  Effect: Recency ;
MPRINT(EM_DIAGRAM):   *** Effect: Recency ;
3139333   +_TEMP = Recency ;
MPRINT(EM_DIAGRAM):   _TEMP = Recency ;
3139334   +_LP0 = _LP0 + (   -0.06483187112579 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.06483187112579 * _TEMP);
3139335   +
3139336   +***  Effect: Teenhome ;
MPRINT(EM_DIAGRAM):   *** Effect: Teenhome ;
3139337   +_TEMP = Teenhome ;
MPRINT(EM_DIAGRAM):   _TEMP = Teenhome ;
3139338   +_LP0 = _LP0 + (   -1.33693437973843 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.33693437973843 * _TEMP);
3139339   +
3139340   +*** Naive Posterior Probabilities;
MPRINT(EM_DIAGRAM):   *** Naive Posterior Probabilities;
3139341   +drop _MAXP _IY _P0 _P1;
MPRINT(EM_DIAGRAM):   drop _MAXP _IY _P0 _P1;
3139342   +_TEMP =    -3.46388239032287 + _LP0;
MPRINT(EM_DIAGRAM):   _TEMP = -3.46388239032287 + _LP0;
3139343   +if (_TEMP < 0) then do;
MPRINT(EM_DIAGRAM):   if (_TEMP < 0) then do;
3139344   +   _TEMP = exp(_TEMP);
MPRINT(EM_DIAGRAM):   _TEMP = exp(_TEMP);
3139345   +   _P0 = _TEMP / (1 + _TEMP);
MPRINT(EM_DIAGRAM):   _P0 = _TEMP / (1 + _TEMP);
3139346   +end;
MPRINT(EM_DIAGRAM):   end;
3139347   +else _P0 = 1 / (1 + exp(-_TEMP));
MPRINT(EM_DIAGRAM):   else _P0 = 1 / (1 + exp(-_TEMP));
3139348   +_P1 = 1.0 - _P0;
MPRINT(EM_DIAGRAM):   _P1 = 1.0 - _P0;
3139349   +
3139350   +REG12DR1:
3139351   +
3139352   +*** Residuals;
MPRINT(EM_DIAGRAM):   REG12DR1: *** Residuals;
3139353   +if (_Y = .) then do;
MPRINT(EM_DIAGRAM):   if (_Y = .) then do;
3139354   +   R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
3139355   +   R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
3139356   +end;
MPRINT(EM_DIAGRAM):   end;
3139357   +else do;
MPRINT(EM_DIAGRAM):   else do;
3139358   +    label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
3139359   +    label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
3139360   +   R_DepVar1 = - _P0;
MPRINT(EM_DIAGRAM):   R_DepVar1 = - _P0;
3139361   +   R_DepVar0 = - _P1;
MPRINT(EM_DIAGRAM):   R_DepVar0 = - _P1;
3139362   +   select( _Y );
MPRINT(EM_DIAGRAM):   select( _Y );
3139363   +      when (0)  R_DepVar1 = R_DepVar1 + 1;
MPRINT(EM_DIAGRAM):   when (0) R_DepVar1 = R_DepVar1 + 1;
3139364   +      when (1)  R_DepVar0 = R_DepVar0 + 1;
MPRINT(EM_DIAGRAM):   when (1) R_DepVar0 = R_DepVar0 + 1;
3139365   +   end;
MPRINT(EM_DIAGRAM):   end;
3139366   +end;
MPRINT(EM_DIAGRAM):   end;
3139367   +
3139368   +*** Posterior Probabilities and Predicted Level;
MPRINT(EM_DIAGRAM):   *** Posterior Probabilities and Predicted Level;
3139369   +label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
3139370   +label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
3139371   +P_DepVar1 = _P0;
MPRINT(EM_DIAGRAM):   P_DepVar1 = _P0;
3139372   +_MAXP = _P0;
MPRINT(EM_DIAGRAM):   _MAXP = _P0;
3139373   +_IY = 1;
MPRINT(EM_DIAGRAM):   _IY = 1;
3139374   +P_DepVar0 = _P1;
MPRINT(EM_DIAGRAM):   P_DepVar0 = _P1;
3139375   +if (_P1 >  _MAXP + 1E-8) then do;
MPRINT(EM_DIAGRAM):   if (_P1 > _MAXP + 1E-8) then do;
3139376   +   _MAXP = _P1;
MPRINT(EM_DIAGRAM):   _MAXP = _P1;
3139377   +   _IY = 2;
MPRINT(EM_DIAGRAM):   _IY = 2;
3139378   +end;
MPRINT(EM_DIAGRAM):   end;
3139379   +I_DepVar = REG12DRF[_IY];
MPRINT(EM_DIAGRAM):   I_DepVar = REG12DRF[_IY];
3139380   +U_DepVar = REG12DRU[_IY];
MPRINT(EM_DIAGRAM):   U_DepVar = REG12DRU[_IY];
3139381   +
3139382   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
3139383   +***** end scoring code for regression;
MPRINT(EM_DIAGRAM):   ***** end scoring code for regression;
3139384   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
3139385    run;

NOTE: DATA STEP view saved on file EMWS8.REG12_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.META3_VALIDATE.VIEW used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
3139386    quit;
3139387    filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
3139388    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
3139389    * Reg12: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * Reg12: Computing metadata for TRAIN data;
3139390    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;

NOTE: View EMWS8.REG12_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta 
"C:\\predictive-models-project\Workspaces\EMWS8\Reg12\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS8.Reg12_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS8.Reg12_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS8.Reg12_TRAIN out=WORK.M2JGZV0F noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2JGZV0F;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20 
INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M2JGZV0F(keep=name type length label format formatl 
formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then format = strip(format)!!strip(put(formatl, 
best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, 
best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then informat = 
strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, 
best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2JGZV0F;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M2JGZV0F;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M3DGA8LW NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3DGA8LW;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M3DGA8LW;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1_MSZZE(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M3DGA8LW;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3DGA8LW;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 
FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M3DGA8LW;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" 
"MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" 
"QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" "YEAR" "YYMMDD" "YYMON" 
"YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" 
"EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) 
formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = 
"DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) 
formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" 
"NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" 
"SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = 
"DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then 
level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 
'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 
'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ 
('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 
'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 
'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3DGA8LW;
MPRINT(EMADVISECOLUMNS):   set WORK.M3DGA8LW;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= 
"Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= 
"Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower limit" UPPERLIMIT= 
"Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= 
"Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Meta3_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Meta3_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Reg12_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT 
LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "Reg12";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("P_DEPVAR1") creator = "Reg12";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR1") creator = "Reg12";
MPRINT(EM_DIAGRAM):   when("P_DEPVAR0") creator = "Reg12";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR0") creator = "Reg12";
MPRINT(EM_DIAGRAM):   when("F_DEPVAR") creator = "Reg12";
MPRINT(EM_DIAGRAM):   when("I_DEPVAR") creator = "Reg12";
MPRINT(EM_DIAGRAM):   when("U_DEPVAR") creator = "Reg12";
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "Reg12";
MPRINT(EM_DIAGRAM):   when("DEPVAR") model = "Reg12";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Reg12: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   if ROLE in('INPUT', 'REJECTED') then do;
MPRINT(EM_DIAGRAM):   if upcase(NAME) in( 'ACCEPTEDCMP3' 'ACCEPTEDCMP4' 'ACCEPTEDCMPTOTAL' 
'AGE' 'FRQ' 'INCOME' 'MARITAL_STATUS' 'NUMDEALSPURCHASES' 'NUMWEBVISITSMONTH' 'RMNTFRQ' 
'RECENCY' 'TEENHOME' ) then ROLE='INPUT';
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   ROLE='REJECTED';
MPRINT(EM_DIAGRAM):   COMMENT = "Reg12: Rejected using stepwise selection";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
3139722    data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
3139723    set EMWS8.Reg12_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Reg12_EMINFO;
3139724    where DATA='Reg12' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='Reg12' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 
'MODEL');
3139725    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.REG12_EMINFO.
      WHERE (DATA='Reg12') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

3139726    data EMWS8.Reg12_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS8.Reg12_EMINFO;
3139727    length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
3139728    input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
3139729    cards;
MPRINT(EM_DIAGRAM):   cards;

NOTE: The data set EMWS8.REG12_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   run;
3139733    run;
3139734    data EMWS8.Reg12_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Reg12_EMINFO;
3139735    set EMWS8.Reg12_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Reg12_EMINFO WORK.MODELTEMP_INFO;
3139736    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.REG12_EMINFO.
NOTE: There were 0 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS8.REG12_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

3139737    proc sort data = EMWS8.Reg12_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.Reg12_EMINFO NOTHREADS;
3139738    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
3139739    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.REG12_EMINFO.
NOTE: The data set EMWS8.REG12_EMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

3139740    proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
3139741    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
3139742    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set EMWS8.FIMPORT_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 1 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

3139743    proc sort data = EMWS8.Reg12_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS8.Reg12_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
3139744    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
3139745    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 3 observations read from the data set EMWS8.REG12_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

3139746    data EMWS8.Reg12_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Reg12_EMINFO;
3139747    merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
3139748    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
3139749    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 3 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS8.REG12_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

3139750    proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
3139751    delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
3139752    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
3139753    quit;
MPRINT(EM_DIAGRAM):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
      

NOTE: View EMWS8.REG12_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
      
NOTE: View EMWS8.REG12_VALIDATE.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
      
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
