MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "21. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "18.51 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                21. April 2016
Time:                18.51 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O23J8FZ1 
"C:\\predictive-models-project\Workspaces\EMWS8\Tree2\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O23J8FZ1 new;
MPRINT(EM_DIAGRAM):   run;
634272     filename emflow
634272   ! "C:\\predictive-models-project\Workspaces\EMWS8\Tree2\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\Tree2\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Tree2: Scoring DATA data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
634273     *------------------------------------------------------------*;
634274     * Tree2: Scoring DATA data;
634275     *------------------------------------------------------------*;
634276     data EMWS8.Tree2_TRAIN
634277     / view=EMWS8.Tree2_TRAIN
634278     ;
MPRINT(EM_DIAGRAM):   data EMWS8.Tree2_TRAIN / view=EMWS8.Tree2_TRAIN ;
634279     set EMWS8.PRINCOMP_TRAIN
634280     ;
MPRINT(EM_DIAGRAM):   set EMWS8.PRINCOMP_TRAIN ;
634281     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Tree2\EMFLOWSCORE.sas.
634282    +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
634283    +******             DECISION TREE SCORING CODE             ******;
MPRINT(EM_DIAGRAM):   ****** DECISION TREE SCORING CODE ******;
634284    +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
634285    +
634286    +******         LENGTHS OF NEW CHARACTER VARIABLES         ******;
MPRINT(EM_DIAGRAM):   ****** LENGTHS OF NEW CHARACTER VARIABLES ******;
634287    +LENGTH F_DepVar  $   12;
MPRINT(EM_DIAGRAM):   LENGTH F_DepVar $ 12;
634288    +LENGTH I_DepVar  $   12;
MPRINT(EM_DIAGRAM):   LENGTH I_DepVar $ 12;
634289    +LENGTH _WARN_  $    4;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $ 4;
634290    +
634291    +******              LABELS FOR NEW VARIABLES              ******;
MPRINT(EM_DIAGRAM):   ****** LABELS FOR NEW VARIABLES ******;
634292    +LABEL _NODE_  = 'Node' ;
MPRINT(EM_DIAGRAM):   LABEL _NODE_ = 'Node' ;
634293    +LABEL _LEAF_  = 'Leaf' ;
MPRINT(EM_DIAGRAM):   LABEL _LEAF_ = 'Leaf' ;
634294    +LABEL P_DepVar0  = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   LABEL P_DepVar0 = 'Predicted: DepVar=0' ;
634295    +LABEL P_DepVar1  = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   LABEL P_DepVar1 = 'Predicted: DepVar=1' ;
634296    +LABEL Q_DepVar0  = 'Unadjusted P: DepVar=0' ;
MPRINT(EM_DIAGRAM):   LABEL Q_DepVar0 = 'Unadjusted P: DepVar=0' ;
634297    +LABEL Q_DepVar1  = 'Unadjusted P: DepVar=1' ;
MPRINT(EM_DIAGRAM):   LABEL Q_DepVar1 = 'Unadjusted P: DepVar=1' ;
634298    +LABEL V_DepVar0  = 'Validated: DepVar=0' ;
MPRINT(EM_DIAGRAM):   LABEL V_DepVar0 = 'Validated: DepVar=0' ;
634299    +LABEL V_DepVar1  = 'Validated: DepVar=1' ;
MPRINT(EM_DIAGRAM):   LABEL V_DepVar1 = 'Validated: DepVar=1' ;
634300    +LABEL R_DepVar0  = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   LABEL R_DepVar0 = 'Residual: DepVar=0' ;
634301    +LABEL R_DepVar1  = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   LABEL R_DepVar1 = 'Residual: DepVar=1' ;
634302    +LABEL F_DepVar  = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   LABEL F_DepVar = 'From: DepVar' ;
634303    +LABEL I_DepVar  = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   LABEL I_DepVar = 'Into: DepVar' ;
634304    +LABEL U_DepVar  = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   LABEL U_DepVar = 'Unnormalized Into: DepVar' ;
634305    +LABEL _WARN_  = 'Warnings' ;
MPRINT(EM_DIAGRAM):   LABEL _WARN_ = 'Warnings' ;
634306    +
634307    +
634308    +******      TEMPORARY VARIABLES FOR FORMATTED VALUES      ******;
MPRINT(EM_DIAGRAM):   ****** TEMPORARY VARIABLES FOR FORMATTED VALUES ******;
634309    +LENGTH _ARBFMT_12 $     12; DROP _ARBFMT_12;
MPRINT(EM_DIAGRAM):   LENGTH _ARBFMT_12 $ 12;
MPRINT(EM_DIAGRAM):   DROP _ARBFMT_12;
634310    +_ARBFMT_12 = ' '; /* Initialize to avoid warning. */
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = ' ';
634311    +
634312    +
634313    +_ARBFMT_12 = PUT( DepVar , BEST.);
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( DepVar , BEST.);
634314    + %DMNORMCP( _ARBFMT_12, F_DepVar );
MPRINT(DMNORMCP):   F_DepVar=dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
634315    +
634316    +******             ASSIGN OBSERVATION TO NODE             ******;
MPRINT(EM_DIAGRAM):   ****** ASSIGN OBSERVATION TO NODE ******;
634317    +IF  NOT MISSING(PC_1 ) AND
634318    +      4.72867010608898 <= PC_1  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(PC_1 ) AND 4.72867010608898 <= PC_1 THEN DO;
634319    +  IF  NOT MISSING(PC_13 ) AND
634320    +        0.79321352563817 <= PC_13  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(PC_13 ) AND 0.79321352563817 <= PC_13 THEN DO;
634321    +    IF  NOT MISSING(PC_3 ) AND
634322    +      PC_3  <    -0.89718284109131 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(PC_3 ) AND PC_3 < -0.89718284109131 THEN DO;
634323    +      IF  NOT MISSING(PC_14 ) AND
634324    +        PC_14  <     -0.2850970940981 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(PC_14 ) AND PC_14 < -0.2850970940981 THEN DO;
634325    +        _NODE_  =                   28;
MPRINT(EM_DIAGRAM):   _NODE_ = 28;
634326    +        _LEAF_  =                    9;
MPRINT(EM_DIAGRAM):   _LEAF_ = 9;
634327    +        P_DepVar0  =      0.9090909090909;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.9090909090909;
634328    +        P_DepVar1  =     0.09090909090909;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.09090909090909;
634329    +        Q_DepVar0  =      0.9090909090909;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.9090909090909;
634330    +        Q_DepVar1  =     0.09090909090909;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.09090909090909;
634331    +        V_DepVar0  =                  0.8;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.8;
634332    +        V_DepVar1  =                  0.2;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.2;
634333    +        I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
634334    +        U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
634335    +        END;
MPRINT(EM_DIAGRAM):   END;
634336    +      ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
634337    +        _NODE_  =                   29;
MPRINT(EM_DIAGRAM):   _NODE_ = 29;
634338    +        _LEAF_  =                   10;
MPRINT(EM_DIAGRAM):   _LEAF_ = 10;
634339    +        P_DepVar0  =     0.35714285714285;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.35714285714285;
634340    +        P_DepVar1  =     0.64285714285714;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.64285714285714;
634341    +        Q_DepVar0  =     0.35714285714285;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.35714285714285;
634342    +        Q_DepVar1  =     0.64285714285714;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.64285714285714;
634343    +        V_DepVar0  =     0.33333333333333;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.33333333333333;
634344    +        V_DepVar1  =     0.66666666666666;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.66666666666666;
634345    +        I_DepVar  = '1' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '1' ;
634346    +        U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
634347    +        END;
MPRINT(EM_DIAGRAM):   END;
634348    +      END;
MPRINT(EM_DIAGRAM):   END;
634349    +    ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
634350    +      _NODE_  =                   15;
MPRINT(EM_DIAGRAM):   _NODE_ = 15;
634351    +      _LEAF_  =                   11;
MPRINT(EM_DIAGRAM):   _LEAF_ = 11;
634352    +      P_DepVar0  =                 0.92;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.92;
634353    +      P_DepVar1  =                 0.08;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.08;
634354    +      Q_DepVar0  =                 0.92;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.92;
634355    +      Q_DepVar1  =                 0.08;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.08;
634356    +      V_DepVar0  =     0.78947368421052;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.78947368421052;
634357    +      V_DepVar1  =     0.21052631578947;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.21052631578947;
634358    +      I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
634359    +      U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
634360    +      END;
MPRINT(EM_DIAGRAM):   END;
634361    +    END;
MPRINT(EM_DIAGRAM):   END;
634362    +  ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
634363    +    IF  NOT MISSING(PC_10 ) AND
634364    +          2.81456071838374 <= PC_10  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(PC_10 ) AND 2.81456071838374 <= PC_10 THEN DO;
634365    +      _NODE_  =                   13;
MPRINT(EM_DIAGRAM):   _NODE_ = 13;
634366    +      _LEAF_  =                    8;
MPRINT(EM_DIAGRAM):   _LEAF_ = 8;
634367    +      P_DepVar0  =     0.69444444444444;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.69444444444444;
634368    +      P_DepVar1  =     0.30555555555555;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.30555555555555;
634369    +      Q_DepVar0  =     0.69444444444444;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.69444444444444;
634370    +      Q_DepVar1  =     0.30555555555555;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.30555555555555;
634371    +      V_DepVar0  =     0.63157894736842;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.63157894736842;
634372    +      V_DepVar1  =     0.36842105263157;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.36842105263157;
634373    +      I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
634374    +      U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
634375    +      END;
MPRINT(EM_DIAGRAM):   END;
634376    +    ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
634377    +      IF  NOT MISSING(PC_2 ) AND
634378    +            0.58123312716899 <= PC_2  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(PC_2 ) AND 0.58123312716899 <= PC_2 THEN DO;
634379    +        IF  NOT MISSING(PC_10 ) AND
634380    +          PC_10  <    -1.00440747949411 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(PC_10 ) AND PC_10 < -1.00440747949411 THEN DO;
634381    +          _NODE_  =                   44;
MPRINT(EM_DIAGRAM):   _NODE_ = 44;
634382    +          _LEAF_  =                    6;
MPRINT(EM_DIAGRAM):   _LEAF_ = 6;
634383    +          P_DepVar0  =     0.14285714285714;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.14285714285714;
634384    +          P_DepVar1  =     0.85714285714285;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.85714285714285;
634385    +          Q_DepVar0  =     0.14285714285714;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.14285714285714;
634386    +          Q_DepVar1  =     0.85714285714285;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.85714285714285;
634387    +          V_DepVar0  =                  0.2;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.2;
634388    +          V_DepVar1  =                  0.8;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.8;
634389    +          I_DepVar  = '1' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '1' ;
634390    +          U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
634391    +          END;
MPRINT(EM_DIAGRAM):   END;
634392    +        ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
634393    +          _NODE_  =                   45;
MPRINT(EM_DIAGRAM):   _NODE_ = 45;
634394    +          _LEAF_  =                    7;
MPRINT(EM_DIAGRAM):   _LEAF_ = 7;
634395    +          P_DepVar0  =                0.875;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.875;
634396    +          P_DepVar1  =                0.125;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.125;
634397    +          Q_DepVar0  =                0.875;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.875;
634398    +          Q_DepVar1  =                0.125;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.125;
634399    +          V_DepVar0  =                    1;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 1;
634400    +          V_DepVar1  =                    0;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0;
634401    +          I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
634402    +          U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
634403    +          END;
MPRINT(EM_DIAGRAM):   END;
634404    +        END;
MPRINT(EM_DIAGRAM):   END;
634405    +      ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
634406    +        IF  NOT MISSING(PC_9 ) AND
634407    +          PC_9  <    -1.24218248225148 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(PC_9 ) AND PC_9 < -1.24218248225148 THEN DO;
634408    +          _NODE_  =                   42;
MPRINT(EM_DIAGRAM):   _NODE_ = 42;
634409    +          _LEAF_  =                    4;
MPRINT(EM_DIAGRAM):   _LEAF_ = 4;
634410    +          P_DepVar0  =                  0.5;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.5;
634411    +          P_DepVar1  =                  0.5;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.5;
634412    +          Q_DepVar0  =                  0.5;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.5;
634413    +          Q_DepVar1  =                  0.5;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.5;
634414    +          V_DepVar0  =                    1;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 1;
634415    +          V_DepVar1  =                    0;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0;
634416    +          I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
634417    +          U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
634418    +          END;
MPRINT(EM_DIAGRAM):   END;
634419    +        ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
634420    +          _NODE_  =                   43;
MPRINT(EM_DIAGRAM):   _NODE_ = 43;
634421    +          _LEAF_  =                    5;
MPRINT(EM_DIAGRAM):   _LEAF_ = 5;
634422    +          P_DepVar0  =     0.05681818181818;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.05681818181818;
634423    +          P_DepVar1  =     0.94318181818181;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.94318181818181;
634424    +          Q_DepVar0  =     0.05681818181818;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.05681818181818;
634425    +          Q_DepVar1  =     0.94318181818181;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.94318181818181;
634426    +          V_DepVar0  =     0.23684210526315;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.23684210526315;
634427    +          V_DepVar1  =     0.76315789473684;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.76315789473684;
634428    +          I_DepVar  = '1' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '1' ;
634429    +          U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
634430    +          END;
MPRINT(EM_DIAGRAM):   END;
634431    +        END;
MPRINT(EM_DIAGRAM):   END;
634432    +      END;
MPRINT(EM_DIAGRAM):   END;
634433    +    END;
MPRINT(EM_DIAGRAM):   END;
634434    +  END;
MPRINT(EM_DIAGRAM):   END;
634435    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
634436    +  IF  NOT MISSING(PC_10 ) AND
634437    +    PC_10  <    -1.17030927830388 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(PC_10 ) AND PC_10 < -1.17030927830388 THEN DO;
634438    +    IF  NOT MISSING(PC_13 ) AND
634439    +      PC_13  <    -0.26447784994774 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(PC_13 ) AND PC_13 < -0.26447784994774 THEN DO;
634440    +      _NODE_  =                    8;
MPRINT(EM_DIAGRAM):   _NODE_ = 8;
634441    +      _LEAF_  =                    1;
MPRINT(EM_DIAGRAM):   _LEAF_ = 1;
634442    +      P_DepVar0  =     0.38202247191011;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.38202247191011;
634443    +      P_DepVar1  =     0.61797752808988;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.61797752808988;
634444    +      Q_DepVar0  =     0.38202247191011;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.38202247191011;
634445    +      Q_DepVar1  =     0.61797752808988;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.61797752808988;
634446    +      V_DepVar0  =     0.38709677419354;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.38709677419354;
634447    +      V_DepVar1  =     0.61290322580645;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.61290322580645;
634448    +      I_DepVar  = '1' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '1' ;
634449    +      U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
634450    +      END;
MPRINT(EM_DIAGRAM):   END;
634451    +    ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
634452    +      _NODE_  =                    9;
MPRINT(EM_DIAGRAM):   _NODE_ = 9;
634453    +      _LEAF_  =                    2;
MPRINT(EM_DIAGRAM):   _LEAF_ = 2;
634454    +      P_DepVar0  =     0.75524475524475;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.75524475524475;
634455    +      P_DepVar1  =     0.24475524475524;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.24475524475524;
634456    +      Q_DepVar0  =     0.75524475524475;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.75524475524475;
634457    +      Q_DepVar1  =     0.24475524475524;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.24475524475524;
634458    +      V_DepVar0  =                 0.76;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.76;
634459    +      V_DepVar1  =                 0.24;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.24;
634460    +      I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
634461    +      U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
634462    +      END;
MPRINT(EM_DIAGRAM):   END;
634463    +    END;
MPRINT(EM_DIAGRAM):   END;
634464    +  ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
634465    +    _NODE_  =                    5;
MPRINT(EM_DIAGRAM):   _NODE_ = 5;
634466    +    _LEAF_  =                    3;
MPRINT(EM_DIAGRAM):   _LEAF_ = 3;
634467    +    P_DepVar0  =     0.92384453781512;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.92384453781512;
634468    +    P_DepVar1  =     0.07615546218487;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.07615546218487;
634469    +    Q_DepVar0  =     0.92384453781512;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.92384453781512;
634470    +    Q_DepVar1  =     0.07615546218487;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.07615546218487;
634471    +    V_DepVar0  =     0.91320293398533;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.91320293398533;
634472    +    V_DepVar1  =     0.08679706601466;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.08679706601466;
634473    +    I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
634474    +    U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
634475    +    END;
MPRINT(EM_DIAGRAM):   END;
634476    +  END;
MPRINT(EM_DIAGRAM):   END;
634477    +
634478    +*****  RESIDUALS R_ *************;
MPRINT(EM_DIAGRAM):   ***** RESIDUALS R_ *************;
634479    +IF  F_DepVar  NE '0'
634480    +AND F_DepVar  NE '1'  THEN DO;
MPRINT(EM_DIAGRAM):   IF F_DepVar NE '0' AND F_DepVar NE '1' THEN DO;
634481    +        R_DepVar0  = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
634482    +        R_DepVar1  = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
634483    + END;
MPRINT(EM_DIAGRAM):   END;
634484    + ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
634485    +       R_DepVar0  =  -P_DepVar0 ;
MPRINT(EM_DIAGRAM):   R_DepVar0 = -P_DepVar0 ;
634486    +       R_DepVar1  =  -P_DepVar1 ;
MPRINT(EM_DIAGRAM):   R_DepVar1 = -P_DepVar1 ;
634487    +       SELECT( F_DepVar  );
MPRINT(EM_DIAGRAM):   SELECT( F_DepVar );
634488    +          WHEN( '0'  ) R_DepVar0  = R_DepVar0  +1;
MPRINT(EM_DIAGRAM):   WHEN( '0' ) R_DepVar0 = R_DepVar0 +1;
634489    +          WHEN( '1'  ) R_DepVar1  = R_DepVar1  +1;
MPRINT(EM_DIAGRAM):   WHEN( '1' ) R_DepVar1 = R_DepVar1 +1;
634490    +       END;
MPRINT(EM_DIAGRAM):   END;
634491    + END;
MPRINT(EM_DIAGRAM):   END;
634492    +
634493    +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
634494    +******          END OF DECISION TREE SCORING CODE         ******;
MPRINT(EM_DIAGRAM):   ****** END OF DECISION TREE SCORING CODE ******;
634495    +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
634496    +drop _LEAF_;
MPRINT(EM_DIAGRAM):   drop _LEAF_;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
634497     run;

NOTE: DATA STEP view saved on file EMWS8.TREE2_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.PRINCOMP_TRAIN.VIEW used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
      

MPRINT(EM_DIAGRAM):   quit;
634498     quit;
634499     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
634500     filename emflow
634500   ! "C:\\predictive-models-project\Workspaces\EMWS8\Tree2\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\Tree2\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Tree2: Scoring VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
634501     *------------------------------------------------------------*;
634502     * Tree2: Scoring VALIDATE data;
634503     *------------------------------------------------------------*;
634504     data EMWS8.Tree2_VALIDATE
634505     / view=EMWS8.Tree2_VALIDATE
634506     ;
MPRINT(EM_DIAGRAM):   data EMWS8.Tree2_VALIDATE / view=EMWS8.Tree2_VALIDATE ;
634507     set EMWS8.PRINCOMP_VALIDATE
634508     ;
MPRINT(EM_DIAGRAM):   set EMWS8.PRINCOMP_VALIDATE ;
634509     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Tree2\EMFLOWSCORE.sas.
634510    +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
634511    +******             DECISION TREE SCORING CODE             ******;
MPRINT(EM_DIAGRAM):   ****** DECISION TREE SCORING CODE ******;
634512    +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
634513    +
634514    +******         LENGTHS OF NEW CHARACTER VARIABLES         ******;
MPRINT(EM_DIAGRAM):   ****** LENGTHS OF NEW CHARACTER VARIABLES ******;
634515    +LENGTH F_DepVar  $   12;
MPRINT(EM_DIAGRAM):   LENGTH F_DepVar $ 12;
634516    +LENGTH I_DepVar  $   12;
MPRINT(EM_DIAGRAM):   LENGTH I_DepVar $ 12;
634517    +LENGTH _WARN_  $    4;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $ 4;
634518    +
634519    +******              LABELS FOR NEW VARIABLES              ******;
MPRINT(EM_DIAGRAM):   ****** LABELS FOR NEW VARIABLES ******;
634520    +LABEL _NODE_  = 'Node' ;
MPRINT(EM_DIAGRAM):   LABEL _NODE_ = 'Node' ;
634521    +LABEL _LEAF_  = 'Leaf' ;
MPRINT(EM_DIAGRAM):   LABEL _LEAF_ = 'Leaf' ;
634522    +LABEL P_DepVar0  = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   LABEL P_DepVar0 = 'Predicted: DepVar=0' ;
634523    +LABEL P_DepVar1  = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   LABEL P_DepVar1 = 'Predicted: DepVar=1' ;
634524    +LABEL Q_DepVar0  = 'Unadjusted P: DepVar=0' ;
MPRINT(EM_DIAGRAM):   LABEL Q_DepVar0 = 'Unadjusted P: DepVar=0' ;
634525    +LABEL Q_DepVar1  = 'Unadjusted P: DepVar=1' ;
MPRINT(EM_DIAGRAM):   LABEL Q_DepVar1 = 'Unadjusted P: DepVar=1' ;
634526    +LABEL V_DepVar0  = 'Validated: DepVar=0' ;
MPRINT(EM_DIAGRAM):   LABEL V_DepVar0 = 'Validated: DepVar=0' ;
634527    +LABEL V_DepVar1  = 'Validated: DepVar=1' ;
MPRINT(EM_DIAGRAM):   LABEL V_DepVar1 = 'Validated: DepVar=1' ;
634528    +LABEL R_DepVar0  = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   LABEL R_DepVar0 = 'Residual: DepVar=0' ;
634529    +LABEL R_DepVar1  = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   LABEL R_DepVar1 = 'Residual: DepVar=1' ;
634530    +LABEL F_DepVar  = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   LABEL F_DepVar = 'From: DepVar' ;
634531    +LABEL I_DepVar  = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   LABEL I_DepVar = 'Into: DepVar' ;
634532    +LABEL U_DepVar  = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   LABEL U_DepVar = 'Unnormalized Into: DepVar' ;
634533    +LABEL _WARN_  = 'Warnings' ;
MPRINT(EM_DIAGRAM):   LABEL _WARN_ = 'Warnings' ;
634534    +
634535    +
634536    +******      TEMPORARY VARIABLES FOR FORMATTED VALUES      ******;
MPRINT(EM_DIAGRAM):   ****** TEMPORARY VARIABLES FOR FORMATTED VALUES ******;
634537    +LENGTH _ARBFMT_12 $     12; DROP _ARBFMT_12;
MPRINT(EM_DIAGRAM):   LENGTH _ARBFMT_12 $ 12;
MPRINT(EM_DIAGRAM):   DROP _ARBFMT_12;
634538    +_ARBFMT_12 = ' '; /* Initialize to avoid warning. */
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = ' ';
634539    +
634540    +
634541    +_ARBFMT_12 = PUT( DepVar , BEST.);
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( DepVar , BEST.);
634542    + %DMNORMCP( _ARBFMT_12, F_DepVar );
MPRINT(DMNORMCP):   F_DepVar=dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
634543    +
634544    +******             ASSIGN OBSERVATION TO NODE             ******;
MPRINT(EM_DIAGRAM):   ****** ASSIGN OBSERVATION TO NODE ******;
634545    +IF  NOT MISSING(PC_1 ) AND
634546    +      4.72867010608898 <= PC_1  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(PC_1 ) AND 4.72867010608898 <= PC_1 THEN DO;
634547    +  IF  NOT MISSING(PC_13 ) AND
634548    +        0.79321352563817 <= PC_13  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(PC_13 ) AND 0.79321352563817 <= PC_13 THEN DO;
634549    +    IF  NOT MISSING(PC_3 ) AND
634550    +      PC_3  <    -0.89718284109131 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(PC_3 ) AND PC_3 < -0.89718284109131 THEN DO;
634551    +      IF  NOT MISSING(PC_14 ) AND
634552    +        PC_14  <     -0.2850970940981 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(PC_14 ) AND PC_14 < -0.2850970940981 THEN DO;
634553    +        _NODE_  =                   28;
MPRINT(EM_DIAGRAM):   _NODE_ = 28;
634554    +        _LEAF_  =                    9;
MPRINT(EM_DIAGRAM):   _LEAF_ = 9;
634555    +        P_DepVar0  =      0.9090909090909;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.9090909090909;
634556    +        P_DepVar1  =     0.09090909090909;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.09090909090909;
634557    +        Q_DepVar0  =      0.9090909090909;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.9090909090909;
634558    +        Q_DepVar1  =     0.09090909090909;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.09090909090909;
634559    +        V_DepVar0  =                  0.8;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.8;
634560    +        V_DepVar1  =                  0.2;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.2;
634561    +        I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
634562    +        U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
634563    +        END;
MPRINT(EM_DIAGRAM):   END;
634564    +      ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
634565    +        _NODE_  =                   29;
MPRINT(EM_DIAGRAM):   _NODE_ = 29;
634566    +        _LEAF_  =                   10;
MPRINT(EM_DIAGRAM):   _LEAF_ = 10;
634567    +        P_DepVar0  =     0.35714285714285;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.35714285714285;
634568    +        P_DepVar1  =     0.64285714285714;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.64285714285714;
634569    +        Q_DepVar0  =     0.35714285714285;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.35714285714285;
634570    +        Q_DepVar1  =     0.64285714285714;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.64285714285714;
634571    +        V_DepVar0  =     0.33333333333333;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.33333333333333;
634572    +        V_DepVar1  =     0.66666666666666;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.66666666666666;
634573    +        I_DepVar  = '1' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '1' ;
634574    +        U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
634575    +        END;
MPRINT(EM_DIAGRAM):   END;
634576    +      END;
MPRINT(EM_DIAGRAM):   END;
634577    +    ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
634578    +      _NODE_  =                   15;
MPRINT(EM_DIAGRAM):   _NODE_ = 15;
634579    +      _LEAF_  =                   11;
MPRINT(EM_DIAGRAM):   _LEAF_ = 11;
634580    +      P_DepVar0  =                 0.92;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.92;
634581    +      P_DepVar1  =                 0.08;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.08;
634582    +      Q_DepVar0  =                 0.92;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.92;
634583    +      Q_DepVar1  =                 0.08;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.08;
634584    +      V_DepVar0  =     0.78947368421052;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.78947368421052;
634585    +      V_DepVar1  =     0.21052631578947;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.21052631578947;
634586    +      I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
634587    +      U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
634588    +      END;
MPRINT(EM_DIAGRAM):   END;
634589    +    END;
MPRINT(EM_DIAGRAM):   END;
634590    +  ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
634591    +    IF  NOT MISSING(PC_10 ) AND
634592    +          2.81456071838374 <= PC_10  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(PC_10 ) AND 2.81456071838374 <= PC_10 THEN DO;
634593    +      _NODE_  =                   13;
MPRINT(EM_DIAGRAM):   _NODE_ = 13;
634594    +      _LEAF_  =                    8;
MPRINT(EM_DIAGRAM):   _LEAF_ = 8;
634595    +      P_DepVar0  =     0.69444444444444;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.69444444444444;
634596    +      P_DepVar1  =     0.30555555555555;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.30555555555555;
634597    +      Q_DepVar0  =     0.69444444444444;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.69444444444444;
634598    +      Q_DepVar1  =     0.30555555555555;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.30555555555555;
634599    +      V_DepVar0  =     0.63157894736842;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.63157894736842;
634600    +      V_DepVar1  =     0.36842105263157;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.36842105263157;
634601    +      I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
634602    +      U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
634603    +      END;
MPRINT(EM_DIAGRAM):   END;
634604    +    ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
634605    +      IF  NOT MISSING(PC_2 ) AND
634606    +            0.58123312716899 <= PC_2  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(PC_2 ) AND 0.58123312716899 <= PC_2 THEN DO;
634607    +        IF  NOT MISSING(PC_10 ) AND
634608    +          PC_10  <    -1.00440747949411 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(PC_10 ) AND PC_10 < -1.00440747949411 THEN DO;
634609    +          _NODE_  =                   44;
MPRINT(EM_DIAGRAM):   _NODE_ = 44;
634610    +          _LEAF_  =                    6;
MPRINT(EM_DIAGRAM):   _LEAF_ = 6;
634611    +          P_DepVar0  =     0.14285714285714;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.14285714285714;
634612    +          P_DepVar1  =     0.85714285714285;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.85714285714285;
634613    +          Q_DepVar0  =     0.14285714285714;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.14285714285714;
634614    +          Q_DepVar1  =     0.85714285714285;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.85714285714285;
634615    +          V_DepVar0  =                  0.2;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.2;
634616    +          V_DepVar1  =                  0.8;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.8;
634617    +          I_DepVar  = '1' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '1' ;
634618    +          U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
634619    +          END;
MPRINT(EM_DIAGRAM):   END;
634620    +        ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
634621    +          _NODE_  =                   45;
MPRINT(EM_DIAGRAM):   _NODE_ = 45;
634622    +          _LEAF_  =                    7;
MPRINT(EM_DIAGRAM):   _LEAF_ = 7;
634623    +          P_DepVar0  =                0.875;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.875;
634624    +          P_DepVar1  =                0.125;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.125;
634625    +          Q_DepVar0  =                0.875;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.875;
634626    +          Q_DepVar1  =                0.125;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.125;
634627    +          V_DepVar0  =                    1;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 1;
634628    +          V_DepVar1  =                    0;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0;
634629    +          I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
634630    +          U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
634631    +          END;
MPRINT(EM_DIAGRAM):   END;
634632    +        END;
MPRINT(EM_DIAGRAM):   END;
634633    +      ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
634634    +        IF  NOT MISSING(PC_9 ) AND
634635    +          PC_9  <    -1.24218248225148 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(PC_9 ) AND PC_9 < -1.24218248225148 THEN DO;
634636    +          _NODE_  =                   42;
MPRINT(EM_DIAGRAM):   _NODE_ = 42;
634637    +          _LEAF_  =                    4;
MPRINT(EM_DIAGRAM):   _LEAF_ = 4;
634638    +          P_DepVar0  =                  0.5;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.5;
634639    +          P_DepVar1  =                  0.5;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.5;
634640    +          Q_DepVar0  =                  0.5;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.5;
634641    +          Q_DepVar1  =                  0.5;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.5;
634642    +          V_DepVar0  =                    1;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 1;
634643    +          V_DepVar1  =                    0;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0;
634644    +          I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
634645    +          U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
634646    +          END;
MPRINT(EM_DIAGRAM):   END;
634647    +        ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
634648    +          _NODE_  =                   43;
MPRINT(EM_DIAGRAM):   _NODE_ = 43;
634649    +          _LEAF_  =                    5;
MPRINT(EM_DIAGRAM):   _LEAF_ = 5;
634650    +          P_DepVar0  =     0.05681818181818;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.05681818181818;
634651    +          P_DepVar1  =     0.94318181818181;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.94318181818181;
634652    +          Q_DepVar0  =     0.05681818181818;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.05681818181818;
634653    +          Q_DepVar1  =     0.94318181818181;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.94318181818181;
634654    +          V_DepVar0  =     0.23684210526315;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.23684210526315;
634655    +          V_DepVar1  =     0.76315789473684;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.76315789473684;
634656    +          I_DepVar  = '1' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '1' ;
634657    +          U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
634658    +          END;
MPRINT(EM_DIAGRAM):   END;
634659    +        END;
MPRINT(EM_DIAGRAM):   END;
634660    +      END;
MPRINT(EM_DIAGRAM):   END;
634661    +    END;
MPRINT(EM_DIAGRAM):   END;
634662    +  END;
MPRINT(EM_DIAGRAM):   END;
634663    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
634664    +  IF  NOT MISSING(PC_10 ) AND
634665    +    PC_10  <    -1.17030927830388 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(PC_10 ) AND PC_10 < -1.17030927830388 THEN DO;
634666    +    IF  NOT MISSING(PC_13 ) AND
634667    +      PC_13  <    -0.26447784994774 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(PC_13 ) AND PC_13 < -0.26447784994774 THEN DO;
634668    +      _NODE_  =                    8;
MPRINT(EM_DIAGRAM):   _NODE_ = 8;
634669    +      _LEAF_  =                    1;
MPRINT(EM_DIAGRAM):   _LEAF_ = 1;
634670    +      P_DepVar0  =     0.38202247191011;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.38202247191011;
634671    +      P_DepVar1  =     0.61797752808988;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.61797752808988;
634672    +      Q_DepVar0  =     0.38202247191011;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.38202247191011;
634673    +      Q_DepVar1  =     0.61797752808988;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.61797752808988;
634674    +      V_DepVar0  =     0.38709677419354;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.38709677419354;
634675    +      V_DepVar1  =     0.61290322580645;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.61290322580645;
634676    +      I_DepVar  = '1' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '1' ;
634677    +      U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
634678    +      END;
MPRINT(EM_DIAGRAM):   END;
634679    +    ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
634680    +      _NODE_  =                    9;
MPRINT(EM_DIAGRAM):   _NODE_ = 9;
634681    +      _LEAF_  =                    2;
MPRINT(EM_DIAGRAM):   _LEAF_ = 2;
634682    +      P_DepVar0  =     0.75524475524475;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.75524475524475;
634683    +      P_DepVar1  =     0.24475524475524;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.24475524475524;
634684    +      Q_DepVar0  =     0.75524475524475;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.75524475524475;
634685    +      Q_DepVar1  =     0.24475524475524;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.24475524475524;
634686    +      V_DepVar0  =                 0.76;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.76;
634687    +      V_DepVar1  =                 0.24;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.24;
634688    +      I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
634689    +      U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
634690    +      END;
MPRINT(EM_DIAGRAM):   END;
634691    +    END;
MPRINT(EM_DIAGRAM):   END;
634692    +  ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
634693    +    _NODE_  =                    5;
MPRINT(EM_DIAGRAM):   _NODE_ = 5;
634694    +    _LEAF_  =                    3;
MPRINT(EM_DIAGRAM):   _LEAF_ = 3;
634695    +    P_DepVar0  =     0.92384453781512;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.92384453781512;
634696    +    P_DepVar1  =     0.07615546218487;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.07615546218487;
634697    +    Q_DepVar0  =     0.92384453781512;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.92384453781512;
634698    +    Q_DepVar1  =     0.07615546218487;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.07615546218487;
634699    +    V_DepVar0  =     0.91320293398533;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.91320293398533;
634700    +    V_DepVar1  =     0.08679706601466;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.08679706601466;
634701    +    I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
634702    +    U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
634703    +    END;
MPRINT(EM_DIAGRAM):   END;
634704    +  END;
MPRINT(EM_DIAGRAM):   END;
634705    +
634706    +*****  RESIDUALS R_ *************;
MPRINT(EM_DIAGRAM):   ***** RESIDUALS R_ *************;
634707    +IF  F_DepVar  NE '0'
634708    +AND F_DepVar  NE '1'  THEN DO;
MPRINT(EM_DIAGRAM):   IF F_DepVar NE '0' AND F_DepVar NE '1' THEN DO;
634709    +        R_DepVar0  = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
634710    +        R_DepVar1  = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
634711    + END;
MPRINT(EM_DIAGRAM):   END;
634712    + ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
634713    +       R_DepVar0  =  -P_DepVar0 ;
MPRINT(EM_DIAGRAM):   R_DepVar0 = -P_DepVar0 ;
634714    +       R_DepVar1  =  -P_DepVar1 ;
MPRINT(EM_DIAGRAM):   R_DepVar1 = -P_DepVar1 ;
634715    +       SELECT( F_DepVar  );
MPRINT(EM_DIAGRAM):   SELECT( F_DepVar );
634716    +          WHEN( '0'  ) R_DepVar0  = R_DepVar0  +1;
MPRINT(EM_DIAGRAM):   WHEN( '0' ) R_DepVar0 = R_DepVar0 +1;
634717    +          WHEN( '1'  ) R_DepVar1  = R_DepVar1  +1;
MPRINT(EM_DIAGRAM):   WHEN( '1' ) R_DepVar1 = R_DepVar1 +1;
634718    +       END;
MPRINT(EM_DIAGRAM):   END;
634719    + END;
MPRINT(EM_DIAGRAM):   END;
634720    +
634721    +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
634722    +******          END OF DECISION TREE SCORING CODE         ******;
MPRINT(EM_DIAGRAM):   ****** END OF DECISION TREE SCORING CODE ******;
634723    +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
634724    +drop _LEAF_;
MPRINT(EM_DIAGRAM):   drop _LEAF_;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
634725     run;

NOTE: DATA STEP view saved on file EMWS8.TREE2_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.PRINCOMP_VALIDATE.VIEW used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
634726     quit;
634727     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
634728     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
634729     * Tree2: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * Tree2: Computing metadata for TRAIN data;
634730     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;

NOTE: View EMWS8.TREE2_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta 
"C:\\predictive-models-project\Workspaces\EMWS8\Tree2\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS8.Tree2_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS8.Tree2_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS8.Tree2_TRAIN out=WORK.M2ZFPZVL noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2ZFPZVL;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20 
INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M2ZFPZVL(keep=name type length label format formatl 
formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then format = strip(format)!!strip(put(formatl, 
best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, 
best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then informat = 
strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, 
best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2ZFPZVL;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M2ZFPZVL;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M01GZFH3 NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M01GZFH3;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M01GZFH3;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2AWQQO6(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M01GZFH3;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M01GZFH3;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 
FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M01GZFH3;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" 
"MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" 
"QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" "YEAR" "YYMMDD" "YYMON" 
"YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" 
"EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) 
formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = 
"DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) 
formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" 
"NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" 
"SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = 
"DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then 
level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 
'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 
'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ 
('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 
'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 
'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M01GZFH3;
MPRINT(EMADVISECOLUMNS):   set WORK.M01GZFH3;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= 
"Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= 
"Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower limit" UPPERLIMIT= 
"Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= 
"Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.PRINCOMP_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.PRINCOMP_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Tree2_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT 
LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "Tree2";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("P_DEPVAR1") creator = "Tree2";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR1") creator = "Tree2";
MPRINT(EM_DIAGRAM):   when("P_DEPVAR0") creator = "Tree2";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR0") creator = "Tree2";
MPRINT(EM_DIAGRAM):   when("F_DEPVAR") creator = "Tree2";
MPRINT(EM_DIAGRAM):   when("I_DEPVAR") creator = "Tree2";
MPRINT(EM_DIAGRAM):   when("U_DEPVAR") creator = "Tree2";
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "Tree2";
MPRINT(EM_DIAGRAM):   when("DEPVAR") model = "Tree2";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Tree2: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   if name = '_NODE_' then do;
MPRINT(EM_DIAGRAM):   role = 'SEGMENT';
MPRINT(EM_DIAGRAM):   level = 'NOMINAL';
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if upcase(name) = 'PC_1' then role = 'INPUT';
MPRINT(EM_DIAGRAM):   else if upcase(name) = 'PC_10' then role = 'INPUT';
MPRINT(EM_DIAGRAM):   else if upcase(name) = 'PC_13' then role = 'INPUT';
MPRINT(EM_DIAGRAM):   else if upcase(name) = 'PC_2' then role = 'INPUT';
MPRINT(EM_DIAGRAM):   else if upcase(name) = 'PC_9' then role = 'INPUT';
MPRINT(EM_DIAGRAM):   else if upcase(name) = 'PC_14' then role = 'INPUT';
MPRINT(EM_DIAGRAM):   else if upcase(name) = 'PC_3' then role = 'INPUT';
MPRINT(EM_DIAGRAM):   else if upcase(name) = 'PC_12' then do;
MPRINT(EM_DIAGRAM):   role = 'REJECTED';
MPRINT(EM_DIAGRAM):   comment = "Tree2: TREELOWIMPORTANCE";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if upcase(name) = 'PC_16' then do;
MPRINT(EM_DIAGRAM):   role = 'REJECTED';
MPRINT(EM_DIAGRAM):   comment = "Tree2: TREELOWIMPORTANCE";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if upcase(name) = 'PC_11' then do;
MPRINT(EM_DIAGRAM):   role = 'REJECTED';
MPRINT(EM_DIAGRAM):   comment = "Tree2: TREELOWIMPORTANCE";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if upcase(name) = 'PC_7' then do;
MPRINT(EM_DIAGRAM):   role = 'REJECTED';
MPRINT(EM_DIAGRAM):   comment = "Tree2: TREELOWIMPORTANCE";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if upcase(name) = 'PC_17' then do;
MPRINT(EM_DIAGRAM):   role = 'REJECTED';
MPRINT(EM_DIAGRAM):   comment = "Tree2: TREELOWIMPORTANCE";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if upcase(name) = 'PC_4' then do;
MPRINT(EM_DIAGRAM):   role = 'REJECTED';
MPRINT(EM_DIAGRAM):   comment = "Tree2: TREELOWIMPORTANCE";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if upcase(name) = 'PC_5' then do;
MPRINT(EM_DIAGRAM):   role = 'REJECTED';
MPRINT(EM_DIAGRAM):   comment = "Tree2: TREELOWIMPORTANCE";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if upcase(name) = 'PC_6' then do;
MPRINT(EM_DIAGRAM):   role = 'REJECTED';
MPRINT(EM_DIAGRAM):   comment = "Tree2: TREELOWIMPORTANCE";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if upcase(name) = 'PC_15' then do;
MPRINT(EM_DIAGRAM):   role = 'REJECTED';
MPRINT(EM_DIAGRAM):   comment = "Tree2: TREELOWIMPORTANCE";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if upcase(name) = 'PC_8' then do;
MPRINT(EM_DIAGRAM):   role = 'REJECTED';
MPRINT(EM_DIAGRAM):   comment = "Tree2: TREELOWIMPORTANCE";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if upcase(name) = 'YEAR_BIRTH' then do;
MPRINT(EM_DIAGRAM):   role = 'REJECTED';
MPRINT(EM_DIAGRAM):   comment = "Tree2: TREELOWIMPORTANCE";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if upcase(name) = 'Q_DepVar1' then role = "ASSESS";
MPRINT(EM_DIAGRAM):   if upcase(name) = 'Q_DepVar0' then role = "ASSESS";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
635116     data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
635117     set EMWS8.Tree2_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Tree2_EMINFO;
635118     where DATA='Tree2' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='Tree2' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 
'MODEL');
635119     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TREE2_EMINFO.
      WHERE (DATA='Tree2') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

635120     data EMWS8.Tree2_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS8.Tree2_EMINFO;
635121     length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
635122     input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
635123     cards;
MPRINT(EM_DIAGRAM):   cards;

NOTE: The data set EMWS8.TREE2_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   run;
635127     run;
635128     data EMWS8.Tree2_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Tree2_EMINFO;
635129     set EMWS8.Tree2_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Tree2_EMINFO WORK.MODELTEMP_INFO;
635130     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.TREE2_EMINFO.
NOTE: There were 0 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS8.TREE2_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

635131     proc sort data = EMWS8.Tree2_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.Tree2_EMINFO NOTHREADS;
635132     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
635133     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.TREE2_EMINFO.
NOTE: The data set EMWS8.TREE2_EMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

635134     proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
635135     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
635136     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set EMWS8.FIMPORT_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 1 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

635137     proc sort data = EMWS8.Tree2_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS8.Tree2_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
635138     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
635139     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 3 observations read from the data set EMWS8.TREE2_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

635140     data EMWS8.Tree2_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Tree2_EMINFO;
635141     merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
635142     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
635143     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 3 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS8.TREE2_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

635144     proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
635145     delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
635146     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
635147     quit;
MPRINT(EM_DIAGRAM):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

NOTE: View EMWS8.TREE2_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
NOTE: View EMWS8.TREE2_VALIDATE.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
