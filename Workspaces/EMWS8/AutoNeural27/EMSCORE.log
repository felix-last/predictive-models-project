MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "28. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "09.09 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                28. April 2016
Time:                09.09 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O3J_X3B0 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural27\EMSCORE.out" encoding="UTF-8" 
NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O3J_X3B0 new;
MPRINT(EM_DIAGRAM):   run;
1173661    filename emflow
1173661  ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural27\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural27\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * AutoNeural27: Scoring DATA data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1173662    *------------------------------------------------------------*;
1173663    * AutoNeural27: Scoring DATA data;
1173664    *------------------------------------------------------------*;
1173665    data EMWS8.AutoNeural27_TRAIN
1173666    / view=EMWS8.AutoNeural27_TRAIN
1173667    ;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural27_TRAIN / view=EMWS8.AutoNeural27_TRAIN ;
1173668    set EMWS8.Varsel_TRAIN
1173669    ;
MPRINT(EM_DIAGRAM):   set EMWS8.Varsel_TRAIN ;
1173670    %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural27\EMFLOWSCORE.sas.
1173671   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1173672   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1173673   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1173674   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1173675   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1173676   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1173677   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1173678   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1173679   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1173680   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1173681   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1173682   +LENGTH _WARN_ $4
1173683   +      F_DepVar  $ 12
1173684   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1173685   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1173686   +
1173687   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1173688   +
1173689   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1173690   +
1173691   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1173692   +
1173693   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1173694   +
1173695   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1173696   +
1173697   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1173698   +
1173699   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1173700   +
1173701   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1173702   +
1173703   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1173704   +
1173705   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1173706   +
1173707   +      label G_Marital_Status0 = 'Dummy: G_Marital_Status=0' ;
MPRINT(EM_DIAGRAM):   label G_Marital_Status0 = 'Dummy: G_Marital_Status=0' ;
1173708   +
1173709   +      label G_Marital_Status1 = 'Dummy: G_Marital_Status=1' ;
MPRINT(EM_DIAGRAM):   label G_Marital_Status1 = 'Dummy: G_Marital_Status=1' ;
1173710   +
1173711   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
1173712   +
1173713   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
1173714   +
1173715   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
1173716   +
1173717   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
1173718   +
1173719   +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
1173720   +
1173721   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1173722   +
1173723   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1173724   +
1173725   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1173726   +
1173727   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1173728   +
1173729   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1173730   +
1173731   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1173732   +
1173733   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1173734   +
1173735   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1173736   +
1173737   +*** Generate dummy variables for G_Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for G_Marital_Status ;
1173738   +drop G_Marital_Status0 G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   drop G_Marital_Status0 G_Marital_Status1 ;
1173739   +if missing( G_Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( G_Marital_Status ) then do;
1173740   +   G_Marital_Status0 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = .;
1173741   +   G_Marital_Status1 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = .;
1173742   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1173743   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1173744   +end;
MPRINT(EM_DIAGRAM):   end;
1173745   +else do;
MPRINT(EM_DIAGRAM):   else do;
1173746   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1173747   +   _dm12 = put( G_Marital_Status , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( G_Marital_Status , BEST12. );
1173748   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1173749   +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
1173750   +      G_Marital_Status0 = -1;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = -1;
1173751   +      G_Marital_Status1 = -1;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = -1;
1173752   +   end;
MPRINT(EM_DIAGRAM):   end;
1173753   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1173754   +      G_Marital_Status0 = 1;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = 1;
1173755   +      G_Marital_Status1 = 0;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = 0;
1173756   +   end;
MPRINT(EM_DIAGRAM):   end;
1173757   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1173758   +      G_Marital_Status0 = 0;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = 0;
1173759   +      G_Marital_Status1 = 1;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = 1;
1173760   +   end;
MPRINT(EM_DIAGRAM):   end;
1173761   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1173762   +      G_Marital_Status0 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = .;
1173763   +      G_Marital_Status1 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = .;
1173764   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1173765   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1173766   +   end;
MPRINT(EM_DIAGRAM):   end;
1173767   +end;
MPRINT(EM_DIAGRAM):   end;
1173768   +
1173769   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1173770   +*** Checking missing input Interval
1173771   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1173772   +
1173773   +IF NMISS(
1173774   +   AcceptedCmpTotal ,
1173775   +   Frq ,
1173776   +   Income ,
1173777   +   Mnt ,
1173778   +   MntGoldProds ,
1173779   +   MntMeatProducts ,
1173780   +   MntWines ,
1173781   +   NumDistPurchases ,
1173782   +   RFMstat ,
1173783   +   RMntFrq ,
1173784   +   Recency   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Income , Mnt , MntGoldProds , 
MntMeatProducts , MntWines , NumDistPurchases , RFMstat , RMntFrq , Recency ) THEN DO;
1173785   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1173786   +
1173787   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1173788   +END;
MPRINT(EM_DIAGRAM):   END;
1173789   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1173790   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
1173791   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1173792   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1173793   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1173794   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1173795   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1173796   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1173797   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1173798   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1173799   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1173800   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1173801   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1173802   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1173803   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1173804   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1173805   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1173806   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1173807   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1173808   +END;
MPRINT(EM_DIAGRAM):   END;
1173809   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1173810   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1173811   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1173812   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1173813   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1173814   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1173815   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1173816   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1173817   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1173818   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1173819   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1173820   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1173821   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1173822   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1173823   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1173824   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1173825   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1173826   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1173827   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1173828   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1173829   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1173830   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1173831   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1173832   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1173833   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1173834   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1173835   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1173836   +END;
MPRINT(EM_DIAGRAM):   END;
1173837   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1173838   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
1173839   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1173840   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1173841   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
1173842   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1173843   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1173844   +   H1x1_1  =    -0.18981728384316 * S_AcceptedCmpTotal
1173845   +          +     2.44575265018132 * S_Frq  +    -0.33258639871365 * S_Income
1173846   +          +    -1.51282513201415 * S_Mnt  +     0.06017420606179 *
1173847   +        S_MntGoldProds  +    -0.55274425550395 * S_MntMeatProducts
1173848   +          +     0.91858869924573 * S_MntWines  +    -1.95905223495165 *
1173849   +        S_NumDistPurchases  +     -0.2637023845598 * S_RFMstat
1173850   +          +     1.23283591446263 * S_RMntFrq  +    -0.07916044614039 *
1173851   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.18981728384316 * S_AcceptedCmpTotal + 2.44575265018132 * 
S_Frq + -0.33258639871365 * S_Income + -1.51282513201415 * S_Mnt + 0.06017420606179 * 
S_MntGoldProds + -0.55274425550395 * S_MntMeatProducts + 0.91858869924573 * S_MntWines + 
-1.95905223495165 * S_NumDistPurchases + -0.2637023845598 * S_RFMstat + 1.23283591446263 * 
S_RMntFrq + -0.07916044614039 * S_Recency ;
1173852   +   H1x1_2  =    -0.68309764555121 * S_AcceptedCmpTotal
1173853   +          +     0.14669436656758 * S_Frq  +     0.02315218376279 * S_Income
1173854   +          +    -4.21583355142014 * S_Mnt  +     0.19199314585125 *
1173855   +        S_MntGoldProds  +     2.55483645032568 * S_MntMeatProducts
1173856   +          +     0.82054382378306 * S_MntWines  +     0.29968014910707 *
1173857   +        S_NumDistPurchases  +     0.60687719454304 * S_RFMstat
1173858   +          +     0.83498030971653 * S_RMntFrq  +     0.50801279856495 *
1173859   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.68309764555121 * S_AcceptedCmpTotal + 0.14669436656758 * 
S_Frq + 0.02315218376279 * S_Income + -4.21583355142014 * S_Mnt + 0.19199314585125 * 
S_MntGoldProds + 2.55483645032568 * S_MntMeatProducts + 0.82054382378306 * S_MntWines + 
0.29968014910707 * S_NumDistPurchases + 0.60687719454304 * S_RFMstat + 0.83498030971653 * 
S_RMntFrq + 0.50801279856495 * S_Recency ;
1173860   +   H1x1_3  =     0.08829866742968 * S_AcceptedCmpTotal
1173861   +          +    -0.02323769496851 * S_Frq  +    -0.99617629114101 * S_Income
1173862   +          +    -4.64282306384023 * S_Mnt  +     0.04308696038528 *
1173863   +        S_MntGoldProds  +     2.31863620360623 * S_MntMeatProducts
1173864   +          +     0.16587338267425 * S_MntWines  +     1.02973533097984 *
1173865   +        S_NumDistPurchases  +     0.20343196580651 * S_RFMstat
1173866   +          +     0.94726928092138 * S_RMntFrq  +     0.03712585159749 *
1173867   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.08829866742968 * S_AcceptedCmpTotal + -0.02323769496851 * 
S_Frq + -0.99617629114101 * S_Income + -4.64282306384023 * S_Mnt + 0.04308696038528 * 
S_MntGoldProds + 2.31863620360623 * S_MntMeatProducts + 0.16587338267425 * S_MntWines + 
1.02973533097984 * S_NumDistPurchases + 0.20343196580651 * S_RFMstat + 0.94726928092138 * 
S_RMntFrq + 0.03712585159749 * S_Recency ;
1173868   +   H1x1_4  =     0.10061099283455 * S_AcceptedCmpTotal
1173869   +          +     1.72752905329456 * S_Frq  +    -0.50472344084228 * S_Income
1173870   +          +     1.07329017540495 * S_Mnt  +    -0.44517902573644 *
1173871   +        S_MntGoldProds  +    -1.57417593135497 * S_MntMeatProducts
1173872   +          +    -0.75359748699668 * S_MntWines  +    -1.09387259425684 *
1173873   +        S_NumDistPurchases  +    -0.81518874000435 * S_RFMstat
1173874   +          +     0.23368643717628 * S_RMntFrq  +    -0.30240544347672 *
1173875   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.10061099283455 * S_AcceptedCmpTotal + 1.72752905329456 * 
S_Frq + -0.50472344084228 * S_Income + 1.07329017540495 * S_Mnt + -0.44517902573644 * 
S_MntGoldProds + -1.57417593135497 * S_MntMeatProducts + -0.75359748699668 * S_MntWines + 
-1.09387259425684 * S_NumDistPurchases + -0.81518874000435 * S_RFMstat + 0.23368643717628 * 
S_RMntFrq + -0.30240544347672 * S_Recency ;
1173876   +   H1x1_5  =    -0.22817314877708 * S_AcceptedCmpTotal
1173877   +          +     0.28118539965414 * S_Frq  +     0.04846488460495 * S_Income
1173878   +          +     0.60106863054811 * S_Mnt  +    -0.06162179557217 *
1173879   +        S_MntGoldProds  +    -0.39180490439507 * S_MntMeatProducts
1173880   +          +    -0.21017068084579 * S_MntWines  +    -0.32161828113396 *
1173881   +        S_NumDistPurchases  +    -0.03465088483344 * S_RFMstat
1173882   +          +    -0.03147262277696 * S_RMntFrq  +     0.34128240879899 *
1173883   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -0.22817314877708 * S_AcceptedCmpTotal + 0.28118539965414 * 
S_Frq + 0.04846488460495 * S_Income + 0.60106863054811 * S_Mnt + -0.06162179557217 * 
S_MntGoldProds + -0.39180490439507 * S_MntMeatProducts + -0.21017068084579 * S_MntWines + 
-0.32161828113396 * S_NumDistPurchases + -0.03465088483344 * S_RFMstat + -0.03147262277696 * 
S_RMntFrq + 0.34128240879899 * S_Recency ;
1173884   +   H1x1_1  = H1x1_1  +     0.15249883445815 * G_Marital_Status0
1173885   +          +    -0.18818735950093 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.15249883445815 * G_Marital_Status0 + 
-0.18818735950093 * G_Marital_Status1 ;
1173886   +   H1x1_2  = H1x1_2  +     1.59824663671134 * G_Marital_Status0
1173887   +          +     1.96669325047054 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 1.59824663671134 * G_Marital_Status0 + 
1.96669325047054 * G_Marital_Status1 ;
1173888   +   H1x1_3  = H1x1_3  +    -0.31220761109652 * G_Marital_Status0
1173889   +          +     0.52212878383819 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.31220761109652 * G_Marital_Status0 + 
0.52212878383819 * G_Marital_Status1 ;
1173890   +   H1x1_4  = H1x1_4  +    -1.92906338619158 * G_Marital_Status0
1173891   +          +    -1.25145208260948 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -1.92906338619158 * G_Marital_Status0 + 
-1.25145208260948 * G_Marital_Status1 ;
1173892   +   H1x1_5  = H1x1_5  +    -0.18067263072436 * G_Marital_Status0
1173893   +          +    -0.07780771416761 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.18067263072436 * G_Marital_Status0 + 
-0.07780771416761 * G_Marital_Status1 ;
1173894   +   H1x1_1  =     1.46324697396327 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.46324697396327 + H1x1_1 ;
1173895   +   H1x1_2  =     1.36794472927517 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.36794472927517 + H1x1_2 ;
1173896   +   H1x1_3  =    -0.57612320445046 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.57612320445046 + H1x1_3 ;
1173897   +   H1x1_4  =    -1.53805674056235 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -1.53805674056235 + H1x1_4 ;
1173898   +   H1x1_5  =     0.35787040000513 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 0.35787040000513 + H1x1_5 ;
1173899   +   H1x1_1  = SIN(H1x1_1 );
MPRINT(EM_DIAGRAM):   H1x1_1 = SIN(H1x1_1 );
1173900   +   H1x1_2  = SIN(H1x1_2 );
MPRINT(EM_DIAGRAM):   H1x1_2 = SIN(H1x1_2 );
1173901   +   H1x1_3  = SIN(H1x1_3 );
MPRINT(EM_DIAGRAM):   H1x1_3 = SIN(H1x1_3 );
1173902   +   H1x1_4  = SIN(H1x1_4 );
MPRINT(EM_DIAGRAM):   H1x1_4 = SIN(H1x1_4 );
1173903   +   H1x1_5  = SIN(H1x1_5 );
MPRINT(EM_DIAGRAM):   H1x1_5 = SIN(H1x1_5 );
1173904   +END;
MPRINT(EM_DIAGRAM):   END;
1173905   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1173906   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
1173907   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
1173908   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
1173909   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
1173910   +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
1173911   +END;
MPRINT(EM_DIAGRAM):   END;
1173912   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1173913   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1173914   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1173915   +
1173916   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1173917   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1173918   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1173919   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1173920   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1173921   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1173922   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1173923   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1173924   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1173925   +end;
MPRINT(EM_DIAGRAM):   end;
1173926   +else do;
MPRINT(EM_DIAGRAM):   else do;
1173927   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1173928   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1173929   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1173930   +   end;
MPRINT(EM_DIAGRAM):   end;
1173931   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1173932   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1173933   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1173934   +   end;
MPRINT(EM_DIAGRAM):   end;
1173935   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1173936   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1173937   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1173938   +   end;
MPRINT(EM_DIAGRAM):   end;
1173939   +end;
MPRINT(EM_DIAGRAM):   end;
1173940   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1173941   +   P_DepVar1  =    -2.75625949468408 * H1x1_1  +    -2.04123594690263 * H1x1_2
1173942   +          +     2.55595542456674 * H1x1_3  +     2.41628841604103 * H1x1_4
1173943   +          +      -11.39673341305 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.75625949468408 * H1x1_1 + -2.04123594690263 * H1x1_2 + 
2.55595542456674 * H1x1_3 + 2.41628841604103 * H1x1_4 + -11.39673341305 * H1x1_5 ;
1173944   +   P_DepVar1  =     0.62420945009508 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.62420945009508 + P_DepVar1 ;
1173945   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1173946   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1173947   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1173948   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1173949   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1173950   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1173951   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1173952   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1173953   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1173954   +END;
MPRINT(EM_DIAGRAM):   END;
1173955   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1173956   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1173957   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1173958   +END;
MPRINT(EM_DIAGRAM):   END;
1173959   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1173960   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1173961   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1173962   +END;
MPRINT(EM_DIAGRAM):   END;
1173963   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1173964   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1173965   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1173966   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1173967   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1173968   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1173969   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1173970   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1173971   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1173972   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1173973   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1173974   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1173975   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1173976   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1173977   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1173978   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1173979   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1173980   +END;
MPRINT(EM_DIAGRAM):   END;
1173981   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1173982   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1173983   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1173984   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1173985    run;

NOTE: DATA STEP view saved on file EMWS8.AUTONEURAL27_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.VARSEL_TRAIN.VIEW used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1173986    quit;
1173987    filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
1173988    filename emflow
1173988  ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural27\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural27\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * AutoNeural27: Scoring VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1173989    *------------------------------------------------------------*;
1173990    * AutoNeural27: Scoring VALIDATE data;
1173991    *------------------------------------------------------------*;
1173992    data EMWS8.AutoNeural27_VALIDATE
1173993    / view=EMWS8.AutoNeural27_VALIDATE
1173994    ;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural27_VALIDATE / view=EMWS8.AutoNeural27_VALIDATE ;
1173995    set EMWS8.Varsel_VALIDATE
1173996    ;
MPRINT(EM_DIAGRAM):   set EMWS8.Varsel_VALIDATE ;
1173997    %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural27\EMFLOWSCORE.sas.
1173998   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1173999   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1174000   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1174001   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1174002   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1174003   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1174004   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1174005   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1174006   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1174007   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1174008   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1174009   +LENGTH _WARN_ $4
1174010   +      F_DepVar  $ 12
1174011   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1174012   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1174013   +
1174014   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1174015   +
1174016   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1174017   +
1174018   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1174019   +
1174020   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1174021   +
1174022   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1174023   +
1174024   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1174025   +
1174026   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1174027   +
1174028   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1174029   +
1174030   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1174031   +
1174032   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1174033   +
1174034   +      label G_Marital_Status0 = 'Dummy: G_Marital_Status=0' ;
MPRINT(EM_DIAGRAM):   label G_Marital_Status0 = 'Dummy: G_Marital_Status=0' ;
1174035   +
1174036   +      label G_Marital_Status1 = 'Dummy: G_Marital_Status=1' ;
MPRINT(EM_DIAGRAM):   label G_Marital_Status1 = 'Dummy: G_Marital_Status=1' ;
1174037   +
1174038   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
1174039   +
1174040   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
1174041   +
1174042   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
1174043   +
1174044   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
1174045   +
1174046   +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
1174047   +
1174048   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1174049   +
1174050   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1174051   +
1174052   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1174053   +
1174054   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1174055   +
1174056   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1174057   +
1174058   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1174059   +
1174060   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1174061   +
1174062   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1174063   +
1174064   +*** Generate dummy variables for G_Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for G_Marital_Status ;
1174065   +drop G_Marital_Status0 G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   drop G_Marital_Status0 G_Marital_Status1 ;
1174066   +if missing( G_Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( G_Marital_Status ) then do;
1174067   +   G_Marital_Status0 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = .;
1174068   +   G_Marital_Status1 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = .;
1174069   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1174070   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1174071   +end;
MPRINT(EM_DIAGRAM):   end;
1174072   +else do;
MPRINT(EM_DIAGRAM):   else do;
1174073   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1174074   +   _dm12 = put( G_Marital_Status , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( G_Marital_Status , BEST12. );
1174075   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1174076   +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
1174077   +      G_Marital_Status0 = -1;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = -1;
1174078   +      G_Marital_Status1 = -1;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = -1;
1174079   +   end;
MPRINT(EM_DIAGRAM):   end;
1174080   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1174081   +      G_Marital_Status0 = 1;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = 1;
1174082   +      G_Marital_Status1 = 0;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = 0;
1174083   +   end;
MPRINT(EM_DIAGRAM):   end;
1174084   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1174085   +      G_Marital_Status0 = 0;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = 0;
1174086   +      G_Marital_Status1 = 1;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = 1;
1174087   +   end;
MPRINT(EM_DIAGRAM):   end;
1174088   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1174089   +      G_Marital_Status0 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = .;
1174090   +      G_Marital_Status1 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = .;
1174091   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1174092   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1174093   +   end;
MPRINT(EM_DIAGRAM):   end;
1174094   +end;
MPRINT(EM_DIAGRAM):   end;
1174095   +
1174096   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1174097   +*** Checking missing input Interval
1174098   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1174099   +
1174100   +IF NMISS(
1174101   +   AcceptedCmpTotal ,
1174102   +   Frq ,
1174103   +   Income ,
1174104   +   Mnt ,
1174105   +   MntGoldProds ,
1174106   +   MntMeatProducts ,
1174107   +   MntWines ,
1174108   +   NumDistPurchases ,
1174109   +   RFMstat ,
1174110   +   RMntFrq ,
1174111   +   Recency   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Income , Mnt , MntGoldProds , 
MntMeatProducts , MntWines , NumDistPurchases , RFMstat , RMntFrq , Recency ) THEN DO;
1174112   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1174113   +
1174114   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1174115   +END;
MPRINT(EM_DIAGRAM):   END;
1174116   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1174117   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
1174118   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1174119   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1174120   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1174121   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1174122   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1174123   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1174124   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1174125   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1174126   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1174127   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1174128   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1174129   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1174130   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1174131   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1174132   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1174133   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1174134   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1174135   +END;
MPRINT(EM_DIAGRAM):   END;
1174136   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1174137   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1174138   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1174139   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1174140   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1174141   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1174142   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1174143   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1174144   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1174145   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1174146   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1174147   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1174148   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1174149   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1174150   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1174151   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1174152   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1174153   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1174154   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1174155   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1174156   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1174157   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1174158   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1174159   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1174160   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1174161   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1174162   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1174163   +END;
MPRINT(EM_DIAGRAM):   END;
1174164   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1174165   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
1174166   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1174167   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1174168   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
1174169   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1174170   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1174171   +   H1x1_1  =    -0.18981728384316 * S_AcceptedCmpTotal
1174172   +          +     2.44575265018132 * S_Frq  +    -0.33258639871365 * S_Income
1174173   +          +    -1.51282513201415 * S_Mnt  +     0.06017420606179 *
1174174   +        S_MntGoldProds  +    -0.55274425550395 * S_MntMeatProducts
1174175   +          +     0.91858869924573 * S_MntWines  +    -1.95905223495165 *
1174176   +        S_NumDistPurchases  +     -0.2637023845598 * S_RFMstat
1174177   +          +     1.23283591446263 * S_RMntFrq  +    -0.07916044614039 *
1174178   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.18981728384316 * S_AcceptedCmpTotal + 2.44575265018132 * 
S_Frq + -0.33258639871365 * S_Income + -1.51282513201415 * S_Mnt + 0.06017420606179 * 
S_MntGoldProds + -0.55274425550395 * S_MntMeatProducts + 0.91858869924573 * S_MntWines + 
-1.95905223495165 * S_NumDistPurchases + -0.2637023845598 * S_RFMstat + 1.23283591446263 * 
S_RMntFrq + -0.07916044614039 * S_Recency ;
1174179   +   H1x1_2  =    -0.68309764555121 * S_AcceptedCmpTotal
1174180   +          +     0.14669436656758 * S_Frq  +     0.02315218376279 * S_Income
1174181   +          +    -4.21583355142014 * S_Mnt  +     0.19199314585125 *
1174182   +        S_MntGoldProds  +     2.55483645032568 * S_MntMeatProducts
1174183   +          +     0.82054382378306 * S_MntWines  +     0.29968014910707 *
1174184   +        S_NumDistPurchases  +     0.60687719454304 * S_RFMstat
1174185   +          +     0.83498030971653 * S_RMntFrq  +     0.50801279856495 *
1174186   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.68309764555121 * S_AcceptedCmpTotal + 0.14669436656758 * 
S_Frq + 0.02315218376279 * S_Income + -4.21583355142014 * S_Mnt + 0.19199314585125 * 
S_MntGoldProds + 2.55483645032568 * S_MntMeatProducts + 0.82054382378306 * S_MntWines + 
0.29968014910707 * S_NumDistPurchases + 0.60687719454304 * S_RFMstat + 0.83498030971653 * 
S_RMntFrq + 0.50801279856495 * S_Recency ;
1174187   +   H1x1_3  =     0.08829866742968 * S_AcceptedCmpTotal
1174188   +          +    -0.02323769496851 * S_Frq  +    -0.99617629114101 * S_Income
1174189   +          +    -4.64282306384023 * S_Mnt  +     0.04308696038528 *
1174190   +        S_MntGoldProds  +     2.31863620360623 * S_MntMeatProducts
1174191   +          +     0.16587338267425 * S_MntWines  +     1.02973533097984 *
1174192   +        S_NumDistPurchases  +     0.20343196580651 * S_RFMstat
1174193   +          +     0.94726928092138 * S_RMntFrq  +     0.03712585159749 *
1174194   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.08829866742968 * S_AcceptedCmpTotal + -0.02323769496851 * 
S_Frq + -0.99617629114101 * S_Income + -4.64282306384023 * S_Mnt + 0.04308696038528 * 
S_MntGoldProds + 2.31863620360623 * S_MntMeatProducts + 0.16587338267425 * S_MntWines + 
1.02973533097984 * S_NumDistPurchases + 0.20343196580651 * S_RFMstat + 0.94726928092138 * 
S_RMntFrq + 0.03712585159749 * S_Recency ;
1174195   +   H1x1_4  =     0.10061099283455 * S_AcceptedCmpTotal
1174196   +          +     1.72752905329456 * S_Frq  +    -0.50472344084228 * S_Income
1174197   +          +     1.07329017540495 * S_Mnt  +    -0.44517902573644 *
1174198   +        S_MntGoldProds  +    -1.57417593135497 * S_MntMeatProducts
1174199   +          +    -0.75359748699668 * S_MntWines  +    -1.09387259425684 *
1174200   +        S_NumDistPurchases  +    -0.81518874000435 * S_RFMstat
1174201   +          +     0.23368643717628 * S_RMntFrq  +    -0.30240544347672 *
1174202   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.10061099283455 * S_AcceptedCmpTotal + 1.72752905329456 * 
S_Frq + -0.50472344084228 * S_Income + 1.07329017540495 * S_Mnt + -0.44517902573644 * 
S_MntGoldProds + -1.57417593135497 * S_MntMeatProducts + -0.75359748699668 * S_MntWines + 
-1.09387259425684 * S_NumDistPurchases + -0.81518874000435 * S_RFMstat + 0.23368643717628 * 
S_RMntFrq + -0.30240544347672 * S_Recency ;
1174203   +   H1x1_5  =    -0.22817314877708 * S_AcceptedCmpTotal
1174204   +          +     0.28118539965414 * S_Frq  +     0.04846488460495 * S_Income
1174205   +          +     0.60106863054811 * S_Mnt  +    -0.06162179557217 *
1174206   +        S_MntGoldProds  +    -0.39180490439507 * S_MntMeatProducts
1174207   +          +    -0.21017068084579 * S_MntWines  +    -0.32161828113396 *
1174208   +        S_NumDistPurchases  +    -0.03465088483344 * S_RFMstat
1174209   +          +    -0.03147262277696 * S_RMntFrq  +     0.34128240879899 *
1174210   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -0.22817314877708 * S_AcceptedCmpTotal + 0.28118539965414 * 
S_Frq + 0.04846488460495 * S_Income + 0.60106863054811 * S_Mnt + -0.06162179557217 * 
S_MntGoldProds + -0.39180490439507 * S_MntMeatProducts + -0.21017068084579 * S_MntWines + 
-0.32161828113396 * S_NumDistPurchases + -0.03465088483344 * S_RFMstat + -0.03147262277696 * 
S_RMntFrq + 0.34128240879899 * S_Recency ;
1174211   +   H1x1_1  = H1x1_1  +     0.15249883445815 * G_Marital_Status0
1174212   +          +    -0.18818735950093 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.15249883445815 * G_Marital_Status0 + 
-0.18818735950093 * G_Marital_Status1 ;
1174213   +   H1x1_2  = H1x1_2  +     1.59824663671134 * G_Marital_Status0
1174214   +          +     1.96669325047054 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 1.59824663671134 * G_Marital_Status0 + 
1.96669325047054 * G_Marital_Status1 ;
1174215   +   H1x1_3  = H1x1_3  +    -0.31220761109652 * G_Marital_Status0
1174216   +          +     0.52212878383819 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.31220761109652 * G_Marital_Status0 + 
0.52212878383819 * G_Marital_Status1 ;
1174217   +   H1x1_4  = H1x1_4  +    -1.92906338619158 * G_Marital_Status0
1174218   +          +    -1.25145208260948 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -1.92906338619158 * G_Marital_Status0 + 
-1.25145208260948 * G_Marital_Status1 ;
1174219   +   H1x1_5  = H1x1_5  +    -0.18067263072436 * G_Marital_Status0
1174220   +          +    -0.07780771416761 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.18067263072436 * G_Marital_Status0 + 
-0.07780771416761 * G_Marital_Status1 ;
1174221   +   H1x1_1  =     1.46324697396327 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.46324697396327 + H1x1_1 ;
1174222   +   H1x1_2  =     1.36794472927517 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.36794472927517 + H1x1_2 ;
1174223   +   H1x1_3  =    -0.57612320445046 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.57612320445046 + H1x1_3 ;
1174224   +   H1x1_4  =    -1.53805674056235 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -1.53805674056235 + H1x1_4 ;
1174225   +   H1x1_5  =     0.35787040000513 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 0.35787040000513 + H1x1_5 ;
1174226   +   H1x1_1  = SIN(H1x1_1 );
MPRINT(EM_DIAGRAM):   H1x1_1 = SIN(H1x1_1 );
1174227   +   H1x1_2  = SIN(H1x1_2 );
MPRINT(EM_DIAGRAM):   H1x1_2 = SIN(H1x1_2 );
1174228   +   H1x1_3  = SIN(H1x1_3 );
MPRINT(EM_DIAGRAM):   H1x1_3 = SIN(H1x1_3 );
1174229   +   H1x1_4  = SIN(H1x1_4 );
MPRINT(EM_DIAGRAM):   H1x1_4 = SIN(H1x1_4 );
1174230   +   H1x1_5  = SIN(H1x1_5 );
MPRINT(EM_DIAGRAM):   H1x1_5 = SIN(H1x1_5 );
1174231   +END;
MPRINT(EM_DIAGRAM):   END;
1174232   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1174233   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
1174234   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
1174235   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
1174236   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
1174237   +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
1174238   +END;
MPRINT(EM_DIAGRAM):   END;
1174239   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1174240   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1174241   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1174242   +
1174243   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1174244   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1174245   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1174246   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1174247   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1174248   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1174249   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1174250   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1174251   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1174252   +end;
MPRINT(EM_DIAGRAM):   end;
1174253   +else do;
MPRINT(EM_DIAGRAM):   else do;
1174254   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1174255   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1174256   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1174257   +   end;
MPRINT(EM_DIAGRAM):   end;
1174258   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1174259   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1174260   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1174261   +   end;
MPRINT(EM_DIAGRAM):   end;
1174262   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1174263   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1174264   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1174265   +   end;
MPRINT(EM_DIAGRAM):   end;
1174266   +end;
MPRINT(EM_DIAGRAM):   end;
1174267   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1174268   +   P_DepVar1  =    -2.75625949468408 * H1x1_1  +    -2.04123594690263 * H1x1_2
1174269   +          +     2.55595542456674 * H1x1_3  +     2.41628841604103 * H1x1_4
1174270   +          +      -11.39673341305 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.75625949468408 * H1x1_1 + -2.04123594690263 * H1x1_2 + 
2.55595542456674 * H1x1_3 + 2.41628841604103 * H1x1_4 + -11.39673341305 * H1x1_5 ;
1174271   +   P_DepVar1  =     0.62420945009508 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.62420945009508 + P_DepVar1 ;
1174272   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1174273   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1174274   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1174275   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1174276   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1174277   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1174278   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1174279   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1174280   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1174281   +END;
MPRINT(EM_DIAGRAM):   END;
1174282   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1174283   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1174284   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1174285   +END;
MPRINT(EM_DIAGRAM):   END;
1174286   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1174287   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1174288   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1174289   +END;
MPRINT(EM_DIAGRAM):   END;
1174290   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1174291   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1174292   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1174293   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1174294   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1174295   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1174296   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1174297   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1174298   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1174299   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1174300   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1174301   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1174302   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1174303   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1174304   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1174305   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1174306   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1174307   +END;
MPRINT(EM_DIAGRAM):   END;
1174308   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1174309   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1174310   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1174311   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1174312    run;

NOTE: DATA STEP view saved on file EMWS8.AUTONEURAL27_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.VARSEL_VALIDATE.VIEW used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1174313    quit;
1174314    filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
1174315    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
1174316    * AutoNeural27: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * AutoNeural27: Computing metadata for TRAIN data;
1174317    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;

NOTE: View EMWS8.AUTONEURAL27_TRAIN.VIEW used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural27\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS8.AutoNeural27_TRAIN out=_tempAdvisor 
noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS8.AutoNeural27_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS8.AutoNeural27_TRAIN out=WORK.M21CV8EW 
noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M21CV8EW;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20 
INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M21CV8EW(keep=name type length label format formatl 
formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then format = strip(format)!!strip(put(formatl, 
best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, 
best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then informat = 
strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, 
best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M21CV8EW;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M21CV8EW;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M0RY_TL_ NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0RY_TL_;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M0RY_TL_;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M00MORCE(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M0RY_TL_;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0RY_TL_;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 
FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M0RY_TL_;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" 
"MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" 
"QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" "YEAR" "YYMMDD" "YYMON" 
"YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" 
"EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) 
formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = 
"DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) 
formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" 
"NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" 
"SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = 
"DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then 
level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 
'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 
'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ 
('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 
'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 
'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0RY_TL_;
MPRINT(EMADVISECOLUMNS):   set WORK.M0RY_TL_;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= 
"Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= 
"Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower limit" UPPERLIMIT= 
"Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= 
"Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Varsel_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Varsel_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural27_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT 
LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "AutoNeural27";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("P_DEPVAR1") creator = "AutoNeural27";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR1") creator = "AutoNeural27";
MPRINT(EM_DIAGRAM):   when("P_DEPVAR0") creator = "AutoNeural27";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR0") creator = "AutoNeural27";
MPRINT(EM_DIAGRAM):   when("F_DEPVAR") creator = "AutoNeural27";
MPRINT(EM_DIAGRAM):   when("I_DEPVAR") creator = "AutoNeural27";
MPRINT(EM_DIAGRAM):   when("U_DEPVAR") creator = "AutoNeural27";
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "AutoNeural27";
MPRINT(EM_DIAGRAM):   when("DEPVAR") model = "AutoNeural27";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * AutoNeural27: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
1174629    data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
1174630    set EMWS8.AutoNeural27_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural27_EMINFO;
1174631    where DATA='AutoNeural27' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='AutoNeural27' and KEY ^in('DECDATA', 'DECMETA', 
'IMPORTANCE', 'MODEL');
1174632    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.AUTONEURAL27_EMINFO.
      WHERE (DATA='AutoNeural27') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1174633    data EMWS8.AutoNeural27_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural27_EMINFO;
1174634    length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
1174635    input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
1174636    cards;
MPRINT(EM_DIAGRAM):   cards;

NOTE: The data set EMWS8.AUTONEURAL27_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   run;
1174640    run;
1174641    data EMWS8.AutoNeural27_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural27_EMINFO;
1174642    set EMWS8.AutoNeural27_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural27_EMINFO WORK.MODELTEMP_INFO;
1174643    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.AUTONEURAL27_EMINFO.
NOTE: There were 0 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS8.AUTONEURAL27_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1174644    proc sort data = EMWS8.AutoNeural27_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.AutoNeural27_EMINFO NOTHREADS;
1174645    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
1174646    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.AUTONEURAL27_EMINFO.
NOTE: The data set EMWS8.AUTONEURAL27_EMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1174647    proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
1174648    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
1174649    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set EMWS8.FIMPORT_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 1 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1174650    proc sort data = EMWS8.AutoNeural27_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS8.AutoNeural27_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
1174651    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
1174652    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 3 observations read from the data set EMWS8.AUTONEURAL27_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1174653    data EMWS8.AutoNeural27_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural27_EMINFO;
1174654    merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
1174655    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
1174656    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 3 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS8.AUTONEURAL27_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1174657    proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
1174658    delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
1174659    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
1174660    quit;
MPRINT(EM_DIAGRAM):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

NOTE: View EMWS8.AUTONEURAL27_TRAIN.VIEW used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      
NOTE: View EMWS8.AUTONEURAL27_VALIDATE.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
